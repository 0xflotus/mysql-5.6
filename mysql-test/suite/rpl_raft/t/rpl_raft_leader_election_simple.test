source ../include/raft_3_node.inc;

connection server1;
let $uuid1= `select variable_value from information_schema.global_status where variable_name = 'Rpl_raft_peer_uuid'`;
connection server2;
let $uuid2= `select variable_value from information_schema.global_status where variable_name = 'Rpl_raft_peer_uuid'`;
connection server3;
let $uuid3= `select variable_value from information_schema.global_status where variable_name = 'Rpl_raft_peer_uuid'`;

echo "server1 is the initial leader";
connection server1;
select variable_value from information_schema.global_status where variable_name = 'Rpl_raft_role';

echo "Stopping slave applier on all peers";
connection server1;
stop slave sql_thread;
connection server2;
stop slave sql_thread;
connection server3;
stop slave sql_thread;

echo "Writing data on leader";
connection server1;
create table t1 (a int primary key auto_increment) engine = innodb;
insert into t1 values();

echo "Transfering leadership: server1 -> server2";
connection server1;
replace_result $uuid2 uuid2;
eval set @@global.rpl_raft_new_leader_uuid = '$uuid2';
connection server2;
select variable_value from information_schema.global_status where variable_name = 'Rpl_raft_role';
echo "server2 should have all the data after leader election";
# TODO: remove this wait after TransferLeadership() is fixed to wait for ElectionDecisionCallback to complete on the new master
let $wait_condition= select @@global.read_only = 0;
source include/wait_condition.inc;
select * from t1;

echo "Stopping slave applier on all peers";
connection server1;
stop slave sql_thread;
connection server2;
stop slave sql_thread;
connection server3;
stop slave sql_thread;

echo "Writing data on leader";
connection server2;
insert into t1 values();

echo "Transfering leadership: server2 -> server3";
connection server2;
replace_result $uuid3 uuid3;
eval set @@global.rpl_raft_new_leader_uuid = '$uuid3';
connection server3;
select variable_value from information_schema.global_status where variable_name = 'Rpl_raft_role';
echo "server3 should have all the data after leader election";
let $wait_condition= select @@global.read_only = 0;
source include/wait_condition.inc;
select * from t1;

echo "Stopping slave applier on all peers";
connection server1;
stop slave sql_thread;
connection server2;
stop slave sql_thread;
connection server3;
stop slave sql_thread;

echo "Writing data on leader";
connection server3;
insert into t1 values();

echo "Transfering leadership: server3 -> server1";
connection server3;
replace_result $uuid1 uuid1;
eval set @@global.rpl_raft_new_leader_uuid = '$uuid1';
connection server1;
select variable_value from information_schema.global_status where variable_name = 'Rpl_raft_role';
echo "server1 should have all the data after leader election";
let $wait_condition= select @@global.read_only = 0;
source include/wait_condition.inc;
select * from t1;

# Cleanup
connection server1;
drop table t1;

let $sync_slave_connection= server2;
source include/sync_slave_sql_with_master.inc;
let $sync_slave_connection= server3;
source include/sync_slave_sql_with_master.inc;

source include/rpl_end.inc;
