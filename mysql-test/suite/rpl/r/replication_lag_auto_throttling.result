include/master-slave.inc
Warnings:
Note	####	Sending passwords in plain text without SSL/TLS is extremely insecure.
Note	####	Storing MySQL user name or password information in the master info repository is not secure and is therefore not recommended. Please consider using the USER and PASSWORD connection options for START SLAVE; see the 'START SLAVE Syntax' in the MySQL Manual for more information.
[connection master]
SET @@GLOBAL.WRITE_STATS_FREQUENCY=2;
SET @@GLOBAL.SQL_STATS_CONTROL="ON";
SET @@GLOBAL.WRITE_STATS_COUNT=10;
SET @@GLOBAL.WRITE_AUTO_THROTTLE_FREQUENCY=2;
SET @@GLOBAL.WRITE_STATS_FREQUENCY=2;
SET @@GLOBAL.WRITE_THROTTLE_LAG_PCT_MIN_SECONDARIES=10;
SET @@GLOBAL.WRITE_START_THROTTLE_LAG_MILLISECONDS=3000;
SET @@GLOBAL.WRITE_STOP_THROTTLE_LAG_MILLISECONDS=1000;
SET @@GLOBAL.WRITE_THROTTLE_MIN_RATIO=1.5;
SET @@GLOBAL.WRITE_THROTTLE_MONITOR_CYCLES=1;
SET @@GLOBAL.WRITE_CONTROL_LEVEL=WARN;
create table t(a int) engine=innodb;
####################################################
### Test 1: Auto throttle start & stop based on sql_id
####################################################
insert into t values(1);
insert into t values(2);
delete from t where a = 2;
select type, value, write_data_bytes from information_schema.write_statistics where timestamp = (select max(timestamp) from information_schema.write_statistics);
type	value	write_data_bytes
USER	root	108
CLIENT	99914b932bd37a50b983c5e7c90ae93b	108
SHARD	test	108
SQL_ID	a3d2026fd042f986be63d9d3e0e38c75	36
SQL_ID	de6411b09eac2fe8ba68407c706888ea	72
set @@global.debug= '+d,dbug.simulate_lag_above_start_throttle_threshold';
####### Next Cycle #######
### Expectation - There is replication lag. The system should identity insert query sql_id as the culprit and start monitoring it ###
select sleep(2);
sleep(2)
0
insert into t values(2);
insert into t values(2);
delete from t where a = 2;
select type, value from information_schema.write_throttling_rules where mode = 'AUTO';
type	value
select error_code, error_name, errors_total from information_schema.ERROR_STATISTICS where error_code = 50092;
error_code	error_name	errors_total
####### Next Cycle #######
### Expectation - Replication lag still persists, Insert query sql_id should be throttled. Expect warnings. ###
select sleep(2);
sleep(2)
0
insert into t values(2);
select type, value from information_schema.write_throttling_rules where mode = 'AUTO';
type	value
SQL_ID	de6411b09eac2fe8ba68407c706888ea
select error_code, error_name, errors_total from information_schema.ERROR_STATISTICS where error_code = 50092;
error_code	error_name	errors_total
50092	ER_WRITE_QUERY_THROTTLED	1
select count from information_schema.write_throttling_log where type = 'SQL_ID' and mode = 'AUTO';
count
1
####### Next Cycle #######
### Expectation - Replication lag between start and end threshold, Expect warning for every insert query. ###
select sleep(2);
sleep(2)
0
set @@global.debug= '-d,dbug.simulate_lag_above_start_throttle_threshold';
set @@global.debug= '+d,dbug.simulate_lag_between_start_end_throttle_threshold';
insert into t values(2);
select error_code, error_name, errors_total from information_schema.ERROR_STATISTICS where error_code = 50092;
error_code	error_name	errors_total
50092	ER_WRITE_QUERY_THROTTLED	2
select count from information_schema.write_throttling_log where type = 'SQL_ID' and mode = 'AUTO';
count
2
####### Next Cycle #######
### Expectation - Replication lag goes away, Insert query should not be throttled anymore. Expect warnings count to not increase anymore. ###
select sleep(2);
sleep(2)
0
set @@global.debug= '-d,dbug.simulate_lag_between_start_end_throttle_threshold';
set @@global.debug= '+d,dbug.simulate_lag_below_end_throttle_threshold';
insert into t values(2);
select error_code, error_name, errors_total from information_schema.ERROR_STATISTICS where error_code = 50092;
error_code	error_name	errors_total
50092	ER_WRITE_QUERY_THROTTLED	2
select count from information_schema.write_throttling_log where type = 'SQL_ID' and mode = 'AUTO';
count
2
####### Reset #######
TRUNCATE t;
SET @@GLOBAL.WRITE_STATS_COUNT=0;
SET @@GLOBAL.WRITE_THROTTLE_PATTERNS='OFF';
flush statistics;
set @@global.debug= '-d,dbug.simulate_lag_below_end_throttle_threshold';
####################################################
### Test 2: Auto throttle start & stop based on shard
####################################################
SET @@GLOBAL.WRITE_STATS_COUNT=10;
create database test1;
create table test1.t(a int) engine=innodb;
insert into test.t values(2);
delete from test.t where a = 2;
insert into test1.t values(2);
delete from test1.t where a = 2;
set @@global.debug= '+d,dbug.simulate_lag_above_start_throttle_threshold';
select type, value, write_data_bytes from information_schema.write_statistics where timestamp = (select max(timestamp) from information_schema.write_statistics);
type	value	write_data_bytes
USER	root	144
CLIENT	99914b932bd37a50b983c5e7c90ae93b	144
SHARD	test	144
SQL_ID	f8b72afb7243baa2ebf74c9d02804b4b	36
SQL_ID	9621f9a4df741c41a69f9452ba1a8661	36
SQL_ID	ff16d6e1bbe87da5758c240ed7ecba3a	36
SQL_ID	8509ed41ca3b156cb78ead46a395d37e	36
####### Next Cycle #######
### Expectation - There is replication lag. The system should identity shard 'test' as the culprit since there is no conclusive sql_id culprit. Should start monitoring 'test' shard ###
select sleep(2);
sleep(2)
0
insert into test1.t values(2);
delete from test1.t where a = 2;
select type, value from information_schema.write_throttling_rules where mode = 'AUTO';
type	value
select error_code, error_name, errors_total from information_schema.ERROR_STATISTICS where error_code = 50092;
error_code	error_name	errors_total
####### Next Cycle #######
### Expectation - Replication lag still persists, Shard 'test' should be throttled. Expect warnings. ###
select sleep(2);
sleep(2)
0
insert into test1.t values(2);
select type, value from information_schema.write_throttling_rules where mode = 'AUTO';
type	value
SHARD	test
select error_code, error_name, errors_total from information_schema.ERROR_STATISTICS where error_code = 50092;
error_code	error_name	errors_total
50092	ER_WRITE_QUERY_THROTTLED	1
select count from information_schema.write_throttling_log where type = 'SHARD' and mode = 'AUTO';
count
1
####### Next Cycle #######
### Expectation - Replication lag goes away, Shard 'test' should not be throttled anymore. Expect warnings count to not increase anymore. ###
select sleep(2);
sleep(2)
0
set @@global.debug= '-d,dbug.simulate_lag_above_start_throttle_threshold';
set @@global.debug= '+d,dbug.simulate_lag_below_end_throttle_threshold';
insert into test1.t values(2);
select error_code, error_name, errors_total from information_schema.ERROR_STATISTICS where error_code = 50092;
error_code	error_name	errors_total
50092	ER_WRITE_QUERY_THROTTLED	1
select count from information_schema.write_throttling_log where type = 'SHARD' and mode = 'AUTO';
count
1
####### Reset #######
TRUNCATE test.t;
SET @@GLOBAL.WRITE_STATS_COUNT=0;
SET @@GLOBAL.WRITE_THROTTLE_PATTERNS='OFF';
drop database test1;
flush statistics;
set @@global.debug= '-d,dbug.simulate_lag_below_end_throttle_threshold';
####################################################
### Test 3: Auto throttle fallback sql id in case of no 
### conclusive culprit
####################################################
SET @@GLOBAL.WRITE_STATS_COUNT=10;
SET @@GLOBAL.WRITE_THROTTLE_MIN_RATIO=3;
create database test1;
create table test1.t(a int) engine=innodb;
insert into test.t values(2);
insert into test.t values(2);
delete from test.t where a = 2;
insert into test1.t values(2);
delete from test1.t where a = 2;
set @@global.debug= '+d,dbug.simulate_lag_above_start_throttle_threshold';
select type, value, write_data_bytes from information_schema.write_statistics where timestamp = (select max(timestamp) from information_schema.write_statistics);
type	value	write_data_bytes
USER	root	185
CLIENT	99914b932bd37a50b983c5e7c90ae93b	185
SHARD	test	185
SQL_ID	f8b72afb7243baa2ebf74c9d02804b4b	36
SQL_ID	9621f9a4df741c41a69f9452ba1a8661	36
SQL_ID	ff16d6e1bbe87da5758c240ed7ecba3a	72
SQL_ID	8509ed41ca3b156cb78ead46a395d37e	41
set @@global.debug= '+d,dbug.simulate_fallback_sql_throttling';
####### Next Cycle #######
### Expectation - There is replication lag. As per the setup, the system should fallback to monitoring the top sql_id(insert query) with most bytes written. ###
select sleep(2);
sleep(2)
0
insert into test.t values(2);
insert into test.t values(2);
delete from test.t where a = 2;
select type, value, write_data_bytes from information_schema.write_statistics where timestamp = (select max(timestamp) from information_schema.write_statistics);
type	value	write_data_bytes
USER	root	113
CLIENT	99914b932bd37a50b983c5e7c90ae93b	113
SHARD	test	113
SQL_ID	8509ed41ca3b156cb78ead46a395d37e	41
SQL_ID	ff16d6e1bbe87da5758c240ed7ecba3a	72
select type, value from information_schema.write_throttling_rules where mode = 'AUTO';
type	value
select error_code, error_name, errors_total from information_schema.ERROR_STATISTICS where error_code = 50092;
error_code	error_name	errors_total
####### Next Cycle #######
### Expectation - Replication lag still persists, Insert query sql_id should be throttled. Expect warnings. ###
select sleep(2);
sleep(2)
0
insert into test.t values(2);
select type, value from information_schema.write_throttling_rules where mode = 'AUTO';
type	value
SQL_ID	ff16d6e1bbe87da5758c240ed7ecba3a
select error_code, error_name, errors_total from information_schema.ERROR_STATISTICS where error_code = 50092;
error_code	error_name	errors_total
50092	ER_WRITE_QUERY_THROTTLED	1
####### Next Cycle #######
### Expectation - Replication lag goes away, Insert query sql_id should not be throttled anymore. Expect warnings count to not increase anymore. ###
select sleep(2);
sleep(2)
0
set @@global.debug= '-d,dbug.simulate_lag_above_start_throttle_threshold';
set @@global.debug= '+d,dbug.simulate_lag_below_end_throttle_threshold';
insert into test.t values(2);
select error_code, error_name, errors_total from information_schema.ERROR_STATISTICS where error_code = 50092;
error_code	error_name	errors_total
50092	ER_WRITE_QUERY_THROTTLED	1
####### Reset #######
TRUNCATE test.t;
SET @@GLOBAL.WRITE_STATS_COUNT=0;
SET @@GLOBAL.WRITE_THROTTLE_PATTERNS='OFF';
SET @@GLOBAL.WRITE_THROTTLE_MIN_RATIO=1.5;
drop database test1;
flush statistics;
set @@global.debug= '-d,dbug.simulate_lag_below_end_throttle_threshold';
set @@global.debug= '-d,dbug.simulate_fallback_sql_throttling';
####################################################
### Test 4: Auto throttle multiple sql_ids and releasing
### them in order one by one after replication lag goes away
####################################################
SET @@GLOBAL.WRITE_STATS_COUNT=10;
SET @@GLOBAL.WRITE_THROTTLE_MONITOR_CYCLES=0;
insert into t values(1);
insert into t values(2);
insert into t values(3);
insert into t values(4);
delete from t where a = 1;
delete from t where a = 2;
update t set a = 1 where a = 3;
update t set a = 2 where a = 4;
select type, value, write_data_bytes from information_schema.write_statistics where timestamp = (select max(timestamp) from information_schema.write_statistics);
type	value	write_data_bytes
USER	root	300
CLIENT	99914b932bd37a50b983c5e7c90ae93b	300
SHARD	test	300
SQL_ID	b91f66d829187bd824d34ee9544a97ac	84
SQL_ID	de6411b09eac2fe8ba68407c706888ea	144
SQL_ID	a3d2026fd042f986be63d9d3e0e38c75	72
set @@global.debug= '+d,dbug.simulate_lag_above_start_throttle_threshold';
####### Next Cycle #######
### Expectation - There is replication lag. The system should identify insert query sql_id as the culprit and start throttling it. ###
select sleep(2);
sleep(2)
0
insert into t values(3);
update t set a = 4 where a = 3;
delete from t where a = 1;
delete from t where a = 2;
select type, value from information_schema.write_throttling_rules where mode = 'AUTO';
type	value
SQL_ID	de6411b09eac2fe8ba68407c706888ea
select error_code, error_name, errors_total from information_schema.ERROR_STATISTICS where error_code = 50092;
error_code	error_name	errors_total
50092	ER_WRITE_QUERY_THROTTLED	1
####### Next Cycle #######
### Expectation - Replication lag still persists. The system should identify delete query sql_id as the culprit and start throttling it as well. ###
select sleep(2);
sleep(2)
0
insert into t values(3);
delete from t where a = 4;
select type, value from information_schema.write_throttling_rules where mode = 'AUTO';
type	value
SQL_ID	a3d2026fd042f986be63d9d3e0e38c75
SQL_ID	de6411b09eac2fe8ba68407c706888ea
select error_code, error_name, errors_total from information_schema.ERROR_STATISTICS where error_code = 50092;
error_code	error_name	errors_total
50092	ER_WRITE_QUERY_THROTTLED	3
####### Next Cycle #######
### Expectation - Replication lag goes away. The system should stop throttling insert query but still throttle delete query. Expect warnings from delete queries ###
select sleep(2);
sleep(2)
0
set @@global.debug= '-d,dbug.simulate_lag_above_start_throttle_threshold';
set @@global.debug= '+d,dbug.simulate_lag_below_end_throttle_threshold';
insert into t values(4);
delete from t where a = 3;
select type, value from information_schema.write_throttling_rules where mode = 'AUTO';
type	value
SQL_ID	a3d2026fd042f986be63d9d3e0e38c75
select error_code, error_name, errors_total from information_schema.ERROR_STATISTICS where error_code = 50092;
error_code	error_name	errors_total
50092	ER_WRITE_QUERY_THROTTLED	4
####### Next Cycle #######
### Expectation - Replication lag goes away. The system should release the delete query now and stop throttling it. Expect warnings count to not increase ###
select sleep(2);
sleep(2)
0
insert into t values(5);
delete from t where a = 4;
select type, value from information_schema.write_throttling_rules where mode = 'AUTO';
type	value
select error_code, error_name, errors_total from information_schema.ERROR_STATISTICS where error_code = 50092;
error_code	error_name	errors_total
50092	ER_WRITE_QUERY_THROTTLED	4
####### Reset #######
TRUNCATE t;
SET @@GLOBAL.WRITE_STATS_COUNT=0;
SET @@GLOBAL.WRITE_THROTTLE_PATTERNS='OFF';
SET @@GLOBAL.WRITE_THROTTLE_MONITOR_CYCLES=1;
flush statistics;
set @@global.debug= '-d,dbug.simulate_lag_below_end_throttle_threshold';
####################################################
### Test 5: Monitored entities are dynamically updated if 
### a new potential culprit is found
####################################################
SET @@GLOBAL.WRITE_STATS_COUNT=10;
SET @@GLOBAL.WRITE_THROTTLE_MONITOR_CYCLES=1;
insert into t values(1);
insert into t values(2);
insert into t values(3);
insert into t values(4);
insert into t values(5);
insert into t values(6);
insert into t values(7);
delete from t where a = 6;
delete from t where a = 7;
select type, value from information_schema.write_throttling_rules where mode = 'AUTO';
type	value
select type, value, write_data_bytes from information_schema.write_statistics where timestamp = (select max(timestamp) from information_schema.write_statistics);
type	value	write_data_bytes
USER	root	324
CLIENT	99914b932bd37a50b983c5e7c90ae93b	324
SHARD	test	324
SQL_ID	a3d2026fd042f986be63d9d3e0e38c75	72
SQL_ID	de6411b09eac2fe8ba68407c706888ea	252
####### Next Cycle #######
### Expectation - There is replication lag. The system should identify insert query sql_id as the culprit and start monitoring it. ###
select sleep(2);
sleep(2)
0
set @@global.debug= '+d,dbug.simulate_lag_above_start_throttle_threshold';
insert into t values(6);
delete from t where a = 1;
delete from t where a = 2;
delete from t where a = 3;
select type, value from information_schema.write_throttling_rules where mode = 'AUTO';
type	value
select type, value, write_data_bytes from information_schema.write_statistics where timestamp = (select max(timestamp) from information_schema.write_statistics);
type	value	write_data_bytes
USER	root	144
CLIENT	99914b932bd37a50b983c5e7c90ae93b	144
SHARD	test	144
SQL_ID	a3d2026fd042f986be63d9d3e0e38c75	108
SQL_ID	de6411b09eac2fe8ba68407c706888ea	36
####### Next Cycle #######
### Expectation - Replication lag still persists but in the last cycle the system should identify delete query as the culprit and update the sql_id to be monitored. Should not throttle it yet. ###
select sleep(2);
sleep(2)
0
insert into t values(6);
delete from t where a = 4;
delete from t where a = 5;
delete from t where a = 6;
select type, value from information_schema.write_throttling_rules where mode = 'AUTO';
type	value
select type, value, write_data_bytes from information_schema.write_statistics where timestamp = (select max(timestamp) from information_schema.write_statistics);
type	value	write_data_bytes
USER	root	149
CLIENT	99914b932bd37a50b983c5e7c90ae93b	149
SHARD	test	149
SQL_ID	a3d2026fd042f986be63d9d3e0e38c75	113
SQL_ID	de6411b09eac2fe8ba68407c706888ea	36
select error_code, error_name, errors_total from information_schema.ERROR_STATISTICS where error_code = 50092;
error_code	error_name	errors_total
####### Next Cycle #######
### Expectation - Replication lag still persists. The system should identify delete query as the culprit and throttle it. Expect warnings. ###
select sleep(2);
sleep(2)
0
insert into t values(1);
delete from t where a = 1;
select type, value from information_schema.write_throttling_rules where mode = 'AUTO';
type	value
SQL_ID	a3d2026fd042f986be63d9d3e0e38c75
select type, value, write_data_bytes from information_schema.write_statistics where timestamp = (select max(timestamp) from information_schema.write_statistics);
type	value	write_data_bytes
USER	root	72
CLIENT	99914b932bd37a50b983c5e7c90ae93b	72
SHARD	test	72
SQL_ID	a3d2026fd042f986be63d9d3e0e38c75	36
SQL_ID	de6411b09eac2fe8ba68407c706888ea	36
select error_code, error_name, errors_total from information_schema.ERROR_STATISTICS where error_code = 50092;
error_code	error_name	errors_total
50092	ER_WRITE_QUERY_THROTTLED	1
####### Reset #######
TRUNCATE t;
SET @@GLOBAL.WRITE_STATS_COUNT=0;
SET @@GLOBAL.WRITE_THROTTLE_PATTERNS='OFF';
flush statistics;
set @@global.debug= '-d,dbug.simulate_lag_above_start_throttle_threshold';
####################################################
### Test 6: Auto throttle start & stop based on client
####################################################
SET @@GLOBAL.WRITE_STATS_COUNT=10;
SET @@GLOBAL.WRITE_THROTTLE_MONITOR_CYCLES=0;
create database test1;
create table test1.t(a int) engine=innodb;
insert into test.t values(2);
delete from test.t where a = 2;
use test1;
insert into test1.t values(2);
delete from test1.t where a = 2;
select type, value, write_data_bytes from information_schema.write_statistics where timestamp = (select max(timestamp) from information_schema.write_statistics);
type	value	write_data_bytes
USER	root	144
CLIENT	99914b932bd37a50b983c5e7c90ae93b	144
SHARD	test1	72
SHARD	test	72
SQL_ID	f8b72afb7243baa2ebf74c9d02804b4b	36
SQL_ID	9621f9a4df741c41a69f9452ba1a8661	36
SQL_ID	ff16d6e1bbe87da5758c240ed7ecba3a	36
SQL_ID	8509ed41ca3b156cb78ead46a395d37e	36
####### Next Cycle #######
### Expectation - There is replication lag. Based on the write stats, there is no clear sql_id or shard as the culprit. Should identify client_id as the culprit and throttle it. ###
select sleep(2);
sleep(2)
0
set @@global.debug= '+d,dbug.simulate_lag_above_start_throttle_threshold';
insert into test1.t values(2);
delete from test1.t where a = 2;
insert into test.t values(2);
delete from test1.t where a = 2;
select type, value from information_schema.write_throttling_rules where mode = 'AUTO';
type	value
CLIENT	99914b932bd37a50b983c5e7c90ae93b
select error_code, error_name, errors_total from information_schema.ERROR_STATISTICS where error_code = 50092;
error_code	error_name	errors_total
50092	ER_WRITE_QUERY_THROTTLED	4
####### Reset #######
use test;
TRUNCATE test.t;
SET @@GLOBAL.WRITE_STATS_COUNT=0;
SET @@GLOBAL.WRITE_THROTTLE_PATTERNS='OFF';
SET @@GLOBAL.WRITE_THROTTLE_MONITOR_CYCLES=1;
drop database test1;
flush statistics;
set @@global.debug= '-d,dbug.simulate_lag_above_start_throttle_threshold';
####################################################
### Test 7: No throttling if WRITE_AUTO_THROTTLE_FREQUENCY = 0
####################################################
SET @@GLOBAL.WRITE_STATS_COUNT=10;
SET @@GLOBAL.WRITE_THROTTLE_MONITOR_CYCLES=0;
SET @@GLOBAL.WRITE_AUTO_THROTTLE_FREQUENCY=0;
create database test1;
create table test1.t(a int) engine=innodb;
insert into test.t values(2);
delete from test.t where a = 2;
use test1;
insert into test1.t values(2);
delete from test1.t where a = 2;
select type, value, write_data_bytes from information_schema.write_statistics where timestamp = (select max(timestamp) from information_schema.write_statistics);
type	value	write_data_bytes
USER	root	144
CLIENT	99914b932bd37a50b983c5e7c90ae93b	144
SHARD	test1	72
SHARD	test	72
SQL_ID	f8b72afb7243baa2ebf74c9d02804b4b	36
SQL_ID	9621f9a4df741c41a69f9452ba1a8661	36
SQL_ID	ff16d6e1bbe87da5758c240ed7ecba3a	36
SQL_ID	8509ed41ca3b156cb78ead46a395d37e	36
####### Next Cycle #######
### Expectation - There is replication lag but WRITE_AUTO_THROTTLE_FREQUENCY is set to 0. The system should not throttle any entity. No warnings ###
select sleep(2);
sleep(2)
0
set @@global.debug= '+d,dbug.simulate_lag_above_start_throttle_threshold';
insert into test1.t values(2);
delete from test1.t where a = 2;
insert into test.t values(2);
delete from test1.t where a = 2;
select type, value from information_schema.write_throttling_rules where mode = 'AUTO';
type	value
select error_code, error_name, errors_total from information_schema.ERROR_STATISTICS where error_code = 50092;
error_code	error_name	errors_total
####### Reset #######
use test;
TRUNCATE test.t;
SET @@GLOBAL.WRITE_STATS_COUNT=0;
SET @@GLOBAL.WRITE_THROTTLE_PATTERNS='OFF';
SET @@GLOBAL.WRITE_THROTTLE_MONITOR_CYCLES=1;
SET @@GLOBAL.WRITE_AUTO_THROTTLE_FREQUENCY=2;
drop database test1;
flush statistics;
set @@global.debug= '-d,dbug.simulate_lag_above_start_throttle_threshold';
####################################################
### Test 8: Auto throttle throws error if write_control_level=ERROR
####################################################
SET @@GLOBAL.WRITE_STATS_COUNT=10;
SET @@GLOBAL.WRITE_THROTTLE_MONITOR_CYCLES=0;
SET @@GLOBAL.WRITE_CONTROL_LEVEL=ERROR;
create database test1;
create table test1.t(a int) engine=innodb;
insert into test.t values(2);
delete from test.t where a = 2;
use test1;
insert into test1.t values(2);
delete from test1.t where a = 2;
select type, value, write_data_bytes from information_schema.write_statistics where timestamp = (select max(timestamp) from information_schema.write_statistics);
type	value	write_data_bytes
USER	root	144
CLIENT	99914b932bd37a50b983c5e7c90ae93b	144
SHARD	test1	72
SHARD	test	72
SQL_ID	f8b72afb7243baa2ebf74c9d02804b4b	36
SQL_ID	9621f9a4df741c41a69f9452ba1a8661	36
SQL_ID	ff16d6e1bbe87da5758c240ed7ecba3a	36
SQL_ID	8509ed41ca3b156cb78ead46a395d37e	36
####### Next Cycle #######
### Expectation - There is replication lag. The client should be identified as the entity to be throttled ###
### Should throw erros when WRITE_CONTROL_LEVEL is set to ERROR but should only throw warnings when it is set to WARN ###
select sleep(2);
sleep(2)
0
set @@global.debug= '+d,dbug.simulate_lag_above_start_throttle_threshold';
insert into test1.t values(2);
ERROR HY000: Exceeded write workload limit. Try again later
delete from test1.t where a = 2;
ERROR HY000: Exceeded write workload limit. Try again later
SET @@GLOBAL.WRITE_CONTROL_LEVEL=WARN;
insert into test.t values(2);
delete from test1.t where a = 2;
select type, value from information_schema.write_throttling_rules where mode = 'AUTO';
type	value
CLIENT	99914b932bd37a50b983c5e7c90ae93b
select error_code, error_name, errors_total from information_schema.ERROR_STATISTICS where error_code = 50092;
error_code	error_name	errors_total
50092	ER_WRITE_QUERY_THROTTLED	4
####### Reset #######
use test;
TRUNCATE test.t;
SET @@GLOBAL.WRITE_STATS_COUNT=0;
SET @@GLOBAL.WRITE_THROTTLE_PATTERNS='OFF';
SET @@GLOBAL.WRITE_THROTTLE_MONITOR_CYCLES=1;
drop database test1;
flush statistics;
set @@global.debug= '-d,dbug.simulate_lag_above_start_throttle_threshold';
####################################################
### Test End: Full Reset
####################################################
SET @@GLOBAL.WRITE_STATS_FREQUENCY=0;
DROP TABLE t;
SET @@GLOBAL.SQL_STATS_CONTROL="OFF_HARD";
SET @@GLOBAL.WRITE_STATS_COUNT=0;
SET @@GLOBAL.WRITE_AUTO_THROTTLE_FREQUENCY=0;
SET @@GLOBAL.WRITE_STATS_FREQUENCY=0;
SET @@GLOBAL.WRITE_THROTTLE_PATTERNS='OFF';
SET @@GLOBAL.WRITE_THROTTLE_LAG_PCT_MIN_SECONDARIES=100;
SET @@GLOBAL.WRITE_START_THROTTLE_LAG_MILLISECONDS=86400000;
SET @@GLOBAL.WRITE_STOP_THROTTLE_LAG_MILLISECONDS=86400000;
SET @@GLOBAL.WRITE_THROTTLE_MIN_RATIO=1000;
SET @@GLOBAL.WRITE_THROTTLE_MONITOR_CYCLES=1000;
SET @@GLOBAL.WRITE_CONTROL_LEVEL=OFF;
include/rpl_end.inc
