DROP TABLE IF EXISTS t1;
CREATE TABLE t1 (a INT) ENGINE=InnoDB;
INSERT INTO t1 VALUES (1);
# SELECT FOR UPDATE gets S not X with fake changes
SET autocommit=0;
SET innodb_fake_changes=1;
BEGIN;
SELECT * FROM t1 FOR UPDATE;
a
1
SET innodb_lock_wait_timeout=3;
UPDATE t1 SET a=2;
SELECT lock_mode, lock_type, lock_table, lock_index FROM information_schema.innodb_locks;
lock_mode	lock_type	lock_table	lock_index
X	RECORD	`test`.`t1`	GEN_CLUST_INDEX
S	RECORD	`test`.`t1`	GEN_CLUST_INDEX
ERROR HY000: Lock wait timeout exceeded; try restarting transaction
ROLLBACK;
ROLLBACK;
SET global innodb_fake_changes_locks=0;
# Confirm SHOW STATUS counters are not updated during fake updates
SELECT VARIABLE_VALUE INTO @c1 from INFORMATION_SCHEMA.GLOBAL_STATUS WHERE VARIABLE_NAME = 'Innodb_buffer_pool_pages_dirty';
SELECT VARIABLE_VALUE INTO @w1 from INFORMATION_SCHEMA.GLOBAL_STATUS WHERE VARIABLE_NAME = 'Innodb_buffer_pool_write_requests';
SELECT VARIABLE_VALUE INTO @i1 from INFORMATION_SCHEMA.GLOBAL_STATUS WHERE VARIABLE_NAME = 'Innodb_rows_inserted';
SELECT VARIABLE_VALUE INTO @d1 from INFORMATION_SCHEMA.GLOBAL_STATUS WHERE VARIABLE_NAME = 'Innodb_rows_deleted';
SELECT VARIABLE_VALUE INTO @u1 from INFORMATION_SCHEMA.GLOBAL_STATUS WHERE VARIABLE_NAME = 'Innodb_rows_updated';
BEGIN;
INSERT INTO t1 VALUES (2);
SELECT * FROM t1;
a
1
DELETE FROM t1;
SELECT * FROM t1;
a
1
UPDATE t1 set a = 3;
SELECT * FROM t1;
a
1
ROLLBACK;
SELECT VARIABLE_VALUE INTO @c2 from INFORMATION_SCHEMA.GLOBAL_STATUS WHERE VARIABLE_NAME = 'Innodb_buffer_pool_pages_dirty';
SELECT VARIABLE_VALUE INTO @w2 from INFORMATION_SCHEMA.GLOBAL_STATUS WHERE VARIABLE_NAME = 'Innodb_buffer_pool_write_requests';
SELECT VARIABLE_VALUE INTO @i2 from INFORMATION_SCHEMA.GLOBAL_STATUS WHERE VARIABLE_NAME = 'Innodb_rows_inserted';
SELECT VARIABLE_VALUE INTO @d2 from INFORMATION_SCHEMA.GLOBAL_STATUS WHERE VARIABLE_NAME = 'Innodb_rows_deleted';
SELECT VARIABLE_VALUE INTO @u2 from INFORMATION_SCHEMA.GLOBAL_STATUS WHERE VARIABLE_NAME = 'Innodb_rows_updated';
idiff	udiff	ddiff
NULL	NULL	NULL
idiff	udiff	ddiff
NULL	NULL	NULL
diff
0
diff
0
diff
0
diff
0
diff
0
SET innodb_fake_changes=default;
SET global innodb_fake_changes_locks=default;
DROP TABLE t1;
# Confirm that SHOW INDEX stats are not updated during fake updates
CREATE TABLE t1 (a INT PRIMARY KEY, b INT) engine = InnoDB;
INSERT INTO t1 VALUES (1,2);
SHOW INDEX FROM t1;
Table	Non_unique	Key_name	Seq_in_index	Column_name	Collation	Cardinality	Sub_part	Packed	Null	Index_type	Comment	Index_comment
t1	0	PRIMARY	1	a	A	1	NULL	NULL		BTREE		
SET innodb_fake_changes = 1;
INSERT INTO t1 VALUES (3,9);
ERROR HY000: Got error 131 during COMMIT
INSERT INTO t1 VALUES (3,9);
ERROR HY000: Got error 131 during COMMIT
SET innodb_fake_changes = 0;
INSERT INTO t1 VALUES (5,9);
SHOW INDEX FROM t1;
Table	Non_unique	Key_name	Seq_in_index	Column_name	Collation	Cardinality	Sub_part	Packed	Null	Index_type	Comment	Index_comment
t1	0	PRIMARY	1	a	A	2	NULL	NULL		BTREE		
SET innodb_fake_changes = 0;
DROP TABLE t1;
