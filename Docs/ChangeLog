------------------------------------------------------------
revno: 4579
committer: Bjorn Munch <bjorn.munch@oracle.com>
branch nick: rel-569
timestamp: Thu 2012-11-22 15:12:33 +0100
message:
  Fix RPM name for generic linux, - not allowed
------------------------------------------------------------
revno: 4578
committer: Bjorn Munch <bjorn.munch@oracle.com>
branch nick: rel-569
timestamp: Thu 2012-11-22 14:19:00 +0100
message:
  Change name of RPM for generic linux to use version of glibc
------------------------------------------------------------
revno: 4577
committer: Bjorn Munch <bjorn.munch@oracle.com>
branch nick: rel-569
timestamp: Mon 2012-11-19 14:53:28 +0100
message:
  14848215 - RANDOM PASSWD IN "MYSQL_INSTALL_DB" FAILS DUE TO "TR": "ILLEGAL BYTE SEQUENCE"
  
    Follow-up fix: setting LC_CTYPE was not enough on all platforms.
    On Solaris, with my settings, I saw it generate password with only
    digits or 'a'.
  
    Fixed by setting LC_ALL=C instead.
------------------------------------------------------------
revno: 4576
committer: Bjorn Munch <bjorn.munch@oracle.com>
branch nick: rel-569
timestamp: Fri 2012-11-16 16:34:02 +0100
message:
  Bug #15866735 MYSQL_INSTALL_DB DOES NOT HONOR --USER, AND CODE TO DO IT IS BROKEN
    Write correct code for executing chown
    --user not supported on Windows
------------------------------------------------------------
revno: 4575
tags: clone-5.6.9-rc-build
committer: Jon Olav Hauglid <jon.hauglid@oracle.com>
branch nick: mysql-5.6-test
timestamp: Fri 2012-11-09 17:36:09 +0100
message:
  Bug#11762933: MYSQLDUMP WILL SILENTLY SKIP THE `EVENT` TABLE DATA IF DUMPS
  
  Post-push fix: Drop event explicitly since events are now dumped even with --skip-events
------------------------------------------------------------
revno: 4574 [merge]
committer: Jon Olav Hauglid <jon.hauglid@oracle.com>
branch nick: mysql-5.6-test
timestamp: Fri 2012-11-09 15:53:10 +0100
message:
  Null merge from mysql-5.5 to mysql-5.6
    ------------------------------------------------------------
    revno: 2875.417.31
    committer: Jon Olav Hauglid <jon.hauglid@oracle.com>
    branch nick: mysql-5.5-test
    timestamp: Fri 2012-11-09 15:51:28 +0100
    message:
      Bug#11762933: MYSQLDUMP WILL SILENTLY SKIP THE `EVENT` TABLE DATA IF DUMPS
      
      Post-push fix: Update result file.
------------------------------------------------------------
revno: 4573
committer: horst.hunger@oracle.com
branch nick: mysql-5.6
timestamp: Fri 2012-11-09 15:26:49 +0100
message:
  To avoid test failures on slow machines.
------------------------------------------------------------
revno: 4572 [merge]
committer: Marko M?kel? <marko.makela@oracle.com>
branch nick: mysql-5.6
timestamp: Fri 2012-11-09 16:03:30 +0200
message:
  Merge mysql-5.6 to local tree.
    ------------------------------------------------------------
    revno: 4570.1.1 [merge]
    committer: Venkata Sidagam <venkata.sidagam@oracle.com>
    branch nick: 5.6
    timestamp: Fri 2012-11-09 19:21:46 +0530
    message:
      Bug#13556000: CHECK AND REPAIR TABLE SHOULD BE MORE ROBUST[2]
      
      Merging from 5.5 to 5.6
        ------------------------------------------------------------
        revno: 2875.417.30
        committer: Venkata Sidagam <venkata.sidagam@oracle.com>
        branch nick: 5.5
        timestamp: Fri 2012-11-09 19:19:11 +0530
        message:
          Bug#13556000: CHECK AND REPAIR TABLE SHOULD BE MORE ROBUST[2]
          
          Problem description: Corrupt key file for the table. Size of the 
          key is greater than the maximum specified size. This results in 
          the overflow of the key buffer while reading the key from key 
          file.
          
          Fix: If size of key is greater than the maximum size it returns 
          an error before writing it into the key buffer. Gives error as 
          corrupt file but no stack overflow.
------------------------------------------------------------
revno: 4571
committer: Marko M?kel? <marko.makela@oracle.com>
branch nick: mysql-5.6
timestamp: Fri 2012-11-09 15:52:50 +0200
message:
  Bug#15853870 UNINITIALIZED VALUE PASSED TO INNODB_METRICS TABLE
  
  log_init(): Do not pass uninitialized data to MONITOR_SET().
  
  Add Valgrind checks for the value passed to the MONITOR macros.
  
  rb:1538 approved by Jimmy Yang
------------------------------------------------------------
revno: 4570 [merge]
committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
branch nick: mysql-5.6
timestamp: Fri 2012-11-09 19:05:48 +0530
message:
  Null merge from mysql-5.5 to mysql-5.6. 
    ------------------------------------------------------------
    revno: 2875.417.29 [merge]
    committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
    branch nick: mysql-5.5
    timestamp: Fri 2012-11-09 19:04:59 +0530
    message:
      Null merge from mysql-5.1 to mysql-5.5
        ------------------------------------------------------------
        revno: 2661.862.21
        committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
        branch nick: mysql-5.1
        timestamp: Fri 2012-11-09 19:04:01 +0530
        message:
          Bug #14669848 CRASH DURING ALTER MAKES ORIGINAL TABLE INACCESSIBLE
          
          When a new primary key is added to an InnoDB table, then the following
          steps are taken by InnoDB plugin:
          
          .  let t1 be the original table.
          .  a temporary table t1@00231 will be created by cloning t1.
          .  all data will be copied from t1 to t1@00231.
          .  rename t1 to t1@00232.
          .  rename t1@00231 to t1.
          .  drop t1@00232.
          
          The rename and drop operations involve file operations.  But file operations
          cannot be rolled back.  So in row_merge_rename_tables(), just after doing data
          dictionary update and before doing any file operations, generate redo logs
          for file operations and commit the transaction.  This will ensure that any
          crash after this commit, the table is still recoverable by moving .ibd and
          .frm files.  Manual recovery is required.
          
          During recovery, the rename file operation redo logs are processed.
          Previously this was being ignored.
          
          rb://1460 approved by Marko Makela.
------------------------------------------------------------
revno: 4569 [merge]
committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
branch nick: mysql-5.6
timestamp: Fri 2012-11-09 18:58:50 +0530
message:
  Null merge from mysql-5.5 to mysql-5.6. 
    ------------------------------------------------------------
    revno: 2875.417.28 [merge]
    committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
    branch nick: mysql-5.5
    timestamp: Fri 2012-11-09 18:56:20 +0530
    message:
      Merging from mysql-5.1 to mysql-5.5. 
------------------------------------------------------------
revno: 4568
committer: prabakaran thirumalai <prabakaran.thirumalai@oracle.com>
branch nick: mysql-5.6-try
timestamp: Fri 2012-11-09 17:47:12 +0530
message:
  Bug#11748945 MAKE KILL RELIABLE (MAIN.KILL FAILS RANDOMLY)
  
  Analysis:
  For OSX, POLLHUP event is not implemented for poll(). As a 
  result, shutdown() / close() system call does not break
  poll(). As client end of the socket is closed,
  connection is broken from the client side whereas server 
  side service socket is kept open as poll() waits for 28800 
  secs (default interactive_timeout and read_timeout value). 
  
  Sleep calls in kill.test are changed to debug sync under
  rev-2875.109.79. It fixed all the sporiadic issues related 
  to kill connection. This issue is regression of WL#4896 
  found only in OSX. There are no failures found on pb2 
  for platforms except OSX.
  
  Fix:
  Use select() instead of poll() only for OSX as select() 
  breaks when close() system call is invoked on the service
  socket.
------------------------------------------------------------
revno: 4567 [merge]
committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
branch nick: mysql-5.6
timestamp: Fri 2012-11-09 17:12:16 +0530
message:
  Merging from mysql-5.5 to mysql-5.6.
    ------------------------------------------------------------
    revno: 2875.420.1 [merge]
    committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
    branch nick: mysql-5.5
    timestamp: Thu 2012-11-08 18:26:11 +0530
    message:
      Merging from mysql-5.1 to mysql-5.5. 
        ------------------------------------------------------------
        revno: 2661.865.1
        committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
        branch nick: mysql-5.1
        timestamp: Thu 2012-11-08 18:09:13 +0530
        message:
          Bug #14669848 CRASH DURING ALTER MAKES ORIGINAL TABLE INACCESSIBLE
          
          When a new primary key is added to an InnoDB table, then the following
          steps are taken by InnoDB plugin:
          
          .  let t1 be the original table.
          .  a temporary table t1@00231 will be created by cloning t1.
          .  all data will be copied from t1 to t1@00231.
          .  rename t1 to t1@00232.
          .  rename t1@00231 to t1.
          .  drop t1@00232.
          
          The rename and drop operations involve file operations.  But file operations
          cannot be rolled back.  So in row_merge_rename_tables(), just after doing data
          dictionary update and before doing any file operations, generate redo logs
          for file operations and commit the transaction.  This will ensure that any
          crash after this commit, the table is still recoverable by moving .ibd and
          .frm files.  Manual recovery is required.
          
          During recovery, the rename file operation redo logs are processed.
          Previously this was being ignored.
          
          rb://1460 approved by Marko Makela.
------------------------------------------------------------
revno: 4566
committer: Anirudh Mangipudi <anirudh.mangipudi@oracle.com>
branch nick: extra-5.6
timestamp: Fri 2012-11-09 16:53:45 +0530
message:
  BUG#11762933: MYSQLDUMP WILL SILENTLY SKIP THE `EVENT`
                TABLE DATA IF DUMPS MYSQL DATABA
  Problem: If mysqldump is run without --events option it will not
  dump the mysql.event table's data. This behaviour is inconsistent
  with that of --routines option, which does not affect the
  dumping of mysql.proc table.
  SOLUTION: To avoid this confusion, the events logic that filters/disables
  dumping of "event" table in mysql database is dropped. By doing this, dumping
  of event table will no longer be connected to the 'events' option. And thus
  both --routines & --events options will behave in a consistent manner. To ignore
  dumping of mysql.event table use --ignore-table option.
  ==============================================================================
  We need to update the following sections of the following document:
  http://dev.mysql.com/doc/refman/5.1/en/mysqldump.html#option_mysqldump_events
  Events option will no longer affect the dumping of mysql.event table. Use of
  --ignore-table is suggested to avoid dumping of mysql.event table.
  ==============================================================================
------------------------------------------------------------
revno: 4565
committer: Sven Sandberg <sven.sandberg@oracle.com>
branch nick: 5.6
timestamp: Fri 2012-11-09 12:01:37 +0100
message:
  BUG#14828028 - TRANSACTION SKIPPED USING GTIDS CAUSES NEXT RECONNECTION BY IO THREAD TO FAIL
  When using the GTID-aware master-slave protocol, the master skips
  transactions that the slave already has.  This caused the slave IO
  thread to remember the wrong position.  When using GTIDs, the position
  is not normally used for anything, so this should not be a big
  problem.  However, as a special case, the position was used in
  addition to the GTID when the slave reconnects to the same master. In
  this bug, we fixed the problem by making the GTID-aware master-slave
  protocol not use positions at all.
  In addition, we make the master dump thread completely skip
  binary logs that were generated when GTID_MODE!=ON (or by an old
  server), if using the GTID protocol. This is necessary because
  otherwise such binary logs will be sent again. This does not skip
  anything that should have been replicated, because it is a requirement
  in the upgrade procedure that the user waits until all GTID-free binary
  logs have been replicated before using the GTID protocol.
------------------------------------------------------------
revno: 4564 [merge]
committer: Anirudh Mangipudi <anirudh.mangipudi@oracle.com>
branch nick: 5.6
timestamp: Fri 2012-11-09 15:18:09 +0530
message:
  BUG#11762933: MYSQLDUMP WILL SILENTLY SKIP THE `EVENT`
                TABLE DATA IF DUMPS MYSQL DATABA
  Null Merge from 5.5 to 5.6
    ------------------------------------------------------------
    revno: 2875.417.27 [merge]
    committer: Anirudh Mangipudi <anirudh.mangipudi@oracle.com>
    branch nick: 5.5
    timestamp: Fri 2012-11-09 15:16:49 +0530
    message:
      BUG#11762933: MYSQLDUMP WILL SILENTLY SKIP THE `EVENT`
                    TABLE DATA IF DUMPS MYSQL DATABA
      Problem: If mysqldump is run without --events (or with --skip-events)
      it will not dump the mysql.event table's data. This behaviour is inconsistent
      with that of --routines option, which does not affect the dumping of
      mysql.proc table. According to the Manual, --events (--skip-events) defines,
      if the Event Scheduler events for the dumped databases should be included
      in the mysqldump output and this has nothing to do with the mysql.event table
      itself.
      Solution: A warning has been added when mysqldump is used without --events 
      (or with --skip-events) and a separate patch with the behavioral change 
      will be prepared for 5.6/trunk.
        ------------------------------------------------------------
        revno: 2661.862.20
        committer: Anirudh Mangipudi <anirudh.mangipudi@oracle.com>
        branch nick: 5.1
        timestamp: Fri 2012-11-09 15:15:16 +0530
        message:
          BUG#11762933: MYSQLDUMP WILL SILENTLY SKIP THE `EVENT`
                        TABLE DATA IF DUMPS MYSQL DATABA
          Problem: If mysqldump is run without --events (or with --skip-events)
          it will not dump the mysql.event table's data. This behaviour is inconsistent
          with that of --routines option, which does not affect the dumping of
          mysql.proc table. According to the Manual, --events (--skip-events) defines,
          if the Event Scheduler events for the dumped databases should be included
          in the mysqldump output and this has nothing to do with the mysql.event table
          itself.
          Solution: A warning has been added when mysqldump is used without --events 
          (or with --skip-events) and a separate patch with the behavioral change 
          will be prepared for 5.6/trunk.
------------------------------------------------------------
revno: 4563 [merge]
committer: Thayumanavar <thayumanavar.x.sachithanantha@oracle.com>
branch nick: mysql-5.6
timestamp: Fri 2012-11-09 14:57:11 +0530
message:
  Merge from 5.5 to 5.6.
    ------------------------------------------------------------
    revno: 2875.417.26
    committer: Thayumanavar <thayumanavar.x.sachithanantha@oracle.com>
    branch nick: mysql-5.5
    timestamp: Fri 2012-11-09 14:54:35 +0530
    message:
      BUG#14458232 - CRASH IN THD_IS_TRANSACTION_ACTIVE DURING
                     THREAD POOLING STRESS TEST
      PROBLEM:
      Connection stress tests which consists of concurrent
      kill connections interleaved with mysql ping queries
      cause the mysqld server which uses thread pool scheduler
      to crash.
      FIX:
      Killing a connection involves shutdown and close of client
      socket and this can cause EPOLLHUP(or EPOLLERR) events to be
      to be queued and handled after disarming and cleanup of 
      of the connection object (THD) is being done.We disarm the 
      the connection by modifying the epoll mask to zero which
      ensure no events come and release the ownership of waiting 
      thread that collect events and then do the cleanup of THD.
      object.As per the linux kernel epoll source code (               
      http://lxr.linux.no/linux+*/fs/eventpoll.c#L1771), EPOLLHUP
      (or EPOLLERR) can't be masked even if we set EPOLL mask
      to zero. So we disarm the connection and thus prevent 
      execution of any query processing handler/queueing to 
      client ctx. queue by removing the client fd from the epoll        
      set via EPOLL_CTL_DEL. Also there is a race condition which
      involve the following threads:
      1) Thread X executing KILL CONNECTION Y and is in THD::awake
      and using mysys_var (holding LOCK_thd_data).
      2) Thread Y in tp_process_event executing and is being killed.
      3) Thread Z receives KILL flag internally and possible call
      the tp_thd_cleanup function which set thread session variable
      and changing mysys_var.
      The fix for the above race is to set thread session variable
      under LOCK_thd_data.
      We also do not call THD::awake if we found the thread in the
      thread list that is to be killed but it's KILL_CONNECTION flag
      set thus avoiding any possible concurrent cleanup. This patch
      is approved by Mikael Ronstrom via email review.
------------------------------------------------------------
revno: 4562
committer: Rohit Kalhans <rohit.kalhans@oracle.com>
branch nick: mysql-5.6
timestamp: Fri 2012-11-09 13:46:50 +0530
message:
  BUG#14843764:FULLTEXT INDEX EXISTS, UPDATE WITH LIMIT, REPLICATION BREAKS
        
  Background: If full-text index is present in the table,
  the replication logic doesnot ignore the fulltext index
  even though this cannot be used to find the correct row.
  The row applier switches to index scan, and thus failing.
  
  Fix: Ignore indices which do not support ha_index_next() 
  while deciding if table_scan, index_scan or hash_scan should
  be used. 
------------------------------------------------------------
revno: 4561
committer: Anitha Gopi <anitha.gopi@oracle.com>
branch nick: mysql-5.6
timestamp: Fri 2012-11-09 09:09:08 +0100
message:
  Bug#15853223 : Disabled failing test
------------------------------------------------------------
revno: 4560
committer: Alexander Barkov <alexander.barkov@oracle.com>
branch nick: mysql-5.6
timestamp: Fri 2012-11-09 11:25:06 +0400
message:
  A post-fix for bug 14786470.
  Embedded version on Windows returns yet another error code.
------------------------------------------------------------
revno: 4559
committer: Marc Alff <marc.alff@oracle.com>
branch nick: mysql-5.6-bug14741537-v4
timestamp: Thu 2012-11-08 22:40:31 +0100
message:
  Bug#14741537 - MYSQL 5.6, GTID AND PERFORMANCE_SCHEMA
  
  Before this fix, statements using performance_schema tables:
  - were marked as unsafe for replication,
  - did cause warnings during execution,
  - were written to the binlog, either in STATEMENT or ROW format.
  
  When using replication with the new GTID feature,
  unsafe warnings are elevated to errors,
  which prevents to use both the performance_schema and GTID together.
  
  The root cause of the problem is not related to raising warnings/errors
  in some special cases, but deeper: statements involving the performance
  schema should not even be written to the binary log in the first place,
  because the content of the performance schema tables is 'local' to a server
  instance, and may differ greatly between nodes in a replication
  topology.
  
  In particular, the DBA should be able to configure (INSERT, UPDATE, DELETE)
  or flush (TRUNCATE) performance schema tables on one node,
  without affecting other nodes.
  
  This fix introduces the concept of a 'non-replicated' or 'local' table,
  and adjusts the replication logic to ignore tables that are not replicated
  when deciding if or how to log a statement to the binlog.
  
  Note that while this issue was detected using the performance_schema,
  other tables are also affected by the same problem.
  
  This fix define as 'local' the following tables, which are then never
  replicated:
  - performance_schema.*
  - mysql.general_log
  - mysql.slow_log
  - mysql.slave_relay_log_info
  - mysql.slave_master_info
  - mysql.slave_worker_info
  
  Existing behavior for information_schema.* is unchanged by this fix,
  to limit the scope of changes.
  
  Coding wise, this fix implements the following changes:
  
  1)
  
  Performance schema tables are not using any replication flags,
  since performance schema tables are not replicated.
  
  2)
  
  In open_table_from_share(),
  tables with no replication capabilities (performance_schema.*),
  tables with TABLE_CATEGORY_LOG (logs)
  and tables with TABLE_CATEGORY_RPL_INFO (replication)
  are marked as non replicated, with TABLE::no_replicate
  
  3)
  
  A new THD member, THD::m_binlog_filter_state,
  indicate if the current statement is written to the binlog
  (normal cases for most statements), or is to be discarded
  (because the statements affects non replicated tables).
  
  4)
  
  In THD::decide_logging_format(), the replication logic
  is changed to take into account non replicated tables.
  
  Statements that affect only non replicated tables are
  executed normally (no warning or errors), but not written
  to the binlog.
  
  Statements that affect (i.e., write to) a replicated table
  while also using (i.e., reading from or writing to) a non replicated table
  are executed normally in MIXED and ROW binlog format,
  and cause a new error in STATEMENT binlog format.
  
  THD::decide_logging_format() uses THD::m_binlog_filter_state
  to indicate if a statement is to be ignored, when writing to
  the binlog.
  
  5)
  
  In THD::binlog_query(), statements marked as ignored
  are not written to the binary log.
  
  6)
  
  For row based replication, the existing test for 'table->no_replicate',
  has been moved from binlog_log_row() to check_table_binlog_row_based().
------------------------------------------------------------
revno: 4558
committer: Nuno Carvalho <nuno.carvalho@oracle.com>
branch nick: mysql-5.6
timestamp: Thu 2012-11-08 18:52:02 +0000
message:
  BUG#14838575: STORED PROCEDURE INVOKING GTID_SUBTRACT RETURNS NULL IF PREVIOUS INVOKATION DOES
  
  Skip func_gtid_subtract test case on embedded binaries.
------------------------------------------------------------
revno: 4557 [merge]
committer: Joerg Bruehe <joerg.bruehe@oracle.com>
branch nick: mysql-5.6
timestamp: Thu 2012-11-08 19:26:10 +0100
message:
  Upmerge.
    ------------------------------------------------------------
    revno: 2875.417.25 [merge]
    committer: Joerg Bruehe <joerg.bruehe@oracle.com>
    branch nick: mysql-5.5
    timestamp: Thu 2012-11-08 19:23:54 +0100
    message:
      Merge the ULN RPM fix into main.
        ------------------------------------------------------------
        revno: 2875.419.1
        committer: Joerg Bruehe <joerg.bruehe@oracle.com>
        branch nick: itch-5.5
        timestamp: Thu 2012-11-08 15:49:28 +0100
        message:
          Building RPMs for ULN:
          
          The patch "mysql-chain-certs.patch" needs to be adapted
          to code changes in "vio/viosslfactories.c" which were
          done in MySQL 5.5.
          
          Then, the patch can be re-enabled in the spec file.
------------------------------------------------------------
revno: 4556
committer: Andrei Elkin <andrei.elkin@oracle.com>
branch nick: 5.6-bug14641110-MTS_perf_solaris_avinash
timestamp: Thu 2012-11-08 17:45:44 +0200
message:
  Bug #14641110 ON SOLARIS , SLAVE_PARALLEL_WORKERS DEGRADES REPLICATION PERFORMANCE
  
  It was observed that on some platforms like Solaris x86 MTS applies events
  slow. The reason appears to be in that when Coordinator thread is sluggish 
  for some reason it could enter a napping routine while the Worker actually has very
  little to do. 
  Meanwhile low-running Worker can empty its assignment queue to get starving.
  So more to the waste of time with sleeping, at awakening Coordinator 
  had to signal the Worker about the first assignement in the queue.
  In contrast, the idea of the napping routine was to minimize signalling.
  
  Fixed with restricting conditions to enter napping block.
  Effectivly scheduling to about to become hungry Worker won't be delayed.
  As a side effect, integer overflow in diff_timespec() of include/my_pthread.h 
  is eliminated as well.
------------------------------------------------------------
revno: 4555
committer: Nuno Carvalho <nuno.carvalho@oracle.com>
branch nick: mysql-5.6
timestamp: Thu 2012-11-08 14:56:44 +0000
message:
  BUG#14838575: STORED PROCEDURE INVOKING GTID_SUBTRACT RETURNS NULL IF PREVIOUS INVOKATION DOES
  
  There were two problems with method
  Item_func_gtid_subtract::val_str_ascii(String *str) implementation that
  caused incorrect NULL values being returned:
    1) it was not setting this->null_value= false when a not NULL value
       was returned;
    2) it checked if both arguments were NULL testing arguments'
       null_value variable (args[0]->null_value and args[1]->null_value)
       before ensuring that its values are updated. On SP executions
       args[*]->null_value are only updated after SP is executed (or
       args[*]->is_null() method should be used instead of null_value).
  
  Moved args[*]->null_value checks to after args[*]->val_str_ascii() to
  ensure that args[*]->null_value value is updated.
  Added set function null_value to false when a not NULL value is
  returned.
------------------------------------------------------------
revno: 4554 [merge]
committer: Aditya A <aditya.a@oracle.com>
branch nick: mysql-5.6
timestamp: Thu 2012-11-08 15:24:03 +0530
message:
  Bug#14234028 - CRASH DURING SHUTDOWN WITH BACKGROUND PURGE THREAD
   
   Analysis
   --------- 
   
   my_stat() calls stat() and if the stat() call fails we try to set 
   the variable  my_errno which is actually a thread specific data .
   We try to get the  address of this thread specific data using
   my_pthread_getspecifc(),but for the purge thread we have not defined 
   any thread specific data so it returns null and when dereferencing 
   null we get a segmentation fault.
          init_available_charsets() seen in the core stack is invoked 
   through  pthread_once() .pthread_once is used for one time 
   initialization.Since free_charsets() is called before innodb plugin 
   shutdown ,purge thread calls init_avaliable_charsets() which leads 
   to the crash.
  
   Fix
   ---
   Call free_charsets() after the innodb plugin shutdown,since purge 
   threads are still using the charsets. 
    ------------------------------------------------------------
    revno: 2875.417.24 [merge]
    committer: Aditya A <aditya.a@oracle.com>
    branch nick: mysql-5.5
    timestamp: Thu 2012-11-08 15:21:02 +0530
    message:
      Bug#14234028 - CRASH DURING SHUTDOWN WITH BACKGROUND PURGE THREAD
       
       Analysis
       --------- 
       
       my_stat() calls stat() and if the stat() call fails we try to set 
       the variable  my_errno which is actually a thread specific data .
       We try to get the  address of this thread specific data using
       my_pthread_getspecifc(),but for the purge thread we have not defined 
       any thread specific data so it returns null and when dereferencing 
       null we get a segmentation fault.
              init_available_charsets() seen in the core stack is invoked 
       through  pthread_once() .pthread_once is used for one time 
       initialization.Since free_charsets() is called before innodb plugin 
       shutdown ,purge thread calls init_avaliable_charsets() which leads 
       to the crash.
      
       Fix
       ---
       Call free_charsets() after the innodb plugin shutdown,since purge 
       threads are still using the charsets. 
        ------------------------------------------------------------
        revno: 2661.862.19
        committer: Aditya A <aditya.a@oracle.com>
        branch nick: mysql-5.1
        timestamp: Thu 2012-11-08 15:14:29 +0530
        message:
          Bug#14234028 - CRASH DURING SHUTDOWN WITH BACKGROUND PURGE THREAD
           
           Analysis
           --------- 
           
           my_stat() calls stat() and if the stat() call fails we try to set 
           the variable  my_errno which is actually a thread specific data .
           We try to get the  address of this thread specific data using
           my_pthread_getspecifc(),but for the purge thread we have not defined 
           any thread specific data so it returns null and when dereferencing 
           null we get a segmentation fault.
                  init_available_charsets() seen in the core stack is invoked 
           through  pthread_once() .pthread_once is used for one time 
           initialization.Since free_charsets() is called before innodb plugin 
           shutdown ,purge thread calls init_avaliable_charsets() which leads 
           to the crash.
          
           Fix
           ---
           Call free_charsets() after the innodb plugin shutdown,since purge 
           threads are still using the charsets. 
------------------------------------------------------------
revno: 4553 [merge]
committer: Aditya A <aditya.a@oracle.com>
branch nick: mysql-5.6
timestamp: Thu 2012-11-08 14:48:40 +0530
message:
  Bug#11751825 - OPTIMIZE PARTITION RECREATES FULL TABLE INSTEAD JUST PARTITION
  
  [NULL MERGE from 5.5 ]
    ------------------------------------------------------------
    revno: 2875.417.23 [merge]
    committer: Aditya A <aditya.a@oracle.com>
    branch nick: mysql-5.5
    timestamp: Thu 2012-11-08 14:23:02 +0530
    message:
      Bug#11751825 - OPTIMIZE PARTITION RECREATES FULL TABLE INSTEAD JUST PARTITION
      
      Follow up patch to address the pb2 failures.
        ------------------------------------------------------------
        revno: 2661.862.18
        committer: Aditya A <aditya.a@oracle.com>
        branch nick: mysql-5.1
        timestamp: Thu 2012-11-08 14:19:27 +0530
        message:
          Bug#11751825 - OPTIMIZE PARTITION RECREATES FULL TABLE INSTEAD JUST PARTITION
          
          Follow up patch to address the pb2 failures.
------------------------------------------------------------
revno: 4552
committer: Aditya A <aditya.a@oracle.com>
branch nick: mysql-5.6
timestamp: Thu 2012-11-08 14:28:25 +0530
message:
  Bug#11751825 - OPTIMIZE PARTITION RECREATES FULL TABLE INSTEAD JUST PARTITION
  
  Follow up patch to address the pb2 failures.
------------------------------------------------------------
revno: 4551
committer: Alexander Barkov <alexander.barkov@oracle.com>
branch nick: mysql-5.6
timestamp: Thu 2012-11-08 12:18:54 +0400
message:
  Postfix for BUG 14786470.
  Error code in "mtr --embedded" differs from the server version.
  Adding alternative error code.
------------------------------------------------------------
revno: 4550
committer: Roy Lyseng <roy.lyseng@oracle.com>
branch nick: mysql-5.6
timestamp: Thu 2012-11-08 08:32:03 +0100
message:
  Bug#14846866 Server crash in free_root for my_alloc.c:372
  
  JOIN::best_positions may be allocated at two different places.
  Make sure that the size of it is the same in
  JOIN::compare_costs_of_subquery_strategies() as in make_join_statistics().
  It missed the fact that non-semi-join-transformed subqueries still may
  contain semi-joins.
  
  internal/mysql-test/suite/i_main/r/subquery.result
    Test case results for bug#14846866.
  
  internal/mysql-test/suite/i_main/t/subquery.test
    Test case for bug#14846866.
  
  sql/sql_optimizer.cc
    Adjust size of JOIN::best_positions by adding number of semi-join nests.
------------------------------------------------------------
revno: 4549 [merge]
committer: Joerg Bruehe <joerg.bruehe@oracle.com>
branch nick: place-uln-5.6
timestamp: Wed 2012-11-07 20:41:27 +0100
message:
  Upmerge changes for ULN RPMs.
    ------------------------------------------------------------
    revno: 2875.417.22
    committer: Joerg Bruehe <joerg.bruehe@oracle.com>
    branch nick: place-uln-5.5
    timestamp: Wed 2012-11-07 20:32:54 +0100
    message:
      Make RPMs for ULN build again.
      
      A change to "vio/viosslfactories.c" in August, 2012,
      broke a patch which is to be applied during the build
      of ULN RPMs.
      The patch file is
      "packaging/rpm-uln/mysql-chain-certs.patch"
      
      This change bypasses the problem by not trying to apply
      the patch.
      
      This is a regression and must be fixed, not bypassed.
    ------------------------------------------------------------
    revno: 2875.417.21
    committer: Joerg Bruehe <joerg.bruehe@oracle.com>
    branch nick: place-uln-5.5
    timestamp: Wed 2012-11-07 17:45:02 +0100
    message:
      Placement change:
      
      Top level "SPECIFIC-ULN/" was inappropriate,
      put the files to create RPMs for ULN into
      "packaging/rpm-uln/".
------------------------------------------------------------
revno: 4548 [merge]
committer: Joerg Bruehe <joerg.bruehe@oracle.com>
branch nick: place-uln-5.6
timestamp: Wed 2012-11-07 20:39:30 +0100
message:
  Null-merge a version change.
    ------------------------------------------------------------
    revno: 4454.3.3
    tags: mysql-5.6.8
    committer: Nirbhay Choubey <nirbhay.choubey@oracle.com>
    branch nick: B14698309-5.6
    timestamp: Mon 2012-10-15 17:38:01 +0530
    message:
      Updating MYSQL_VERSION_EXTRA.
