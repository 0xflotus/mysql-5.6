/* A Bison parser, made by GNU Bison 2.3.  */

/* Skeleton implementation for Bison's Yacc-like parsers in C

   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
   Free Software Foundation, Inc.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 51 Franklin Street, Fifth Floor,
   Boston, MA 02110-1301, USA.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "2.3"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Using locations.  */
#define YYLSP_NEEDED 0

/* Substitute the variable and function names.  */
#define yyparse MYSQLparse
#define yylex   MYSQLlex
#define yyerror MYSQLerror
#define yylval  MYSQLlval
#define yychar  MYSQLchar
#define yydebug MYSQLdebug
#define yynerrs MYSQLnerrs


/* Tokens.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
   /* Put the tokens into the symbol table, so that GDB and other debuggers
      know about them.  */
   enum yytokentype {
     ABORT_SYM = 258,
     ACCESSIBLE_SYM = 259,
     ACTION = 260,
     ADD = 261,
     ADDDATE_SYM = 262,
     AFTER_SYM = 263,
     AGAINST = 264,
     AGGREGATE_SYM = 265,
     ALGORITHM_SYM = 266,
     ALL = 267,
     ALTER = 268,
     ANALYZE_SYM = 269,
     AND_AND_SYM = 270,
     AND_SYM = 271,
     ANY_SYM = 272,
     AS = 273,
     ASC = 274,
     ASCII_SYM = 275,
     ASENSITIVE_SYM = 276,
     AT_SYM = 277,
     AUTHORS_SYM = 278,
     AUTOEXTEND_SIZE_SYM = 279,
     AUTO_INC = 280,
     AVG_ROW_LENGTH = 281,
     AVG_SYM = 282,
     BACKUP_SYM = 283,
     BEFORE_SYM = 284,
     BEGIN_SYM = 285,
     BETWEEN_SYM = 286,
     BIGINT = 287,
     BINARY = 288,
     BINLOG_SYM = 289,
     BIN_NUM = 290,
     BIT_AND = 291,
     BIT_OR = 292,
     BIT_SYM = 293,
     BIT_XOR = 294,
     BLOB_SYM = 295,
     BLOCK_SYM = 296,
     BOOLEAN_SYM = 297,
     BOOL_SYM = 298,
     BOTH = 299,
     BTREE_SYM = 300,
     BY = 301,
     BYTE_SYM = 302,
     CACHE_SYM = 303,
     CALL_SYM = 304,
     CASCADE = 305,
     CASCADED = 306,
     CASE_SYM = 307,
     CAST_SYM = 308,
     CATALOG_NAME_SYM = 309,
     CHAIN_SYM = 310,
     CHANGE = 311,
     CHANGED = 312,
     CHARSET = 313,
     CHAR_SYM = 314,
     CHECKSUM_SYM = 315,
     CHECK_SYM = 316,
     CIPHER_SYM = 317,
     CLASS_ORIGIN_SYM = 318,
     CLIENT_SYM = 319,
     CLOSE_SYM = 320,
     COALESCE = 321,
     CODE_SYM = 322,
     COLLATE_SYM = 323,
     COLLATION_SYM = 324,
     COLUMNS = 325,
     COLUMN_SYM = 326,
     COLUMN_NAME_SYM = 327,
     COMMENT_SYM = 328,
     COMMITTED_SYM = 329,
     COMMIT_SYM = 330,
     COMPACT_SYM = 331,
     COMPLETION_SYM = 332,
     COMPRESSED_SYM = 333,
     CONCURRENT = 334,
     CONDITION_SYM = 335,
     CONNECTION_SYM = 336,
     CONSISTENT_SYM = 337,
     CONSTRAINT = 338,
     CONSTRAINT_CATALOG_SYM = 339,
     CONSTRAINT_NAME_SYM = 340,
     CONSTRAINT_SCHEMA_SYM = 341,
     CONTAINS_SYM = 342,
     CONTEXT_SYM = 343,
     CONTINUE_SYM = 344,
     CONTRIBUTORS_SYM = 345,
     CONVERT_SYM = 346,
     COUNT_SYM = 347,
     CPU_SYM = 348,
     CREATE = 349,
     CROSS = 350,
     CUBE_SYM = 351,
     CURDATE = 352,
     CURRENT_SYM = 353,
     CURRENT_USER = 354,
     CURSOR_SYM = 355,
     CURSOR_NAME_SYM = 356,
     CURTIME = 357,
     DATABASE = 358,
     DATABASES = 359,
     DATAFILE_SYM = 360,
     DATA_SYM = 361,
     DATETIME = 362,
     DATE_ADD_INTERVAL = 363,
     DATE_SUB_INTERVAL = 364,
     DATE_SYM = 365,
     DAY_HOUR_SYM = 366,
     DAY_MICROSECOND_SYM = 367,
     DAY_MINUTE_SYM = 368,
     DAY_SECOND_SYM = 369,
     DAY_SYM = 370,
     DEALLOCATE_SYM = 371,
     DECIMAL_NUM = 372,
     DECIMAL_SYM = 373,
     DECLARE_SYM = 374,
     DEFAULT = 375,
     DEFAULT_AUTH_SYM = 376,
     DEFINER_SYM = 377,
     DELAYED_SYM = 378,
     DELAY_KEY_WRITE_SYM = 379,
     DELETE_SYM = 380,
     DESC = 381,
     DESCRIBE = 382,
     DES_KEY_FILE = 383,
     DETERMINISTIC_SYM = 384,
     DIAGNOSTICS_SYM = 385,
     DIRECTORY_SYM = 386,
     DISABLE_SYM = 387,
     DISCARD = 388,
     DISK_SYM = 389,
     DISTINCT = 390,
     DIV_SYM = 391,
     DOUBLE_SYM = 392,
     DO_SYM = 393,
     DROP = 394,
     DUAL_SYM = 395,
     DUMPFILE = 396,
     DUPLICATE_SYM = 397,
     DYNAMIC_SYM = 398,
     EACH_SYM = 399,
     ELSE = 400,
     ELSEIF_SYM = 401,
     ENABLE_SYM = 402,
     ENCLOSED = 403,
     END = 404,
     ENDS_SYM = 405,
     END_OF_INPUT = 406,
     ENGINES_SYM = 407,
     ENGINE_SYM = 408,
     ENUM = 409,
     EQ = 410,
     EQUAL_SYM = 411,
     ERROR_SYM = 412,
     ERRORS = 413,
     ESCAPED = 414,
     ESCAPE_SYM = 415,
     EVENTS_SYM = 416,
     EVENT_SYM = 417,
     EVERY_SYM = 418,
     EXCHANGE_SYM = 419,
     EXECUTE_SYM = 420,
     EXISTS = 421,
     EXIT_SYM = 422,
     EXPANSION_SYM = 423,
     EXTENDED_SYM = 424,
     EXTENT_SIZE_SYM = 425,
     EXTRACT_SYM = 426,
     FALSE_SYM = 427,
     FAST_SYM = 428,
     FAULTS_SYM = 429,
     FETCH_SYM = 430,
     FILE_SYM = 431,
     FIRST_SYM = 432,
     FIXED_SYM = 433,
     FLOAT_NUM = 434,
     FLOAT_SYM = 435,
     FLUSH_SYM = 436,
     FORCE_SYM = 437,
     FOREIGN = 438,
     FOR_SYM = 439,
     FOUND_SYM = 440,
     FROM = 441,
     FULL = 442,
     FULLTEXT_SYM = 443,
     FUNCTION_SYM = 444,
     GE = 445,
     GENERAL = 446,
     GEOMETRYCOLLECTION = 447,
     GEOMETRY_SYM = 448,
     GET_FORMAT = 449,
     GET_SYM = 450,
     GLOBAL_SYM = 451,
     GRANT = 452,
     GRANTS = 453,
     GROUP_SYM = 454,
     GROUP_CONCAT_SYM = 455,
     GT_SYM = 456,
     HANDLER_SYM = 457,
     HASH_SYM = 458,
     HAVING = 459,
     HELP_SYM = 460,
     HEX_NUM = 461,
     HIGH_PRIORITY = 462,
     HOST_SYM = 463,
     HOSTS_SYM = 464,
     HOUR_MICROSECOND_SYM = 465,
     HOUR_MINUTE_SYM = 466,
     HOUR_SECOND_SYM = 467,
     HOUR_SYM = 468,
     IDENT = 469,
     IDENTIFIED_SYM = 470,
     IDENT_QUOTED = 471,
     IF = 472,
     IGNORE_SYM = 473,
     IGNORE_SERVER_IDS_SYM = 474,
     IMPORT = 475,
     INDEXES = 476,
     INDEX_SYM = 477,
     INFILE = 478,
     INITIAL_SIZE_SYM = 479,
     INNER_SYM = 480,
     INOUT_SYM = 481,
     INSENSITIVE_SYM = 482,
     INSERT = 483,
     INSERT_METHOD = 484,
     INSTALL_SYM = 485,
     INTERVAL_SYM = 486,
     INTO = 487,
     INT_SYM = 488,
     INVOKER_SYM = 489,
     IN_SYM = 490,
     IO_SYM = 491,
     IPC_SYM = 492,
     IS = 493,
     ISOLATION = 494,
     ISSUER_SYM = 495,
     ITERATE_SYM = 496,
     JOIN_SYM = 497,
     KEYS = 498,
     KEY_BLOCK_SIZE = 499,
     KEY_SYM = 500,
     KILL_SYM = 501,
     LANGUAGE_SYM = 502,
     LAST_SYM = 503,
     LE = 504,
     LEADING = 505,
     LEAVES = 506,
     LEAVE_SYM = 507,
     LEFT = 508,
     LESS_SYM = 509,
     LEVEL_SYM = 510,
     LEX_HOSTNAME = 511,
     LIKE = 512,
     LIMIT = 513,
     LINEAR_SYM = 514,
     LINES = 515,
     LINESTRING = 516,
     LIST_SYM = 517,
     LOAD = 518,
     LOCAL_SYM = 519,
     LOCATOR_SYM = 520,
     LOCKS_SYM = 521,
     LOCK_SYM = 522,
     LOGFILE_SYM = 523,
     LOGS_SYM = 524,
     LONGBLOB = 525,
     LONGTEXT = 526,
     LONG_NUM = 527,
     LONG_SYM = 528,
     LOOP_SYM = 529,
     LOW_PRIORITY = 530,
     LT = 531,
     MASTER_BIND_SYM = 532,
     MASTER_CONNECT_RETRY_SYM = 533,
     MASTER_DELAY_SYM = 534,
     MASTER_HOST_SYM = 535,
     MASTER_LOG_FILE_SYM = 536,
     MASTER_LOG_POS_SYM = 537,
     MASTER_PASSWORD_SYM = 538,
     MASTER_PORT_SYM = 539,
     MASTER_RETRY_COUNT_SYM = 540,
     MASTER_SERVER_ID_SYM = 541,
     MASTER_SSL_CAPATH_SYM = 542,
     MASTER_SSL_CA_SYM = 543,
     MASTER_SSL_CERT_SYM = 544,
     MASTER_SSL_CIPHER_SYM = 545,
     MASTER_SSL_CRL_SYM = 546,
     MASTER_SSL_CRLPATH_SYM = 547,
     MASTER_SSL_KEY_SYM = 548,
     MASTER_SSL_SYM = 549,
     MASTER_SSL_VERIFY_SERVER_CERT_SYM = 550,
     MASTER_SYM = 551,
     MASTER_USER_SYM = 552,
     MASTER_HEARTBEAT_PERIOD_SYM = 553,
     MATCH = 554,
     MAX_CONNECTIONS_PER_HOUR = 555,
     MAX_QUERIES_PER_HOUR = 556,
     MAX_ROWS = 557,
     MAX_SIZE_SYM = 558,
     MAX_SYM = 559,
     MAX_UPDATES_PER_HOUR = 560,
     MAX_USER_CONNECTIONS_SYM = 561,
     MAX_VALUE_SYM = 562,
     MEDIUMBLOB = 563,
     MEDIUMINT = 564,
     MEDIUMTEXT = 565,
     MEDIUM_SYM = 566,
     MEMORY_SYM = 567,
     MERGE_SYM = 568,
     MESSAGE_TEXT_SYM = 569,
     MICROSECOND_SYM = 570,
     MIGRATE_SYM = 571,
     MINUTE_MICROSECOND_SYM = 572,
     MINUTE_SECOND_SYM = 573,
     MINUTE_SYM = 574,
     MIN_ROWS = 575,
     MIN_SYM = 576,
     MODE_SYM = 577,
     MODIFIES_SYM = 578,
     MODIFY_SYM = 579,
     MOD_SYM = 580,
     MONTH_SYM = 581,
     MULTILINESTRING = 582,
     MULTIPOINT = 583,
     MULTIPOLYGON = 584,
     MUTEX_SYM = 585,
     MYSQL_ERRNO_SYM = 586,
     NAMES_SYM = 587,
     NAME_SYM = 588,
     NATIONAL_SYM = 589,
     NATURAL = 590,
     NCHAR_STRING = 591,
     NCHAR_SYM = 592,
     NDBCLUSTER_SYM = 593,
     NE = 594,
     NEG = 595,
     NEW_SYM = 596,
     NEXT_SYM = 597,
     NODEGROUP_SYM = 598,
     NONE_SYM = 599,
     NOT2_SYM = 600,
     NOT_SYM = 601,
     NOW_SYM = 602,
     NO_SYM = 603,
     NO_WAIT_SYM = 604,
     NO_WRITE_TO_BINLOG = 605,
     NULL_SYM = 606,
     NUM = 607,
     NUMBER_SYM = 608,
     NUMERIC_SYM = 609,
     NVARCHAR_SYM = 610,
     OFFSET_SYM = 611,
     OLD_PASSWORD = 612,
     ON = 613,
     ONE_SHOT_SYM = 614,
     ONE_SYM = 615,
     OPEN_SYM = 616,
     OPTIMIZE = 617,
     OPTIONS_SYM = 618,
     OPTION = 619,
     OPTIONALLY = 620,
     OR2_SYM = 621,
     ORDER_SYM = 622,
     OR_OR_SYM = 623,
     OR_SYM = 624,
     OUTER = 625,
     OUTFILE = 626,
     OUT_SYM = 627,
     OWNER_SYM = 628,
     PACK_KEYS_SYM = 629,
     PAGE_SYM = 630,
     PARAM_MARKER = 631,
     PARSER_SYM = 632,
     PARTIAL = 633,
     PARTITION_SYM = 634,
     PARTITIONS_SYM = 635,
     PARTITIONING_SYM = 636,
     PASSWORD = 637,
     PHASE_SYM = 638,
     PLUGIN_DIR_SYM = 639,
     PLUGIN_SYM = 640,
     PLUGINS_SYM = 641,
     POINT_SYM = 642,
     POLYGON = 643,
     PORT_SYM = 644,
     POSITION_SYM = 645,
     PRECISION = 646,
     PREPARE_SYM = 647,
     PRESERVE_SYM = 648,
     PREV_SYM = 649,
     PRIMARY_SYM = 650,
     PRIVILEGES = 651,
     PROCEDURE_SYM = 652,
     PROCESS = 653,
     PROCESSLIST_SYM = 654,
     PROFILE_SYM = 655,
     PROFILES_SYM = 656,
     PROXY_SYM = 657,
     PURGE = 658,
     QUARTER_SYM = 659,
     QUERY_SYM = 660,
     QUICK = 661,
     RANGE_SYM = 662,
     READS_SYM = 663,
     READ_ONLY_SYM = 664,
     READ_SYM = 665,
     READ_WRITE_SYM = 666,
     REAL = 667,
     REBUILD_SYM = 668,
     RECOVER_SYM = 669,
     REDOFILE_SYM = 670,
     REDO_BUFFER_SIZE_SYM = 671,
     REDUNDANT_SYM = 672,
     REFERENCES = 673,
     REGEXP = 674,
     RELAY = 675,
     RELAYLOG_SYM = 676,
     RELAY_LOG_FILE_SYM = 677,
     RELAY_LOG_POS_SYM = 678,
     RELAY_THREAD = 679,
     RELEASE_SYM = 680,
     RELOAD = 681,
     REMOVE_SYM = 682,
     RENAME = 683,
     REORGANIZE_SYM = 684,
     REPAIR = 685,
     REPEATABLE_SYM = 686,
     REPEAT_SYM = 687,
     REPLACE = 688,
     REPLICATION = 689,
     REQUIRE_SYM = 690,
     RESET_SYM = 691,
     RESIGNAL_SYM = 692,
     RESOURCES = 693,
     RESTORE_SYM = 694,
     RESTRICT = 695,
     RESUME_SYM = 696,
     RETURNED_SQLSTATE_SYM = 697,
     RETURNS_SYM = 698,
     RETURN_SYM = 699,
     REVERSE_SYM = 700,
     REVOKE = 701,
     RIGHT = 702,
     ROLLBACK_SYM = 703,
     ROLLUP_SYM = 704,
     ROUTINE_SYM = 705,
     ROWS_SYM = 706,
     ROW_FORMAT_SYM = 707,
     ROW_SYM = 708,
     ROW_COUNT_SYM = 709,
     RTREE_SYM = 710,
     SAVEPOINT_SYM = 711,
     SCHEDULE_SYM = 712,
     SCHEMA_NAME_SYM = 713,
     SECOND_MICROSECOND_SYM = 714,
     SECOND_SYM = 715,
     SECURITY_SYM = 716,
     SELECT_SYM = 717,
     SENSITIVE_SYM = 718,
     SEPARATOR_SYM = 719,
     SERIALIZABLE_SYM = 720,
     SERIAL_SYM = 721,
     SESSION_SYM = 722,
     SERVER_SYM = 723,
     SERVER_OPTIONS = 724,
     SET = 725,
     SET_VAR = 726,
     SHARE_SYM = 727,
     SHIFT_LEFT = 728,
     SHIFT_RIGHT = 729,
     SHOW = 730,
     SHUTDOWN = 731,
     SIGNAL_SYM = 732,
     SIGNED_SYM = 733,
     SIMPLE_SYM = 734,
     SLAVE = 735,
     SLOW = 736,
     SMALLINT = 737,
     SNAPSHOT_SYM = 738,
     SOCKET_SYM = 739,
     SONAME_SYM = 740,
     SOUNDS_SYM = 741,
     SOURCE_SYM = 742,
     SPATIAL_SYM = 743,
     SPECIFIC_SYM = 744,
     SQLEXCEPTION_SYM = 745,
     SQLSTATE_SYM = 746,
     SQLWARNING_SYM = 747,
     SQL_BIG_RESULT = 748,
     SQL_BUFFER_RESULT = 749,
     SQL_CACHE_SYM = 750,
     SQL_CALC_FOUND_ROWS = 751,
     SQL_NO_CACHE_SYM = 752,
     SQL_SMALL_RESULT = 753,
     SQL_SYM = 754,
     SQL_THREAD = 755,
     SSL_SYM = 756,
     STARTING = 757,
     STARTS_SYM = 758,
     START_SYM = 759,
     STATUS_SYM = 760,
     STDDEV_SAMP_SYM = 761,
     STD_SYM = 762,
     STOP_SYM = 763,
     STORAGE_SYM = 764,
     STRAIGHT_JOIN = 765,
     STRING_SYM = 766,
     SUBCLASS_ORIGIN_SYM = 767,
     SUBDATE_SYM = 768,
     SUBJECT_SYM = 769,
     SUBPARTITIONS_SYM = 770,
     SUBPARTITION_SYM = 771,
     SUBSTRING = 772,
     SUM_SYM = 773,
     SUPER_SYM = 774,
     SUSPEND_SYM = 775,
     SWAPS_SYM = 776,
     SWITCHES_SYM = 777,
     SYSDATE = 778,
     TABLES = 779,
     TABLESPACE = 780,
     TABLE_REF_PRIORITY = 781,
     TABLE_SYM = 782,
     TABLE_CHECKSUM_SYM = 783,
     TABLE_NAME_SYM = 784,
     TEMPORARY = 785,
     TEMPTABLE_SYM = 786,
     TERMINATED = 787,
     TEXT_STRING = 788,
     TEXT_SYM = 789,
     THAN_SYM = 790,
     THEN_SYM = 791,
     TIMESTAMP = 792,
     TIMESTAMP_ADD = 793,
     TIMESTAMP_DIFF = 794,
     TIME_SYM = 795,
     TINYBLOB = 796,
     TINYINT = 797,
     TINYTEXT = 798,
     TO_SYM = 799,
     TRAILING = 800,
     TRANSACTION_SYM = 801,
     TRIGGERS_SYM = 802,
     TRIGGER_SYM = 803,
     TRIM = 804,
     TRUE_SYM = 805,
     TRUNCATE_SYM = 806,
     TYPES_SYM = 807,
     TYPE_SYM = 808,
     UDF_RETURNS_SYM = 809,
     ULONGLONG_NUM = 810,
     UNCOMMITTED_SYM = 811,
     UNDEFINED_SYM = 812,
     UNDERSCORE_CHARSET = 813,
     UNDOFILE_SYM = 814,
     UNDO_BUFFER_SIZE_SYM = 815,
     UNDO_SYM = 816,
     UNICODE_SYM = 817,
     UNINSTALL_SYM = 818,
     UNION_SYM = 819,
     UNIQUE_SYM = 820,
     UNKNOWN_SYM = 821,
     UNLOCK_SYM = 822,
     UNSIGNED = 823,
     UNTIL_SYM = 824,
     UPDATE_SYM = 825,
     UPGRADE_SYM = 826,
     USAGE = 827,
     USER = 828,
     USE_FRM = 829,
     USE_SYM = 830,
     USING = 831,
     UTC_DATE_SYM = 832,
     UTC_TIMESTAMP_SYM = 833,
     UTC_TIME_SYM = 834,
     VALUES = 835,
     VALUE_SYM = 836,
     VARBINARY = 837,
     VARCHAR = 838,
     VARIABLES = 839,
     VARIANCE_SYM = 840,
     VARYING = 841,
     VAR_SAMP_SYM = 842,
     VIEW_SYM = 843,
     WAIT_SYM = 844,
     WARNINGS = 845,
     WEEK_SYM = 846,
     WEIGHT_STRING_SYM = 847,
     WHEN_SYM = 848,
     WHERE = 849,
     WHILE_SYM = 850,
     WITH = 851,
     WITH_CUBE_SYM = 852,
     WITH_ROLLUP_SYM = 853,
     WORK_SYM = 854,
     WRAPPER_SYM = 855,
     WRITE_SYM = 856,
     X509_SYM = 857,
     XA_SYM = 858,
     XML_SYM = 859,
     XOR = 860,
     YEAR_MONTH_SYM = 861,
     YEAR_SYM = 862,
     ZEROFILL = 863
   };
#endif
/* Tokens.  */
#define ABORT_SYM 258
#define ACCESSIBLE_SYM 259
#define ACTION 260
#define ADD 261
#define ADDDATE_SYM 262
#define AFTER_SYM 263
#define AGAINST 264
#define AGGREGATE_SYM 265
#define ALGORITHM_SYM 266
#define ALL 267
#define ALTER 268
#define ANALYZE_SYM 269
#define AND_AND_SYM 270
#define AND_SYM 271
#define ANY_SYM 272
#define AS 273
#define ASC 274
#define ASCII_SYM 275
#define ASENSITIVE_SYM 276
#define AT_SYM 277
#define AUTHORS_SYM 278
#define AUTOEXTEND_SIZE_SYM 279
#define AUTO_INC 280
#define AVG_ROW_LENGTH 281
#define AVG_SYM 282
#define BACKUP_SYM 283
#define BEFORE_SYM 284
#define BEGIN_SYM 285
#define BETWEEN_SYM 286
#define BIGINT 287
#define BINARY 288
#define BINLOG_SYM 289
#define BIN_NUM 290
#define BIT_AND 291
#define BIT_OR 292
#define BIT_SYM 293
#define BIT_XOR 294
#define BLOB_SYM 295
#define BLOCK_SYM 296
#define BOOLEAN_SYM 297
#define BOOL_SYM 298
#define BOTH 299
#define BTREE_SYM 300
#define BY 301
#define BYTE_SYM 302
#define CACHE_SYM 303
#define CALL_SYM 304
#define CASCADE 305
#define CASCADED 306
#define CASE_SYM 307
#define CAST_SYM 308
#define CATALOG_NAME_SYM 309
#define CHAIN_SYM 310
#define CHANGE 311
#define CHANGED 312
#define CHARSET 313
#define CHAR_SYM 314
#define CHECKSUM_SYM 315
#define CHECK_SYM 316
#define CIPHER_SYM 317
#define CLASS_ORIGIN_SYM 318
#define CLIENT_SYM 319
#define CLOSE_SYM 320
#define COALESCE 321
#define CODE_SYM 322
#define COLLATE_SYM 323
#define COLLATION_SYM 324
#define COLUMNS 325
#define COLUMN_SYM 326
#define COLUMN_NAME_SYM 327
#define COMMENT_SYM 328
#define COMMITTED_SYM 329
#define COMMIT_SYM 330
#define COMPACT_SYM 331
#define COMPLETION_SYM 332
#define COMPRESSED_SYM 333
#define CONCURRENT 334
#define CONDITION_SYM 335
#define CONNECTION_SYM 336
#define CONSISTENT_SYM 337
#define CONSTRAINT 338
#define CONSTRAINT_CATALOG_SYM 339
#define CONSTRAINT_NAME_SYM 340
#define CONSTRAINT_SCHEMA_SYM 341
#define CONTAINS_SYM 342
#define CONTEXT_SYM 343
#define CONTINUE_SYM 344
#define CONTRIBUTORS_SYM 345
#define CONVERT_SYM 346
#define COUNT_SYM 347
#define CPU_SYM 348
#define CREATE 349
#define CROSS 350
#define CUBE_SYM 351
#define CURDATE 352
#define CURRENT_SYM 353
#define CURRENT_USER 354
#define CURSOR_SYM 355
#define CURSOR_NAME_SYM 356
#define CURTIME 357
#define DATABASE 358
#define DATABASES 359
#define DATAFILE_SYM 360
#define DATA_SYM 361
#define DATETIME 362
#define DATE_ADD_INTERVAL 363
#define DATE_SUB_INTERVAL 364
#define DATE_SYM 365
#define DAY_HOUR_SYM 366
#define DAY_MICROSECOND_SYM 367
#define DAY_MINUTE_SYM 368
#define DAY_SECOND_SYM 369
#define DAY_SYM 370
#define DEALLOCATE_SYM 371
#define DECIMAL_NUM 372
#define DECIMAL_SYM 373
#define DECLARE_SYM 374
#define DEFAULT 375
#define DEFAULT_AUTH_SYM 376
#define DEFINER_SYM 377
#define DELAYED_SYM 378
#define DELAY_KEY_WRITE_SYM 379
#define DELETE_SYM 380
#define DESC 381
#define DESCRIBE 382
#define DES_KEY_FILE 383
#define DETERMINISTIC_SYM 384
#define DIAGNOSTICS_SYM 385
#define DIRECTORY_SYM 386
#define DISABLE_SYM 387
#define DISCARD 388
#define DISK_SYM 389
#define DISTINCT 390
#define DIV_SYM 391
#define DOUBLE_SYM 392
#define DO_SYM 393
#define DROP 394
#define DUAL_SYM 395
#define DUMPFILE 396
#define DUPLICATE_SYM 397
#define DYNAMIC_SYM 398
#define EACH_SYM 399
#define ELSE 400
#define ELSEIF_SYM 401
#define ENABLE_SYM 402
#define ENCLOSED 403
#define END 404
#define ENDS_SYM 405
#define END_OF_INPUT 406
#define ENGINES_SYM 407
#define ENGINE_SYM 408
#define ENUM 409
#define EQ 410
#define EQUAL_SYM 411
#define ERROR_SYM 412
#define ERRORS 413
#define ESCAPED 414
#define ESCAPE_SYM 415
#define EVENTS_SYM 416
#define EVENT_SYM 417
#define EVERY_SYM 418
#define EXCHANGE_SYM 419
#define EXECUTE_SYM 420
#define EXISTS 421
#define EXIT_SYM 422
#define EXPANSION_SYM 423
#define EXTENDED_SYM 424
#define EXTENT_SIZE_SYM 425
#define EXTRACT_SYM 426
#define FALSE_SYM 427
#define FAST_SYM 428
#define FAULTS_SYM 429
#define FETCH_SYM 430
#define FILE_SYM 431
#define FIRST_SYM 432
#define FIXED_SYM 433
#define FLOAT_NUM 434
#define FLOAT_SYM 435
#define FLUSH_SYM 436
#define FORCE_SYM 437
#define FOREIGN 438
#define FOR_SYM 439
#define FOUND_SYM 440
#define FROM 441
#define FULL 442
#define FULLTEXT_SYM 443
#define FUNCTION_SYM 444
#define GE 445
#define GENERAL 446
#define GEOMETRYCOLLECTION 447
#define GEOMETRY_SYM 448
#define GET_FORMAT 449
#define GET_SYM 450
#define GLOBAL_SYM 451
#define GRANT 452
#define GRANTS 453
#define GROUP_SYM 454
#define GROUP_CONCAT_SYM 455
#define GT_SYM 456
#define HANDLER_SYM 457
#define HASH_SYM 458
#define HAVING 459
#define HELP_SYM 460
#define HEX_NUM 461
#define HIGH_PRIORITY 462
#define HOST_SYM 463
#define HOSTS_SYM 464
#define HOUR_MICROSECOND_SYM 465
#define HOUR_MINUTE_SYM 466
#define HOUR_SECOND_SYM 467
#define HOUR_SYM 468
#define IDENT 469
#define IDENTIFIED_SYM 470
#define IDENT_QUOTED 471
#define IF 472
#define IGNORE_SYM 473
#define IGNORE_SERVER_IDS_SYM 474
#define IMPORT 475
#define INDEXES 476
#define INDEX_SYM 477
#define INFILE 478
#define INITIAL_SIZE_SYM 479
#define INNER_SYM 480
#define INOUT_SYM 481
#define INSENSITIVE_SYM 482
#define INSERT 483
#define INSERT_METHOD 484
#define INSTALL_SYM 485
#define INTERVAL_SYM 486
#define INTO 487
#define INT_SYM 488
#define INVOKER_SYM 489
#define IN_SYM 490
#define IO_SYM 491
#define IPC_SYM 492
#define IS 493
#define ISOLATION 494
#define ISSUER_SYM 495
#define ITERATE_SYM 496
#define JOIN_SYM 497
#define KEYS 498
#define KEY_BLOCK_SIZE 499
#define KEY_SYM 500
#define KILL_SYM 501
#define LANGUAGE_SYM 502
#define LAST_SYM 503
#define LE 504
#define LEADING 505
#define LEAVES 506
#define LEAVE_SYM 507
#define LEFT 508
#define LESS_SYM 509
#define LEVEL_SYM 510
#define LEX_HOSTNAME 511
#define LIKE 512
#define LIMIT 513
#define LINEAR_SYM 514
#define LINES 515
#define LINESTRING 516
#define LIST_SYM 517
#define LOAD 518
#define LOCAL_SYM 519
#define LOCATOR_SYM 520
#define LOCKS_SYM 521
#define LOCK_SYM 522
#define LOGFILE_SYM 523
#define LOGS_SYM 524
#define LONGBLOB 525
#define LONGTEXT 526
#define LONG_NUM 527
#define LONG_SYM 528
#define LOOP_SYM 529
#define LOW_PRIORITY 530
#define LT 531
#define MASTER_BIND_SYM 532
#define MASTER_CONNECT_RETRY_SYM 533
#define MASTER_DELAY_SYM 534
#define MASTER_HOST_SYM 535
#define MASTER_LOG_FILE_SYM 536
#define MASTER_LOG_POS_SYM 537
#define MASTER_PASSWORD_SYM 538
#define MASTER_PORT_SYM 539
#define MASTER_RETRY_COUNT_SYM 540
#define MASTER_SERVER_ID_SYM 541
#define MASTER_SSL_CAPATH_SYM 542
#define MASTER_SSL_CA_SYM 543
#define MASTER_SSL_CERT_SYM 544
#define MASTER_SSL_CIPHER_SYM 545
#define MASTER_SSL_CRL_SYM 546
#define MASTER_SSL_CRLPATH_SYM 547
#define MASTER_SSL_KEY_SYM 548
#define MASTER_SSL_SYM 549
#define MASTER_SSL_VERIFY_SERVER_CERT_SYM 550
#define MASTER_SYM 551
#define MASTER_USER_SYM 552
#define MASTER_HEARTBEAT_PERIOD_SYM 553
#define MATCH 554
#define MAX_CONNECTIONS_PER_HOUR 555
#define MAX_QUERIES_PER_HOUR 556
#define MAX_ROWS 557
#define MAX_SIZE_SYM 558
#define MAX_SYM 559
#define MAX_UPDATES_PER_HOUR 560
#define MAX_USER_CONNECTIONS_SYM 561
#define MAX_VALUE_SYM 562
#define MEDIUMBLOB 563
#define MEDIUMINT 564
#define MEDIUMTEXT 565
#define MEDIUM_SYM 566
#define MEMORY_SYM 567
#define MERGE_SYM 568
#define MESSAGE_TEXT_SYM 569
#define MICROSECOND_SYM 570
#define MIGRATE_SYM 571
#define MINUTE_MICROSECOND_SYM 572
#define MINUTE_SECOND_SYM 573
#define MINUTE_SYM 574
#define MIN_ROWS 575
#define MIN_SYM 576
#define MODE_SYM 577
#define MODIFIES_SYM 578
#define MODIFY_SYM 579
#define MOD_SYM 580
#define MONTH_SYM 581
#define MULTILINESTRING 582
#define MULTIPOINT 583
#define MULTIPOLYGON 584
#define MUTEX_SYM 585
#define MYSQL_ERRNO_SYM 586
#define NAMES_SYM 587
#define NAME_SYM 588
#define NATIONAL_SYM 589
#define NATURAL 590
#define NCHAR_STRING 591
#define NCHAR_SYM 592
#define NDBCLUSTER_SYM 593
#define NE 594
#define NEG 595
#define NEW_SYM 596
#define NEXT_SYM 597
#define NODEGROUP_SYM 598
#define NONE_SYM 599
#define NOT2_SYM 600
#define NOT_SYM 601
#define NOW_SYM 602
#define NO_SYM 603
#define NO_WAIT_SYM 604
#define NO_WRITE_TO_BINLOG 605
#define NULL_SYM 606
#define NUM 607
#define NUMBER_SYM 608
#define NUMERIC_SYM 609
#define NVARCHAR_SYM 610
#define OFFSET_SYM 611
#define OLD_PASSWORD 612
#define ON 613
#define ONE_SHOT_SYM 614
#define ONE_SYM 615
#define OPEN_SYM 616
#define OPTIMIZE 617
#define OPTIONS_SYM 618
#define OPTION 619
#define OPTIONALLY 620
#define OR2_SYM 621
#define ORDER_SYM 622
#define OR_OR_SYM 623
#define OR_SYM 624
#define OUTER 625
#define OUTFILE 626
#define OUT_SYM 627
#define OWNER_SYM 628
#define PACK_KEYS_SYM 629
#define PAGE_SYM 630
#define PARAM_MARKER 631
#define PARSER_SYM 632
#define PARTIAL 633
#define PARTITION_SYM 634
#define PARTITIONS_SYM 635
#define PARTITIONING_SYM 636
#define PASSWORD 637
#define PHASE_SYM 638
#define PLUGIN_DIR_SYM 639
#define PLUGIN_SYM 640
#define PLUGINS_SYM 641
#define POINT_SYM 642
#define POLYGON 643
#define PORT_SYM 644
#define POSITION_SYM 645
#define PRECISION 646
#define PREPARE_SYM 647
#define PRESERVE_SYM 648
#define PREV_SYM 649
#define PRIMARY_SYM 650
#define PRIVILEGES 651
#define PROCEDURE_SYM 652
#define PROCESS 653
#define PROCESSLIST_SYM 654
#define PROFILE_SYM 655
#define PROFILES_SYM 656
#define PROXY_SYM 657
#define PURGE 658
#define QUARTER_SYM 659
#define QUERY_SYM 660
#define QUICK 661
#define RANGE_SYM 662
#define READS_SYM 663
#define READ_ONLY_SYM 664
#define READ_SYM 665
#define READ_WRITE_SYM 666
#define REAL 667
#define REBUILD_SYM 668
#define RECOVER_SYM 669
#define REDOFILE_SYM 670
#define REDO_BUFFER_SIZE_SYM 671
#define REDUNDANT_SYM 672
#define REFERENCES 673
#define REGEXP 674
#define RELAY 675
#define RELAYLOG_SYM 676
#define RELAY_LOG_FILE_SYM 677
#define RELAY_LOG_POS_SYM 678
#define RELAY_THREAD 679
#define RELEASE_SYM 680
#define RELOAD 681
#define REMOVE_SYM 682
#define RENAME 683
#define REORGANIZE_SYM 684
#define REPAIR 685
#define REPEATABLE_SYM 686
#define REPEAT_SYM 687
#define REPLACE 688
#define REPLICATION 689
#define REQUIRE_SYM 690
#define RESET_SYM 691
#define RESIGNAL_SYM 692
#define RESOURCES 693
#define RESTORE_SYM 694
#define RESTRICT 695
#define RESUME_SYM 696
#define RETURNED_SQLSTATE_SYM 697
#define RETURNS_SYM 698
#define RETURN_SYM 699
#define REVERSE_SYM 700
#define REVOKE 701
#define RIGHT 702
#define ROLLBACK_SYM 703
#define ROLLUP_SYM 704
#define ROUTINE_SYM 705
#define ROWS_SYM 706
#define ROW_FORMAT_SYM 707
#define ROW_SYM 708
#define ROW_COUNT_SYM 709
#define RTREE_SYM 710
#define SAVEPOINT_SYM 711
#define SCHEDULE_SYM 712
#define SCHEMA_NAME_SYM 713
#define SECOND_MICROSECOND_SYM 714
#define SECOND_SYM 715
#define SECURITY_SYM 716
#define SELECT_SYM 717
#define SENSITIVE_SYM 718
#define SEPARATOR_SYM 719
#define SERIALIZABLE_SYM 720
#define SERIAL_SYM 721
#define SESSION_SYM 722
#define SERVER_SYM 723
#define SERVER_OPTIONS 724
#define SET 725
#define SET_VAR 726
#define SHARE_SYM 727
#define SHIFT_LEFT 728
#define SHIFT_RIGHT 729
#define SHOW 730
#define SHUTDOWN 731
#define SIGNAL_SYM 732
#define SIGNED_SYM 733
#define SIMPLE_SYM 734
#define SLAVE 735
#define SLOW 736
#define SMALLINT 737
#define SNAPSHOT_SYM 738
#define SOCKET_SYM 739
#define SONAME_SYM 740
#define SOUNDS_SYM 741
#define SOURCE_SYM 742
#define SPATIAL_SYM 743
#define SPECIFIC_SYM 744
#define SQLEXCEPTION_SYM 745
#define SQLSTATE_SYM 746
#define SQLWARNING_SYM 747
#define SQL_BIG_RESULT 748
#define SQL_BUFFER_RESULT 749
#define SQL_CACHE_SYM 750
#define SQL_CALC_FOUND_ROWS 751
#define SQL_NO_CACHE_SYM 752
#define SQL_SMALL_RESULT 753
#define SQL_SYM 754
#define SQL_THREAD 755
#define SSL_SYM 756
#define STARTING 757
#define STARTS_SYM 758
#define START_SYM 759
#define STATUS_SYM 760
#define STDDEV_SAMP_SYM 761
#define STD_SYM 762
#define STOP_SYM 763
#define STORAGE_SYM 764
#define STRAIGHT_JOIN 765
#define STRING_SYM 766
#define SUBCLASS_ORIGIN_SYM 767
#define SUBDATE_SYM 768
#define SUBJECT_SYM 769
#define SUBPARTITIONS_SYM 770
#define SUBPARTITION_SYM 771
#define SUBSTRING 772
#define SUM_SYM 773
#define SUPER_SYM 774
#define SUSPEND_SYM 775
#define SWAPS_SYM 776
#define SWITCHES_SYM 777
#define SYSDATE 778
#define TABLES 779
#define TABLESPACE 780
#define TABLE_REF_PRIORITY 781
#define TABLE_SYM 782
#define TABLE_CHECKSUM_SYM 783
#define TABLE_NAME_SYM 784
#define TEMPORARY 785
#define TEMPTABLE_SYM 786
#define TERMINATED 787
#define TEXT_STRING 788
#define TEXT_SYM 789
#define THAN_SYM 790
#define THEN_SYM 791
#define TIMESTAMP 792
#define TIMESTAMP_ADD 793
#define TIMESTAMP_DIFF 794
#define TIME_SYM 795
#define TINYBLOB 796
#define TINYINT 797
#define TINYTEXT 798
#define TO_SYM 799
#define TRAILING 800
#define TRANSACTION_SYM 801
#define TRIGGERS_SYM 802
#define TRIGGER_SYM 803
#define TRIM 804
#define TRUE_SYM 805
#define TRUNCATE_SYM 806
#define TYPES_SYM 807
#define TYPE_SYM 808
#define UDF_RETURNS_SYM 809
#define ULONGLONG_NUM 810
#define UNCOMMITTED_SYM 811
#define UNDEFINED_SYM 812
#define UNDERSCORE_CHARSET 813
#define UNDOFILE_SYM 814
#define UNDO_BUFFER_SIZE_SYM 815
#define UNDO_SYM 816
#define UNICODE_SYM 817
#define UNINSTALL_SYM 818
#define UNION_SYM 819
#define UNIQUE_SYM 820
#define UNKNOWN_SYM 821
#define UNLOCK_SYM 822
#define UNSIGNED 823
#define UNTIL_SYM 824
#define UPDATE_SYM 825
#define UPGRADE_SYM 826
#define USAGE 827
#define USER 828
#define USE_FRM 829
#define USE_SYM 830
#define USING 831
#define UTC_DATE_SYM 832
#define UTC_TIMESTAMP_SYM 833
#define UTC_TIME_SYM 834
#define VALUES 835
#define VALUE_SYM 836
#define VARBINARY 837
#define VARCHAR 838
#define VARIABLES 839
#define VARIANCE_SYM 840
#define VARYING 841
#define VAR_SAMP_SYM 842
#define VIEW_SYM 843
#define WAIT_SYM 844
#define WARNINGS 845
#define WEEK_SYM 846
#define WEIGHT_STRING_SYM 847
#define WHEN_SYM 848
#define WHERE 849
#define WHILE_SYM 850
#define WITH 851
#define WITH_CUBE_SYM 852
#define WITH_ROLLUP_SYM 853
#define WORK_SYM 854
#define WRAPPER_SYM 855
#define WRITE_SYM 856
#define X509_SYM 857
#define XA_SYM 858
#define XML_SYM 859
#define XOR 860
#define YEAR_MONTH_SYM 861
#define YEAR_SYM 862
#define ZEROFILL 863




/* Copy the first part of user declarations.  */
#line 24 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"

/* thd is passed as an argument to yyparse(), and subsequently to yylex().
** The type will be void*, so it must be  cast to (THD*) when used.
** Use the YYTHD macro for this.
*/
#define YYPARSE_PARAM yythd
#define YYLEX_PARAM yythd
#define YYTHD ((THD *)yythd)
#define YYLIP (& YYTHD->m_parser_state->m_lip)
#define YYPS (& YYTHD->m_parser_state->m_yacc)
#define YYCSCL  YYTHD->variables.character_set_client

#define MYSQL_YACC
#define YYINITDEPTH 100
#define YYMAXDEPTH 3200                        /* Because of 64K stack */
#define Lex (YYTHD->lex)
#define Select Lex->current_select
#include "sql_priv.h"
#include "unireg.h"                    // REQUIRED: for other includes
#include "sql_parse.h"                        /* comp_*_creator */
#include "sql_table.h"                        /* primary_key_name */
#include "sql_partition.h"  /* mem_alloc_error, partition_info, HASH_PARTITION */
#include "sql_acl.h"                          /* *_ACL */
#include "password.h"       /* my_make_scrambled_password_323, my_make_scrambled_password */
#include "sql_class.h"      /* Key_part_spec, enum_filetype, Diag_condition_item_name */
#include "rpl_slave.h"
#include "lex_symbol.h"
#include "item_create.h"
#include "sp_head.h"
#include "sp_pcontext.h"
#include "sp_rcontext.h"
#include "sp.h"
#include "sql_alter.h"                         // Sql_cmd_alter_table*
#include "sql_truncate.h"                      // Sql_cmd_truncate_table
#include "sql_admin.h"                         // Sql_cmd_analyze/Check..._table
#include "sql_partition_admin.h"               // Sql_cmd_alter_table_*_part.
#include "sql_handler.h"                       // Sql_cmd_handler_*
#include "sql_signal.h"
#include "sql_get_diagnostics.h"               // Sql_cmd_get_diagnostics
#include "event_parse_data.h"
#include <myisam.h>
#include <myisammrg.h>
#include "keycaches.h"
#include "set_var.h"

/* this is to get the bison compilation windows warnings out */
#ifdef _MSC_VER
/* warning C4065: switch statement contains 'default' but no 'case' labels */
#pragma warning (disable : 4065)
#endif

using std::min;
using std::max;

int yylex(void *yylval, void *yythd);

#define yyoverflow(A,B,C,D,E,F)               \
  {                                           \
    ulong val= *(F);                          \
    if (my_yyoverflow((B), (D), &val))        \
    {                                         \
      yyerror((char*) (A));                   \
      return 2;                               \
    }                                         \
    else                                      \
    {                                         \
      *(F)= (YYSIZE_T)val;                    \
    }                                         \
  }

#define MYSQL_YYABORT                         \
  do                                          \
  {                                           \
    LEX::cleanup_lex_after_parse_error(YYTHD);\
    YYABORT;                                  \
  } while (0)

#define MYSQL_YYABORT_UNLESS(A)         \
  if (!(A))                             \
  {                                     \
    my_parse_error(ER(ER_SYNTAX_ERROR));\
    MYSQL_YYABORT;                      \
  }

/*
  Work around for broken code generated by bison 1.875.

  The code generated by bison 1.875a and later, bison 2.1 and bison 2.2 is ok.
  With bison 1.875 however, the generated code contains:
<pre>
  yyerrlab1:
  #if defined (__GNUC_MINOR__) && 2093 <= (__GNUC__ * 1000 + __GNUC_MINOR__)
    __attribute__ ((__unused__))
  #endif
</pre>
  This usage of __attribute__ is illegal, so we remove it.
  See the following references for details:
  http://lists.gnu.org/archive/html/bug-bison/2004-02/msg00014.html
  http://gcc.gnu.org/bugzilla/show_bug.cgi?id=14273
*/

#if defined (__GNUC_MINOR__) && 2093 <= (__GNUC__ * 1000 + __GNUC_MINOR__)
#undef __attribute__
#define __attribute__(X)
#endif


#ifndef DBUG_OFF
#define YYDEBUG 1
#else
#define YYDEBUG 0
#endif

/**
  @brief Push an error message into MySQL error stack with line
  and position information.

  This function provides semantic action implementers with a way
  to push the famous "You have a syntax error near..." error
  message into the error stack, which is normally produced only if
  a parse error is discovered internally by the Bison generated
  parser.
*/

void my_parse_error(const char *s)
{
  THD *thd= current_thd;
  Lex_input_stream *lip= & thd->m_parser_state->m_lip;

  const char *yytext= lip->get_tok_start();
  if (!yytext)
    yytext= "";

  /* Push an error into the error stack */
  ErrConvString err(yytext, thd->variables.character_set_client);
  my_printf_error(ER_PARSE_ERROR,  ER(ER_PARSE_ERROR), MYF(0), s,
                  err.ptr(), lip->yylineno);
}

/**
  @brief Bison callback to report a syntax/OOM error

  This function is invoked by the bison-generated parser
  when a syntax error, a parse error or an out-of-memory
  condition occurs. This function is not invoked when the
  parser is requested to abort by semantic action code
  by means of YYABORT or YYACCEPT macros. This is why these
  macros should not be used (use MYSQL_YYABORT/MYSQL_YYACCEPT
  instead).

  The parser will abort immediately after invoking this callback.

  This function is not for use in semantic actions and is internal to
  the parser, as it performs some pre-return cleanup. 
  In semantic actions, please use my_parse_error or my_error to
  push an error into the error stack and MYSQL_YYABORT
  to abort from the parser.
*/

void MYSQLerror(const char *s)
{
  THD *thd= current_thd;

  /*
    Restore the original LEX if it was replaced when parsing
    a stored procedure. We must ensure that a parsing error
    does not leave any side effects in the THD.
  */
  LEX::cleanup_lex_after_parse_error(thd);

  /* "parse error" changed into "syntax error" between bison 1.75 and 1.875 */
  if (strcmp(s,"parse error") == 0 || strcmp(s,"syntax error") == 0)
    s= ER(ER_SYNTAX_ERROR);
  my_parse_error(s);
}


#ifndef DBUG_OFF
void turn_parser_debug_on()
{
  /*
     MYSQLdebug is in sql/sql_yacc.cc, in bison generated code.
     Turning this option on is **VERY** verbose, and should be
     used when investigating a syntax error problem only.

     The syntax to run with bison traces is as follows :
     - Starting a server manually :
       mysqld --debug="d,parser_debug" ...
     - Running a test :
       mysql-test-run.pl --mysqld="--debug=d,parser_debug" ...

     The result will be in the process stderr (var/log/master.err)
   */

  extern int yydebug;
  yydebug= 1;
}
#endif

static bool is_native_function(THD *thd, const LEX_STRING *name)
{
  if (find_native_function_builder(thd, *name))
    return true;

  if (is_lex_native_function(name))
    return true;

  return false;
}


/**
  Helper action for a case statement (entering the CASE).
  This helper is used for both 'simple' and 'searched' cases.
  This helper, with the other case_stmt_action_..., is executed when
  the following SQL code is parsed:
<pre>
CREATE PROCEDURE proc_19194_simple(i int)
BEGIN
  DECLARE str CHAR(10);

  CASE i
    WHEN 1 THEN SET str="1";
    WHEN 2 THEN SET str="2";
    WHEN 3 THEN SET str="3";
    ELSE SET str="unknown";
  END CASE;

  SELECT str;
END
</pre>
  The actions are used to generate the following code:
<pre>
SHOW PROCEDURE CODE proc_19194_simple;
Pos     Instruction
0       set str@1 NULL
1       set_case_expr (12) 0 i@0
2       jump_if_not 5(12) (case_expr@0 = 1)
3       set str@1 _latin1'1'
4       jump 12
5       jump_if_not 8(12) (case_expr@0 = 2)
6       set str@1 _latin1'2'
7       jump 12
8       jump_if_not 11(12) (case_expr@0 = 3)
9       set str@1 _latin1'3'
10      jump 12
11      set str@1 _latin1'unknown'
12      stmt 0 "SELECT str"
</pre>

  @param lex the parser lex context
*/

void case_stmt_action_case(LEX *lex)
{
  lex->sphead->new_cont_backpatch(NULL);

  /*
    BACKPATCH: Creating target label for the jump to
    "case_stmt_action_end_case"
    (Instruction 12 in the example)
  */

  lex->spcont->push_label(current_thd, EMPTY_STR, lex->sphead->instructions());
}

/**
  Helper action for a case expression statement (the expr in 'CASE expr').
  This helper is used for 'searched' cases only.
  @param lex the parser lex context
  @param expr the parsed expression
  @return 0 on success
*/

int case_stmt_action_expr(LEX *lex, Item* expr)
{
  sp_head *sp= lex->sphead;
  sp_pcontext *parsing_ctx= lex->spcont;
  int case_expr_id= parsing_ctx->register_case_expr();
  sp_instr_set_case_expr *i;

  if (parsing_ctx->push_case_expr_id(case_expr_id))
    return 1;

  i= new sp_instr_set_case_expr(sp->instructions(),
                                parsing_ctx, case_expr_id, expr, lex);

  sp->add_cont_backpatch(i);
  return sp->add_instr(i);
}

/**
  Helper action for a case when condition.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
  @param when the parsed expression for the WHEN clause
  @param simple true for simple cases, false for searched cases
*/

int case_stmt_action_when(LEX *lex, Item *when, bool simple)
{
  sp_head *sp= lex->sphead;
  sp_pcontext *ctx= lex->spcont;
  uint ip= sp->instructions();
  sp_instr_jump_if_not *i;
  Item_case_expr *var;
  Item *expr;

  if (simple)
  {
    var= new Item_case_expr(ctx->get_current_case_expr_id());

#ifndef DBUG_OFF
    if (var)
    {
      var->m_sp= sp;
    }
#endif

    expr= new Item_func_eq(var, when);
    i= new sp_instr_jump_if_not(ip, ctx, expr, lex);
  }
  else
    i= new sp_instr_jump_if_not(ip, ctx, when, lex);

  /*
    BACKPATCH: Registering forward jump from
    "case_stmt_action_when" to "case_stmt_action_then"
    (jump_if_not from instruction 2 to 5, 5 to 8 ... in the example)
  */

  return !test(i) ||
         sp->push_backpatch(i, ctx->push_label(current_thd, EMPTY_STR, 0)) ||
         sp->add_cont_backpatch(i) ||
         sp->add_instr(i);
}

/**
  Helper action for a case then statements.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
*/

int case_stmt_action_then(LEX *lex)
{
  sp_head *sp= lex->sphead;
  sp_pcontext *ctx= lex->spcont;
  uint ip= sp->instructions();
  sp_instr_jump *i = new sp_instr_jump(ip, ctx);
  if (!test(i) || sp->add_instr(i))
    return 1;

  /*
    BACKPATCH: Resolving forward jump from
    "case_stmt_action_when" to "case_stmt_action_then"
    (jump_if_not from instruction 2 to 5, 5 to 8 ... in the example)
  */

  sp->backpatch(ctx->pop_label());

  /*
    BACKPATCH: Registering forward jump from
    "case_stmt_action_then" to "case_stmt_action_end_case"
    (jump from instruction 4 to 12, 7 to 12 ... in the example)
  */

  return sp->push_backpatch(i, ctx->last_label());
}

/**
  Helper action for an end case.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
  @param simple true for simple cases, false for searched cases
*/

void case_stmt_action_end_case(LEX *lex, bool simple)
{
  /*
    BACKPATCH: Resolving forward jump from
    "case_stmt_action_then" to "case_stmt_action_end_case"
    (jump from instruction 4 to 12, 7 to 12 ... in the example)
  */
  lex->sphead->backpatch(lex->spcont->pop_label());

  if (simple)
    lex->spcont->pop_case_expr_id();

  lex->sphead->do_cont_backpatch();
}


static bool
find_sys_var_null_base(THD *thd, struct sys_var_with_base *tmp)
{
  tmp->var= find_sys_var(thd, tmp->base_name.str, tmp->base_name.length);

  if (tmp->var == NULL)
    my_error(ER_UNKNOWN_SYSTEM_VARIABLE, MYF(0), tmp->base_name.str);
  else
    tmp->base_name= null_lex_str;

  return thd->is_error();
}


/**
  Helper action for a SET statement.
  Used to push a system variable into the assignment list.

  @param thd      the current thread
  @param tmp      the system variable with base name
  @param var_type the scope of the variable
  @param val      the value being assigned to the variable

  @return TRUE if error, FALSE otherwise.
*/

static bool
set_system_variable(THD *thd, struct sys_var_with_base *tmp,
                    enum enum_var_type var_type, Item *val)
{
  set_var *var;
  LEX *lex= thd->lex;

  /* No AUTOCOMMIT from a stored function or trigger. */
  if (lex->spcont && tmp->var == Sys_autocommit_ptr)
    lex->sphead->m_flags|= sp_head::HAS_SET_AUTOCOMMIT_STMT;

  if (! (var= new set_var(var_type, tmp->var, &tmp->base_name, val)))
    return TRUE;

  return lex->var_list.push_back(var);
}


/**
  Helper action for a SET statement.
  Used to push a SP local variable into the assignment list.

  @param thd      the current thread
  @param var_type the SP local variable
  @param val      the value being assigned to the variable

  @return TRUE if error, FALSE otherwise.
*/

static bool
set_local_variable(THD *thd, sp_variable *spv, Item *val)
{
  Item *it;
  LEX *lex= thd->lex;
  sp_instr_set *sp_set;

  if (val)
    it= val;
  else if (spv->default_value)
    it= spv->default_value;
  else
  {
    it= new (thd->mem_root) Item_null();
    if (it == NULL)
      return TRUE;
  }

  sp_set= new sp_instr_set(lex->sphead->instructions(), lex->spcont,
                           spv->offset, it, spv->type, lex, TRUE);

  return (sp_set == NULL || lex->sphead->add_instr(sp_set));
}


/**
  Helper action for a SET statement.
  Used to SET a field of NEW row.

  @param thd      the current thread
  @param name     the field name
  @param val      the value being assigned to the row

  @return TRUE if error, FALSE otherwise.
*/

static bool
set_trigger_new_row(THD *thd, LEX_STRING *name, Item *val)
{
  LEX *lex= thd->lex;
  Item_trigger_field *trg_fld;
  sp_instr_set_trigger_field *sp_fld;

  /* QQ: Shouldn't this be field's default value ? */
  if (! val)
    val= new Item_null();

  DBUG_ASSERT(lex->trg_chistics.action_time == TRG_ACTION_BEFORE &&
              (lex->trg_chistics.event == TRG_EVENT_INSERT ||
               lex->trg_chistics.event == TRG_EVENT_UPDATE));

  trg_fld= new (thd->mem_root)
            Item_trigger_field(lex->current_context(),
                               Item_trigger_field::NEW_ROW,
                               name->str, UPDATE_ACL, FALSE);

  if (trg_fld == NULL)
    return TRUE;

  sp_fld= new sp_instr_set_trigger_field(lex->sphead->instructions(),
                                         lex->spcont, trg_fld, val, lex);

  if (sp_fld == NULL)
    return TRUE;

  /*
    Let us add this item to list of all Item_trigger_field
    objects in trigger.
  */
  lex->trg_table_fields.link_in_list(trg_fld, &trg_fld->next_trg_field);

  return lex->sphead->add_instr(sp_fld);
}


/**
  Create an object to represent a SP variable in the Item-hierarchy.

  @param  thd         The current thread.
  @param  name        The SP variable name.
  @param  spvar       The SP variable (optional).
  @param  start_in_q  Start position of the SP variable name in the query.
  @param  end_in_q    End position of the SP variable name in the query.

  @remark If spvar is not specified, the name is used to search for the
          variable in the parse-time context. If the variable does not
          exist, a error is set and NULL is returned to the caller.

  @return An Item_splocal object representing the SP variable, or NULL on error.
*/
static Item_splocal*
create_item_for_sp_var(THD *thd, LEX_STRING name, sp_variable *spvar,
                       const char *start_in_q, const char *end_in_q)
{
  Item_splocal *item;
  LEX *lex= thd->lex;
  uint pos_in_q, len_in_q;
  sp_pcontext *spc = lex->spcont;

  /* If necessary, look for the variable. */
  if (spc && !spvar)
    spvar= spc->find_variable(name, false);

  if (!spvar)
  {
    my_error(ER_SP_UNDECLARED_VAR, MYF(0), name.str);
    return NULL;
  }

  DBUG_ASSERT(spc && spvar);

  /* Position and length of the SP variable name in the query. */
  pos_in_q= start_in_q - lex->sphead->m_tmp_query;
  len_in_q= end_in_q - start_in_q;

  item= new (thd->mem_root)
    Item_splocal(name, spvar->offset, spvar->type, pos_in_q, len_in_q);

#ifndef DBUG_OFF
  if (item)
    item->m_sp= lex->sphead;
#endif

  return item;
}


/**
  Helper to resolve the SQL:2003 Syntax exception 1) in <in predicate>.
  See SQL:2003, Part 2, section 8.4 <in predicate>, Note 184, page 383.
  This function returns the proper item for the SQL expression
  <code>left [NOT] IN ( expr )</code>
  @param thd the current thread
  @param left the in predicand
  @param equal true for IN predicates, false for NOT IN predicates
  @param expr first and only expression of the in value list
  @return an expression representing the IN predicate.
*/
Item* handle_sql2003_note184_exception(THD *thd, Item* left, bool equal,
                                       Item *expr)
{
  /*
    Relevant references for this issue:
    - SQL:2003, Part 2, section 8.4 <in predicate>, page 383,
    - SQL:2003, Part 2, section 7.2 <row value expression>, page 296,
    - SQL:2003, Part 2, section 6.3 <value expression primary>, page 174,
    - SQL:2003, Part 2, section 7.15 <subquery>, page 370,
    - SQL:2003 Feature F561, "Full value expressions".

    The exception in SQL:2003 Note 184 means:
    Item_singlerow_subselect, which corresponds to a <scalar subquery>,
    should be re-interpreted as an Item_in_subselect, which corresponds
    to a <table subquery> when used inside an <in predicate>.

    Our reading of Note 184 is reccursive, so that all:
    - IN (( <subquery> ))
    - IN ((( <subquery> )))
    - IN '('^N <subquery> ')'^N
    - etc
    should be interpreted as a <table subquery>, no matter how deep in the
    expression the <subquery> is.
  */

  Item *result;

  DBUG_ENTER("handle_sql2003_note184_exception");

  if (expr->type() == Item::SUBSELECT_ITEM)
  {
    Item_subselect *expr2 = (Item_subselect*) expr;

    if (expr2->substype() == Item_subselect::SINGLEROW_SUBS)
    {
      Item_singlerow_subselect *expr3 = (Item_singlerow_subselect*) expr2;
      st_select_lex *subselect;

      /*
        Implement the mandated change, by altering the semantic tree:
          left IN Item_singlerow_subselect(subselect)
        is modified to
          left IN (subselect)
        which is represented as
          Item_in_subselect(left, subselect)
      */
      subselect= expr3->invalidate_and_restore_select_lex();
      result= new (thd->mem_root) Item_in_subselect(left, subselect);

      if (! equal)
        result = negate_expression(thd, result);

      DBUG_RETURN(result);
    }
  }

  if (equal)
    result= new (thd->mem_root) Item_func_eq(left, expr);
  else
    result= new (thd->mem_root) Item_func_ne(left, expr);

  DBUG_RETURN(result);
}

/**
   @brief Creates a new SELECT_LEX for a UNION branch.

   Sets up and initializes a SELECT_LEX structure for a query once the parser
   discovers a UNION token. The current SELECT_LEX is pushed on the stack and
   the new SELECT_LEX becomes the current one.

   @param lex The parser state.

   @param is_union_distinct True if the union preceding the new select statement
   uses UNION DISTINCT.

   @param is_top_level This should be @c TRUE if the newly created SELECT_LEX
   is a non-nested statement.

   @return <code>false</code> if successful, <code>true</code> if an error was
   reported. In the latter case parsing should stop.
 */
bool add_select_to_union_list(LEX *lex, bool is_union_distinct, 
                              bool is_top_level)
{
  /* 
     Only the last SELECT can have INTO. Since the grammar won't allow INTO in
     a nested SELECT, we make this check only when creating a top-level SELECT.
  */
  if (is_top_level && lex->result)
  {
    my_error(ER_WRONG_USAGE, MYF(0), "UNION", "INTO");
    return TRUE;
  }
  if (lex->current_select->linkage == GLOBAL_OPTIONS_TYPE)
  {
    my_parse_error(ER(ER_SYNTAX_ERROR));
    return TRUE;
  }
  /* This counter shouldn't be incremented for UNION parts */
  lex->nest_level--;
  if (mysql_new_select(lex, 0))
    return TRUE;
  mysql_init_select(lex);
  lex->current_select->linkage=UNION_TYPE;
  if (is_union_distinct) /* UNION DISTINCT - remember position */
    lex->current_select->master_unit()->union_distinct=
      lex->current_select;
  return FALSE;
}

/**
   @brief Initializes a SELECT_LEX for a query within parentheses (aka
   braces).

   @return false if successful, true if an error was reported. In the latter
   case parsing should stop.
 */
bool setup_select_in_parentheses(LEX *lex) 
{
  SELECT_LEX * sel= lex->current_select;
  if (sel->set_braces(1))
  {
    my_parse_error(ER(ER_SYNTAX_ERROR));
    return TRUE;
  }
  if (sel->linkage == UNION_TYPE &&
      !sel->master_unit()->first_select()->braces &&
      sel->master_unit()->first_select()->linkage ==
      UNION_TYPE)
  {
    my_parse_error(ER(ER_SYNTAX_ERROR));
    return TRUE;
  }
  if (sel->linkage == UNION_TYPE &&
      sel->olap != UNSPECIFIED_OLAP_TYPE &&
      sel->master_unit()->fake_select_lex)
  {
    my_error(ER_WRONG_USAGE, MYF(0), "CUBE/ROLLUP", "ORDER BY");
    return TRUE;
  }
  /* select in braces, can't contain global parameters */
  if (sel->master_unit()->fake_select_lex)
    sel->master_unit()->global_parameters=
      sel->master_unit()->fake_select_lex;
  return FALSE;
}

static bool add_create_index_prepare (LEX *lex, Table_ident *table)
{
  lex->sql_command= SQLCOM_CREATE_INDEX;
  if (!lex->current_select->add_table_to_list(lex->thd, table, NULL,
                                              TL_OPTION_UPDATING,
                                              TL_READ_NO_INSERT,
                                              MDL_SHARED_NO_WRITE))
    return TRUE;
  lex->alter_info.reset();
  lex->alter_info.flags= ALTER_ADD_INDEX;
  lex->col_list.empty();
  lex->change= NullS;
  return FALSE;
}

static bool add_create_index (LEX *lex, Key::Keytype type,
                              const LEX_STRING &name,
                              KEY_CREATE_INFO *info= NULL, bool generated= 0)
{
  Key *key;
  key= new Key(type, name, info ? info : &lex->key_create_info, generated, 
               lex->col_list);
  if (key == NULL)
    return TRUE;

  lex->alter_info.key_list.push_back(key);
  lex->col_list.empty();
  return FALSE;
}




/* Enabling traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* Enabling the token table.  */
#ifndef YYTOKEN_TABLE
# define YYTOKEN_TABLE 0
#endif

#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
typedef union YYSTYPE
#line 789 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
{
  int  num;
  ulong ulong_num;
  ulonglong ulonglong_number;
  longlong longlong_number;
  LEX_STRING lex_str;
  LEX_STRING *lex_str_ptr;
  LEX_SYMBOL symbol;
  Table_ident *table;
  char *simple_string;
  Item *item;
  Item_num *item_num;
  List<Item> *item_list;
  List<String> *string_list;
  String *string;
  Key_part_spec *key_part;
  TABLE_LIST *table_list;
  udf_func *udf;
  LEX_USER *lex_user;
  struct sys_var_with_base variable;
  enum enum_var_type var_type;
  Key::Keytype key_type;
  enum ha_key_alg key_alg;
  handlerton *db_type;
  enum row_type row_type;
  enum ha_rkey_function ha_rkey_mode;
  enum enum_ha_read_modes ha_read_mode;
  enum enum_tx_isolation tx_isolation;
  enum Cast_target cast_type;
  enum Item_udftype udf_type;
  const CHARSET_INFO *charset;
  thr_lock_type lock_type;
  interval_type interval, interval_time_st;
  timestamp_type date_time_type;
  st_select_lex *select_lex;
  chooser_compare_func_creator boolfunc2creator;
  class sp_condition_value *spcondvalue;
  struct { int vars, conds, hndlrs, curs; } spblock;
  sp_name *spname;
  LEX *lex;
  sp_head *sphead;
  struct p_elem_val *p_elem_value;
  enum index_hint_type index_hint;
  enum enum_filetype filetype;
  enum Foreign_key::fk_option m_fk_option;
  enum enum_yes_no_unknown m_yes_no_unk;
  Diag_condition_item_name diag_condition_item_name;
  Diagnostics_information::Which_area diag_area;
  Diagnostics_information *diag_info;
  Statement_information_item *stmt_info_item;
  Statement_information_item::Name stmt_info_item_name;
  List<Statement_information_item> *stmt_info_list;
  Condition_information_item *cond_info_item;
  Condition_information_item::Name cond_info_item_name;
  List<Condition_information_item> *cond_info_list;
}
/* Line 193 of yacc.c.  */
#line 2143 "/export/home/pb2/build/sb_0-4537852-1323800558.21/dist/sql/sql_yacc.cc"
	YYSTYPE;
# define yystype YYSTYPE /* obsolescent; will be withdrawn */
# define YYSTYPE_IS_DECLARED 1
# define YYSTYPE_IS_TRIVIAL 1
#endif



/* Copy the second part of user declarations.  */
#line 846 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"

bool my_yyoverflow(short **a, YYSTYPE **b, ulong *yystacksize);


/* Line 216 of yacc.c.  */
#line 2159 "/export/home/pb2/build/sb_0-4537852-1323800558.21/dist/sql/sql_yacc.cc"

#ifdef short
# undef short
#endif

#ifdef YYTYPE_UINT8
typedef YYTYPE_UINT8 yytype_uint8;
#else
typedef unsigned char yytype_uint8;
#endif

#ifdef YYTYPE_INT8
typedef YYTYPE_INT8 yytype_int8;
#elif (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
typedef signed char yytype_int8;
#else
typedef short int yytype_int8;
#endif

#ifdef YYTYPE_UINT16
typedef YYTYPE_UINT16 yytype_uint16;
#else
typedef unsigned short int yytype_uint16;
#endif

#ifdef YYTYPE_INT16
typedef YYTYPE_INT16 yytype_int16;
#else
typedef short int yytype_int16;
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif ! defined YYSIZE_T && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned int
# endif
#endif

#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)

#ifndef YY_
# if YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(msgid) dgettext ("bison-runtime", msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(msgid) msgid
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(e) ((void) (e))
#else
# define YYUSE(e) /* empty */
#endif

/* Identity function, used to suppress warnings about constant conditions.  */
#ifndef lint
# define YYID(n) (n)
#else
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static int
YYID (int i)
#else
static int
YYID (i)
    int i;
#endif
{
  return i;
}
#endif

#if ! defined yyoverflow || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#     ifndef _STDLIB_H
#      define _STDLIB_H 1
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's `empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (YYID (0))
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined _STDLIB_H \
       && ! ((defined YYMALLOC || defined malloc) \
	     && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef _STDLIB_H
#    define _STDLIB_H 1
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* ! defined yyoverflow || YYERROR_VERBOSE */


#if (! defined yyoverflow \
     && (! defined __cplusplus \
	 || (defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yytype_int16 yyss;
  YYSTYPE yyvs;
  };

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE)) \
      + YYSTACK_GAP_MAXIMUM)

/* Copy COUNT objects from FROM to TO.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(To, From, Count) \
      __builtin_memcpy (To, From, (Count) * sizeof (*(From)))
#  else
#   define YYCOPY(To, From, Count)		\
      do					\
	{					\
	  YYSIZE_T yyi;				\
	  for (yyi = 0; yyi < (Count); yyi++)	\
	    (To)[yyi] = (From)[yyi];		\
	}					\
      while (YYID (0))
#  endif
# endif

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack)					\
    do									\
      {									\
	YYSIZE_T yynewbytes;						\
	YYCOPY (&yyptr->Stack, Stack, yysize);				\
	Stack = &yyptr->Stack;						\
	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
	yyptr += yynewbytes / sizeof (*yyptr);				\
      }									\
    while (YYID (0))

#endif

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  586
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   51949

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  628
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  922
/* YYNRULES -- Number of rules.  */
#define YYNRULES  2589
/* YYNRULES -- Number of states.  */
#define YYNSTATES  4389

/* YYTRANSLATE(YYLEX) -- Bison symbol number corresponding to YYLEX.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   863

#define YYTRANSLATE(YYX)						\
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[YYLEX] -- Bison symbol number corresponding to YYLEX.  */
static const yytype_uint16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   621,     2,     2,     2,   615,   610,     2,
     618,   619,   613,   612,   620,   611,   626,   614,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   627,   624,
       2,     2,     2,     2,   625,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,   616,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   622,   609,   623,   617,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608
};

#if YYDEBUG
/* YYPRHS[YYN] -- Index of the first RHS symbol of rule number YYN in
   YYRHS.  */
static const yytype_uint16 yyprhs[] =
{
       0,     0,     3,     5,     6,    11,    14,    15,    17,    19,
      21,    23,    25,    27,    29,    31,    33,    35,    37,    39,
      41,    43,    45,    47,    49,    51,    53,    55,    57,    59,
      61,    63,    65,    67,    69,    71,    73,    75,    77,    79,
      81,    83,    85,    87,    89,    91,    93,    95,    97,    99,
     101,   103,   105,   107,   109,   111,   113,   115,   117,   119,
     121,   123,   125,   129,   131,   133,   138,   140,   143,   144,
     149,   150,   153,   157,   159,   162,   163,   167,   168,   174,
     176,   180,   184,   188,   192,   196,   200,   204,   208,   212,
     216,   220,   224,   228,   232,   236,   240,   244,   248,   252,
     258,   260,   261,   263,   267,   269,   273,   277,   281,   285,
     286,   294,   295,   308,   309,   322,   323,   336,   337,   344,
     345,   349,   354,   359,   363,   366,   377,   379,   383,   386,
     389,   392,   395,   398,   401,   404,   405,   419,   420,   427,
     430,   431,   433,   437,   439,   440,   443,   444,   447,   448,
     450,   454,   459,   460,   463,   464,   467,   469,   471,   473,
     475,   477,   479,   481,   483,   485,   487,   489,   491,   493,
     494,   498,   500,   501,   504,   505,   508,   511,   514,   517,
     520,   524,   528,   530,   532,   534,   537,   541,   545,   546,
     551,   552,   556,   557,   559,   563,   565,   566,   568,   572,
     574,   575,   579,   580,   582,   586,   588,   593,   594,   596,
     598,   600,   601,   605,   608,   612,   613,   617,   618,   624,
     630,   631,   639,   645,   646,   649,   651,   653,   655,   659,
     661,   663,   665,   669,   670,   672,   674,   676,   678,   681,
     683,   687,   689,   691,   692,   694,   695,   698,   702,   708,
     710,   712,   714,   716,   718,   720,   722,   724,   726,   728,
     730,   732,   734,   736,   738,   742,   747,   748,   750,   752,
     756,   758,   762,   766,   768,   771,   773,   775,   777,   779,
     783,   787,   789,   791,   793,   795,   797,   799,   801,   803,
     805,   807,   809,   811,   813,   815,   819,   820,   823,   825,
     827,   829,   831,   833,   835,   837,   839,   841,   843,   845,
     847,   849,   850,   856,   857,   860,   861,   865,   866,   869,
     872,   875,   878,   879,   886,   889,   890,   893,   895,   897,
     901,   902,   903,   904,   912,   913,   916,   919,   921,   923,
     924,   925,   934,   935,   942,   944,   947,   949,   952,   953,
     954,   961,   962,   963,   970,   971,   974,   975,   981,   982,
     984,   985,   991,   992,   995,   996,  1002,  1007,  1008,  1009,
    1018,  1019,  1027,  1029,  1031,  1033,  1035,  1037,  1040,  1045,
    1051,  1052,  1057,  1062,  1067,  1071,  1075,  1078,  1081,  1082,
    1085,  1087,  1090,  1094,  1096,  1098,  1100,  1101,  1103,  1105,
    1108,  1112,  1114,  1116,  1118,  1120,  1122,  1124,  1126,  1128,
    1129,  1131,  1133,  1136,  1140,  1142,  1144,  1146,  1148,  1150,
    1151,  1153,  1155,  1158,  1162,  1164,  1166,  1168,  1170,  1172,
    1174,  1176,  1177,  1179,  1181,  1184,  1188,  1190,  1192,  1194,
    1197,  1200,  1203,  1205,  1207,  1209,  1211,  1214,  1218,  1222,
    1226,  1230,  1234,  1238,  1242,  1246,  1251,  1253,  1255,  1257,
    1259,  1262,  1266,  1269,  1274,  1280,  1281,  1287,  1288,  1289,
    1295,  1296,  1304,  1306,  1307,  1309,  1310,  1315,  1316,  1317,
    1321,  1327,  1333,  1334,  1339,  1342,  1345,  1348,  1351,  1352,
    1354,  1355,  1357,  1359,  1363,  1365,  1370,  1376,  1382,  1383,
    1386,  1387,  1388,  1396,  1397,  1407,  1409,  1413,  1415,  1417,
    1418,  1421,  1422,  1426,  1428,  1432,  1433,  1440,  1442,  1443,
    1444,  1450,  1451,  1456,  1458,  1460,  1462,  1466,  1468,  1472,
    1473,  1474,  1480,  1482,  1486,  1488,  1490,  1491,  1495,  1497,
    1501,  1502,  1507,  1509,  1510,  1512,  1515,  1517,  1521,  1526,
    1530,  1534,  1538,  1543,  1548,  1552,  1553,  1554,  1561,  1562,
    1564,  1565,  1567,  1569,  1572,  1574,  1576,  1577,  1579,  1581,
    1584,  1586,  1587,  1591,  1592,  1594,  1596,  1599,  1601,  1604,
    1608,  1612,  1616,  1620,  1624,  1628,  1632,  1636,  1640,  1644,
    1648,  1652,  1656,  1660,  1661,  1668,  1670,  1672,  1676,  1681,
    1686,  1689,  1692,  1695,  1699,  1703,  1708,  1713,  1715,  1717,
    1719,  1721,  1723,  1725,  1727,  1729,  1731,  1733,  1735,  1737,
    1740,  1742,  1744,  1746,  1748,  1750,  1752,  1756,  1758,  1760,
    1763,  1766,  1774,  1783,  1792,  1801,  1810,  1813,  1814,  1816,
    1821,  1822,  1824,  1827,  1828,  1833,  1837,  1841,  1845,  1847,
    1850,  1852,  1854,  1858,  1861,  1865,  1868,  1871,  1873,  1877,
    1881,  1884,  1888,  1890,  1893,  1896,  1899,  1901,  1904,  1906,
    1908,  1910,  1913,  1917,  1920,  1924,  1927,  1930,  1934,  1938,
    1942,  1943,  1950,  1951,  1958,  1961,  1963,  1965,  1967,  1969,
    1971,  1973,  1975,  1977,  1979,  1981,  1983,  1986,  1989,  1991,
    1994,  1996,  1999,  2003,  2006,  2008,  2010,  2012,  2014,  2016,
    2018,  2020,  2023,  2024,  2026,  2028,  2034,  2035,  2039,  2040,
    2043,  2047,  2048,  2050,  2053,  2055,  2057,  2059,  2061,  2065,
    2069,  2073,  2077,  2078,  2080,  2081,  2083,  2084,  2086,  2089,
    2091,  2093,  2096,  2099,  2103,  2105,  2109,  2112,  2114,  2117,
    2120,  2123,  2126,  2129,  2131,  2133,  2136,  2138,  2140,  2142,
    2144,  2146,  2147,  2150,  2152,  2154,  2156,  2158,  2160,  2161,
    2164,  2166,  2168,  2169,  2171,  2173,  2176,  2179,  2181,  2184,
    2187,  2188,  2190,  2192,  2194,  2198,  2200,  2204,  2205,  2207,
    2208,  2213,  2215,  2217,  2219,  2220,  2222,  2225,  2227,  2229,
    2232,  2234,  2238,  2242,  2244,  2246,  2247,  2250,  2251,  2253,
    2259,  2260,  2264,  2268,  2270,  2271,  2274,  2277,  2280,  2281,
    2285,  2289,  2296,  2303,  2305,  2307,  2310,  2313,  2316,  2318,
    2321,  2324,  2326,  2328,  2329,  2331,  2333,  2335,  2337,  2338,
    2340,  2342,  2344,  2345,  2347,  2350,  2351,  2353,  2354,  2356,
    2357,  2359,  2361,  2364,  2366,  2369,  2371,  2374,  2377,  2380,
    2384,  2387,  2389,  2391,  2393,  2395,  2399,  2401,  2403,  2405,
    2410,  2413,  2415,  2420,  2421,  2423,  2424,  2427,  2429,  2433,
    2434,  2441,  2442,  2448,  2456,  2457,  2463,  2464,  2470,  2471,
    2477,  2478,  2483,  2484,  2495,  2499,  2504,  2508,  2512,  2520,
    2521,  2525,  2527,  2532,  2533,  2537,  2538,  2541,  2542,  2544,
    2545,  2548,  2551,  2554,  2557,  2559,  2561,  2563,  2567,  2572,
    2573,  2580,  2585,  2586,  2592,  2593,  2600,  2605,  2609,  2611,
    2619,  2623,  2625,  2627,  2628,  2634,  2635,  2639,  2642,  2643,
    2649,  2650,  2651,  2658,  2660,  2664,  2666,  2668,  2672,  2675,
    2679,  2682,  2687,  2688,  2695,  2696,  2697,  2706,  2711,  2716,
    2720,  2724,  2727,  2730,  2737,  2743,  2747,  2753,  2755,  2757,
    2759,  2760,  2762,  2763,  2765,  2766,  2768,  2770,  2771,  2774,
    2776,  2777,  2779,  2781,  2783,  2784,  2785,  2793,  2797,  2801,
    2802,  2806,  2811,  2812,  2816,  2817,  2821,  2822,  2826,  2827,
    2831,  2832,  2835,  2837,  2841,  2842,  2844,  2846,  2847,  2850,
    2852,  2856,  2857,  2863,  2864,  2866,  2868,  2869,  2876,  2877,
    2879,  2881,  2884,  2886,  2888,  2890,  2891,  2897,  2900,  2901,
    2907,  2908,  2910,  2912,  2915,  2917,  2919,  2921,  2923,  2925,
    2928,  2929,  2935,  2936,  2938,  2940,  2941,  2946,  2951,  2955,
    2961,  2963,  2967,  2971,  2972,  2979,  2981,  2983,  2985,  2989,
    2992,  2996,  2998,  3000,  3001,  3008,  3010,  3012,  3014,  3018,
    3022,  3027,  3028,  3035,  3036,  3039,  3040,  3045,  3046,  3049,
    3051,  3054,  3059,  3062,  3066,  3069,  3073,  3074,  3078,  3079,
    3080,  3087,  3090,  3092,  3094,  3097,  3100,  3109,  3114,  3115,
    3117,  3120,  3122,  3124,  3126,  3128,  3129,  3132,  3137,  3141,
    3143,  3145,  3149,  3154,  3155,  3156,  3157,  3160,  3163,  3165,
    3167,  3168,  3171,  3175,  3179,  3183,  3186,  3190,  3195,  3199,
    3204,  3208,  3213,  3215,  3219,  3224,  3228,  3232,  3239,  3241,
    3247,  3254,  3260,  3268,  3275,  3284,  3290,  3297,  3302,  3307,
    3313,  3317,  3322,  3324,  3328,  3332,  3336,  3340,  3344,  3348,
    3354,  3360,  3364,  3368,  3372,  3376,  3380,  3384,  3386,  3388,
    3390,  3392,  3394,  3396,  3398,  3400,  3402,  3404,  3406,  3408,
    3410,  3412,  3414,  3416,  3418,  3420,  3422,  3424,  3426,  3428,
    3432,  3434,  3436,  3438,  3440,  3444,  3447,  3450,  3453,  3456,
    3460,  3464,  3470,  3477,  3482,  3487,  3495,  3498,  3505,  3511,
    3518,  3525,  3530,  3535,  3541,  3546,  3553,  3556,  3561,  3566,
    3571,  3582,  3589,  3598,  3605,  3610,  3615,  3622,  3627,  3632,
    3637,  3644,  3649,  3657,  3665,  3673,  3680,  3687,  3694,  3701,
    3705,  3710,  3717,  3726,  3729,  3732,  3741,  3750,  3757,  3764,
    3766,  3773,  3780,  3789,  3798,  3805,  3814,  3821,  3824,  3833,
    3842,  3845,  3848,  3851,  3856,  3861,  3866,  3871,  3875,  3884,
    3889,  3896,  3901,  3906,  3911,  3918,  3927,  3932,  3936,  3943,
    3948,  3955,  3961,  3970,  3978,  3989,  3991,  3998,  4003,  4008,
    4013,  4018,  4023,  4030,  4035,  4036,  4042,  4049,  4052,  4056,
    4057,  4062,  4063,  4067,  4068,  4070,  4072,  4076,  4081,  4086,
    4092,  4097,  4102,  4107,  4113,  4118,  4119,  4120,  4128,  4133,
    4139,  4144,  4150,  4155,  4160,  4165,  4170,  4175,  4181,  4182,
    4191,  4192,  4196,  4200,  4202,  4207,  4208,  4210,  4211,  4214,
    4215,  4217,  4218,  4222,  4225,  4229,  4232,  4234,  4237,  4239,
    4242,  4244,  4247,  4250,  4253,  4254,  4256,  4258,  4262,  4264,
    4268,  4270,  4274,  4275,  4277,  4278,  4281,  4286,  4292,  4294,
    4296,  4298,  4300,  4305,  4307,  4311,  4315,  4319,  4320,  4327,
    4328,  4335,  4336,  4345,  4350,  4351,  4360,  4361,  4372,  4379,
    4380,  4389,  4390,  4401,  4408,  4410,  4413,  4416,  4417,  4419,
    4425,  4426,  4432,  4436,  4442,  4445,  4446,  4447,  4455,  4457,
    4458,  4459,  4466,  4467,  4471,  4472,  4473,  4479,  4480,  4482,
    4483,  4485,  4486,  4489,  4493,  4497,  4499,  4501,  4502,  4510,
    4511,  4519,  4521,  4524,  4525,  4526,  4529,  4530,  4533,  4534,
    4536,  4538,  4540,  4542,  4546,  4548,  4552,  4554,  4556,  4558,
    4560,  4562,  4564,  4566,  4568,  4570,  4572,  4574,  4576,  4578,
    4580,  4582,  4584,  4586,  4588,  4590,  4592,  4594,  4596,  4598,
    4600,  4602,  4603,  4605,  4607,  4608,  4611,  4612,  4614,  4615,
    4616,  4620,  4621,  4622,  4626,  4629,  4630,  4631,  4636,  4641,
    4644,  4645,  4647,  4649,  4653,  4657,  4659,  4662,  4663,  4665,
    4666,  4671,  4676,  4679,  4680,  4682,  4684,  4685,  4687,  4688,
    4690,  4693,  4695,  4699,  4703,  4705,  4707,  4709,  4711,  4713,
    4714,  4717,  4719,  4721,  4723,  4725,  4727,  4729,  4731,  4733,
    4735,  4737,  4739,  4741,  4743,  4745,  4747,  4749,  4751,  4753,
    4755,  4757,  4759,  4761,  4763,  4764,  4765,  4772,  4773,  4775,
    4779,  4781,  4785,  4786,  4789,  4793,  4795,  4798,  4800,  4801,
    4805,  4806,  4807,  4815,  4818,  4820,  4821,  4825,  4826,  4834,
    4835,  4842,  4847,  4854,  4859,  4864,  4869,  4870,  4877,  4882,
    4887,  4892,  4898,  4903,  4905,  4909,  4911,  4914,  4916,  4920,
    4922,  4923,  4926,  4927,  4929,  4930,  4932,  4934,  4937,  4941,
    4943,  4945,  4946,  4947,  4956,  4957,  4958,  4965,  4966,  4968,
    4970,  4972,  4974,  4976,  4979,  4981,  4983,  4985,  4989,  4994,
    4995,  4999,  5003,  5005,  5008,  5011,  5012,  5016,  5017,  5023,
    5027,  5029,  5033,  5035,  5039,  5041,  5043,  5044,  5046,  5047,
    5052,  5053,  5055,  5059,  5061,  5063,  5065,  5066,  5067,  5074,
    5075,  5076,  5088,  5092,  5094,  5098,  5102,  5104,  5108,  5109,
    5111,  5112,  5117,  5118,  5126,  5127,  5133,  5134,  5141,  5143,
    5147,  5150,  5155,  5156,  5159,  5160,  5163,  5165,  5167,  5169,
    5170,  5175,  5176,  5178,  5179,  5181,  5183,  5187,  5189,  5191,
    5194,  5197,  5200,  5202,  5204,  5206,  5208,  5209,  5213,  5214,
    5218,  5221,  5226,  5231,  5235,  5240,  5245,  5247,  5251,  5255,
    5262,  5265,  5268,  5269,  5276,  5277,  5284,  5290,  5293,  5295,
    5297,  5299,  5305,  5311,  5314,  5317,  5319,  5324,  5328,  5331,
    5335,  5338,  5341,  5343,  5347,  5352,  5356,  5360,  5363,  5366,
    5370,  5374,  5378,  5382,  5386,  5390,  5394,  5398,  5400,  5402,
    5404,  5406,  5408,  5409,  5411,  5412,  5415,  5416,  5418,  5420,
    5422,  5423,  5426,  5427,  5430,  5431,  5434,  5437,  5438,  5443,
    5444,  5449,  5451,  5453,  5455,  5457,  5459,  5461,  5463,  5464,
    5466,  5468,  5469,  5471,  5473,  5474,  5479,  5480,  5481,  5487,
    5489,  5490,  5494,  5498,  5500,  5503,  5506,  5509,  5512,  5515,
    5518,  5521,  5523,  5525,  5527,  5529,  5531,  5533,  5534,  5536,
    5537,  5541,  5545,  5547,  5548,  5552,  5554,  5557,  5558,  5560,
    5561,  5565,  5569,  5572,  5575,  5579,  5580,  5582,  5584,  5587,
    5588,  5589,  5590,  5591,  5614,  5616,  5618,  5619,  5621,  5622,
    5624,  5626,  5627,  5629,  5631,  5632,  5635,  5638,  5640,  5644,
    5649,  5653,  5657,  5658,  5661,  5664,  5666,  5670,  5674,  5675,
    5680,  5681,  5685,  5687,  5689,  5690,  5694,  5697,  5701,  5703,
    5705,  5708,  5709,  5712,  5716,  5718,  5724,  5726,  5728,  5731,
    5734,  5736,  5738,  5740,  5742,  5744,  5747,  5750,  5752,  5754,
    5756,  5758,  5760,  5762,  5764,  5766,  5769,  5772,  5774,  5776,
    5778,  5780,  5782,  5785,  5788,  5791,  5793,  5795,  5799,  5805,
    5807,  5809,  5811,  5813,  5815,  5819,  5824,  5830,  5832,  5838,
    5842,  5845,  5847,  5851,  5854,  5857,  5862,  5864,  5866,  5868,
    5870,  5872,  5874,  5876,  5878,  5880,  5882,  5884,  5886,  5888,
    5890,  5894,  5897,  5899,  5901,  5903,  5905,  5907,  5909,  5911,
    5913,  5915,  5917,  5919,  5921,  5923,  5925,  5927,  5929,  5931,
    5933,  5935,  5937,  5939,  5941,  5943,  5945,  5947,  5949,  5951,
    5953,  5955,  5957,  5959,  5961,  5963,  5965,  5967,  5969,  5971,
    5973,  5975,  5977,  5979,  5981,  5983,  5985,  5987,  5989,  5991,
    5993,  5995,  5997,  5999,  6001,  6003,  6005,  6007,  6009,  6011,
    6013,  6015,  6017,  6019,  6021,  6023,  6025,  6027,  6029,  6031,
    6033,  6035,  6037,  6039,  6041,  6043,  6045,  6047,  6049,  6051,
    6053,  6055,  6057,  6059,  6061,  6063,  6065,  6067,  6069,  6071,
    6073,  6075,  6077,  6079,  6081,  6083,  6085,  6087,  6089,  6091,
    6093,  6095,  6097,  6099,  6101,  6103,  6105,  6107,  6109,  6111,
    6113,  6115,  6117,  6119,  6121,  6123,  6125,  6127,  6129,  6131,
    6133,  6135,  6137,  6139,  6141,  6143,  6145,  6147,  6149,  6151,
    6153,  6155,  6157,  6159,  6161,  6163,  6165,  6167,  6169,  6171,
    6173,  6175,  6177,  6179,  6181,  6183,  6185,  6187,  6189,  6191,
    6193,  6195,  6197,  6199,  6201,  6203,  6205,  6207,  6209,  6211,
    6213,  6215,  6217,  6219,  6221,  6223,  6225,  6227,  6229,  6231,
    6233,  6235,  6237,  6239,  6241,  6243,  6245,  6247,  6249,  6251,
    6253,  6255,  6257,  6259,  6261,  6263,  6265,  6267,  6269,  6271,
    6273,  6275,  6277,  6279,  6281,  6283,  6285,  6287,  6289,  6291,
    6293,  6295,  6297,  6299,  6301,  6303,  6305,  6307,  6309,  6311,
    6313,  6315,  6317,  6319,  6321,  6323,  6325,  6327,  6329,  6331,
    6333,  6335,  6337,  6339,  6341,  6343,  6345,  6347,  6349,  6351,
    6353,  6355,  6357,  6359,  6361,  6363,  6365,  6367,  6369,  6371,
    6373,  6375,  6377,  6379,  6381,  6383,  6385,  6387,  6389,  6391,
    6393,  6395,  6397,  6399,  6401,  6403,  6405,  6407,  6409,  6411,
    6413,  6415,  6417,  6419,  6421,  6423,  6425,  6427,  6429,  6431,
    6433,  6435,  6437,  6439,  6441,  6443,  6445,  6447,  6449,  6451,
    6453,  6455,  6457,  6459,  6461,  6463,  6465,  6467,  6469,  6471,
    6473,  6475,  6477,  6479,  6481,  6483,  6485,  6487,  6489,  6491,
    6493,  6495,  6497,  6499,  6501,  6503,  6505,  6507,  6509,  6511,
    6513,  6515,  6517,  6519,  6521,  6523,  6525,  6527,  6529,  6531,
    6533,  6535,  6537,  6539,  6541,  6543,  6545,  6547,  6549,  6551,
    6553,  6555,  6557,  6559,  6561,  6563,  6565,  6567,  6569,  6571,
    6573,  6575,  6577,  6578,  6583,  6584,  6586,  6588,  6592,  6593,
    6596,  6598,  6600,  6602,  6604,  6605,  6606,  6608,  6610,  6612,
    6613,  6616,  6619,  6622,  6624,  6627,  6632,  6638,  6643,  6650,
    6653,  6657,  6661,  6665,  6671,  6673,  6677,  6681,  6684,  6687,
    6690,  6692,  6694,  6699,  6704,  6706,  6708,  6710,  6712,  6714,
    6715,  6720,  6722,  6724,  6726,  6730,  6734,  6736,  6738,  6741,
    6744,  6745,  6749,  6754,  6758,  6759,  6767,  6769,  6772,  6774,
    6776,  6778,  6780,  6782,  6784,  6785,  6791,  6793,  6795,  6797,
    6799,  6801,  6805,  6812,  6819,  6826,  6834,  6840,  6844,  6853,
    6862,  6871,  6878,  6879,  6881,  6883,  6886,  6887,  6889,  6891,
    6895,  6896,  6900,  6901,  6905,  6906,  6910,  6911,  6915,  6917,
    6919,  6921,  6923,  6925,  6927,  6929,  6931,  6933,  6935,  6937,
    6940,  6943,  6945,  6949,  6952,  6955,  6958,  6961,  6964,  6967,
    6970,  6973,  6975,  6977,  6980,  6981,  6983,  6987,  6989,  6992,
    6995,  6998,  7000,  7004,  7008,  7010,  7012,  7016,  7018,  7022,
    7027,  7033,  7038,  7045,  7047,  7048,  7052,  7056,  7058,  7060,
    7061,  7064,  7067,  7070,  7073,  7074,  7077,  7078,  7082,  7085,
    7087,  7090,  7093,  7096,  7099,  7102,  7103,  7107,  7108,  7110,
    7111,  7115,  7118,  7119,  7121,  7124,  7125,  7127,  7132,  7137,
    7143,  7146,  7150,  7151,  7153,  7154,  7159,  7160,  7162,  7164,
    7165,  7167,  7168,  7171,  7174,  7176,  7177,  7179,  7181,  7184,
    7188,  7191,  7192,  7199,  7203,  7204,  7205,  7206,  7208,  7211,
    7213,  7215,  7217,  7219,  7221,  7223,  7225,  7227,  7229,  7232,
    7235,  7239,  7241,  7243,  7245,  7247,  7249,  7251,  7253,  7255,
    7257,  7259,  7261,  7263,  7265,  7266,  7270,  7272,  7275,  7277,
    7280,  7284,  7288,  7292,  7293,  7297,  7301,  7302,  7310,  7311,
    7315,  7317,  7321,  7322,  7326,  7329,  7334,  7335,  7339,  7344,
    7349,  7350,  7351,  7352,  7369,  7378,  7386,  7387,  7388,  7389,
    7390,  7391,  7407,  7408,  7409,  7410,  7411,  7424,  7429,  7434,
    7438,  7443,  7447,  7450,  7452,  7456,  7462,  7464,  7466,  7467,
    7469,  7471,  7472,  7475,  7476,  7477,  7481,  7482,  7485,  7491
};

/* YYRHS -- A `-1'-separated list of the rules' RHS.  */
static const yytype_int16 yyrhs[] =
{
     629,     0,    -1,   151,    -1,    -1,   632,   630,   624,   631,
      -1,   632,   151,    -1,    -1,   151,    -1,   633,    -1,  1478,
      -1,   999,    -1,  1061,    -1,  1063,    -1,   682,    -1,   645,
      -1,  1064,    -1,  1053,    -1,  1484,    -1,   652,    -1,   634,
      -1,  1306,    -1,  1338,    -1,  1254,    -1,  1256,    -1,   638,
      -1,  1345,    -1,   718,    -1,  1452,    -1,  1443,    -1,   643,
      -1,  1270,    -1,  1548,    -1,  1364,    -1,  1367,    -1,  1435,
      -1,  1069,    -1,  1077,    -1,   835,    -1,  1084,    -1,   636,
      -1,  1360,    -1,  1487,    -1,  1072,    -1,  1056,    -1,  1273,
      -1,  1354,    -1,   717,    -1,  1450,    -1,  1485,    -1,  1486,
      -1,  1096,    -1,  1418,    -1,   710,    -1,  1324,    -1,  1037,
      -1,  1040,    -1,  1317,    -1,  1549,    -1,  1441,    -1,  1298,
      -1,  1366,    -1,  1540,    -1,   635,   392,  1412,    -1,   116,
      -1,   139,    -1,   392,  1412,   186,   637,    -1,  1409,    -1,
     625,  1414,    -1,    -1,   165,  1412,   639,   640,    -1,    -1,
     576,   641,    -1,   641,   620,   642,    -1,   642,    -1,   625,
    1414,    -1,    -1,   205,   644,  1414,    -1,    -1,    56,   296,
     544,   646,   647,    -1,   648,    -1,   647,   620,   648,    -1,
     280,   155,  1409,    -1,   277,   155,  1409,    -1,   297,   155,
    1409,    -1,   283,   155,  1409,    -1,   284,   155,  1234,    -1,
     278,   155,  1234,    -1,   285,   155,  1234,    -1,   279,   155,
    1234,    -1,   294,   155,  1234,    -1,   288,   155,  1409,    -1,
     287,   155,  1409,    -1,   289,   155,  1409,    -1,   290,   155,
    1409,    -1,   293,   155,  1409,    -1,   295,   155,  1234,    -1,
     291,   155,  1409,    -1,   292,   155,  1409,    -1,   298,   155,
    1396,    -1,   219,   155,   618,   649,   619,    -1,   651,    -1,
      -1,   650,    -1,   649,   620,   650,    -1,  1234,    -1,   281,
     155,  1409,    -1,   282,   155,  1236,    -1,   422,   155,  1409,
      -1,   423,   155,  1234,    -1,    -1,    94,   886,   527,   889,
    1405,   653,   824,    -1,    -1,    94,   977,   222,  1412,   981,
     358,  1405,   654,   618,   994,   619,   982,    -1,    -1,    94,
     978,   222,  1412,   980,   358,  1405,   655,   618,   994,   619,
     983,    -1,    -1,    94,   979,   222,  1412,   980,   358,  1405,
     656,   618,   994,   619,   984,    -1,    -1,    94,   103,   889,
    1412,   657,   883,    -1,    -1,    94,   658,  1506,    -1,    94,
     573,   675,  1468,    -1,    94,   268,   199,   788,    -1,    94,
     525,   785,    -1,    94,   659,    -1,   468,  1414,   183,   106,
     600,  1414,   363,   618,   660,   619,    -1,   661,    -1,   660,
     620,   661,    -1,   573,  1409,    -1,   208,  1409,    -1,   103,
    1409,    -1,   373,  1409,    -1,   382,  1409,    -1,   484,  1409,
      -1,   389,  1234,    -1,    -1,  1113,   162,   889,   676,   663,
     358,   457,   664,   669,   666,   671,   138,   672,    -1,    -1,
     163,  1117,  1206,   665,   667,   668,    -1,    22,  1117,    -1,
      -1,   147,    -1,   132,   358,   480,    -1,   132,    -1,    -1,
     503,  1117,    -1,    -1,   150,  1117,    -1,    -1,   670,    -1,
     358,    77,   393,    -1,   358,    77,   346,   393,    -1,    -1,
      73,  1409,    -1,    -1,   673,   674,    -1,   734,    -1,   736,
      -1,   732,    -1,   753,    -1,   771,    -1,   773,    -1,   768,
      -1,   738,    -1,   740,    -1,   741,    -1,   742,    -1,   743,
      -1,   745,    -1,    -1,  1412,   626,  1412,    -1,  1412,    -1,
      -1,   677,   679,    -1,    -1,   678,   680,    -1,    73,  1409,
      -1,   247,   499,    -1,   348,   499,    -1,    87,   499,    -1,
     408,   499,   106,    -1,   323,   499,   106,    -1,   681,    -1,
     679,    -1,   129,    -1,  1123,   129,    -1,   499,   461,   122,
      -1,   499,   461,   234,    -1,    -1,    49,   676,   683,   684,
      -1,    -1,   618,   685,   619,    -1,    -1,   686,    -1,   686,
     620,  1117,    -1,  1117,    -1,    -1,   688,    -1,   688,   620,
     690,    -1,   690,    -1,    -1,  1412,   689,   937,    -1,    -1,
     692,    -1,   692,   620,   693,    -1,   693,    -1,   694,   689,
    1412,   937,    -1,    -1,   235,    -1,   372,    -1,   226,    -1,
      -1,   695,   731,   624,    -1,   731,   624,    -1,   696,   731,
     624,    -1,    -1,   697,   698,   624,    -1,    -1,   119,   729,
     699,   937,   730,    -1,   119,  1412,    80,   184,   706,    -1,
      -1,   119,   703,   202,   184,   700,   704,   731,    -1,   119,
    1412,   100,   184,   701,    -1,    -1,   702,  1096,    -1,   167,
      -1,    89,    -1,   705,    -1,   704,   620,   705,    -1,   709,
      -1,  1234,    -1,   707,    -1,   491,   708,  1410,    -1,    -1,
     581,    -1,   706,    -1,  1412,    -1,   492,    -1,  1123,   185,
      -1,   490,    -1,   477,   711,   713,    -1,  1412,    -1,   707,
      -1,    -1,   711,    -1,    -1,   470,   714,    -1,   716,   155,
     715,    -1,   714,   620,   716,   155,   715,    -1,  1395,    -1,
    1144,    -1,  1401,    -1,    63,    -1,   512,    -1,    84,    -1,
      86,    -1,    85,    -1,    54,    -1,   458,    -1,   529,    -1,
      72,    -1,   101,    -1,   314,    -1,   331,    -1,   437,   712,
     713,    -1,   195,   719,   130,   720,    -1,    -1,    98,    -1,
     721,    -1,    80,   725,   726,    -1,   722,    -1,   721,   620,
     722,    -1,   723,   155,   724,    -1,  1412,    -1,   625,  1414,
      -1,   353,    -1,   454,    -1,   715,    -1,   727,    -1,   726,
     620,   727,    -1,   723,   155,   728,    -1,    63,    -1,   512,
      -1,    84,    -1,    86,    -1,    85,    -1,    54,    -1,   458,
      -1,   529,    -1,    72,    -1,   101,    -1,   314,    -1,   331,
      -1,   442,    -1,  1412,    -1,   729,   620,  1412,    -1,    -1,
     120,  1117,    -1,   734,    -1,   736,    -1,   732,    -1,   753,
      -1,   771,    -1,   773,    -1,   768,    -1,   738,    -1,   740,
      -1,   741,    -1,   742,    -1,   743,    -1,   745,    -1,    -1,
     217,   733,   748,   149,   217,    -1,    -1,   735,   633,    -1,
      -1,   444,   737,  1117,    -1,    -1,   739,   777,    -1,   252,
    1413,    -1,   241,  1413,    -1,   361,  1412,    -1,    -1,   175,
     746,  1412,   232,   744,   747,    -1,    65,  1412,    -1,    -1,
     342,   186,    -1,   186,    -1,  1412,    -1,   747,   620,  1412,
      -1,    -1,    -1,    -1,   749,  1117,   536,   750,   696,   751,
     752,    -1,    -1,   146,   748,    -1,   145,   696,    -1,   754,
      -1,   757,    -1,    -1,    -1,    52,   755,  1117,   756,   759,
     767,   149,    52,    -1,    -1,    52,   758,   760,   767,   149,
      52,    -1,   761,    -1,   759,   761,    -1,   764,    -1,   760,
     764,    -1,    -1,    -1,   593,   762,  1117,   763,   536,   696,
      -1,    -1,    -1,   593,   765,  1117,   766,   536,   696,    -1,
      -1,   145,   696,    -1,    -1,  1413,   627,   769,   777,   770,
      -1,    -1,  1413,    -1,    -1,  1413,   627,   772,   775,   770,
      -1,    -1,   774,   775,    -1,    -1,    30,   776,   697,   695,
     149,    -1,   274,   696,   149,   274,    -1,    -1,    -1,   595,
     778,  1117,   138,   779,   696,   149,   595,    -1,    -1,   432,
     696,   569,   780,  1117,   149,   432,    -1,    29,    -1,     8,
      -1,   228,    -1,   570,    -1,   125,    -1,   810,   812,    -1,
     810,    56,   807,   791,    -1,   810,     6,   807,   786,   795,
      -1,    -1,   575,   268,   199,  1412,    -1,   810,     6,   807,
     798,    -1,   810,   139,   807,   798,    -1,   811,   790,   801,
      -1,   811,   790,   804,    -1,     6,   808,    -1,     6,   809,
      -1,    -1,   792,   793,    -1,   794,    -1,   793,   794,    -1,
     793,   620,   794,    -1,   813,    -1,   814,    -1,   815,    -1,
      -1,   796,    -1,   797,    -1,   796,   797,    -1,   796,   620,
     797,    -1,   813,    -1,   814,    -1,   815,    -1,   816,    -1,
     819,    -1,   821,    -1,   822,    -1,   820,    -1,    -1,   799,
      -1,   800,    -1,   799,   800,    -1,   799,   620,   800,    -1,
     813,    -1,   814,    -1,   815,    -1,   821,    -1,   822,    -1,
      -1,   802,    -1,   803,    -1,   802,   803,    -1,   802,   620,
     803,    -1,   813,    -1,   817,    -1,   818,    -1,   819,    -1,
     821,    -1,   822,    -1,   820,    -1,    -1,   805,    -1,   806,
      -1,   805,   806,    -1,   805,   620,   806,    -1,   813,    -1,
     821,    -1,   822,    -1,   105,  1409,    -1,   559,  1409,    -1,
     415,  1409,    -1,  1412,    -1,  1412,    -1,   409,    -1,   411,
      -1,   346,     4,    -1,   224,  1290,   823,    -1,    24,  1290,
     823,    -1,   303,  1290,   823,    -1,   170,  1290,   823,    -1,
     560,  1290,   823,    -1,   416,  1290,   823,    -1,   343,  1290,
    1235,    -1,    73,  1290,  1409,    -1,  1331,   153,  1290,   897,
      -1,   589,    -1,   349,    -1,  1235,    -1,   214,    -1,   618,
     825,    -1,   890,   830,   827,    -1,   257,  1405,    -1,   618,
     257,  1405,   619,    -1,   903,   619,   890,   830,   827,    -1,
      -1,   830,   879,   619,   826,  1491,    -1,    -1,    -1,  1375,
     882,   879,   828,  1488,    -1,    -1,  1375,   882,   618,   879,
     619,   829,  1491,    -1,   831,    -1,    -1,   832,    -1,    -1,
     379,   834,   833,   837,    -1,    -1,    -1,   379,   836,   837,
      -1,    46,   838,   847,   848,   855,    -1,   840,   245,   618,
     841,   619,    -1,    -1,   840,   203,   839,   845,    -1,   407,
     845,    -1,   407,   844,    -1,   262,   845,    -1,   262,   844,
      -1,    -1,   259,    -1,    -1,   842,    -1,   843,    -1,   842,
     620,   843,    -1,  1412,    -1,    70,   618,   841,   619,    -1,
     618,  1113,   853,  1114,   619,    -1,   618,  1113,   853,  1114,
     619,    -1,    -1,   380,  1235,    -1,    -1,    -1,   516,    46,
     840,   203,   846,   849,   854,    -1,    -1,   516,    46,   840,
     245,   618,   851,   619,   850,   854,    -1,   852,    -1,   851,
     620,   852,    -1,  1412,    -1,  1120,    -1,    -1,   515,  1235,
      -1,    -1,   618,   856,   619,    -1,   857,    -1,   856,   620,
     857,    -1,    -1,   379,   858,   859,   860,   876,   871,    -1,
    1412,    -1,    -1,    -1,   580,   254,   535,   861,   863,    -1,
      -1,   580,   235,   862,   864,    -1,   307,    -1,   866,    -1,
     866,    -1,   618,   865,   619,    -1,   866,    -1,   865,   620,
     866,    -1,    -1,    -1,   618,   867,   869,   868,   619,    -1,
     870,    -1,   869,   620,   870,    -1,   307,    -1,  1120,    -1,
      -1,   618,   872,   619,    -1,   873,    -1,   872,   620,   873,
      -1,    -1,   516,   874,   875,   876,    -1,  1414,    -1,    -1,
     877,    -1,   877,   878,    -1,   878,    -1,   525,  1290,  1414,
      -1,  1331,   153,  1290,   897,    -1,   343,  1290,  1235,    -1,
     302,  1290,  1237,    -1,   320,  1290,  1237,    -1,   106,   131,
    1290,  1409,    -1,   222,   131,  1290,  1409,    -1,    73,  1290,
    1409,    -1,    -1,    -1,   462,   880,  1107,  1111,   881,   901,
      -1,    -1,    18,    -1,    -1,   884,    -1,   885,    -1,   884,
     885,    -1,   896,    -1,   895,    -1,    -1,   887,    -1,   888,
      -1,   888,   887,    -1,   530,    -1,    -1,   217,  1123,   166,
      -1,    -1,   892,    -1,   893,    -1,   893,   891,    -1,   893,
      -1,   893,   892,    -1,   893,   620,   892,    -1,   153,  1290,
     897,    -1,   302,  1290,  1236,    -1,   320,  1290,  1236,    -1,
      26,  1290,  1234,    -1,   382,  1290,  1409,    -1,    73,  1290,
    1409,    -1,    25,  1290,  1236,    -1,   374,  1290,  1234,    -1,
     374,  1290,   120,    -1,    60,  1290,  1234,    -1,   528,  1290,
    1234,    -1,   124,  1290,  1234,    -1,   452,  1290,   899,    -1,
      -1,   564,  1290,   894,   618,  1353,   619,    -1,   895,    -1,
     896,    -1,   229,  1290,   900,    -1,   106,   131,  1290,  1409,
      -1,   222,   131,  1290,  1409,    -1,   525,  1412,    -1,   509,
     134,    -1,   509,   312,    -1,    81,  1290,  1409,    -1,   244,
    1290,  1234,    -1,   949,   940,  1290,   942,    -1,   949,    68,
    1290,   948,    -1,  1414,    -1,  1414,    -1,   120,    -1,   178,
      -1,   143,    -1,    78,    -1,   417,    -1,    76,    -1,   348,
      -1,   177,    -1,   248,    -1,  1229,    -1,  1106,  1110,    -1,
     511,    -1,   412,    -1,   118,    -1,   233,    -1,   904,    -1,
     905,    -1,   904,   620,   905,    -1,   906,    -1,   907,    -1,
     912,   908,    -1,   912,   966,    -1,   972,   996,   981,   618,
     994,   619,   982,    -1,   978,   975,   996,   980,   618,   994,
     619,   983,    -1,   979,   975,   996,   980,   618,   994,   619,
     984,    -1,   910,   973,   996,   981,   618,   994,   619,   982,
      -1,   910,   183,   245,   996,   618,   994,   619,   966,    -1,
     910,   909,    -1,    -1,   909,    -1,    61,   618,  1117,   619,
      -1,    -1,   911,    -1,    83,   996,    -1,    -1,  1404,   913,
     914,   934,    -1,   922,   932,   928,    -1,   923,   933,   928,
      -1,   180,   924,   928,    -1,    38,    -1,    38,   931,    -1,
      43,    -1,    42,    -1,   918,   931,   952,    -1,   918,   952,
      -1,   919,   931,   953,    -1,   919,   953,    -1,    33,   931,
      -1,    33,    -1,   920,   931,   952,    -1,   921,   931,   953,
      -1,   582,   931,    -1,   607,   932,   928,    -1,   110,    -1,
     540,   926,    -1,   537,   926,    -1,   107,   926,    -1,   541,
      -1,    40,   932,    -1,   917,    -1,   308,    -1,   270,    -1,
     273,   582,    -1,   273,   920,   952,    -1,   543,   952,    -1,
     534,   932,   952,    -1,   310,   952,    -1,   271,   952,    -1,
     118,   924,   928,    -1,   354,   924,   928,    -1,   178,   924,
     928,    -1,    -1,   154,   915,   618,   998,   619,   952,    -1,
      -1,   470,   916,   618,   998,   619,   952,    -1,   273,   952,
      -1,   466,    -1,   193,    -1,   192,    -1,   387,    -1,   328,
      -1,   261,    -1,   327,    -1,   388,    -1,   329,    -1,    59,
      -1,   337,    -1,   334,    59,    -1,   918,   586,    -1,   583,
      -1,   334,   583,    -1,   355,    -1,   337,   583,    -1,   334,
      59,   586,    -1,   337,   586,    -1,   233,    -1,   542,    -1,
     482,    -1,   309,    -1,    32,    -1,   412,    -1,   137,    -1,
     137,   391,    -1,    -1,   931,    -1,   925,    -1,   618,   352,
     620,   352,   619,    -1,    -1,   618,   352,   619,    -1,    -1,
     618,   619,    -1,   618,   352,   619,    -1,    -1,   929,    -1,
     929,   930,    -1,   930,    -1,   478,    -1,   568,    -1,   608,
      -1,   618,   272,   619,    -1,   618,   555,   619,    -1,   618,
     117,   619,    -1,   618,   352,   619,    -1,    -1,   931,    -1,
      -1,   925,    -1,    -1,   935,    -1,   935,   936,    -1,   936,
      -1,   351,    -1,  1123,   351,    -1,   120,   939,    -1,   358,
     570,   938,    -1,    25,    -1,   466,   120,   581,    -1,   965,
     245,    -1,   565,    -1,   565,   245,    -1,    73,  1409,    -1,
      68,   946,    -1,   914,   947,    -1,   347,   927,    -1,   938,
      -1,  1394,    -1,    59,   470,    -1,    58,    -1,  1414,    -1,
      33,    -1,   941,    -1,   120,    -1,    -1,   940,   942,    -1,
    1414,    -1,    33,    -1,   944,    -1,   120,    -1,  1414,    -1,
      -1,    68,   948,    -1,   946,    -1,   120,    -1,    -1,   120,
      -1,    20,    -1,    33,    20,    -1,    20,    33,    -1,   562,
      -1,   562,    33,    -1,    33,   562,    -1,    -1,   950,    -1,
     951,    -1,    47,    -1,   940,   941,   953,    -1,    33,    -1,
      33,   940,   941,    -1,    -1,    33,    -1,    -1,   618,  1235,
     955,   619,    -1,    19,    -1,   126,    -1,   445,    -1,    -1,
     956,    -1,   956,   957,    -1,   957,    -1,  1235,    -1,   959,
     958,    -1,   960,    -1,   961,   620,   960,    -1,   959,   611,
     959,    -1,   961,    -1,   962,    -1,    -1,   255,   963,    -1,
      -1,   395,    -1,   418,  1405,   967,   969,   970,    -1,    -1,
     618,   968,   619,    -1,   968,   620,  1412,    -1,  1412,    -1,
      -1,   299,   187,    -1,   299,   378,    -1,   299,   479,    -1,
      -1,   358,   570,   971,    -1,   358,   125,   971,    -1,   358,
     570,   971,   358,   125,   971,    -1,   358,   125,   971,   358,
     570,   971,    -1,   440,    -1,    50,    -1,   470,   351,    -1,
     348,     5,    -1,   470,   120,    -1,   974,    -1,   395,   245,
      -1,   565,   975,    -1,   245,    -1,   222,    -1,    -1,   974,
      -1,   243,    -1,   222,    -1,   221,    -1,    -1,   565,    -1,
     188,    -1,   488,    -1,    -1,   980,    -1,   980,   988,    -1,
      -1,   985,    -1,    -1,   987,    -1,    -1,   986,    -1,   990,
      -1,   985,   990,    -1,   991,    -1,   986,   991,    -1,   992,
      -1,   987,   992,    -1,   576,   993,    -1,   553,   993,    -1,
     244,  1290,  1234,    -1,    73,  1409,    -1,   989,    -1,   988,
      -1,   989,    -1,   989,    -1,   596,   377,  1408,    -1,    45,
      -1,   455,    -1,   203,    -1,   994,   620,   995,  1227,    -1,
     995,  1227,    -1,  1412,    -1,  1412,   618,   352,   619,    -1,
      -1,  1404,    -1,    -1,   626,  1412,    -1,  1392,    -1,   998,
     620,  1392,    -1,    -1,    13,  1033,   527,  1405,  1000,  1011,
      -1,    -1,    13,   103,  1010,  1001,   884,    -1,    13,   103,
    1412,   571,   106,   131,   333,    -1,    -1,    13,   397,   676,
    1002,   677,    -1,    -1,    13,   189,   676,  1003,   677,    -1,
      -1,    13,  1514,  1509,  1004,  1516,    -1,    -1,    13,  1509,
    1005,  1516,    -1,    -1,    13,  1509,   162,   676,  1006,  1007,
    1008,   666,   671,  1009,    -1,    13,   525,   787,    -1,    13,
     268,   199,   789,    -1,    13,   525,   784,    -1,    13,   525,
     783,    -1,    13,   468,  1414,   363,   618,   660,   619,    -1,
      -1,   358,   457,   664,    -1,   670,    -1,   358,   457,   664,
     670,    -1,    -1,   428,   544,   676,    -1,    -1,   138,   672,
      -1,    -1,  1412,    -1,    -1,   133,   525,    -1,   220,   525,
      -1,  1026,   831,    -1,  1026,  1015,    -1,  1015,    -1,   832,
      -1,  1017,    -1,   139,   379,  1024,    -1,   413,   379,  1071,
    1016,    -1,    -1,   362,   379,  1071,  1016,  1012,  1071,    -1,
      14,   379,  1071,  1016,    -1,    -1,    61,   379,  1016,  1013,
    1066,    -1,    -1,   430,   379,  1071,  1016,  1014,  1058,    -1,
      66,   379,  1071,  1235,    -1,   551,   379,  1016,    -1,  1020,
      -1,   164,   379,  1025,   596,   527,  1405,   834,    -1,   427,
     381,   834,    -1,    12,    -1,  1024,    -1,    -1,     6,   379,
    1071,  1018,  1019,    -1,    -1,   618,   856,   619,    -1,   380,
    1235,    -1,    -1,   429,   379,  1071,  1021,  1022,    -1,    -1,
      -1,  1024,  1023,   232,   618,   856,   619,    -1,  1025,    -1,
    1024,   620,  1025,    -1,  1412,    -1,  1028,    -1,  1026,   620,
    1028,    -1,     6,  1032,    -1,  1027,   906,  1035,    -1,     6,
     907,    -1,  1027,   618,   903,   619,    -1,    -1,    56,  1032,
    1404,  1029,   912,  1035,    -1,    -1,    -1,   324,  1032,  1404,
    1030,   914,   934,  1031,  1035,    -1,   139,  1032,  1404,  1034,
      -1,   139,   183,   245,   996,    -1,   139,   395,   245,    -1,
     139,   974,  1404,    -1,   132,   243,    -1,   147,   243,    -1,
      13,  1032,  1404,   470,   120,  1394,    -1,    13,  1032,  1404,
     139,   120,    -1,   428,  1036,  1405,    -1,    91,   544,   940,
     942,   947,    -1,   891,    -1,   182,    -1,  1220,    -1,    -1,
      71,    -1,    -1,   218,    -1,    -1,   440,    -1,    50,    -1,
      -1,     8,  1412,    -1,   177,    -1,    -1,   544,    -1,   155,
      -1,    18,    -1,    -1,    -1,   504,   480,  1047,  1038,  1051,
    1039,  1042,    -1,   508,   480,  1047,    -1,   504,   546,  1041,
      -1,    -1,   596,    82,   483,    -1,  1043,  1044,  1045,  1046,
      -1,    -1,   573,   155,  1409,    -1,    -1,   382,   155,  1409,
      -1,    -1,   121,   155,  1409,    -1,    -1,   384,   155,  1409,
      -1,    -1,  1048,  1049,    -1,  1050,    -1,  1049,   620,  1050,
      -1,    -1,   500,    -1,   424,    -1,    -1,   569,  1052,    -1,
     651,    -1,  1052,   620,   651,    -1,    -1,    60,  1437,  1054,
    1260,  1055,    -1,    -1,   406,    -1,   169,    -1,    -1,   430,
    1071,  1437,  1057,  1260,  1058,    -1,    -1,  1059,    -1,  1060,
      -1,  1060,  1059,    -1,   406,    -1,   169,    -1,   574,    -1,
      -1,    14,  1071,  1437,  1062,  1260,    -1,    34,  1409,    -1,
      -1,    61,  1437,  1065,  1260,  1066,    -1,    -1,  1067,    -1,
    1068,    -1,  1068,  1067,    -1,   406,    -1,   173,    -1,   311,
      -1,   169,    -1,    57,    -1,   184,   571,    -1,    -1,   362,
    1071,  1437,  1070,  1260,    -1,    -1,   350,    -1,   264,    -1,
      -1,   428,  1437,  1073,  1075,    -1,   428,   573,   675,  1074,
      -1,  1415,   544,  1415,    -1,  1074,   620,  1415,   544,  1415,
      -1,  1076,    -1,  1075,   620,  1076,    -1,  1405,   544,  1405,
      -1,    -1,    48,   222,  1078,  1079,   235,  1083,    -1,  1080,
      -1,  1082,    -1,  1081,    -1,  1080,   620,  1081,    -1,  1405,
    1092,    -1,  1405,  1090,  1092,    -1,  1412,    -1,   120,    -1,
      -1,   263,   222,   232,    48,  1085,  1086,    -1,  1089,    -1,
    1087,    -1,  1088,    -1,  1087,   620,  1088,    -1,  1405,  1092,
    1095,    -1,  1405,  1090,  1092,  1095,    -1,    -1,   379,   834,
    1091,   618,  1016,   619,    -1,    -1,  1093,  1094,    -1,    -1,
     974,   618,  1202,   619,    -1,    -1,   218,   251,    -1,  1097,
      -1,   462,  1100,    -1,   618,  1098,   619,  1491,    -1,   462,
    1102,    -1,   618,  1098,   619,    -1,   462,  1181,    -1,   618,
    1099,   619,    -1,    -1,  1102,  1101,  1488,    -1,    -1,    -1,
    1103,  1107,  1111,  1104,  1105,  1110,    -1,  1223,  1229,    -1,
    1249,    -1,  1106,    -1,  1249,  1106,    -1,  1106,  1249,    -1,
     186,  1161,  1212,  1217,  1214,  1223,  1229,  1240,    -1,   186,
     140,  1212,  1229,    -1,    -1,  1108,    -1,  1108,  1109,    -1,
    1109,    -1,  1505,    -1,   497,    -1,   495,    -1,    -1,   184,
     570,    -1,   267,   235,   472,   322,    -1,  1111,   620,  1112,
      -1,  1112,    -1,   613,    -1,  1113,  1399,  1114,    -1,  1113,
    1117,  1114,  1115,    -1,    -1,    -1,    -1,    18,  1412,    -1,
      18,  1409,    -1,  1412,    -1,  1409,    -1,    -1,   618,   619,
      -1,  1117,  1121,  1117,    -1,  1117,   605,  1117,    -1,  1117,
    1122,  1117,    -1,   346,  1117,    -1,  1118,   238,   550,    -1,
    1118,   238,  1123,   550,    -1,  1118,   238,   172,    -1,  1118,
     238,  1123,   172,    -1,  1118,   238,   566,    -1,  1118,   238,
    1123,   566,    -1,  1118,    -1,  1118,   238,   351,    -1,  1118,
     238,  1123,   351,    -1,  1118,   156,  1119,    -1,  1118,  1125,
    1119,    -1,  1118,  1125,  1126,   618,  1500,   619,    -1,  1119,
      -1,  1120,   235,   618,  1500,   619,    -1,  1120,  1123,   235,
     618,  1500,   619,    -1,  1120,   235,   618,  1117,   619,    -1,
    1120,   235,   618,  1117,   620,  1154,   619,    -1,  1120,  1123,
     235,   618,  1117,   619,    -1,  1120,  1123,   235,   618,  1117,
     620,  1154,   619,    -1,  1120,    31,  1120,    16,  1119,    -1,
    1120,  1123,    31,  1120,    16,  1119,    -1,  1120,   486,   257,
    1120,    -1,  1120,   257,  1127,  1216,    -1,  1120,  1123,   257,
    1127,  1216,    -1,  1120,   419,  1120,    -1,  1120,  1123,   419,
    1120,    -1,  1120,    -1,  1120,   609,  1120,    -1,  1120,   610,
    1120,    -1,  1120,   473,  1120,    -1,  1120,   474,  1120,    -1,
    1120,   612,  1120,    -1,  1120,   611,  1120,    -1,  1120,   612,
     231,  1117,  1206,    -1,  1120,   611,   231,  1117,  1206,    -1,
    1120,   613,  1120,    -1,  1120,   614,  1120,    -1,  1120,   615,
    1120,    -1,  1120,   136,  1120,    -1,  1120,   325,  1120,    -1,
    1120,   616,  1120,    -1,  1127,    -1,   369,    -1,   366,    -1,
      16,    -1,    15,    -1,   346,    -1,   345,    -1,   621,    -1,
     345,    -1,   155,    -1,   190,    -1,   201,    -1,   249,    -1,
     276,    -1,   339,    -1,    12,    -1,    17,    -1,  1401,    -1,
    1128,    -1,  1129,    -1,  1132,    -1,  1130,    -1,  1127,    68,
    1414,    -1,  1395,    -1,  1393,    -1,  1144,    -1,  1140,    -1,
    1127,   368,  1127,    -1,   612,  1127,    -1,   611,  1127,    -1,
     617,  1127,    -1,  1124,  1127,    -1,   618,  1500,   619,    -1,
     618,  1117,   619,    -1,   618,  1117,   620,  1154,   619,    -1,
     453,   618,  1117,   620,  1154,   619,    -1,   166,   618,  1500,
     619,    -1,   622,  1412,  1117,   623,    -1,   299,  1155,     9,
     618,  1120,  1134,   619,    -1,    33,  1127,    -1,    53,   618,
    1117,    18,  1152,   619,    -1,    52,  1157,  1159,  1158,   149,
      -1,    91,   618,  1117,   620,  1152,   619,    -1,    91,   618,
    1117,   576,   941,   619,    -1,   120,   618,  1401,   619,    -1,
     580,   618,  1402,   619,    -1,   231,  1117,  1206,   612,  1117,
      -1,    59,   618,  1154,   619,    -1,    59,   618,  1154,   576,
     941,   619,    -1,    99,  1116,    -1,   110,   618,  1117,   619,
      -1,   115,   618,  1117,   619,    -1,   213,   618,  1117,   619,
      -1,   228,   618,  1117,   620,  1117,   620,  1117,   620,  1117,
     619,    -1,   231,   618,  1117,   620,  1117,   619,    -1,   231,
     618,  1117,   620,  1117,   620,  1154,   619,    -1,   253,   618,
    1117,   620,  1117,   619,    -1,   319,   618,  1117,   619,    -1,
     326,   618,  1117,   619,    -1,   447,   618,  1117,   620,  1117,
     619,    -1,   460,   618,  1117,   619,    -1,   540,   618,  1117,
     619,    -1,   537,   618,  1117,   619,    -1,   537,   618,  1117,
     620,  1117,   619,    -1,   549,   618,  1117,   619,    -1,   549,
     618,   250,  1117,   186,  1117,   619,    -1,   549,   618,   545,
    1117,   186,  1117,   619,    -1,   549,   618,    44,  1117,   186,
    1117,   619,    -1,   549,   618,   250,   186,  1117,   619,    -1,
     549,   618,   545,   186,  1117,   619,    -1,   549,   618,    44,
     186,  1117,   619,    -1,   549,   618,  1117,   186,  1117,   619,
      -1,   573,   618,   619,    -1,   607,   618,  1117,   619,    -1,
       7,   618,  1117,   620,  1117,   619,    -1,     7,   618,  1117,
     620,   231,  1117,  1206,   619,    -1,    97,  1116,    -1,   102,
     927,    -1,   108,   618,  1117,   620,   231,  1117,  1206,   619,
      -1,   109,   618,  1117,   620,   231,  1117,  1206,   619,    -1,
     171,   618,  1206,   186,  1117,   619,    -1,   194,   618,  1208,
     620,  1117,   619,    -1,   938,    -1,   390,   618,  1120,   235,
    1117,   619,    -1,   513,   618,  1117,   620,  1117,   619,    -1,
     513,   618,  1117,   620,   231,  1117,  1206,   619,    -1,   517,
     618,  1117,   620,  1117,   620,  1117,   619,    -1,   517,   618,
    1117,   620,  1117,   619,    -1,   517,   618,  1117,   186,  1117,
     184,  1117,   619,    -1,   517,   618,  1117,   186,  1117,   619,
      -1,   523,   927,    -1,   538,   618,  1207,   620,  1117,   620,
    1117,   619,    -1,   539,   618,  1207,   620,  1117,   620,  1117,
     619,    -1,   577,  1116,    -1,   579,   927,    -1,   578,   927,
      -1,    20,   618,  1117,   619,    -1,    58,   618,  1117,   619,
      -1,    66,   618,  1154,   619,    -1,    69,   618,  1117,   619,
      -1,   103,   618,   619,    -1,   217,   618,  1117,   620,  1117,
     620,  1117,   619,    -1,   315,   618,  1117,   619,    -1,   325,
     618,  1117,   620,  1117,   619,    -1,   357,   618,  1117,   619,
      -1,   382,   618,  1117,   619,    -1,   404,   618,  1117,   619,
      -1,   432,   618,  1117,   620,  1117,   619,    -1,   433,   618,
    1117,   620,  1117,   620,  1117,   619,    -1,   445,   618,  1117,
     619,    -1,   454,   618,   619,    -1,   551,   618,  1117,   620,
    1117,   619,    -1,   591,   618,  1117,   619,    -1,   591,   618,
    1117,   620,  1117,   619,    -1,   592,   618,  1117,   964,   619,
      -1,   592,   618,  1117,    18,    59,   954,   964,   619,    -1,
     592,   618,  1117,    18,    33,   954,   619,    -1,   592,   618,
    1117,   620,  1234,   620,  1234,   620,  1234,   619,    -1,  1131,
      -1,    87,   618,  1117,   620,  1117,   619,    -1,   192,   618,
    1154,   619,    -1,   261,   618,  1154,   619,    -1,   327,   618,
    1154,   619,    -1,   328,   618,  1154,   619,    -1,   329,   618,
    1154,   619,    -1,   387,   618,  1117,   620,  1117,   619,    -1,
     388,   618,  1154,   619,    -1,    -1,  1408,   618,  1133,  1137,
     619,    -1,  1412,   626,  1412,   618,  1153,   619,    -1,  1135,
    1136,    -1,   235,    42,   322,    -1,    -1,   235,   335,   247,
     322,    -1,    -1,   596,   405,   168,    -1,    -1,  1138,    -1,
    1139,    -1,  1138,   620,  1139,    -1,  1113,  1117,  1114,  1115,
      -1,    27,   618,  1150,   619,    -1,    27,   618,   135,  1150,
     619,    -1,    36,   618,  1150,   619,    -1,    37,   618,  1150,
     619,    -1,    39,   618,  1150,   619,    -1,    92,   618,  1211,
     613,   619,    -1,    92,   618,  1150,   619,    -1,    -1,    -1,
      92,   618,   135,  1141,  1154,  1142,   619,    -1,   321,   618,
    1150,   619,    -1,   321,   618,   135,  1150,   619,    -1,   304,
     618,  1150,   619,    -1,   304,   618,   135,  1150,   619,    -1,
     507,   618,  1150,   619,    -1,   585,   618,  1150,   619,    -1,
     506,   618,  1150,   619,    -1,   587,   618,  1150,   619,    -1,
     518,   618,  1150,   619,    -1,   518,   618,   135,  1150,   619,
      -1,    -1,   200,   618,  1147,  1143,  1154,  1149,  1148,   619,
      -1,    -1,   625,  1145,  1146,    -1,  1414,   471,  1117,    -1,
    1414,    -1,   625,  1427,  1414,   997,    -1,    -1,   135,    -1,
      -1,   464,  1392,    -1,    -1,  1224,    -1,    -1,  1211,  1151,
    1117,    -1,    33,   932,    -1,    59,   932,   952,    -1,   337,
     932,    -1,   478,    -1,   478,   233,    -1,   568,    -1,   568,
     233,    -1,   110,    -1,   540,   926,    -1,   107,   926,    -1,
     118,   924,    -1,    -1,  1154,    -1,  1117,    -1,  1154,   620,
    1117,    -1,  1156,    -1,   618,  1156,   619,    -1,  1401,    -1,
    1156,   620,  1401,    -1,    -1,  1117,    -1,    -1,   145,  1117,
      -1,   593,  1117,   536,  1117,    -1,  1159,   593,  1117,   536,
    1117,    -1,  1175,    -1,  1164,    -1,  1163,    -1,  1160,    -1,
     622,  1412,  1160,   623,    -1,  1162,    -1,  1163,   620,  1162,
      -1,  1160,  1172,  1160,    -1,  1160,   510,  1175,    -1,    -1,
    1160,  1172,  1160,   358,  1165,  1117,    -1,    -1,  1160,   510,
    1175,   358,  1166,  1117,    -1,    -1,  1160,  1172,  1160,   576,
    1167,   618,  1205,   619,    -1,  1160,   335,   242,  1175,    -1,
      -1,  1160,   253,  1191,   242,  1160,   358,  1168,  1117,    -1,
      -1,  1160,   253,  1191,   242,  1175,  1169,   576,   618,  1205,
     619,    -1,  1160,   335,   253,  1191,   242,  1175,    -1,    -1,
    1160,   447,  1191,   242,  1160,   358,  1170,  1117,    -1,    -1,
    1160,   447,  1191,   242,  1175,  1171,   576,   618,  1205,   619,
      -1,  1160,   335,   447,  1191,   242,  1175,    -1,   242,    -1,
     225,   242,    -1,    95,   242,    -1,    -1,  1174,    -1,   379,
     618,  1205,   619,   834,    -1,    -1,  1176,  1405,  1173,  1210,
    1200,    -1,  1190,  1189,  1186,    -1,   618,  1189,  1177,   619,
    1210,    -1,  1184,  1492,    -1,    -1,    -1,  1177,   564,  1496,
    1178,  1497,  1179,  1492,    -1,  1181,    -1,    -1,    -1,  1182,
    1503,  1111,  1183,   901,  1110,    -1,    -1,  1189,  1185,  1163,
      -1,    -1,    -1,  1187,  1107,  1111,  1188,   901,    -1,    -1,
     462,    -1,    -1,   370,    -1,    -1,   184,   242,    -1,   184,
     367,    46,    -1,   184,   199,    46,    -1,   182,    -1,   218,
      -1,    -1,  1193,   974,  1192,  1195,   618,  1204,   619,    -1,
      -1,   575,   974,  1192,  1196,   618,  1202,   619,    -1,  1194,
      -1,  1197,  1194,    -1,    -1,    -1,  1199,  1197,    -1,    -1,
    1201,  1198,    -1,    -1,  1204,    -1,  1412,    -1,   395,    -1,
    1203,    -1,  1204,   620,  1203,    -1,  1412,    -1,  1205,   620,
    1412,    -1,  1207,    -1,   111,    -1,   112,    -1,   113,    -1,
     114,    -1,   210,    -1,   211,    -1,   212,    -1,   317,    -1,
     318,    -1,   459,    -1,   606,    -1,   115,    -1,   591,    -1,
     213,    -1,   319,    -1,   326,    -1,   404,    -1,   460,    -1,
     315,    -1,   607,    -1,   110,    -1,   540,    -1,   537,    -1,
     107,    -1,    -1,    18,    -1,   155,    -1,    -1,  1209,  1412,
      -1,    -1,    12,    -1,    -1,    -1,   594,  1213,  1117,    -1,
      -1,    -1,   204,  1215,  1117,    -1,   160,  1127,    -1,    -1,
      -1,   199,    46,  1218,  1219,    -1,  1218,   620,  1400,  1227,
      -1,  1400,  1227,    -1,    -1,   597,    -1,   598,    -1,   367,
      46,  1221,    -1,  1221,   620,  1222,    -1,  1222,    -1,  1402,
    1227,    -1,    -1,  1224,    -1,    -1,   367,    46,  1225,  1226,
      -1,  1226,   620,  1400,  1227,    -1,  1400,  1227,    -1,    -1,
      19,    -1,   126,    -1,    -1,  1230,    -1,    -1,  1230,    -1,
     258,  1231,    -1,  1232,    -1,  1232,   620,  1232,    -1,  1232,
     356,  1232,    -1,  1412,    -1,  1393,    -1,   555,    -1,   272,
      -1,   352,    -1,    -1,   258,  1232,    -1,   352,    -1,   206,
      -1,   272,    -1,   555,    -1,   117,    -1,   179,    -1,   352,
      -1,   206,    -1,   272,    -1,   555,    -1,  1238,    -1,   352,
      -1,   555,    -1,   272,    -1,   117,    -1,   179,    -1,   352,
      -1,   555,    -1,   272,    -1,  1238,    -1,  1239,    -1,   117,
      -1,   179,    -1,    -1,    -1,   397,  1412,  1241,   618,  1242,
     619,    -1,    -1,  1243,    -1,  1243,   620,  1244,    -1,  1244,
      -1,  1113,  1117,  1114,    -1,    -1,  1246,  1247,    -1,  1247,
     620,  1248,    -1,  1248,    -1,   625,  1414,    -1,  1414,    -1,
      -1,   232,  1250,  1251,    -1,    -1,    -1,   371,  1411,  1252,
     943,  1253,  1376,  1379,    -1,   141,  1411,    -1,  1245,    -1,
      -1,   138,  1255,  1154,    -1,    -1,   139,  1266,  1437,  1265,
    1257,  1260,  1034,    -1,    -1,   139,   222,  1412,   358,  1405,
    1258,    -1,   139,   103,  1265,  1412,    -1,   139,   189,  1265,
    1412,   626,  1412,    -1,   139,   189,  1265,  1412,    -1,   139,
     397,  1265,   676,    -1,   139,   573,   675,  1467,    -1,    -1,
     139,   588,  1265,  1259,  1260,  1034,    -1,   139,   162,  1265,
     676,    -1,   139,   548,  1265,   676,    -1,   139,   525,   810,
    1267,    -1,   139,   268,   199,   811,  1267,    -1,   139,   468,
    1265,  1414,    -1,  1261,    -1,  1260,   620,  1261,    -1,  1405,
      -1,  1405,  1173,    -1,  1264,    -1,  1263,   620,  1264,    -1,
    1406,    -1,    -1,   217,   166,    -1,    -1,   530,    -1,    -1,
    1268,    -1,  1269,    -1,  1268,  1269,    -1,  1267,   620,  1269,
      -1,   821,    -1,   822,    -1,    -1,    -1,   228,  1271,  1276,
    1033,  1278,  1272,  1280,  1296,    -1,    -1,    -1,   433,  1274,
    1277,  1278,  1275,  1280,    -1,    -1,   275,    -1,   123,    -1,
     207,    -1,  1305,    -1,   123,    -1,   232,  1279,    -1,  1279,
      -1,  1262,    -1,  1283,    -1,   618,   619,  1283,    -1,   618,
    1282,   619,  1283,    -1,    -1,   470,  1281,  1287,    -1,  1282,
     620,  1398,    -1,  1398,    -1,   580,  1286,    -1,   581,  1286,
      -1,    -1,   879,  1284,  1488,    -1,    -1,   618,   879,   619,
    1285,  1491,    -1,  1286,   620,  1291,    -1,  1291,    -1,  1287,
     620,  1288,    -1,  1288,    -1,  1402,  1289,  1295,    -1,   155,
      -1,   471,    -1,    -1,  1289,    -1,    -1,   618,  1292,  1293,
     619,    -1,    -1,  1294,    -1,  1294,   620,  1295,    -1,  1295,
      -1,  1117,    -1,   120,    -1,    -1,    -1,   358,   142,  1297,
     245,   570,  1303,    -1,    -1,    -1,   570,  1299,  1305,  1033,
    1161,   470,  1301,  1300,  1212,  1223,  1233,    -1,  1301,   620,
    1302,    -1,  1302,    -1,  1402,  1289,  1295,    -1,  1303,   620,
    1304,    -1,  1304,    -1,  1402,  1289,  1295,    -1,    -1,   275,
      -1,    -1,   125,  1307,  1315,  1308,    -1,    -1,   186,  1405,
    1173,  1309,  1212,  1223,  1233,    -1,    -1,  1312,  1310,   186,
    1161,  1212,    -1,    -1,   186,  1263,  1311,   576,  1161,  1212,
      -1,  1313,    -1,  1312,   620,  1313,    -1,  1412,  1314,    -1,
    1412,   626,  1412,  1314,    -1,    -1,   626,   613,    -1,    -1,
    1316,  1315,    -1,   406,    -1,   275,    -1,   218,    -1,    -1,
     551,  1319,  1318,  1261,    -1,    -1,   527,    -1,    -1,  1321,
      -1,  1322,    -1,  1321,   620,  1322,    -1,    93,    -1,   312,
      -1,    41,   236,    -1,    88,   522,    -1,   375,   174,    -1,
     237,    -1,   521,    -1,   487,    -1,    12,    -1,    -1,   184,
     405,   352,    -1,    -1,   475,  1325,  1326,    -1,   104,  1337,
      -1,  1333,   524,  1332,  1337,    -1,  1333,   547,  1332,  1337,
      -1,   161,  1332,  1337,    -1,   527,   505,  1332,  1337,    -1,
     361,   524,  1332,  1337,    -1,   386,    -1,   153,   898,  1329,
      -1,   153,    12,  1329,    -1,  1333,    70,  1334,  1405,  1332,
    1337,    -1,  1330,   269,    -1,   480,   209,    -1,    -1,    34,
     161,  1335,  1336,  1327,  1228,    -1,    -1,   421,   161,  1335,
    1336,  1328,  1228,    -1,   976,  1334,  1405,  1332,  1212,    -1,
    1331,   152,    -1,    23,    -1,    90,    -1,   396,    -1,    92,
     618,   613,   619,   590,    -1,    92,   618,   613,   619,   158,
      -1,   590,  1228,    -1,   158,  1228,    -1,   401,    -1,   400,
    1320,  1323,  1228,    -1,  1426,   505,  1337,    -1,  1333,   399,
      -1,  1426,   584,  1337,    -1,   940,  1337,    -1,    69,  1337,
      -1,   198,    -1,   198,   184,  1415,    -1,    94,   103,   889,
    1412,    -1,    94,   527,  1405,    -1,    94,   588,  1405,    -1,
     296,   505,    -1,   480,   505,    -1,    94,   397,   676,    -1,
      94,   189,   676,    -1,    94,   548,   676,    -1,   397,   505,
    1337,    -1,   189,   505,  1337,    -1,   397,    67,   676,    -1,
     189,    67,   676,    -1,    94,   162,   676,    -1,   505,    -1,
     330,    -1,   269,    -1,   296,    -1,    33,    -1,    -1,   509,
      -1,    -1,  1334,  1412,    -1,    -1,   187,    -1,   186,    -1,
     235,    -1,    -1,   235,  1409,    -1,    -1,   186,  1236,    -1,
      -1,   257,  1409,    -1,   594,  1117,    -1,    -1,  1342,  1405,
    1339,  1344,    -1,    -1,  1342,  1343,  1340,  1341,    -1,  1096,
      -1,  1270,    -1,  1273,    -1,  1298,    -1,  1306,    -1,   126,
      -1,   127,    -1,    -1,   169,    -1,   380,    -1,    -1,  1392,
      -1,  1412,    -1,    -1,   181,  1071,  1346,  1347,    -1,    -1,
      -1,  1437,  1348,  1353,  1349,  1350,    -1,  1351,    -1,    -1,
     596,   410,   267,    -1,  1351,   620,  1352,    -1,  1352,    -1,
     157,   269,    -1,   153,   269,    -1,   191,   269,    -1,   481,
     269,    -1,    33,   269,    -1,   420,   269,    -1,   405,    48,
      -1,   209,    -1,   396,    -1,   269,    -1,   505,    -1,   128,
      -1,   438,    -1,    -1,  1260,    -1,    -1,   436,  1355,  1356,
      -1,  1356,   620,  1357,    -1,  1357,    -1,    -1,   480,  1358,
    1359,    -1,   296,    -1,   405,    48,    -1,    -1,    12,    -1,
      -1,   403,  1361,  1362,    -1,  1330,   269,  1363,    -1,   544,
    1409,    -1,    29,  1117,    -1,   246,  1365,  1117,    -1,    -1,
      81,    -1,   405,    -1,   575,  1412,    -1,    -1,    -1,    -1,
      -1,   263,  1372,  1368,  1374,  1373,   223,  1411,  1369,  1375,
     232,   527,  1405,  1173,  1370,   943,  1371,  1382,  1376,  1379,
    1383,  1385,  1388,    -1,   106,    -1,   604,    -1,    -1,   264,
      -1,    -1,    79,    -1,   275,    -1,    -1,   433,    -1,   218,
      -1,    -1,    70,  1377,    -1,  1377,  1378,    -1,  1378,    -1,
     532,    46,  1392,    -1,   365,   148,    46,  1392,    -1,   148,
      46,  1392,    -1,   159,    46,  1392,    -1,    -1,   260,  1380,
      -1,  1380,  1381,    -1,  1381,    -1,   532,    46,  1392,    -1,
     502,    46,  1392,    -1,    -1,   451,   215,    46,  1392,    -1,
      -1,   218,   352,  1384,    -1,   260,    -1,   451,    -1,    -1,
     618,  1386,   619,    -1,   618,   619,    -1,  1386,   620,  1387,
      -1,  1387,    -1,  1402,    -1,   625,  1414,    -1,    -1,   470,
    1389,    -1,  1389,   620,  1390,    -1,  1390,    -1,  1402,  1289,
    1113,  1295,  1114,    -1,   533,    -1,   336,    -1,   558,   533,
      -1,  1391,  1410,    -1,  1410,    -1,   206,    -1,    35,    -1,
     376,    -1,  1395,    -1,   612,  1396,    -1,   611,  1396,    -1,
    1391,    -1,  1396,    -1,  1397,    -1,   351,    -1,   172,    -1,
     550,    -1,   206,    -1,    35,    -1,   558,   206,    -1,   558,
      35,    -1,   352,    -1,   272,    -1,   555,    -1,   117,    -1,
     179,    -1,   110,   533,    -1,   540,   533,    -1,   537,   533,
      -1,  1402,    -1,  1399,    -1,  1412,   626,   613,    -1,  1412,
     626,  1412,   626,   613,    -1,  1117,    -1,  1412,    -1,  1403,
      -1,  1412,    -1,  1403,    -1,  1412,   626,  1412,    -1,   626,
    1412,   626,  1412,    -1,  1412,   626,  1412,   626,  1412,    -1,
    1412,    -1,  1412,   626,  1412,   626,  1412,    -1,  1412,   626,
    1412,    -1,   626,  1412,    -1,  1412,    -1,  1412,   626,  1412,
      -1,   626,  1412,    -1,  1412,  1314,    -1,  1412,   626,  1412,
    1314,    -1,  1412,    -1,   214,    -1,   216,    -1,   533,    -1,
     533,    -1,   533,    -1,  1408,    -1,  1416,    -1,  1408,    -1,
    1417,    -1,  1412,    -1,  1409,    -1,   256,    -1,  1414,    -1,
    1414,   625,  1414,    -1,    99,  1116,    -1,  1417,    -1,    20,
      -1,    28,    -1,    30,    -1,    47,    -1,    48,    -1,    58,
      -1,    60,    -1,    65,    -1,    73,    -1,    75,    -1,    87,
      -1,   116,    -1,   138,    -1,   149,    -1,   165,    -1,   181,
      -1,   202,    -1,   205,    -1,   208,    -1,   230,    -1,   247,
      -1,   348,    -1,   361,    -1,   363,    -1,   373,    -1,   377,
      -1,   389,    -1,   392,    -1,   427,    -1,   430,    -1,   436,
      -1,   439,    -1,   448,    -1,   456,    -1,   461,    -1,   468,
      -1,   478,    -1,   484,    -1,   480,    -1,   485,    -1,   504,
      -1,   508,    -1,   551,    -1,   562,    -1,   563,    -1,   600,
      -1,   603,    -1,   571,    -1,     5,    -1,     7,    -1,     8,
      -1,     9,    -1,    10,    -1,    11,    -1,    17,    -1,    22,
      -1,    23,    -1,    25,    -1,    24,    -1,    26,    -1,    27,
      -1,    34,    -1,    38,    -1,    41,    -1,    43,    -1,    42,
      -1,    45,    -1,    51,    -1,    54,    -1,    55,    -1,    57,
      -1,    62,    -1,    64,    -1,    63,    -1,    66,    -1,    67,
      -1,    69,    -1,    72,    -1,    70,    -1,    74,    -1,    76,
      -1,    77,    -1,    78,    -1,    79,    -1,    81,    -1,    82,
      -1,    84,    -1,    86,    -1,    85,    -1,    88,    -1,    90,
      -1,    93,    -1,    96,    -1,    98,    -1,   101,    -1,   106,
      -1,   105,    -1,   107,    -1,   110,    -1,   115,    -1,   121,
      -1,   122,    -1,   124,    -1,   128,    -1,   130,    -1,   131,
      -1,   132,    -1,   133,    -1,   134,    -1,   141,    -1,   142,
      -1,   143,    -1,   150,    -1,   154,    -1,   153,    -1,   152,
      -1,   157,    -1,   158,    -1,   160,    -1,   162,    -1,   161,
      -1,   163,    -1,   164,    -1,   168,    -1,   169,    -1,   170,
      -1,   174,    -1,   173,    -1,   185,    -1,   147,    -1,   187,
      -1,   176,    -1,   177,    -1,   178,    -1,   191,    -1,   193,
      -1,   192,    -1,   194,    -1,   198,    -1,   196,    -1,   203,
      -1,   209,    -1,   213,    -1,   215,    -1,   219,    -1,   234,
      -1,   220,    -1,   221,    -1,   224,    -1,   236,    -1,   237,
      -1,   239,    -1,   240,    -1,   229,    -1,   244,    -1,   248,
      -1,   251,    -1,   254,    -1,   255,    -1,   261,    -1,   262,
      -1,   264,    -1,   266,    -1,   268,    -1,   269,    -1,   302,
      -1,   296,    -1,   298,    -1,   280,    -1,   284,    -1,   281,
      -1,   282,    -1,   297,    -1,   283,    -1,   286,    -1,   278,
      -1,   285,    -1,   279,    -1,   294,    -1,   288,    -1,   287,
      -1,   289,    -1,   290,    -1,   291,    -1,   292,    -1,   293,
      -1,   300,    -1,   301,    -1,   303,    -1,   305,    -1,   306,
      -1,   311,    -1,   312,    -1,   313,    -1,   314,    -1,   315,
      -1,   316,    -1,   319,    -1,   320,    -1,   324,    -1,   322,
      -1,   326,    -1,   327,    -1,   328,    -1,   329,    -1,   330,
      -1,   331,    -1,   333,    -1,   332,    -1,   334,    -1,   337,
      -1,   338,    -1,   342,    -1,   341,    -1,   349,    -1,   343,
      -1,   344,    -1,   353,    -1,   355,    -1,   356,    -1,   357,
      -1,   360,    -1,   374,    -1,   375,    -1,   378,    -1,   381,
      -1,   380,    -1,   382,    -1,   383,    -1,   384,    -1,   385,
      -1,   386,    -1,   387,    -1,   388,    -1,   393,    -1,   394,
      -1,   396,    -1,   398,    -1,   399,    -1,   400,    -1,   401,
      -1,   402,    -1,   404,    -1,   405,    -1,   406,    -1,   409,
      -1,   413,    -1,   414,    -1,   416,    -1,   415,    -1,   417,
      -1,   420,    -1,   421,    -1,   422,    -1,   423,    -1,   424,
      -1,   426,    -1,   429,    -1,   431,    -1,   434,    -1,   438,
      -1,   441,    -1,   442,    -1,   443,    -1,   445,    -1,   449,
      -1,   450,    -1,   451,    -1,   454,    -1,   452,    -1,   453,
      -1,   455,    -1,   457,    -1,   458,    -1,   460,    -1,   466,
      -1,   465,    -1,   467,    -1,   479,    -1,   472,    -1,   476,
      -1,   481,    -1,   483,    -1,   486,    -1,   487,    -1,   495,
      -1,   494,    -1,   497,    -1,   500,    -1,   503,    -1,   505,
      -1,   509,    -1,   511,    -1,   512,    -1,   513,    -1,   514,
      -1,   516,    -1,   515,    -1,   519,    -1,   520,    -1,   521,
      -1,   522,    -1,   529,    -1,   524,    -1,   528,    -1,   525,
      -1,   530,    -1,   531,    -1,   534,    -1,   535,    -1,   546,
      -1,   547,    -1,   537,    -1,   538,    -1,   539,    -1,   540,
      -1,   552,    -1,   553,    -1,   554,    -1,   189,    -1,   556,
      -1,   557,    -1,   560,    -1,   559,    -1,   566,    -1,   569,
      -1,   573,    -1,   574,    -1,   584,    -1,   588,    -1,   581,
      -1,   590,    -1,   589,    -1,   591,    -1,   599,    -1,   592,
      -1,   602,    -1,   604,    -1,   607,    -1,    -1,   470,  1420,
    1419,  1421,    -1,    -1,   364,    -1,  1422,    -1,  1421,   620,
    1422,    -1,    -1,  1423,  1428,    -1,  1425,    -1,   196,    -1,
     264,    -1,   467,    -1,    -1,    -1,   196,    -1,   264,    -1,
     467,    -1,    -1,   196,   626,    -1,   264,   626,    -1,   467,
     626,    -1,  1429,    -1,  1425,  1430,    -1,  1424,  1431,  1289,
    1434,    -1,  1424,   546,   239,   255,  1432,    -1,   625,  1414,
    1289,  1117,    -1,   625,   625,  1427,  1431,  1289,  1434,    -1,
     940,   945,    -1,   332,  1289,  1117,    -1,   332,   942,   947,
      -1,   382,  1289,  1433,    -1,   382,   184,  1415,  1289,  1433,
      -1,  1412,    -1,  1412,   626,  1412,    -1,   120,   626,  1412,
      -1,   410,   556,    -1,   410,    74,    -1,   431,   410,    -1,
     465,    -1,   533,    -1,   382,   618,   533,   619,    -1,   357,
     618,   533,   619,    -1,  1117,    -1,   120,    -1,   358,    -1,
      12,    -1,    33,    -1,    -1,   267,  1437,  1436,  1438,    -1,
     527,    -1,   524,    -1,  1439,    -1,  1438,   620,  1439,    -1,
    1405,  1210,  1440,    -1,   410,    -1,   601,    -1,   275,   601,
      -1,   410,   264,    -1,    -1,   567,  1442,  1437,    -1,   202,
    1405,   361,  1210,    -1,   202,  1407,    65,    -1,    -1,   202,
    1407,   410,  1444,  1445,  1212,  1229,    -1,  1446,    -1,  1412,
    1447,    -1,   177,    -1,   342,    -1,   177,    -1,   342,    -1,
     394,    -1,   248,    -1,    -1,  1449,  1448,   618,  1294,   619,
      -1,   155,    -1,   190,    -1,   249,    -1,   201,    -1,   276,
      -1,   446,   675,  1451,    -1,  1455,   358,  1454,  1466,   186,
    1468,    -1,  1455,   358,   189,  1466,   186,  1468,    -1,  1455,
     358,   397,  1466,   186,  1468,    -1,    12,  1456,   620,   197,
     364,   186,  1468,    -1,   402,   358,  1415,   186,  1468,    -1,
     197,   675,  1453,    -1,  1455,   358,  1454,  1466,   544,  1468,
    1473,  1474,    -1,  1455,   358,   189,  1466,   544,  1468,  1473,
    1474,    -1,  1455,   358,   397,  1466,   544,  1468,  1473,  1474,
      -1,   402,   358,  1415,   544,  1468,  1475,    -1,    -1,   527,
      -1,  1457,    -1,    12,  1456,    -1,    -1,   396,    -1,  1458,
      -1,  1457,   620,  1458,    -1,    -1,   462,  1459,  1470,    -1,
      -1,   228,  1460,  1470,    -1,    -1,   570,  1461,  1470,    -1,
      -1,   418,  1462,  1470,    -1,   125,    -1,   572,    -1,   222,
      -1,    13,    -1,    94,    -1,   139,    -1,   165,    -1,   426,
      -1,   476,    -1,   398,    -1,   176,    -1,   197,   364,    -1,
     475,   104,    -1,   519,    -1,    94,   530,   524,    -1,   267,
     524,    -1,   434,   480,    -1,   434,    64,    -1,    94,   588,
      -1,   475,   588,    -1,    94,   450,    -1,    13,   450,    -1,
      94,   573,    -1,   162,    -1,   548,    -1,    94,   525,    -1,
      -1,    16,    -1,  1465,  1463,  1464,    -1,  1465,    -1,   514,
     533,    -1,   240,   533,    -1,    62,   533,    -1,   613,    -1,
    1412,   626,   613,    -1,   613,   626,   613,    -1,  1405,    -1,
    1415,    -1,  1467,   620,  1415,    -1,  1469,    -1,  1468,   620,
    1469,    -1,  1415,   215,    46,   533,    -1,  1415,   215,    46,
     382,   533,    -1,  1415,   215,   596,  1414,    -1,  1415,   215,
     596,  1414,    18,  1409,    -1,  1415,    -1,    -1,   618,  1471,
     619,    -1,  1471,   620,  1472,    -1,  1472,    -1,  1412,    -1,
      -1,   435,  1464,    -1,   435,   501,    -1,   435,   602,    -1,
     435,   344,    -1,    -1,   596,  1476,    -1,    -1,   596,   197,
     364,    -1,  1476,  1477,    -1,  1477,    -1,   197,   364,    -1,
     301,  1234,    -1,   305,  1234,    -1,   300,  1234,    -1,   306,
    1234,    -1,    -1,    30,  1479,  1480,    -1,    -1,   599,    -1,
      -1,    16,   348,    55,    -1,    16,    55,    -1,    -1,   425,
      -1,   348,   425,    -1,    -1,   456,    -1,    75,  1480,  1481,
    1482,    -1,   448,  1480,  1481,  1482,    -1,   448,  1480,   544,
    1483,  1412,    -1,   456,  1412,    -1,   425,   456,  1412,    -1,
      -1,  1489,    -1,    -1,   564,  1496,  1490,  1097,    -1,    -1,
    1489,    -1,  1493,    -1,    -1,  1493,    -1,    -1,  1494,  1495,
      -1,  1224,  1228,    -1,  1230,    -1,    -1,   135,    -1,    12,
      -1,   462,  1180,    -1,   618,  1099,   619,    -1,  1497,  1492,
      -1,    -1,  1498,   564,  1496,  1499,  1497,  1492,    -1,  1501,
    1498,  1502,    -1,    -1,    -1,    -1,  1504,    -1,  1504,  1505,
      -1,  1505,    -1,   510,    -1,   207,    -1,   135,    -1,   498,
      -1,   493,    -1,   494,    -1,   496,    -1,    12,    -1,  1511,
    1507,    -1,  1510,  1508,    -1,  1512,  1509,  1516,    -1,  1516,
      -1,  1524,    -1,  1535,    -1,  1529,    -1,   662,    -1,  1516,
      -1,  1524,    -1,  1535,    -1,  1529,    -1,  1528,    -1,   662,
      -1,  1510,    -1,  1511,    -1,    -1,   122,   155,  1415,    -1,
    1513,    -1,  1513,  1514,    -1,  1514,    -1,   369,   433,    -1,
      11,   155,   557,    -1,    11,   155,   313,    -1,    11,   155,
     531,    -1,    -1,   499,   461,   122,    -1,   499,   461,   234,
      -1,    -1,  1515,   588,  1405,  1517,  1518,    18,  1520,    -1,
      -1,   618,  1519,   619,    -1,  1412,    -1,  1519,   620,  1412,
      -1,    -1,  1521,  1522,  1523,    -1,   462,  1100,    -1,   618,
    1098,   619,  1491,    -1,    -1,   596,    61,   364,    -1,   596,
      51,    61,   364,    -1,   596,   264,    61,   364,    -1,    -1,
      -1,    -1,   548,  1113,   676,   781,   782,   358,  1113,  1525,
    1405,   184,  1113,  1526,   144,   453,  1527,   731,    -1,    10,
    1113,   189,  1412,   443,   902,   485,  1409,    -1,  1113,   189,
    1412,   443,   902,   485,  1409,    -1,    -1,    -1,    -1,    -1,
      -1,  1113,   189,   676,   618,  1530,   687,   619,  1531,   443,
    1532,   937,  1533,   678,  1534,   731,    -1,    -1,    -1,    -1,
      -1,   397,  1113,   676,  1536,   618,  1537,   691,   619,  1538,
     678,  1539,   731,    -1,   603,  1542,  1541,  1543,    -1,   603,
     149,  1541,  1545,    -1,   603,   392,  1541,    -1,   603,    75,
    1541,  1544,    -1,   603,   448,  1541,    -1,   603,   414,    -1,
    1392,    -1,  1392,   620,  1392,    -1,  1392,   620,  1392,   620,
    1234,    -1,    30,    -1,   504,    -1,    -1,   242,    -1,   441,
      -1,    -1,   360,   383,    -1,    -1,    -1,   520,  1546,  1547,
      -1,    -1,   184,   316,    -1,   230,   385,  1412,   485,  1409,
      -1,   563,   385,  1412,    -1
};

/* YYRLINE[YYN] -- source line where rule number YYN was defined.  */
static const yytype_uint16 yyrline[] =
{
       0,  1757,  1757,  1770,  1769,  1794,  1801,  1803,  1807,  1808,
    1813,  1814,  1815,  1816,  1817,  1818,  1819,  1820,  1821,  1822,
    1823,  1824,  1825,  1826,  1827,  1828,  1829,  1830,  1831,  1832,
    1833,  1834,  1835,  1836,  1837,  1838,  1839,  1840,  1841,  1842,
    1843,  1844,  1845,  1846,  1847,  1848,  1849,  1850,  1851,  1852,
    1853,  1854,  1855,  1856,  1857,  1858,  1859,  1860,  1861,  1862,
    1863,  1864,  1868,  1878,  1879,  1883,  1893,  1900,  1911,  1910,
    1921,  1923,  1927,  1928,  1932,  1945,  1944,  1964,  1963,  1982,
    1983,  1987,  1991,  1995,  1999,  2003,  2007,  2011,  2016,  2026,
    2031,  2035,  2039,  2043,  2047,  2051,  2056,  2060,  2065,  2096,
    2101,  2104,  2106,  2107,  2111,  2117,  2121,  2137,  2141,  2154,
    2153,  2198,  2197,  2209,  2207,  2220,  2218,  2230,  2229,  2242,
    2241,  2249,  2253,  2257,  2261,  2268,  2281,  2282,  2286,  2290,
    2294,  2298,  2302,  2306,  2310,  2318,  2317,  2349,  2348,  2355,
    2362,  2363,  2369,  2375,  2385,  2391,  2397,  2399,  2406,  2407,
    2411,  2417,  2426,  2427,  2435,  2435,  2493,  2494,  2495,  2496,
    2497,  2498,  2499,  2500,  2501,  2502,  2503,  2504,  2505,  2510,
    2524,  2540,  2559,  2560,  2564,  2565,  2570,  2572,  2574,  2576,
    2578,  2580,  2582,  2588,  2589,  2590,  2594,  2598,  2606,  2605,
    2618,  2620,  2623,  2625,  2629,  2633,  2640,  2642,  2646,  2647,
    2652,  2671,  2699,  2701,  2705,  2706,  2710,  2737,  2738,  2739,
    2740,  2744,  2745,  2749,  2750,  2755,  2758,  2785,  2784,  2849,
    2865,  2864,  2921,  2947,  2947,  2970,  2971,  2976,  2978,  2983,
    3005,  3016,  3020,  3042,  3043,  3047,  3051,  3060,  3066,  3072,
    3081,  3096,  3119,  3125,  3126,  3132,  3135,  3139,  3147,  3167,
    3169,  3187,  3193,  3195,  3197,  3199,  3201,  3203,  3205,  3207,
    3209,  3211,  3213,  3215,  3220,  3236,  3252,  3253,  3258,  3264,
    3273,  3279,  3288,  3296,  3304,  3313,  3315,  3324,  3329,  3335,
    3344,  3352,  3354,  3356,  3358,  3360,  3362,  3364,  3366,  3368,
    3370,  3372,  3374,  3376,  3381,  3399,  3420,  3421,  3425,  3426,
    3427,  3428,  3429,  3430,  3431,  3432,  3433,  3434,  3435,  3436,
    3437,  3442,  3441,  3448,  3448,  3505,  3504,  3533,  3533,  3549,
    3602,  3645,  3666,  3665,  3687,  3706,  3708,  3709,  3713,  3733,
    3756,  3758,  3774,  3756,  3793,  3795,  3796,  3800,  3801,  3806,
    3812,  3805,  3833,  3832,  3848,  3849,  3853,  3854,  3859,  3863,
    3858,  3884,  3888,  3883,  3907,  3917,  3922,  3921,  3956,  3957,
    3962,  3961,  3993,  3993,  4008,  4007,  4044,  4056,  4058,  4055,
    4085,  4084,  4105,  4107,  4112,  4114,  4116,  4133,  4138,  4144,
    4151,  4152,  4160,  4166,  4175,  4181,  4187,  4188,  4192,  4192,
    4197,  4198,  4199,  4203,  4204,  4205,  4208,  4210,  4214,  4215,
    4216,  4220,  4221,  4222,  4223,  4224,  4225,  4226,  4227,  4230,
    4232,  4236,  4237,  4238,  4242,  4243,  4244,  4245,  4246,  4249,
    4251,  4255,  4256,  4257,  4261,  4262,  4263,  4264,  4265,  4266,
    4267,  4270,  4272,  4276,  4277,  4278,  4282,  4283,  4284,  4289,
    4297,  4305,  4313,  4325,  4337,  4342,  4347,  4355,  4363,  4371,
    4379,  4387,  4395,  4403,  4416,  4429,  4443,  4448,  4461,  4462,
    4513,  4514,  4517,  4532,  4550,  4555,  4553,  4560,  4562,  4561,
    4565,  4564,  4570,  4607,  4608,  4613,  4612,  4631,  4650,  4649,
    4666,  4670,  4678,  4677,  4680,  4682,  4684,  4686,  4691,  4692,
    4697,  4698,  4702,  4703,  4707,  4726,  4736,  4747,  4756,  4757,
    4773,  4775,  4774,  4779,  4777,  4788,  4789,  4793,  4811,  4827,
    4828,  4844,  4859,  4881,  4882,  4887,  4886,  4910,  4920,  4942,
    4941,  4959,  4958,  4978,  5000,  5004,  5033,  5045,  5046,  5051,
    5062,  5050,  5087,  5088,  5092,  5105,  5126,  5139,  5165,  5166,
    5171,  5170,  5207,  5212,  5213,  5217,  5218,  5222,  5224,  5230,
    5232,  5234,  5236,  5238,  5240,  5250,  5265,  5249,  5279,  5280,
    5284,  5285,  5289,  5290,  5294,  5295,  5299,  5300,  5304,  5305,
    5309,  5313,  5314,  5317,  5319,  5323,  5324,  5328,  5329,  5330,
    5334,  5339,  5344,  5349,  5354,  5359,  5364,  5369,  5384,  5390,
    5395,  5400,  5405,  5411,  5410,  5436,  5437,  5438,  5443,  5448,
    5453,  5455,  5457,  5459,  5465,  5473,  5491,  5508,  5534,  5552,
    5553,  5554,  5555,  5556,  5557,  5561,  5562,  5563,  5567,  5568,
    5572,  5573,  5574,  5575,  5580,  5587,  5588,  5592,  5593,  5597,
    5598,  5605,  5610,  5616,  5622,  5628,  5646,  5652,  5654,  5658,
    5662,  5663,  5667,  5672,  5671,  5694,  5695,  5696,  5697,  5702,
    5706,  5711,  5716,  5720,  5725,  5730,  5736,  5741,  5747,  5751,
    5756,  5761,  5763,  5765,  5767,  5780,  5782,  5787,  5792,  5804,
    5809,  5814,  5819,  5821,  5823,  5825,  5827,  5829,  5831,  5833,
    5836,  5835,  5840,  5839,  5843,  5845,  5854,  5855,  5856,  5861,
    5862,  5863,  5864,  5865,  5869,  5873,  5874,  5878,  5879,  5883,
    5884,  5885,  5886,  5887,  5891,  5892,  5893,  5894,  5895,  5899,
    5904,  5906,  5912,  5913,  5915,  5920,  5930,  5931,  5935,  5936,
    5937,  5945,  5946,  5950,  5951,  5955,  5956,  5957,  5961,  5962,
    5963,  5964,  5967,  5968,  5972,  5973,  5977,  5978,  5982,  5983,
    5987,  5988,  5989,  5990,  5991,  5992,  5998,  6004,  6010,  6016,
    6017,  6034,  6055,  6063,  6064,  6069,  6070,  6074,  6082,  6086,
    6087,  6091,  6092,  6096,  6105,  6109,  6110,  6114,  6122,  6123,
    6127,  6128,  6132,  6133,  6138,  6139,  6143,  6150,  6159,  6164,
    6172,  6173,  6174,  6175,  6176,  6177,  6182,  6190,  6191,  6196,
    6195,  6208,  6209,  6213,  6216,  6217,  6218,  6219,  6223,  6231,
    6238,  6239,  6243,  6253,  6254,  6258,  6259,  6262,  6264,  6268,
    6280,  6281,  6285,  6292,  6305,  6306,  6308,  6310,  6316,  6321,
    6327,  6333,  6340,  6350,  6351,  6352,  6353,  6354,  6358,  6362,
    6363,  6367,  6368,  6372,  6373,  6377,  6378,  6379,  6383,  6384,
    6388,  6392,  6405,  6417,  6418,  6422,  6423,  6427,  6428,  6432,
    6433,  6437,  6438,  6442,  6443,  6447,  6448,  6452,  6453,  6457,
    6459,  6463,  6464,  6468,  6472,  6473,  6486,  6487,  6488,  6492,
    6493,  6497,  6503,  6517,  6518,  6522,  6523,  6527,  6528,  6536,
    6535,  6574,  6573,  6587,  6599,  6598,  6617,  6616,  6635,  6634,
    6653,  6647,  6667,  6666,  6699,  6704,  6709,  6714,  6719,  6729,
    6730,  6731,  6732,  6736,  6737,  6749,  6750,  6754,  6755,  6758,
    6760,  6761,  6762,  6764,  6766,  6767,  6775,  6776,  6780,  6789,
    6787,  6801,  6815,  6814,  6828,  6826,  6840,  6847,  6858,  6859,
    6887,  6894,  6898,  6903,  6902,  6918,  6920,  6925,  6933,  6932,
    6948,  6952,  6951,  6963,  6964,  6968,  6983,  6984,  6988,  6997,
    7001,  7006,  7011,  7010,  7021,  7030,  7020,  7045,  7054,  7058,
    7067,  7076,  7082,  7088,  7097,  7106,  7125,  7146,  7156,  7160,
    7168,  7169,  7173,  7174,  7178,  7179,  7180,  7184,  7185,  7186,
    7190,  7191,  7192,  7193,  7198,  7207,  7197,  7225,  7235,  7244,
    7245,  7252,  7257,  7260,  7267,  7270,  7276,  7279,  7286,  7289,
    7296,  7296,  7302,  7303,  7307,  7308,  7309,  7313,  7314,  7330,
    7331,  7336,  7335,  7347,  7348,  7349,  7354,  7353,  7375,  7376,
    7380,  7381,  7385,  7386,  7387,  7392,  7391,  7413,  7422,  7421,
    7448,  7449,  7453,  7454,  7458,  7459,  7460,  7461,  7462,  7463,
    7468,  7467,  7489,  7490,  7491,  7496,  7495,  7501,  7508,  7513,
    7521,  7522,  7526,  7540,  7539,  7552,  7553,  7557,  7558,  7562,
    7572,  7582,  7583,  7588,  7587,  7598,  7599,  7603,  7604,  7608,
    7618,  7629,  7628,  7636,  7636,  7647,  7648,  7653,  7654,  7663,
    7672,  7673,  7677,  7682,  7687,  7692,  7697,  7696,  7716,  7724,
    7716,  7731,  7732,  7733,  7734,  7735,  7739,  7746,  7753,  7755,
    7766,  7767,  7771,  7772,  7800,  7830,  7832,  7838,  7848,  7849,
    7850,  7865,  7872,  7898,  7904,  7910,  7911,  7912,  7913,  7914,
    7918,  7919,  7924,  7975,  7982,  8025,  8031,  8037,  8043,  8049,
    8055,  8061,  8067,  8071,  8077,  8083,  8089,  8095,  8101,  8105,
    8111,  8121,  8127,  8135,  8141,  8151,  8157,  8166,  8176,  8182,
    8192,  8198,  8207,  8211,  8217,  8223,  8229,  8235,  8241,  8247,
    8253,  8259,  8265,  8271,  8277,  8283,  8289,  8295,  8299,  8300,
    8304,  8305,  8309,  8310,  8314,  8315,  8319,  8320,  8321,  8322,
    8323,  8324,  8328,  8329,  8333,  8334,  8335,  8336,  8337,  8338,
    8350,  8351,  8352,  8353,  8354,  8360,  8364,  8370,  8376,  8382,
    8388,  8390,  8397,  8404,  8410,  8451,  8460,  8467,  8475,  8481,
    8488,  8494,  8508,  8515,  8531,  8537,  8543,  8551,  8557,  8563,
    8569,  8575,  8590,  8602,  8608,  8614,  8620,  8626,  8632,  8638,
    8644,  8650,  8656,  8662,  8668,  8674,  8680,  8686,  8692,  8698,
    8706,  8727,  8734,  8740,  8747,  8754,  8761,  8768,  8774,  8780,
    8785,  8791,  8798,  8804,  8810,  8816,  8822,  8828,  8846,  8852,
    8858,  8865,  8872,  8887,  8893,  8899,  8905,  8911,  8918,  8924,
    8930,  8936,  8942,  8954,  8960,  8966,  8972,  8978,  8986,  8992,
    9004,  9010,  9016,  9024,  9034,  9040,  9056,  9062,  9069,  9076,
    9083,  9090,  9097,  9101,  9121,  9120,  9193,  9235,  9237,  9242,
    9243,  9247,  9248,  9252,  9253,  9257,  9264,  9272,  9298,  9304,
    9310,  9316,  9322,  9328,  9337,  9344,  9346,  9343,  9353,  9364,
    9370,  9376,  9382,  9388,  9394,  9400,  9406,  9412,  9419,  9418,
    9437,  9436,  9451,  9461,  9469,  9485,  9486,  9491,  9496,  9501,
    9504,  9517,  9516,  9533,  9535,  9537,  9539,  9541,  9543,  9545,
    9547,  9549,  9551,  9553,  9558,  9559,  9563,  9570,  9578,  9579,
    9583,  9590,  9598,  9599,  9603,  9604,  9608,  9616,  9627,  9628,
    9637,  9648,  9649,  9655,  9656,  9676,  9678,  9682,  9680,  9697,
    9695,  9713,  9711,  9718,  9727,  9725,  9743,  9742,  9752,  9763,
    9761,  9780,  9779,  9790,  9801,  9802,  9803,  9811,  9812,  9816,
    9831,  9831,  9846,  9886,  9937,  9941,  9946,  9938,  9958,  9978,
    9986,  9978,  9995,  9994, 10017, 10034, 10017, 10041, 10045, 10071,
   10072, 10077, 10080, 10081, 10082, 10086, 10087, 10092, 10091, 10097,
   10096, 10104, 10105, 10108, 10110, 10110, 10114, 10114, 10119, 10120,
   10124, 10126, 10131, 10132, 10136, 10147, 10160, 10161, 10162, 10163,
   10164, 10165, 10166, 10167, 10168, 10169, 10170, 10171, 10175, 10176,
   10177, 10178, 10179, 10180, 10181, 10182, 10183, 10187, 10188, 10189,
   10190, 10193, 10195, 10196, 10200, 10201, 10209, 10211, 10215, 10217,
   10216, 10230, 10233, 10232, 10247, 10253, 10268, 10270, 10274, 10276,
   10281, 10282, 10302, 10327, 10331, 10332, 10336, 10349, 10351, 10356,
   10355, 10390, 10392, 10397, 10398, 10399, 10404, 10410, 10414, 10415,
   10419, 10426, 10433, 10440, 10450, 10468, 10472, 10478, 10484, 10494,
   10498, 10508, 10509, 10510, 10511, 10512, 10513, 10517, 10518, 10519,
   10520, 10521, 10525, 10526, 10527, 10528, 10529, 10533, 10534, 10535,
   10536, 10540, 10545, 10546, 10549, 10552, 10551, 10582, 10583, 10587,
   10588, 10592, 10604, 10604, 10614, 10615, 10619, 10638, 10671, 10670,
   10683, 10691, 10682, 10693, 10705, 10717, 10716, 10734, 10733, 10744,
   10744, 10760, 10767, 10790, 10811, 10823, 10828, 10827, 10837, 10843,
   10850, 10855, 10860, 10870, 10871, 10875, 10886, 10899, 10900, 10904,
   10915, 10916, 10920, 10921, 10924, 10926, 10929, 10930, 10931, 10935,
   10936, 10944, 10952, 10943, 10962, 10969, 10961, 10979, 10991, 10992,
   11000, 11004, 11005, 11016, 11017, 11021, 11030, 11031, 11032, 11034,
   11033, 11044, 11045, 11049, 11050, 11052, 11051, 11055, 11054, 11060,
   11061, 11065, 11066, 11070, 11080, 11081, 11085, 11086, 11091, 11090,
   11104, 11105, 11109, 11114, 11122, 11123, 11131, 11133, 11133, 11141,
   11149, 11140, 11171, 11172, 11176, 11184, 11185, 11189, 11199, 11200,
   11207, 11206, 11222, 11221, 11235, 11234, 11246, 11245, 11259, 11260,
   11264, 11277, 11293, 11294, 11298, 11299, 11303, 11304, 11305, 11310,
   11309, 11331, 11333, 11336, 11338, 11341, 11342, 11345, 11349, 11353,
   11357, 11361, 11365, 11369, 11373, 11377, 11385, 11388, 11398, 11397,
   11412, 11419, 11427, 11435, 11443, 11451, 11459, 11466, 11468, 11470,
   11479, 11483, 11488, 11487, 11493, 11492, 11497, 11506, 11513, 11518,
   11523, 11528, 11530, 11532, 11534, 11536, 11538, 11545, 11553, 11555,
   11563, 11570, 11577, 11587, 11594, 11600, 11609, 11617, 11621, 11625,
   11632, 11639, 11645, 11652, 11659, 11664, 11669, 11677, 11679, 11681,
   11686, 11687, 11690, 11692, 11696, 11697, 11701, 11702, 11706, 11707,
   11711, 11712, 11716, 11717, 11720, 11722, 11729, 11740, 11739, 11755,
   11754, 11761, 11762, 11763, 11764, 11765, 11769, 11770, 11774, 11775,
   11776, 11780, 11781, 11782, 11797, 11796, 11809, 11818, 11808, 11820,
   11824, 11825, 11839, 11840, 11845, 11847, 11849, 11851, 11853, 11855,
   11857, 11859, 11861, 11863, 11865, 11867, 11869, 11874, 11875, 11880,
   11879, 11889, 11890, 11894, 11894, 11896, 11897, 11901, 11902, 11907,
   11906, 11917, 11921, 11925, 11937, 11947, 11948, 11949, 11955, 11967,
   11979, 11989, 11999, 11966, 12007, 12008, 12012, 12013, 12017, 12018,
   12030, 12034, 12035, 12036, 12039, 12041, 12045, 12046, 12050, 12055,
   12062, 12067, 12074, 12076, 12080, 12081, 12085, 12090, 12098, 12099,
   12102, 12104, 12112, 12114, 12118, 12119, 12120, 12124, 12126, 12131,
   12132, 12141, 12142, 12146, 12147, 12151, 12164, 12188, 12200, 12211,
   12230, 12238, 12250, 12265, 12286, 12287, 12288, 12297, 12298, 12299,
   12300, 12307, 12313, 12319, 12325, 12331, 12360, 12391, 12401, 12411,
   12417, 12426, 12438, 12444, 12450, 12466, 12467, 12471, 12480, 12496,
   12500, 12542, 12546, 12564, 12568, 12647, 12672, 12703, 12704, 12720,
   12730, 12734, 12740, 12746, 12756, 12762, 12771, 12781, 12782, 12812,
   12828, 12844, 12861, 12862, 12873, 12874, 12885, 12886, 12887, 12891,
   12908, 12930, 12945, 12946, 12947, 12948, 12949, 12950, 12951, 12952,
   12953, 12954, 12955, 12956, 12957, 12958, 12959, 12960, 12961, 12962,
   12963, 12964, 12965, 12966, 12967, 12968, 12969, 12970, 12971, 12972,
   12973, 12974, 12975, 12976, 12977, 12978, 12979, 12980, 12981, 12982,
   12983, 12984, 12985, 12986, 12987, 12988, 12989, 12990, 12991, 12992,
   12993, 13003, 13004, 13005, 13006, 13007, 13008, 13009, 13010, 13011,
   13012, 13013, 13014, 13015, 13016, 13017, 13018, 13019, 13020, 13021,
   13022, 13023, 13024, 13025, 13026, 13027, 13028, 13029, 13030, 13031,
   13032, 13033, 13034, 13035, 13036, 13037, 13038, 13039, 13040, 13041,
   13042, 13043, 13044, 13045, 13046, 13047, 13052, 13053, 13054, 13055,
   13056, 13057, 13058, 13059, 13060, 13061, 13062, 13063, 13064, 13065,
   13066, 13067, 13068, 13069, 13070, 13071, 13072, 13073, 13074, 13075,
   13076, 13077, 13078, 13079, 13080, 13081, 13082, 13083, 13084, 13085,
   13086, 13087, 13088, 13089, 13090, 13091, 13092, 13093, 13094, 13095,
   13096, 13097, 13098, 13099, 13100, 13101, 13102, 13103, 13104, 13105,
   13106, 13107, 13108, 13109, 13110, 13111, 13112, 13113, 13114, 13115,
   13116, 13117, 13118, 13119, 13120, 13121, 13122, 13123, 13124, 13125,
   13126, 13127, 13128, 13129, 13130, 13131, 13132, 13133, 13134, 13135,
   13136, 13137, 13138, 13139, 13140, 13141, 13142, 13143, 13144, 13145,
   13146, 13147, 13148, 13149, 13150, 13151, 13152, 13153, 13154, 13155,
   13156, 13157, 13158, 13159, 13160, 13161, 13162, 13163, 13164, 13165,
   13166, 13167, 13168, 13169, 13170, 13171, 13172, 13173, 13174, 13175,
   13176, 13177, 13178, 13179, 13180, 13181, 13182, 13183, 13184, 13185,
   13186, 13187, 13188, 13189, 13190, 13191, 13192, 13193, 13194, 13195,
   13196, 13197, 13198, 13199, 13200, 13201, 13202, 13203, 13204, 13205,
   13206, 13207, 13208, 13209, 13210, 13211, 13212, 13213, 13214, 13215,
   13216, 13217, 13218, 13219, 13220, 13221, 13222, 13223, 13224, 13225,
   13226, 13227, 13228, 13229, 13230, 13231, 13232, 13233, 13234, 13235,
   13236, 13237, 13238, 13239, 13240, 13241, 13242, 13243, 13244, 13245,
   13246, 13247, 13248, 13249, 13250, 13251, 13252, 13253, 13254, 13255,
   13256, 13257, 13258, 13259, 13260, 13261, 13262, 13263, 13264, 13265,
   13266, 13267, 13268, 13269, 13270, 13271, 13272, 13273, 13274, 13275,
   13276, 13277, 13278, 13279, 13280, 13281, 13282, 13283, 13284, 13285,
   13286, 13287, 13288, 13289, 13290, 13291, 13292, 13293, 13294, 13295,
   13296, 13297, 13304, 13303, 13318, 13319, 13323, 13324, 13328, 13328,
   13410, 13411, 13412, 13413, 13417, 13421, 13422, 13423, 13424, 13428,
   13429, 13430, 13431, 13435, 13436, 13440, 13482, 13501, 13512, 13525,
   13541, 13556, 13578, 13606, 13619, 13646, 13689, 13703, 13704, 13705,
   13706, 13710, 13711, 13720, 13732, 13733, 13734, 13740, 13746, 13758,
   13757, 13773, 13774, 13778, 13779, 13783, 13796, 13797, 13798, 13799,
   13804, 13803, 13823, 13839, 13856, 13855, 13894, 13895, 13899, 13900,
   13904, 13905, 13906, 13907, 13909, 13908, 13922, 13923, 13924, 13925,
   13926, 13932, 13937, 13943, 13954, 13965, 13969, 13979, 13984, 13991,
   14003, 14015, 14024, 14026, 14030, 14031, 14038, 14040, 14044, 14045,
   14050, 14049, 14053, 14052, 14056, 14055, 14059, 14058, 14061, 14062,
   14063, 14064, 14065, 14066, 14067, 14068, 14069, 14070, 14071, 14072,
   14073, 14074, 14075, 14076, 14077, 14078, 14079, 14080, 14081, 14082,
   14083, 14084, 14085, 14086, 14090, 14091, 14095, 14096, 14100, 14110,
   14120, 14133, 14148, 14161, 14174, 14186, 14191, 14199, 14204, 14212,
   14241, 14248, 14256, 14264, 14270, 14274, 14278, 14279, 14283, 14310,
   14312, 14316, 14320, 14324, 14331, 14332, 14336, 14337, 14341, 14342,
   14346, 14347, 14353, 14359, 14365, 14375, 14374, 14384, 14385, 14390,
   14391, 14392, 14397, 14398, 14399, 14403, 14404, 14408, 14420, 14429,
   14439, 14448, 14462, 14463, 14468, 14467, 14483, 14484, 14485, 14488,
   14490, 14494, 14494, 14518, 14519, 14523, 14524, 14525, 14529, 14533,
   14540, 14543, 14541, 14557, 14564, 14585, 14602, 14604, 14608, 14609,
   14613, 14614, 14622, 14623, 14624, 14625, 14631, 14637, 14647, 14649,
   14651, 14656, 14657, 14658, 14659, 14660, 14664, 14665, 14666, 14667,
   14668, 14669, 14679, 14680, 14685, 14698, 14711, 14713, 14715, 14720,
   14725, 14727, 14729, 14735, 14736, 14738, 14744, 14743, 14761, 14762,
   14766, 14771, 14779, 14779, 14804, 14805, 14810, 14811, 14813, 14815,
   14833, 14839, 14844, 14826, 14906, 14924, 14949, 14981, 14985, 14993,
   15016, 14945, 15081, 15105, 15114, 15122, 15080, 15143, 15147, 15151,
   15155, 15159, 15163, 15170, 15177, 15184, 15194, 15195, 15199, 15200,
   15201, 15205, 15206, 15211, 15213, 15212, 15218, 15219, 15223, 15233
};
#endif

#if YYDEBUG || YYERROR_VERBOSE || YYTOKEN_TABLE
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "ABORT_SYM", "ACCESSIBLE_SYM", "ACTION",
  "ADD", "ADDDATE_SYM", "AFTER_SYM", "AGAINST", "AGGREGATE_SYM",
  "ALGORITHM_SYM", "ALL", "ALTER", "ANALYZE_SYM", "AND_AND_SYM", "AND_SYM",
  "ANY_SYM", "AS", "ASC", "ASCII_SYM", "ASENSITIVE_SYM", "AT_SYM",
  "AUTHORS_SYM", "AUTOEXTEND_SIZE_SYM", "AUTO_INC", "AVG_ROW_LENGTH",
  "AVG_SYM", "BACKUP_SYM", "BEFORE_SYM", "BEGIN_SYM", "BETWEEN_SYM",
  "BIGINT", "BINARY", "BINLOG_SYM", "BIN_NUM", "BIT_AND", "BIT_OR",
  "BIT_SYM", "BIT_XOR", "BLOB_SYM", "BLOCK_SYM", "BOOLEAN_SYM", "BOOL_SYM",
  "BOTH", "BTREE_SYM", "BY", "BYTE_SYM", "CACHE_SYM", "CALL_SYM",
  "CASCADE", "CASCADED", "CASE_SYM", "CAST_SYM", "CATALOG_NAME_SYM",
  "CHAIN_SYM", "CHANGE", "CHANGED", "CHARSET", "CHAR_SYM", "CHECKSUM_SYM",
  "CHECK_SYM", "CIPHER_SYM", "CLASS_ORIGIN_SYM", "CLIENT_SYM", "CLOSE_SYM",
  "COALESCE", "CODE_SYM", "COLLATE_SYM", "COLLATION_SYM", "COLUMNS",
  "COLUMN_SYM", "COLUMN_NAME_SYM", "COMMENT_SYM", "COMMITTED_SYM",
  "COMMIT_SYM", "COMPACT_SYM", "COMPLETION_SYM", "COMPRESSED_SYM",
  "CONCURRENT", "CONDITION_SYM", "CONNECTION_SYM", "CONSISTENT_SYM",
  "CONSTRAINT", "CONSTRAINT_CATALOG_SYM", "CONSTRAINT_NAME_SYM",
  "CONSTRAINT_SCHEMA_SYM", "CONTAINS_SYM", "CONTEXT_SYM", "CONTINUE_SYM",
  "CONTRIBUTORS_SYM", "CONVERT_SYM", "COUNT_SYM", "CPU_SYM", "CREATE",
  "CROSS", "CUBE_SYM", "CURDATE", "CURRENT_SYM", "CURRENT_USER",
  "CURSOR_SYM", "CURSOR_NAME_SYM", "CURTIME", "DATABASE", "DATABASES",
  "DATAFILE_SYM", "DATA_SYM", "DATETIME", "DATE_ADD_INTERVAL",
  "DATE_SUB_INTERVAL", "DATE_SYM", "DAY_HOUR_SYM", "DAY_MICROSECOND_SYM",
  "DAY_MINUTE_SYM", "DAY_SECOND_SYM", "DAY_SYM", "DEALLOCATE_SYM",
  "DECIMAL_NUM", "DECIMAL_SYM", "DECLARE_SYM", "DEFAULT",
  "DEFAULT_AUTH_SYM", "DEFINER_SYM", "DELAYED_SYM", "DELAY_KEY_WRITE_SYM",
  "DELETE_SYM", "DESC", "DESCRIBE", "DES_KEY_FILE", "DETERMINISTIC_SYM",
  "DIAGNOSTICS_SYM", "DIRECTORY_SYM", "DISABLE_SYM", "DISCARD", "DISK_SYM",
  "DISTINCT", "DIV_SYM", "DOUBLE_SYM", "DO_SYM", "DROP", "DUAL_SYM",
  "DUMPFILE", "DUPLICATE_SYM", "DYNAMIC_SYM", "EACH_SYM", "ELSE",
  "ELSEIF_SYM", "ENABLE_SYM", "ENCLOSED", "END", "ENDS_SYM",
  "END_OF_INPUT", "ENGINES_SYM", "ENGINE_SYM", "ENUM", "EQ", "EQUAL_SYM",
  "ERROR_SYM", "ERRORS", "ESCAPED", "ESCAPE_SYM", "EVENTS_SYM",
  "EVENT_SYM", "EVERY_SYM", "EXCHANGE_SYM", "EXECUTE_SYM", "EXISTS",
  "EXIT_SYM", "EXPANSION_SYM", "EXTENDED_SYM", "EXTENT_SIZE_SYM",
  "EXTRACT_SYM", "FALSE_SYM", "FAST_SYM", "FAULTS_SYM", "FETCH_SYM",
  "FILE_SYM", "FIRST_SYM", "FIXED_SYM", "FLOAT_NUM", "FLOAT_SYM",
  "FLUSH_SYM", "FORCE_SYM", "FOREIGN", "FOR_SYM", "FOUND_SYM", "FROM",
  "FULL", "FULLTEXT_SYM", "FUNCTION_SYM", "GE", "GENERAL",
  "GEOMETRYCOLLECTION", "GEOMETRY_SYM", "GET_FORMAT", "GET_SYM",
  "GLOBAL_SYM", "GRANT", "GRANTS", "GROUP_SYM", "GROUP_CONCAT_SYM",
  "GT_SYM", "HANDLER_SYM", "HASH_SYM", "HAVING", "HELP_SYM", "HEX_NUM",
  "HIGH_PRIORITY", "HOST_SYM", "HOSTS_SYM", "HOUR_MICROSECOND_SYM",
  "HOUR_MINUTE_SYM", "HOUR_SECOND_SYM", "HOUR_SYM", "IDENT",
  "IDENTIFIED_SYM", "IDENT_QUOTED", "IF", "IGNORE_SYM",
  "IGNORE_SERVER_IDS_SYM", "IMPORT", "INDEXES", "INDEX_SYM", "INFILE",
  "INITIAL_SIZE_SYM", "INNER_SYM", "INOUT_SYM", "INSENSITIVE_SYM",
  "INSERT", "INSERT_METHOD", "INSTALL_SYM", "INTERVAL_SYM", "INTO",
  "INT_SYM", "INVOKER_SYM", "IN_SYM", "IO_SYM", "IPC_SYM", "IS",
  "ISOLATION", "ISSUER_SYM", "ITERATE_SYM", "JOIN_SYM", "KEYS",
  "KEY_BLOCK_SIZE", "KEY_SYM", "KILL_SYM", "LANGUAGE_SYM", "LAST_SYM",
  "LE", "LEADING", "LEAVES", "LEAVE_SYM", "LEFT", "LESS_SYM", "LEVEL_SYM",
  "LEX_HOSTNAME", "LIKE", "LIMIT", "LINEAR_SYM", "LINES", "LINESTRING",
  "LIST_SYM", "LOAD", "LOCAL_SYM", "LOCATOR_SYM", "LOCKS_SYM", "LOCK_SYM",
  "LOGFILE_SYM", "LOGS_SYM", "LONGBLOB", "LONGTEXT", "LONG_NUM",
  "LONG_SYM", "LOOP_SYM", "LOW_PRIORITY", "LT", "MASTER_BIND_SYM",
  "MASTER_CONNECT_RETRY_SYM", "MASTER_DELAY_SYM", "MASTER_HOST_SYM",
  "MASTER_LOG_FILE_SYM", "MASTER_LOG_POS_SYM", "MASTER_PASSWORD_SYM",
  "MASTER_PORT_SYM", "MASTER_RETRY_COUNT_SYM", "MASTER_SERVER_ID_SYM",
  "MASTER_SSL_CAPATH_SYM", "MASTER_SSL_CA_SYM", "MASTER_SSL_CERT_SYM",
  "MASTER_SSL_CIPHER_SYM", "MASTER_SSL_CRL_SYM", "MASTER_SSL_CRLPATH_SYM",
  "MASTER_SSL_KEY_SYM", "MASTER_SSL_SYM",
  "MASTER_SSL_VERIFY_SERVER_CERT_SYM", "MASTER_SYM", "MASTER_USER_SYM",
  "MASTER_HEARTBEAT_PERIOD_SYM", "MATCH", "MAX_CONNECTIONS_PER_HOUR",
  "MAX_QUERIES_PER_HOUR", "MAX_ROWS", "MAX_SIZE_SYM", "MAX_SYM",
  "MAX_UPDATES_PER_HOUR", "MAX_USER_CONNECTIONS_SYM", "MAX_VALUE_SYM",
  "MEDIUMBLOB", "MEDIUMINT", "MEDIUMTEXT", "MEDIUM_SYM", "MEMORY_SYM",
  "MERGE_SYM", "MESSAGE_TEXT_SYM", "MICROSECOND_SYM", "MIGRATE_SYM",
  "MINUTE_MICROSECOND_SYM", "MINUTE_SECOND_SYM", "MINUTE_SYM", "MIN_ROWS",
  "MIN_SYM", "MODE_SYM", "MODIFIES_SYM", "MODIFY_SYM", "MOD_SYM",
  "MONTH_SYM", "MULTILINESTRING", "MULTIPOINT", "MULTIPOLYGON",
  "MUTEX_SYM", "MYSQL_ERRNO_SYM", "NAMES_SYM", "NAME_SYM", "NATIONAL_SYM",
  "NATURAL", "NCHAR_STRING", "NCHAR_SYM", "NDBCLUSTER_SYM", "NE", "NEG",
  "NEW_SYM", "NEXT_SYM", "NODEGROUP_SYM", "NONE_SYM", "NOT2_SYM",
  "NOT_SYM", "NOW_SYM", "NO_SYM", "NO_WAIT_SYM", "NO_WRITE_TO_BINLOG",
  "NULL_SYM", "NUM", "NUMBER_SYM", "NUMERIC_SYM", "NVARCHAR_SYM",
  "OFFSET_SYM", "OLD_PASSWORD", "ON", "ONE_SHOT_SYM", "ONE_SYM",
  "OPEN_SYM", "OPTIMIZE", "OPTIONS_SYM", "OPTION", "OPTIONALLY", "OR2_SYM",
  "ORDER_SYM", "OR_OR_SYM", "OR_SYM", "OUTER", "OUTFILE", "OUT_SYM",
  "OWNER_SYM", "PACK_KEYS_SYM", "PAGE_SYM", "PARAM_MARKER", "PARSER_SYM",
  "PARTIAL", "PARTITION_SYM", "PARTITIONS_SYM", "PARTITIONING_SYM",
  "PASSWORD", "PHASE_SYM", "PLUGIN_DIR_SYM", "PLUGIN_SYM", "PLUGINS_SYM",
  "POINT_SYM", "POLYGON", "PORT_SYM", "POSITION_SYM", "PRECISION",
  "PREPARE_SYM", "PRESERVE_SYM", "PREV_SYM", "PRIMARY_SYM", "PRIVILEGES",
  "PROCEDURE_SYM", "PROCESS", "PROCESSLIST_SYM", "PROFILE_SYM",
  "PROFILES_SYM", "PROXY_SYM", "PURGE", "QUARTER_SYM", "QUERY_SYM",
  "QUICK", "RANGE_SYM", "READS_SYM", "READ_ONLY_SYM", "READ_SYM",
  "READ_WRITE_SYM", "REAL", "REBUILD_SYM", "RECOVER_SYM", "REDOFILE_SYM",
  "REDO_BUFFER_SIZE_SYM", "REDUNDANT_SYM", "REFERENCES", "REGEXP", "RELAY",
  "RELAYLOG_SYM", "RELAY_LOG_FILE_SYM", "RELAY_LOG_POS_SYM",
  "RELAY_THREAD", "RELEASE_SYM", "RELOAD", "REMOVE_SYM", "RENAME",
  "REORGANIZE_SYM", "REPAIR", "REPEATABLE_SYM", "REPEAT_SYM", "REPLACE",
  "REPLICATION", "REQUIRE_SYM", "RESET_SYM", "RESIGNAL_SYM", "RESOURCES",
  "RESTORE_SYM", "RESTRICT", "RESUME_SYM", "RETURNED_SQLSTATE_SYM",
  "RETURNS_SYM", "RETURN_SYM", "REVERSE_SYM", "REVOKE", "RIGHT",
  "ROLLBACK_SYM", "ROLLUP_SYM", "ROUTINE_SYM", "ROWS_SYM",
  "ROW_FORMAT_SYM", "ROW_SYM", "ROW_COUNT_SYM", "RTREE_SYM",
  "SAVEPOINT_SYM", "SCHEDULE_SYM", "SCHEMA_NAME_SYM",
  "SECOND_MICROSECOND_SYM", "SECOND_SYM", "SECURITY_SYM", "SELECT_SYM",
  "SENSITIVE_SYM", "SEPARATOR_SYM", "SERIALIZABLE_SYM", "SERIAL_SYM",
  "SESSION_SYM", "SERVER_SYM", "SERVER_OPTIONS", "SET", "SET_VAR",
  "SHARE_SYM", "SHIFT_LEFT", "SHIFT_RIGHT", "SHOW", "SHUTDOWN",
  "SIGNAL_SYM", "SIGNED_SYM", "SIMPLE_SYM", "SLAVE", "SLOW", "SMALLINT",
  "SNAPSHOT_SYM", "SOCKET_SYM", "SONAME_SYM", "SOUNDS_SYM", "SOURCE_SYM",
  "SPATIAL_SYM", "SPECIFIC_SYM", "SQLEXCEPTION_SYM", "SQLSTATE_SYM",
  "SQLWARNING_SYM", "SQL_BIG_RESULT", "SQL_BUFFER_RESULT", "SQL_CACHE_SYM",
  "SQL_CALC_FOUND_ROWS", "SQL_NO_CACHE_SYM", "SQL_SMALL_RESULT", "SQL_SYM",
  "SQL_THREAD", "SSL_SYM", "STARTING", "STARTS_SYM", "START_SYM",
  "STATUS_SYM", "STDDEV_SAMP_SYM", "STD_SYM", "STOP_SYM", "STORAGE_SYM",
  "STRAIGHT_JOIN", "STRING_SYM", "SUBCLASS_ORIGIN_SYM", "SUBDATE_SYM",
  "SUBJECT_SYM", "SUBPARTITIONS_SYM", "SUBPARTITION_SYM", "SUBSTRING",
  "SUM_SYM", "SUPER_SYM", "SUSPEND_SYM", "SWAPS_SYM", "SWITCHES_SYM",
  "SYSDATE", "TABLES", "TABLESPACE", "TABLE_REF_PRIORITY", "TABLE_SYM",
  "TABLE_CHECKSUM_SYM", "TABLE_NAME_SYM", "TEMPORARY", "TEMPTABLE_SYM",
  "TERMINATED", "TEXT_STRING", "TEXT_SYM", "THAN_SYM", "THEN_SYM",
  "TIMESTAMP", "TIMESTAMP_ADD", "TIMESTAMP_DIFF", "TIME_SYM", "TINYBLOB",
  "TINYINT", "TINYTEXT", "TO_SYM", "TRAILING", "TRANSACTION_SYM",
  "TRIGGERS_SYM", "TRIGGER_SYM", "TRIM", "TRUE_SYM", "TRUNCATE_SYM",
  "TYPES_SYM", "TYPE_SYM", "UDF_RETURNS_SYM", "ULONGLONG_NUM",
  "UNCOMMITTED_SYM", "UNDEFINED_SYM", "UNDERSCORE_CHARSET", "UNDOFILE_SYM",
  "UNDO_BUFFER_SIZE_SYM", "UNDO_SYM", "UNICODE_SYM", "UNINSTALL_SYM",
  "UNION_SYM", "UNIQUE_SYM", "UNKNOWN_SYM", "UNLOCK_SYM", "UNSIGNED",
  "UNTIL_SYM", "UPDATE_SYM", "UPGRADE_SYM", "USAGE", "USER", "USE_FRM",
  "USE_SYM", "USING", "UTC_DATE_SYM", "UTC_TIMESTAMP_SYM", "UTC_TIME_SYM",
  "VALUES", "VALUE_SYM", "VARBINARY", "VARCHAR", "VARIABLES",
  "VARIANCE_SYM", "VARYING", "VAR_SAMP_SYM", "VIEW_SYM", "WAIT_SYM",
  "WARNINGS", "WEEK_SYM", "WEIGHT_STRING_SYM", "WHEN_SYM", "WHERE",
  "WHILE_SYM", "WITH", "WITH_CUBE_SYM", "WITH_ROLLUP_SYM", "WORK_SYM",
  "WRAPPER_SYM", "WRITE_SYM", "X509_SYM", "XA_SYM", "XML_SYM", "XOR",
  "YEAR_MONTH_SYM", "YEAR_SYM", "ZEROFILL", "'|'", "'&'", "'-'", "'+'",
  "'*'", "'/'", "'%'", "'^'", "'~'", "'('", "')'", "','", "'!'", "'{'",
  "'}'", "';'", "'@'", "'.'", "':'", "$accept", "query", "@1",
  "opt_end_of_input", "verb_clause", "statement", "deallocate",
  "deallocate_or_drop", "prepare", "prepare_src", "execute", "@2",
  "execute_using", "execute_var_list", "execute_var_ident", "help", "@3",
  "change", "@4", "master_defs", "master_def", "ignore_server_id_list",
  "ignore_server_id", "master_file_def", "create", "@5", "@6", "@7", "@8",
  "@9", "@10", "server_def", "server_options_list", "server_option",
  "event_tail", "@11", "ev_schedule_time", "@12", "opt_ev_status",
  "ev_starts", "ev_ends", "opt_ev_on_completion", "ev_on_completion",
  "opt_ev_comment", "ev_sql_stmt", "@13", "ev_sql_stmt_inner",
  "clear_privileges", "sp_name", "sp_a_chistics", "sp_c_chistics",
  "sp_chistic", "sp_c_chistic", "sp_suid", "call", "@14",
  "opt_sp_cparam_list", "opt_sp_cparams", "sp_cparams", "sp_fdparam_list",
  "sp_fdparams", "sp_init_param", "sp_fdparam", "sp_pdparam_list",
  "sp_pdparams", "sp_pdparam", "sp_opt_inout", "sp_proc_stmts",
  "sp_proc_stmts1", "sp_decls", "sp_decl", "@15", "@16", "sp_cursor_stmt",
  "@17", "sp_handler_type", "sp_hcond_list", "sp_hcond_element", "sp_cond",
  "sqlstate", "opt_value", "sp_hcond", "signal_stmt", "signal_value",
  "opt_signal_value", "opt_set_signal_information",
  "signal_information_item_list", "signal_allowed_expr",
  "signal_condition_information_item_name", "resignal_stmt",
  "get_diagnostics", "which_area", "diagnostics_information",
  "statement_information", "statement_information_item",
  "simple_target_specification", "statement_information_item_name",
  "condition_number", "condition_information",
  "condition_information_item", "condition_information_item_name",
  "sp_decl_idents", "sp_opt_default", "sp_proc_stmt", "sp_proc_stmt_if",
  "@18", "sp_proc_stmt_statement", "@19", "sp_proc_stmt_return", "@20",
  "sp_proc_stmt_unlabeled", "@21", "sp_proc_stmt_leave",
  "sp_proc_stmt_iterate", "sp_proc_stmt_open", "sp_proc_stmt_fetch", "@22",
  "sp_proc_stmt_close", "sp_opt_fetch_noise", "sp_fetch_list", "sp_if",
  "@23", "@24", "@25", "sp_elseifs", "case_stmt_specification",
  "simple_case_stmt", "@26", "@27", "searched_case_stmt", "@28",
  "simple_when_clause_list", "searched_when_clause_list",
  "simple_when_clause", "@29", "@30", "searched_when_clause", "@31", "@32",
  "else_clause_opt", "sp_labeled_control", "@33", "sp_opt_label",
  "sp_labeled_block", "@34", "sp_unlabeled_block", "@35",
  "sp_block_content", "@36", "sp_unlabeled_control", "@37", "@38", "@39",
  "trg_action_time", "trg_event", "change_tablespace_access",
  "change_tablespace_info", "tablespace_info", "opt_logfile_group_name",
  "alter_tablespace_info", "logfile_group_info",
  "alter_logfile_group_info", "add_log_file", "change_ts_option_list",
  "@40", "change_ts_options", "change_ts_option", "tablespace_option_list",
  "tablespace_options", "tablespace_option",
  "alter_tablespace_option_list", "alter_tablespace_options",
  "alter_tablespace_option", "logfile_group_option_list",
  "logfile_group_options", "logfile_group_option",
  "alter_logfile_group_option_list", "alter_logfile_group_options",
  "alter_logfile_group_option", "ts_datafile", "lg_undofile",
  "lg_redofile", "tablespace_name", "logfile_group_name", "ts_access_mode",
  "opt_ts_initial_size", "opt_ts_autoextend_size", "opt_ts_max_size",
  "opt_ts_extent_size", "opt_ts_undo_buffer_size",
  "opt_ts_redo_buffer_size", "opt_ts_nodegroup", "opt_ts_comment",
  "opt_ts_engine", "ts_wait", "size_number", "create2", "create2a", "@41",
  "create3", "@42", "@43", "opt_create_partitioning", "opt_partitioning",
  "partitioning", "@44", "have_partitioning", "partition_entry", "@45",
  "partition", "part_type_def", "@46", "opt_linear", "part_field_list",
  "part_field_item_list", "part_field_item", "part_column_list",
  "part_func", "sub_part_func", "opt_num_parts", "opt_sub_part", "@47",
  "@48", "sub_part_field_list", "sub_part_field_item", "part_func_expr",
  "opt_num_subparts", "part_defs", "part_def_list", "part_definition",
  "@49", "part_name", "opt_part_values", "@50", "@51", "part_func_max",
  "part_values_in", "part_value_list", "part_value_item", "@52", "@53",
  "part_value_item_list", "part_value_expr_item", "opt_sub_partition",
  "sub_part_list", "sub_part_definition", "@54", "sub_name",
  "opt_part_options", "opt_part_option_list", "opt_part_option",
  "create_select", "@55", "@56", "opt_as", "opt_create_database_options",
  "create_database_options", "create_database_option", "opt_table_options",
  "table_options", "table_option", "opt_if_not_exists",
  "opt_create_table_options", "create_table_options_space_separated",
  "create_table_options", "create_table_option", "@57", "default_charset",
  "default_collation", "storage_engines", "known_storage_engines",
  "row_types", "merge_insert_types", "opt_select_from", "udf_type",
  "create_field_list", "field_list", "field_list_item", "column_def",
  "key_def", "opt_check_constraint", "check_constraint", "opt_constraint",
  "constraint", "field_spec", "@58", "type", "@59", "@60", "spatial_type",
  "char", "nchar", "varchar", "nvarchar", "int_type", "real_type",
  "float_options", "precision", "type_datetime_precision",
  "func_datetime_precision", "field_options", "field_opt_list",
  "field_option", "field_length", "opt_field_length", "opt_precision",
  "opt_attribute", "opt_attribute_list", "attribute",
  "type_with_opt_collate", "now", "now_or_signed_literal", "charset",
  "charset_name", "charset_name_or_default", "opt_load_data_charset",
  "old_or_new_charset_name", "old_or_new_charset_name_or_default",
  "collation_name", "opt_collate", "collation_name_or_default",
  "opt_default", "ascii", "unicode", "opt_binary", "opt_bin_mod",
  "ws_nweights", "@61", "ws_level_flag_desc", "ws_level_flag_reverse",
  "ws_level_flags", "ws_level_number", "ws_level_list_item",
  "ws_level_list", "ws_level_range", "ws_level_list_or_range",
  "opt_ws_levels", "opt_primary", "references", "opt_ref_list", "ref_list",
  "opt_match_clause", "opt_on_update_delete", "delete_option",
  "normal_key_type", "constraint_key_type", "key_or_index",
  "opt_key_or_index", "keys_or_index", "opt_unique", "fulltext", "spatial",
  "init_key_options", "key_alg", "normal_key_options",
  "fulltext_key_options", "spatial_key_options", "normal_key_opts",
  "spatial_key_opts", "fulltext_key_opts", "key_using_alg", "all_key_opt",
  "normal_key_opt", "spatial_key_opt", "fulltext_key_opt",
  "btree_or_rtree", "key_list", "key_part", "opt_ident", "opt_component",
  "string_list", "alter", "@62", "@63", "@64", "@65", "@66", "@67", "@68",
  "ev_alter_on_schedule_completion", "opt_ev_rename_to", "opt_ev_sql_stmt",
  "ident_or_empty", "alter_commands", "@69", "@70", "@71",
  "remove_partitioning", "all_or_alt_part_name_list", "add_partition_rule",
  "@72", "add_part_extra", "reorg_partition_rule", "@73",
  "reorg_parts_rule", "@74", "alt_part_name_list", "alt_part_name_item",
  "alter_list", "add_column", "alter_list_item", "@75", "@76", "@77",
  "opt_column", "opt_ignore", "opt_restrict", "opt_place", "opt_to",
  "slave", "@78", "@79", "start", "start_transaction_opts",
  "slave_connection_opts", "slave_user_name_opt", "slave_user_pass_opt",
  "slave_plugin_auth_opt", "slave_plugin_dir_opt", "slave_thread_opts",
  "@80", "slave_thread_opt_list", "slave_thread_opt", "slave_until",
  "slave_until_opts", "checksum", "@81", "opt_checksum_type", "repair",
  "@82", "opt_mi_repair_type", "mi_repair_types", "mi_repair_type",
  "analyze", "@83", "binlog_base64_event", "check", "@84",
  "opt_mi_check_type", "mi_check_types", "mi_check_type", "optimize",
  "@85", "opt_no_write_to_binlog", "rename", "@86", "rename_list",
  "table_to_table_list", "table_to_table", "keycache", "@87",
  "keycache_list_or_parts", "keycache_list", "assign_to_keycache",
  "assign_to_keycache_parts", "key_cache_name", "preload", "@88",
  "preload_list_or_parts", "preload_list", "preload_keys",
  "preload_keys_parts", "adm_partition", "@89", "cache_keys_spec", "@90",
  "cache_key_list_or_empty", "opt_ignore_leaves", "select", "select_init",
  "select_paren", "select_paren_derived", "select_init2", "@91",
  "select_part2", "@92", "@93", "select_into", "select_from",
  "select_options", "select_option_list", "select_option",
  "select_lock_type", "select_item_list", "select_item", "remember_name",
  "remember_end", "select_alias", "optional_braces", "expr", "bool_pri",
  "predicate", "bit_expr", "or", "and", "not", "not2", "comp_op",
  "all_or_any", "simple_expr", "function_call_keyword",
  "function_call_nonkeyword", "function_call_conflict",
  "geometry_function", "function_call_generic", "@94", "fulltext_options",
  "opt_natural_language_mode", "opt_query_expansion", "opt_udf_expr_list",
  "udf_expr_list", "udf_expr", "sum_expr", "@95", "@96", "@97", "variable",
  "@98", "variable_aux", "opt_distinct", "opt_gconcat_separator",
  "opt_gorder_clause", "in_sum_expr", "@99", "cast_type", "opt_expr_list",
  "expr_list", "ident_list_arg", "ident_list", "opt_expr", "opt_else",
  "when_list", "table_ref", "join_table_list", "esc_table_ref",
  "derived_table_list", "join_table", "@100", "@101", "@102", "@103",
  "@104", "@105", "@106", "normal_join", "opt_use_partition",
  "use_partition", "table_factor", "@107", "select_derived_union", "@108",
  "@109", "select_init2_derived", "select_part2_derived", "@110", "@111",
  "select_derived", "@112", "select_derived2", "@113", "@114",
  "get_select_lex", "select_derived_init", "opt_outer",
  "index_hint_clause", "index_hint_type", "index_hint_definition", "@115",
  "@116", "index_hints_list", "opt_index_hints_list", "@117",
  "opt_key_definition", "@118", "opt_key_usage_list", "key_usage_element",
  "key_usage_list", "using_list", "interval", "interval_time_stamp",
  "date_time_type", "table_alias", "opt_table_alias", "opt_all",
  "where_clause", "@119", "having_clause", "@120", "opt_escape",
  "group_clause", "group_list", "olap_opt", "alter_order_clause",
  "alter_order_list", "alter_order_item", "opt_order_clause",
  "order_clause", "@121", "order_list", "order_dir",
  "opt_limit_clause_init", "opt_limit_clause", "limit_clause",
  "limit_options", "limit_option", "delete_limit_clause", "ulong_num",
  "real_ulong_num", "ulonglong_num", "real_ulonglong_num", "dec_num_error",
  "dec_num", "procedure_clause", "@122", "procedure_list",
  "procedure_list2", "procedure_item", "select_var_list_init", "@123",
  "select_var_list", "select_var_ident", "into", "@124",
  "into_destination", "@125", "@126", "do", "@127", "drop", "@128", "@129",
  "@130", "table_list", "table_name", "table_name_with_opt_use_partition",
  "table_alias_ref_list", "table_alias_ref", "if_exists", "opt_temporary",
  "drop_ts_options_list", "drop_ts_options", "drop_ts_option", "insert",
  "@131", "@132", "replace", "@133", "@134", "insert_lock_option",
  "replace_lock_option", "insert2", "insert_table", "insert_field_spec",
  "@135", "fields", "insert_values", "@136", "@137", "values_list",
  "ident_eq_list", "ident_eq_value", "equal", "opt_equal", "no_braces",
  "@138", "opt_values", "values", "expr_or_default", "opt_insert_update",
  "@139", "update", "@140", "@141", "update_list", "update_elem",
  "insert_update_list", "insert_update_elem", "opt_low_priority", "delete",
  "@142", "single_multi", "@143", "@144", "@145", "table_wild_list",
  "table_wild_one", "opt_wild", "opt_delete_options", "opt_delete_option",
  "truncate", "@146", "opt_table_sym", "opt_profile_defs", "profile_defs",
  "profile_def", "opt_profile_args", "show", "@147", "show_param", "@148",
  "@149", "show_engine_param", "master_or_binary", "opt_storage", "opt_db",
  "opt_full", "from_or_in", "binlog_in", "binlog_from", "wild_and_where",
  "describe", "@150", "@151", "explanable_command", "describe_command",
  "opt_extended_describe", "opt_describe_column", "flush", "@152",
  "flush_options", "@153", "@154", "opt_with_read_lock",
  "flush_options_list", "flush_option", "opt_table_list", "reset", "@155",
  "reset_options", "reset_option", "@156", "slave_reset_options", "purge",
  "@157", "purge_options", "purge_option", "kill", "kill_option", "use",
  "load", "@158", "@159", "@160", "@161", "data_or_xml", "opt_local",
  "load_data_lock", "opt_duplicate", "opt_field_term", "field_term_list",
  "field_term", "opt_line_term", "line_term_list", "line_term",
  "opt_xml_rows_identified_by", "opt_ignore_lines", "lines_or_rows",
  "opt_field_or_var_spec", "fields_or_vars", "field_or_var",
  "opt_load_data_set_spec", "load_data_set_list", "load_data_set_elem",
  "text_literal", "text_string", "param_marker", "signed_literal",
  "literal", "NUM_literal", "temporal_literal", "insert_ident",
  "table_wild", "order_ident", "simple_ident", "simple_ident_nospvar",
  "simple_ident_q", "field_ident", "table_ident", "table_ident_opt_wild",
  "table_ident_nodb", "IDENT_sys", "TEXT_STRING_sys",
  "TEXT_STRING_literal", "TEXT_STRING_filesystem", "ident", "label_ident",
  "ident_or_text", "user", "keyword", "keyword_sp", "set", "@162",
  "opt_option", "option_value_list", "option_type_value", "@163",
  "option_type", "option_type2", "opt_var_type", "opt_var_ident_type",
  "ext_option_value", "sys_option_value", "option_value",
  "internal_variable_name", "isolation_types", "text_or_password",
  "set_expr_or_default", "lock", "@164", "table_or_tables",
  "table_lock_list", "table_lock", "lock_option", "unlock", "@165",
  "handler", "@166", "handler_read_or_scan", "handler_scan_function",
  "handler_rkey_function", "@167", "handler_rkey_mode", "revoke",
  "revoke_command", "grant", "grant_command", "opt_table",
  "grant_privileges", "opt_privileges", "object_privilege_list",
  "object_privilege", "@168", "@169", "@170", "@171", "opt_and",
  "require_list", "require_list_element", "grant_ident", "user_list",
  "grant_list", "grant_user", "opt_column_list", "column_list",
  "column_list_id", "require_clause", "grant_options", "opt_grant_option",
  "grant_option_list", "grant_option", "begin", "@172", "opt_work",
  "opt_chain", "opt_release", "opt_savepoint", "commit", "rollback",
  "savepoint", "release", "union_clause", "union_list", "@173",
  "union_opt", "opt_union_order_or_limit", "union_order_or_limit", "@174",
  "order_or_limit", "union_option", "query_specification",
  "query_expression_body", "@175", "subselect", "subselect_start",
  "subselect_end", "opt_query_expression_options",
  "query_expression_option_list", "query_expression_option",
  "view_or_trigger_or_sp_or_event", "definer_tail", "no_definer_tail",
  "definer_opt", "no_definer", "definer", "view_replace_or_algorithm",
  "view_replace", "view_algorithm", "view_suid", "view_tail", "@176",
  "view_list_opt", "view_list", "view_select", "@177", "view_select_aux",
  "view_check_option", "trigger_tail", "@178", "@179", "@180", "udf_tail",
  "sf_tail", "@181", "@182", "@183", "@184", "@185", "sp_tail", "@186",
  "@187", "@188", "@189", "xa", "xid", "begin_or_start",
  "opt_join_or_resume", "opt_one_phase", "opt_suspend", "@190",
  "opt_migrate", "install", "uninstall", 0
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[YYLEX-NUM] -- Internal token number corresponding to
   token YYLEX-NUM.  */
static const yytype_uint16 yytoknum[] =
{
       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,   794,
     795,   796,   797,   798,   799,   800,   801,   802,   803,   804,
     805,   806,   807,   808,   809,   810,   811,   812,   813,   814,
     815,   816,   817,   818,   819,   820,   821,   822,   823,   824,
     825,   826,   827,   828,   829,   830,   831,   832,   833,   834,
     835,   836,   837,   838,   839,   840,   841,   842,   843,   844,
     845,   846,   847,   848,   849,   850,   851,   852,   853,   854,
     855,   856,   857,   858,   859,   860,   861,   862,   863,   124,
      38,    45,    43,    42,    47,    37,    94,   126,    40,    41,
      44,    33,   123,   125,    59,    64,    46,    58
};
# endif

/* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_uint16 yyr1[] =
{
       0,   628,   629,   630,   629,   629,   631,   631,   632,   632,
     633,   633,   633,   633,   633,   633,   633,   633,   633,   633,
     633,   633,   633,   633,   633,   633,   633,   633,   633,   633,
     633,   633,   633,   633,   633,   633,   633,   633,   633,   633,
     633,   633,   633,   633,   633,   633,   633,   633,   633,   633,
     633,   633,   633,   633,   633,   633,   633,   633,   633,   633,
     633,   633,   634,   635,   635,   636,   637,   637,   639,   638,
     640,   640,   641,   641,   642,   644,   643,   646,   645,   647,
     647,   648,   648,   648,   648,   648,   648,   648,   648,   648,
     648,   648,   648,   648,   648,   648,   648,   648,   648,   648,
     648,   649,   649,   649,   650,   651,   651,   651,   651,   653,
     652,   654,   652,   655,   652,   656,   652,   657,   652,   658,
     652,   652,   652,   652,   652,   659,   660,   660,   661,   661,
     661,   661,   661,   661,   661,   663,   662,   665,   664,   664,
     666,   666,   666,   666,   667,   667,   668,   668,   669,   669,
     670,   670,   671,   671,   673,   672,   674,   674,   674,   674,
     674,   674,   674,   674,   674,   674,   674,   674,   674,   675,
     676,   676,   677,   677,   678,   678,   679,   679,   679,   679,
     679,   679,   679,   680,   680,   680,   681,   681,   683,   682,
     684,   684,   685,   685,   686,   686,   687,   687,   688,   688,
     689,   690,   691,   691,   692,   692,   693,   694,   694,   694,
     694,   695,   695,   696,   696,   697,   697,   699,   698,   698,
     700,   698,   698,   702,   701,   703,   703,   704,   704,   705,
     706,   706,   707,   708,   708,   709,   709,   709,   709,   709,
     710,   711,   711,   712,   712,   713,   713,   714,   714,   715,
     715,   715,   716,   716,   716,   716,   716,   716,   716,   716,
     716,   716,   716,   716,   717,   718,   719,   719,   720,   720,
     721,   721,   722,   723,   723,   724,   724,   725,   726,   726,
     727,   728,   728,   728,   728,   728,   728,   728,   728,   728,
     728,   728,   728,   728,   729,   729,   730,   730,   731,   731,
     731,   731,   731,   731,   731,   731,   731,   731,   731,   731,
     731,   733,   732,   735,   734,   737,   736,   739,   738,   740,
     741,   742,   744,   743,   745,   746,   746,   746,   747,   747,
     749,   750,   751,   748,   752,   752,   752,   753,   753,   755,
     756,   754,   758,   757,   759,   759,   760,   760,   762,   763,
     761,   765,   766,   764,   767,   767,   769,   768,   770,   770,
     772,   771,   774,   773,   776,   775,   777,   778,   779,   777,
     780,   777,   781,   781,   782,   782,   782,   783,   784,   785,
     786,   786,   787,   787,   788,   789,   790,   790,   792,   791,
     793,   793,   793,   794,   794,   794,   795,   795,   796,   796,
     796,   797,   797,   797,   797,   797,   797,   797,   797,   798,
     798,   799,   799,   799,   800,   800,   800,   800,   800,   801,
     801,   802,   802,   802,   803,   803,   803,   803,   803,   803,
     803,   804,   804,   805,   805,   805,   806,   806,   806,   807,
     808,   809,   810,   811,   812,   812,   812,   813,   814,   815,
     816,   817,   818,   819,   820,   821,   822,   822,   823,   823,
     824,   824,   824,   824,   825,   826,   825,   827,   828,   827,
     829,   827,   830,   831,   831,   833,   832,   834,   836,   835,
     837,   838,   839,   838,   838,   838,   838,   838,   840,   840,
     841,   841,   842,   842,   843,   844,   845,   846,   847,   847,
     848,   849,   848,   850,   848,   851,   851,   852,   853,   854,
     854,   855,   855,   856,   856,   858,   857,   859,   860,   861,
     860,   862,   860,   863,   863,   864,   864,   865,   865,   867,
     868,   866,   869,   869,   870,   870,   871,   871,   872,   872,
     874,   873,   875,   876,   876,   877,   877,   878,   878,   878,
     878,   878,   878,   878,   878,   880,   881,   879,   882,   882,
     883,   883,   884,   884,   885,   885,   886,   886,   887,   887,
     888,   889,   889,   890,   890,   891,   891,   892,   892,   892,
     893,   893,   893,   893,   893,   893,   893,   893,   893,   893,
     893,   893,   893,   894,   893,   893,   893,   893,   893,   893,
     893,   893,   893,   893,   893,   895,   896,   897,   898,   899,
     899,   899,   899,   899,   899,   900,   900,   900,   901,   901,
     902,   902,   902,   902,   903,   904,   904,   905,   905,   906,
     906,   907,   907,   907,   907,   907,   907,   908,   908,   909,
     910,   910,   911,   913,   912,   914,   914,   914,   914,   914,
     914,   914,   914,   914,   914,   914,   914,   914,   914,   914,
     914,   914,   914,   914,   914,   914,   914,   914,   914,   914,
     914,   914,   914,   914,   914,   914,   914,   914,   914,   914,
     915,   914,   916,   914,   914,   914,   917,   917,   917,   917,
     917,   917,   917,   917,   918,   919,   919,   920,   920,   921,
     921,   921,   921,   921,   922,   922,   922,   922,   922,   923,
     923,   923,   924,   924,   924,   925,   926,   926,   927,   927,
     927,   928,   928,   929,   929,   930,   930,   930,   931,   931,
     931,   931,   932,   932,   933,   933,   934,   934,   935,   935,
     936,   936,   936,   936,   936,   936,   936,   936,   936,   936,
     936,   937,   938,   939,   939,   940,   940,   941,   941,   942,
     942,   943,   943,   944,   944,   945,   945,   946,   947,   947,
     948,   948,   949,   949,   950,   950,   950,   951,   951,   951,
     952,   952,   952,   952,   952,   952,   952,   953,   953,   955,
     954,   956,   956,   957,   958,   958,   958,   958,   959,   960,
     961,   961,   962,   963,   963,   964,   964,   965,   965,   966,
     967,   967,   968,   968,   969,   969,   969,   969,   970,   970,
     970,   970,   970,   971,   971,   971,   971,   971,   972,   973,
     973,   974,   974,   975,   975,   976,   976,   976,   977,   977,
     978,   979,   980,   981,   981,   982,   982,   983,   983,   984,
     984,   985,   985,   986,   986,   987,   987,   988,   988,   989,
     989,   990,   990,   991,   992,   992,   993,   993,   993,   994,
     994,   995,   995,   996,   996,   997,   997,   998,   998,  1000,
     999,  1001,   999,   999,  1002,   999,  1003,   999,  1004,   999,
    1005,   999,  1006,   999,   999,   999,   999,   999,   999,  1007,
    1007,  1007,  1007,  1008,  1008,  1009,  1009,  1010,  1010,  1011,
    1011,  1011,  1011,  1011,  1011,  1011,  1011,  1011,  1011,  1012,
    1011,  1011,  1013,  1011,  1014,  1011,  1011,  1011,  1011,  1011,
    1015,  1016,  1016,  1018,  1017,  1019,  1019,  1019,  1021,  1020,
    1022,  1023,  1022,  1024,  1024,  1025,  1026,  1026,  1027,  1028,
    1028,  1028,  1029,  1028,  1030,  1031,  1028,  1028,  1028,  1028,
    1028,  1028,  1028,  1028,  1028,  1028,  1028,  1028,  1028,  1028,
    1032,  1032,  1033,  1033,  1034,  1034,  1034,  1035,  1035,  1035,
    1036,  1036,  1036,  1036,  1038,  1039,  1037,  1037,  1040,  1041,
    1041,  1042,  1043,  1043,  1044,  1044,  1045,  1045,  1046,  1046,
    1048,  1047,  1049,  1049,  1050,  1050,  1050,  1051,  1051,  1052,
    1052,  1054,  1053,  1055,  1055,  1055,  1057,  1056,  1058,  1058,
    1059,  1059,  1060,  1060,  1060,  1062,  1061,  1063,  1065,  1064,
    1066,  1066,  1067,  1067,  1068,  1068,  1068,  1068,  1068,  1068,
    1070,  1069,  1071,  1071,  1071,  1073,  1072,  1072,  1074,  1074,
    1075,  1075,  1076,  1078,  1077,  1079,  1079,  1080,  1080,  1081,
    1082,  1083,  1083,  1085,  1084,  1086,  1086,  1087,  1087,  1088,
    1089,  1091,  1090,  1093,  1092,  1094,  1094,  1095,  1095,  1096,
    1097,  1097,  1098,  1098,  1099,  1099,  1101,  1100,  1103,  1104,
    1102,  1105,  1105,  1105,  1105,  1105,  1106,  1106,  1107,  1107,
    1108,  1108,  1109,  1109,  1109,  1110,  1110,  1110,  1111,  1111,
    1111,  1112,  1112,  1113,  1114,  1115,  1115,  1115,  1115,  1115,
    1116,  1116,  1117,  1117,  1117,  1117,  1117,  1117,  1117,  1117,
    1117,  1117,  1117,  1118,  1118,  1118,  1118,  1118,  1118,  1119,
    1119,  1119,  1119,  1119,  1119,  1119,  1119,  1119,  1119,  1119,
    1119,  1119,  1119,  1120,  1120,  1120,  1120,  1120,  1120,  1120,
    1120,  1120,  1120,  1120,  1120,  1120,  1120,  1120,  1121,  1121,
    1122,  1122,  1123,  1123,  1124,  1124,  1125,  1125,  1125,  1125,
    1125,  1125,  1126,  1126,  1127,  1127,  1127,  1127,  1127,  1127,
    1127,  1127,  1127,  1127,  1127,  1127,  1127,  1127,  1127,  1127,
    1127,  1127,  1127,  1127,  1127,  1127,  1127,  1127,  1127,  1127,
    1127,  1127,  1127,  1127,  1128,  1128,  1128,  1128,  1128,  1128,
    1128,  1128,  1128,  1128,  1128,  1128,  1128,  1128,  1128,  1128,
    1128,  1128,  1128,  1128,  1128,  1128,  1128,  1128,  1128,  1128,
    1128,  1129,  1129,  1129,  1129,  1129,  1129,  1129,  1129,  1129,
    1129,  1129,  1129,  1129,  1129,  1129,  1129,  1129,  1129,  1129,
    1129,  1129,  1129,  1130,  1130,  1130,  1130,  1130,  1130,  1130,
    1130,  1130,  1130,  1130,  1130,  1130,  1130,  1130,  1130,  1130,
    1130,  1130,  1130,  1130,  1130,  1130,  1131,  1131,  1131,  1131,
    1131,  1131,  1131,  1131,  1133,  1132,  1132,  1134,  1134,  1135,
    1135,  1136,  1136,  1137,  1137,  1138,  1138,  1139,  1140,  1140,
    1140,  1140,  1140,  1140,  1140,  1141,  1142,  1140,  1140,  1140,
    1140,  1140,  1140,  1140,  1140,  1140,  1140,  1140,  1143,  1140,
    1145,  1144,  1146,  1146,  1146,  1147,  1147,  1148,  1148,  1149,
    1149,  1151,  1150,  1152,  1152,  1152,  1152,  1152,  1152,  1152,
    1152,  1152,  1152,  1152,  1153,  1153,  1154,  1154,  1155,  1155,
    1156,  1156,  1157,  1157,  1158,  1158,  1159,  1159,  1160,  1160,
    1161,  1162,  1162,  1163,  1163,  1164,  1164,  1165,  1164,  1166,
    1164,  1167,  1164,  1164,  1168,  1164,  1169,  1164,  1164,  1170,
    1164,  1171,  1164,  1164,  1172,  1172,  1172,  1173,  1173,  1174,
    1176,  1175,  1175,  1175,  1177,  1178,  1179,  1177,  1180,  1182,
    1183,  1181,  1185,  1184,  1187,  1188,  1186,  1189,  1190,  1191,
    1191,  1192,  1192,  1192,  1192,  1193,  1193,  1195,  1194,  1196,
    1194,  1197,  1197,  1198,  1199,  1198,  1201,  1200,  1202,  1202,
    1203,  1203,  1204,  1204,  1205,  1205,  1206,  1206,  1206,  1206,
    1206,  1206,  1206,  1206,  1206,  1206,  1206,  1206,  1207,  1207,
    1207,  1207,  1207,  1207,  1207,  1207,  1207,  1208,  1208,  1208,
    1208,  1209,  1209,  1209,  1210,  1210,  1211,  1211,  1212,  1213,
    1212,  1214,  1215,  1214,  1216,  1216,  1217,  1217,  1218,  1218,
    1219,  1219,  1219,  1220,  1221,  1221,  1222,  1223,  1223,  1225,
    1224,  1226,  1226,  1227,  1227,  1227,  1228,  1228,  1229,  1229,
    1230,  1231,  1231,  1231,  1232,  1232,  1232,  1232,  1232,  1233,
    1233,  1234,  1234,  1234,  1234,  1234,  1234,  1235,  1235,  1235,
    1235,  1235,  1236,  1236,  1236,  1236,  1236,  1237,  1237,  1237,
    1237,  1238,  1239,  1239,  1240,  1241,  1240,  1242,  1242,  1243,
    1243,  1244,  1246,  1245,  1247,  1247,  1248,  1248,  1250,  1249,
    1252,  1253,  1251,  1251,  1251,  1255,  1254,  1257,  1256,  1258,
    1256,  1256,  1256,  1256,  1256,  1256,  1259,  1256,  1256,  1256,
    1256,  1256,  1256,  1260,  1260,  1261,  1262,  1263,  1263,  1264,
    1265,  1265,  1266,  1266,  1267,  1267,  1268,  1268,  1268,  1269,
    1269,  1271,  1272,  1270,  1274,  1275,  1273,  1276,  1276,  1276,
    1276,  1277,  1277,  1278,  1278,  1279,  1280,  1280,  1280,  1281,
    1280,  1282,  1282,  1283,  1283,  1284,  1283,  1285,  1283,  1286,
    1286,  1287,  1287,  1288,  1289,  1289,  1290,  1290,  1292,  1291,
    1293,  1293,  1294,  1294,  1295,  1295,  1296,  1297,  1296,  1299,
    1300,  1298,  1301,  1301,  1302,  1303,  1303,  1304,  1305,  1305,
    1307,  1306,  1309,  1308,  1310,  1308,  1311,  1308,  1312,  1312,
    1313,  1313,  1314,  1314,  1315,  1315,  1316,  1316,  1316,  1318,
    1317,  1319,  1319,  1320,  1320,  1321,  1321,  1322,  1322,  1322,
    1322,  1322,  1322,  1322,  1322,  1322,  1323,  1323,  1325,  1324,
    1326,  1326,  1326,  1326,  1326,  1326,  1326,  1326,  1326,  1326,
    1326,  1326,  1327,  1326,  1328,  1326,  1326,  1326,  1326,  1326,
    1326,  1326,  1326,  1326,  1326,  1326,  1326,  1326,  1326,  1326,
    1326,  1326,  1326,  1326,  1326,  1326,  1326,  1326,  1326,  1326,
    1326,  1326,  1326,  1326,  1326,  1326,  1326,  1329,  1329,  1329,
    1330,  1330,  1331,  1331,  1332,  1332,  1333,  1333,  1334,  1334,
    1335,  1335,  1336,  1336,  1337,  1337,  1337,  1339,  1338,  1340,
    1338,  1341,  1341,  1341,  1341,  1341,  1342,  1342,  1343,  1343,
    1343,  1344,  1344,  1344,  1346,  1345,  1348,  1349,  1347,  1347,
    1350,  1350,  1351,  1351,  1352,  1352,  1352,  1352,  1352,  1352,
    1352,  1352,  1352,  1352,  1352,  1352,  1352,  1353,  1353,  1355,
    1354,  1356,  1356,  1358,  1357,  1357,  1357,  1359,  1359,  1361,
    1360,  1362,  1363,  1363,  1364,  1365,  1365,  1365,  1366,  1368,
    1369,  1370,  1371,  1367,  1372,  1372,  1373,  1373,  1374,  1374,
    1374,  1375,  1375,  1375,  1376,  1376,  1377,  1377,  1378,  1378,
    1378,  1378,  1379,  1379,  1380,  1380,  1381,  1381,  1382,  1382,
    1383,  1383,  1384,  1384,  1385,  1385,  1385,  1386,  1386,  1387,
    1387,  1388,  1388,  1389,  1389,  1390,  1391,  1391,  1391,  1391,
    1392,  1392,  1392,  1393,  1394,  1394,  1394,  1395,  1395,  1395,
    1395,  1395,  1395,  1395,  1395,  1395,  1395,  1396,  1396,  1396,
    1396,  1396,  1397,  1397,  1397,  1398,  1398,  1399,  1399,  1400,
    1401,  1401,  1402,  1402,  1403,  1403,  1403,  1404,  1404,  1404,
    1404,  1405,  1405,  1405,  1406,  1406,  1407,  1408,  1408,  1409,
    1410,  1411,  1412,  1412,  1413,  1413,  1414,  1414,  1414,  1415,
    1415,  1415,  1416,  1416,  1416,  1416,  1416,  1416,  1416,  1416,
    1416,  1416,  1416,  1416,  1416,  1416,  1416,  1416,  1416,  1416,
    1416,  1416,  1416,  1416,  1416,  1416,  1416,  1416,  1416,  1416,
    1416,  1416,  1416,  1416,  1416,  1416,  1416,  1416,  1416,  1416,
    1416,  1416,  1416,  1416,  1416,  1416,  1416,  1416,  1416,  1416,
    1416,  1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,
    1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,
    1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,
    1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,
    1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,
    1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,
    1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,
    1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,
    1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,
    1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,
    1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,
    1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,
    1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,
    1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,
    1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,
    1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,
    1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,
    1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,
    1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,
    1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,
    1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,
    1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,
    1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,
    1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,
    1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,
    1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,
    1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,
    1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,
    1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,
    1417,  1417,  1419,  1418,  1420,  1420,  1421,  1421,  1423,  1422,
    1424,  1424,  1424,  1424,  1425,  1426,  1426,  1426,  1426,  1427,
    1427,  1427,  1427,  1428,  1428,  1429,  1429,  1430,  1430,  1430,
    1430,  1430,  1430,  1430,  1431,  1431,  1431,  1432,  1432,  1432,
    1432,  1433,  1433,  1433,  1434,  1434,  1434,  1434,  1434,  1436,
    1435,  1437,  1437,  1438,  1438,  1439,  1440,  1440,  1440,  1440,
    1442,  1441,  1443,  1443,  1444,  1443,  1445,  1445,  1446,  1446,
    1447,  1447,  1447,  1447,  1448,  1447,  1449,  1449,  1449,  1449,
    1449,  1450,  1451,  1451,  1451,  1451,  1451,  1452,  1453,  1453,
    1453,  1453,  1454,  1454,  1455,  1455,  1456,  1456,  1457,  1457,
    1459,  1458,  1460,  1458,  1461,  1458,  1462,  1458,  1458,  1458,
    1458,  1458,  1458,  1458,  1458,  1458,  1458,  1458,  1458,  1458,
    1458,  1458,  1458,  1458,  1458,  1458,  1458,  1458,  1458,  1458,
    1458,  1458,  1458,  1458,  1463,  1463,  1464,  1464,  1465,  1465,
    1465,  1466,  1466,  1466,  1466,  1467,  1467,  1468,  1468,  1469,
    1469,  1469,  1469,  1469,  1470,  1470,  1471,  1471,  1472,  1473,
    1473,  1473,  1473,  1473,  1474,  1474,  1475,  1475,  1476,  1476,
    1477,  1477,  1477,  1477,  1477,  1479,  1478,  1480,  1480,  1481,
    1481,  1481,  1482,  1482,  1482,  1483,  1483,  1484,  1485,  1485,
    1486,  1487,  1488,  1488,  1490,  1489,  1491,  1491,  1491,  1492,
    1492,  1494,  1493,  1495,  1495,  1496,  1496,  1496,  1497,  1497,
    1498,  1499,  1498,  1500,  1501,  1502,  1503,  1503,  1504,  1504,
    1505,  1505,  1505,  1505,  1505,  1505,  1505,  1505,  1506,  1506,
    1506,  1507,  1507,  1507,  1507,  1507,  1508,  1508,  1508,  1508,
    1508,  1508,  1509,  1509,  1510,  1511,  1512,  1512,  1512,  1513,
    1514,  1514,  1514,  1515,  1515,  1515,  1517,  1516,  1518,  1518,
    1519,  1519,  1521,  1520,  1522,  1522,  1523,  1523,  1523,  1523,
    1525,  1526,  1527,  1524,  1528,  1528,  1530,  1531,  1532,  1533,
    1534,  1529,  1536,  1537,  1538,  1539,  1535,  1540,  1540,  1540,
    1540,  1540,  1540,  1541,  1541,  1541,  1542,  1542,  1543,  1543,
    1543,  1544,  1544,  1545,  1546,  1545,  1547,  1547,  1548,  1549
};

/* YYR2[YYN] -- Number of symbols composing right hand side of rule YYN.  */
static const yytype_uint8 yyr2[] =
{
       0,     2,     1,     0,     4,     2,     0,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     3,     1,     1,     4,     1,     2,     0,     4,
       0,     2,     3,     1,     2,     0,     3,     0,     5,     1,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     5,
       1,     0,     1,     3,     1,     3,     3,     3,     3,     0,
       7,     0,    12,     0,    12,     0,    12,     0,     6,     0,
       3,     4,     4,     3,     2,    10,     1,     3,     2,     2,
       2,     2,     2,     2,     2,     0,    13,     0,     6,     2,
       0,     1,     3,     1,     0,     2,     0,     2,     0,     1,
       3,     4,     0,     2,     0,     2,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     0,
       3,     1,     0,     2,     0,     2,     2,     2,     2,     2,
       3,     3,     1,     1,     1,     2,     3,     3,     0,     4,
       0,     3,     0,     1,     3,     1,     0,     1,     3,     1,
       0,     3,     0,     1,     3,     1,     4,     0,     1,     1,
       1,     0,     3,     2,     3,     0,     3,     0,     5,     5,
       0,     7,     5,     0,     2,     1,     1,     1,     3,     1,
       1,     1,     3,     0,     1,     1,     1,     1,     2,     1,
       3,     1,     1,     0,     1,     0,     2,     3,     5,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     3,     4,     0,     1,     1,     3,
       1,     3,     3,     1,     2,     1,     1,     1,     1,     3,
       3,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     3,     0,     2,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     0,     5,     0,     2,     0,     3,     0,     2,     2,
       2,     2,     0,     6,     2,     0,     2,     1,     1,     3,
       0,     0,     0,     7,     0,     2,     2,     1,     1,     0,
       0,     8,     0,     6,     1,     2,     1,     2,     0,     0,
       6,     0,     0,     6,     0,     2,     0,     5,     0,     1,
       0,     5,     0,     2,     0,     5,     4,     0,     0,     8,
       0,     7,     1,     1,     1,     1,     1,     2,     4,     5,
       0,     4,     4,     4,     3,     3,     2,     2,     0,     2,
       1,     2,     3,     1,     1,     1,     0,     1,     1,     2,
       3,     1,     1,     1,     1,     1,     1,     1,     1,     0,
       1,     1,     2,     3,     1,     1,     1,     1,     1,     0,
       1,     1,     2,     3,     1,     1,     1,     1,     1,     1,
       1,     0,     1,     1,     2,     3,     1,     1,     1,     2,
       2,     2,     1,     1,     1,     1,     2,     3,     3,     3,
       3,     3,     3,     3,     3,     4,     1,     1,     1,     1,
       2,     3,     2,     4,     5,     0,     5,     0,     0,     5,
       0,     7,     1,     0,     1,     0,     4,     0,     0,     3,
       5,     5,     0,     4,     2,     2,     2,     2,     0,     1,
       0,     1,     1,     3,     1,     4,     5,     5,     0,     2,
       0,     0,     7,     0,     9,     1,     3,     1,     1,     0,
       2,     0,     3,     1,     3,     0,     6,     1,     0,     0,
       5,     0,     4,     1,     1,     1,     3,     1,     3,     0,
       0,     5,     1,     3,     1,     1,     0,     3,     1,     3,
       0,     4,     1,     0,     1,     2,     1,     3,     4,     3,
       3,     3,     4,     4,     3,     0,     0,     6,     0,     1,
       0,     1,     1,     2,     1,     1,     0,     1,     1,     2,
       1,     0,     3,     0,     1,     1,     2,     1,     2,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     0,     6,     1,     1,     3,     4,     4,
       2,     2,     2,     3,     3,     4,     4,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     2,
       1,     1,     1,     1,     1,     1,     3,     1,     1,     2,
       2,     7,     8,     8,     8,     8,     2,     0,     1,     4,
       0,     1,     2,     0,     4,     3,     3,     3,     1,     2,
       1,     1,     3,     2,     3,     2,     2,     1,     3,     3,
       2,     3,     1,     2,     2,     2,     1,     2,     1,     1,
       1,     2,     3,     2,     3,     2,     2,     3,     3,     3,
       0,     6,     0,     6,     2,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     2,     2,     1,     2,
       1,     2,     3,     2,     1,     1,     1,     1,     1,     1,
       1,     2,     0,     1,     1,     5,     0,     3,     0,     2,
       3,     0,     1,     2,     1,     1,     1,     1,     3,     3,
       3,     3,     0,     1,     0,     1,     0,     1,     2,     1,
       1,     2,     2,     3,     1,     3,     2,     1,     2,     2,
       2,     2,     2,     1,     1,     2,     1,     1,     1,     1,
       1,     0,     2,     1,     1,     1,     1,     1,     0,     2,
       1,     1,     0,     1,     1,     2,     2,     1,     2,     2,
       0,     1,     1,     1,     3,     1,     3,     0,     1,     0,
       4,     1,     1,     1,     0,     1,     2,     1,     1,     2,
       1,     3,     3,     1,     1,     0,     2,     0,     1,     5,
       0,     3,     3,     1,     0,     2,     2,     2,     0,     3,
       3,     6,     6,     1,     1,     2,     2,     2,     1,     2,
       2,     1,     1,     0,     1,     1,     1,     1,     0,     1,
       1,     1,     0,     1,     2,     0,     1,     0,     1,     0,
       1,     1,     2,     1,     2,     1,     2,     2,     2,     3,
       2,     1,     1,     1,     1,     3,     1,     1,     1,     4,
       2,     1,     4,     0,     1,     0,     2,     1,     3,     0,
       6,     0,     5,     7,     0,     5,     0,     5,     0,     5,
       0,     4,     0,    10,     3,     4,     3,     3,     7,     0,
       3,     1,     4,     0,     3,     0,     2,     0,     1,     0,
       2,     2,     2,     2,     1,     1,     1,     3,     4,     0,
       6,     4,     0,     5,     0,     6,     4,     3,     1,     7,
       3,     1,     1,     0,     5,     0,     3,     2,     0,     5,
       0,     0,     6,     1,     3,     1,     1,     3,     2,     3,
       2,     4,     0,     6,     0,     0,     8,     4,     4,     3,
       3,     2,     2,     6,     5,     3,     5,     1,     1,     1,
       0,     1,     0,     1,     0,     1,     1,     0,     2,     1,
       0,     1,     1,     1,     0,     0,     7,     3,     3,     0,
       3,     4,     0,     3,     0,     3,     0,     3,     0,     3,
       0,     2,     1,     3,     0,     1,     1,     0,     2,     1,
       3,     0,     5,     0,     1,     1,     0,     6,     0,     1,
       1,     2,     1,     1,     1,     0,     5,     2,     0,     5,
       0,     1,     1,     2,     1,     1,     1,     1,     1,     2,
       0,     5,     0,     1,     1,     0,     4,     4,     3,     5,
       1,     3,     3,     0,     6,     1,     1,     1,     3,     2,
       3,     1,     1,     0,     6,     1,     1,     1,     3,     3,
       4,     0,     6,     0,     2,     0,     4,     0,     2,     1,
       2,     4,     2,     3,     2,     3,     0,     3,     0,     0,
       6,     2,     1,     1,     2,     2,     8,     4,     0,     1,
       2,     1,     1,     1,     1,     0,     2,     4,     3,     1,
       1,     3,     4,     0,     0,     0,     2,     2,     1,     1,
       0,     2,     3,     3,     3,     2,     3,     4,     3,     4,
       3,     4,     1,     3,     4,     3,     3,     6,     1,     5,
       6,     5,     7,     6,     8,     5,     6,     4,     4,     5,
       3,     4,     1,     3,     3,     3,     3,     3,     3,     5,
       5,     3,     3,     3,     3,     3,     3,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     3,
       1,     1,     1,     1,     3,     2,     2,     2,     2,     3,
       3,     5,     6,     4,     4,     7,     2,     6,     5,     6,
       6,     4,     4,     5,     4,     6,     2,     4,     4,     4,
      10,     6,     8,     6,     4,     4,     6,     4,     4,     4,
       6,     4,     7,     7,     7,     6,     6,     6,     6,     3,
       4,     6,     8,     2,     2,     8,     8,     6,     6,     1,
       6,     6,     8,     8,     6,     8,     6,     2,     8,     8,
       2,     2,     2,     4,     4,     4,     4,     3,     8,     4,
       6,     4,     4,     4,     6,     8,     4,     3,     6,     4,
       6,     5,     8,     7,    10,     1,     6,     4,     4,     4,
       4,     4,     6,     4,     0,     5,     6,     2,     3,     0,
       4,     0,     3,     0,     1,     1,     3,     4,     4,     5,
       4,     4,     4,     5,     4,     0,     0,     7,     4,     5,
       4,     5,     4,     4,     4,     4,     4,     5,     0,     8,
       0,     3,     3,     1,     4,     0,     1,     0,     2,     0,
       1,     0,     3,     2,     3,     2,     1,     2,     1,     2,
       1,     2,     2,     2,     0,     1,     1,     3,     1,     3,
       1,     3,     0,     1,     0,     2,     4,     5,     1,     1,
       1,     1,     4,     1,     3,     3,     3,     0,     6,     0,
       6,     0,     8,     4,     0,     8,     0,    10,     6,     0,
       8,     0,    10,     6,     1,     2,     2,     0,     1,     5,
       0,     5,     3,     5,     2,     0,     0,     7,     1,     0,
       0,     6,     0,     3,     0,     0,     5,     0,     1,     0,
       1,     0,     2,     3,     3,     1,     1,     0,     7,     0,
       7,     1,     2,     0,     0,     2,     0,     2,     0,     1,
       1,     1,     1,     3,     1,     3,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     0,     1,     1,     0,     2,     0,     1,     0,     0,
       3,     0,     0,     3,     2,     0,     0,     4,     4,     2,
       0,     1,     1,     3,     3,     1,     2,     0,     1,     0,
       4,     4,     2,     0,     1,     1,     0,     1,     0,     1,
       2,     1,     3,     3,     1,     1,     1,     1,     1,     0,
       2,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     0,     0,     6,     0,     1,     3,
       1,     3,     0,     2,     3,     1,     2,     1,     0,     3,
       0,     0,     7,     2,     1,     0,     3,     0,     7,     0,
       6,     4,     6,     4,     4,     4,     0,     6,     4,     4,
       4,     5,     4,     1,     3,     1,     2,     1,     3,     1,
       0,     2,     0,     1,     0,     1,     1,     2,     3,     1,
       1,     0,     0,     8,     0,     0,     6,     0,     1,     1,
       1,     1,     1,     2,     1,     1,     1,     3,     4,     0,
       3,     3,     1,     2,     2,     0,     3,     0,     5,     3,
       1,     3,     1,     3,     1,     1,     0,     1,     0,     4,
       0,     1,     3,     1,     1,     1,     0,     0,     6,     0,
       0,    11,     3,     1,     3,     3,     1,     3,     0,     1,
       0,     4,     0,     7,     0,     5,     0,     6,     1,     3,
       2,     4,     0,     2,     0,     2,     1,     1,     1,     0,
       4,     0,     1,     0,     1,     1,     3,     1,     1,     2,
       2,     2,     1,     1,     1,     1,     0,     3,     0,     3,
       2,     4,     4,     3,     4,     4,     1,     3,     3,     6,
       2,     2,     0,     6,     0,     6,     5,     2,     1,     1,
       1,     5,     5,     2,     2,     1,     4,     3,     2,     3,
       2,     2,     1,     3,     4,     3,     3,     2,     2,     3,
       3,     3,     3,     3,     3,     3,     3,     1,     1,     1,
       1,     1,     0,     1,     0,     2,     0,     1,     1,     1,
       0,     2,     0,     2,     0,     2,     2,     0,     4,     0,
       4,     1,     1,     1,     1,     1,     1,     1,     0,     1,
       1,     0,     1,     1,     0,     4,     0,     0,     5,     1,
       0,     3,     3,     1,     2,     2,     2,     2,     2,     2,
       2,     1,     1,     1,     1,     1,     1,     0,     1,     0,
       3,     3,     1,     0,     3,     1,     2,     0,     1,     0,
       3,     3,     2,     2,     3,     0,     1,     1,     2,     0,
       0,     0,     0,    22,     1,     1,     0,     1,     0,     1,
       1,     0,     1,     1,     0,     2,     2,     1,     3,     4,
       3,     3,     0,     2,     2,     1,     3,     3,     0,     4,
       0,     3,     1,     1,     0,     3,     2,     3,     1,     1,
       2,     0,     2,     3,     1,     5,     1,     1,     2,     2,
       1,     1,     1,     1,     1,     2,     2,     1,     1,     1,
       1,     1,     1,     1,     1,     2,     2,     1,     1,     1,
       1,     1,     2,     2,     2,     1,     1,     3,     5,     1,
       1,     1,     1,     1,     3,     4,     5,     1,     5,     3,
       2,     1,     3,     2,     2,     4,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       3,     2,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     0,     4,     0,     1,     1,     3,     0,     2,
       1,     1,     1,     1,     0,     0,     1,     1,     1,     0,
       2,     2,     2,     1,     2,     4,     5,     4,     6,     2,
       3,     3,     3,     5,     1,     3,     3,     2,     2,     2,
       1,     1,     4,     4,     1,     1,     1,     1,     1,     0,
       4,     1,     1,     1,     3,     3,     1,     1,     2,     2,
       0,     3,     4,     3,     0,     7,     1,     2,     1,     1,
       1,     1,     1,     1,     0,     5,     1,     1,     1,     1,
       1,     3,     6,     6,     6,     7,     5,     3,     8,     8,
       8,     6,     0,     1,     1,     2,     0,     1,     1,     3,
       0,     3,     0,     3,     0,     3,     0,     3,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     2,
       2,     1,     3,     2,     2,     2,     2,     2,     2,     2,
       2,     1,     1,     2,     0,     1,     3,     1,     2,     2,
       2,     1,     3,     3,     1,     1,     3,     1,     3,     4,
       5,     4,     6,     1,     0,     3,     3,     1,     1,     0,
       2,     2,     2,     2,     0,     2,     0,     3,     2,     1,
       2,     2,     2,     2,     2,     0,     3,     0,     1,     0,
       3,     2,     0,     1,     2,     0,     1,     4,     4,     5,
       2,     3,     0,     1,     0,     4,     0,     1,     1,     0,
       1,     0,     2,     2,     1,     0,     1,     1,     2,     3,
       2,     0,     6,     3,     0,     0,     0,     1,     2,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     2,     2,
       3,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     0,     3,     1,     2,     1,     2,
       3,     3,     3,     0,     3,     3,     0,     7,     0,     3,
       1,     3,     0,     3,     2,     4,     0,     3,     4,     4,
       0,     0,     0,    16,     8,     7,     0,     0,     0,     0,
       0,    15,     0,     0,     0,     0,    12,     4,     4,     3,
       4,     3,     2,     1,     3,     5,     1,     1,     0,     1,
       1,     0,     2,     0,     0,     3,     0,     2,     5,     3
};

/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
   means the default is an error.  */
static const yytype_uint16 yydefact[] =
{
       0,  2524,  1042,  2455,     0,     0,     0,     0,     0,     0,
    2457,   119,    63,  1660,  1776,  1777,  1565,  1592,     2,     0,
    1042,   266,   169,     0,    75,  1601,     0,  1825,     0,     0,
    1042,   478,     0,  1819,     0,     0,  1042,  1604,  1809,   243,
     169,  2457,     0,  1088,  2284,  1698,     0,     0,     0,  1681,
       0,  2340,  1649,     0,     0,     0,     0,     3,     8,    19,
       0,    39,    24,    29,    14,    18,    13,    52,    46,    26,
      37,    10,    54,    55,    16,    43,    11,    12,    15,    35,
      42,    36,    38,    50,  1079,    22,    23,    30,    44,    59,
      20,    56,    53,    21,  1778,    25,    45,    40,    32,    60,
      33,    51,    34,    58,    28,    47,    27,     9,    17,    48,
      49,    41,    61,    31,    57,     0,   907,     0,     0,   973,
       0,     0,     0,     0,     0,   890,  2522,  2523,  2524,  1044,
    1043,     0,  2457,  1929,  1027,  1053,  1991,  1992,  1993,  1994,
    1995,  1996,  1997,  1943,  1998,  1999,  2001,  2000,  2002,  2003,
    1944,  1945,  2004,  2005,  2006,  2008,  2007,  2009,  1946,  1947,
    2010,  2011,  2012,  2013,  1948,  1949,  2014,  2016,  2015,  1950,
    2017,  2018,  2019,  2021,  2020,  1951,  2022,  1952,  2023,  2024,
    2025,  2026,  2027,  2028,  2029,  2031,  2030,  1953,  2032,  2033,
    2034,  2035,  2036,  2037,  2039,  2038,  2040,  2041,  2042,  1954,
    2043,  2044,  2045,  2046,  2047,  2048,  2049,  2050,  2051,  1955,
    2052,  2053,  2054,  2072,  1956,  2055,  2058,  2057,  2056,  2059,
    2060,  2061,  2063,  2062,  2064,  2065,  1957,  2066,  2067,  2068,
    2070,  2069,  2074,  2075,  2076,  1958,  2071,  2073,  2262,  2077,
    2079,  2078,  2080,  2082,  2081,  1959,  2083,  1960,  1961,  2084,
    2085,  1927,  2086,  1928,  2087,  2089,  2090,  2091,  2096,  1962,
    2088,  2092,  2093,  2094,  2095,  2097,  1963,  2098,  2099,  2100,
    2101,  2102,  2103,  2104,  2105,  2106,  2107,  2118,  2120,  2111,
    2113,  2114,  2116,  2112,  2119,  2117,  2123,  2122,  2124,  2125,
    2126,  2127,  2128,  2121,  2109,  2115,  2110,  2129,  2130,  2108,
    2131,  2132,  2133,  2134,  2135,  2136,  2137,  2138,  2139,  2140,
    2141,  2143,  2142,  2144,  2145,  2146,  2147,  2148,  2149,  2151,
    2150,  2152,  2153,  2154,  2156,  2155,  2158,  2159,  1964,  2157,
    2160,  2161,  2162,  2163,  2164,  1965,  1966,  1967,  2165,  2166,
    1968,  2167,  2169,  2168,  2170,  2171,  2172,  2173,  2174,  2175,
    2176,  1969,  1970,  2177,  2178,  2179,  2180,  2181,  2182,  2183,
    2184,  2185,  2186,  2187,  2188,  2189,  2190,  2192,  2191,  2193,
    2194,  2195,  2196,  2197,  2198,  2199,  1971,  2200,  1972,  2201,
    2202,  1973,  2203,  1974,  2204,  2205,  2206,  2207,  1975,  2208,
    2209,  2210,  2212,  2213,  2211,  2214,  1976,  2215,  2216,  2217,
    1977,  2219,  2218,  2220,  1978,  2222,  2223,  1979,  2221,  1981,
    2224,  2225,  1980,  1982,  2226,  2227,  2229,  2228,  2230,  2231,
    2232,  1983,  2233,  1984,  2234,  2235,  2236,  2237,  2238,  2240,
    2239,  2241,  2242,  2243,  2244,  2246,  2248,  2247,  2245,  2249,
    2250,  2251,  2252,  2255,  2256,  2257,  2258,  2253,  2254,  1985,
    2259,  2260,  2261,  2263,  2264,  2266,  2265,  1986,  1987,  2267,
    2268,  1990,  2269,  2270,  2273,  2271,  2272,  2275,  2274,  2276,
    2278,  2277,  1988,  2279,  1989,  2280,  2281,   188,  1932,   171,
    1933,  1942,     0,  2332,  2331,  1011,  1028,  2458,  2459,   571,
     840,     0,     0,   841,     0,   570,   839,   169,  2524,   124,
       0,   567,   568,     0,     0,     0,  1674,     0,  1590,  1590,
    1590,     0,     0,  1590,  1590,     0,  1593,  1590,   169,  1590,
       0,    68,  1784,   267,     0,     0,     0,     0,     0,  1926,
       0,  1607,     0,  1826,  1827,     0,  1834,     0,  1835,  1829,
    2329,     0,     0,     0,     0,     0,   169,  1045,     0,  1658,
       0,   233,   242,   244,   245,   241,     0,  2459,  2470,  1080,
    1086,  1098,  2285,  2282,  1756,   245,  1000,   989,  1000,  1682,
    1679,     0,     0,  1658,  1828,  2576,     0,     0,     0,  2572,
       0,  2577,     0,  1088,     0,     0,     1,     5,     0,     0,
    2067,  2169,  1769,  1767,  1921,     0,   881,   908,     0,   886,
       0,   884,  1938,  1937,  1936,     0,   897,   896,   894,     0,
     442,     0,     0,  2533,   888,  1025,  2456,     0,   190,     0,
      77,     0,     0,     0,  2462,     0,     0,     0,     0,   123,
       0,     0,     0,   120,  1113,  1113,  2524,  2526,  2528,   571,
     569,     0,     0,     0,  1678,  1677,  1676,     0,  1674,  1992,
    1943,  2003,     0,  1894,     0,     0,     0,  1362,     0,  1948,
       0,  2017,  2019,  1953,     0,     0,  1120,  1120,   718,     0,
       0,     0,  2041,  2042,  1900,     0,     0,     0,  1891,  1901,
    2079,  2080,     0,  1893,  2085,     0,     0,     0,     0,  2102,
    1898,     0,     0,  2138,  2140,     0,     0,  2144,  2145,  2146,
    2147,  1877,  1175,     0,   718,  1890,  1897,  2163,  1883,  2170,
    2175,  2176,     0,  2185,     0,     0,  2207,     0,  2213,  2211,
    2217,     0,     0,  2237,     0,     0,   718,  1876,  2255,  2256,
    2257,  2258,     0,  1892,  1985,  1899,     0,  2269,  1120,   718,
     718,     0,     0,     0,  2276,  2278,  2281,     0,     0,     0,
    2494,  1174,     0,  1330,     0,  1249,  1356,  1132,  1138,  1152,
       0,  1167,  1185,  1186,  1188,  1285,  1187,  1193,  1192,  1566,
    1887,  1191,  1190,  1888,  1889,  1184,  1911,  1932,  1910,     0,
       0,     0,     0,     0,     0,     0,     0,  1594,     0,     0,
    1576,  1590,    70,     0,     0,  2376,  2391,  2392,  2388,  2393,
    2411,  2394,  2398,     0,  2390,  2382,     0,  2397,     0,  2386,
    2395,     0,  2380,     0,  2396,  2401,  2412,  2384,  2389,  2367,
       0,  2374,  2378,  1923,  1471,  2343,  2344,     0,    76,  1609,
    1610,  1608,   972,     0,  1824,     0,  1838,     0,  1040,   488,
     479,     0,  1751,  1750,     0,  1820,  2471,     0,     0,  1016,
    1612,  1659,     0,  1611,  1815,     0,  1813,  1810,  1812,   234,
       0,     0,   264,  2376,     0,  2361,     0,  2465,  2462,  2472,
    2507,  2502,  2501,  2504,  2505,  1104,  2506,  1103,  2503,  2500,
    1113,  1099,  1101,  1102,  2288,  1718,     0,   756,     0,  1764,
    1719,     0,     0,  1764,     0,  1506,  1754,  1757,     0,  2296,
    1732,   837,   836,   835,  2297,  1750,     0,  1706,  1720,     0,
    1683,  1725,     0,  2298,     0,  1753,     0,  1506,  1764,     0,
    1699,     0,     0,     0,     0,   240,   984,  1004,     0,   988,
     987,     0,  2589,  2341,   972,  1882,  1881,  1930,  2573,  1880,
    2581,  2583,  2569,  2571,  2578,  1082,     0,  2476,     6,    62,
       0,  1781,  2531,  2532,  2530,   772,     0,  1120,  1939,  2525,
     172,   895,     0,   443,   172,     0,     0,     0,     0,     0,
     444,   445,   377,   879,   892,     0,     0,   891,  2533,     0,
       0,  1055,  1057,  1056,  1073,   192,   189,   170,     0,  1013,
    1583,  1585,  1030,  2461,     0,     0,  2463,  2467,  1173,  1172,
       0,   117,   122,     0,     0,     0,  2433,   121,  2427,  2529,
    1113,  1113,  1113,  2521,     0,  2509,  2516,  2517,  2520,  2519,
    2518,  2515,     0,  2508,  2511,  2512,  2514,  2513,  2533,  2527,
       0,   842,   842,   842,     0,  1661,  1664,  1668,  1672,  1675,
       0,     0,  1476,  1206,  1476,  1476,  1476,  1363,     0,     0,
       0,     0,     0,     0,     0,     0,  1476,     0,  1243,  1216,
       0,  1244,     0,     0,     0,  1902,     0,     0,     0,  2494,
       0,     0,     0,  1335,     0,     0,     0,  2494,     0,     0,
       0,     0,     0,  1358,  1360,  1910,  1476,     0,     0,  1476,
       0,     0,     0,     0,     0,  1125,   752,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1476,  1476,     0,     0,  1476,  1257,  1904,     0,     0,     0,
    1903,     0,     0,     0,  1896,  1895,  1878,     0,  1260,  1262,
    1261,     0,  1476,  1476,     0,     0,     0,  1196,  1195,  1197,
       0,     0,     0,     0,     0,     0,  1171,  1170,  1169,  1168,
       0,     0,     0,  1176,     0,  1177,  1178,     0,  1179,  1180,
    1181,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1198,     0,     0,     0,  1879,  1294,     0,  1591,  1571,  1578,
    1573,     0,  1594,  1574,  1582,   457,   456,  1599,  1600,  1580,
    1595,  1596,     0,  1579,  2425,  1575,     0,  1567,     0,    69,
       0,  1805,     0,     0,     0,  1801,  1803,  1802,     0,     0,
    1806,     0,  1804,  1785,  1789,  1793,  1786,     0,     0,   265,
     268,   270,     0,   273,  2377,  2375,  2409,  2408,  2413,     0,
    2410,  2406,  2399,  2434,  2403,     0,  2434,  2405,  2404,  2434,
    2400,  2407,  2434,  2372,     0,  1472,  1473,     0,  2342,     0,
    1922,     0,     0,  1063,  1839,  1840,  1836,  1471,  2330,  2333,
       0,   489,     0,     0,   498,     0,     0,    65,    66,     0,
    1047,     0,  1046,  1050,     0,     0,     0,  1615,  1605,  1614,
    1397,  1816,  1817,     0,   232,   257,   252,   260,   254,   256,
     255,   261,   262,   263,   258,   253,   259,   246,     0,  2375,
       0,  2372,  2466,     0,  2468,  2485,  1087,  2473,  1110,  1089,
    1109,     0,  1100,  2283,  2286,  2294,  1760,   755,     0,     0,
    1731,     0,   571,     0,     0,     0,     0,     0,     0,  1700,
       0,     0,   608,     0,  1724,  1507,  1758,  1759,  1764,     0,
       0,  1764,     0,  1737,  1754,     0,  1764,  1695,     0,     0,
    1687,  1692,  1688,     0,  1694,  1693,  1696,  1684,  1685,  1760,
    1711,  1738,  1754,  1723,  1730,     0,  1710,  1717,     0,  1728,
    1754,  1754,  1764,  1764,  1007,  1006,  1005,  1001,  1002,     0,
    1680,  1400,     0,     0,  2570,  2584,  2568,  2579,  2580,  2567,
    1083,  2477,  1081,  2478,     0,     7,     4,  1771,  1772,  1773,
    1774,  1775,  1770,  1768,  1782,  1783,   773,   772,   562,   565,
     564,     0,     0,  1941,     0,   887,     0,   431,   885,     0,
       0,   409,   388,   409,   446,   772,   899,     0,     0,   889,
    1026,     0,     0,   477,  1073,  1059,  1075,     0,   193,   195,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    78,    79,   100,  1015,  1014,     0,  1012,
    1038,  1037,  1035,     0,  1036,  1034,  1029,  1031,  1032,  2460,
    2464,   572,   772,   419,     0,   380,     0,     0,     0,     0,
       0,   571,     0,     0,  2510,   109,   843,     0,     0,     0,
    1666,  1587,  1397,  1589,  1921,     0,     0,     0,  1670,     0,
       0,  1477,  1476,     0,  1341,     0,     0,     0,     0,  1364,
       0,     0,     0,     0,     0,     0,     0,  1315,     0,  1341,
    1121,     0,   719,  1267,     0,     0,     0,     0,     0,     0,
    1447,  1448,  1449,  1450,  1458,  1451,  1452,  1453,  1460,  1465,
    1454,  1455,  1461,  1462,  1463,  1456,  1464,  1459,  1457,  1466,
       0,  1446,     0,  1470,  1467,  1469,  1468,     0,  1336,  1328,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1476,     0,     0,     0,  1476,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1277,     0,     0,     0,     0,     0,  1476,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1239,     0,  1913,  1912,     0,     0,     0,   805,     0,  1200,
       0,  1199,  1409,     0,  2479,  2495,     0,  2299,  1331,  1333,
       0,  1123,  1122,  1124,  1135,  1128,  1133,  1126,  1130,     0,
    1182,  1997,  1136,     0,     0,  1164,  2494,  1485,  1165,  1150,
    1155,  1156,     0,  1153,  1154,     0,  1158,     0,  1157,  1161,
    1162,  1163,  1166,     0,     0,     0,     0,  1189,  1194,  1357,
    1113,  1914,     0,  1569,  1581,  1752,  1597,  1636,     0,   974,
       0,     0,    71,    73,  1798,  1795,  1794,  1796,  1800,  1799,
    1797,     0,  1807,  2041,  2255,  2258,   277,     0,   250,   249,
     251,   274,     0,     0,  2402,     0,  2383,     0,  2387,  2381,
    2385,     0,     0,  2373,     0,  2379,  1475,  2075,  2155,     0,
    1478,  2346,  1602,  2588,     0,  1837,     0,     0,     0,  1041,
       0,  1113,   487,   486,   485,   484,     0,   500,   482,     0,
      67,     0,     0,  1821,     0,     0,     0,     0,  1018,  1613,
       0,     0,  1586,  1398,  1818,  1814,  1811,     0,     0,     0,
       0,     0,     0,     0,  2469,  2487,  2486,  2474,  1113,  1497,
    1114,  1114,  1910,  2288,  2291,  2292,  2293,     0,  2290,  2289,
    2303,     0,  1762,  1765,  1766,     0,     0,  1746,  1740,  1739,
    1735,  1741,  1736,  1749,  1748,  1747,  1708,  1707,  1517,  1518,
    1516,  1510,  1511,  1515,  1514,  1703,  1755,  1745,  1743,  1733,
    1764,  1744,  1742,  1689,  1690,  1691,     0,  1506,     0,  1762,
    1764,  1754,     0,  1764,  1764,  1727,  1729,     0,   985,  1004,
     990,  1418,  1417,     0,  1371,     0,  1373,  1370,  1369,  1368,
       0,  1417,  2574,  2582,  2586,     0,  1506,  2484,  2482,   563,
    1636,  1636,     0,  1940,     0,     0,     0,     0,     0,     0,
       0,   173,   182,     0,     0,   386,   387,  1636,   385,   432,
     433,   436,   437,   438,     0,     0,     0,     0,     0,     0,
       0,     0,   126,   439,  1636,  1636,   382,   410,   411,   414,
     415,   416,   417,   418,   378,     0,   383,   970,   970,     0,
    1636,  1636,   970,  1636,     0,     0,  1636,  1636,     0,     0,
    1636,     0,     0,   970,     0,  1636,     0,   968,     0,     0,
    1636,  1636,  1636,  1636,   970,     0,     0,  1636,   477,  1636,
       0,     0,   980,     0,     0,  1636,     0,     0,  1636,     0,
    1636,   915,   967,   575,   595,   596,   880,   914,   916,   928,
     473,     0,   946,   969,     0,   901,   903,  2534,  2535,  2536,
    1062,  1054,  1061,  1058,  1073,  1071,  1060,   832,   831,     0,
    1074,   191,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1584,  1039,  1033,
     118,   772,  1636,  1636,  1636,  1636,   384,   420,   421,   424,
     425,   426,   427,   430,   428,   429,     0,     0,   396,     0,
       0,  2428,     0,  2562,     0,     0,     0,   171,   573,     0,
       0,   844,     0,     0,     0,     0,     0,  1662,     0,  1924,
    1669,  1400,  1673,  1672,     0,  1263,     0,  1308,     0,  1310,
    1311,  1312,     0,     0,     0,     0,     0,  1264,     0,  1214,
    1265,  1266,     0,     0,     0,     0,  1314,     0,   720,     0,
       0,  1217,  1218,  1211,  1203,     0,  1287,     0,     0,  1219,
       0,     0,     0,     0,     0,  1288,  1359,     0,  1361,  1914,
       0,  1320,  1269,  1224,     0,  1318,     0,  1225,  1289,  1290,
    1291,  1271,  1272,     0,  1293,     0,  1273,     0,     0,  1276,
       0,     0,  1227,  1324,  1322,     0,     0,     0,     0,  1326,
    1229,     0,     0,     0,  1228,     0,     0,     0,     0,     0,
       0,     0,  1231,     0,  1212,  1323,  1325,  1279,     0,     0,
       0,     0,     0,  1240,     0,  2488,  1408,  2496,  1409,     0,
       0,  2490,  2480,  2485,  2493,  1204,     0,     0,     0,     0,
       0,  1915,  1129,  1134,  1127,  1131,  2494,     0,     0,     0,
       0,  1148,  1147,     0,     0,     0,  2494,  1485,  1151,     0,
       0,  1304,  1305,  1354,     0,  1572,  1570,  1598,  1634,  1635,
    1637,     0,  2426,   976,   975,  1577,   974,    74,     0,  1792,
    1808,  1787,     0,   269,   278,   271,   275,   276,   272,  2438,
       0,  2437,     0,  2421,  2424,  1921,     0,     0,     0,  2356,
    2350,  2357,  2359,  2353,  2358,  2360,  2351,  2352,  2347,  2354,
    1479,  1508,     0,  1064,  1066,  1067,  1065,  1073,     0,     0,
    2336,  2337,  2335,  2334,   490,     0,  1542,  1543,  1528,  1529,
    1527,  1530,   499,  1531,  1541,     0,   511,     0,   490,  1823,
    1822,     0,  1048,  1051,  1052,  1023,  1022,  1024,  1017,  1019,
    1020,   555,  1619,     0,     0,     0,  1625,  1606,  1616,     0,
       0,   247,     0,     0,     0,     0,     0,     0,  1108,  1400,
    1558,  1105,  1093,  1508,  1498,  1092,  1115,  1111,     0,  2287,
       0,  2253,  2314,     0,     0,     0,     0,     0,  2304,  1761,
       0,  1712,     0,  1734,     0,     0,  1705,     0,  1726,  1686,
    1714,  1704,  1478,  1754,  1701,  1702,  1009,  1008,   992,  1003,
    1417,  1400,     0,     0,  1394,  1419,     0,  1419,  1400,  1400,
       0,  1400,  1397,  1414,     0,     0,  2585,  1499,  2483,     0,
       0,   883,   176,   179,   177,     0,   178,     0,     0,   441,
     440,     0,  1752,   434,   130,   129,   131,   132,  1525,  1526,
    1522,  1523,  1521,  1524,   134,   133,   128,   898,     0,     0,
       0,  1752,   412,   389,   390,   393,   394,   395,   971,   873,
    1042,   950,     0,   641,   873,   828,   833,   833,   948,     0,
    1042,     0,     0,     0,     0,     0,  1042,     0,     0,     0,
    1636,     0,   961,   910,     0,     0,     0,     0,     0,   962,
       0,     0,   911,  1636,     0,     0,     0,     0,     0,  1042,
       0,     0,   475,     0,  1042,   477,   983,   982,   981,     0,
    1042,  1042,     0,   601,   602,   600,     0,     0,   593,   576,
     772,   912,   474,   913,   640,     0,   977,   637,   643,  1917,
       0,     0,     0,   140,  2538,     0,  1438,   194,   101,    82,
      86,    88,    81,   105,  1535,  1536,  1534,  1532,  1533,   106,
      84,    85,    87,    91,    90,    92,    93,    96,    97,    94,
      89,    95,    83,    98,   107,   108,    80,     0,     0,     0,
       0,  1752,   422,     0,     0,  1636,   379,   397,   398,   401,
     402,   403,   404,   405,   408,   406,   407,     0,  2429,  2431,
       0,     0,   373,   372,     0,   135,  2556,     0,     0,   640,
     110,   473,   574,   577,   866,   868,   867,   858,   857,   111,
     113,   115,  1588,  1672,  1400,  1478,  1922,  1478,     0,  1671,
       0,     0,  1309,  1342,     0,  1365,     0,  1208,   732,   732,
     716,  1350,   712,   732,  1346,   716,  1348,     0,   758,     0,
     757,     0,     0,     0,  1316,  1313,     0,     0,     0,     0,
    1339,     0,     0,     0,  1213,     0,  1299,  1321,  1319,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1327,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   794,   800,   803,   804,   806,
     798,     0,  1281,  1201,  1113,  2497,  2499,  1084,     0,  2489,
    2491,  2300,  2301,  2302,   875,  1332,     0,  1145,  1141,     0,
    1139,  1484,  1160,  1159,     0,     0,     0,  1149,  1114,  1295,
    1113,     0,  1355,  1916,   455,   607,  1568,    72,  1790,     0,
       0,  2435,     0,  2446,     0,     0,     0,     0,     0,     0,
       0,  2345,  1509,  1646,     0,  1073,  1077,  1931,  1830,  2338,
    2339,     0,   491,   492,   494,  1114,   508,   488,     0,   480,
     483,     0,     0,  1021,  1098,     0,  1638,  1623,  1630,  1624,
       0,     0,     0,  1622,  1906,  1905,  1912,  2472,     0,  1444,
       0,     0,  2366,     0,     0,     0,  2475,  1478,  1478,  1552,
       0,     0,  1090,  1095,  1091,  1094,     0,  1112,  1119,  1118,
    1907,  1914,     0,     0,     0,     0,   760,   759,   768,     0,
       0,     0,  2299,     0,   764,   766,   765,  2309,   763,  1763,
    1506,  1722,  1721,  1513,  1512,  1697,  1506,  1716,  1764,     0,
       0,   986,   994,     0,  2479,  1412,     0,  1396,  1395,  1420,
       0,  1400,  1419,  1419,     0,  1376,  1375,  1650,  1653,     0,
    1374,  1471,  1402,  1098,  2575,  2587,     0,   771,   770,   606,
     767,   605,   181,   180,   186,   187,   459,   447,   458,   435,
     127,   448,   449,   413,     0,   391,   642,   874,   933,     0,
       0,     0,   833,   636,   873,   842,   834,   873,   873,     0,
       0,   586,   583,   952,   589,   931,   922,   932,   943,   945,
       0,   585,   603,     0,     0,   591,   873,   917,   959,   960,
     974,   580,     0,     0,   616,   617,   615,   597,   604,   581,
     582,   954,     0,  1493,  1495,  1503,   588,   587,     0,   584,
       0,   930,   965,   938,     0,   614,   612,   609,   611,   610,
     613,   592,   590,   927,     0,   970,   970,   947,     0,   624,
     625,   627,   628,  1920,     0,   979,   949,     0,   629,   638,
     630,     0,     0,     0,   150,     0,     0,   900,     0,   143,
     141,   152,     0,     0,     0,  1441,     0,  1442,  1439,  1440,
       0,   102,   104,   454,   453,   452,   451,   423,     0,     0,
       0,  1752,   399,  2430,     0,     0,  2563,   376,   374,   375,
       0,     0,   196,   622,   623,   621,   620,     0,   462,     0,
     460,     0,   472,     0,  1841,   772,   578,     0,     0,     0,
       0,  1478,  1497,  1925,  1665,     0,  1241,  1366,     0,     0,
     733,  1343,   780,     0,  1352,     0,  1353,   714,   713,  1345,
    1347,  1351,  1349,  1207,  1215,  1286,  1210,  1209,     0,     0,
       0,  1247,  1248,  1337,  1340,     0,     0,  1221,     0,  1223,
       0,     0,  1301,  1270,  1292,  1250,  1274,     0,  1226,  1202,
       0,  1251,     0,  1256,  1254,     0,  1230,     0,     0,  1237,
       0,  1235,     0,  1236,     0,  1238,  1278,  1280,     0,     0,
     805,   791,   792,   793,     0,   795,   797,   799,     0,     0,
    1410,  2498,  1085,     0,     0,  1334,  1137,     0,  1146,  1143,
       0,  1140,  1115,  1306,  1296,     0,  1788,   286,   281,   289,
     283,   285,   284,   290,   291,   292,   293,   287,   282,   288,
     280,   279,  2436,     0,  2371,  2423,  2422,  2439,  2439,  2439,
       0,  1480,     0,  1603,  1068,  1073,  1077,     0,  1069,  1841,
     495,     0,     0,     0,   515,     0,   513,   481,  1049,  1113,
    1620,  1632,     0,  1640,     0,     0,  1617,  1627,     0,     0,
       0,  1626,   477,     0,   248,     0,  2363,  2364,  2362,  1508,
    1486,     0,     0,  1564,     0,  1559,  1106,     0,  1117,  1116,
       0,  2316,     0,  2315,  2327,  2328,  2325,  2326,  2324,  2305,
       0,  2311,  2310,     0,     0,     0,  2321,  2312,     0,     0,
    1713,  1715,  1709,  1010,     0,     0,   996,  2485,  1471,  1404,
    1400,  1372,  1400,  1383,     0,     0,  1400,  1379,  1377,  1381,
       0,  1478,     0,  1436,  1113,  1909,  1500,  1503,   392,   935,
       0,   873,   829,   830,   842,     0,   842,   842,     0,     0,
     921,     0,  1030,     0,   926,   768,   598,   958,   957,     0,
     599,     0,   919,     0,  1504,  1505,  1496,   476,   918,   940,
     924,  1807,   951,   640,   978,   810,   708,   657,   648,   732,
     651,   650,   694,   716,   662,   712,   710,   680,   712,   712,
     687,   686,   704,   690,   670,   780,   780,   669,   707,   780,
     691,   689,   693,     0,   695,   712,   700,   688,   692,   709,
     685,   682,   706,   732,   716,   716,   666,   705,   780,     0,
     698,   732,   736,   668,   780,   787,     0,     0,   732,   734,
    1919,   151,   139,     0,     0,   902,   904,     0,     0,   905,
    2540,     0,  2542,     0,  1076,     0,    99,     0,     0,   381,
     450,   400,  2432,     0,   207,  1113,     0,     0,   197,   199,
     200,     0,     0,     0,   573,  1843,  1842,   461,   558,   579,
       0,     0,     0,  1672,  1667,  1519,     0,  1367,     0,     0,
       0,     0,   774,   785,   783,   777,     0,   781,   782,  1344,
       0,     0,  1317,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1205,     0,  1297,     0,     0,     0,     0,     0,
       0,  1234,  1232,  1233,   789,  1283,     0,   802,   796,   794,
     801,     0,  1508,  2479,   876,  1142,     0,  1307,     0,     0,
       0,  2444,  2444,  2444,  1645,  1644,     0,  1643,  1647,  1070,
    1078,     0,   493,   496,     0,     0,     0,   512,     0,   556,
       0,     0,     0,  1641,  1629,  2476,  1618,  1621,  1914,  1399,
    1445,  2365,  1097,     0,  1481,  1563,  1560,     0,  1553,  1555,
    1557,     0,  1908,     0,     0,  2320,  2306,   769,     0,     0,
       0,     0,  2307,   993,     0,     0,   998,  1405,  1403,  1413,
       0,  1368,  1400,  1400,     0,  1368,     0,     0,     0,  1652,
    1497,  1654,  1401,  1433,  1415,     0,  1502,     0,     0,   934,
       0,     0,     0,     0,     0,     0,   964,     0,   977,   923,
     944,   966,     0,   736,  1042,  1494,   939,   941,  1018,     0,
     626,     0,   814,   656,   649,   667,   665,   721,   711,     0,
     721,   721,   676,   694,   671,     0,   780,   684,   675,   696,
     699,   701,   703,   721,     0,   780,   664,   663,   673,   660,
     721,   744,     0,     0,     0,   740,     0,   808,     0,   747,
     644,   737,   739,     0,     0,   697,   780,   653,   788,   787,
     655,   780,   787,   721,     0,   735,   721,     0,   137,   142,
     153,   154,   893,  2539,     0,  2537,     0,  1072,  1443,   103,
       0,     0,   210,   208,   209,     0,   203,   205,   200,  2550,
       0,  2557,     0,     0,  2555,   463,   465,   473,   559,     0,
       0,  1503,   871,     0,     0,     0,  1663,  1242,   730,   728,
     731,   729,   776,   775,   779,     0,   778,   787,   717,     0,
    1245,  1246,  1338,  1329,  1268,     0,  1222,  1298,     0,     0,
    1275,  1252,  1255,  1253,  1258,  1259,     0,  1282,     0,  1105,
    1105,   618,  2492,  1144,  1791,  2447,     0,     0,  2443,  2441,
       0,  2442,  2440,  2414,     0,  2369,  2370,  2368,  2355,     0,
       0,     0,  1113,   501,     0,   518,   517,   514,  1508,  1631,
    1633,  1639,  1628,     0,  1482,  1497,   761,  1556,     0,  1107,
    2318,  2317,  2319,  2313,     0,     0,     0,   995,     0,     0,
     991,     0,  1384,     0,  1388,  1393,  1389,     0,  1380,  1378,
       0,  1519,  1437,     0,  1508,  1503,   937,     0,   639,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   963,
    1884,   953,   477,   955,   920,     0,   925,   594,     0,   813,
       0,   818,   725,   726,   727,   677,   722,   724,     0,   679,
     647,   672,   702,   678,     0,   674,   661,   750,   749,   753,
     742,   754,     0,     0,   748,   738,   746,   741,   652,   654,
     658,   659,   645,     0,   646,  1918,   144,   906,   313,  2541,
    1088,     0,  2546,   125,  2554,  2564,   207,     0,     0,   148,
       0,   198,   768,   201,  2476,  1841,     0,   468,   845,     0,
     870,     0,   847,   849,  1520,   786,   784,     0,     0,  1300,
    1302,   790,     0,  1411,   619,  2420,  2419,  2418,  2415,     0,
       0,     0,     0,     0,     0,  2445,  2449,  1642,     0,     0,
       0,   509,     0,   505,   507,     0,   543,   557,  1490,  1503,
       0,  1508,     0,  1561,  1554,  2323,  2322,  2308,   997,     0,
    1406,     0,     0,     0,     0,     0,  1651,  1425,  1426,     0,
       0,  1431,  1435,  1416,  1501,   936,     0,     0,   845,     0,
       0,  1886,  1885,   929,   977,     0,   811,     0,   815,   816,
     817,     0,   809,   723,     0,   877,     0,   743,   745,     0,
     146,   339,     0,   325,   311,     0,     0,     0,   315,   155,
     158,   156,     0,   157,   163,     0,   164,   165,   166,   167,
     168,   159,   337,   338,   162,   160,   161,     0,  1934,     0,
    1935,  2544,     0,     0,  2543,   174,   204,     0,     0,   140,
     149,  2558,   751,   466,   464,     0,  2472,     0,  1636,   112,
     846,   862,   861,   851,  1503,     0,     0,   114,   848,   864,
     855,   116,   850,   863,   853,   715,  1220,  1284,  2416,  2450,
    2453,  2451,  2452,  2454,  2448,     0,  1397,  1114,     0,   502,
     503,     0,   521,     0,  1636,     0,     0,  1636,  1636,  1636,
    1636,   536,   544,   546,     0,  1491,  1492,     0,  1487,  1489,
    1483,  1544,   762,  1844,   999,  2479,  1385,     0,  1390,     0,
    1382,  1421,  1421,  1432,     0,   845,   631,   847,   849,   956,
       0,   812,     0,     0,   780,     0,   780,   145,     0,   138,
       0,     0,   324,   327,     0,     0,   330,   320,   319,   321,
       0,   314,   313,   313,   367,   318,   364,   363,   356,  2476,
       0,     0,     0,  2565,   206,  1113,   152,     0,   470,   469,
     860,     0,   852,   869,   872,     0,   856,   854,  1648,  1656,
       0,  1831,     0,   510,   509,   506,     0,   519,     0,  1636,
    1636,     0,     0,     0,     0,     0,   516,   545,  1636,  1503,
       0,  1096,     0,  1852,  1407,     0,     0,     0,  1429,  1427,
     635,   634,   632,   633,     0,   824,     0,   823,     0,   820,
     819,   681,   878,   683,   147,   340,   351,   354,   346,   326,
       0,     0,     0,   316,   313,     0,   300,   298,   299,   305,
     306,   307,   308,   309,   310,   301,   304,   302,   303,   313,
       0,   215,     0,     0,  2545,     0,  2547,     0,   184,   183,
     175,     0,   313,  2551,     0,  2559,  2476,   859,   865,     0,
       0,   761,   497,   504,   529,   522,   525,     0,   554,     0,
       0,  1539,  1537,  1538,   550,  1540,   551,   549,   547,   540,
       0,   538,     0,  1488,  1545,     0,     0,     0,     0,  1845,
    1847,     0,  1562,  1387,  1392,     0,  1422,     0,     0,     0,
     942,   826,   827,   825,     0,     0,     0,     0,   313,   347,
       0,   322,     0,     0,     0,     0,   213,   370,     0,   211,
     358,   358,  2548,  2549,   185,  2566,     0,   154,   174,   471,
    1655,  1657,  1832,   529,     0,   527,     0,   523,   520,   524,
     552,   553,     0,   537,     0,   548,     0,     0,     0,     0,
       0,  1846,     0,     0,  1853,  1855,  1424,  1423,  1438,     0,
       0,     0,   348,   354,   344,   352,   313,     0,     0,   312,
     331,   366,   214,     0,   368,     0,   313,     0,   357,   359,
     361,     0,   136,  2560,  1858,   526,     0,   534,   530,   532,
     535,   543,   542,   539,  1113,  1850,  1851,     0,  1848,     0,
       0,  1854,     0,     0,   822,   821,     0,   345,     0,     0,
     343,   323,   328,   313,     0,   313,   226,   225,     0,   217,
     294,   365,     0,   216,  2552,   313,     0,  1844,   528,     0,
       0,   541,     0,     0,  1548,  1550,  1849,  1857,  1856,  1430,
    1428,   349,     0,   313,     0,   313,     0,   313,     0,     0,
       0,     0,     0,   212,   313,  2561,     0,  1852,   533,   531,
    1114,  1546,  1113,     0,   341,   313,   329,   334,   371,     0,
     220,   295,   296,     0,   223,  2553,     0,  1860,  1551,  1549,
     313,   313,   330,   333,   369,     0,     0,   218,   219,   231,
     230,   222,     0,  1859,     0,  1864,   313,   313,   335,   239,
     237,   313,   227,   235,   229,     0,   236,   297,   224,     0,
       0,  1871,     0,   221,   238,  1862,  1863,  1861,  1866,     0,
       0,  1868,  1869,     0,  1833,   228,  1870,  1865,     0,  1872,
    1874,     0,  1867,     0,  1113,  1873,     0,  1114,  1875
};

/* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
      -1,    56,   588,  1406,    57,    58,    59,    60,    61,  1277,
      62,   792,  1209,  1702,  1703,    63,   530,    64,   988,  1473,
    1474,  2930,  2931,  1475,    65,  2048,  2967,  2968,  2969,  1492,
     498,   499,  1901,  1902,  1013,  2951,  2917,  3736,  2921,  3850,
    3979,  3889,  1975,  3289,  3737,  3738,  3859,   525,  2046,  1425,
    4003,  1881,  4100,  1882,    66,   618,   986,  1447,  1448,  3307,
    3308,  3563,  3309,  3555,  3556,  3557,  3558,  4226,  4074,  4169,
    4227,  4300,  4335,  4341,  4342,  4268,  4351,  4352,  4353,  4339,
     860,  4354,    67,   553,   554,   862,  1307,  1716,  1308,    68,
      69,   524,  1229,  1230,  1231,  1232,  2228,  1717,  2223,  2224,
    3080,  4269,  4337,  4075,  4076,  3986,  4077,  3862,  4078,  3990,
    4079,  3865,  4080,  4081,  4082,  4083,  4218,  4084,  3985,  4261,
    4071,  4072,  4263,  4317,  4333,  4085,  3872,  3980,  4156,  3873,
    3981,  4213,  4067,  4214,  4256,  4313,  4068,  4157,  4259,  4160,
    4086,  4092,  4228,  4087,  4093,  4088,  3877,  3997,  4091,  3995,
    4090,  4265,  4223,  2544,  2950,   606,   607,   629,  2038,   608,
    1002,   961,  1427,  1914,  1915,  2403,  2404,  2526,  2527,  2528,
    1906,  1907,  1908,  2026,  2027,  2028,  1888,  1889,  1890,  1431,
    1885,  1886,   609,   962,   972,  1909,  1910,  1911,  2532,  2030,
    2031,  2032,  2033,  1197,  1198,  2817,  2550,  2960,  3754,  3317,
    3896,  4106,  2961,  2962,  2472,  2878,  1985,    70,   542,   840,
    1274,  2277,  1275,  2701,  2702,  2703,  1752,  1753,  3633,  1757,
    2276,  3791,  4024,  3792,  3793,  2705,  3929,  2709,  3105,  3106,
    3396,  3635,  3796,  4117,  4026,  4188,  4115,  4184,  4116,  4186,
    4280,  4238,  4239,  4036,  4130,  4131,  4192,  4241,  3941,  3942,
    3943,  2296,  2714,  3638,  3569,  2020,  1417,  1418,   500,   501,
     502,   626,  2551,  1962,  2552,  2553,  2894,  1964,  1965,  2674,
    1341,  2891,  2867,  3609,  2957,  2898,  2899,  2900,  2901,  2902,
    2908,  2833,  2412,  2413,  2477,  2911,  3752,  3489,  3504,  3273,
    3274,  3275,  3276,  3277,  3278,  3279,  2986,  2987,  2984,  1061,
    3705,  3706,  3707,  2980,  2981,  3536,  3520,  3521,  3522,  3753,
     755,  3720,  3336,  2757,  2758,  3803,  2766,  2767,  2808,  3151,
    2809,  1421,  3337,  3338,  3339,  3530,  3039,  3606,  3045,  3046,
    3047,  2635,  2636,  2637,  2638,  2639,  2162,  3523,  2910,  3482,
    3698,  3701,  3842,  4059,  2414,  2834,  2415,  2837,   919,   503,
    2416,  2417,  1506,  1507,  3899,  3907,  3911,  3900,  3912,  3908,
    3901,  3902,  3903,  3914,  3910,  2557,  3570,  3571,  2826,  3055,
    3844,    71,  1435,   955,   964,   960,   978,   613,  1436,  1976,
    2483,  3542,   596,  1966,  3474,  3202,  3478,  1967,  2846,  1968,
    3189,  3459,  1969,  3219,  3476,  3695,  2847,  2848,  1970,  1971,
    1972,  3201,  3211,  3834,  2418,   124,  2215,  2906,  2459,    72,
    1384,  2348,    73,   929,  2781,  2782,  3166,  3436,  3660,   926,
     927,  1387,  1388,  1848,  2347,    74,   621,  1479,    75,  1285,
    2288,  2289,  2290,    76,   979,    77,    78,   622,  1486,  1487,
    1488,    79,  1270,   131,    80,   848,  1280,  1282,  1283,    81,
     617,   980,   981,   982,   983,  1981,    82,  1744,  2253,  2254,
    2255,  2256,  1444,  2485,  1445,  1446,  1990,  3098,    83,    84,
     585,  2170,   559,   869,   560,   561,  1789,  2311,  3610,   880,
     881,   882,  2742,  1319,  1320,  1321,  2316,  2747,  1058,   756,
     757,   758,   759,  1151,  1152,  3524,   760,  1161,  1663,   761,
     762,   763,   764,   765,   766,  1690,  3011,  3012,  3354,  2200,
    2201,  2202,   767,  2085,  2998,  2098,   768,  1144,  1648,  1579,
    3346,  3003,  1523,  2068,  2587,  2671,  2164,  1082,  1083,  1048,
    2075,  1529,  1854,  1855,  1856,  1857,  1858,  3447,  3446,  3448,
    3811,  3663,  3813,  3667,  2359,  1772,  1773,  1859,  1860,  2783,
    3661,  3955,  2165,  2166,  2167,  3372,  2784,  3170,  2802,  2803,
    3674,  2350,  1861,  2790,  4048,  3820,  3821,  4149,  4148,  3822,
    3672,  3673,  3452,  3453,  2926,  2927,  2928,  2728,  1570,  1571,
    1577,  1257,  1258,  1524,  2251,  2690,  3645,  3800,  2191,  3414,
    3798,  3948,  1973,  2873,  2874,  2313,  2314,  2806,  3186,  3216,
    1344,  3611,  2692,  1821,  1822,  3576,  4340,  2818,  2499,  4124,
    2273,  2274,  4041,  4196,  4283,  4284,  4285,  3133,  3134,  3418,
    3419,  2315,  2739,  3135,  3646,  3953,    85,   507,    86,  1700,
    2206,  1206,  2220,   990,  1287,  1510,  1511,   780,   520,  1199,
    1200,  1201,    87,   531,  2252,    88,   549,  1770,   832,   852,
    1288,  1289,  2297,  2715,  2722,  2298,  2727,  3405,  2717,  3110,
    3111,  2210,  2211,  2718,  3113,  3402,  3386,  3387,  3093,  3630,
      89,   573,  3181,  2797,  2798,  4018,  4019,   853,    90,   506,
    1035,  2565,  1516,  2056,  1036,  1037,  2059,   647,   648,    91,
     931,   570,  1366,  1367,  1368,  1837,    92,   564,   920,  2770,
    2776,  1816,   844,  1202,  1348,   923,  1349,  1802,  2331,  1330,
      93,   951,   950,  1412,    94,   592,  1413,    95,   793,  1223,
    1712,  2678,  3066,  1224,  1225,  2221,    96,   550,   857,   858,
    1292,  1775,    97,   544,   845,  1763,    98,   535,    99,   100,
     836,  3099,  4111,  4234,   539,  1746,  1266,  3318,  4043,  4139,
    4140,  4142,  4204,  4205,  4277,  4345,  4367,  4361,  4370,  4371,
    4374,  4379,  4380,   770,   938,   771,  3689,   772,   773,   774,
    2723,  2724,  3187,   775,  2725,   776,  2827,   991,  1513,   528,
     478,   603,   939,  2698,   778,  3879,   958,  1006,   480,   481,
     101,   884,   563,  1323,  1324,  1325,  1797,  1798,   924,  2179,
    1799,  1800,  2328,  2323,  3426,  3157,  3149,   102,   837,   485,
    1268,  1269,  2262,   103,   572,   104,  1259,  1740,  1741,  2248,
    2689,  2249,   105,   865,   106,   819,  1734,   820,  1235,   821,
     822,  1249,  1243,  1252,  1246,  3779,  3622,  3623,  2236,  1205,
    1007,  1008,  1726,  2230,  2231,  3381,  3625,  3084,  3785,  3786,
     107,   132,   488,   624,   997,  1313,   108,   109,   110,   111,
    1316,  1401,  2307,  1402,  2171,  1403,  1404,  1868,  1787,  1644,
    1645,  3053,  1141,  1142,  2174,  2644,  2645,   883,   633,  1023,
    1015,   125,   126,   127,   636,   637,   128,   976,   977,  2484,
    2923,  3291,  3545,  3546,  3742,  3884,  1017,  3748,  4176,  4304,
    1018,  1019,  2952,  3750,  4007,  4178,  4275,  1020,  2541,  3304,
    3885,  4102,   112,   940,   582,  1399,  1394,  1396,  1864,  2366,
     113,   114
};

/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
   STATE-NUM.  */
#define YYPACT_NINF -3515
static const int yypact[] =
{
    4893,  2367,  1145, -3515,  -139,   188, 44130,   108,  1387,  1387,
     277,  3135, -3515, -3515, -3515, -3515, -3515,  2988, -3515, 44130,
    1145,   884, -3515, 23064, -3515, -3515,   644,   186,   135,  1387,
    1145, -3515, 44130, -3515,   680,  1526,  1145, -3515, -3515, 39322,
   -3515,   277, 44130, -3515,   752, -3515, 39322,  -135,   738,   719,
     982, -3515, -3515, 44130,  1690,   748,  1384,  1307, -3515, -3515,
    1031, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515,
   -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515,
   -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515,
   -3515, -3515, -3515, -3515, 23669, -3515, -3515, -3515, -3515, -3515,
   -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515,
   -3515, -3515, -3515, -3515, -3515,  1253, 44130,  1337, 44130, -3515,
    1320, 44130, 37519, 44130,  1068,  1537, -3515, -3515,  1590, -3515,
   -3515,  1387,   277, -3515, -3515, -3515, -3515, -3515, -3515, -3515,
   -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515,
   -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515,
   -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515,
   -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515,
   -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515,
   -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515,
   -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515,
   -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515,
   -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515,
   -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515,
   -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515,
   -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515,
   -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515,
   -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515,
   -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515,
   -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515,
   -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515,
   -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515,
   -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515,
   -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515,
   -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515,
   -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515,
   -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515,
   -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515,
   -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515,
   -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515,
   -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515,
   -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515,
   -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515,
   -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515,
   -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515,
   -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515,
   -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515,
   -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515,  1103,
   -3515, -3515,  1197, -3515, -3515, -3515, -3515, -3515,  1738,  1552,
   -3515,  1583, 37519, -3515, 44130, -3515, -3515, -3515,   850, -3515,
    1267, -3515,  1278,  1633,  1652,  1658,   805, 10786,  1665,  1665,
    1665, 44130,  1687,  1665,  1665, 44130, -3515,  1665, -3515,  1665,
    1387, -3515, -3515, -3515,  1814,  3550, 44130,  1555,   166,   -86,
   37519,  1365, 44130, -3515, -3515, 10786, -3515,  1716, -3515, -3515,
   -3515,  1387,  1913,  1797,   870, 44130, -3515, -3515,  1387,   844,
      42,  1391, -3515, -3515,  1533, -3515,  4774,   169, -3515, -3515,
   -3515,  1170, -3515, -3515,  4085,  1533, -3515,  1417, -3515, -3515,
   -3515, 44130,  1387,  1780, -3515, -3515,   264,   264,   264, -3515,
     264, -3515,   264, -3515,   748,  1451, -3515, -3515,  1455, 44130,
     969,  1152, -3515, -3515,  1447,   601, -3515,  1504, 34514, -3515,
   44130, -3515, -3515, -3515, -3515,  1718, -3515, -3515, -3515,  1813,
   -3515, 23064, 44130,  1584, -3515, -3515, -3515, 23064,  1467, 44130,
   -3515, 23064, 23064,   182,    14,   754, 44130, 44130,  1907, -3515,
    2081, 34514,  1664, -3515,   327,  1042,  1590,  2089, -3515,  1552,
   -3515, 44130, 44130, 44130, -3515, -3515, -3515, 39923,   805,  1484,
    1487,  1496, 15140, -3515,  1514,  1518,  1521, 10786,  1528,  1532,
    1535,  1544,  1559,  1567,  1597,  1602,  1616,  1616,  1629,  1631,
    1639,  1642,  1163,  1648, -3515,  1651,  1653,  1655, -3515, -3515,
    1668,  1674,  1676, -3515,  1678,  1681,  1689, 11408,  1723,  1733,
   -3515, 20035,  1741,  1743,  1759,  1762,  1765,  1767,  1772,  1777,
    1782, -3515, -3515, 10786,  1629, -3515, -3515,  1788, -3515,  1792,
    1796,  1798,  1804,  1808,  1823,  1827,  1840,  1844,  1849,  1853,
    1870,  1875,  1883,  1885,  1893,  1900,  1629, -3515,  1223,  1908,
    1922,  1235,  1926, -3515,  1933, -3515,   341,  1937,  1616,  1629,
    1629,  1964,  1971,  1996,  1998,  2008,  2011, 15140, 15140, 15140,
   10786, -3515, 44130, -3515, 44130, -3515,  1190,  3137, -3515,  2463,
   15140,   227, -3515, -3515, -3515, -3515, -3515, -3515, -3515,  1554,
    1649, -3515, -3515, -3515, -3515, -3515, -3515,  2018,  1587,  2057,
   44130, 44130, 44130,  1924, 44130, 44130, 37519,    72, 44130, 34514,
   -3515,  1665,  1675,  2829, 27296,  1848,  1838,  1626, -3515, -3515,
   -3515, -3515, -3515,  2117, -3515, -3515,  1982, -3515,  1980, -3515,
   -3515,   120, -3515,   152, -3515, -3515, -3515, -3515, -3515, -3515,
    2054,  1972, -3515, -3515,   141, -3515, -3515, 44130, -3515, -3515,
   -3515, -3515,  2311,  2109,  1190,  2592,   202, 23064, -3515,  1155,
   -3515,  -158, -3515, -3515,  2374, -3515, -3515, 34514, 23064, -3515,
   -3515, -3515, 20640, -3515, -3515,  2598, -3515,  2029, -3515, -3515,
    1649,  3676, -3515,  1848,  2293, -3515,  2299,  2205,    14,  2123,
   -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515,
    2078,  1170, -3515, -3515, -3515, -3515,  2538, -3515,  2224,   266,
   -3515,  2090,  2173,   266, 35115,  2456,  1551, -3515,   282, -3515,
    2532, -3515, -3515, -3515, -3515,  2213,  2201, -3515, -3515,   289,
     397, -3515,  2572, -3515,    30, -3515,  2238,  2456,   266,  1551,
   -3515,  2478,  2597,   779,  -142, -3515, -3515,   -50,  2671, -3515,
   -3515, 23064, -3515, -3515,  2311, -3515, -3515, -3515,  2135, -3515,
    2414,  2257, -3515, -3515,   721, -3515,  2162,   869,  2636, -3515,
    1884, 35716, -3515, -3515, -3515,  2665,  2690,  1616,  2178, -3515,
   -3515, -3515,  2792, -3515, -3515,  2188,  2709,  2709,  2709,  2820,
   -3515, -3515, -3515, -3515, -3515,  2365,  2245, -3515,  1584, 23064,
    2603,  2221, -3515, -3515,  2467, 10786, -3515, -3515,  4405,    55,
   -3515, -3515,   125, -3515,  2793,  2426, -3515, -3515, -3515, -3515,
    2689, -3515, -3515,  2792,  2751,  2709,  2644,  2241, -3515, -3515,
   -3515, -3515, -3515, -3515,   225, -3515, -3515, -3515, -3515, -3515,
   -3515, -3515,   893, -3515, -3515, -3515, -3515, -3515,  1584, -3515,
   23064, -3515, -3515, -3515, 23064, -3515,  2249, -3515,  2251, -3515,
   10786, 10786,   329,  2813,  2873,  2873,  2873,  1190,  2295, 10786,
   10786, 10786, 10786, 10786, 10786, 10786,   386,  2267, -3515, -3515,
     -92, -3515,  2270, 10786, 10786, -3515, 10786, 10786, 24274, -3515,
    3998, 10786,   361,  2755, 10786, 10786, 10786, 10786,  3332, 10786,
   10786, 24274,  2884,  2275, -3515,  2271,  1399, 10786, 10786,  1512,
   10786, 10786, 10786, 10786, 10786, -3515, -3515, 10786, 10786, 10786,
   10786, 15140, 10786, 10786, 10786, 10786, 10786, 10786,  2277, 10786,
    2873,  2873, 10786, 10786,  1556, -3515, -3515, 10786,  2400,  2400,
   -3515, 10786,  7676, 10786, -3515, -3515, -3515,  2281, -3515, -3515,
   -3515, 24274,  2873,  2873, 10786, 10786, 10786,  2813,  2813,  2813,
     243,  2283,   886, 10786, 25484,  2278, -3515, -3515, -3515, -3515,
   10786, 10786, 10786, -3515, 15140, -3515, -3515,   797, -3515, -3515,
   -3515, 12030, 15140, 15140,  2287, 15140, 15140, 15140, 15140, 15140,
    2653, 15140, 15140, 15762, 16384, 15140, 15140, 15140, 15140,  1203,
    2813, 37519, 15140, 10786, -3515, -3515, 44130, -3515, -3515, -3515,
    2289, 23064,    72, -3515, -3515, -3515, -3515, -3515, -3515,  2297,
      72, -3515,  2760, -3515, -3515,  2300, 23064, -3515,  2302, -3515,
    2655, -3515,  2656,  2661,  2669, -3515, -3515, -3515,  2886,  2672,
   -3515,  2673, -3515, -3515,  2320, -3515, -3515, 17006, 37519, -3515,
    2324, -3515,  2795, -3515, -3515, -3515, -3515, -3515, -3515,  2424,
   -3515, -3515, -3515,  2329, -3515, 34514,  2329, -3515, -3515,  2329,
   -3515, -3515,  2329,   711,  3054, -3515, -3515, 44130, -3515, 44731,
   -3515, 20640,  -139, -3515, -3515, -3515,  2696,   142,  2341, -3515,
   23064, -3515,    84,    84,  2582,   170, 37519, -3515, -3515,   149,
    2345,  2422,  2347, -3515,  2425, 23064, 23064, -3515, -3515, -3515,
    2591, -3515,  2961,    42, -3515, -3515, -3515, -3515, -3515, -3515,
   -3515, -3515, -3515, -3515, -3515, -3515, -3515,  2356,  2819,  2357,
   34514,   888, -3515, 44130, -3515,  1579, -3515, -3515, -3515,  2359,
   -3515, 10786, -3515,  2369, -3515,  1166,  2750, -3515,  -139, 10786,
   -3515,  2380,  1552, 44130, 44130, 44130, 23064, 44130, 23064, -3515,
     963,   963, -3515, 32711, -3515, -3515, -3515, -3515,   266, 44130,
   44130,   266, 34514, -3515,  1551, 44130,   266, -3515,  2759,  2465,
   -3515, -3515, -3515,  2822, -3515, -3515,  2814,  2382, -3515,  2750,
   -3515, -3515,  1551, -3515, -3515, 23064, -3515, -3515,  1551, -3515,
    1551,  1551,   266,   266,  2434, -3515, -3515,  2388, -3515,  2535,
   -3515,   672,   264,  2627, -3515, -3515, -3515, -3515, -3515, -3515,
   -3515, -3515, -3515, -3515,    74, -3515, -3515, -3515, -3515, -3515,
   -3515, -3515, -3515, -3515, -3515, -3515, -3515,    66, -3515, -3515,
   -3515,  2048,  2880, -3515, 37519,  1106,   553,   877,  1106,  2075,
    -139,  1309, -3515,  1309, -3515,  4585,  2658,   214, 23064, -3515,
    2402, 40524, 23064, -3515, -3515, -3515,  1605,  2406,  2408,  1190,
    2875,  2876,  2878,  2890,  2891,  2892,  2894,  2896,  2898,  2900,
    2913,  2914,  2916,  2925,  2927,  2930,  2933,  2938,  2939,  2945,
    2947,  2948,  2949,  2419, -3515, -3515, -3515, -3515, 23064, -3515,
   -3515, -3515, -3515,  2470, -3515, -3515, -3515, -3515,   217, -3515,
   -3515, -3515,   134,  2354,  2501,  2530,   119, 34514,  2918, 44130,
   44130,  1552, 44130, 44130, -3515, -3515,  1128,  2752,  2753,  2757,
    2489, -3515,  2591, -3515,   968, 44130,  2932, 29105, -3515,   308,
     441, -3515,  2873,  2504, -3515,  2505,  2506,  2507, 10786,    31,
    1430,   635,   858,  1407,  1050,   345,   304, -3515,  2508,  2516,
   -3515,  2512, -3515, -3515,   356,   458,  1056,  1098,  2513,  2514,
   -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515,
   -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515,
    2963, -3515,  1413, -3515, -3515, -3515, -3515,  2515, -3515, -3515,
    1113,   464,   478,   314,  2539,   485,  1489,  1524,  2529, 24274,
   44130,  2873,  2534,  1144,  1188,  2873,  2536,   487,  1192,  1538,
    1547,  1573,  1212,  1232,   521,  1576,  2527,  1251,   611,   615,
    1257,   651,   656, -3515,  1268,  2540,  2544,   737,   290,  2873,
    2545,   318,  2537,  2552,  1272,  8920,  9542, 10164,  1038,   807,
   -3515,  2546, -3515,  2271,  2554,  2557,   335,   191,  1276, -3515,
   10786, -3515, -3515,   917,   777,  2594,   180,  1248, -3515,  2700,
   44130,  2155,   146, -3515, -3515, -3515, -3515, -3515, -3515,  1479,
   -3515,  2560, -3515,  2562,  1863,  2566, 10786,   194,  2566,  2448,
    1323,  1323, 15140,  2994,  1595, 11408,   994, 11408,   994,  2566,
    2566,  2566, -3515, 15140,  2571, 15140, 15140, -3515,  2813,  1190,
    2565,  -230, 44130, -3515,  2297,   -97, -3515,   100, 34514,   137,
   23064, 37519,  2568, -3515, -3515, -3515, -3515, -3515, -3515, -3515,
   -3515,  3362, 23064,  2659,  2663,  2667, -3515, 27900, -3515, -3515,
   -3515, -3515, 27900,  1222, -3515, 44130, -3515,  2647, -3515, -3515,
   -3515, 21245, 21245, -3515, 21245, -3515, -3515,   231,   781,  3032,
    2600, -3515, -3515, -3515, 23064, -3515,  2975,   608, 23064,  2402,
    2583, -3515, -3515, -3515, -3515, -3515,  2528,  2686, -3515,  2586,
   -3515, 10786,  -139, -3515, 34514, 34514, 23064, 23064,    19, -3515,
    2327,  2587, -3515, -3515, -3515, -3515, -3515,  3676, 17006,  3009,
    3022, 21245, 21245, 21245, -3515, -3515, -3515, -3515, -3515,  1215,
    1190, -3515,  2588, -3515, -3515, -3515, -3515, 41125,   143, -3515,
   -3515,  -139,  3034, -3515,  1190,  2599, 44130, -3515, -3515, -3515,
   -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515,
   -3515, -3515,  -112, -3515, -3515, -3515, -3515, -3515, -3515, -3515,
     266, -3515, -3515, -3515, -3515, -3515,  2816,  2456,   397,  3034,
     266,  1551, 23064,   266,   266, -3515, -3515,  2115, -3515,   -50,
   -3515, -3515, -3515, 44130,  2574,  2754, -3515,  2606, -3515, -3515,
   23064, -3515,  2607, -3515,  3045,  3185,  2456, -3515, -3515, -3515,
     100,   100,  2899, -3515,  -139,  2737,  2738,  2741,  2742,  2745,
    2786, -3515, -3515,  -139,  -139, -3515, -3515,   100, -3515,  1303,
   -3515, -3515, -3515, -3515,  -139,  -139,  -139,  -139,  2551,  -139,
    -139,  1618, -3515, -3515,   100,   100, -3515,   319, -3515, -3515,
   -3515, -3515, -3515, -3515, -3515,  1233, -3515,  2634,  3179,  2874,
     100,   100,  3179,   100,  2882,  2893,   100,   100,  2708,  3134,
     100,  3026,  2746,  2573,  3031,   100,  2905, -3515,  2761,  3144,
     100,   100,   100,   100,  3179,  2909,  3231,   100, -3515,   100,
    2911,  2910,   193,  2915,  2917,   100,   911, 44130,   100,  2920,
     100, -3515, -3515,  5723, -3515, -3515, -3515, -3515, -3515, -3515,
    -116, 21852, -3515, -3515,   115, -3515,  2851, -3515, -3515, -3515,
   -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515,  2677,
   -3515, -3515, 10786,  2679,  -139,  2551,  2551,  -139,  -139,   916,
    -139,  2551,  2551,  -139,  -139,  -139,  -139,  -139,  -139,  -139,
    2551,  2551,  -139,  1670,  -139,  2551,  4405, -3515, -3515, -3515,
   -3515,   153,   100,   100,   100,   100, -3515,  1503, -3515, -3515,
   -3515, -3515, -3515, -3515, -3515, -3515, 37519,  3035,  2334,   637,
   37519, -3515, 44130, -3515,  1509, 44130,  2682,  -131,  2946,   847,
     847, -3515, 23064, 23064, 23064, 44130,  2726, -3515, 29105, -3515,
   -3515,   672, -3515,  2685, 12652, -3515,  2698, -3515, 10786, -3515,
   -3515, -3515,  1134, 10786, 10786,  3156,  2195, -3515, 36317, -3515,
   -3515, -3515, 10786, 36317,  2195, 10786, -3515,  2703, -3515,  3093,
    3095, -3515, -3515, -3515, -3515, 10786, -3515, 10786, 10786, -3515,
   10786, 10786, 10786, 10786, 10786, -3515, -3515, 15140, -3515,  2705,
    2710, -3515, -3515, -3515,  2713, -3515, 10786, -3515, -3515, -3515,
   -3515, -3515, -3515, 10786, -3515, 10786, -3515, 10786, 10786, -3515,
   10786, 10786, -3515, -3515, -3515, 13274, 10786, 10786,  2714, -3515,
   -3515, 10786, 10786, 10786, -3515, 10786,  1945, 10786,  1974, 10786,
    1978, 10786, -3515, 10786, -3515, -3515, -3515, -3515, 10786,  1731,
    2528,  2551,  2716, -3515,  1622, -3515, -3515,  1888, -3515,   917,
    2717, -3515, -3515,  1579, -3515, -3515,  2711,  2718,  2719, 37519,
   10786, -3515, -3515, -3515, -3515, -3515, -3515, 15140,   351,  2720,
   15140, -3515,  2448,  3332,  3332,  2009, 10786,   194,  2448, 10786,
    2721,  2723, -3515, 10786, 44130, -3515, -3515, -3515, -3515, -3515,
   -3515, 37519, -3515, -3515, -3515, -3515,   137, -3515,  2302, -3515,
    2402, -3515,  3195,  2732, -3515, -3515, -3515, -3515, -3515, -3515,
    1729, -3515, 34514,  2739, -3515,  2740,  2817,  2825,  2826, -3515,
   -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515,
   -3515,  2456,  2327, -3515,  2743, -3515, -3515,  2467,  2827,  2770,
    3113, -3515, -3515, -3515, 44130, 15140, -3515, -3515, -3515, -3515,
   -3515, -3515, -3515, -3515, -3515,  3333,  2764,  2771, 44130,  1190,
   -3515,  2834, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515,
     824, -3515, -3515,  2773,  2773, 18823, -3515, -3515, -3515, 44130,
    3233, -3515,  3029, 34514,  3211,  3213,  3214,   927, -3515,   660,
   -3515,  1194,  3169,  2456, -3515,  3216, 38120, -3515, 29706, -3515,
    2779,  3167,  2781,   100, 32110,   901, 26088, 33312, -3515, -3515,
     916, -3515,   244, -3515, 32711, 32711, -3515,  3056, -3515, -3515,
   -3515, -3515,  2600,  1551, -3515, -3515, -3515,  2790,  2839, -3515,
   -3515,   993,  3172,  3173, -3515,  3046,   747,  3046,   993,   993,
   24274,   672,  2591, -3515,  2551,  3102, -3515, -3515, -3515, 36918,
   33913, -3515, -3515, -3515, -3515,  3313, -3515,  3317,  1321, -3515,
   -3515,  2095,  1408, -3515, -3515, -3515, -3515, -3515, -3515, -3515,
   -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515,  2075,  2095,
    2095,   542, -3515,   129, -3515, -3515, -3515, -3515, -3515, 24879,
    1145, -3515,   270, -3515, 24879, -3515,  1605,  1605, -3515, 24879,
    1145,   916,  2551, 24879,  2551, 41726,  1145,  -139,  -139,  2307,
     100,  2551, -3515, -3515,  3180, 44130,  3182, 24879, 24879, -3515,
   37519, 44130, -3515,   100,   789,  2551,   916,   916, 24879,  1145,
   24274,  1709, -3515,  -139,  1145, -3515, -3515, -3515, -3515, 23064,
    1145,  1145,  2432, -3515, -3515, -3515,  2551, 41726, -3515, -3515,
    5655, -3515, -3515, -3515, 18218, 44130,   305,   196, -3515,  2798,
      37,  1207,  2887,  1540,  2810,  2823, 42327,  1190,  2551, -3515,
   -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515,
   -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515,
   -3515, -3515, -3515, -3515, -3515, -3515, -3515,  -139,  2528,  2095,
    2095,  2423, -3515,  3071,  3236,   100, -3515,  2222, -3515, -3515,
   -3515, -3515, -3515, -3515, -3515, -3515, -3515,  2903, -3515,  3419,
    3005,  2833, -3515, -3515,    75, -3515, -3515,   979, 23064, 17613,
   -3515,  3075, -3515,  2734, -3515, -3515, -3515, -3515, -3515, -3515,
   -3515, -3515, -3515,  2832,   672,  2600,  1342,  2600,  2846, -3515,
   11408,  1280, -3515,  1190, 10786,  1190,  1986, -3515,  2842,  2842,
    2843, -3515,  2844,  2842,  3232,  2843,  3237,  2845, -3515,  2854,
   -3515,  1284,  2859,  2860,  1554, -3515, 10786, 10786,  1324,  1336,
     -91,   821,   896,   390, -3515,  1344,  2976, -3515, -3515,  1377,
    1379,  1381,  1405,   920,  1437,  1749, 11408,  1459,   999,   429,
   -3515,  1469,   932,   943,  1491, 10786,  1564, 10786,  1581, 10786,
    1662,  1685,  1720,  2863,  2863,   162, -3515,  2866, -3515, -3515,
   -3515,  2867, -3515, -3515,  2078,  1888, -3515, -3515,  2870, -3515,
   -3515, -3515, -3515, -3515,  2865,  1190,  2877, -3515, -3515, 10786,
   -3515,   227, -3515, -3515, 15140,   439,  2879, -3515,  1190, -3515,
   -3515,  2881,  1554, -3515, -3515, -3515, -3515, -3515,  2897,  4084,
   27900, -3515, 44130,  -204,  2888, 30307, 34514, 34514, 34514,  2885,
   10786, -3515, -3515,  3136, 23064, -3515,  3274, -3515, -3515, -3515,
   -3515,  2889,  2901, -3515, -3515, -3515,  2448,  3238,  3120, -3515,
   -3515,  2895, 34514, -3515,  1170, 24274, -3515,  2902, -3515,  2902,
    1198,  2904,  1769, -3515, -3515, -3515,  2883,  2123,  1801, -3515,
   17006,  3318,  2241, 34514, 34514, 34514, -3515,  2600,  2600,   801,
    2935,  3272, -3515, -3515, -3515, -3515, 42928, -3515, -3515, -3515,
   -3515,  1214, 44130,  3256, 44130,  8298, -3515, -3515,  3444, 10786,
   34514,  1017,  1248,   100, -3515, -3515, -3515, -3515, -3515, -3515,
    2456, -3515, -3515, -3515, -3515, -3515,  2456, -3515,   266,  2115,
    3365, -3515,  3142,  -179,   777, -3515,  1869, -3515, -3515, -3515,
    3275,   993,  3046,  3046,  3283,  3168,   923,  2907, -3515,   100,
   -3515,  2066, -3515,  1170, -3515, -3515, 10786, -3515, -3515, -3515,
   -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515,
   -3515, -3515, -3515, -3515,  1233, -3515, -3515, -3515, -3515,  2919,
    3288,  3289,  1605, -3515, 24879, -3515, -3515, 24879, 24879,    83,
   41726, -3515, -3515, -3515, -3515, -3515, -3515,  2908, -3515, -3515,
    2528, -3515, -3515, 33913,  -139, -3515, 24879,  2908, -3515, -3515,
     456, -3515,  2943,  -139, -3515, -3515, -3515, -3515, -3515, -3515,
   -3515, -3515, 41726,  2926, -3515,   340, -3515, -3515,  1913, -3515,
   41726, -3515, -3515, -3515, 41726, -3515, -3515, -3515, -3515, -3515,
   -3515, -3515, -3515, -3515,  2929,  2556,   175, -3515,  2931,  2928,
   -3515, -3515, -3515, -3515, 44130, -3515, -3515, 23064, -3515, -3515,
   -3515,  3922, 44130,  3158, -3515, 10786, 10786,  3177, 44130,  3191,
   -3515,  3479, 44130,  3539, 41726, -3515,  2940, -3515,  2950, -3515,
    1820, -3515, -3515, -3515, -3515, -3515, -3515, -3515,  2942, 44130,
    2095,  1449, -3515, -3515,  -139,   979, -3515, -3515, -3515, -3515,
    3200,  3207, 44130, -3515, -3515, -3515, -3515,  3081, -3515, 23064,
   -3515,  3105, -3515,  2953,   177,  4067, -3515,  2956,  2957,  2959,
   29105,  2600,  3201, -3515, -3515,  3332, -3515,  1190, 10786,   769,
   -3515, -3515,   171,  3226, -3515,  1048, -3515, -3515, -3515, -3515,
   -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515,  2962,  3332,
    3332, -3515, -3515,  3116, -3515, 10786, 10786, -3515, 10786, -3515,
     909,  2964,  2986, -3515, -3515, -3515, -3515, 10786, -3515, -3515,
    3332, -3515, 10786, -3515, -3515, 10786, -3515, 10786, 10786, -3515,
    1751, -3515,  1768, -3515,  1786, -3515, -3515, -3515,  2528,  2965,
    3339, -3515, -3515, -3515,  2528,  3150, -3515, -3515,  2528,  2551,
    2359, -3515, -3515,   886, 44130, -3515, -3515,  1832, -3515, -3515,
   10786, -3515, 38120, -3515, -3515,  3186, -3515, -3515, -3515, -3515,
   -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515,
   -3515, -3515, -3515,  3400, -3515, -3515, -3515,  -155,  -155,  -155,
   13896,  1190,  3456, -3515, -3515, -3515,  3274,  3349, -3515,    27,
   -3515, 44130,  2982,  1273, -3515,  1836, -3515, -3515, -3515,  2078,
    2992, -3515,   100, 13896,  2773,  3105, -3515, -3515,  1198, 24274,
   29706, -3515, -3515, 44130, -3515, 34514,  2241,  2241,  2241,  2456,
    3414,  2827,  2827, -3515, 26692, -3515, -3515,  3143, -3515, -3515,
   30908, -3515,   -42, -3515, -3515, 15140,  1651, -3515,  1190, -3515,
   36918, -3515,  1190,   100,  2998,  2999, -3515, -3515, 43529, 10786,
   -3515, -3515, -3515, -3515,  -139,  3463,  3498,  1579,  2335, -3515,
     672, -3515,   993, -3515,  3378,  3379,   993, -3515, -3515, -3515,
   24274,  2600, 13896, -3515,  2078,  1190,  3002,   340, -3515,  -119,
   10786, 24879, -3515, -3515, -3515,  3007, -3515, -3515,  3507,  3509,
   -3515, 24879,   217, 44130, -3515,  3444, -3515, -3515, -3515,  3103,
   -3515,  3922, -3515, 24274, -3515, -3515, -3515, -3515, -3515, 44130,
   -3515, 23064, -3515, 18218, -3515,  3014, -3515,  2842,  2842,  2842,
   -3515, -3515, -3515,  2843, -3515,  2844,  3242, -3515,  2844,  2844,
   -3515, -3515, -3515, -3515, -3515,   171,   288, -3515, -3515,   171,
   -3515, -3515, -3515,    98,  1402,  2844, -3515, -3515, -3515, -3515,
   -3515, -3515, -3515,  2842,  2843,  2843, -3515, -3515,   171,  2842,
   -3515,  2842,  2967, -3515,   360,    88,  2842,  2842,  2842,  3017,
    3010, -3515,  1190,  3332,  3560, -3515, -3515,  3159,  -139,  3500,
   -3515,  1846, -3515,  3021, -3515, 42327, -3515,  2551,  2075, -3515,
   -3515, -3515, -3515,  3160,   861, -3515,  3184,  3024,  3028, -3515,
   -3515,  -139,  3027,  3033,  5723, -3515, -3515, -3515,  3635, -3515,
   44130, 44130, 44130,  2685, -3515,  3396,   631,  1190,  3036,  3037,
    3038,  3040,  3628,   207, -3515,  3630, 36317, -3515, -3515, -3515,
    3047,  1865, -3515,  3048,  3049,   264,  3050,  1799,   972,  1878,
    3348,  3431, -3515,  3276, -3515,  1806,  1285,  1886,  1890,  1909,
    1911, -3515, -3515, -3515, -3515, -3515,  3063, -3515, -3515,   336,
   -3515,  3064,  1427,   777, -3515, -3515,  1880, -3515,  3416,  3321,
    1029,  3090,  3090,  3090,  1651,  1190,  1901, -3515, -3515, -3515,
   -3515,  3455, -3515, -3515,  3072,  3073, 44130, -3515,  3120,  2359,
   24274, 13896,  3074,  3076, -3515,   869, -3515, -3515,  3066, -3515,
   -3515,  2241, -3515,  3649,  3493, -3515, -3515, 37519,  3082, -3515,
   -3515,  3381, -3515,   101,  3294, -3515, -3515, -3515,  1017,  3174,
    3176,   100,  1190, -3515,  -139,  3551,  3326, -3515, -3515,  2606,
    2533,  3129,   993,   993,  3446,  3138, 10786, 10786,  3099, -3515,
    3201, -3515, -3515,   906,  2359, 10786, -3515,  2528,  3120, -3515,
    1961,  3100,  3101, 44130,  3104,  3106, -3515,  2818,   305, -3515,
   -3515, -3515, 23064,  2967,  1145, -3515, -3515,  2908,   824,  3092,
   -3515, 44130,  3422, -3515, -3515, -3515, -3515,  1071, -3515,  3107,
    1071,  1071, -3515,  2224, -3515,  3127,   171, -3515, -3515,  3141,
   -3515, -3515, -3515,  1071,  3110,   171, -3515, -3515, -3515, -3515,
    1071, -3515, 37519,  -139,  2809, -3515,  3153, -3515,  3609,  3486,
   -3515,  2967, -3515,  3487,  3382, -3515,   171, -3515, -3515,  3701,
   -3515,   171,  3701,  1071,  3383, -3515,  1071, 44130, -3515, -3515,
   -3515, -3515, -3515, -3515, 44130, -3515,  1036, -3515, -3515, -3515,
    1904,  -139, -3515, -3515, -3515,  3118,  3124, -3515, -3515, -3515,
    1207, -3515, 44130,  3922, -3515, -3515, -3515,  3075, -3515,  1053,
    1934,   340,  3122,  1942,  1949, 32711, -3515, -3515, -3515, -3515,
   -3515, -3515, -3515, -3515, -3515, 36317, -3515,  3701, -3515,  3386,
   -3515, -3515, -3515, -3515, -3515, 10786, -3515, -3515,  3423,  3578,
   -3515, -3515, -3515, -3515, -3515, -3515,  3130, -3515,  2551,  1194,
    1194, -3515, -3515, -3515, -3515, -3515,  3217,  3219, -3515, -3515,
    3221, -3515, -3515,   139,  2570, -3515, -3515, -3515, -3515, 13896,
    3510,  3229, -3515, -3515, 44130,  3183, -3515, -3515,  1427, -3515,
   -3515, -3515, -3515, 10786, -3515,  3201,  2307, -3515, 26692, -3515,
   -3515, -3515, -3515, -3515,  3140,  3145,  8298, -3515,  -139,  3602,
   -3515,   886, -3515,  3189, -3515, -3515, -3515,  3190,  1190,  1190,
   44130,  3396, -3515,   951,  1427,   340, -3515,  1953, -3515, 44130,
   44130,  1984, 44130, 44130,  2659,  2663,  2667,  1670,  1670, -3515,
   -3515, -3515, -3515, -3515, -3515,  3536, -3515, -3515,  1987, -3515,
     796,  3411, -3515, -3515, -3515, -3515,  1071, -3515,   264, -3515,
   -3515, -3515, -3515, -3515,   264, -3515, -3515, -3515, -3515, -3515,
   -3515, -3515,  3424,  3192, -3515, -3515, -3515, -3515, -3515, -3515,
   -3515, -3515, -3515,  3154, -3515, -3515,  3267, -3515, 50140, -3515,
   -3515,   748,  3197, -3515, -3515, -3515,  1202, 44130, 23064,  3177,
    3337, -3515,  3444, -3515,   869,   177,  3105, -3515,   267, 44130,
   -3515,  3442,    95,   234, -3515, -3515, -3515,  3178,  1976, -3515,
   -3515, -3515,  3188, -3515, -3515, -3515, -3515, -3515, -3515,   302,
    3439,  2551,  2551,  2551,  2551,  2570, -3515, -3515,  3225, 23064,
   15140,  3290,  2012, -3515, -3515,  1613,  2944, -3515,  1245,   340,
   10786,  2456, 33913, -3515, -3515, -3515, -3515, -3515, -3515,  -139,
   -3515, 10786,  3198, 10786,  3202,  2034, -3515, -3515, -3515,  1605,
    1605, -3515,   951, -3515, -3515, -3515,  2036,  2047,   267,  2091,
    2093, -3515, -3515, -3515,   305,  3203, -3515, 44130, -3515, -3515,
   -3515,   197, -3515, -3515,  2103, -3515,  2118, -3515, -3515, 10786,
    3658,  3220, 44130,  1356, -3515, 51342, 51342, 44130, -3515, -3515,
   -3515, -3515,  5472, -3515, -3515,   766, -3515, -3515, -3515, -3515,
   -3515, -3515, -3515, -3515, -3515, -3515, -3515,  3788, -3515,  3218,
   -3515, -3515,  3205,   232, -3515, -3515, -3515,  3922,  3646,  1540,
   -3515, -3515, -3515, -3515, -3515,  3230,  2123,  -139,   100, -3515,
     267, -3515, -3515, -3515,   340,  3234,  3473, -3515,    95, -3515,
   -3515, -3515,   234, -3515, -3515, -3515, -3515, -3515, -3515, -3515,
   -3515, -3515, -3515, -3515, -3515, 24274,  2591, -3515,  2528, -3515,
   -3515, 44130, -3515,  3284,   100,  3723,  3724,   100,   100,   100,
     100,  3241,  2944, -3515,  3707, -3515, -3515, 10786, -3515, -3515,
    1190,  3464, -3515,  3792, -3515,   777,  1190, 44130,  1190, 44130,
   -3515,  3679,  3679, -3515,  3447,   267, -3515,    95,   234, -3515,
    3120, -3515,  1340,  1340,   171,   264,   171,  1190, 10786, -3515,
   10786,  3271, -3515, -3515,  3680, 44130, -3515, -3515, -3515, -3515,
   10786, -3515, 50140, 50140, -3515, -3515, -3515, -3515,  3838,   869,
    3811,  3512,  3812,  3094, -3515, -3515,  3479,  3922, -3515, -3515,
   -3515,  2551, -3515, -3515, -3515,  1226, -3515, -3515,  3254, -3515,
     100, -3515,  3258, -3515,  3290, -3515,  3261, -3515,  -139,   100,
     100,  1795,  1795,  2528, 37519,  3364, -3515, -3515,   100,   340,
   44130, -3515,  1104,  3621, -3515,  2122,  2132,   102, -3515, -3515,
   -3515, -3515, -3515, -3515,  2149, -3515,  3877, -3515,   840,  3525,
    3526, -3515, -3515, -3515,  1190,  1190, -3515,   220, -3515, -3515,
    3656,  3741, 10786,  1190, 47135,  3268, -3515, -3515, -3515, -3515,
   -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, 50741,
   10786, -3515,   766,  3788, -3515,  3527, -3515,  3530, -3515, -3515,
   -3515,  3766, 50140, -3515,  3761, -3515,   869, -3515, -3515, 24274,
   13896,  2307, -3515, -3515,  3287, -3515, -3515,   -60, -3515,  -139,
    -139, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515,
    2160, -3515, 37519, -3515, -3515,  3868,  3869,  3772,  3875,  1104,
   -3515,  1157, -3515, -3515, -3515,  3876, -3515,  3878,  3309,  3310,
   -3515, -3515, -3515, -3515,  3359,  3806,  3340, 10786, 50140, -3515,
    3783, -3515,  3717,  1991,  3661,  3312, -3515,  3314,  1016,  3821,
   51342, 51342, -3515, -3515, -3515, -3515,  3798, -3515, -3515, -3515,
   -3515, -3515, -3515, -3515,  2164, -3515, 14518, -3515, -3515, -3515,
   -3515, -3515, 37519, -3515,  3364, -3515,  3325,   264,   264,  3898,
     264, -3515,  3899,  3900,  1157, -3515, -3515, -3515, 42327, 42327,
    1340,  1340, -3515,   236, -3515,  1190, 47736,  3895, 44130, -3515,
   -3515, -3515, -3515, 10786, -3515, 38721, 48337,  3334, -3515, -3515,
   -3515,  3496, -3515,  3094,  3499, -3515,  3287, -3515,  3341, -3515,
    2448,  2944, -3515, -3515,  3338, -3515, -3515,   264, -3515,   264,
     264, -3515,  3344,  2171, -3515, -3515, 10786, -3515,  3810,  3430,
   -3515,  3347, -3515, 50140,  1818, 50140, -3515, -3515,  3768,  3351,
    1764, -3515,  3350, -3515, -3515, 50140,  3757,  3792, -3515, 14518,
    3354, -3515, 10786,  3356,  3357, -3515, -3515, -3515, -3515, -3515,
   -3515,  1190,  3926, 50140, 44130, 45332,  3548, 48938,  3799, 44130,
    3922,  3801,  3802, -3515, 50140, -3515,  3936,  3621, -3515, -3515,
    1190, -3515, -3515,  3451, -3515, 45933, -3515,  2452, -3515,  3393,
   -3515, -3515,  3871,   832, -3515, -3515,   264,  3771, -3515, -3515,
   50140, 50140, -3515, -3515, -3515, 31509, 10786, -3515, -3515, -3515,
   -3515, -3515,   927, -3515,  3640,  3376, 46534, 49539, -3515, -3515,
   -3515, 28504, -3515, -3515, -3515,  3813, -3515,  1190, -3515,    40,
   19428,  3529, 31509, -3515, -3515, -3515, -3515, -3515, -3515, 37519,
    2193, -3515, -3515, 24274, -3515, -3515, -3515, -3515, 22457,  3375,
   -3515,   100, -3515, 24274, -3515, -3515, 13896, -3515, -3515
};

/* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -3515, -3515, -3515, -3515, -3515,   140, -3515, -3515, -3515, -3515,
   -3515, -3515, -3515, -3515,  1778, -3515, -3515, -3515, -3515, -3515,
    1981, -3515,   703, -1763, -3515, -3515, -3515, -3515, -3515, -3515,
   -3515, -3515,   705,  1603,  3369, -3515,   445, -3515,   117, -3515,
   -3515, -3515, -2820,     3,  -167, -3515, -3515,   384,    21,  3051,
    -165, -2888, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515,
   -3515,   453,   452, -3515, -3515,   271, -3515, -3515, -1730, -3515,
   -3515, -3515, -3515, -3515, -3515, -3515, -3515,  -346,  -304,  1932,
   -3515, -3515, -3515,  3974, -3515,  3457, -3515, -1688,  2246, -3515,
   -3515, -3515, -3515, -3515,  2305, -1628, -3515, -3515, -3515,  1350,
   -3515, -3515, -3515,   -81,   293, -3515,   295, -3515,   297, -3515,
     298, -3515,   299,   300,   301,   303, -3515,   306, -3515, -3515,
    -290, -3515, -3515, -3515, -3515,   307, -3515, -3515, -3515, -3515,
   -3515, -3515, -3515,  -170, -3515, -3515,   -21, -3515, -3515,  -166,
     310, -3515,  -122,   312, -3515,   313, -3515,   -41, -3515,   -39,
   -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515,
   -3515, -3515,  3052, -3515, -3515, -3515, -1972, -3515, -3515, -2101,
    2621, -3515, -1702, -3515, -3515, -1789, -3515, -3515, -1706,   657,
   -3515, -3515,  1351,  -325, -3515, -1335, -1839, -1830, -3515, -3515,
   -3515, -1945, -1942, -1375, -1374, -2150, -3515, -3515, -3515,   315,
   -3515, -3515, -2478,  2087,  2623, -3515, -1907, -3515, -3515,  1182,
   -3515, -3515,  1354,  1784, -3515,   962,  2794, -1198, -3515, -3515,
   -3515, -3515, -3515, -3515,   144,   275,    44, -3515, -3215,   668,
   -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -2609, -3515,
   -3515, -3515,  -208, -3515, -3515,  -121, -3515, -3515,  -169, -3515,
     132, -2233, -3515, -3515, -3515, -3515,  2585, -1287, -3515,  3576,
   -3515,  -548,   765,  2119, -2321, -1361, -3515,  -854,  -850, -2398,
   -3515, -3515, -3515, -3247,  1135,  1534, -3515,   862,  2110, -1831,
   -3515,  1609, -3515, -3515,   887, -3515, -1994, -3515, -3515, -3515,
     841, -3515,   843, -3515, -3515, -3515, -1282,   811, -2472,  1450,
    -832, -3515,   388, -2370, -2459, -3515,   622, -3515,   575, -2890,
   -3235, -3515,  -557, -2014, -2319,   -14, -3515, -3515,   587, -3036,
     954, -3515, -3515, -3515, -3097, -1709,  1471, -3515, -3515,  1061,
   -3515, -1867,  1059, -3515, -3515, -3515,  1076, -3515,   159, -3515,
   -3515, -3515, -3515, -2724, -3515, -3515, -1426, -1965, -3515, -3515,
    4090,  4106,  -994, -2620, -3514,   157,   160, -3515, -3515, -3515,
    2619, -1303,   229,   218,   223,  2082, -1639,   374, -2248, -3515,
     422, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515,
   -3515, -3515, -3515, -3515, -3515, -3515, -3515,  2169,  -188, -3515,
   -3515, -3515, -3515, -3515, -3515, -3515, -2341, -2337, -3515, -3515,
    1671, -3515, -3515, -3515, -1835,  -506, -2110, -3265, -3515, -3515,
   -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515,  3574,
   -3515, -3515,  2301, -3515, -3515, -3515, -3515, -3515, -3515, -3515,
     673,  1856, -3515, -3515, -3515, -3515, -3515, -3515,   950,  2670,
   -3515, -3515, -3515,   -11, -3515, -3515, -3515, -3515,  2387, -3515,
   -3515, -3515, -3515,  2715, -3515, -3515, -3515, -3515, -3515, -3515,
    1465, -3515,  1903, -3515, -1398, -3515, -3515,  1065,  -946,  1855,
    -579,  1994,   424, -3515,  3582, -3515, -3515, -3515, -1610,  -990,
   -3515,  3285,  -790, -2454,  2379,  -633, -1779,  1109,   407,  3434,
   -3515, -1094, -1040, -3515, -3515,  -619, -3515, -3515, -3515,  -604,
   -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515,
   -3515,  1502, -3515, -3515, -3515, -3515, -1177, -3515, -3515, -3515,
   -3515, -3515,  1501, -3515,  2092, -3515,  -496, -3515,  3097, -3515,
   -3515, -3515, -2256, -1793,  1819,  1004, -3515, -3515, -3515, -3515,
   -3515, -3515, -3515, -3515, -3515, -1490, -3515, -2279, -3515, -3515,
   -3515, -3515, -3515,  2013, -3515, -3515, -3515, -3515, -3515, -3515,
   -3515, -1551, -3515, -1954,   228, -3515,   375, -3515, -3515, -3515,
   -3515, -3515, -3515, -3515,   -26,   903,   -13, -2649, -1054,  1711,
   -3515, -3515, -1237,  3148, -2240, -3515, -3515, -3515,  2002, -3515,
   -3515, -3515, -3515, -3515,   987, -2831, -1341, -3515, -3515, -3087,
    -880, -2202,  -863, -3515, -2269,   530, -1724, -1727,  -467,   174,
   -1195, -3515, -3515, -3515, -3515, -3515,  -105, -3515, -3515, -3515,
     565,  1905, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515,
   -3515, -3515,  -544,  -759, -3515, -3515,  2163,  1726, -3515,  3023,
   -3515, -1006,  3277, -3515, -3515,  3278, -3515, -3515, -3515, -3515,
    2960,  2936,  1973, -3515, -3515, -2531, -3515, -3515,  1930, -3515,
     826, -2280, -1707,  1115, -3515, -3515,  1120, -3112, -3515, -3515,
    3286, -3515, -3515, -3515,  1055, -3515,   130,  3669,  3295, -3515,
   -3515, -3515, -3515, -3515, -3515,  2729, -1020,  3599, -3515, -3515,
   -3515, -3515, -3515, -3515,  2410, -3515, -3515, -3515, -3515, -3515,
   -3515,  2912,  3688,  -561, -1273, -3515,  -749,  2906,  2415,  -838,
   -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515,
   -3515, -3515, -3515, -3515,  2547,  1034, -3515, -3515, -3515,  2969,
   -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515,
   -3515, -3515, -3515, -3515, -3515, -3515, -3515,  1158,   -17, -3515,
     128,   -43, -3515,    64, -3515, -3515, -3515, -3515, -3515,  -109,
   -3515, -3515,  -110, -3515,  -943, -1322,   757, -1199, -1979, -3515,
    1159,  2958, -3185,  -668, -1115, -1100, -1820,   127, -3515, -3515,
    2735,   121,   564,  -267,    -6, -2642,  -108,  -563, -3515, -2542,
   -3515, -3515, -3515, -3515,  2487, -3515, -3515, -3515, -3515,  1520,
   -3515, -3515, -3515,  1126, -3515,   857,   630, -3515, -3515,   138,
   -3515,  2542, -3515, -3515, -3515, -3515, -3515, -3515, -3515, -3515,
   -3515, -3515, -3515, -3515, -3515, -3515,  2980,  3731,  3429, -3515,
    3041, -3515, -3515, -3515, -3515, -3515,   515, -3515,   359, -3515,
   -2039,  2800,   762, -3515,  1617,  -216,  -499, -3515, -3515,   513,
   -3515, -3515,   311,  3743,  3433, -3515, -3515, -3515, -3515, -3515,
   -2659,  -859, -3515, -3291, -2713, -1629, -3515, -3515, -2091, -2907,
   -3515, -3515,  -997, -3515, -3515, -3515, -3515, -1885, -3515, -3515,
   -3515,    82,  3804,  3805, -3515, -3515,  -156, -3515,   -84, -3515,
   -3515, -3515, -3515, -3515, -3515, -3515,  3670, -3515, -3515, -3515,
   -3515,  3673, -3515, -3515, -3515, -3515, -3515,  3677, -3515, -3515,
   -3515, -3515, -3515,  1794, -3515, -3515, -3515, -3515, -3515, -3515,
   -3515, -3515
};

/* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
   positive, shift that token.  If negative, reduce the rule which
   number is the opposite.  If zero, do what YYDEFACT says.
   If YYTABLE_NINF, syntax error.  */
#define YYTABLE_NINF -2534
static const yytype_int16 yytable[] =
{
     479,  1014,  1022,   922,  1407,   946,  1000,   918,  1414,   522,
    1317,   769,  2317,   521,   605,  2172,  1631,   529,  1518,   541,
    1989,  1823,  2057,  1084,  1584,   548,   543,   477,  1719,  2272,
    1747,  1632,  1345,   555,  2513,   959,   558,  1373,  1508,  1509,
     555,  2452,  2861,  2755,  2759,  2761,  1986,   574,  1043,  2691,
    1718,  2811,  1892,  1893,  1345,  1339,  1912,  1913,  1912,  1913,
    1654,  1606,  2721,  1866,  2589,  2773,  2774,  1662,  3121,  2592,
    3451,  3169,  1549,  2964,  1963,  1755,  2406,   989,   992,  2795,
    1374,  1830,  2650,  2419,  2346,  2407,  2411,  2423,   594,  2222,
    2301,  1030,  1891,  2533,  2857,  2786,  2534,  3285,  2438,  1840,
    3456,  1419,  2777,  2796,  2862,  1420,  2676,  1843,  1844,  2448,
     597,  2744,   479,  2991,  3642,   479,   604,   610,  2034,  2035,
    2982,  3528,  1664,  1665,  2989,   134,  1668,  1669,  1670,  1671,
    1869,  1673,  1674,  1676,  1678,  1679,  1680,  1681,  1682,   599,
    1179,  3325,   601,  1137,  1138,  1139,  3373,   486,  3492,  3497,
     527,  2478,  3498,  1904,  1750,  3778,  1180,  3499,  2029,  1255,
    1255,  1146,  1147,  2369,  2370,  2039,  2835,   540,  3897,  3471,
    1375,  3508,  1390,   547,  2394,  3650,  2073,  3527,  1761,  2312,
    2381,  3041,  1480,  2383,  1247,   623,  1416,  2213,  2285,  3116,
    3050,  3332,  2480,  2683,  1696,  1146,  1147,  2399,  2400,  2530,
    2947,   887,   888,  3691,  3333,  2402,  1146,  1147,  2531,  2159,
     614,  2456,  2988,  2421,  2422,  3195,  2424,  -882,  3334,  2427,
    2428,   593,  3198,  2431,  1476, -1752,  1204,  3583,  2440,   887,
     888,   825,  2966,  2444,  2445,  2446,  2447,   993,  2522,  1370,
    2451,   536,  2453,  3677,  2334,  3315,  2408,  4187,  2462,  2821,
    2822,  2466,  1195,  2468,  1416,  2208,  1250,  2829,  1146,  1147,
    1541,  3457,  1181,  1948,  2732,   887,   888,   533,  2567,   615,
    3675,  2490,  2491,  1416,  1480, -1921,  1865,  2501,  2502,  3719,
    3380,  1264,  2646,  4000,  1281,  -560,  2510,  2511,  3042,  3640,
   -2417,  2515, -1474,  4001,  1481,  1181,  1256,  1256,  1482,   935,
    4365,  4145,  1003,  2948,  -561,  1146,  1147,  3897,  3332,  1483,
    2363,  1951,  2547,  2904,  3966,  2517,  2518,  2519,  2520,  1146,
    1147,  3333,  3972,  1146,  1147,  2972,  1261,  2974,  -467,  1146,
    1147,  2829,  1343,  1146,  1147,  3334,  1977,  1010,   854,  3898,
    3897,  1521,   638,  1904,  4146,   566,   887,  3493,  2457,  1350,
    1146,  1147,   557,  1887,  2190,  3041,  1355,   537,  2434,  3214,
    1146,  1147,   995,  1382,  3616,  4158,  1146,  1147,  3423,  2935,
    2936,  1146,  1147,  1758,  1385,   133,  1124,  1498,  1499,  1500,
    3332,  4158, -2348,  2913,   628,  3167,  1481,  1501,  2203,  3424,
    1482,  3797,  3083,  3333,   133,  3315,  2204,  1987,  1521,  3711,
    1548,  1483,  2771,  2794,   482,  1146,  1147,  3334,  3715,  1357,
     135,   567,   915,  1084,  1502,  1759,  1497, -1474,   887,   888,
    1988,  1195,   828,  3425,   556,  2286,  2942,  3823,  1391,  3728,
    2914,  2825,  1905,  2640,  3730,  1440,  1484,  2641,  1358,   996,
    3168,  1865,  1383,   616,  1146,  1147,  2160,   855,  1978,  1862,
    1386,  4051,  2838,  2830,  1146,  1147,  1146,  1147,  3799,  1192,
    3316,  1477,  3042,  3893,  1522,  1497,  3215,  1276,  1573,  4147,
     936,  1574, -1752,  1146,  1147,  2324,  2136,  1265,  3898,  1146,
    1147,  1029,  2905,  3159,  3760,  1359,   604,  3847,   610, -2348,
    1360,  4366,  1196,  1146,  1147,   619,  4002,  3129,  3130,  3458,
    1146,  1147,  1146,  1147,  2470,   783,  2213,  2437,  2335,   610,
    1825,  3898,  3173,  1828,  1892,  1893,  2738,  3787,  1832,  3182,
     823,  1537,   856,  1328,   604,  2325,   833,  1542,  1484,  1183,
     994,  1485,  1912,  1913,  3205,  1371,  1146,  1147,  1659,   846,
     827,  1867,  3617,  1887,  1845,  1846,  1148,  1125,  2881,  1149,
    1016,  1024, -1474,  3199,  1891,  1532,  1533,  1148,  4183,  1720,
    1149,  1667,  1182,  1419,  2406,   932,  1904,  1420,  2342,  3969,
    2436,  2209,  2481,  2407,  3462,  1572,   826,  2214,  1688,  1719,
    2405,   915,  2533,   949,  1586,  2534,  3194,  3406,  3824,  3196,
    3197,   534,   604,  2287,   963,  1182,  1599,  1600,  1601,  2839,
    1248,  1718,  1963,  2843,  1605,   594,   479,  3043,  3207,  1148,
    3316,   594,  1149,   987,  2907,   594,   594,  2859,  2860,  3671,
    1001,   963,  1905,  1485,  2074,   604,  1146,  1147,  2871,  1842,
    1146,  1147,  2192,   974,  1361,  1031,  1032,  1033,  1419,  1478,
    2804,  1038,  1420,  2195,  3319,  2949,  2198,  3087,  3088,  3089,
    1146,  1147,  2034,  2035,  2478,  3399,  1148,  3651,   791,  1149,
    3612,  1196,  1699,  2535,  2536,  2831,  1146,  1147,  1195,  2189,
    1148,  1146,  1147,  1149,  1148,  1478,  2819,  1149,  1194,   838,
    1148,  3500,  1727,  1149,  1148,  1085,   849,  1149,  2530,  2207,
    -882,  3906,  2029,  1762,  3126,  3127,  3128,  2531,  2842,  2823,
    2844,  1148,  1751,  2529,  1149,  2745,  2979,  2855,  4094,  1362,
     933,  1148,  3949,   867,  1149,  2040,  3892,  1148,  1028,  2017,
    1149,  2868,  1148,  2854,  1011,  1149,  1749,  2877,  3313,  2478,
    3454,  3324,  2937,  3335,  1869, -2417,  2863,  2458,   973,   538,
    1251,  1768,  2892, -1474,   984,  1478,  1143,  1780,  1145,  2824,
    3208,  1150,  1146,  1147,  3810,  4054,  1148,  1478,  -560,  1149,
    3051,  3486,  4039, -2417,  2932, -1474,  1887,  3973,  2326,  3584,
    3485,  2971,  1363,  3044,  1188,   479,  1190,  -561,   963,   479,
     604,  3043,   479,   604,  1806,  1150,  1342,  1351,  1233,  1829,
    3300,  2934,  3506,  3507,  1356,  1148,  1150,   937,  1149,  2785,
    2737,  -467,  1189,  2175,  3505,  1148,  1193,  1148,  1149,  1203,
    1149,  2161,  3510,  4066,  3801,  4179,  3620,  4013,  2940,  3533,
    2049,  1260,  1146,  1147,  1148, -2348,   975,  1149,   915,  4212,
    1148,   594,  3401,  1149,  2772,  2832,  1146,  1147,  3174,  3175,
    3301,   604,   594,  2050,  1148,  1905,   594,  1149,  1150,  1378,
    3335,  1148,  3188,  1148,  1149, -2348,  1149,  3483,  3484,  2696,
    1329,   115,  1639,  1640,  1871,  2988,  3470,  3193,  2988,  2988,
    3494,  3270,  2801,  3428,  1126,  1012,   487,  4061,  3477,  4063,
    2083,   631,  2721,  2259,  1364,  2988,  3328,  1148,   604,  3062,
    1149,  1195,  2554,  3441,  1439,  1150,  2214,  3445,  1575,  3509,
    1731,  1576,   789,   842,  3526,  3529,  3531,  3532,  1196,  1150,
    2137,  1146,  1147,  1150,   952, -2533,  3440,  3272,  1365,  1150,
    3444,  2108,  3335,  1150,  2084,   594,  3102,  3412,  2064,  3890,
     847,  1226, -2349,  1639,  2102,  1146,  1147,  2140,  2141,  2401,
    1150,  3450,  3131,  3461,  1504,  1415,  3525,  1146,  1147,  2388,
    1150,  3350,  4133,  2045,  2157,  2158,  1150,  2338,  1146,  1147,
    4152,  1150,  1278,  1397,  1267,  2082,  2864,   850,  1883,  1655,
    2658,  2659,   117,   594,  1345,  1284,  2089,  1148,  2979,  1290,
    1149,  1148,   523,  3838,  1149,  2406,  2368,  1146,  1147,  2791,
    2836,  2836,  2336,  2285,  2407,  1150,  2533,  4004,  4181,  2534,
    2792,  1148,  2341,  1345,  1149,  2344,  2345,  1892,  1893,  3007,
    3008,  2389,  1823,  1823,  1146,  1147,  3163,  1148,  2260,  2537,
    1149,  3815,  1148,   644,   594,  1149,  1912,  1913,  1514,   532,
   -1752,  1146,  1147,  2494,  1150, -2481,  1649,  2865,  2390, -2349,
    3992,  3329,  3124,  2569,  1150,  2463,  1150,  1891,  3024,  3025,
    2555,   915,  2222,  1146,  1147,  1501,  2208,  2199,  3059,  3060,
    2065,  2438,  1085,  1150,  2411,  1146,  1147,  2606,  2405,  1150,
    2778,  1146,  1147,  1687,  1059,  1085,  3437,  1781,  2090,  2710,
     645,  2197,  1503,  1150,  2100,  2760,  3411,  3552, -1434,  3755,
    1150,  3616,  1150,  2657, -1779,  2495,  3553,  2953,  2101,   998,
     999,  1887,  2530,  1148,  2391,  2104,  1149,  2116,  1732,  1963,
    1720,  2531,  1884,  1146,  1147,  4099,   562,  4105,  2265,   851,
    1721,  3330,  1851,  3204, -1434,  1633,  1150, -2481,  1146,  1147,
    1163,  1196,   953,  3817,  1851,  2212,   545,  2866,   604,  2662,
    2663,  2123,   998,   999, -2481,  1128,  2034,  2035,  1656,  1146,
    1147,  3656,  2535,  2536,  4224,  2172,  2216,  1505,   954,  1146,
    1147,  1512,  1398,  3664,  3665,  3328,   843,  1419,  1760,  3818,
    2538,  1420,  3132,  1148,  3839,   604,  1149,  3367,  1379,  1874,
    1691,  3369,   870,  3022,  2392,   594,  2029,  1148,  2496,  2656,
    1149,  4153,  2529,  1875,  2793,  1632,  3880, -1779,  3993,  2666,
     594,  2281,  2282,  1146,  1147,  1146,  1147,  1146,  1147,  2261,
     583,   646,  2954,  3987,  3988,  3409,  1150,  3473,   568,   632,
    1150,  1085,   604,  2464,  2151,  2706,  1195,  1146,  1147,  2915,
    2286,  2127,  1813,  3554,  1683,  2128, -2481,  4009,  1733,   604,
    1150,  2327,  4044,  2103,  3351,  2799,   569,  1146,  1147,  4060,
    3577,  1736,  4135,  1739,  2077,   594,  1150,  1904,  2356,  3004,
    1632,  1150,  1148,  4136,   594,  1149,  1146,  1147,  2497,  3617,
     604,  2130,  1146,  1147,  4387,  3840,  2131, -1780,  1852,   594,
     594,  3178,  1853,  1146,  1147,  1782,  1148,  1146,  1147,  1149,
    1852,  1146,  1147,  1814,  1853,  1146,  1147,  3096,  1148,  1146,
    1147,  1149,  2556,  1380,   604,   871,  3764,  1784,  4045,  1148,
    4046,  3364,  1149,  3880,  3880,  1792,  1873,  2640,  1693,  1166,
    3329,  2640,  3587,   551,  3331,  3371,  1381,   479,   479,   479,
     594,   479,   594,  1904,  1184,  2875,  3757,  1824,  1148,  1146,
    1147,  1149,  1150,  1826,   479,  4099,   604,  1657,  1642,   479,
    1632,  1146,  1147,  1876,  1807,  1808,  1809,  2135,  1811,  1146,
    1147,  3994,  1794,  1658,  1423,  1148,   584,   571,  1149,   594,
    2916,  1827,  2209,  3618,  3154, -2349,  1831,   872,  2740,  2168,
   -1780,  2478,  1148,  1743,   586,  1149,   915,  2393,  1290,    43,
    4055,  2955,  1146,  1147,  1146,  1147,  1146,  1147,  2287,  3155,
    3341,  2309, -1779,  2478,  1148, -2349,  2836,  1149,   595,   129,
    4322,  1521,  1150,  1290,  1271,  1733,  1148,  1272,   604,  1149,
    1146,  1147,  1148,   589,  1294,  1149,  1150,  2153,  3552,  1877,
    1795, -1779,   594,  1315,  2078,  1982,   594,  3553,  1684,  1011,
     251,  3005,   253,  2814,  2176,  1146,  1147,  2310,  2076,  1803,
    3880,  3880,  1146,  1147,  1878,  1851, -1752,  1887,   587,  1163,
    1685,  2741, -1752,  1810,  1148,  1812,  1196,  1149,  1815,  4137,
    2437,  2498,   594,  1904,  1146,  1147,  3394,  2079,  1183,  1148,
    -202, -1434,  1149,  3952,  1146,  1147,  4254,  4255,   829,  2405,
    2956,   604,   598,   479,   479,   130,  2047,   479,  3740,  3179,
    1148,  1150,  1841,  1149,  1643,  4185,  1146,  1147,  4189,  1038,
    1148,  2063,  2177,  1149,  1879,  2291,  3006,  2542,  3395,   600,
    2043,  2044,  2022,  3895,  1521,  1150,  3819,  1887,  4229,  4229,
    3619,  1719,  3880,  1887,  1591,  2169,  1905,  1150,  2543, -1779,
    3017,   975,  3983,  3620, -1672,    55,  2973,  3880,  1150,  3702,
    3156,  1903,  3027,  1718,  1148,  2815,  1148,  1149,  1148,  1149,
    3880,  1149,  1273,  3028,  3183,  1979,  2535,  2536,  1521,  1984,
    3058,  3765,   830,  2932,  3554,  2226,  2022,  1150,  1148,  1146,
    1147,  1149,  1865,  1085,  2109, -1780,  2661, -1779, -1672,  2594,
    1012,  1785,  3595,  2217,  2058,   611,  1146,  1147,  1148,  3951,
    3112,  1149,  2600,  3331,  1150,  1880,  2529,  1175,  1176,  1177,
    1178,  1852,  1905,  2309, -1780,  1632,  3880,  1148,  3023,  2525,
    1149,  1150,  1686,  1148,  1432,  1433,  1149,  4278,  3880,  3880,
   -2533,  3621,  1887,  1796,  1148,  2615,  4138,  1149,  1148,  3703,
     831,  1149,  1148,  1150,  2181,  1149,  1148,  1595,  1166,  1149,
    1148,  2182,  1195,  1149,  3741,  1150, -1752,  2152,  1195,  4202,
    2291,  1150,  1495,   873,   874,   875,   876,   877,   878,  2081,
    2574,  3756,  2919,  1887,  3880,  2091,  2227,  1146,  1147,  3704,
     879,  2049,  3573,  3574,  3880,  1343,  2205,  2920,  4056,  4203,
    1148,  1619,   604,  1149,   594,   604,  1065,  2696,  3984,   612,
    1146,  1147,  1148,  1150,  2050,  1149,   594,  2672,  3831,  3832,
    1148,  1233,   117,  1149,  1786,  2178,  1233,  2092,  1150,  2229,
     575,  3880, -1780,  3880,  3109,  2235,  2235,  1887,  2235,   619,
    3676,  1163,  2099,  3880,  4195,  1146,  1147,  1346,   594,  1150,
    4110,   620,   594,  1148,  2172,  1148,  1149,  1148,  1149,  1150,
    1149,  3880,  1905,  3880,   623,  3880,  1116,  1195,   604,   604,
     594,   594,  3880,  2112,  2633,   576,  1146,  1147,  1120,   625,
   -1780,  1148,  1085,  3880,  1149,  2235,  2235,  2235,  2293,  2294,
    4057,  1066,   627,  1146,  1147,  3833,  1347,   674,  3880,  3880,
    2634,  2322,  2023,  1150,   639,  1150,  1148,  1150,  1195,  1149,
    2333,  1146,  1147,  1148,  3880,  3880,  1149,  2113,   495,  3880,
    4058,  2117,   915,  3184,  1146,  1147,  3115,  1150,   915,   966,
    3729,  1146,  1147,  3731,  3681,  1148,  2388,  1987,  1149,  2876,
    2183,  2121,  2203,  1146,  1147,  1148,   594,  1150,  1149,   577,
    3140,  1117,  3945,  3946,  4301,   630,  2023,  2351,  3932,   679,
    1988,  2122,  1195,  1121,   594,   641,  1150,  1148,  2234,  2234,
    1149,  2234,  1150,  2769,  4302,  3947,   787,  3933,  1317,   967,
    2126,  2257,  2853,  1150,   642,  1267,  2129,  1150,  3766,  2187,
     643,  1150,   779,  2280,  3772,  1150,   784,  2132,  2389,  1150,
    3160,  2144,  1196,  1284,  2284,  2163,  3161,  2103,  1196,  2976,
     870,  1146,  1147,  2995,  3601,  1146,  1147,  1345,  2234,  2234,
    2234,   483,  2266,  1345,   484,  2390,   824,   915, -1672,  2024,
    1166,  3326,  2329,  2382,  1146,  1147,  1146,  1147,  2523,  1150,
    1148,  3438,  2539,  1149,  1173,  1174,  1175,  1176,  1177,  1178,
    3162,  1150,   690,  3001,   794,  3343,  3344,  1148,   835,  1150,
    1149,  2465,   968,  3487,  2841,  3002,  3490,  3491,   915,   839,
    1146,  1147, -1672,  3009,  2352,  2479,  3356,  4296,  2568,  2343,
    2590,   552,   859,  3503,  2267,  2590,  1146,  1147,   552,  2869,
    2870,  2391,  1150,   841,  1150,  3501,  1150,  2362,  3502,  1146,
    1147,  1146,  1147,  1146,  1147,  2372,  3013,  1196,  3014,  1163,
    3015,  1146,  1147,   861,  2379,  2380,  1146,  1147,  1728,    13,
    1150,  1729,   915,   928,  1730,  2384,  2385,  2386,  2387,  1632,
    2395,  2396,   706,   871,  3016,  2664,  2080,  1183,  1148,  2184,
     604,  1149,  2096,  1183,   604,  1150,  2540,  2199,  1196,   479,
    3826,  3827,  1150,  3829,  3830,  2185,   594,   594,   594,  2563,
     483,  1148,  2566,   484,  1149,   851,  3018,  3920,  3921,  3922,
    3923,  2392,  1720,  2025,  1150,  2799,  2545,  4121,  1168,  1169,
     947,  2654,   604,   827,  1150,   956,  1237,   604,  3021,   948,
    1632,   965,   578,   975,  1255,   985,  1148,  1005,  3026,  1149,
    1004,  2237,  1196,  2238,  2353,   872,  1150,  1009,  2875,   546,
     115,  4384,  1040,  2675,   579,  1041,   887,   888,  2105,  1183,
    3029,  2354,    25,  1632,  1042,  2489,  1870,  1148,  2492,  2493,
    1149,  2500,  2355,  2521,  2503,  2504,  2505,  2506,  2507,  2508,
    2509,  2625,  1044,  2512,  1148,  2514,  1045,  1149,   580,  1046,
    2304,  2305,  2306,  2106,  1589,  1163,  1049,  4122,  4022,  3108,
    1050,  1238,  1148,  1051,  1096,  1149,  1239,  2118,  1183,   969,
    2627, -1474,  1052,  3057,  2629,  1148,  2119,  1183,  1149,  1150,
    1146,  1147,  1148,   604,  1183,  1149,  1115,  1053,  1894,  2559,
    2560,  2561,   937,  3031,  1148,  1054,  1150,  1149,  1166,  1129,
    1130,  4011,  2120,  1183,   581,  2124,  1183,  3153,  2673,  1240,
    3033,  4023,  3464,  3465,  2356,   604,  1173,  1174,  1175,  1176,
    1177,  1178,  2266,  1186,  1241,  1055,  2590, -1474,  2763,  2768,
    1056,  1256,   970,  1187,   971,   735,   604,  4028,  2578,  3538,
    4031,  4032,  4033,  4034,  1057,   781,   782,  2397,  2398,   785,
     786,  2643,  1183,   788,  1234,   790,  1904,  1060, -1474,  1062,
   -1474,  1208,  1148,  1823,  2579,  1149,  1148,  1063,  2704,  1149,
    1064,  2810,  2590,  4089,  2393, -1474,  1067,  1150,  3690,  1068,
   -1474,  1069,  2704,  1070,  2267,  1148,  1332,  1148,  1149,  2893,
    1149,  3035,  1191,  1895, -1474,  3112,  1071,  4107,  1236,  2726,
    1150, -1474,  1072,  2729,  1073,  2022,  1074,   604, -1474,  1075,
    1632,  2268,  2580,  2973,  3036,  2581,  4127,  1076, -1474,  2816,
    2749,  1148,  2751,  2582,  1149,  3690,  2357,    37,   604, -1474,
     604,   604,  4119,  4120, -1474,  1150,  2172,  1148,  1824,  1824,
    1149,  4132,  2675, -1474,  1166,  1333,  1168,  1169,  1245,  3037,
    1148,  1079,  1148,  1149,  1148,  1149,    43,  1149,  2681,  2682,
    4123,  1080,  1148,  1255,  1633,  1149,  1150,  1148,  1904,  1086,
    1149,  1087,  1334,   604,   604,   887,   888,  2269,  3019,  1183,
    3361,   941,   942,  1150,   943, -1752,   944,  1088,   115,  2358,
    1089,   873,   874,  1090,   876,  1091,   878,  3362,  3118,  3119,
    1092,  1150,  2525,  3961,  3962,  1093,  1455,  1456,   879,  2828,
    1094, -1474,  3592,  2479,  1150,  3363,  1097,  2022,  2479,  2840,
    1098,  1150,  1253,  2479,  1099,  2850,  1100,  2479,  3594,  2849,
    3122,  3123,  1101,  1150, -1474,  3600,  1102,  2022,  4216,  2849,
   -1474,  2479,  2479, -1474,   604,  2849,  4021,  2748,  2872,  3296,
    3297,  1103,  2479,  2880,  1633,  1104,  1887,  2270,  1896,  2883,
    2884,  3375,  1183,   594,    52,  3397,  3398,  1897,  1105,  3909,
    3913,  2849,  1106, -1474,  1898,  3543,  3544,  1107,  2479,  2903,
     116,  1108,  1171,  1172,  1173,  1174,  1175,  1176,  1177,  1178,
    2929,  1242,  1168,  1169,  3580,  3589, -1474, -1752,  1109,   117,
    1256,  1150,  3171,  1110,  1162,  1150,  2022,  3596,  1183,  3613,
    1183,  1111,    55,  1112,  2525,  3602,  1244, -1752,  2885,  3603,
    2886,  1113,  3349, -1474,  1150,  1554,  1150,  1207,  1114, -1474,
    3628,  3629,  2978,  3743,  2398,  1905,  1118,  4220,  3604,   119,
    3605,  4328,  2583,  4295, -1474,  4297, -1474,  1471,  1472, -1474,
    1119,  1043,   594,  2479,  1122,  1525,  1526,  1527,  2851,  2852,
    1150,  1123,  2887,  3758,  3759,  1127,   118,  1538,  1887,  1899,
   -1474,  3762,  3759,  4315,  3376,  2023,  1150, -1474,  3763,  3759,
    1335,  1195,  3825,  3398,  2879,  2888, -1474, -1474,  1887,  1150,
    3678,  1150,  1131,  1150,  1163,   119,  2882,  1592, -1474,  1132,
    1596,  1150,  1254, -1474,  1262,  3916,  1150,  4331,  4332,  1163,
    4346,  4347, -1474,  3828,  3759,  3909,  3836,  3837,  4388,  3913,
    2889,  1615,  1616,  1558,  1133,  1620,  1134,  -640,  1171,  1172,
    1173,  1174,  1175,  1176,  1177,  1178,  1135,  2408,  2352,  1136,
   -1474,  3930,  3931,  1634,  1635,   120,  1185,  1905,  2933,  2409,
    1263, -1474, -1474,  1279,  2408,  2266,  1291,  1887,  1900,  1293,
    2271,  1310,  3200,  3960,  3123,  3964,  3759,  1311,  3709,  3710,
   -1474,  1312, -1474,  1163,  3909,  3913,  3965,  3759,  2388,  2352,
   -1474,  3713,  3559,  2584,  1233,  2958,  2229,  2023,  3716,  1260,
     604,   604,   604,  1195,  3212, -1474, -1474,  1315,   594, -1474,
   -1474,  1318,  3218, -1474,  1327,  -640,  3220,  2023,  1164,  1326,
    1336,  3732, -1474,  1195,  3734,  2408,   604,  2267,  1331,  1633,
    3967,  3759,  3968,  3759,  1343,  1559,  1352,  2409,  1353,  1562,
    1165,  1337,  3974,  3975,  1085,  1354,  1563,   604,   604,   604,
    2389,   915, -1474,  1369,  2268,  2585,  3293,  3976,  3975,  -640,
    3139,  4143,  3123,  1372,   490,  2590,  3141,  1376,  3143,  1377,
    2706,  4144,  3123,  1389,   604,  1392,  2434,  2390,  2353,  1920,
    1921,  1338,  2125,  2586,   121,  3845,  2023,  3780,  4150,  3398,
    2024,  3845,  1195,  1166,  1393,  2354,  3585,  1395,  1987,  4193,
    4194,  1400, -1474,  4235,  4236,  1416,  2355,  1405,  1166,  2291,
    4290,  3295,  -772,  -772,  1923,  1987,  1422,  2292,  1426,  2353,
    2269,  1988,  -772,  1424,  1564, -1474,  1429,  1926,   998,   999,
    4020,  1196,  4377,  4378,  1430,  1927,  2354,  -640,  1988,  3773,
    3774,  3095,   490,  2391,  1434,  1632,  1437,  2355,  2479,  1622,
    1623,  2479,  2479,  1438,  2849,   122,  4125,  4125,  1441,  2024,
    1929,  1442,  2941,   915,   653, -1474,  1443,   604,  1489,  2890,
    2479,  1490,  1166,   653,  1416,  1491,  1987,  1494,  1930,  1496,
    1566,  1497,  1210,   915,  3415,  3416,  2849,  3138,  2356,  1515,
    3781,  3782,  3382,  3383,  2849,  3783,  3784,  1517,  2849,  1988,
    2270,  1181,  1167,  3626,  3627,  1521,  1540,  1935,  1528,  1543,
    1578,  3662,   123,  1588,  -972,  1589,  1613,  1590,  3224, -1474,
    1630,   594,  1641,  2392,  1650,  1666,  3280,  2293,  2294,  2356,
    1672, -1474,   479,  1697,  2025,  1692,  3290,  1695,  2849,  3684,
    1698,  1168,  1169,  1196,  1704,  1705,   674,  1701,  3684, -1474,
    1706, -1474,   915,  3299,  1708,   674,  1168,  1169,  1707,  3286,
    1711,  1709,  1710,  1196,  1722,  2295,  3310,  1725,  1724,  1170,
    1723,  -640,  2435,   594, -1474, -1474,  1939,  1211, -1474, -1474,
    1745,  1748,  1756,  1940,  3323,  1764,  1765,  1766,  2436,  1767,
    1771,  1920,  1921,  1774,  1778,  3206,  1777,  1779,  1941,  1788,
    2357,   678,  1212,  2025,  3210,  1801,  1213,  1834,   679,  1793,
     678,  1567,  3511,  1805,  4020,  1833,  1835,   679,  1836,  3790,
    1168,  1169,  1838,  1847,  -772,  -772,  1923,  1569,  1849,  1632,
    1863,  1872,  1196,  2410,  -772,   683,  1974,  3934,  1850,  1926,
    1214,  2357,  1478,  2066,   683,  1991,  3420,  1927,  1992,  -640,
    1993,  1994,  4062,  1995,  3225,  3512,  1942,  1317,  1215,  2016,
    3513,  2018,  2810,  2358,   493,  1996,  1997,  1998,  3374,  1999,
    3935,  2000,  1929,  2001,  1943,  2002,  2749,  1171,  1172,  1173,
    1174,  1175,  1176,  1177,  1178,  3302,  1416,   796,  2003,  2004,
    1930,  2005,  1171,  1172,  1173,  1174,  1175,  1176,  1177,  1178,
    2006,   690,  2007,  2271,  2358,  2008,  3312,  3514,  2009,  3802,
     690,   508,  2110,  2010,  2011,  2704,  2114, -1752,  1216,  1935,
    2012,  2036,  2013,  2014,  2015,  2037,  2393,  2042,  1947,  2055,
    2052,  2053,  1163,  2726,  3408,  2054,  1949,  3410,  2061,   604,
    2138,  -640,   493,  2067,  2069,  2070,  2071,  2086,   604,  2087,
    1163,  2088,  2093,  2094,  2673,  2097,  1171,  1172,  1173,  1174,
    1175,  1176,  1177,  1178,   604,   701,  4240,  2107,   797,  2095,
     509,  2103,  2322,  2111,   701,  2115,   704,  2142,  2173,  2133,
     705,   706,  3882,  2134,  2139,  2154,  3936,  1874,  1939,   705,
     706,  2180,  2143,  2155,  1633,  1940,  2156,   510, -1183,   798,
    2186,  1875,  1178,  2748, -1303,  2479,  1955,  2239,  2218,  2196,
    1941,  2232,  1065,   799,  2250,  2479,  1116,  2849,  2258,  -640,
    1120,  2264,  2275,  2548,  2278,  2299,  2302,  1633,  2303,  2240,
     511,  3010,  -807,  2849,  2318,   594,   800,  2479,  2332,   801,
    2330,  2337,  2241,  4098,  2360,  1217,  2361,  2364,  2590,  2365,
     802,  2367,  2371,  2242,  1218,  3944,  2373,  2374,   489,  4240,
    2375,  2376,   777,  1956,  2377,  4372,  3937,  2378,  1942,  1219,
    2408,   803,  2429,  2420,  4245,  4246,   512,  4248,  4381,  1957,
    1632,  2425,  1958,  4372,  3938,  2430,  1943,  1220,  4381,  2432,
     777,  2433,  2426,  1632,  2439,  2443,   804,  2450,  1632,  2482,
    2243,  2244,   805,  1632,  2441,  3433,  2442,  3939,  2449,  2929,
    2454,  2455,  1153,  1154,  2460,  2486,  2461,  2488,  1960,  2467,
    2546,  1166,  2564,  2524,  4286,  2577,  4287,  4288,  2245,  3647,
    1221,  2568,   998,   999,  3572,  3572,  3572,  2572,  3515,  1166,
    1947,   806,  2595,   490,  2596,  3516,  2597,  1155,  1949,  2607,
     604,  2204,  2608,  2620,  1222,  2642,  2649,  2651,  1156,  2660,
    2669,  1876,   727,  2670,  2652,  2653,  3685,  1146,  1147,  3686,
    2679,   727,  2680,   483,  2965,  3685,   484,  -838,  3686,   733,
    2697,  2686,  3517,  2694,   735,  2684,  2685,   736,   733,  2687,
    2688,  2699,  4103,   735,  2246,  1157,   736,  2700,  2712,  2707,
     -64,  3944,  2708,  4343,  4101,   513,  1158,   777,  2730,  1751,
    3636,  2716,   777,  2731,  1633,  1210,  4358,  2733,  1955,  2734,
    2735,  2310,  2309,   491,  2810,  2752,  2753,  2754,  2775,  3540,
    2779,   604,  2780,  1159,  2787,  2788,  2789,  1877,  2805,  2812,
    3687,  3688,   777,  2813,  2912,  2856,  2247,  2858,  2922,  3687,
    3688,  2918,  3564,  3518,  2938,  2939,  2943,  2944,   777,   998,
     999,  2924,  1878,  1550,  1551,  1552,  1553,  1554,  2945,  1168,
    1169,  2946,   807,   915,  1948,  1956,   514,  3572,  2970,  2062,
    2979,  2983,  2985,  3694,  2993,  2990,   594,  1168,  1169,  3940,
    2992,  1957,   809,  2994,  1958,  3699,  1160,  2590,  2996,  2997,
     810,  3038,   777,   777,   777,   777,  3048,  3049,   811,  3052,
    1211,  3054,  3097,  3065,  3092,   777,  3056,  1271,  3061,  3104,
    3064,  3085,  1879,  3090,  3125,  3136,   604,  3137,  3100,  3120,
    1960,  3142,  3150,   515,  3107,  1212,   812,  3172,   516,  1213,
    3164,  3101,  3114,  3117,  3165,  3176,  3177,  3180,  3203,   813,
     814,  3735,  3519,  3191,  3192,  3284,   517,  3190,  3739,  3209,
    3420,  2352,  1555,  1556,  1557,  1558,  3213,  3221,  3223,  3287,
    3222,  3281,  3288,  1214,  3802,  3657,  3310,  3292,  3305,  3294,
    3298,   518,   795,   796,  2549,  3306,  3311,  2291,  1865,  1824,
    3295,  1215,  3314,   815,  3320,  3321,   519,  3322,  3340,   604,
    3345,  3342,  3353,  3352,  3365,  1171,  1172,  1173,  1174,  1175,
    1176,  1177,  1178,  1880,  2160,  3043,  3378,  3379,  3388,  3692,
    3390,  3393,   816,   492,  1172,  1173,  1174,  1175,  1176,  1177,
    1178,  4282,  3400,  3413,  4101,  3421,  3429,  3430,  3434,  3435,
    3442,  3443,  3455,   493,   817,  3463,   818,  3466,  3794,  3467,
    3472,  1216,  3481,  3488,  3718,  3534,  3537,  2480,  3541,  3539,
    3547,  3560,   604,  3561,   797,  3551,  3565,  1559,  3562,  1560,
    1561,  1562,  3566,  3568,  3575,  3578,  3579,  3580,  1563,  3581,
     494,  3582,  -566,  3586,  2729,   495,  3588,  3590,  3591,  3593,
    3597,  2353,  3744,  3572,  3572,   798,  3572,  3572,  3598,  4282,
    3944,  3599,  3607,  3614,  3608,  3615,  3624,  3631,  2354,   799,
    3632,  3634,  3140,  3641,  2590,  3643,  3629,  3644,  1148,  2355,
     496,  1149,  3648,  3649,  3652, -1386,  3658,  3654,   497,  3655,
    3659,  3697,   800,  3525, -1391,   801,  4355,  3670,  3679,  3680,
     777,  3700,  3682,  3722,  3683,  3708,   802,  3712,  3714,  3723,
    1295,  3724,  3726,  3727,  3528,  3733,  1564,  3745,  3767,  1296,
    3761,  3887,   594,  4355,  3746,  3769,  3770,   803,  1297,  3771,
    3775,  4386,  3776,  3572,  3777,  3788,  3789,  3809,  1217,  3805,
    1298,  1299,  1300,  3795,  3806,  3812,  3814,  1218,  3835,  3841,
    3849,   704,   804,  3848,  3589,   777,   777,  1301,   805,  3808,
    3891,  2356,  1219,   594,   777,   777,   777,   777,   777,   777,
     777,  1565,  1566,  3883,  3905,  3925,   604,  3915,   777,   777,
    1220,   777,   777,  3919,  3666,  3928,   777,  3917,  3978,   777,
     777,   777,   777,  -342,   777,   777,  3957,   806,  3996,  4027,
    3959,  3970,   777,   777,  3999,   777,   777,   777,   777,   777,
    4005,  3971,   777,   777,   777,   777,   777,   777,   777,   777,
     777,   777,   777,  1221,   777,  3998,  3982,   777,   777,  4008,
    4015,  3989,   777,  4014,  4029,  4030,   777,   777,   777,  4035,
    4038,  4040,  4042,  4047,  4066,  2907,  4069,  1222,  -360,   777,
     777,   777,  4095,  4097,  4109,  3888,  4096,  4112,   777,  4114,
    4129,  4141,  4151,  4154,  4155,   777,   777,   777,  4161,   777,
    4162,  4172,  4166,  2357,  4173,  4174,   777,   777,   777,  4177,
     777,   777,   777,   777,   777,  4183,   777,   777,   777,   777,
     777,   777,   777,   777,  4197,  4198,  3926,   777,   777,  1633,
    4199,  4200,  4206,  1567,  4207,  3794,  4128,  4208,  4209,  4210,
    3954,  4211,  4217,  4212,  4219,  4221,  4222,  1150,  1568,  1569,
    4225, -2268,  4231,  4244,  4247,  4249,  4250,  4260,   807,  4274,
    4276,  2729,   808,  2729,  3226,  3227,  2358, -1547,  4273,  4292,
    3228,  4279,  3229,  4289,  3230,  3231,  4293,  4294,   809,   834,
    4298,  4299,  4306,  4309,  4303,  4311,   810,  4312,  4314,  4070,
    4318,  3232,  4326,  4320,   811,  4323,  4324,  4330,  4334,  4344,
    1302,  4336,  4359,  4165,  4360,  4383,  2677,  2516,  4364,  4373,
    3549,  2820,  3991,  3550,  1021,  3749,  4006,  1303,  4165,  4104,
    4232,  3747,   812,  4233,  3751,  1428,  4375,  3886,  4010,  4338,
     565,  4175,   925,  2300,  2675,   813,   814,  2225,   604,  3233,
    3081,  3860,  3234,  3861,  4134,  3863,  3864,  3866,  3867,  3868,
    3235,  3869,  4348,  4257,  3870,  3871,  4159,  4258,  3874,  4230,
    3875,  3876,  4171,  4170,  1916,  1493,   777,  2471,  1961,  3236,
    3217,  3103,  2711,  3392,   777,  3927,  3637,  1754,  4113,   815,
    3894,  4308,  4281,  4243,  4037,  4025,  3237,  2021,   640,  3567,
    3303,  2476,  2469,  2963,  4242,  3480,  2909,  3495,  3468,  3496,
    3535,  1047,  1920,  1921,  3843,  3693,  3725,  4182,   816,  3717,
    3238,   504,  3239,  1633,  3427,  3040,  3368,  3370,   885,  1550,
    1551,  1552,  1553,  1554,  3240,  3241,  3366,   505,   842,   886,
     817,  1078,   818,  4050,  4052,  2051,   604,  1923,  4053,  4012,
    4017,  4016,  2558,  3904,  1304,  4165,  3846,  1095,  3067,  2473,
    1926,  2897,   930,   887,   888,  4272,  2713,  3068,  1927,  4118,
    2349,  3696,  3469,  2283,   889,  3242,  3069,  1983,  2019,  3094,
    2695,  3389,  2736,  2648,  3881,   945,  1322,  2308,  3070,  3071,
    3072,  3377,  3063,  1929,  3439,   890,  2593,   891,  1587,   892,
    2800,  2647,  4252,  3243,  1140,  3073,   604,  1416,  1305,   893,
    4049,  1930,  3244,  3245,  4305,  3246,  4253,  3963,  3548,  2667,
    3475,  3816,  2929,  2929,  1539,  1306,  4126,  4329,  1555,  1556,
    1557,  1558,  4262,  3804,  4165,  1694,  4165,  2743,  2562,  4270,
    1935,  1742,  1769,  4325,  2719,  2693,  3639,  1408,  1409,  3404,
    3247,  3248,  3249,  3403,  4165,  3449,  1410, -1752,   894,  4180,
    4190,  4191,   934,   895,  2060,  1411,   896,  1039,  2339,  3250,
    3251,  3252,   921,  1817,  2340,  3479,  3253,  3391,  2219,  3254,
    4307,  4376,  1776,   777,  4327,  4165,  4165,  4201,  4251,  4382,
    4363,  3721,   897,  4385,   898,  1839,  3255,  3256,  3407,  1791,
    2319,   899,  3158,   900,  3431,  3653,  3807,   866,  4316,  1939,
    2263,  1783,  1309,  4321,  3918,  1735,  1940,  2041,  3924,  3082,
     868,  1314,   634,   635,     0,  1025,   901,   902,  1026,  3257,
    3258,  1941,  1027,  1559,     0,  1560,  1561,  1562,     0,     0,
       0,     0,     0,     0,  1563,     0,     0,     0,   903,  4356,
       0,     0,     0,     0,  3259,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   904,
       0,     0,     0,     0,  1633,     0,  4356,     0,     0,     0,
     777,   777,   777,   604,     0,     0,     0,  1633,     0,  1942,
       0,     0,  1633,     0,     0,   777,     0,  1633,     0,     0,
       0,   905,     0,     0,     0,     0,     0,  1943,  3260,     0,
       0,     0,  3261,     0,     0,     0,     0,     0,  3074,     0,
       0,   777,  1564,     0,  3262,     0,     0,   777,     0,     0,
     777,     0,   777,     0,     0,  3075,     0,     0,   777,  1449,
     777,   777,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1947,     0,     0,     0,     0,   906,     0,     0,  1949,
       0,     0,     0,     0,     0,     0,  3263,  1565,  1566,  3264,
       0,     0,  3265,  3266,  3267,  3268,     0,     0,     0,     0,
       0,   907,     0,     0,  1519,  1520,     0,     0,     0,     0,
       0,   908,   909,  1530,  1531,   910,   911,  1534,  1535,  1536,
       0,     0,     0,     0,     0,     0,   777,  1544,  1545,     0,
    1546,  1547,     0,     0,  3269,  3270,   912,     0,  1580,  1581,
    1582,  1583,     0,  1585,     0,     0,     0,     0,     0,  1955,
       0,  1593,  1594,     0,  1597,  1598,  3076,     0,     0,  3271,
       0,  1602,  1603,  1604,     0,     0,  1607,  1608,  1609,  1610,
    1611,  1612,  3077,  1614,     0,     0,  1617,  1618,     0,     0,
       0,  1621,   913,     0,     0,  1624,  1628,  1629,     0,     0,
       0,     0,     0,     0,     0,   914,     0,     0,  1636,  1637,
    1638,     0,     0,     0,     0,     0,  1956,  1646,     0,     0,
       0,     0,     0,     0,  1651,  1652,  1653,     0,     0,  1567,
   -2295,  1917,  1957,     0,   915,  1958,  3078,     0,  1918,  1919,
       0,     0,     0,     0,  1568,  1569,     0,     0,     0,     0,
    1920,  1921,   916,  3079,     0,     0,     0,  1689,     0,     0,
       0,     0,     0,     0,  1450,     0,     0,     0,     0,     0,
       0,  1960,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1922,     0,     0,     0,  1923,  1924,     0,     0,     0,
       0,  1925,     0,     0,     0,     0,     0,     0,  1926,     0,
       0,     0,     0,     0,     0,     0,  1927,     0,     0, -2295,
       0,     0,     0,     0,     0,   917,  1928,     0,     0,     0,
       0,     0,  1451,  1452,  1453,  1454,  1455,  1456,  1457,  1458,
    1459,  1929,  1460,  1461,  1462,  1463,  1464,  1465,  1466,  1467,
    1468,     0,  1469,  1470,     0,  1416,     0,     0,     0,  1930,
       0,     0,     0,     0,     0,     0,     0,  1931,  1932,     0,
       0,     0,     0,     0,  1933,     0,     0,   777,     0,     0,
       0,     0,  1934,     0,     0,     0,  -909,     0,  1935,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1936,
       0,     0,     0,     0,     0,  1790,     0,     0,     0,     0,
       0,     0,     0,  1804,     0,     0,     0,  1937,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   863,   796,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   777,
       0,     0,     0,   777,     0,  1938,     0,  1939,   777,   777,
       0,     0,     0,     0,  1940,     0,     0,   777,     0,     0,
     777,     0,     0,     0,     0,     0,     0,  1471,  1472,  1941,
     777,     0,   777,   777,     0,   777,   777,   777,   777,   777,
       0,     0,   777,     0,     0,     0,     0,     0,     0,     0,
       0,   777,     0,     0,     0,     0,     0,     0,   777,     0,
     777,     0,   777,   777,     0,   777,   777,     0,   797,     0,
     777,   777,   777,     0,     0,     0,   777,   777,   777,     0,
     777,     0,   777,     0,   777,     0,   777,  1942,   777,     0,
       0,     0,     0,   777,     0,     0,     0,     0,     0,   798,
       0,     0,     0,     0,     0,  1943,     1,     2,     0,  1944,
       0,     0,     0,   799,     0,   777,     0,     0,     0,     0,
       0,     0,   777,     3,     0,   777,     0,     4,     0,     0,
       0,   777,     0,     0,   777,     0,   800,     0,   777,   801,
       0,     5,     6,     0,     0,     0,     0,  1945,     0,     7,
     802,     0,  1946,     8,     9,     0,     0,     0,     0,  1947,
       0,     0,  2072,     0,  1948,     0,     0,  1949,    10,     0,
       0,   803,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    11,     0,     0,
       0,     0,     0,     0,     0,     0,   804,     0,  1950,     0,
     777,     0,   805,     0,     0,     0,     0,     0,     0,    12,
       0,     0,  1951,  1952,  1953,  1954,     0,     0,    13,    14,
      15,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    16,    17,     0,     0,     0,     0,  1955,     0,     0,
       0,   806,     0,     0,    18,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    19,  2146,
    2148,  2150,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    20,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    21,     0,
      22,     0,     0,     0,  1956,    23,     0,     0,    24,     0,
    2188,     0,     0,     0,     0,     0,     0,     0,     0,  2193,
    1957,  2194,     0,  1958,     0,     0,     0,     0,     0,     0,
       0,    25,     0,    26,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1959,     0,     0,    27,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1960,
       0,     0,     0,     0,     0,     0,    28,     0,     0,     0,
      29,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   807,     0,     0,     0,   864,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   809,     0,     0,  2279,     0,     0,     0,     0,
     810,     0,     0,     0,     0,     0,     0,     0,   811,  -909,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   812,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   813,
     814,     0,     0,     0,     0,    30,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    31,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    32,     0,     0,     0,     0,
       0,     0,     0,   815,     0,     0,    33,     0,     0,     0,
       0,     0,     0,     0,     0,   777,     0,     0,     0,   777,
       0,     0,     0,     0,     0,     0,     0,     0,    34,     0,
       0,    35,   816,    36,     0,     0,    37,     0,     0,    38,
      39,   777,   777,     0,     0,     0,     0,     0,     0,    40,
       0,    41,     0,     0,   817,     0,   818,     0,     0,    42,
       0,   777,     0,     0,     0,    43,     0,     0,     0,     0,
     777,     0,   777,    44,   777,     0,     0,     0,    45,     0,
      46,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   777,     0,     0,    47,     0,   777,
       0,    48,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   777,  2487,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    49,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    50,     0,     0,     0,
      51,     0,     0,    52,     0,     0,     0,     0,    53,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     1,     2,     0,     0,     0,
     777,     0,     0,     0,   777,     0,    54,     0,  2571,     0,
       0,     0,  2573,     0,     0,     0,     4,  2575,  2576,     0,
       0,    55,     0,     0,     0,     0,  2591,     0,     0,     0,
       5,     6,     0,     0,     0,     0,     0,     0,     7,  2598,
       0,  2599,     8,     9,  2601,  2602,  2603,  2604,  2605,     0,
       0,   777,     0,     0,     0,     0,     0,    10,     0,     0,
    2609,     0,     0,     0,     0,     0,     0,  2610,     0,  2611,
       0,  2612,  2613,     0,  2614,     0,    11,     0,     0,  2617,
    2618,  2619,     0,     0,     0,  2621,  2622,  2623,     0,  2624,
       0,  2626,     0,  2628,     0,  2630,     0,  2631,    12,     0,
       0,     0,  2632,     0,     0,     0,     0,    13,    14,    15,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      16,    17,     0,     0,  2655,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2665,     0,     0,  2668,     0,     0,     0,    19,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     777,   777,     0,    20,     0,     0,     0,     0,     0,     0,
       0,  2895,     0,     0,     0,     0,     0,    21,  1918,    22,
       0,     0,     0,     0,    23,     0,     0,    24,     0,     0,
    1920,  1921,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      25,     0,    26,     0,     0,     0,     0,     0,     0,     0,
       0,  1922,     0,   777,     0,  1923,     0,     0,    27,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1926,     0,
       0,     0,     0,     0,     0,    28,  1927,     0,     0,    29,
     777,   777,     0,   777,     0,     0,  1928,     0,  1920,  1921,
       0,     0,   777,     0,     0,     0,     0,   777,     0,     0,
     777,  1929,   777,   777,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1416,     0,     0,     0,  1930,
       0,  -772,  -772,  1923,     0,     0,     0,  1931,     0,     0,
       0,  -772,     0,     0,  2896,   777,  1926,     0,     0,     0,
       0,     0,  1934,     0,  1927,     0,     0,     0,  1935,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   777,     0,     0,     0,  1929,
       0,     0,     0,     0,    30,     0,     0,  1937,     0,     0,
       0,     0,     0,  1416,     0,     0,     0,  1930,   777,     0,
       0,    31,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    32,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    33,  1935,  1939,     0,     0,
     777,     0,     0,     0,  1940,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   777,     0,     0,    34,     0,  1941,
      35,     0,    36,     0,     0,    37,     0,     0,    38,    39,
       0,     0,     0,     0,     0,     0,     0,   777,    40,     0,
      41,     0,     0,     0,     0,   777,     0,     0,    42,     0,
       0,     0,     0,     0,    43,     0,     0,     0,     0,     0,
       0,     0,    44,     0,     0,  1939,     0,    45,     0,    46,
       0,     0,  1940,     0,     0,     0,     0,  1942,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1941,     0,     0,
       0,     0,     0,     0,     0,  1943,    47,     0,     0,  1944,
      48,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2975,     0,     0,     0,  2977,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1946,    49,     0,  1942,     0,     0,     0,  1947,
    2999,  3000,     0,     0,     0,    50,     0,  1949,     0,    51,
       0,     0,    52,  1943,     0,     0,     0,    53,     0,     0,
    3020,     0,     0,     0,     0,     0,     0,     0,     0,  3030,
       0,  3032,     0,  3034,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    54,     0,     0,     0,     0,
       0,     0,     0,  1952,     0,     0,     0,     0,     0,     0,
      55,     0,     0,     0,     0,     0,     0,  1947,     0,     0,
       0,     0,     0,     0,     0,  1949,     0,  1955,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3091,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   777,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1956,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1955,     0,     0,     0,     0,
    1957,   777,   777,  1958,     0,     0,     0,     0,     0,  3148,
     777,     0,     0,  3152,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1960,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1956,     0,     0,     0,     0,     0,     0,     0,
    3185,     0,     0,     0,     0,     0,     0,     0,  1957,     0,
       0,  1958,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1960,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     777,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3282,
    3283,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   777,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   777,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   777,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3327,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3347,
    3348,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3355,     0,     0,     0,     0,  3357,     0,     0,  3358,
       0,  3359,  3360,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3878,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3385,   777,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   777,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   777,  3385,   777,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   777,     0,     0,     0,     0,     0,
    3878,  3878,     0,  3432,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3385,     0,     0,     0,
       0,     0,     0,     0,  3460,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   777,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   777,     0,   777,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   777,     0,  3878,  3878,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4108,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   777,     0,  3878,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3878,   777,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3385,     0,  3878,     0,     0,
       0,     0,     0,     0,     0,   777,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3668,  3669,     0,     0,     0,     0,     0,     0,     0,  3185,
       0,     0,   777,  3878,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3878,  3878,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   777,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3878,     0,     0,     0,     0,     0,     0,   777,     0,
       0,  3878,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   777,     0,     0,     0,     0,     0,     0,  3878,     0,
    3878,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3878,     0,     0,     0,   777,     0,     0,   777,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3878,  3768,
    3878,     0,  3878,     0,     0,     0,     0,     0,     0,  3878,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3878,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3385,     0,  3878,  3878,     0,     0,     0,
       0,   777,     0,     0,     0,     0,     0,  3185,     0,     0,
       0,  3878,  3878,     0,     0,     0,  3878,     0,     0,     0,
    3148,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   777,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3950,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3956,     0,  3958,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3977,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3185,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4064,     0,  4065,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4073,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4163,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4168,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3385,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4215,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4264,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   136,     0,   649,   138,   139,   140,   141,     0,     0,
    4291,     0,     0,   142,     0,     0,   650,     0,   144,   145,
     146,   147,   148,   651,   150,     0,   151,     0,     0,   652,
     152,   653,   654,   655,   153,   656,  4310,   154,   155,   156,
    1625,   157,     0,   158,   159,     0,     0,   160,   657,   658,
     161,   162,     0,   163,   659,   660,   165,     0,   166,   167,
     168,   169,   661,   171,     0,   662,   173,     0,   174,   175,
     176,   177,   178,   179,   180,   181,     0,   182,   183,     0,
     184,   185,   186,   663,   188,     0,   189,   664,   665,   190,
    4357,     0,   191,   666,   192,   667,     0,   193,   668,   669,
       0,   194,   195,   196,   670,   671,   672,     0,     0,     0,
       0,   673,   199,   674,     0,     0,   675,   200,   201,     0,
     202,     0,     0,     0,   203,     0,   204,   205,   206,   207,
     208,     0,     0,     0,   209,     0,     0,   210,   211,   212,
    3385,     0,     0,   213,     0,   214,   215,     0,   216,   217,
     218,     0,     0,   219,   220,     0,   221,   222,   223,   224,
     225,   226,   676,     0,   227,   228,   229,   677,   678,   230,
     231,     0,   232,   233,   234,   679,     0,   235,     0,     0,
       0,   236,     0,   237,     0,   238,     0,   239,   680,   241,
     681,     0,   243,     0,   244,     0,   682,     0,   245,   246,
       0,   247,   683,     0,   248,   249,     0,     0,     0,   684,
     251,   252,   253,   685,     0,   254,   255,   256,     0,     0,
     257,     0,     0,     0,   686,   258,   259,   687,     0,     0,
     260,     0,   261,   262,     0,   263,   264,     0,     0,     0,
     265,     0,     0,   266,   267,     0,  1626,   268,     0,   688,
     269,   270,     0,     0,     0,     0,     0,   689,   272,     0,
     273,     0,   274,     0,   275,   276,     0,     0,   690,     0,
       0,     0,     0,     0,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,     0,   294,   295,   296,   691,   297,   298,   299,   300,
     692,   301,   302,     0,     0,     0,     0,   303,   304,   305,
     306,   693,   308,     0,     0,   694,   310,   695,   311,     0,
     312,   696,   697,   698,   699,   700,   317,   318,   319,   320,
     321,     0,   701,   322,   323,     0,     0,   324,   325,   326,
     327,   702,   703,   704,   328,   329,     0,   705,   706,   330,
       0,   331,   332,   707,     0,     0,   334,   335,     0,   336,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   337,
     338,   339,   708,   340,   341,     0,   342,   343,   709,   345,
     346,   347,   348,   710,   711,   351,   712,     0,   352,   353,
     354,     0,   355,     0,   356,   357,   358,   359,   360,     0,
     713,   362,   363,     0,     0,   364,     0,     0,     0,   365,
     366,   367,   368,   369,     0,     0,   370,   371,   372,   373,
     374,     0,   375,   376,     0,   377,   378,   379,   714,   715,
     380,     0,   381,     0,   382,   383,     0,   384,   385,   386,
       0,   716,     0,   717,   388,   389,   390,   391,   392,   718,
     719,   395,   396,   397,   398,     0,   720,   400,     0,     0,
       0,   401,   402,   403,   404,     0,     0,     0,   405,     0,
       0,     0,   406,     0,   407,   408,   409,   410,     0,   411,
     412,   413,   414,   415,     0,     0,     0,     0,     0,     0,
     416,   417,     0,   418,     0,     0,   419,     0,     0,   420,
     421,   422,   721,   722,   423,   424,     0,   425,   426,   723,
     428,   429,   430,   724,   725,   431,   432,   433,   434,   726,
     435,   436,     0,     0,   437,   438,   439,   440,     0,   727,
     441,   442,     0,   728,   729,   730,   731,     0,     0,     0,
       0,  1627,   447,   448,     0,   732,   733,   734,   450,   451,
     452,   735,   453,   454,   736,   455,   456,     0,   457,   458,
       0,     0,   459,     0,     0,   460,     0,   461,     0,   737,
     463,     0,     0,   738,   739,   740,   741,   464,     0,     0,
     465,   742,     0,   743,   466,   467,   468,   744,   745,     0,
       0,     0,     0,     0,     0,   471,   472,     0,   473,   474,
     475,     0,     0,   746,     0,     0,     0,   747,   748,     0,
       0,     0,     0,   749,   750,     0,     0,   751,   752,     0,
       0,   753,   754,   136,     0,   649,   138,   139,   140,   141,
    3144,     0,     0,     0,     0,   142,     0,     0,   650,     0,
     144,   145,   146,   147,   148,   651,   150,     0,   151,     0,
       0,  3145,   152,   653,   654,   655,   153,   656,     0,   154,
     155,   156,     0,   157,     0,   158,   159,     0,     0,   160,
     657,   658,   161,   162,     0,   163,   659,   660,   165,     0,
     166,   167,   168,   169,   661,   171,     0,   662,   173,     0,
     174,   175,   176,   177,   178,   179,   180,   181,     0,   182,
     183,     0,   184,   185,   186,   663,   188,     0,   189,   664,
     665,   190,     0,     0,   191,   666,   192,   667,     0,   193,
     668,   669,     0,   194,   195,   196,   670,   671,   672,     0,
       0,     0,     0,   673,   199,   674,     0,     0,  3146,   200,
     201,     0,   202,     0,     0,     0,   203,     0,   204,   205,
     206,   207,   208,     0,     0,     0,   209,     0,     0,   210,
     211,   212,     0,     0,     0,   213,     0,   214,   215,     0,
     216,   217,   218,     0,     0,   219,   220,     0,   221,   222,
     223,   224,   225,   226,   676,     0,   227,   228,   229,   677,
     678,   230,   231,     0,   232,   233,   234,   679,     0,   235,
       0,     0,     0,   236,     0,   237,     0,   238,     0,   239,
     680,   241,   681,     0,   243,     0,   244,     0,   682,     0,
     245,   246,     0,   247,   683,     0,   248,   249,     0,     0,
       0,   684,   251,   252,   253,   685,     0,   254,   255,   256,
       0,     0,   257,     0,     0,     0,   686,   258,   259,   687,
       0,     0,   260,     0,   261,   262,     0,   263,   264,     0,
       0,     0,   265,     0,     0,   266,   267,     0,     0,   268,
       0,   688,   269,   270,     0,     0,     0,     0,     0,   689,
     272,     0,   273,     0,   274,     0,   275,   276,     0,     0,
     690,     0,     0,     0,     0,     0,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,     0,   294,   295,   296,   691,   297,   298,
     299,   300,   692,   301,   302,     0,     0,     0,     0,   303,
     304,   305,   306,   693,   308,     0,     0,   694,   310,   695,
     311,     0,   312,   696,   697,   698,   699,   700,   317,   318,
     319,   320,   321,     0,   701,   322,   323,     0,     0,   324,
     325,   326,   327,   702,   703,   704,   328,   329,     0,   705,
     706,   330,     0,   331,   332,   707,  3147,     0,   334,   335,
       0,   336,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   337,   338,   339,   708,   340,   341,     0,   342,   343,
     709,   345,   346,   347,   348,   710,   711,   351,   712,     0,
     352,   353,   354,     0,   355,     0,   356,   357,   358,   359,
     360,     0,   713,   362,   363,     0,     0,   364,     0,     0,
       0,   365,   366,   367,   368,   369,     0,     0,   370,   371,
     372,   373,   374,     0,   375,   376,     0,   377,   378,   379,
     714,   715,   380,     0,   381,     0,   382,   383,     0,   384,
     385,   386,     0,   716,     0,   717,   388,   389,   390,   391,
     392,   718,   719,   395,   396,   397,   398,     0,   720,   400,
       0,     0,     0,   401,   402,   403,   404,     0,     0,     0,
     405,     0,     0,     0,   406,     0,   407,   408,   409,   410,
       0,   411,   412,   413,   414,   415,     0,     0,     0,     0,
       0,     0,   416,   417,     0,   418,     0,     0,   419,     0,
       0,   420,   421,   422,   721,   722,   423,   424,     0,   425,
     426,   723,   428,   429,   430,   724,   725,   431,   432,   433,
     434,   726,   435,   436,     0,     0,   437,   438,   439,   440,
       0,   727,   441,   442,     0,   728,   729,   730,   731,     0,
       0,     0,     0,     0,   447,   448,     0,   732,   733,   734,
     450,   451,   452,   735,   453,   454,   736,   455,   456,     0,
     457,   458,     0,     0,   459,     0,     0,   460,     0,   461,
       0,   737,   463,     0,     0,   738,   739,   740,   741,   464,
       0,     0,   465,   742,     0,   743,   466,   467,   468,   744,
     745,     0,     0,     0,     0,     0,     0,   471,   472,     0,
     473,   474,   475,     0,     0,   746,     0,     0,     0,   747,
     748,     0,     0,     0,     0,   749,   750,     0,     0,   751,
     752,     0,     0,   753,   754,   136,     0,   649,   138,   139,
     140,   141,     0,     0,     0,     0,     0,   142,     0,     0,
     650,     0,   144,   145,   146,   147,   148,   651,   150,     0,
     151,     0,     0,   652,   152,   653,   654,   655,   153,   656,
       0,   154,   155,   156,     0,   157,     0,   158,   159,     0,
       0,   160,   657,   658,   161,   162,     0,   163,   659,   660,
     165,     0,   166,   167,   168,   169,   661,   171,     0,   662,
     173,     0,   174,   175,   176,   177,   178,   179,   180,   181,
       0,   182,   183,     0,   184,   185,   186,   663,   188,     0,
     189,   664,   665,   190,     0,     0,   191,   666,   192,   667,
       0,   193,   668,   669,     0,   194,   195,   196,   670,   671,
     672,     0,     0,     0,     0,   673,   199,   674,     0,     0,
     675,   200,   201,     0,   202,     0,     0,     0,   203,     0,
     204,   205,   206,   207,   208,     0,     0,     0,   209,     0,
       0,   210,   211,   212,     0,     0,     0,   213,     0,   214,
     215,     0,   216,   217,   218,     0,     0,   219,   220,     0,
     221,   222,   223,   224,   225,   226,   676,     0,   227,   228,
     229,   677,   678,   230,   231,     0,   232,   233,   234,   679,
       0,   235,     0,     0,     0,   236,  2145,   237,     0,   238,
       0,   239,   680,   241,   681,     0,   243,     0,   244,     0,
     682,     0,   245,   246,     0,   247,   683,     0,   248,   249,
       0,     0,     0,   684,   251,   252,   253,   685,     0,   254,
     255,   256,     0,     0,   257,     0,     0,     0,   686,   258,
     259,   687,     0,     0,   260,     0,   261,   262,     0,   263,
     264,     0,     0,     0,   265,     0,     0,   266,   267,     0,
       0,   268,     0,   688,   269,   270,     0,     0,     0,     0,
       0,   689,   272,     0,   273,     0,   274,     0,   275,   276,
       0,     0,   690,     0,     0,     0,     0,     0,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,     0,   294,   295,   296,   691,
     297,   298,   299,   300,   692,   301,   302,     0,     0,     0,
       0,   303,   304,   305,   306,   693,   308,     0,     0,   694,
     310,   695,   311,     0,   312,   696,   697,   698,   699,   700,
     317,   318,   319,   320,   321,     0,   701,   322,   323,     0,
       0,   324,   325,   326,   327,   702,   703,   704,   328,   329,
       0,   705,   706,   330,     0,   331,   332,   707,     0,     0,
     334,   335,     0,   336,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   337,   338,   339,   708,   340,   341,     0,
     342,   343,   709,   345,   346,   347,   348,   710,   711,   351,
     712,     0,   352,   353,   354,     0,   355,     0,   356,   357,
     358,   359,   360,     0,   713,   362,   363,     0,     0,   364,
       0,     0,     0,   365,   366,   367,   368,   369,     0,     0,
     370,   371,   372,   373,   374,     0,   375,   376,     0,   377,
     378,   379,   714,   715,   380,     0,   381,     0,   382,   383,
       0,   384,   385,   386,     0,   716,     0,   717,   388,   389,
     390,   391,   392,   718,   719,   395,   396,   397,   398,     0,
     720,   400,     0,     0,     0,   401,   402,   403,   404,     0,
       0,     0,   405,     0,     0,     0,   406,     0,   407,   408,
     409,   410,     0,   411,   412,   413,   414,   415,     0,     0,
       0,     0,     0,     0,   416,   417,     0,   418,     0,     0,
     419,     0,     0,   420,   421,   422,   721,   722,   423,   424,
       0,   425,   426,   723,   428,   429,   430,   724,   725,   431,
     432,   433,   434,   726,   435,   436,     0,     0,   437,   438,
     439,   440,     0,   727,   441,   442,     0,   728,   729,   730,
     731,     0,     0,     0,     0,     0,   447,   448,     0,   732,
     733,   734,   450,   451,   452,   735,   453,   454,   736,   455,
     456,     0,   457,   458,     0,     0,   459,     0,     0,   460,
       0,   461,     0,   737,   463,     0,     0,   738,   739,   740,
     741,   464,     0,     0,   465,   742,     0,   743,   466,   467,
     468,   744,   745,     0,     0,     0,     0,     0,     0,   471,
     472,     0,   473,   474,   475,     0,     0,   746,     0,     0,
       0,   747,   748,     0,     0,     0,     0,   749,   750,     0,
       0,   751,   752,     0,     0,   753,   754,   136,     0,   649,
     138,   139,   140,   141,     0,     0,     0,     0,     0,   142,
       0,     0,   650,     0,   144,   145,   146,   147,   148,   651,
     150,     0,   151,     0,     0,   652,   152,   653,   654,   655,
     153,   656,     0,   154,   155,   156,     0,   157,     0,   158,
     159,     0,     0,   160,   657,   658,   161,   162,     0,   163,
     659,   660,   165,     0,   166,   167,   168,   169,   661,   171,
       0,   662,   173,     0,   174,   175,   176,   177,   178,   179,
     180,   181,     0,   182,   183,     0,   184,   185,   186,   663,
     188,     0,   189,   664,   665,   190,     0,     0,   191,   666,
     192,   667,     0,   193,   668,   669,     0,   194,   195,   196,
     670,   671,   672,     0,     0,     0,     0,   673,   199,   674,
       0,     0,   675,   200,   201,     0,   202,     0,     0,     0,
     203,     0,   204,   205,   206,   207,   208,     0,     0,     0,
     209,     0,     0,   210,   211,   212,     0,     0,     0,   213,
       0,   214,   215,     0,   216,   217,   218,     0,     0,   219,
     220,     0,   221,   222,   223,   224,   225,   226,   676,     0,
     227,   228,   229,   677,   678,   230,   231,     0,   232,   233,
     234,   679,     0,   235,     0,     0,     0,   236,  2147,   237,
       0,   238,     0,   239,   680,   241,   681,     0,   243,     0,
     244,     0,   682,     0,   245,   246,     0,   247,   683,     0,
     248,   249,     0,     0,     0,   684,   251,   252,   253,   685,
       0,   254,   255,   256,     0,     0,   257,     0,     0,     0,
     686,   258,   259,   687,     0,     0,   260,     0,   261,   262,
       0,   263,   264,     0,     0,     0,   265,     0,     0,   266,
     267,     0,     0,   268,     0,   688,   269,   270,     0,     0,
       0,     0,     0,   689,   272,     0,   273,     0,   274,     0,
     275,   276,     0,     0,   690,     0,     0,     0,     0,     0,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,     0,   294,   295,
     296,   691,   297,   298,   299,   300,   692,   301,   302,     0,
       0,     0,     0,   303,   304,   305,   306,   693,   308,     0,
       0,   694,   310,   695,   311,     0,   312,   696,   697,   698,
     699,   700,   317,   318,   319,   320,   321,     0,   701,   322,
     323,     0,     0,   324,   325,   326,   327,   702,   703,   704,
     328,   329,     0,   705,   706,   330,     0,   331,   332,   707,
       0,     0,   334,   335,     0,   336,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   337,   338,   339,   708,   340,
     341,     0,   342,   343,   709,   345,   346,   347,   348,   710,
     711,   351,   712,     0,   352,   353,   354,     0,   355,     0,
     356,   357,   358,   359,   360,     0,   713,   362,   363,     0,
       0,   364,     0,     0,     0,   365,   366,   367,   368,   369,
       0,     0,   370,   371,   372,   373,   374,     0,   375,   376,
       0,   377,   378,   379,   714,   715,   380,     0,   381,     0,
     382,   383,     0,   384,   385,   386,     0,   716,     0,   717,
     388,   389,   390,   391,   392,   718,   719,   395,   396,   397,
     398,     0,   720,   400,     0,     0,     0,   401,   402,   403,
     404,     0,     0,     0,   405,     0,     0,     0,   406,     0,
     407,   408,   409,   410,     0,   411,   412,   413,   414,   415,
       0,     0,     0,     0,     0,     0,   416,   417,     0,   418,
       0,     0,   419,     0,     0,   420,   421,   422,   721,   722,
     423,   424,     0,   425,   426,   723,   428,   429,   430,   724,
     725,   431,   432,   433,   434,   726,   435,   436,     0,     0,
     437,   438,   439,   440,     0,   727,   441,   442,     0,   728,
     729,   730,   731,     0,     0,     0,     0,     0,   447,   448,
       0,   732,   733,   734,   450,   451,   452,   735,   453,   454,
     736,   455,   456,     0,   457,   458,     0,     0,   459,     0,
       0,   460,     0,   461,     0,   737,   463,     0,     0,   738,
     739,   740,   741,   464,     0,     0,   465,   742,     0,   743,
     466,   467,   468,   744,   745,     0,     0,     0,     0,     0,
       0,   471,   472,     0,   473,   474,   475,     0,     0,   746,
       0,     0,     0,   747,   748,     0,     0,     0,     0,   749,
     750,     0,     0,   751,   752,     0,     0,   753,   754,   136,
       0,   649,   138,   139,   140,   141,     0,     0,     0,     0,
       0,   142,     0,     0,   650,     0,   144,   145,   146,   147,
     148,   651,   150,     0,   151,     0,     0,   652,   152,   653,
     654,   655,   153,   656,     0,   154,   155,   156,     0,   157,
       0,   158,   159,     0,     0,   160,   657,   658,   161,   162,
       0,   163,   659,   660,   165,     0,   166,   167,   168,   169,
     661,   171,     0,   662,   173,     0,   174,   175,   176,   177,
     178,   179,   180,   181,     0,   182,   183,     0,   184,   185,
     186,   663,   188,     0,   189,   664,   665,   190,     0,     0,
     191,   666,   192,   667,     0,   193,   668,   669,     0,   194,
     195,   196,   670,   671,   672,     0,     0,     0,     0,   673,
     199,   674,     0,     0,   675,   200,   201,     0,   202,     0,
       0,     0,   203,     0,   204,   205,   206,   207,   208,     0,
       0,     0,   209,     0,     0,   210,   211,   212,     0,     0,
       0,   213,     0,   214,   215,     0,   216,   217,   218,     0,
       0,   219,   220,     0,   221,   222,   223,   224,   225,   226,
     676,     0,   227,   228,   229,   677,   678,   230,   231,     0,
     232,   233,   234,   679,     0,   235,     0,     0,     0,   236,
    2149,   237,     0,   238,     0,   239,   680,   241,   681,     0,
     243,     0,   244,     0,   682,     0,   245,   246,     0,   247,
     683,     0,   248,   249,     0,     0,     0,   684,   251,   252,
     253,   685,     0,   254,   255,   256,     0,     0,   257,     0,
       0,     0,   686,   258,   259,   687,     0,     0,   260,     0,
     261,   262,     0,   263,   264,     0,     0,     0,   265,     0,
       0,   266,   267,     0,     0,   268,     0,   688,   269,   270,
       0,     0,     0,     0,     0,   689,   272,     0,   273,     0,
     274,     0,   275,   276,     0,     0,   690,     0,     0,     0,
       0,     0,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,     0,
     294,   295,   296,   691,   297,   298,   299,   300,   692,   301,
     302,     0,     0,     0,     0,   303,   304,   305,   306,   693,
     308,     0,     0,   694,   310,   695,   311,     0,   312,   696,
     697,   698,   699,   700,   317,   318,   319,   320,   321,     0,
     701,   322,   323,     0,     0,   324,   325,   326,   327,   702,
     703,   704,   328,   329,     0,   705,   706,   330,     0,   331,
     332,   707,     0,     0,   334,   335,     0,   336,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   337,   338,   339,
     708,   340,   341,     0,   342,   343,   709,   345,   346,   347,
     348,   710,   711,   351,   712,     0,   352,   353,   354,     0,
     355,     0,   356,   357,   358,   359,   360,     0,   713,   362,
     363,     0,     0,   364,     0,     0,     0,   365,   366,   367,
     368,   369,     0,     0,   370,   371,   372,   373,   374,     0,
     375,   376,     0,   377,   378,   379,   714,   715,   380,     0,
     381,     0,   382,   383,     0,   384,   385,   386,     0,   716,
       0,   717,   388,   389,   390,   391,   392,   718,   719,   395,
     396,   397,   398,     0,   720,   400,     0,     0,     0,   401,
     402,   403,   404,     0,     0,     0,   405,     0,     0,     0,
     406,     0,   407,   408,   409,   410,     0,   411,   412,   413,
     414,   415,     0,     0,     0,     0,     0,     0,   416,   417,
       0,   418,     0,     0,   419,     0,     0,   420,   421,   422,
     721,   722,   423,   424,     0,   425,   426,   723,   428,   429,
     430,   724,   725,   431,   432,   433,   434,   726,   435,   436,
       0,     0,   437,   438,   439,   440,     0,   727,   441,   442,
       0,   728,   729,   730,   731,     0,     0,     0,     0,     0,
     447,   448,     0,   732,   733,   734,   450,   451,   452,   735,
     453,   454,   736,   455,   456,     0,   457,   458,     0,     0,
     459,     0,     0,   460,     0,   461,     0,   737,   463,     0,
       0,   738,   739,   740,   741,   464,     0,     0,   465,   742,
       0,   743,   466,   467,   468,   744,   745,     0,     0,     0,
       0,     0,     0,   471,   472,     0,   473,   474,   475,     0,
       0,   746,     0,     0,     0,   747,   748,     0,     0,     0,
       0,   749,   750,     0,     0,   751,   752,     0,     0,   753,
     754,   136,     0,   649,   138,   139,   140,   141,     0,     0,
       0,     0,     0,   142,     0,     0,   650,     0,   144,   145,
     146,   147,   148,   651,   150,     0,   151,     0,     0,   652,
     152,   653,   654,   655,   153,   656,     0,   154,   155,   156,
       0,   157,     0,   158,   159,     0,     0,   160,   657,   658,
     161,   162,     0,   163,   659,   660,   165,     0,   166,   167,
     168,   169,   661,   171,     0,   662,   173,     0,   174,   175,
     176,   177,   178,   179,   180,   181,     0,   182,   183,     0,
     184,   185,   186,   663,   188,     0,   189,   664,   665,   190,
       0,     0,   191,   666,   192,   667,     0,   193,   668,   669,
       0,   194,   195,   196,   670,   671,   672,     0,     0,     0,
       0,   673,   199,   674,     0,     0,   675,   200,   201,     0,
     202,     0,     0,     0,   203,     0,   204,   205,   206,   207,
     208,     0,     0,     0,   209,     0,     0,   210,   211,   212,
       0,     0,     0,   213,     0,   214,   215,     0,   216,   217,
     218,     0,     0,   219,   220,     0,   221,   222,   223,   224,
     225,   226,   676,     0,   227,   228,   229,   677,   678,   230,
     231,     0,   232,   233,   234,   679,     0,   235,     0,     0,
       0,   236,     0,   237,     0,   238,     0,   239,   680,   241,
     681,     0,   243,     0,   244,     0,   682,     0,   245,   246,
       0,   247,   683,     0,   248,   249,     0,     0,     0,   684,
     251,   252,   253,   685,     0,   254,   255,   256,     0,     0,
     257,     0,     0,     0,   686,   258,   259,   687,     0,     0,
     260,     0,   261,   262,     0,   263,   264,     0,     0,     0,
     265,     0,     0,   266,   267,     0,     0,   268,     0,   688,
     269,   270,     0,     0,     0,     0,     0,   689,   272,     0,
     273,     0,   274,     0,   275,   276,     0,     0,   690,     0,
       0,     0,     0,     0,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,     0,   294,   295,   296,   691,   297,   298,   299,   300,
     692,   301,   302,     0,     0,     0,     0,   303,   304,   305,
     306,   693,   308,     0,     0,   694,   310,   695,   311,     0,
     312,   696,   697,   698,   699,   700,   317,   318,   319,   320,
     321,     0,   701,   322,   323,     0,     0,   324,   325,   326,
     327,   702,   703,   704,   328,   329,     0,   705,   706,   330,
       0,   331,   332,   707,     0,     0,   334,   335,     0,   336,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   337,
     338,   339,   708,   340,   341,     0,   342,   343,   709,   345,
     346,   347,   348,   710,   711,   351,   712,     0,   352,   353,
     354,     0,   355,     0,   356,   357,   358,   359,   360,     0,
     713,   362,   363,     0,     0,   364,     0,     0,     0,   365,
     366,   367,   368,   369,     0,     0,   370,   371,   372,   373,
     374,     0,   375,   376,     0,   377,   378,   379,   714,   715,
     380,     0,   381,     0,   382,   383,     0,   384,   385,   386,
       0,   716,     0,   717,   388,   389,   390,   391,   392,   718,
     719,   395,   396,   397,   398,     0,   720,   400,     0,     0,
       0,   401,   402,   403,   404,     0,     0,     0,   405,     0,
       0,     0,   406,     0,   407,   408,   409,   410,     0,   411,
     412,   413,   414,   415,     0,     0,     0,     0,     0,     0,
     416,   417,     0,   418,     0,     0,   419,     0,     0,   420,
     421,   422,   721,   722,   423,   424,     0,   425,   426,   723,
     428,   429,   430,   724,   725,   431,   432,   433,   434,   726,
     435,   436,     0,     0,   437,   438,   439,   440,     0,   727,
     441,   442,     0,   728,   729,   730,   731,     0,     0,     0,
       0,     0,   447,   448,     0,   732,   733,   734,   450,   451,
     452,   735,   453,   454,   736,   455,   456,     0,   457,   458,
       0,     0,   459,     0,     0,   460,     0,   461,     0,   737,
     463,     0,     0,   738,   739,   740,   741,   464,     0,     0,
     465,   742,     0,   743,   466,   467,   468,   744,   745,     0,
       0,     0,     0,     0,     0,   471,   472,     0,   473,   474,
     475,     0,     0,   746,     0,     0,     0,   747,   748,     0,
       0,     0,     0,   749,   750,     0,     0,   751,   752,     0,
       0,   753,   754,   136,     0,   649,   138,   139,   140,   141,
       0,     0,     0,     0,     0,   142,     0,     0,   650,     0,
     144,   145,   146,   147,   148,   651,   150,     0,   151,     0,
       0,   652,   152,   653,   654,   655,   153,   656,     0,   154,
     155,   156,     0,   157,     0,   158,   159,     0,     0,   160,
     657,   658,   161,   162,     0,   163,   659,   660,   165,     0,
     166,   167,   168,   169,   661,   171,     0,   662,   173,     0,
     174,   175,   176,   177,   178,   179,   180,   181,     0,   182,
     183,     0,   184,   185,   186,   663,   188,     0,   189,   664,
     665,   190,     0,     0,   191,   666,   192,   667,     0,   193,
     668,   669,     0,   194,   195,   196,   670,   671,   672,     0,
       0,     0,     0,   673,   199,   674,     0,     0,   675,   200,
     201,     0,   202,     0,     0,     0,   203,     0,   204,   205,
     206,   207,   208,     0,     0,     0,   209,     0,     0,   210,
     211,   212,     0,     0,     0,   213,     0,   214,   215,     0,
     216,   217,   218,     0,     0,   219,   220,     0,   221,   222,
     223,   224,   225,   226,   676,     0,   227,   228,   229,   677,
     678,   230,   231,     0,   232,   233,   234,   679,     0,   235,
       0,     0,     0,   236,     0,   237,     0,   238,     0,   239,
     680,   241,   681,     0,   243,     0,   244,     0,   682,     0,
     245,   246,     0,   247,   683,     0,   248,   249,     0,     0,
       0,   684,   251,   252,   253,   685,     0,   254,   255,   256,
       0,     0,   257,     0,     0,     0,   686,   258,   259,   687,
       0,     0,   260,     0,   261,   262,     0,   263,   264,     0,
       0,     0,   265,     0,     0,   266,   267,     0,     0,   268,
       0,   688,   269,   270,     0,     0,     0,     0,     0,   689,
     272,     0,   273,     0,   274,     0,   275,   276,     0,     0,
     690,     0,     0,     0,     0,     0,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,     0,   294,   295,   296,   691,   297,   298,
     299,   300,   692,   301,   302,     0,     0,     0,     0,   303,
     304,   305,   306,   693,   308,     0,     0,   694,   310,   695,
     311,     0,   312,   696,   697,   698,   699,   700,   317,   318,
     319,   320,   321,     0,   701,   322,   323,     0,     0,   324,
     325,   326,   327,   702,   703,   704,   328,   329,     0,   705,
     706,   330,     0,   331,   332,   707,     0,     0,   334,   335,
       0,   336,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   337,   338,   339,   708,   340,   341,     0,   342,   343,
     709,   345,   346,   347,   348,   710,   711,   351,   712,     0,
     352,   353,   354,     0,   355,     0,   356,   357,   358,   359,
     360,     0,   713,   362,   363,     0,     0,   364,     0,     0,
       0,   365,   366,   367,   368,   369,     0,     0,   370,   371,
     372,   373,   374,     0,   375,   376,     0,   377,   378,   379,
     714,   715,   380,     0,   381,     0,   382,   383,     0,   384,
     385,   386,     0,   716,     0,   717,   388,   389,   390,   391,
     392,   718,   719,   395,   396,   397,   398,     0,   720,   400,
       0,     0,     0,   401,   402,   403,   404,     0,     0,     0,
     405,     0,     0,     0,   406,     0,   407,   408,   409,   410,
       0,   411,   412,   413,   414,   415,     0,     0,     0,     0,
       0,     0,   416,   417,     0,   418,     0,     0,   419,     0,
       0,   420,   421,   422,   721,   722,   423,   424,     0,   425,
     426,   723,   428,   429,   430,   724,   725,   431,   432,   433,
     434,   726,   435,   436,     0,     0,   437,   438,   439,   440,
       0,   727,   441,   442,     0,   728,   729,   730,   731,     0,
       0,     0,     0,     0,   447,   448,     0,   732,   733,   734,
     450,   451,   452,   735,   453,   454,   736,   455,   456,     0,
     457,   458,     0,     0,   459,     0,     0,   460,     0,   461,
       0,   737,   463,     0,     0,   738,   739,   740,   741,   464,
       0,     0,   465,   742,     0,   743,   466,   467,   468,   744,
     745,     0,     0,     0,     0,     0,     0,   471,   472,     0,
     473,   474,   475,     0,     0,   746,     0,     0,     0,   747,
     748,     0,     0,     0,     0,   749,  1077,     0,     0,   751,
     752,     0,     0,   753,   754,   136,     0,   649,   138,   139,
     140,   141,  1660,     0,     0,     0,     0,  1661,     0,     0,
     650,     0,   144,   145,   146,   147,   148,   651,   150,     0,
     151,     0,     0,   652,   152,   653,   654,   655,   153,   656,
       0,   154,   155,   156,     0,   157,     0,   158,   159,     0,
       0,   160,   657,   658,   161,   162,     0,   163,   659,   660,
     165,     0,   166,   167,   168,   169,   661,   171,     0,   662,
     173,     0,   174,   175,   176,   177,   178,   179,   180,   181,
       0,   182,   183,     0,   184,   185,   186,   663,   188,     0,
     189,   664,   665,   190,     0,     0,   191,   666,   192,   667,
       0,   193,   668,   669,     0,   194,   195,   196,   670,   671,
     672,     0,     0,     0,     0,   673,   199,   674,     0,     0,
     675,   200,   201,     0,   202,     0,     0,     0,   203,     0,
     204,   205,   206,   207,   208,     0,     0,     0,   209,     0,
       0,   210,   211,   212,     0,     0,     0,   213,     0,   214,
     215,     0,   216,   217,   218,     0,     0,   219,   220,     0,
     221,   222,   223,   224,   225,   226,   676,     0,   227,   228,
     229,   677,   678,   230,   231,     0,   232,   233,   234,   679,
       0,   235,     0,     0,     0,   236,     0,   237,     0,   238,
       0,   239,   680,   241,   681,     0,   243,     0,   244,     0,
     682,     0,   245,   246,     0,   247,   683,     0,   248,   249,
       0,     0,     0,   684,   251,   252,   253,   685,     0,   254,
     255,   256,     0,     0,   257,     0,     0,     0,   686,   258,
     259,   687,     0,     0,   260,     0,   261,   262,     0,   263,
     264,     0,     0,     0,   265,     0,     0,   266,   267,     0,
       0,   268,     0,   688,   269,   270,     0,     0,     0,     0,
       0,   689,   272,     0,   273,     0,   274,     0,   275,   276,
       0,     0,   690,     0,     0,     0,     0,     0,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,     0,   294,   295,   296,   691,
     297,   298,   299,   300,   692,   301,   302,     0,     0,     0,
       0,   303,   304,   305,   306,   693,   308,     0,     0,   694,
     310,   695,   311,     0,   312,   696,   697,   698,   699,   700,
     317,   318,   319,   320,   321,     0,   701,   322,   323,     0,
       0,   324,   325,   326,   327,   702,     0,   704,   328,   329,
       0,   705,   706,   330,     0,   331,   332,   707,     0,     0,
     334,   335,     0,   336,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   337,   338,   339,   708,   340,   341,     0,
     342,   343,   709,   345,   346,   347,   348,   710,   711,   351,
     712,     0,   352,   353,   354,     0,   355,     0,   356,   357,
     358,   359,   360,     0,   713,   362,   363,     0,     0,   364,
       0,     0,     0,   365,   366,   367,   368,   369,     0,     0,
     370,   371,   372,   373,   374,     0,   375,   376,     0,   377,
     378,   379,   714,   715,   380,     0,   381,     0,   382,   383,
       0,   384,   385,   386,     0,   716,     0,   717,   388,   389,
     390,   391,   392,   718,   719,   395,   396,   397,   398,     0,
     720,   400,     0,     0,     0,   401,   402,   403,   404,     0,
       0,     0,   405,     0,     0,     0,   406,     0,   407,   408,
     409,   410,     0,   411,   412,   413,   414,   415,     0,     0,
       0,     0,     0,     0,   416,   417,     0,   418,     0,     0,
     419,     0,     0,   420,   421,   422,   721,   722,   423,   424,
       0,   425,   426,   723,   428,   429,   430,   724,   725,   431,
     432,   433,   434,   726,   435,   436,     0,     0,   437,   438,
     439,   440,     0,   727,   441,   442,     0,   728,   729,   730,
     731,     0,     0,     0,     0,     0,   447,   448,     0,   732,
     733,   734,   450,   451,   452,   735,   453,   454,   736,   455,
     456,     0,   457,   458,     0,     0,   459,     0,     0,   460,
       0,   461,     0,   737,   463,     0,     0,   738,   739,   740,
     741,   464,     0,     0,   465,   742,     0,   743,   466,   467,
     468,   744,   745,     0,     0,     0,     0,     0,     0,   471,
     472,     0,   473,   474,   475,     0,     0,   746,     0,     0,
       0,   747,   748,     0,     0,     0,     0,   749,   750,     0,
       0,   751,   752,     0,     0,   753,   754,   136,     0,   649,
     138,   139,   140,   141,     0,     0,     0,     0,     0,   142,
       0,     0,   650,     0,   144,   145,   146,   147,   148,   651,
     150,     0,   151,     0,     0,   652,   152,   653,   654,   655,
     153,   656,     0,   154,   155,   156,     0,   157,     0,   158,
     159,     0,     0,   160,   657,   658,   161,   162,     0,   163,
     659,   660,   165,     0,   166,   167,   168,   169,   661,   171,
       0,   662,   173,     0,   174,   175,   176,   177,   178,   179,
     180,   181,     0,   182,   183,     0,   184,   185,   186,   663,
     188,     0,   189,   664,   665,   190,     0,     0,   191,   666,
     192,   667,     0,   193,   668,   669,     0,   194,   195,   196,
     670,   671,   672,     0,     0,     0,     0,   673,   199,   674,
       0,     0,   675,   200,   201,     0,   202,     0,     0,     0,
     203,     0,   204,   205,   206,   207,   208,     0,     0,     0,
     209,     0,     0,   210,   211,   212,     0,     0,     0,   213,
       0,   214,   215,     0,   216,   217,   218,     0,     0,   219,
     220,     0,   221,   222,   223,   224,   225,   226,   676,     0,
     227,   228,   229,   677,   678,   230,   231,     0,   232,   233,
     234,   679,     0,   235,     0,     0,     0,   236,     0,   237,
       0,   238,     0,   239,   680,   241,   681,     0,   243,     0,
     244,     0,   682,     0,   245,   246,     0,   247,   683,     0,
     248,   249,     0,     0,     0,   684,   251,   252,   253,   685,
       0,   254,   255,   256,     0,     0,   257,     0,     0,     0,
     686,   258,   259,  2570,     0,     0,   260,     0,   261,   262,
       0,   263,   264,     0,     0,     0,   265,     0,     0,   266,
     267,     0,     0,   268,     0,   688,   269,   270,     0,     0,
       0,     0,     0,   689,   272,     0,   273,     0,   274,     0,
     275,   276,     0,     0,   690,     0,     0,     0,     0,     0,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,     0,   294,   295,
     296,   691,   297,   298,   299,   300,   692,   301,   302,     0,
       0,     0,     0,   303,   304,   305,   306,   693,   308,     0,
       0,   694,   310,   695,   311,     0,   312,   696,   697,   698,
     699,   700,   317,   318,   319,   320,   321,     0,   701,   322,
     323,     0,     0,   324,   325,   326,   327,   702,   703,   704,
     328,   329,     0,   705,   706,   330,     0,   331,   332,   707,
       0,     0,   334,   335,     0,   336,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   337,   338,   339,   708,   340,
     341,     0,   342,   343,   709,   345,   346,   347,   348,   710,
     711,   351,   712,     0,   352,   353,   354,     0,   355,     0,
     356,   357,   358,   359,   360,     0,   713,   362,   363,     0,
       0,   364,     0,     0,     0,   365,   366,   367,   368,   369,
       0,     0,   370,   371,   372,   373,   374,     0,   375,   376,
       0,   377,   378,   379,   714,   715,   380,     0,   381,     0,
     382,   383,     0,   384,   385,   386,     0,   716,     0,   717,
     388,   389,   390,   391,   392,   718,   719,   395,   396,   397,
     398,     0,   720,   400,     0,     0,     0,   401,   402,   403,
     404,     0,     0,     0,   405,     0,     0,     0,   406,     0,
     407,   408,   409,   410,     0,   411,   412,   413,   414,   415,
       0,     0,     0,     0,     0,     0,   416,   417,     0,   418,
       0,     0,   419,     0,     0,   420,   421,   422,   721,   722,
     423,   424,     0,   425,   426,   723,   428,   429,   430,   724,
     725,   431,   432,   433,   434,   726,   435,   436,     0,     0,
     437,   438,   439,   440,     0,   727,   441,   442,     0,   728,
     729,   730,   731,     0,     0,     0,     0,     0,   447,   448,
       0,   732,   733,   734,   450,   451,   452,   735,   453,   454,
     736,   455,   456,     0,   457,   458,     0,     0,   459,     0,
       0,   460,     0,   461,     0,   737,   463,     0,     0,   738,
     739,   740,   741,   464,     0,     0,   465,   742,     0,   743,
     466,   467,   468,   744,   745,     0,     0,     0,     0,     0,
       0,   471,   472,     0,   473,   474,   475,     0,     0,   746,
       0,     0,     0,   747,   748,     0,     0,     0,     0,   749,
     750,     0,     0,   751,   752,     0,     0,   753,   754,   136,
       0,   649,   138,   139,   140,   141,     0,     0,     0,     0,
       0,   142,     0,     0,   650,     0,   144,   145,   146,   147,
     148,   651,   150,     0,   151,     0,     0,   652,   152,   653,
     654,   655,   153,   656,     0,   154,   155,   156,     0,   157,
       0,   158,   159,     0,     0,   160,   657,   658,   161,   162,
       0,   163,   659,   660,   165,     0,   166,   167,   168,   169,
     661,   171,     0,   662,   173,     0,   174,   175,   176,   177,
     178,   179,   180,   181,     0,   182,   183,     0,   184,   185,
     186,   663,   188,     0,   189,   664,   665,   190,     0,     0,
     191,   666,   192,   667,     0,   193,   668,   669,     0,   194,
     195,   196,   670,   671,   672,     0,     0,     0,     0,   673,
     199,   674,     0,     0,   675,   200,   201,     0,   202,     0,
       0,     0,   203,     0,   204,   205,   206,   207,   208,     0,
       0,     0,   209,     0,     0,   210,   211,   212,     0,     0,
       0,   213,     0,   214,   215,     0,   216,   217,   218,     0,
       0,   219,   220,     0,   221,   222,   223,   224,   225,   226,
     676,     0,   227,   228,   229,   677,   678,   230,   231,     0,
     232,   233,   234,   679,     0,   235,     0,     0,     0,   236,
       0,   237,     0,   238,     0,   239,   680,   241,   681,     0,
     243,     0,   244,     0,   682,     0,   245,   246,     0,   247,
     683,     0,   248,   249,     0,     0,     0,   684,   251,   252,
     253,   685,     0,   254,   255,   256,     0,     0,   257,     0,
       0,     0,   686,   258,   259,  2616,     0,     0,   260,     0,
     261,   262,     0,   263,   264,     0,     0,     0,   265,     0,
       0,   266,   267,     0,     0,   268,     0,   688,   269,   270,
       0,     0,     0,     0,     0,   689,   272,     0,   273,     0,
     274,     0,   275,   276,     0,     0,   690,     0,     0,     0,
       0,     0,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,     0,
     294,   295,   296,   691,   297,   298,   299,   300,   692,   301,
     302,     0,     0,     0,     0,   303,   304,   305,   306,   693,
     308,     0,     0,   694,   310,   695,   311,     0,   312,   696,
     697,   698,   699,   700,   317,   318,   319,   320,   321,     0,
     701,   322,   323,     0,     0,   324,   325,   326,   327,   702,
     703,   704,   328,   329,     0,   705,   706,   330,     0,   331,
     332,   707,     0,     0,   334,   335,     0,   336,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   337,   338,   339,
     708,   340,   341,     0,   342,   343,   709,   345,   346,   347,
     348,   710,   711,   351,   712,     0,   352,   353,   354,     0,
     355,     0,   356,   357,   358,   359,   360,     0,   713,   362,
     363,     0,     0,   364,     0,     0,     0,   365,   366,   367,
     368,   369,     0,     0,   370,   371,   372,   373,   374,     0,
     375,   376,     0,   377,   378,   379,   714,   715,   380,     0,
     381,     0,   382,   383,     0,   384,   385,   386,     0,   716,
       0,   717,   388,   389,   390,   391,   392,   718,   719,   395,
     396,   397,   398,     0,   720,   400,     0,     0,     0,   401,
     402,   403,   404,     0,     0,     0,   405,     0,     0,     0,
     406,     0,   407,   408,   409,   410,     0,   411,   412,   413,
     414,   415,     0,     0,     0,     0,     0,     0,   416,   417,
       0,   418,     0,     0,   419,     0,     0,   420,   421,   422,
     721,   722,   423,   424,     0,   425,   426,   723,   428,   429,
     430,   724,   725,   431,   432,   433,   434,   726,   435,   436,
       0,     0,   437,   438,   439,   440,     0,   727,   441,   442,
       0,   728,   729,   730,   731,     0,     0,     0,     0,     0,
     447,   448,     0,   732,   733,   734,   450,   451,   452,   735,
     453,   454,   736,   455,   456,     0,   457,   458,     0,     0,
     459,     0,     0,   460,     0,   461,     0,   737,   463,     0,
       0,   738,   739,   740,   741,   464,     0,     0,   465,   742,
       0,   743,   466,   467,   468,   744,   745,     0,     0,     0,
       0,     0,     0,   471,   472,     0,   473,   474,   475,     0,
       0,   746,     0,     0,     0,   747,   748,     0,     0,     0,
       0,   749,   750,     0,     0,   751,   752,     0,     0,   753,
     754,   136,     0,   649,   138,   139,   140,   141,     0,     0,
       0,     0,     0,   142,     0,     0,   650,     0,   144,   145,
     146,   147,   148,   651,   150,     0,   151,     0,     0,   652,
     152,   653,   654,   655,   153,   656,     0,   154,   155,   156,
       0,   157,     0,   158,   159,     0,     0,   160,   657,   658,
     161,   162,     0,   163,   659,   660,   165,     0,   166,   167,
     168,   169,   661,   171,     0,   662,   173,     0,   174,   175,
     176,   177,   178,   179,   180,   181,     0,   182,   183,     0,
     184,   185,   186,   663,   188,     0,   189,   664,   665,   190,
       0,     0,   191,   666,   192,   667,     0,   193,   668,   669,
       0,   194,   195,   196,   670,   671,   672,     0,     0,     0,
       0,   673,   199,   674,     0,     0,  3384,   200,   201,     0,
     202,     0,     0,     0,   203,     0,   204,   205,   206,   207,
     208,     0,     0,     0,   209,     0,     0,   210,   211,   212,
       0,     0,     0,   213,     0,   214,   215,     0,   216,   217,
     218,     0,     0,   219,   220,     0,   221,   222,   223,   224,
     225,   226,   676,     0,   227,   228,   229,   677,   678,   230,
     231,     0,   232,   233,   234,   679,     0,   235,     0,     0,
       0,   236,     0,   237,     0,   238,     0,   239,   680,   241,
     681,     0,   243,     0,   244,     0,   682,     0,   245,   246,
       0,   247,   683,     0,   248,   249,     0,     0,     0,   684,
     251,   252,   253,   685,     0,   254,   255,   256,     0,     0,
     257,     0,     0,     0,   686,   258,   259,   687,     0,     0,
     260,     0,   261,   262,     0,   263,   264,     0,     0,     0,
     265,     0,     0,   266,   267,     0,     0,   268,     0,   688,
     269,   270,     0,     0,     0,     0,     0,   689,   272,     0,
     273,     0,   274,     0,   275,   276,     0,     0,   690,     0,
       0,     0,     0,     0,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,     0,   294,   295,   296,   691,   297,   298,   299,   300,
     692,   301,   302,     0,     0,     0,     0,   303,   304,   305,
     306,   693,   308,     0,     0,   694,   310,   695,   311,     0,
     312,   696,   697,   698,   699,   700,   317,   318,   319,   320,
     321,     0,   701,   322,   323,     0,     0,   324,   325,   326,
     327,   702,   703,   704,   328,   329,     0,   705,   706,   330,
       0,   331,   332,   707,     0,     0,   334,   335,     0,   336,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   337,
     338,   339,   708,   340,   341,     0,   342,   343,   709,   345,
     346,   347,   348,   710,   711,   351,   712,     0,   352,   353,
     354,     0,   355,     0,   356,   357,   358,   359,   360,     0,
     713,   362,   363,     0,     0,   364,     0,     0,     0,   365,
     366,   367,   368,   369,     0,     0,   370,   371,   372,   373,
     374,     0,   375,   376,     0,   377,   378,   379,   714,   715,
     380,     0,   381,     0,   382,   383,     0,   384,   385,   386,
       0,   716,     0,   717,   388,   389,   390,   391,   392,   718,
     719,   395,   396,   397,   398,     0,   720,   400,     0,     0,
       0,   401,   402,   403,   404,     0,     0,     0,   405,     0,
       0,     0,   406,     0,   407,   408,   409,   410,     0,   411,
     412,   413,   414,   415,     0,     0,     0,     0,     0,     0,
     416,   417,     0,   418,     0,     0,   419,     0,     0,   420,
     421,   422,   721,   722,   423,   424,     0,   425,   426,   723,
     428,   429,   430,   724,   725,   431,   432,   433,   434,   726,
     435,   436,     0,     0,   437,   438,   439,   440,     0,   727,
     441,   442,     0,   728,   729,   730,   731,     0,     0,     0,
       0,     0,   447,   448,     0,   732,   733,   734,   450,   451,
     452,   735,   453,   454,   736,   455,   456,     0,   457,   458,
       0,     0,   459,     0,     0,   460,     0,   461,     0,   737,
     463,     0,     0,   738,   739,   740,   741,   464,     0,     0,
     465,   742,     0,   743,   466,   467,   468,   744,   745,     0,
       0,     0,     0,     0,     0,   471,   472,     0,   473,   474,
     475,     0,     0,   746,     0,     0,     0,   747,   748,     0,
       0,     0,     0,   749,   750,     0,     0,   751,   752,     0,
       0,   753,   754,   136,     0,   649,   138,   139,   140,   141,
       0,     0,     0,     0,     0,   142,     0,     0,   650,     0,
     144,   145,   146,   147,   148,   651,   150,     0,   151,     0,
       0,   652,   152,   653,   654,   655,   153,   656,     0,   154,
     155,   156,     0,   157,     0,   158,   159,     0,     0,   160,
     657,   658,   161,   162,     0,   163,   659,   660,   165,     0,
     166,   167,   168,   169,   661,   171,     0,   662,   173,     0,
     174,   175,   176,   177,   178,   179,   180,   181,     0,   182,
     183,     0,   184,   185,   186,   663,   188,     0,   189,   664,
     665,   190,     0,     0,   191,   666,   192,   667,     0,   193,
     668,   669,     0,   194,   195,   196,   670,   671,   672,     0,
       0,     0,     0,   673,   199,   674,     0,     0,   675,   200,
     201,     0,   202,     0,     0,     0,   203,     0,   204,   205,
     206,   207,   208,     0,     0,     0,   209,     0,     0,   210,
     211,   212,     0,     0,     0,   213,     0,   214,   215,     0,
     216,   217,   218,     0,     0,   219,   220,     0,   221,   222,
     223,   224,   225,   226,   676,     0,   227,   228,   229,   677,
     678,   230,   231,     0,   232,   233,   234,   679,     0,   235,
       0,     0,     0,   236,     0,   237,     0,   238,     0,   239,
     680,   241,   681,     0,   243,     0,   244,     0,   682,     0,
     245,   246,     0,   247,   683,     0,   248,   249,     0,     0,
       0,   684,   251,   252,   253,   685,     0,   254,   255,   256,
       0,     0,   257,     0,     0,     0,   686,   258,   259,   687,
       0,     0,   260,     0,   261,   262,     0,   263,   264,     0,
       0,     0,   265,     0,     0,   266,   267,     0,     0,   268,
       0,   688,   269,   270,     0,     0,     0,     0,     0,   689,
     272,     0,   273,     0,   274,     0,   275,   276,     0,     0,
     690,     0,     0,     0,     0,     0,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,     0,   294,   295,   296,   691,   297,   298,
     299,   300,   692,   301,   302,  4237,     0,     0,     0,   303,
     304,   305,   306,   693,   308,     0,     0,   694,   310,   695,
     311,     0,   312,   696,   697,   698,   699,   700,   317,   318,
     319,   320,   321,     0,   701,   322,   323,     0,     0,   324,
     325,   326,   327,   702,     0,   704,   328,   329,     0,   705,
     706,   330,     0,   331,   332,   707,     0,     0,   334,   335,
       0,   336,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   337,   338,   339,   708,   340,   341,     0,   342,   343,
     709,   345,   346,   347,   348,   710,   711,   351,   712,     0,
     352,   353,   354,     0,   355,     0,   356,   357,   358,   359,
     360,     0,   713,   362,   363,     0,     0,   364,     0,     0,
       0,   365,   366,   367,   368,   369,     0,     0,   370,   371,
     372,   373,   374,     0,   375,   376,     0,   377,   378,   379,
     714,   715,   380,     0,   381,     0,   382,   383,     0,   384,
     385,   386,     0,   716,     0,   717,   388,   389,   390,   391,
     392,   718,   719,   395,   396,   397,   398,     0,   720,   400,
       0,     0,     0,   401,   402,   403,   404,     0,     0,     0,
     405,     0,     0,     0,   406,     0,   407,   408,   409,   410,
       0,   411,   412,   413,   414,   415,     0,     0,     0,     0,
       0,     0,   416,   417,     0,   418,     0,     0,   419,     0,
       0,   420,   421,   422,   721,   722,   423,   424,     0,   425,
     426,   723,   428,   429,   430,   724,   725,   431,   432,   433,
     434,   726,   435,   436,     0,     0,   437,   438,   439,   440,
       0,   727,   441,   442,     0,   728,   729,   730,   731,     0,
       0,     0,     0,     0,   447,   448,     0,   732,   733,   734,
     450,   451,   452,   735,   453,   454,   736,   455,   456,     0,
     457,   458,     0,     0,   459,     0,     0,   460,     0,   461,
       0,   737,   463,     0,     0,   738,   739,   740,   741,   464,
       0,     0,   465,   742,     0,   743,   466,   467,   468,   744,
     745,     0,     0,     0,     0,     0,     0,   471,   472,     0,
     473,   474,   475,     0,     0,   746,     0,     0,     0,   747,
     748,     0,     0,     0,     0,   749,   750,     0,     0,   751,
     752,     0,     0,   753,   754,   136,     0,   649,   138,   139,
     140,   141,     0,     0,     0,     0,     0,   142,     0,     0,
     650,     0,   144,   145,   146,   147,   148,   651,   150,     0,
     151,     0,     0,   652,   152,   653,   654,   655,   153,   656,
       0,   154,   155,   156,     0,   157,     0,   158,   159,     0,
       0,   160,   657,   658,   161,   162,     0,   163,   659,   660,
     165,     0,   166,   167,   168,   169,   661,   171,     0,   662,
     173,     0,   174,   175,   176,   177,   178,   179,   180,   181,
       0,   182,   183,     0,   184,   185,   186,   663,   188,     0,
     189,   664,   665,   190,     0,     0,   191,   666,   192,   667,
       0,   193,   668,   669,     0,   194,   195,   196,   670,   671,
     672,     0,     0,     0,     0,   673,   199,   674,     0,     0,
     675,   200,   201,     0,   202,     0,     0,     0,   203,     0,
     204,   205,   206,   207,   208,     0,     0,     0,   209,     0,
       0,   210,   211,   212,     0,     0,     0,   213,     0,   214,
     215,     0,   216,   217,   218,     0,     0,   219,   220,     0,
     221,   222,   223,   224,   225,   226,   676,     0,   227,   228,
     229,   677,   678,   230,   231,     0,   232,   233,   234,   679,
       0,   235,     0,     0,     0,   236,     0,   237,     0,   238,
       0,   239,   680,   241,   681,     0,   243,     0,   244,     0,
     682,     0,   245,   246,     0,   247,   683,     0,   248,   249,
       0,     0,     0,   684,   251,   252,   253,   685,     0,   254,
     255,   256,     0,     0,   257,     0,     0,     0,   686,   258,
     259,   687,     0,     0,   260,     0,   261,   262,     0,   263,
     264,     0,     0,     0,   265,     0,     0,   266,   267,     0,
       0,   268,     0,   688,   269,   270,     0,     0,     0,     0,
       0,   689,   272,     0,   273,     0,   274,     0,   275,   276,
       0,     0,   690,     0,     0,     0,     0,     0,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,     0,   294,   295,   296,   691,
     297,   298,   299,   300,   692,   301,   302,     0,     0,     0,
       0,   303,   304,   305,   306,   693,   308,     0,     0,   694,
     310,   695,   311,     0,   312,   696,   697,   698,   699,   700,
     317,   318,   319,   320,   321,     0,   701,   322,   323,     0,
       0,   324,   325,   326,   327,   702,     0,   704,   328,   329,
       0,   705,   706,   330,     0,   331,   332,   707,     0,     0,
     334,   335,     0,   336,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   337,   338,   339,   708,   340,   341,     0,
     342,   343,   709,   345,   346,   347,   348,   710,   711,   351,
     712,     0,   352,   353,   354,     0,   355,     0,   356,   357,
     358,   359,   360,     0,   713,   362,   363,     0,     0,   364,
       0,     0,     0,   365,   366,   367,   368,   369,     0,     0,
     370,   371,   372,   373,   374,     0,   375,   376,     0,   377,
     378,   379,   714,   715,   380,     0,   381,     0,   382,   383,
       0,   384,   385,   386,     0,   716,     0,   717,   388,   389,
     390,   391,   392,   718,   719,   395,   396,   397,   398,     0,
     720,   400,     0,     0,     0,   401,   402,   403,   404,     0,
       0,     0,   405,     0,     0,     0,   406,     0,   407,   408,
     409,   410,     0,   411,   412,   413,   414,   415,     0,     0,
       0,     0,     0,     0,   416,   417,     0,   418,     0,     0,
     419,     0,     0,   420,   421,   422,   721,   722,   423,   424,
       0,   425,   426,   723,   428,   429,   430,   724,   725,   431,
     432,   433,   434,   726,   435,   436,     0,     0,   437,   438,
     439,   440,     0,   727,   441,   442,     0,   728,   729,   730,
     731,     0,     0,     0,     0,     0,   447,   448,     0,   732,
     733,   734,   450,   451,   452,   735,   453,   454,   736,   455,
     456,     0,   457,   458,     0,     0,   459,     0,     0,   460,
       0,   461,     0,   737,   463,     0,     0,   738,   739,   740,
     741,   464,     0,     0,   465,   742,     0,   743,   466,   467,
     468,   744,   745,     0,     0,     0,     0,     0,     0,   471,
     472,     0,   473,   474,   475,     0,     0,   746,     0,     0,
       0,   747,   748,     0,     0,     0,     0,   749,   750,     0,
       0,   751,   752,     0,     0,   753,   754,   136,     0,   649,
     138,   139,   140,   141,     0,     0,     0,     0,     0,   142,
       0,     0,   650,     0,   144,   145,   146,   147,   148,   651,
     150,     0,   151,     0,     0,   652,   152,   653,   654,   655,
     153,   656,     0,   154,   155,   156,     0,   157,     0,   158,
     159,     0,     0,   160,   657,   658,   161,   162,     0,   163,
     659,   660,   165,     0,   166,   167,   168,   169,   661,   171,
       0,   662,   173,     0,   174,   175,   176,   177,   178,   179,
     180,   181,     0,   182,   183,     0,   184,   185,   186,   663,
     188,     0,   189,   664,   665,   190,     0,     0,   191,   666,
     192,   667,     0,   193,   668,   669,     0,   194,   195,   196,
     670,   671,   672,     0,     0,     0,     0,   673,   199,   674,
       0,     0,   675,   200,   201,     0,   202,     0,     0,     0,
     203,     0,   204,   205,   206,   207,   208,     0,     0,     0,
     209,     0,     0,   210,   211,   212,     0,     0,     0,   213,
       0,   214,   215,     0,   216,   217,   218,     0,     0,   219,
     220,     0,   221,   222,   223,   224,   225,   226,   676,     0,
     227,   228,   229,   677,   678,   230,   231,     0,   232,   233,
     234,   679,     0,   235,     0,     0,     0,   236,     0,   237,
       0,   238,     0,   239,   680,   241,   681,     0,   243,     0,
     244,     0,   682,     0,   245,   246,     0,   247,   683,     0,
     248,   249,     0,     0,     0,   684,   251,   252,   253,   685,
       0,   254,   255,   256,     0,     0,   257,     0,     0,     0,
     686,   258,   259,  1675,     0,     0,   260,     0,   261,   262,
       0,   263,   264,     0,     0,     0,   265,     0,     0,   266,
     267,     0,     0,   268,     0,   688,   269,   270,     0,     0,
       0,     0,     0,   689,   272,     0,   273,     0,   274,     0,
     275,   276,     0,     0,   690,     0,     0,     0,     0,     0,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,     0,   294,   295,
     296,   691,   297,   298,   299,   300,   692,   301,   302,     0,
       0,     0,     0,   303,   304,   305,   306,   693,   308,     0,
       0,   694,   310,   695,   311,     0,   312,   696,   697,   698,
     699,   700,   317,   318,   319,   320,   321,     0,   701,   322,
     323,     0,     0,   324,   325,   326,   327,   702,     0,   704,
     328,   329,     0,   705,   706,   330,     0,   331,   332,   707,
       0,     0,   334,   335,     0,   336,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   337,   338,   339,   708,   340,
     341,     0,   342,   343,   709,   345,   346,   347,   348,   710,
     711,   351,   712,     0,   352,   353,   354,     0,   355,     0,
     356,   357,   358,   359,   360,     0,   713,   362,   363,     0,
       0,   364,     0,     0,     0,   365,   366,   367,   368,   369,
       0,     0,   370,   371,   372,   373,   374,     0,   375,   376,
       0,   377,   378,   379,   714,   715,   380,     0,   381,     0,
     382,   383,     0,   384,   385,   386,     0,   716,     0,   717,
     388,   389,   390,   391,   392,   718,   719,   395,   396,   397,
     398,     0,   720,   400,     0,     0,     0,   401,   402,   403,
     404,     0,     0,     0,   405,     0,     0,     0,   406,     0,
     407,   408,   409,   410,     0,   411,   412,   413,   414,   415,
       0,     0,     0,     0,     0,     0,   416,   417,     0,   418,
       0,     0,   419,     0,     0,   420,   421,   422,   721,   722,
     423,   424,     0,   425,   426,   723,   428,   429,   430,   724,
     725,   431,   432,   433,   434,   726,   435,   436,     0,     0,
     437,   438,   439,   440,     0,   727,   441,   442,     0,   728,
     729,   730,   731,     0,     0,     0,     0,     0,   447,   448,
       0,   732,   733,   734,   450,   451,   452,   735,   453,   454,
     736,   455,   456,     0,   457,   458,     0,     0,   459,     0,
       0,   460,     0,   461,     0,   737,   463,     0,     0,   738,
     739,   740,   741,   464,     0,     0,   465,   742,     0,   743,
     466,   467,   468,   744,   745,     0,     0,     0,     0,     0,
       0,   471,   472,     0,   473,   474,   475,     0,     0,   746,
       0,     0,     0,   747,   748,     0,     0,     0,     0,   749,
     750,     0,     0,   751,   752,     0,     0,   753,   754,   136,
       0,   649,   138,   139,   140,   141,     0,     0,     0,     0,
       0,   142,     0,     0,   650,     0,   144,   145,   146,   147,
     148,   651,   150,     0,   151,     0,     0,   652,   152,   653,
     654,   655,   153,   656,     0,   154,   155,   156,     0,   157,
       0,   158,   159,     0,     0,   160,   657,   658,   161,   162,
       0,   163,   659,   660,   165,     0,   166,   167,   168,   169,
     661,   171,     0,   662,   173,     0,   174,   175,   176,   177,
     178,   179,   180,   181,     0,   182,   183,     0,   184,   185,
     186,   663,   188,     0,   189,   664,   665,   190,     0,     0,
     191,   666,   192,   667,     0,   193,   668,   669,     0,   194,
     195,   196,   670,   671,   672,     0,     0,     0,     0,   673,
     199,   674,     0,     0,   675,   200,   201,     0,   202,     0,
       0,     0,   203,     0,   204,   205,   206,   207,   208,     0,
       0,     0,   209,     0,     0,   210,   211,   212,     0,     0,
       0,   213,     0,   214,   215,     0,   216,   217,   218,     0,
       0,   219,   220,     0,   221,   222,   223,   224,   225,   226,
     676,     0,   227,   228,   229,   677,   678,   230,   231,     0,
     232,   233,   234,   679,     0,   235,     0,     0,     0,   236,
       0,   237,     0,   238,     0,   239,   680,   241,   681,     0,
     243,     0,   244,     0,   682,     0,   245,   246,     0,   247,
     683,     0,   248,   249,     0,     0,     0,   684,   251,   252,
     253,   685,     0,   254,   255,   256,     0,     0,   257,     0,
       0,     0,   686,   258,   259,  1677,     0,     0,   260,     0,
     261,   262,     0,   263,   264,     0,     0,     0,   265,     0,
       0,   266,   267,     0,     0,   268,     0,   688,   269,   270,
       0,     0,     0,     0,     0,   689,   272,     0,   273,     0,
     274,     0,   275,   276,     0,     0,   690,     0,     0,     0,
       0,     0,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,     0,
     294,   295,   296,   691,   297,   298,   299,   300,   692,   301,
     302,     0,     0,     0,     0,   303,   304,   305,   306,   693,
     308,     0,     0,   694,   310,   695,   311,     0,   312,   696,
     697,   698,   699,   700,   317,   318,   319,   320,   321,     0,
     701,   322,   323,     0,     0,   324,   325,   326,   327,   702,
       0,   704,   328,   329,     0,   705,   706,   330,     0,   331,
     332,   707,     0,     0,   334,   335,     0,   336,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   337,   338,   339,
     708,   340,   341,     0,   342,   343,   709,   345,   346,   347,
     348,   710,   711,   351,   712,     0,   352,   353,   354,     0,
     355,     0,   356,   357,   358,   359,   360,     0,   713,   362,
     363,     0,     0,   364,     0,     0,     0,   365,   366,   367,
     368,   369,     0,     0,   370,   371,   372,   373,   374,     0,
     375,   376,     0,   377,   378,   379,   714,   715,   380,     0,
     381,     0,   382,   383,     0,   384,   385,   386,     0,   716,
       0,   717,   388,   389,   390,   391,   392,   718,   719,   395,
     396,   397,   398,     0,   720,   400,     0,     0,     0,   401,
     402,   403,   404,     0,     0,     0,   405,     0,     0,     0,
     406,     0,   407,   408,   409,   410,     0,   411,   412,   413,
     414,   415,     0,     0,     0,     0,     0,     0,   416,   417,
       0,   418,     0,     0,   419,     0,     0,   420,   421,   422,
     721,   722,   423,   424,     0,   425,   426,   723,   428,   429,
     430,   724,   725,   431,   432,   433,   434,   726,   435,   436,
       0,     0,   437,   438,   439,   440,     0,   727,   441,   442,
       0,   728,   729,   730,   731,     0,     0,     0,     0,     0,
     447,   448,     0,   732,   733,   734,   450,   451,   452,   735,
     453,   454,   736,   455,   456,     0,   457,   458,     0,     0,
     459,     0,     0,   460,     0,   461,     0,   737,   463,     0,
       0,   738,   739,   740,   741,   464,     0,     0,   465,   742,
       0,   743,   466,   467,   468,   744,   745,     0,     0,     0,
       0,     0,     0,   471,   472,     0,   473,   474,   475,     0,
       0,   746,     0,     0,     0,   747,   748,     0,     0,     0,
       0,   749,   750,     0,     0,   751,   752,     0,     0,   753,
     754,   136,     0,   137,   138,   139,   140,   141,     0,     0,
       0,     0,     0,   142,     0,     0,   143,     0,   144,   145,
     146,   147,   148,   149,   150,     0,   151,     0,     0,     0,
     152,   653,     0,     0,   153,     0,     0,   154,   155,   156,
       0,   157,     0,   158,   159,     0,     0,   160,     0,     0,
     161,   162,     0,   163,   164,     0,   165,     0,   166,   167,
     168,   169,   170,   171,     0,   172,   173,     0,   174,   175,
     176,   177,   178,   179,   180,   181,     0,   182,   183,     0,
     184,   185,   186,   187,   188,     0,   189,     0,     0,   190,
       0,     0,   191,     0,   192,     0,     0,   193,     0,     0,
       0,   194,   195,   196,     0,     0,  1713,     0,     0,     0,
       0,   198,   199,   674,     0,     0,     0,   200,   201,     0,
     202,     0,     0,     0,   203,     0,   204,   205,   206,   207,
     208,     0,     0,     0,   209,     0,     0,   210,   211,   212,
       0,     0,     0,   213,     0,   214,   215,     0,   216,   217,
     218,     0,     0,   219,   220,     0,   221,   222,   223,   224,
     225,   226,     0,     0,   227,   228,   229,     0,   678,   230,
     231,     0,   232,   233,   234,   679,     0,   235,     0,     0,
       0,   236,     0,   237,     0,   238,     0,   239,   240,   241,
     242,     0,   243,     0,   244,     0,     0,     0,   245,   246,
       0,   247,   683,     0,   248,   249,     0,     0,     0,   250,
     251,   252,   253,     0,     0,   254,   255,   256,     0,     0,
     257,     0,     0,     0,     0,   258,   259,     0,     0,     0,
     260,     0,   261,   262,     0,   263,   264,     0,     0,     0,
     265,     0,     0,   266,   267,     0,     0,   268,     0,     0,
     269,   270,     0,     0,     0,     0,     0,   271,   272,     0,
     273,     0,   274,     0,   275,   276,     0,     0,   690,     0,
       0,     0,     0,     0,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,     0,   294,   295,   296,     0,   297,   298,   299,   300,
       0,   301,   302,     0,     0,     0,     0,   303,   304,   305,
     306,   307,   308,     0,     0,   309,   310,     0,   311,     0,
     312,     0,   313,   314,   315,   316,   317,   318,   319,   320,
     321,     0,   701,   322,   323,     0,     0,   324,   325,   326,
     327,     0,     0,     0,   328,   329,     0,   705,   706,   330,
       0,   331,   332,   333,     0,     0,   334,   335,     0,   336,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   337,
     338,   339,     0,   340,   341,     0,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,     0,     0,   352,   353,
     354,     0,   355,     0,   356,   357,   358,   359,   360,     0,
     361,   362,   363,     0,     0,   364,     0,     0,     0,   365,
     366,   367,   368,   369,     0,     0,   370,   371,   372,   373,
     374,     0,   375,   376,     0,   377,   378,   379,     0,     0,
     380,     0,   381,     0,   382,   383,     0,   384,   385,   386,
       0,   387,     0,     0,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,     0,   399,   400,     0,     0,
       0,   401,   402,   403,   404,     0,     0,     0,   405,     0,
       0,     0,   406,     0,   407,   408,   409,   410,     0,   411,
     412,   413,   414,   415,     0,     0,     0,     0,     0,     0,
     416,   417,     0,   418,     0,     0,   419,     0,     0,   420,
     421,   422,     0,     0,   423,   424,     0,   425,   426,   427,
     428,   429,   430,     0,     0,   431,   432,   433,   434,     0,
     435,   436,     0,     0,   437,   438,   439,   440,     0,   727,
     441,   442,     0,  1714,   444,   445,  1715,     0,     0,     0,
       0,     0,   447,   448,     0,     0,   733,   449,   450,   451,
     452,   735,   453,   454,   736,   455,   456,     0,   457,   458,
       0,     0,   459,     0,     0,   460,     0,   461,     0,   462,
     463,     0,     0,     0,     0,     0,     0,   464,     0,     0,
     465,     0,     0,     0,   466,   467,   468,   469,   470,     0,
       0,     0,     0,     0,     0,   471,   472,     0,   473,   474,
     475,     0,     0,   476,     0,     0,     0,     0,   136,     0,
     137,   138,   139,   140,   141,     0,     0,     0,     0,     0,
     142,   753,   754,   143,     0,   144,   145,   146,   147,   148,
     149,   150,     0,   151,     0,     0,     0,   152,     0,     0,
       0,   153,     0,     0,   154,   155,   156,     0,   157,     0,
     158,   159,     0,     0,   160,     0,     0,   161,   162,     0,
     163,   164,     0,   165,     0,   166,   167,   168,   169,   170,
     171,     0,   172,   173,     0,   174,   175,   176,   177,   178,
     179,   180,   181,     0,   182,   183,  2409,   184,   185,   186,
     187,   188,     0,   189,     0,     0,   190,     0,     0,   191,
       0,   192,     0,     0,   193,     0,     0,     0,   194,   195,
     196,     0,     0,   197,     0,     0,     0,     0,   198,   199,
       0,     0,     0,     0,   200,   201,     0,   202,     0,     0,
       0,   203,     0,   204,   205,   206,   207,   208,     0,     0,
       0,   209,     0,     0,   210,   211,   212,     0,     0,     0,
     213,     0,   214,   215,     0,   216,   217,   218,     0,     0,
     219,   220,     0,   221,   222,   223,   224,   225,   226,     0,
       0,   227,   228,   229,     0,     0,   230,   231,     0,   232,
     233,   234,     0,     0,   235,     0,     0,     0,   236,     0,
     237,   490,   238,     0,   239,   240,   241,   242,     0,   243,
       0,   244,     0,     0,     0,   245,   246,     0,   247,     0,
       0,   248,   249,     0,     0,     0,   250,   251,   252,   253,
       0,     0,   254,   255,   256,  1987,     0,   257,     0,     0,
       0,     0,   258,   259,     0,     0,     0,   260,     0,   261,
     262,     0,   263,   264,     0,     0,     0,   265,  1988,     0,
     266,   267,     0,     0,   268,     0,     0,   269,   270,     0,
    2959,     0,     0,     0,   271,   272,     0,   273,     0,   274,
       0,   275,   276,     0,     0,     0,     0,     0,     0,     0,
       0,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,     0,   294,
     295,   296,     0,   297,   298,   299,   300,     0,   301,   302,
       0,     0,     0,     0,   303,   304,   305,   306,   307,   308,
       0,     0,   309,   310,     0,   311,     0,   312,     0,   313,
     314,   315,   316,   317,   318,   319,   320,   321,     0,     0,
     322,   323,     0,     0,   324,   325,   326,   327,     0,     0,
       0,   328,   329,     0,     0,     0,   330,     0,   331,   332,
     333,     0,     0,   334,   335,     0,   336,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   337,   338,   339,     0,
     340,   341,  1948,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,     0,     0,   352,   353,   354,     0,   355,
       0,   356,   357,   358,   359,   360,     0,   361,   362,   363,
       0,     0,   364,     0,     0,     0,   365,   366,   367,   368,
     369,     0,     0,   370,   371,   372,   373,   374,     0,   375,
     376,     0,   377,   378,   379,     0,     0,   380,     0,   381,
       0,   382,   383,     0,   384,   385,   386,     0,   387,     0,
       0,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,     0,   399,   400,  -473,     0,     0,   401,   402,
     403,   404,     0,     0,     0,   405,     0,     0,     0,   406,
       0,   407,   408,   409,   410,     0,   411,   412,   413,   414,
     415,   493,     0,     0,     0,     0,     0,   416,   417,     0,
     418,     0,     0,   419,     0,     0,   420,   421,   422,     0,
       0,   423,   424,     0,   425,   426,   427,   428,   429,   430,
       0,     0,   431,   432,   433,   434,     0,   435,   436,     0,
       0,   437,   438,   439,   440,     0,     0,   441,   442,     0,
     443,   444,   445,   446,     0,     0,     0,     0,     0,   447,
     448,     0,     0,     0,   449,   450,   451,   452,     0,   453,
     454,     0,   455,   456,     0,   457,   458,     0,     0,   459,
       0,     0,   460,     0,   461,     0,   462,   463,     0,     0,
       0,     0,     0,     0,   464,     0,     0,   465,     0,     0,
       0,   466,   467,   468,   469,   470,     0,     0,     0,     0,
       0,     0,   471,   472,     0,   473,   474,   475,     0,     0,
     476,     0,     0,   136,     0,   137,   138,   139,   140,   141,
       0,     0,     0,     0,     0,   142,     0,     0,   143,  2475,
     144,   145,   146,   147,   148,   149,   150,     0,   151,     0,
       0,     0,   152,     0,     0,     0,   153,     0,     0,   154,
     155,   156,     0,   157,     0,   158,   159,     0,     0,   160,
       0,     0,   161,   162,     0,   163,   164,     0,   165,     0,
     166,   167,   168,   169,   170,   171,     0,   172,   173,     0,
     174,   175,   176,   177,   178,   179,   180,   181,     0,   182,
     183,  2409,   184,   185,   186,   187,   188,     0,   189,     0,
       0,   190,     0,     0,   191,     0,   192,     0,     0,   193,
       0,     0,     0,   194,   195,   196,     0,     0,   197,     0,
       0,     0,     0,   198,   199,     0,     0,     0,     0,   200,
     201,     0,   202,     0,     0,     0,   203,     0,   204,   205,
     206,   207,   208,     0,     0,     0,   209,     0,     0,   210,
     211,   212,     0,     0,     0,   213,     0,   214,   215,     0,
     216,   217,   218,     0,     0,   219,   220,     0,   221,   222,
     223,   224,   225,   226,     0,     0,   227,   228,   229,     0,
       0,   230,   231,     0,   232,   233,   234,     0,     0,   235,
       0,     0,     0,   236,     0,   237,   490,   238,     0,   239,
     240,   241,   242,     0,   243,     0,   244,     0,     0,     0,
     245,   246,     0,   247,     0,     0,   248,   249,     0,     0,
       0,   250,   251,   252,   253,     0,     0,   254,   255,   256,
    1987,     0,   257,     0,     0,     0,     0,   258,   259,     0,
       0,     0,   260,     0,   261,   262,     0,   263,   264,     0,
       0,     0,   265,  1988,     0,   266,   267,     0,     0,   268,
       0,     0,   269,   270,     0,     0,     0,     0,     0,   271,
     272,     0,   273,     0,   274,     0,   275,   276,     0,     0,
       0,     0,     0,     0,     0,     0,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,     0,   294,   295,   296,     0,   297,   298,
     299,   300,     0,   301,   302,     0,     0,     0,     0,   303,
     304,   305,   306,   307,   308,     0,     0,   309,   310,     0,
     311,     0,   312,     0,   313,   314,   315,   316,   317,   318,
     319,   320,   321,     0,     0,   322,   323,     0,     0,   324,
     325,   326,   327,     0,     0,     0,   328,   329,     0,     0,
       0,   330,     0,   331,   332,   333,     0,     0,   334,   335,
       0,   336,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   337,   338,   339,     0,   340,   341,     0,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,     0,     0,
     352,   353,   354,     0,   355,     0,   356,   357,   358,   359,
     360,     0,   361,   362,   363,     0,     0,   364,     0,     0,
       0,   365,   366,   367,   368,   369,     0,     0,   370,   371,
     372,   373,   374,     0,   375,   376,     0,   377,   378,   379,
       0,     0,   380,     0,   381,     0,   382,   383,     0,   384,
     385,   386,     0,   387,     0,     0,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,     0,   399,   400,
       0,     0,     0,   401,   402,   403,   404,     0,     0,     0,
     405,     0,     0,     0,   406,     0,   407,   408,   409,   410,
       0,   411,   412,   413,   414,   415,   493,     0,     0,     0,
       0,     0,   416,   417,     0,   418,     0,     0,   419,     0,
       0,   420,   421,   422,     0,     0,   423,   424,     0,   425,
     426,   427,   428,   429,   430,     0,     0,   431,   432,   433,
     434,     0,   435,   436,     0,     0,   437,   438,   439,   440,
       0,     0,   441,   442,     0,   443,   444,   445,   446,     0,
       0,     0,     0,     0,   447,   448,     0,     0,     0,   449,
     450,   451,   452,     0,   453,   454,     0,   455,   456,     0,
     457,   458,     0,     0,   459,     0,     0,   460,     0,   461,
       0,   462,   463,     0,     0,     0,     0,     0,     0,   464,
       0,     0,   465,     0,     0,     0,   466,   467,   468,   469,
     470,     0,     0,     0,     0,     0,     0,   471,   472,     0,
     473,   474,   475,     0,     0,   476,     0,     0,   136,     0,
     137,   138,   139,   140,   141,     0,     0,     0,     0,     0,
     142,     0,     0,   143,  2475,   144,   145,   146,   147,   148,
     149,   150,     0,   151,     0,     0,     0,   152,     0,     0,
       0,   153,     0,     0,   154,   155,   156,     0,   157,     0,
     158,   159,     0,     0,   160,     0,     0,   161,   162,     0,
     163,   164,     0,   165,     0,   166,   167,   168,   169,   170,
     171,     0,   172,   173,     0,   174,   175,   176,   177,   178,
     179,   180,   181,     0,   182,   183,     0,   184,   185,   186,
     187,   188,     0,   189,     0,     0,   190,     0,     0,   191,
       0,   192,     0,     0,   193,     0,     0,     0,   194,   195,
     196,     0,     0,   197,     0,     0,     0,     0,   198,   199,
       0,     0,     0,     0,   200,   201,     0,   202,     0,     0,
       0,   203,     0,   204,   205,   206,   207,   208,     0,     0,
       0,   209,     0,     0,   210,   211,   212,     0,     0,     0,
     213,     0,   214,   215,     0,   216,   217,   218,     0,     0,
     219,   220,     0,   221,   222,   223,   224,   225,   226,     0,
       0,   227,   228,   229,     0,     0,   230,   231,     0,   232,
     233,   234,     0,     0,   235,     0,     0,     0,   236,     0,
     237,     0,   238,     0,   239,   240,   241,   242,     0,   243,
       0,   244,     0,     0,     0,   245,   246,     0,   247,     0,
       0,   248,   249,     0,     0,     0,   250,   251,   252,   253,
       0,     0,   254,   255,   256,     0,     0,   257,     0,     0,
       0,     0,   258,   259,     0,     0,     0,   260,     0,   261,
     262,     0,   263,   264,     0,     0,     0,   265,     0,     0,
     266,   267,     0,     0,   268,     0,     0,   269,   270,     0,
       0,     0,     0,     0,   271,   272,     0,   273,     0,   274,
       0,   275,   276,     0,     0,     0,     0,     0,     0,     0,
       0,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,     0,   294,
     295,   296,     0,   297,   298,   299,   300,     0,   301,   302,
       0,     0,     0,     0,   303,   304,   305,   306,   307,   308,
       0,     0,   309,   310,     0,   311,     0,   312,     0,   313,
     314,   315,   316,   317,   318,   319,   320,   321,     0,     0,
     322,   323,     0,     0,   324,   325,   326,   327,     0,     0,
       0,   328,   329,     0,     0,     0,   330,     0,   331,   332,
     333,     0,     0,   334,   335,     0,   336,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   337,   338,   339,     0,
     340,   341,     0,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,     0,     0,   352,   353,   354,     0,   355,
       0,   356,   357,   358,   359,   360,     0,   361,   362,   363,
       0,     0,   364,     0,     0,     0,   365,   366,   367,   368,
     369,     0,     0,   370,   371,   372,   373,   374,     0,   375,
     376,     0,   377,   378,   379,     0,     0,   380,     0,   381,
       0,   382,   383,     0,   384,   385,   386,     0,   387,     0,
       0,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,     0,   399,   400,  2291,     0,     0,   401,   402,
     403,   404,     0,     0,     0,   405,     0,     0,     0,   406,
       0,   407,   408,   409,   410,     0,   411,   412,   413,   414,
     415,     0,     0,     0,     0,     0,     0,   416,   417,     0,
     418,     0,     0,   419,     0,     0,   420,   421,   422,     0,
       0,   423,   424,     0,   425,   426,   427,   428,   429,   430,
       0,     0,   431,   432,   433,   434,     0,   435,   436,     0,
       0,   437,   438,   439,   440,     0,     0,   441,   442,     0,
     443,   444,   445,   446,     0,     0,     0,     0,     0,   447,
     448,     0,     0,     0,   449,   450,   451,   452,     0,   453,
     454,     0,   455,   456,     0,   457,   458,     0,     0,   459,
       0,     0,   460,     0,   461,     0,   462,   463,     0,     0,
       0,     0,     0,     0,   464,     0,     0,   465,     0,     0,
       0,   466,   467,   468,   469,   470,     0,     0,     0,     0,
       0,     0,   471,   472,     0,   473,   474,   475,     0,     0,
     476,     0,     0,   136,     0,   137,   138,   139,   140,   141,
       0,     0,  2720,     0,     0,   142,     0,     0,   143,   754,
     144,   145,   146,   147,   148,   149,   150,     0,   151,     0,
       0,     0,   152,     0,     0,     0,   153,     0,     0,   154,
     155,   156,     0,   157,     0,   158,   159,     0,     0,   160,
       0,     0,   161,   162,     0,   163,   164,     0,   165,     0,
     166,   167,   168,   169,   170,   171,     0,   172,   173,     0,
     174,   175,   176,   177,   178,   179,   180,   181,     0,   182,
     183,     0,   184,   185,   186,   187,   188,     0,   189,     0,
       0,   190,     0,     0,   191,     0,   192,     0,     0,   193,
       0,     0,     0,   194,   195,   196,     0,     0,   197,     0,
       0,     0,     0,   198,   199,     0,     0,     0,     0,   200,
     201,     0,   202,     0,     0,     0,   203,     0,   204,   205,
     206,   207,   208,     0,     0,     0,   209,     0,     0,   210,
     211,   212,     0,     0,     0,   213,     0,   214,   215,     0,
     216,   217,   218,     0,     0,   219,   220,     0,   221,   222,
     223,   224,   225,   226,     0,     0,   227,   228,   229,     0,
       0,   230,   231,     0,   232,   233,   234,     0,     0,   235,
       0,     0,     0,   236,     0,   237,     0,   238,     0,   239,
     240,   241,   242,     0,   243,     0,   244,     0,     0,     0,
     245,   246,     0,   247,     0,     0,   248,   249,     0,     0,
       0,   250,   251,   252,   253,     0,     0,   254,   255,   256,
       0,     0,   257,     0,     0,     0,     0,   258,   259,     0,
       0,     0,   260,     0,   261,   262,     0,   263,   264,     0,
       0,     0,   265,     0,     0,   266,   267,     0,     0,   268,
       0,     0,   269,   270,     0,     0,     0,     0,     0,   271,
     272,     0,   273,     0,   274,     0,   275,   276,     0,     0,
       0,     0,     0,     0,     0,     0,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,     0,   294,   295,   296,     0,   297,   298,
     299,   300,     0,   301,   302,     0,     0,     0,     0,   303,
     304,   305,   306,   307,   308,     0,     0,   309,   310,     0,
     311,     0,   312,     0,   313,   314,   315,   316,   317,   318,
     319,   320,   321,     0,     0,   322,   323,     0,     0,   324,
     325,   326,   327,     0,     0,     0,   328,   329,     0,     0,
       0,   330,     0,   331,   332,   333,     0,     0,   334,   335,
       0,   336,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   337,   338,   339,     0,   340,   341,     0,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,     0,     0,
     352,   353,   354,     0,   355,     0,   356,   357,   358,   359,
     360,     0,   361,   362,   363,     0,     0,   364,     0,     0,
       0,   365,   366,   367,   368,   369,     0,     0,   370,   371,
     372,   373,   374,     0,   375,   376,     0,   377,   378,   379,
       0,     0,   380,     0,   381,     0,   382,   383,     0,   384,
     385,   386,     0,   387,     0,     0,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,     0,   399,   400,
       0,     0,     0,   401,   402,   403,   404,     0,     0,     0,
     405,     0,     0,     0,   406,     0,   407,   408,   409,   410,
       0,   411,   412,   413,   414,   415,     0,     0,     0,     0,
       0,     0,   416,   417,     0,   418,     0,     0,   419,     0,
       0,   420,   421,   422,     0,     0,   423,   424,     0,   425,
     426,   427,   428,   429,   430,     0,     0,   431,   432,   433,
     434,     0,   435,   436,     0,     0,   437,   438,   439,   440,
       0,     0,   441,   442,     0,   443,   444,   445,   446,     0,
       0,     0,     0,     0,   447,   448,     0,     0,     0,   449,
     450,   451,   452,     0,   453,   454,     0,   455,   456,     0,
     457,   458,     0,     0,   459,     0,     0,   460,     0,   461,
       0,   462,   463,     0,     0,     0,     0,     0,     0,   464,
       0,     0,   465,     0,     0,     0,   466,   467,   468,   469,
     470,     0,     0,     0,     0,     0,     0,   471,   472,     0,
     473,   474,   475,     0,     0,   476,     0,     0,     0,     0,
     136,     0,   137,   138,   139,   140,   141,  4368,     0,     0,
       0,     0,   142,  4369,   754,   143,     0,   144,   145,   146,
     147,   148,   149,   150,     0,   151,     0,     0,     0,   152,
       0,     0,     0,   153,     0,     0,   154,   155,   156,     0,
     157,     0,   158,   159,     0,     0,   160,     0,     0,   161,
     162,     0,   163,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,     0,   174,   175,   176,
     177,   178,   179,   180,   181,     0,   182,   183,     0,   184,
     185,   186,   187,   188,     0,   189,     0,     0,   190,     0,
       0,   191,     0,   192,     0,     0,   193,     0,     0,     0,
     194,   195,   196,     0,     0,   197,     0,     0,     0,     0,
     198,   199,     0,     0,     0,     0,   200,   201,     0,   202,
       0,     0,     0,   203,     0,   204,   205,   206,   207,   208,
       0,     0,     0,   209,     0,     0,   210,   211,   212,     0,
       0,     0,   213,     0,   214,   215,     0,   216,   217,   218,
       0,     0,   219,   220,     0,   221,   222,   223,   224,   225,
     226,     0,     0,   227,   228,   229,     0,     0,   230,   231,
       0,   232,   233,   234,     0,     0,   235,     0,     0,     0,
     236,     0,   237,     0,   238,     0,   239,   240,   241,   242,
       0,   243,     0,   244,     0,     0,     0,   245,   246,     0,
     247,     0,     0,   248,   249,     0,     0,     0,   250,   251,
     252,   253,     0,     0,   254,   255,   256,     0,     0,   257,
       0,     0,     0,     0,   258,   259,     0,     0,     0,   260,
       0,   261,   262,     0,   263,   264,     0,     0,     0,   265,
       0,     0,   266,   267,     0,     0,   268,     0,     0,   269,
     270,     0,     0,     0,     0,     0,   271,   272,     0,   273,
       0,   274,     0,   275,   276,     0,     0,     0,     0,     0,
       0,     0,     0,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
       0,   294,   295,   296,     0,   297,   298,   299,   300,     0,
     301,   302,     0,     0,     0,     0,   303,   304,   305,   306,
     307,   308,     0,     0,   309,   310,     0,   311,     0,   312,
       0,   313,   314,   315,   316,   317,   318,   319,   320,   321,
       0,     0,   322,   323,     0,     0,   324,   325,   326,   327,
       0,     0,     0,   328,   329,     0,     0,     0,   330,     0,
     331,   332,   333,     0,     0,   334,   335,     0,   336,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   337,   338,
     339,     0,   340,   341,     0,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,     0,     0,   352,   353,   354,
       0,   355,     0,   356,   357,   358,   359,   360,     0,   361,
     362,   363,     0,     0,   364,     0,     0,     0,   365,   366,
     367,   368,   369,     0,     0,   370,   371,   372,   373,   374,
       0,   375,   376,     0,   377,   378,   379,     0,     0,   380,
       0,   381,     0,   382,   383,     0,   384,   385,   386,     0,
     387,     0,     0,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,     0,   399,   400,     0,     0,     0,
     401,   402,   403,   404,     0,     0,     0,   405,     0,     0,
       0,   406,     0,   407,   408,   409,   410,     0,   411,   412,
     413,   414,   415,     0,     0,     0,     0,     0,     0,   416,
     417,     0,   418,     0,     0,   419,     0,     0,   420,   421,
     422,     0,     0,   423,   424,     0,   425,   426,   427,   428,
     429,   430,     0,     0,   431,   432,   433,   434,     0,   435,
     436,     0,     0,   437,   438,   439,   440,     0,     0,   441,
     442,     0,   443,   444,   445,   446,     0,     0,     0,     0,
       0,   447,   448,     0,     0,     0,   449,   450,   451,   452,
       0,   453,   454,     0,   455,   456,     0,   457,   458,     0,
       0,   459,     0,     0,   460,     0,   461,     0,   462,   463,
       0,     0,     0,     0,     0,     0,   464,     0,     0,   465,
       0,     0,     0,   466,   467,   468,   469,   470,     0,     0,
       0,     0,     0,     0,   471,   472,     0,   473,   474,   475,
       0,     0,   476,     0,     0,   136,     0,   137,   138,   139,
     140,   141,     0,  1081,     0,     0,     0,   142,     0,     0,
     143,   754,   144,   145,   146,   147,   148,   149,   150,     0,
     151,     0,     0,     0,   152,     0,     0,     0,   153,     0,
       0,   154,   155,   156,     0,   157,     0,   158,   159,     0,
       0,   160,     0,     0,   161,   162,     0,   163,   164,     0,
     165,     0,   166,   167,   168,   169,   170,   171,     0,   172,
     173,     0,   174,   175,   176,   177,   178,   179,   180,   181,
       0,   182,   183,     0,   184,   185,   186,   187,   188,     0,
     189,     0,     0,   190,     0,     0,   191,     0,   192,     0,
       0,   193,     0,     0,     0,   194,   195,   196,     0,     0,
     197,     0,     0,     0,     0,   198,   199,     0,     0,     0,
       0,   200,   201,     0,   202,     0,     0,     0,   203,     0,
     204,   205,   206,   207,   208,     0,     0,     0,   209,     0,
       0,   210,   211,   212,     0,     0,     0,   213,     0,   214,
     215,     0,   216,   217,   218,     0,     0,   219,   220,     0,
     221,   222,   223,   224,   225,   226,     0,     0,   227,   228,
     229,     0,     0,   230,   231,     0,   232,   233,   234,     0,
       0,   235,     0,     0,     0,   236,     0,   237,     0,   238,
       0,   239,   240,   241,   242,     0,   243,     0,   244,     0,
       0,     0,   245,   246,     0,   247,     0,     0,   248,   249,
       0,     0,     0,   250,   251,   252,   253,     0,     0,   254,
     255,   256,     0,     0,   257,     0,     0,     0,     0,   258,
     259,     0,  1286,     0,   260,     0,   261,   262,     0,   263,
     264,     0,     0,     0,   265,     0,     0,   266,   267,     0,
       0,   268,     0,     0,   269,   270,     0,     0,     0,     0,
       0,   271,   272,     0,   273,     0,   274,     0,   275,   276,
       0,     0,     0,     0,     0,     0,     0,     0,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,     0,   294,   295,   296,     0,
     297,   298,   299,   300,     0,   301,   302,     0,     0,     0,
       0,   303,   304,   305,   306,   307,   308,     0,     0,   309,
     310,     0,   311,     0,   312,     0,   313,   314,   315,   316,
     317,   318,   319,   320,   321,     0,     0,   322,   323,     0,
       0,   324,   325,   326,   327,     0,     0,     0,   328,   329,
       0,     0,     0,   330,     0,   331,   332,   333,     0,     0,
     334,   335,     0,   336,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   337,   338,   339,     0,   340,   341,     0,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
       0,     0,   352,   353,   354,     0,   355,     0,   356,   357,
     358,   359,   360,     0,   361,   362,   363,     0,     0,   364,
       0,     0,     0,   365,   366,   367,   368,   369,     0,     0,
     370,   371,   372,   373,   374,     0,   375,   376,     0,   377,
     378,   379,     0,     0,   380,     0,   381,     0,   382,   383,
       0,   384,   385,   386,     0,   387,     0,     0,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,     0,
     399,   400,     0,     0,     0,   401,   402,   403,   404,     0,
       0,     0,   405,     0,     0,     0,   406,     0,   407,   408,
     409,   410,     0,   411,   412,   413,   414,   415,     0,     0,
       0,     0,     0,     0,   416,   417,     0,   418,     0,     0,
     419,     0,     0,   420,   421,   422,     0,     0,   423,   424,
       0,   425,   426,   427,   428,   429,   430,     0,     0,   431,
     432,   433,   434,     0,   435,   436,     0,     0,   437,   438,
     439,   440,     0,     0,   441,   442,     0,   443,   444,   445,
     446,     0,     0,     0,     0,     0,   447,   448,     0,     0,
       0,   449,   450,   451,   452,     0,   453,   454,     0,   455,
     456,     0,   457,   458,     0,     0,   459,     0,     0,   460,
       0,   461,     0,   462,   463,     0,     0,     0,     0,     0,
       0,   464,     0,     0,   465,     0,     0,     0,   466,   467,
     468,   469,   470,     0,     0,     0,     0,     0,     0,   471,
     472,     0,   473,   474,   475,     0,     0,   476,     0,     0,
     136,     0,   137,   138,   139,   140,   141,     0,     0,     0,
       0,     0,   142,     0,     0,   143,   526,   144,   145,   146,
     147,   148,   149,   150,     0,   151,     0,     0,     0,   152,
       0,     0,     0,   153,     0,     0,   154,   155,   156,     0,
     157,     0,   158,   159,     0,     0,   160,     0,     0,   161,
     162,     0,   163,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,     0,   174,   175,   176,
     177,   178,   179,   180,   181,     0,   182,   183,     0,   184,
     185,   186,   187,   188,     0,   189,     0,     0,   190,     0,
       0,   191,     0,   192,     0,     0,   193,     0,     0,     0,
     194,   195,   196,     0,     0,   197,     0,     0,     0,     0,
     198,   199,     0,     0,     0,     0,   200,   201,     0,   202,
       0,     0,     0,   203,     0,   204,   205,   206,   207,   208,
       0,     0,     0,   209,     0,     0,   210,   211,   212,     0,
       0,     0,   213,     0,   214,   215,     0,   216,   217,   218,
       0,     0,   219,   220,     0,   221,   222,   223,   224,   225,
     226,     0,     0,   227,   228,   229,     0,     0,   230,   231,
       0,   232,   233,   234,     0,     0,   235,     0,     0,     0,
     236,     0,   237,     0,   238,     0,   239,   240,   241,   242,
       0,   243,     0,   244,     0,     0,     0,   245,   246,     0,
     247,     0,     0,   248,   249,     0,     0,     0,   250,   251,
     252,   253,     0,     0,   254,   255,   256,     0,     0,   257,
       0,     0,     0,     0,   258,   259,     0,     0,     0,   260,
       0,   261,   262,     0,   263,   264,     0,     0,     0,   265,
       0,     0,   266,   267,     0,     0,   268,     0,     0,   269,
     270,     0,     0,     0,     0,     0,   271,   272,     0,   273,
       0,   274,     0,   275,   276,     0,     0,     0,     0,     0,
       0,     0,     0,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
       0,   294,   295,   296,     0,   297,   298,   299,   300,     0,
     301,   302,     0,     0,     0,     0,   303,   304,   305,   306,
     307,   308,     0,     0,   309,   310,     0,   311,     0,   312,
       0,   313,   314,   315,   316,   317,   318,   319,   320,   321,
       0,     0,   322,   323,     0,     0,   324,   325,   326,   327,
       0,     0,     0,   328,   329,     0,     0,     0,   330,     0,
     331,   332,   333,     0,     0,   334,   335,     0,   336,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   337,   338,
     339,     0,   340,   341,     0,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,     0,     0,   352,   353,   354,
       0,   355,     0,   356,   357,   358,   359,   360,     0,   361,
     362,   363,     0,     0,   364,     0,     0,     0,   365,   366,
     367,   368,   369,     0,     0,   370,   371,   372,   373,   374,
       0,   375,   376,     0,   377,   378,   379,     0,     0,   380,
       0,   381,     0,   382,   383,     0,   384,   385,   386,     0,
     387,     0,     0,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,     0,   399,   400,     0,     0,     0,
     401,   402,   403,   404,     0,     0,     0,   405,     0,     0,
       0,   406,     0,   407,   408,   409,   410,     0,   411,   412,
     413,   414,   415,     0,     0,     0,     0,     0,     0,   416,
     417,     0,   418,     0,     0,   419,     0,     0,   420,   421,
     422,     0,     0,   423,   424,     0,   425,   426,   427,   428,
     429,   430,     0,     0,   431,   432,   433,   434,     0,   435,
     436,     0,     0,   437,   438,   439,   440,     0,     0,   441,
     442,     0,   443,   444,   445,   446,     0,     0,     0,     0,
       0,   447,   448,     0,     0,     0,   449,   450,   451,   452,
       0,   453,   454,     0,   455,   456,     0,   457,   458,     0,
       0,   459,     0,     0,   460,     0,   461,     0,   462,   463,
       0,     0,     0,     0,     0,     0,   464,     0,     0,   465,
       0,     0,     0,   466,   467,   468,   469,   470,     0,     0,
       0,     0,     0,     0,   471,   472,     0,   473,   474,   475,
       0,     0,   476,     0,     0,     0,     0,   136,  2233,   137,
     138,   139,   140,   141,     0,     0,     0,     0,     0,   142,
       0,   526,   143,     0,   144,   145,   146,   147,   148,   149,
     150,     0,   151,     0,     0,     0,   152,     0,     0,     0,
     153,     0,     0,   154,   155,   156,     0,   157,     0,   158,
     159,     0,     0,   160,     0,     0,   161,   162,     0,   163,
     164,     0,   165,     0,   166,   167,   168,   169,   170,   171,
       0,   172,   173,     0,   174,   175,   176,   177,   178,   179,
     180,   181,     0,   182,   183,     0,   184,   185,   186,   187,
     188,     0,   189,     0,     0,   190,     0,     0,   191,     0,
     192,     0,     0,   193,     0,     0,     0,   194,   195,   196,
       0,     0,   197,     0,     0,     0,     0,   198,   199,     0,
       0,     0,     0,   200,   201,     0,   202,     0,     0,     0,
     203,     0,   204,   205,   206,   207,   208,     0,     0,     0,
     209,     0,     0,   210,   211,   212,     0,     0,     0,   213,
       0,   214,   215,     0,   216,   217,   218,     0,     0,   219,
     220,     0,   221,   222,   223,   224,   225,   226,     0,     0,
     227,   228,   229,     0,     0,   230,   231,     0,   232,   233,
     234,     0,     0,   235,     0,     0,     0,   236,     0,   237,
       0,   238,     0,   239,   240,   241,   242,     0,   243,     0,
     244,     0,     0,     0,   245,   246,     0,   247,     0,     0,
     248,   249,     0,     0,     0,   250,   251,   252,   253,     0,
       0,   254,   255,   256,     0,     0,   257,     0,     0,     0,
       0,   258,   259,     0,     0,     0,   260,     0,   261,   262,
       0,   263,   264,     0,     0,     0,   265,     0,     0,   266,
     267,     0,     0,   268,     0,     0,   269,   270,     0,     0,
       0,     0,     0,   271,   272,     0,   273,     0,   274,     0,
     275,   276,     0,     0,     0,     0,     0,     0,     0,     0,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,     0,   294,   295,
     296,     0,   297,   298,   299,   300,     0,   301,   302,     0,
       0,     0,     0,   303,   304,   305,   306,   307,   308,     0,
       0,   309,   310,     0,   311,     0,   312,     0,   313,   314,
     315,   316,   317,   318,   319,   320,   321,     0,     0,   322,
     323,     0,     0,   324,   325,   326,   327,     0,     0,     0,
     328,   329,     0,     0,     0,   330,     0,   331,   332,   333,
       0,     0,   334,   335,     0,   336,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   337,   338,   339,     0,   340,
     341,     0,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,     0,     0,   352,   353,   354,     0,   355,     0,
     356,   357,   358,   359,   360,     0,   361,   362,   363,     0,
       0,   364,     0,     0,     0,   365,   366,   367,   368,   369,
       0,     0,   370,   371,   372,   373,   374,     0,   375,   376,
       0,   377,   378,   379,     0,     0,   380,     0,   381,     0,
     382,   383,     0,   384,   385,   386,     0,   387,     0,     0,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,     0,   399,   400,     0,     0,     0,   401,   402,   403,
     404,     0,     0,     0,   405,     0,     0,     0,   406,     0,
     407,   408,   409,   410,     0,   411,   412,   413,   414,   415,
       0,     0,     0,     0,     0,     0,   416,   417,     0,   418,
       0,     0,   419,     0,     0,   420,   421,   422,     0,     0,
     423,   424,     0,   425,   426,   427,   428,   429,   430,     0,
       0,   431,   432,   433,   434,     0,   435,   436,     0,     0,
     437,   438,   439,   440,     0,     0,   441,   442,     0,   443,
     444,   445,   446,     0,     0,     0,     0,     0,   447,   448,
       0,     0,     0,   449,   450,   451,   452,     0,   453,   454,
       0,   455,   456,     0,   457,   458,     0,     0,   459,     0,
       0,   460,     0,   461,     0,   462,   463,     0,     0,     0,
       0,     0,     0,   464,     0,     0,   465,     0,     0,     0,
     466,   467,   468,   469,   470,     0,     0,     0,     0,     0,
       0,   471,   472,     0,   473,   474,   475,     0,     0,   476,
       0,     0,   136,     0,   137,   138,   139,   140,   141,     0,
    2474,     0,     0,     0,   142,     0,     0,   143,  2475,   144,
     145,   146,   147,   148,   149,   150,     0,   151,     0,     0,
       0,   152,     0,     0,     0,   153,     0,     0,   154,   155,
     156,     0,   157,     0,   158,   159,     0,     0,   160,     0,
       0,   161,   162,     0,   163,   164,     0,   165,     0,   166,
     167,   168,   169,   170,   171,     0,   172,   173,     0,   174,
     175,   176,   177,   178,   179,   180,   181,     0,   182,   183,
       0,   184,   185,   186,   187,   188,     0,   189,     0,     0,
     190,     0,     0,   191,     0,   192,     0,     0,   193,     0,
       0,     0,   194,   195,   196,     0,     0,   197,     0,     0,
       0,     0,   198,   199,     0,     0,     0,     0,   200,   201,
       0,   202,     0,     0,     0,   203,     0,   204,   205,   206,
     207,   208,     0,     0,     0,   209,     0,     0,   210,   211,
     212,     0,     0,     0,   213,     0,   214,   215,     0,   216,
     217,   218,     0,     0,   219,   220,     0,   221,   222,   223,
     224,   225,   226,     0,     0,   227,   228,   229,     0,     0,
     230,   231,     0,   232,   233,   234,     0,     0,   235,     0,
       0,     0,   236,     0,   237,     0,   238,     0,   239,   240,
     241,   242,     0,   243,     0,   244,     0,     0,     0,   245,
     246,     0,   247,     0,     0,   248,   249,     0,     0,     0,
     250,   251,   252,   253,     0,     0,   254,   255,   256,     0,
       0,   257,     0,     0,     0,     0,   258,   259,     0,     0,
       0,   260,     0,   261,   262,     0,   263,   264,     0,     0,
       0,   265,     0,     0,   266,   267,     0,     0,   268,     0,
       0,   269,   270,     0,     0,     0,     0,     0,   271,   272,
       0,   273,     0,   274,     0,   275,   276,     0,     0,     0,
       0,     0,     0,     0,     0,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,     0,   294,   295,   296,     0,   297,   298,   299,
     300,     0,   301,   302,     0,     0,     0,     0,   303,   304,
     305,   306,   307,   308,     0,     0,   309,   310,     0,   311,
       0,   312,     0,   313,   314,   315,   316,   317,   318,   319,
     320,   321,     0,     0,   322,   323,     0,     0,   324,   325,
     326,   327,     0,     0,     0,   328,   329,     0,     0,     0,
     330,     0,   331,   332,   333,     0,     0,   334,   335,     0,
     336,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     337,   338,   339,     0,   340,   341,     0,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,     0,     0,   352,
     353,   354,     0,   355,     0,   356,   357,   358,   359,   360,
       0,   361,   362,   363,     0,     0,   364,     0,     0,     0,
     365,   366,   367,   368,   369,     0,     0,   370,   371,   372,
     373,   374,     0,   375,   376,     0,   377,   378,   379,     0,
       0,   380,     0,   381,     0,   382,   383,     0,   384,   385,
     386,     0,   387,     0,     0,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,     0,   399,   400,     0,
       0,     0,   401,   402,   403,   404,     0,     0,     0,   405,
       0,     0,     0,   406,     0,   407,   408,   409,   410,     0,
     411,   412,   413,   414,   415,     0,     0,     0,     0,     0,
       0,   416,   417,     0,   418,     0,     0,   419,     0,     0,
     420,   421,   422,     0,     0,   423,   424,     0,   425,   426,
     427,   428,   429,   430,     0,     0,   431,   432,   433,   434,
       0,   435,   436,     0,     0,   437,   438,   439,   440,     0,
       0,   441,   442,     0,   443,   444,   445,   446,     0,     0,
       0,     0,     0,   447,   448,     0,     0,     0,   449,   450,
     451,   452,     0,   453,   454,     0,   455,   456,     0,   457,
     458,     0,     0,   459,     0,     0,   460,     0,   461,     0,
     462,   463,     0,     0,     0,     0,     0,     0,   464,     0,
       0,   465,     0,     0,     0,   466,   467,   468,   469,   470,
       0,     0,     0,     0,     0,     0,   471,   472,     0,   473,
     474,   475,     0,     0,   476,     0,     0,     0,     0,   136,
       0,   137,   138,   139,   140,   141,     0,     0,     0,     0,
       0,   142,  4369,   754,   143,     0,   144,   145,   146,   147,
     148,   149,   150,     0,   151,     0,     0,     0,   152,     0,
       0,     0,   153,     0,     0,   154,   155,   156,     0,   157,
       0,   158,   159,     0,     0,   160,     0,     0,   161,   162,
       0,   163,   164,     0,   165,     0,   166,   167,   168,   169,
     170,   171,     0,   172,   173,     0,   174,   175,   176,   177,
     178,   179,   180,   181,     0,   182,   183,     0,   184,   185,
     186,   187,   188,     0,   189,     0,     0,   190,     0,     0,
     191,     0,   192,     0,     0,   193,     0,     0,     0,   194,
     195,   196,     0,     0,   197,     0,     0,     0,     0,   198,
     199,     0,     0,     0,     0,   200,   201,     0,   202,     0,
       0,     0,   203,     0,   204,   205,   206,   207,   208,     0,
       0,     0,   209,     0,     0,   210,   211,   212,     0,     0,
       0,   213,     0,   214,   215,     0,   216,   217,   218,     0,
       0,   219,   220,     0,   221,   222,   223,   224,   225,   226,
       0,     0,   227,   228,   229,     0,     0,   230,   231,     0,
     232,   233,   234,     0,     0,   235,     0,     0,     0,   236,
       0,   237,     0,   238,     0,   239,   240,   241,   242,     0,
     243,     0,   244,     0,     0,     0,   245,   246,     0,   247,
       0,     0,   248,   249,     0,     0,     0,   250,   251,   252,
     253,     0,     0,   254,   255,   256,     0,     0,   257,     0,
       0,     0,     0,   258,   259,     0,     0,     0,   260,     0,
     261,   262,     0,   263,   264,     0,     0,     0,   265,     0,
       0,   266,   267,     0,     0,   268,     0,     0,   269,   270,
       0,     0,     0,     0,     0,   271,   272,     0,   273,     0,
     274,     0,   275,   276,     0,     0,     0,     0,     0,     0,
       0,     0,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,     0,
     294,   295,   296,     0,   297,   298,   299,   300,     0,   301,
     302,     0,     0,     0,     0,   303,   304,   305,   306,   307,
     308,     0,     0,   309,   310,     0,   311,     0,   312,     0,
     313,   314,   315,   316,   317,   318,   319,   320,   321,     0,
       0,   322,   323,     0,     0,   324,   325,   326,   327,     0,
       0,     0,   328,   329,     0,     0,     0,   330,     0,   331,
     332,   333,     0,     0,   334,   335,     0,   336,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   337,   338,   339,
       0,   340,   341,     0,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,     0,     0,   352,   353,   354,     0,
     355,     0,   356,   357,   358,   359,   360,     0,   361,   362,
     363,     0,     0,   364,     0,     0,     0,   365,   366,   367,
     368,   369,     0,     0,   370,   371,   372,   373,   374,     0,
     375,   376,     0,   377,   378,   379,     0,     0,   380,     0,
     381,     0,   382,   383,     0,   384,   385,   386,     0,   387,
       0,     0,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,     0,   399,   400,     0,     0,     0,   401,
     402,   403,   404,     0,     0,     0,   405,     0,     0,     0,
     406,     0,   407,   408,   409,   410,     0,   411,   412,   413,
     414,   415,     0,     0,     0,     0,     0,     0,   416,   417,
       0,   418,     0,     0,   419,     0,     0,   420,   421,   422,
       0,     0,   423,   424,     0,   425,   426,   427,   428,   429,
     430,     0,     0,   431,   432,   433,   434,     0,   435,   436,
       0,     0,   437,   438,   439,   440,     0,     0,   441,   442,
       0,   443,   444,   445,   446,     0,     0,     0,     0,     0,
     447,   448,     0,     0,     0,   449,   450,   451,   452,     0,
     453,   454,     0,   455,   456,     0,   457,   458,     0,     0,
     459,     0,     0,   460,     0,   461,     0,   462,   463,     0,
       0,     0,     0,     0,     0,   464,     0,     0,   465,     0,
       0,     0,   466,   467,   468,   469,   470,     0,     0,     0,
       0,     0,     0,   471,   472,     0,   473,   474,   475,     0,
       0,   476,     0,     0,   136,     0,   137,   138,   139,   140,
     141,     0,     0,     0,     0,     0,   142,     0,     0,   143,
     526,   144,   145,   146,   147,   148,   149,   150,     0,   151,
       0,     0,     0,   152,     0,     0,     0,   153,     0,     0,
     154,   155,   156,     0,   157,     0,   158,   159,     0,     0,
     160,     0,     0,   161,   162,     0,   163,   164,     0,   165,
       0,   166,   167,   168,   169,   170,   171,     0,   172,   173,
       0,   174,   175,   176,   177,   178,   179,   180,   181,     0,
     182,   183,     0,   184,   185,   186,   187,   188,     0,   189,
       0,     0,   190,     0,     0,   191,     0,   192,     0,     0,
     193,     0,     0,     0,   194,   195,   196,     0,     0,   197,
       0,     0,     0,     0,   198,   199,     0,     0,     0,     0,
     200,   201,     0,   202,     0,     0,     0,   203,     0,   204,
     205,   206,   207,   208,     0,     0,     0,   209,     0,     0,
     210,   211,   212,     0,     0,     0,   213,     0,   214,   215,
       0,   216,   217,   218,     0,     0,   219,   220,     0,   221,
     222,   223,   224,   225,   226,     0,     0,   227,   590,   229,
       0,     0,   230,   231,     0,   232,   233,   234,     0,     0,
     235,     0,     0,     0,   236,     0,   237,     0,   238,     0,
     239,   240,   241,   242,     0,   243,     0,   244,     0,     0,
       0,   245,   246,     0,   247,     0,     0,   248,   249,     0,
       0,     0,   250,   251,   252,   253,     0,     0,   254,   255,
     256,     0,     0,   257,     0,     0,     0,     0,   258,   259,
       0,     0,     0,   260,     0,   261,   262,     0,   263,   264,
       0,     0,     0,   265,     0,     0,   266,   267,     0,     0,
     268,     0,     0,   269,   270,     0,     0,     0,     0,     0,
     271,   272,     0,   273,     0,   274,     0,   275,   276,     0,
       0,     0,     0,     0,     0,     0,     0,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,     0,   294,   295,   296,     0,   297,
     298,   299,   300,     0,   301,   302,     0,     0,     0,     0,
     303,   304,   305,   306,   307,   308,     0,     0,   309,   310,
       0,   311,     0,   312,     0,   313,   314,   315,   316,   317,
     318,   319,   320,   321,     0,     0,   322,   323,     0,     0,
     324,   325,   326,   327,     0,     0,     0,   328,   329,     0,
       0,     0,   330,     0,   331,   332,   333,     0,     0,   334,
     335,     0,   336,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   337,   338,   339,     0,   340,   341,     0,   591,
     343,   344,   345,   346,   347,   348,   349,   350,   351,     0,
       0,   352,   353,   354,     0,   355,     0,   356,   357,   358,
     359,   360,     0,   361,   362,   363,     0,     0,   364,     0,
       0,     0,   365,   366,   367,   368,   369,     0,     0,   370,
     371,   372,   373,   374,     0,   375,   376,     0,   377,   378,
     379,     0,     0,   380,     0,   381,     0,   382,   383,     0,
     384,   385,   386,     0,   387,     0,     0,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,     0,   399,
     400,     0,     0,     0,   401,   402,   403,   404,     0,     0,
       0,   405,     0,     0,     0,   406,     0,   407,   408,   409,
     410,     0,   411,   412,   413,   414,   415,     0,     0,     0,
       0,     0,     0,   416,   417,     0,   418,     0,     0,   419,
       0,     0,   420,   421,   422,     0,     0,   423,   424,     0,
     425,   426,   427,   428,   429,   430,     0,     0,   431,   432,
     433,   434,     0,   435,   436,     0,     0,   437,   438,   439,
     440,     0,     0,   441,   442,     0,   443,   444,   445,   446,
       0,     0,     0,     0,     0,   447,   448,     0,     0,     0,
     449,   450,   451,   452,     0,   453,   454,     0,   455,   456,
       0,   457,   458,     0,     0,   459,     0,     0,   460,     0,
     461,     0,   462,   463,     0,     0,     0,     0,     0,     0,
     464,     0,     0,   465,     0,     0,     0,   466,   467,   468,
     469,   470,     0,     0,     0,     0,     0,     0,   471,   472,
       0,   473,   474,   475,     0,     0,   476,     0,     0,   136,
       0,   137,   138,   139,   140,   141,     0,     0,     0,     0,
       0,   142,     0,     0,   143,   526,   144,   145,   146,   147,
     148,   149,   150,     0,   151,     0,     0,     0,   152,     0,
       0,     0,   153,     0,     0,   154,   155,   156,     0,   157,
       0,   158,   159,     0,     0,   160,     0,     0,   161,   162,
       0,   163,   164,     0,   165,     0,   166,   167,   168,   169,
     170,   171,     0,   172,   173,     0,   174,   175,   176,   177,
     178,   179,   180,   181,     0,   182,   183,     0,   184,   185,
     186,   187,   188,     0,   189,     0,     0,   190,     0,     0,
     191,     0,   192,     0,     0,   193,     0,     0,     0,   194,
     195,   196,     0,     0,   197,     0,     0,     0,     0,   198,
     199,     0,     0,     0,     0,   200,   201,     0,   202,     0,
       0,     0,   203,     0,   204,   205,   206,   207,   208,     0,
       0,     0,   209,     0,     0,   210,   211,   212,     0,     0,
       0,   213,     0,   214,   215,     0,   216,   217,   218,     0,
       0,   219,   220,     0,   221,   222,   223,   224,   225,   226,
       0,     0,   227,   228,   229,     0,     0,   230,   231,     0,
     232,   233,   234,     0,     0,   235,     0,     0,     0,   236,
       0,   237,     0,   238,     0,   239,   240,   241,   242,     0,
     243,     0,   244,     0,     0,     0,   245,   246,     0,   247,
       0,     0,   248,   249,     0,     0,     0,   250,   251,   252,
     253,     0,     0,   254,   255,   256,     0,     0,   257,     0,
       0,     0,     0,   258,   259,     0,     0,     0,   260,     0,
     261,   262,     0,   263,   264,     0,     0,     0,   265,     0,
       0,   266,   267,     0,     0,   268,     0,     0,   269,   270,
       0,     0,     0,     0,     0,   271,   272,     0,   273,     0,
     274,     0,   275,   276,     0,     0,     0,     0,     0,     0,
       0,     0,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,     0,
     294,   295,   296,     0,   297,   298,   299,   300,     0,   301,
     302,     0,     0,     0,     0,   303,   304,   305,   306,   307,
     308,     0,     0,   309,   310,     0,   311,     0,   312,     0,
     313,   314,   315,   316,   317,   318,   319,   320,   321,     0,
       0,   322,   323,     0,     0,   324,   325,   326,   327,     0,
       0,     0,   328,   329,     0,     0,     0,   330,     0,   331,
     332,   333,     0,     0,   334,   335,     0,   336,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   337,   338,   339,
       0,   340,   341,     0,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,     0,     0,   352,   353,   354,     0,
     355,     0,   356,   357,   358,   359,   360,     0,   361,   362,
     363,     0,     0,   364,     0,     0,     0,   365,   366,   367,
     368,   369,     0,     0,   370,   371,   372,   373,   374,     0,
     375,   376,     0,   377,   378,   379,     0,     0,   380,     0,
     381,     0,   382,   383,     0,   384,   385,   386,     0,   387,
       0,     0,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,     0,   399,   400,     0,     0,     0,   401,
     402,   403,   404,     0,     0,     0,   405,     0,     0,     0,
     406,     0,   407,   408,   409,   410,     0,   411,   412,   413,
     414,   415,     0,     0,     0,     0,     0,     0,   416,   417,
       0,   418,     0,     0,   419,     0,     0,   420,   421,   422,
       0,     0,   423,   424,     0,   425,   426,   427,   428,   429,
     430,     0,     0,   431,   432,   433,   434,     0,   435,   436,
       0,     0,   437,   438,   439,   440,     0,     0,   441,   442,
       0,   443,   444,   445,   446,     0,     0,     0,     0,     0,
     447,   448,     0,     0,     0,   449,   450,   451,   452,     0,
     453,   454,     0,   455,   456,     0,   457,   458,     0,     0,
     459,     0,     0,   460,     0,   461,     0,   462,   463,     0,
       0,     0,     0,     0,     0,   464,     0,     0,   465,     0,
       0,     0,   466,   467,   468,   469,   470,     0,     0,     0,
       0,     0,     0,   471,   472,     0,   473,   474,   475,     0,
       0,   476,     0,     0,   136,     0,   137,   138,   139,   140,
     141,     0,     0,     0,     0,     0,   142,     0,     0,   143,
     754,   144,   145,   146,   147,   148,   149,   150,     0,   151,
       0,     0,     0,   152,     0,     0,     0,   153,     0,     0,
     154,   155,   156,     0,   157,     0,   158,   159,     0,     0,
     160,     0,     0,   161,   162,     0,   163,   164,     0,   165,
       0,   166,   167,   168,   169,   170,   171,     0,   172,   173,
       0,   174,   175,   176,   177,   178,   179,   180,   181,     0,
     182,   183,     0,   184,   185,   186,   187,   188,     0,   189,
       0,     0,   190,     0,     0,   191,     0,   192,     0,     0,
     193,     0,     0,     0,   194,   195,   196,     0,     0,   197,
       0,     0,     0,     0,   198,   199,     0,     0,     0,     0,
     200,   201,     0,   202,     0,     0,     0,   203,     0,   204,
     205,   206,   207,   208,     0,     0,     0,   209,     0,     0,
     210,   211,   212,     0,     0,     0,   213,     0,   214,   215,
       0,   216,   217,   218,     0,     0,   219,   220,     0,   221,
     222,   223,   224,   225,   226,     0,     0,   227,   228,   229,
       0,     0,   230,   231,     0,   232,   233,   234,     0,     0,
     235,     0,     0,     0,   236,     0,   237,     0,   238,     0,
     239,   240,   241,   242,     0,   243,     0,   244,     0,     0,
       0,   245,   246,     0,   247,     0,     0,   248,   249,     0,
       0,     0,   250,   251,   252,   253,     0,     0,   254,   255,
     256,     0,     0,   257,     0,     0,     0,     0,   258,   259,
       0,     0,     0,   260,     0,   261,   262,     0,   263,   264,
       0,     0,     0,   265,     0,     0,   266,   267,     0,     0,
     268,     0,     0,   269,   270,     0,     0,     0,     0,     0,
     271,   272,     0,   273,     0,   274,     0,   275,   276,     0,
       0,     0,     0,     0,     0,     0,     0,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,     0,   294,   295,   296,     0,   297,
     298,   299,   300,     0,   301,   302,     0,     0,     0,     0,
     303,   304,   305,   306,   307,   308,     0,     0,   309,   310,
       0,   311,     0,   312,     0,   313,   314,   315,   316,   317,
     318,   319,   320,   321,     0,     0,   322,   323,     0,     0,
     324,   325,   326,   327,     0,     0,     0,   328,   329,     0,
       0,     0,   330,     0,   331,   332,   333,     0,     0,   334,
     335,     0,   336,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   337,   338,   339,     0,   340,   341,     0,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,     0,
       0,   352,   353,   354,     0,   355,     0,   356,   357,   358,
     359,   360,     0,   361,   362,   363,     0,     0,   364,     0,
       0,     0,   365,   366,   367,   368,   369,     0,     0,   370,
     371,   372,   373,   374,     0,   375,   376,     0,   377,   378,
     379,     0,     0,   380,     0,   381,     0,   382,   383,     0,
     384,   385,   386,     0,   387,     0,     0,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,     0,   399,
     400,     0,     0,     0,   401,   402,   403,   404,     0,     0,
       0,   405,     0,     0,     0,   406,     0,   407,   408,   409,
     410,     0,   411,   412,   413,   414,   415,     0,     0,     0,
       0,     0,     0,   416,   417,     0,   418,     0,     0,   419,
       0,     0,   420,   421,   422,     0,     0,   423,   424,     0,
     425,   426,   427,   428,   429,   430,     0,     0,   431,   432,
     433,   434,     0,   435,   436,     0,     0,   437,   438,   439,
     440,     0,     0,   441,   442,     0,   443,   444,   445,   446,
       0,     0,     0,     0,     0,   447,   448,     0,     0,     0,
     449,   450,   451,   452,     0,   453,   454,     0,   455,   456,
       0,   457,   458,     0,     0,   459,     0,     0,   460,     0,
     461,     0,   462,   463,     0,     0,     0,     0,     0,     0,
     464,     0,     0,   465,     0,     0,     0,   466,   467,   468,
     469,   470,     0,     0,     0,     0,     0,     0,   471,   472,
       0,   473,   474,   475,     0,     0,   476,     0,     0,   136,
       0,   137,   138,   139,   140,   141,     0,     0,     0,     0,
       0,   142,     0,     0,   143,  2475,   144,   145,   146,   147,
     148,   149,   150,     0,   151,     0,     0,     0,   152,     0,
       0,     0,   153,     0,     0,   154,   155,   156,     0,   157,
       0,   158,   159,     0,     0,   160,     0,     0,   161,   162,
       0,   163,   164,     0,   165,     0,   166,   167,   168,   169,
     170,   171,     0,   172,   173,     0,   174,   175,   176,   177,
     178,   179,   180,   181,     0,   182,   183,     0,   184,   185,
     186,   187,   188,     0,   189,     0,     0,   190,     0,     0,
     191,     0,   192,     0,     0,   193,     0,     0,     0,   194,
     195,   196,     0,     0,   197,     0,     0,     0,     0,   198,
     199,     0,     0,     0,     0,   200,   201,     0,   202,     0,
       0,     0,   203,     0,   204,   205,   206,   207,   208,     0,
       0,     0,   209,     0,     0,   210,   211,   212,     0,     0,
       0,   213,     0,   214,   215,     0,   216,   217,   218,     0,
       0,   219,   220,     0,   221,   222,   223,   224,   225,   226,
       0,     0,   227,   228,   229,     0,     0,   230,   231,     0,
     232,   233,   234,     0,     0,   235,     0,     0,     0,   236,
       0,   237,     0,   238,     0,   239,   240,   241,   242,     0,
     243,     0,   244,     0,     0,     0,   245,   246,     0,   247,
       0,     0,   248,   249,     0,     0,     0,   250,   251,   252,
     253,     0,     0,   254,   255,   256,     0,     0,   257,     0,
       0,     0,     0,   258,   259,     0,     0,     0,   260,     0,
     261,   262,     0,   263,   264,     0,     0,     0,   265,     0,
       0,   266,   267,     0,     0,   268,     0,     0,   269,   270,
     602,     0,     0,     0,     0,   271,   272,     0,   273,     0,
     274,     0,   275,   276,     0,     0,     0,     0,     0,     0,
       0,     0,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,     0,
     294,   295,   296,     0,   297,   298,   299,   300,     0,   301,
     302,     0,     0,     0,     0,   303,   304,   305,   306,   307,
     308,     0,     0,   309,   310,     0,   311,     0,   312,     0,
     313,   314,   315,   316,   317,   318,   319,   320,   321,     0,
       0,   322,   323,     0,     0,   324,   325,   326,   327,     0,
       0,     0,   328,   329,     0,     0,     0,   330,     0,   331,
     332,   333,     0,     0,   334,   335,     0,   336,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   337,   338,   339,
       0,   340,   341,     0,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,     0,     0,   352,   353,   354,     0,
     355,     0,   356,   357,   358,   359,   360,     0,   361,   362,
     363,     0,     0,   364,     0,     0,     0,   365,   366,   367,
     368,   369,     0,     0,   370,   371,   372,   373,   374,     0,
     375,   376,     0,   377,   378,   379,     0,     0,   380,     0,
     381,     0,   382,   383,     0,   384,   385,   386,     0,   387,
       0,     0,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,     0,   399,   400,     0,     0,     0,   401,
     402,   403,   404,     0,     0,     0,   405,     0,     0,     0,
     406,     0,   407,   408,   409,   410,     0,   411,   412,   413,
     414,   415,     0,     0,     0,     0,     0,     0,   416,   417,
       0,   418,     0,     0,   419,     0,     0,   420,   421,   422,
       0,     0,   423,   424,     0,   425,   426,   427,   428,   429,
     430,     0,     0,   431,   432,   433,   434,     0,   435,   436,
       0,     0,   437,   438,   439,   440,     0,   133,   441,   442,
       0,   443,   444,   445,   446,     0,     0,     0,     0,     0,
     447,   448,     0,     0,     0,   449,   450,   451,   452,     0,
     453,   454,     0,   455,   456,     0,   457,   458,     0,     0,
     459,     0,     0,   460,     0,   461,     0,   462,   463,     0,
       0,     0,     0,     0,     0,   464,     0,     0,   465,     0,
       0,     0,   466,   467,   468,   469,   470,     0,     0,     0,
       0,     0,     0,   471,   472,     0,   473,   474,   475,     0,
       0,   476,     0,   136,     0,   137,   138,   139,   140,   141,
       0,     0,     0,     0,     0,   142,     0,     0,   143,  1647,
     144,   145,   146,   147,   148,   149,   150,     0,   151,     0,
       0,     0,   152,     0,     0,     0,   153,     0,     0,   154,
     155,   156,     0,   157,     0,   158,   159,     0,     0,   160,
       0,     0,   161,   162,     0,   163,   164,     0,   165,     0,
     166,   167,   168,   169,   170,   171,     0,   172,   173,     0,
     174,   175,   176,   177,   178,   179,   180,   181,     0,   182,
     183,     0,   184,   185,   186,   187,   188,     0,   189,     0,
       0,   190,     0,     0,   191,     0,   192,     0,     0,   193,
       0,     0,     0,   194,   195,   196,     0,     0,   197,     0,
       0,     0,     0,   198,   199,     0,     0,     0,     0,   200,
     201,     0,   202,     0,     0,     0,   203,     0,   204,   205,
     206,   207,   208,     0,     0,     0,   209,     0,     0,   210,
     211,   212,     0,     0,     0,   213,     0,   214,   215,     0,
     216,   217,   218,     0,     0,   219,   220,     0,   221,   222,
     223,   224,   225,   226,     0,     0,   227,   228,   229,     0,
       0,   230,   231,     0,   232,   233,   234,     0,     0,   235,
       0,     0,     0,   236,     0,   237,     0,   238,     0,   239,
     240,   241,   242,     0,   243,     0,   244,     0,     0,     0,
     245,   246,     0,   247,     0,     0,   248,   249,     0,     0,
       0,   250,   251,   252,   253,     0,     0,   254,   255,   256,
       0,     0,   257,     0,     0,     0,     0,   258,   259,     0,
       0,     0,   260,     0,   261,   262,     0,   263,   264,     0,
       0,     0,   265,     0,     0,   266,   267,     0,     0,   268,
       0,     0,   269,   270,   602,     0,     0,     0,     0,   271,
     272,     0,   273,     0,   274,     0,   275,   276,     0,     0,
       0,     0,     0,     0,     0,     0,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,     0,   294,   295,   296,     0,   297,   298,
     299,   300,     0,   301,   302,     0,     0,     0,     0,   303,
     304,   305,   306,   307,   308,     0,     0,   309,   310,     0,
     311,     0,   312,     0,   313,   314,   315,   316,   317,   318,
     319,   320,   321,     0,     0,   322,   323,     0,     0,   324,
     325,   326,   327,     0,     0,     0,   328,   329,     0,     0,
       0,   330,     0,   331,   332,   333,     0,     0,   334,   335,
       0,   336,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   337,   338,   339,     0,   340,   341,     0,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,     0,     0,
     352,   353,   354,     0,   355,     0,   356,   357,   358,   359,
     360,     0,   361,   362,   363,     0,     0,   364,     0,     0,
       0,   365,   366,   367,   368,   369,     0,     0,   370,   371,
     372,   373,   374,     0,   375,   376,     0,   377,   378,   379,
       0,     0,   380,     0,   381,     0,   382,   383,     0,   384,
     385,   386,     0,   387,     0,     0,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,     0,   399,   400,
       0,     0,     0,   401,   402,   403,   404,     0,     0,     0,
     405,     0,     0,     0,   406,     0,   407,   408,   409,   410,
       0,   411,   412,   413,   414,   415,     0,     0,     0,     0,
       0,     0,   416,   417,     0,   418,     0,     0,   419,     0,
       0,   420,   421,   422,     0,     0,   423,   424,     0,   425,
     426,   427,   428,   429,   430,     0,     0,   431,   432,   433,
     434,     0,   435,   436,     0,     0,   437,   438,   439,   440,
       0,   133,   441,   442,     0,   443,   444,   445,   446,     0,
       0,     0,     0,     0,   447,   448,     0,     0,     0,   449,
     450,   451,   452,     0,   453,   454,     0,   455,   456,     0,
     457,   458,     0,     0,   459,     0,     0,   460,     0,   461,
       0,   462,   463,     0,     0,     0,     0,     0,     0,   464,
       0,     0,   465,     0,     0,     0,   466,   467,   468,   469,
     470,     0,     0,     0,     0,     0,     0,   471,   472,     0,
     473,   474,   475,     0,     0,   476,     0,   136,     0,   137,
     138,   139,   140,   141,     0,     0,     0,     0,     0,   142,
       0,     0,   143,  2762,   144,   145,   146,   147,   148,   149,
     150,     0,   151,     0,     0,     0,   152,     0,     0,     0,
     153,     0,     0,   154,   155,   156,     0,   157,     0,   158,
     159,     0,     0,   160,     0,     0,   161,   162,     0,   163,
     164,     0,   165,     0,   166,   167,   168,   169,   170,   171,
       0,   172,   173,     0,   174,   175,   176,   177,   178,   179,
     180,   181,     0,   182,   183,     0,   184,   185,   186,   187,
     188,     0,   189,     0,     0,   190,     0,     0,   191,     0,
     192,     0,     0,   193,     0,     0,     0,   194,   195,   196,
       0,     0,   197,     0,     0,     0,     0,   198,   199,     0,
       0,     0,     0,   200,   201,     0,   202,     0,     0,     0,
     203,     0,   204,   205,   206,   207,   208,     0,     0,     0,
     209,     0,     0,   210,   211,   212,     0,     0,     0,   213,
       0,   214,   215,     0,   216,   217,   218,     0,     0,   219,
     220,     0,   221,   222,   223,   224,   225,   226,     0,     0,
     227,   228,   229,     0,     0,   230,   231,     0,   232,   233,
     234,     0,     0,   235,     0,     0,     0,   236,     0,   237,
       0,   238,     0,   239,   240,   241,   242,     0,   243,     0,
     244,     0,     0,     0,   245,   246,     0,   247,     0,     0,
     248,   249,     0,     0,     0,   250,   251,   252,   253,     0,
       0,   254,   255,   256,     0,     0,   257,     0,     0,     0,
       0,   258,   259,     0,     0,     0,   260,     0,   261,   262,
       0,   263,   264,     0,     0,     0,   265,     0,     0,   266,
     267,     0,     0,   268,     0,     0,   269,   270,   602,     0,
       0,     0,     0,   271,   272,     0,   273,     0,   274,     0,
     275,   276,     0,     0,     0,     0,     0,     0,     0,     0,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,     0,   294,   295,
     296,     0,   297,   298,   299,   300,     0,   301,   302,     0,
       0,     0,     0,   303,   304,   305,   306,   307,   308,     0,
       0,   309,   310,     0,   311,     0,   312,     0,   313,   314,
     315,   316,   317,   318,   319,   320,   321,     0,     0,   322,
     323,     0,     0,   324,   325,   326,   327,     0,     0,     0,
     328,   329,     0,     0,     0,   330,     0,   331,   332,   333,
       0,     0,   334,   335,     0,   336,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   337,   338,   339,     0,   340,
     341,     0,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,     0,     0,   352,   353,   354,     0,   355,     0,
     356,   357,   358,   359,   360,     0,   361,   362,   363,     0,
       0,   364,     0,     0,     0,   365,   366,   367,   368,   369,
       0,     0,   370,   371,   372,   373,   374,     0,   375,   376,
       0,   377,   378,   379,     0,     0,   380,     0,   381,     0,
     382,   383,     0,   384,   385,   386,     0,   387,     0,     0,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,     0,   399,   400,     0,     0,     0,   401,   402,   403,
     404,     0,     0,     0,   405,     0,     0,     0,   406,     0,
     407,   408,   409,   410,     0,   411,   412,   413,   414,   415,
       0,     0,     0,     0,     0,     0,   416,   417,     0,   418,
       0,     0,   419,     0,     0,   420,   421,   422,     0,     0,
     423,   424,     0,   425,   426,   427,   428,   429,   430,     0,
       0,   431,   432,   433,   434,     0,   435,   436,     0,     0,
     437,   438,   439,   440,     0,   133,   441,   442,     0,   443,
     444,   445,   446,     0,     0,     0,     0,     0,   447,   448,
       0,     0,     0,   449,   450,   451,   452,     0,   453,   454,
       0,   455,   456,     0,   457,   458,     0,     0,   459,     0,
       0,   460,     0,   461,     0,   462,   463,     0,     0,     0,
       0,     0,     0,   464,     0,     0,   465,     0,     0,     0,
     466,   467,   468,   469,   470,     0,     0,     0,     0,     0,
       0,   471,   472,     0,   473,   474,   475,     0,     0,   476,
       0,   136,     0,   137,   138,   139,   140,   141,     0,     0,
       0,     0,     0,   142,     0,     0,   143,  3417,   144,   145,
     146,   147,   148,   149,   150,     0,   151,     0,     0,     0,
     152,     0,     0,     0,   153,     0,     0,   154,   155,   156,
       0,   157,     0,   158,   159,     0,     0,   160,     0,     0,
     161,   162,     0,   163,   164,     0,   165,     0,   166,   167,
     168,   169,   170,   171,     0,   172,   173,     0,   174,   175,
     176,   177,   178,   179,   180,   181,  1227,   182,   183,     0,
     184,   185,   186,   187,   188,     0,   189,     0,     0,   190,
       0,     0,   191,     0,   192,     0,     0,   193,     0,     0,
       0,   194,   195,   196,     0,     0,   197,     0,     0,     0,
       0,   198,   199,     0,     0,     0,     0,   200,   201,     0,
     202,     0,     0,     0,   203,     0,   204,   205,   206,   207,
     208,     0,     0,     0,   209,     0,     0,   210,   211,   212,
       0,     0,     0,   213,     0,   214,   215,     0,   216,   217,
     218,     0,     0,   219,   220,     0,   221,   222,   223,   224,
     225,   226,     0,     0,   227,   228,   229,     0,     0,   230,
     231,     0,   232,   233,   234,     0,     0,   235,     0,     0,
       0,   236,     0,   237,     0,   238,     0,   239,   240,   241,
     242,     0,   243,     0,   244,     0,     0,     0,   245,   246,
       0,   247,     0,     0,   248,   249,     0,     0,     0,   250,
     251,   252,   253,     0,     0,   254,   255,   256,     0,     0,
     257,     0,     0,     0,     0,   258,   259,     0,     0,     0,
     260,     0,   261,   262,     0,   263,   264,     0,     0,     0,
     265,     0,     0,   266,   267,     0,     0,   268,     0,     0,
     269,   270,     0,     0,     0,     0,     0,   271,   272,     0,
     273,     0,   274,     0,   275,   276,     0,     0,     0,     0,
       0,     0,     0,     0,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,     0,   294,   295,   296,     0,   297,   298,   299,   300,
       0,   301,   302,     0,     0,     0,     0,   303,   304,   305,
     306,   307,   308,     0,     0,   309,   310,     0,   311,     0,
     312,     0,   313,   314,   315,   316,   317,   318,   319,   320,
     321,     0,     0,   322,   323,     0,     0,   324,   325,   326,
     327,     0,     0,     0,   328,   329,     0,     0,     0,   330,
       0,   331,   332,   333,     0,     0,   334,   335,     0,   336,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   337,
     338,   339,     0,   340,   341,     0,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,     0,     0,   352,   353,
     354,     0,   355,     0,   356,   357,   358,   359,   360,     0,
     361,   362,   363,     0,     0,   364,     0,     0,     0,   365,
     366,   367,   368,   369,     0,     0,   370,   371,   372,   373,
     374,     0,   375,   376,     0,   377,   378,   379,     0,     0,
     380,     0,   381,     0,   382,   383,     0,   384,   385,   386,
       0,   387,     0,     0,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,     0,   399,   400,     0,     0,
       0,   401,   402,   403,   404,     0,     0,     0,   405,     0,
       0,     0,   406,     0,   407,   408,   409,   410,     0,   411,
     412,   413,   414,   415,     0,     0,     0,     0,     0,     0,
     416,   417,     0,   418,     0,     0,   419,     0,     0,   420,
     421,   422,     0,     0,   423,   424,     0,   425,   426,   427,
     428,   429,   430,     0,     0,   431,   432,   433,   434,     0,
     435,   436,     0,     0,   437,   438,   439,   440,     0,     0,
     441,   442,     0,   443,   444,   445,   446,     0,     0,     0,
       0,     0,   447,   448,     0,     0,     0,   449,   450,   451,
     452,     0,   453,   454,     0,   455,   456,     0,   457,   458,
       0,     0,   459,     0,     0,   460,     0,   461,     0,   462,
     463,     0,     0,     0,     0,     0,     0,   464,     0,     0,
     465,     0,     0,     0,   466,   467,   468,   469,   470,     0,
       0,     0,     0,     0,     0,   471,   472,     0,   473,   474,
     475,     0,     0,   476,     0,   136,     0,   137,   138,   139,
     140,   141,     0,     0,     0,     0,     0,   142,     0,     0,
     143,  1228,   144,   145,   146,   147,   148,   149,   150,     0,
     151,     0,     0,     0,   152,     0,     0,     0,   153,     0,
       0,   154,   155,   156,     0,   157,     0,   158,   159,     0,
       0,   160,     0,     0,   161,   162,     0,   163,   164,     0,
     165,     0,   166,   167,   168,   169,   170,   171,     0,   172,
     173,     0,   174,   175,   176,   177,   178,   179,   180,   181,
       0,   182,   183,     0,   184,   185,   186,   187,   188,     0,
     189,     0,     0,   190,     0,     0,   191,     0,   192,     0,
       0,   193,     0,     0,     0,   194,   195,   196,     0,     0,
     197,     0,     0,     0,     0,   198,   199,     0,     0,     0,
       0,   200,   201,     0,   202,     0,     0,     0,   203,     0,
     204,   205,   206,   207,   208,     0,     0,     0,   209,     0,
       0,   210,   211,   212,     0,     0,     0,   213,     0,   214,
     215,     0,   216,   217,   218,     0,     0,   219,   220,     0,
     221,   222,   223,   224,   225,   226,     0,     0,   227,   228,
     229,     0,     0,   230,   231,     0,   232,   233,   234,     0,
       0,   235,     0,     0,     0,   236,     0,   237,     0,   238,
       0,   239,   240,   241,   242,     0,   243,     0,   244,     0,
       0,     0,   245,   246,     0,   247,     0,     0,   248,   249,
       0,     0,     0,   250,   251,   252,   253,     0,     0,   254,
     255,   256,     0,     0,   257,     0,     0,     0,     0,   258,
     259,     0,     0,     0,   260,     0,   261,   262,     0,   263,
     264,     0,     0,     0,   265,     0,     0,   266,   267,     0,
       0,   268,     0,     0,   269,   270,     0,     0,     0,     0,
       0,   271,   272,     0,   273,     0,   274,     0,   275,   276,
       0,     0,     0,     0,     0,     0,     0,     0,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,     0,   294,   295,   296,     0,
     297,   298,   299,   300,     0,   301,   302,     0,     0,     0,
       0,   303,   304,   305,   306,   307,   308,     0,     0,   309,
     310,     0,   311,     0,   312,     0,   313,   314,   315,   316,
     317,   318,   319,   320,   321,     0,     0,   322,   323,     0,
       0,   324,   325,   326,   327,     0,     0,     0,   328,   329,
       0,     0,     0,   330,     0,   331,   332,   333,     0,     0,
     334,   335,     0,   336,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   337,   338,   339,     0,   340,   341,     0,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
       0,     0,   352,   353,   354,     0,   355,     0,   356,   357,
     358,   359,   360,     0,   361,   362,   363,     0,     0,   364,
       0,     0,     0,   365,   366,   367,   368,   369,     0,     0,
     370,   371,   372,   373,   374,     0,   375,   376,     0,   377,
     378,   379,     0,     0,   380,     0,   381,     0,   382,   383,
       0,   384,   385,   386,     0,   387,     0,     0,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,     0,
     399,   400,     0,     0,     0,   401,   402,   403,   404,     0,
       0,     0,   405,     0,     0,     0,   406,     0,   407,   408,
     409,   410,     0,   411,   412,   413,   414,   415,     0,     0,
       0,     0,     0,     0,   416,   417,     0,   418,     0,     0,
     419,     0,     0,   420,   421,   422,     0,     0,   423,   424,
       0,   425,   426,   427,   428,   429,   430,     0,     0,   431,
     432,   433,   434,     0,   435,   436,     0,     0,   437,   438,
     439,   440,     0,     0,   441,   442,     0,   443,   444,   445,
     446,     0,     0,     0,     0,     0,   447,   448,     0,     0,
       0,   449,   450,   451,   452,     0,   453,   454,     0,   455,
     456,     0,   457,   458,     0,     0,   459,     0,     0,   460,
       0,   461,     0,   462,   463,     0,     0,     0,     0,     0,
       0,   464,     0,     0,   465,     0,     0,     0,   466,   467,
     468,   469,   470,     0,     0,     0,     0,     0,     0,   471,
     472,     0,   473,   474,   475,     0,     0,   476,     0,   136,
       0,   137,   138,   139,   140,   141,     0,     0,     0,     0,
       0,   142,     0,     0,     0,  1228,   144,   145,   146,   147,
     148,   149,     0,     0,  -362,     0,     0,     0,   152,     0,
       0,     0,   153,     0,     0,   154,   155,   156,     0,   157,
       0,     0,     0,     0,     0,   160,  3851,     0,   161,   162,
       0,   163,     0,     0,     0,     0,   166,   167,   168,  3852,
     170,   171,     0,   172,   173,     0,   174,     0,   176,     0,
     178,   179,   180,   181,     0,   182,   183,     0,   184,   185,
     186,     0,   188,     0,   189,     0,     0,   190,     0,     0,
     191,     0,   192,     0,     0,   193,     0,     0,     0,   194,
     195,   196,     0,     0,   197,     0,     0,     0,     0,   198,
       0,     0,     0,     0,     0,   200,   201,     0,   202,     0,
       0,     0,   203,     0,   204,   205,   206,   207,   208,     0,
       0,     0,     0,     0,     0,   210,   211,   212,     0,     0,
       0,   213,     0,     0,   215,     0,   216,   217,   218,     0,
       0,   219,   220,     0,   221,   222,   223,   224,   225,     0,
       0,     0,   227,   228,   229,     0,     0,   230,   231,  3853,
     232,   233,   234,     0,     0,     0,     0,     0,     0,   236,
       0,   237,     0,   238,     0,   239,   240,   241,   242,     0,
     243,     0,   244,     0,     0,     0,     0,   246,     0,     0,
       0,     0,     0,   249,     0,     0,     0,   250,   251,   252,
     253,  3854,     0,   254,   255,   256,     0,     0,   257,     0,
       0,     0,     0,   258,     0,     0,     0,     0,   260,     0,
     261,   262,     0,   263,   264,  3855,     0,     0,   265,     0,
       0,     0,   267,     0,     0,   268,  3856,     0,   269,   270,
       0,     0,     0,     0,     0,   271,   272,     0,   273,     0,
     274,     0,   275,   276,     0,     0,     0,     0,  -317,     0,
       0,     0,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,     0,
     294,   295,   296,     0,   297,   298,   299,   300,     0,   301,
     302,     0,     0,     0,     0,   303,   304,   305,   306,   307,
     308,     0,     0,   309,   310,     0,   311,     0,   312,     0,
     313,   314,   315,   316,   317,   318,   319,   320,   321,     0,
       0,   322,   323,     0,     0,   324,   325,   326,   327,     0,
       0,     0,     0,   329,     0,     0,     0,   330,     0,   331,
     332,   333,     0,     0,   334,  3857,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   338,   339,
       0,     0,   341,     0,   342,   343,   344,   345,   346,   347,
     348,   349,   350,     0,     0,     0,     0,   353,   354,     0,
     355,     0,   356,   357,   358,   359,   360,     0,   361,   362,
     363,     0,     0,   364,     0,     0,     0,   365,   366,   367,
     368,   369,     0,     0,   370,   371,   372,   373,   374,     0,
     375,     0,     0,   377,     0,   379,  -317,     0,   380,     0,
       0,     0,   382,     0,     0,   384,   385,   386,  3858,   387,
       0,     0,     0,   389,   390,   391,   392,   393,   394,   395,
       0,   397,   398,     0,   399,     0,     0,     0,     0,   401,
     402,   403,     0,     0,     0,     0,   405,     0,     0,     0,
     406,     0,     0,   408,     0,   410,     0,   411,     0,     0,
     414,   415,     0,     0,     0,     0,     0,     0,   416,   417,
       0,   418,     0,     0,   419,     0,     0,   420,     0,   422,
       0,     0,     0,   424,     0,   425,   426,   427,   428,   429,
     430,     0,     0,   431,   432,   433,   434,     0,   435,   436,
       0,     0,   437,   438,   439,   440,     0,     0,   441,   442,
       0,   443,   444,   445,   446,     0,     0,     0,     0,     0,
     447,   448,     0,     0,     0,     0,   450,   451,   452,     0,
     453,   454,     0,   455,   456,     0,     0,     0,     0,     0,
     459,     0,     0,   460,     0,     0,     0,   462,   463,     0,
       0,     0,     0,     0,     0,   464,     0,     0,   465,     0,
       0,     0,   466,   467,   468,   469,   470,     0,     0,  -317,
       0,     0,     0,   471,     0,     0,   473,     0,   475,     0,
     136,   476,   137,   138,   139,   140,   141,     0,     0,     0,
       0,     0,   142,     0,  4362,   143,     0,   144,   145,   146,
     147,   148,   149,   150,     0,   151,     0,     0,     0,   152,
       0,     0,     0,   153,     0,     0,   154,   155,   156,     0,
     157,     0,   158,   159,     0,     0,   160,     0,     0,   161,
     162,     0,   163,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,     0,   174,   175,   176,
     177,   178,   179,   180,   181,     0,   182,   183,     0,   184,
     185,   186,   187,   188,     0,   189,     0,     0,   190,     0,
       0,   191,     0,   192,     0,     0,   193,     0,     0,     0,
     194,   195,   196,     0,     0,   197,     0,     0,     0,     0,
     198,   199,     0,     0,     0,     0,   200,   201,     0,   202,
       0,     0,     0,   203,     0,   204,   205,   206,   207,   208,
       0,     0,     0,   209,     0,     0,   210,   211,   212,     0,
       0,     0,   213,     0,   214,   215,     0,   216,   217,   218,
       0,     0,   219,   220,     0,   221,   222,   223,   224,   225,
     226,     0,     0,   227,   228,   229,     0,     0,   230,   231,
       0,   232,   233,   234,     0,     0,   235,     0,     0,     0,
     236,     0,   237,     0,   238,     0,   239,   240,   241,   242,
       0,   243,     0,   244,     0,     0,     0,   245,   246,     0,
     247,     0,     0,   248,   249,     0,     0,     0,   250,   251,
     252,   253,     0,     0,   254,   255,   256,     0,     0,   257,
       0,     0,     0,     0,   258,   259,     0,     0,     0,   260,
       0,   261,   262,     0,   263,   264,     0,     0,     0,   265,
       0,     0,   266,   267,     0,     0,   268,     0,     0,   269,
     270,     0,     0,     0,     0,     0,   271,   272,     0,   273,
       0,   274,     0,   275,   276,     0,     0,     0,     0,     0,
       0,     0,     0,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
       0,   294,   295,   296,     0,   297,   298,   299,   300,     0,
     301,   302,     0,     0,     0,     0,   303,   304,   305,   306,
     307,   308,     0,     0,   309,   310,     0,   311,     0,   312,
       0,   313,   314,   315,   316,   317,   318,   319,   320,   321,
       0,     0,   322,   323,     0,     0,   324,   325,   326,   327,
       0,     0,     0,   328,   329,     0,     0,     0,   330,     0,
     331,   332,   333,     0,     0,   334,   335,     0,   336,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   337,   338,
     339,     0,   340,   341,     0,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,     0,     0,   352,   353,   354,
       0,   355,     0,   356,   357,   358,   359,   360,     0,   361,
     362,   363,     0,     0,   364,     0,     0,     0,   365,   366,
     367,   368,   369,     0,     0,   370,   371,   372,   373,   374,
       0,   375,   376,     0,   377,   378,   379,     0,     0,   380,
       0,   381,     0,   382,   383,     0,   384,   385,   386,     0,
     387,     0,     0,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,     0,   399,   400,     0,     0,     0,
     401,   402,   403,   404,     0,     0,     0,   405,     0,     0,
       0,   406,     0,   407,   408,   409,   410,     0,   411,   412,
     413,   414,   415,     0,     0,     0,     0,     0,     0,   416,
     417,     0,   418,     0,     0,   419,     0,     0,   420,   421,
     422,     0,     0,   423,   424,     0,   425,   426,   427,   428,
     429,   430,     0,     0,   431,   432,   433,   434,     0,   435,
     436,     0,     0,   437,   438,   439,   440,     0,     0,   441,
     442,     0,   443,   444,   445,   446,     0,     0,     0,     0,
       0,   447,   448,     0,     0,     0,   449,   450,   451,   452,
       0,   453,   454,     0,   455,   456,     0,   457,   458,     0,
       0,   459,     0,     0,   460,     0,   461,     0,   462,   463,
       0,     0,     0,     0,     0,     0,   464,     0,     0,   465,
       0,     0,     0,   466,   467,   468,   469,   470,     0,     0,
       0,     0,     0,     0,   471,   472,     0,   473,   474,   475,
       0,   136,   476,   137,   138,   139,   140,   141,  2062,     0,
       0,     0,     0,   142,     0,     0,   143,     0,   144,   145,
     146,   147,   148,   149,   150,     0,   151,     0,     0,     0,
     152,     0,     0,     0,   153,     0,     0,   154,   155,   156,
       0,   157,     0,   158,   159,     0,     0,   160,     0,     0,
     161,   162,     0,   163,   164,     0,   165,     0,   166,   167,
     168,   169,   170,   171,     0,   172,   173,     0,   174,   175,
     176,   177,   178,   179,   180,   181,     0,   182,   183,     0,
     184,   185,   186,   187,   188,     0,   189,     0,     0,   190,
       0,     0,   191,     0,   192,     0,     0,   193,     0,     0,
       0,   194,   195,   196,     0,     0,   197,     0,     0,     0,
       0,   198,   199,     0,     0,     0,     0,   200,   201,     0,
     202,     0,     0,     0,   203,     0,   204,   205,   206,   207,
     208,     0,     0,     0,   209,     0,     0,   210,   211,   212,
       0,     0,     0,   213,     0,   214,   215,     0,   216,   217,
     218,     0,     0,   219,   220,     0,   221,   222,   223,   224,
     225,   226,     0,     0,   227,   228,   229,     0,     0,   230,
     231,     0,   232,   233,   234,     0,     0,   235,     0,     0,
       0,   236,     0,   237,     0,   238,     0,   239,   240,   241,
     242,     0,   243,     0,   244,     0,     0,     0,   245,   246,
       0,   247,     0,     0,   248,   249,     0,     0,     0,   250,
     251,   252,   253,     0,     0,   254,   255,   256,     0,     0,
     257,     0,     0,     0,     0,   258,   259,     0,     0,     0,
     260,     0,   261,   262,     0,   263,   264,     0,     0,     0,
     265,     0,     0,   266,   267,     0,     0,   268,     0,     0,
     269,   270,     0,     0,     0,     0,     0,   271,   272,     0,
     273,     0,   274,     0,   275,   276,     0,     0,     0,     0,
       0,     0,     0,     0,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,     0,   294,   295,   296,     0,   297,   298,   299,   300,
       0,   301,   302,     0,     0,     0,     0,   303,   304,   305,
     306,   307,   308,     0,     0,   309,   310,     0,   311,     0,
     312,     0,   313,   314,   315,   316,   317,   318,   319,   320,
     321,     0,     0,   322,   323,     0,     0,   324,   325,   326,
     327,     0,     0,     0,   328,   329,     0,     0,     0,   330,
       0,   331,   332,   333,     0,     0,   334,   335,     0,   336,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   337,
     338,   339,     0,   340,   341,     0,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,     0,     0,   352,   353,
     354,     0,   355,     0,   356,   357,   358,   359,   360,     0,
     361,   362,   363,     0,     0,   364,     0,     0,     0,   365,
     366,   367,   368,   369,     0,     0,   370,   371,   372,   373,
     374,     0,   375,   376,     0,   377,   378,   379,     0,     0,
     380,     0,   381,     0,   382,   383,     0,   384,   385,   386,
       0,   387,     0,     0,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,     0,   399,   400,     0,     0,
       0,   401,   402,   403,   404,     0,     0,     0,   405,     0,
       0,     0,   406,     0,   407,   408,   409,   410,     0,   411,
     412,   413,   414,   415,     0,     0,     0,     0,     0,     0,
     416,   417,     0,   418,     0,     0,   419,     0,     0,   420,
     421,   422,     0,     0,   423,   424,     0,   425,   426,   427,
     428,   429,   430,     0,     0,   431,   432,   433,   434,     0,
     435,   436,     0,     0,   437,   438,   439,   440,     0,     0,
     441,   442,     0,   443,   444,   445,   446,     0,     0,     0,
       0,     0,   447,   448,     0,     0,     0,   449,   450,   451,
     452,     0,   453,   454,     0,   455,   456,     0,   457,   458,
       0,     0,   459,     0,     0,   460,     0,   461,     0,   462,
     463,     0,     0,     0,     0,     0,     0,   464,     0,     0,
     465,     0,     0,     0,   466,   467,   468,   469,   470,     0,
       0,     0,     0,     0,     0,   471,   472,     0,   473,   474,
     475,     0,   136,   476,   137,   138,   139,   140,   141,  2750,
       0,     0,     0,     0,   142,     0,     0,   143,     0,   144,
     145,   146,   147,   148,   149,   150,     0,   151,     0,     0,
       0,   152,     0,     0,     0,   153,     0,     0,   154,   155,
     156,     0,   157,     0,   158,   159,     0,     0,   160,     0,
       0,   161,   162,     0,   163,   164,     0,   165,     0,   166,
     167,   168,   169,   170,   171,     0,   172,   173,     0,   174,
     175,   176,   177,   178,   179,   180,   181,     0,   182,   183,
       0,   184,   185,   186,   187,   188,     0,   189,     0,     0,
     190,     0,     0,   191,     0,   192,     0,     0,   193,     0,
       0,     0,   194,   195,   196,     0,     0,   197,     0,     0,
       0,     0,   198,   199,     0,     0,     0,     0,   200,   201,
       0,   202,     0,     0,     0,   203,     0,   204,   205,   206,
     207,   208,     0,     0,     0,   209,     0,     0,   210,   211,
     212,     0,     0,     0,   213,     0,   214,   215,     0,   216,
     217,   218,     0,     0,   219,   220,     0,   221,   222,   223,
     224,   225,   226,     0,     0,   227,   228,   229,     0,     0,
     230,   231,     0,   232,   233,   234,     0,     0,   235,     0,
       0,     0,   236,     0,   237,     0,   238,     0,   239,   240,
     241,   242,     0,   243,     0,   244,     0,     0,     0,   245,
     246,     0,   247,     0,     0,   248,   249,     0,     0,     0,
     250,   251,   252,   253,     0,     0,   254,   255,   256,     0,
       0,   257,     0,     0,     0,     0,   258,   259,     0,     0,
       0,   260,     0,   261,   262,     0,   263,   264,     0,     0,
       0,   265,     0,     0,   266,   267,     0,     0,   268,     0,
       0,   269,   270,     0,     0,     0,     0,     0,   271,   272,
       0,   273,     0,   274,     0,   275,   276,     0,     0,     0,
       0,     0,     0,     0,     0,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,     0,   294,   295,   296,     0,   297,   298,   299,
     300,     0,   301,   302,     0,     0,     0,     0,   303,   304,
     305,   306,   307,   308,     0,     0,   309,   310,     0,   311,
       0,   312,     0,   313,   314,   315,   316,   317,   318,   319,
     320,   321,     0,     0,   322,   323,     0,     0,   324,   325,
     326,   327,     0,     0,     0,   328,   329,     0,     0,     0,
     330,     0,   331,   332,   333,     0,     0,   334,   335,     0,
     336,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     337,   338,   339,     0,   340,   341,     0,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,     0,     0,   352,
     353,   354,     0,   355,     0,   356,   357,   358,   359,   360,
       0,   361,   362,   363,     0,     0,   364,     0,     0,     0,
     365,   366,   367,   368,   369,     0,     0,   370,   371,   372,
     373,   374,     0,   375,   376,     0,   377,   378,   379,     0,
       0,   380,     0,   381,     0,   382,   383,     0,   384,   385,
     386,     0,   387,     0,     0,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,     0,   399,   400,     0,
       0,     0,   401,   402,   403,   404,     0,     0,     0,   405,
       0,     0,     0,   406,     0,   407,   408,   409,   410,     0,
     411,   412,   413,   414,   415,     0,     0,     0,     0,     0,
       0,   416,   417,     0,   418,     0,     0,   419,     0,     0,
     420,   421,   422,     0,     0,   423,   424,     0,   425,   426,
     427,   428,   429,   430,     0,     0,   431,   432,   433,   434,
       0,   435,   436,     0,     0,   437,   438,   439,   440,     0,
       0,   441,   442,     0,   443,   444,   445,   446,     0,     0,
       0,     0,     0,   447,   448,     0,     0,     0,   449,   450,
     451,   452,     0,   453,   454,     0,   455,   456,     0,   457,
     458,     0,     0,   459,     0,     0,   460,     0,   461,     0,
     462,   463,     0,     0,     0,     0,     0,     0,   464,     0,
       0,   465,     0,     0,     0,   466,   467,   468,   469,   470,
       0,     0,     0,     0,     0,     0,   471,   472,     0,   473,
     474,   475,     0,   136,   476,   137,   138,   139,   140,   141,
    3086,     0,     0,     0,     0,   142,     0,     0,   143,     0,
     144,   145,   146,   147,   148,   149,   150,     0,   151,     0,
       0,     0,   152,     0,     0,     0,   153,     0,     0,   154,
     155,   156,     0,   157,     0,   158,   159,     0,     0,   160,
       0,     0,   161,   162,     0,   163,   164,     0,   165,     0,
     166,   167,   168,   169,   170,   171,     0,   172,   173,     0,
     174,   175,   176,   177,   178,   179,   180,   181,     0,   182,
     183,     0,   184,   185,   186,   187,   188,     0,   189,     0,
       0,   190,     0,     0,   191,     0,   192,     0,     0,   193,
       0,     0,     0,   194,   195,   196,     0,     0,   197,     0,
       0,     0,     0,   198,   199,     0,     0,     0,     0,   200,
     201,     0,   202,     0,     0,     0,   203,     0,   204,   205,
     206,   207,   208,     0,     0,     0,   209,     0,     0,   210,
     211,   212,     0,     0,     0,   213,     0,   214,   215,     0,
     216,   217,   218,     0,     0,   219,   220,     0,   221,   222,
     223,   224,   225,   226,     0,     0,   227,   228,   229,     0,
       0,   230,   231,     0,   232,   233,   234,     0,     0,   235,
       0,     0,     0,   236,     0,   237,     0,   238,     0,   239,
     240,   241,   242,     0,   243,     0,   244,     0,     0,     0,
     245,   246,     0,   247,     0,     0,   248,   249,     0,     0,
       0,   250,   251,   252,   253,     0,     0,   254,   255,   256,
       0,     0,   257,     0,     0,     0,     0,   258,   259,     0,
       0,     0,   260,     0,   261,   262,     0,   263,   264,     0,
       0,     0,   265,     0,     0,   266,   267,     0,     0,   268,
       0,     0,   269,   270,     0,     0,     0,     0,     0,   271,
     272,     0,   273,     0,   274,     0,   275,   276,     0,     0,
       0,     0,     0,     0,     0,     0,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,     0,   294,   295,   296,     0,   297,   298,
     299,   300,     0,   301,   302,     0,     0,     0,     0,   303,
     304,   305,   306,   307,   308,     0,     0,   309,   310,     0,
     311,     0,   312,     0,   313,   314,   315,   316,   317,   318,
     319,   320,   321,     0,     0,   322,   323,     0,     0,   324,
     325,   326,   327,     0,     0,     0,   328,   329,     0,     0,
       0,   330,     0,   331,   332,   333,     0,     0,   334,   335,
       0,   336,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   337,   338,   339,     0,   340,   341,     0,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,     0,     0,
     352,   353,   354,     0,   355,     0,   356,   357,   358,   359,
     360,     0,   361,   362,   363,     0,     0,   364,     0,     0,
       0,   365,   366,   367,   368,   369,     0,     0,   370,   371,
     372,   373,   374,     0,   375,   376,     0,   377,   378,   379,
       0,     0,   380,     0,   381,     0,   382,   383,     0,   384,
     385,   386,     0,   387,     0,     0,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,     0,   399,   400,
       0,     0,     0,   401,   402,   403,   404,     0,     0,     0,
     405,     0,     0,     0,   406,     0,   407,   408,   409,   410,
       0,   411,   412,   413,   414,   415,     0,     0,     0,     0,
       0,     0,   416,   417,     0,   418,     0,     0,   419,     0,
       0,   420,   421,   422,     0,     0,   423,   424,     0,   425,
     426,   427,   428,   429,   430,     0,     0,   431,   432,   433,
     434,     0,   435,   436,     0,     0,   437,   438,   439,   440,
       0,     0,   441,   442,     0,   443,   444,   445,   446,     0,
       0,     0,     0,     0,   447,   448,     0,     0,     0,   449,
     450,   451,   452,     0,   453,   454,     0,   455,   456,     0,
     457,   458,     0,     0,   459,     0,     0,   460,     0,   461,
       0,   462,   463,     0,     0,     0,     0,     0,     0,   464,
       0,     0,   465,     0,     0,     0,   466,   467,   468,   469,
     470,     0,     0,     0,     0,     0,     0,   471,   472,     0,
     473,   474,   475,     0,   136,   476,   137,   138,   139,   140,
     141,  3422,     0,     0,     0,     0,   142,     0,     0,   143,
       0,   144,   145,   146,   147,   148,   149,   150,     0,   151,
       0,     0,     0,   152,     0,     0,     0,   153,     0,     0,
     154,   155,   156,     0,   157,     0,   158,   159,     0,     0,
     160,     0,     0,   161,   162,     0,   163,   164,     0,   165,
       0,   166,   167,   168,   169,   170,   171,     0,   172,   173,
       0,   174,   175,   176,   177,   178,   179,   180,   181,     0,
     182,   183,     0,   184,   185,   186,   187,   188,     0,   189,
       0,     0,   190,     0,     0,   191,     0,   192,     0,     0,
     193,     0,     0,     0,   194,   195,   196,     0,     0,   197,
       0,     0,     0,     0,   198,   199,  2388,     0,     0,     0,
     200,   201,     0,   202,     0,     0,     0,   203,     0,   204,
     205,   206,   207,   208,     0,     0,     0,   209,     0,     0,
     210,   211,   212,     0,     0,     0,   213,     0,   214,   215,
       0,   216,   217,   218,     0,     0,   219,   220,     0,   221,
     222,   223,   224,   225,   226,     0,     0,   227,   228,   229,
       0,     0,   230,   231,     0,   232,   233,   234,  2389,     0,
     235,     0,     0,     0,   236,     0,   237,     0,   238,     0,
     239,   240,   241,   242,     0,   243,     0,   244,     0,     0,
       0,   245,   246,     0,   247,  2390,     0,   248,   249,     0,
       0,     0,   250,   251,   252,   253,     0,     0,   254,   255,
     256,     0,     0,   257,     0,     0,     0,     0,   258,   259,
       0,     0,     0,   260,     0,   261,   262,     0,   263,   264,
       0,     0,     0,   265,     0,     0,   266,   267,     0,     0,
     268,     0,     0,   269,   270,     0,     0,     0,     0,     0,
     271,   272,     0,   273,     0,   274,     0,   275,   276,     0,
       0,  2391,     0,     0,     0,     0,     0,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,     0,   294,   295,   296,     0,   297,
     298,   299,   300,     0,   301,   302,     0,     0,     0,     0,
     303,   304,   305,   306,   307,   308,     0,     0,   309,   310,
       0,   311,     0,   312,     0,   313,   314,   315,   316,   317,
     318,   319,   320,   321,     0,     0,   322,   323,     0,     0,
     324,   325,   326,   327,   998,   999,     0,   328,   329,     0,
       0,  2392,   330,     0,   331,   332,   333,     0,     0,   334,
     335,     0,   336,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   337,   338,   339,     0,   340,   341,     0,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,     0,
       0,   352,   353,   354,     0,   355,     0,   356,   357,   358,
     359,   360,     0,   361,   362,   363,     0,     0,   364,     0,
       0,     0,   365,   366,   367,   368,   369,     0,     0,   370,
     371,   372,   373,   374,     0,   375,   376,     0,   377,   378,
     379,     0,     0,   380,     0,   381,     0,   382,   383,     0,
     384,   385,   386,     0,   387,     0,     0,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,     0,   399,
     400,     0,     0,     0,   401,   402,   403,   404,     0,     0,
       0,   405,     0,     0,     0,   406,     0,   407,   408,   409,
     410,     0,   411,   412,   413,   414,   415,     0,     0,  4349,
     551,  4350,     0,   416,   417,     0,   418,     0,     0,   419,
       0,     0,   420,   421,   422,     0,     0,   423,   424,     0,
     425,   426,   427,   428,   429,   430,     0,     0,   431,   432,
     433,   434,     0,   435,   436,     0,     0,   437,   438,   439,
     440,     0,     0,   441,   442,     0,   443,   444,   445,   446,
       0,     0,     0,     0,     0,   447,   448,     0,     0,     0,
     449,   450,   451,   452,  2393,   453,   454,     0,   455,   456,
       0,   457,   458,     0,     0,   459,     0,     0,   460,     0,
     461,     0,   462,   463,     0,     0,     0,     0,     0,     0,
     464,     0,     0,   465,     0,     0,     0,   466,   467,   468,
     469,   470,     0,     0,     0,     0,     0,     0,   471,   472,
       0,   473,   474,   475,     0,   136,   476,   137,   138,   139,
     140,   141,     0,     0,     0,     0,     0,   142,     0,     0,
     143,     0,   144,   145,   146,   147,   148,   149,   150,     0,
     151,     0,     0,  2588,   152,     0,     0,     0,   153,     0,
       0,   154,   155,   156,     0,   157,     0,   158,   159,     0,
       0,   160,     0,     0,   161,   162,     0,   163,   164,     0,
     165,     0,   166,   167,   168,   169,   170,   171,     0,   172,
     173,     0,   174,   175,   176,   177,   178,   179,   180,   181,
       0,   182,   183,     0,   184,   185,   186,   187,   188,     0,
     189,     0,     0,   190,     0,     0,   191,     0,   192,     0,
       0,   193,     0,     0,     0,   194,   195,   196,     0,     0,
     197,     0,     0,     0,     0,   198,   199,     0,     0,     0,
    2756,   200,   201,     0,   202,     0,     0,     0,   203,     0,
     204,   205,   206,   207,   208,     0,     0,     0,   209,     0,
       0,   210,   211,   212,     0,     0,     0,   213,     0,   214,
     215,     0,   216,   217,   218,  2208,     0,   219,   220,     0,
     221,   222,   223,   224,   225,   226,     0,     0,   227,   228,
     229,     0,     0,   230,   231,     0,   232,   233,   234,     0,
       0,   235,     0,     0,     0,   236,     0,   237,     0,   238,
       0,   239,   240,   241,   242,     0,   243,     0,   244,     0,
       0,     0,   245,   246,     0,   247,     0,     0,   248,   249,
       0,     0,     0,   250,   251,   252,   253,     0,     0,   254,
     255,   256,     0,     0,   257,     0,     0,     0,     0,   258,
     259,     0,     0,     0,   260,     0,   261,   262,     0,   263,
     264,     0,     0,     0,   265,     0,     0,   266,   267,     0,
       0,   268,     0,     0,   269,   270,   602,     0,     0,     0,
       0,   271,   272,     0,   273,     0,   274,     0,   275,   276,
       0,     0,     0,     0,     0,     0,     0,     0,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,     0,   294,   295,   296,     0,
     297,   298,   299,   300,     0,   301,   302,     0,     0,     0,
       0,   303,   304,   305,   306,   307,   308,     0,     0,   309,
     310,     0,   311,     0,   312,     0,   313,   314,   315,   316,
     317,   318,   319,   320,   321,     0,     0,   322,   323,     0,
       0,   324,   325,   326,   327,     0,     0,     0,   328,   329,
       0,     0,     0,   330,     0,   331,   332,   333,     0,     0,
     334,   335,     0,   336,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   337,   338,   339,     0,   340,   341,     0,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
       0,     0,   352,   353,   354,     0,   355,     0,   356,   357,
     358,   359,   360,     0,   361,   362,   363,     0,     0,   364,
       0,     0,     0,   365,   366,   367,   368,   369,     0,     0,
     370,   371,   372,   373,   374,     0,   375,   376,     0,   377,
     378,   379,     0,     0,   380,     0,   381,     0,   382,   383,
       0,   384,   385,   386,     0,   387,     0,     0,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,     0,
     399,   400,     0,     0,     0,   401,   402,   403,   404,     0,
       0,  2209,   405,     0,     0,     0,   406,     0,   407,   408,
     409,   410,     0,   411,   412,   413,   414,   415,     0,     0,
       0,     0,     0,     0,   416,   417,     0,   418,     0,     0,
     419,     0,     0,   420,   421,   422,     0,     0,   423,   424,
       0,   425,   426,   427,   428,   429,   430,     0,     0,   431,
     432,   433,   434,     0,   435,   436,     0,     0,   437,   438,
     439,   440,     0,   133,   441,   442,     0,   443,   444,   445,
     446,     0,     0,     0,     0,     0,   447,   448,     0,     0,
       0,   449,   450,   451,   452,     0,   453,   454,     0,   455,
     456,     0,   457,   458,     0,     0,   459,     0,     0,   460,
       0,   461,     0,   462,   463,     0,     0,     0,     0,     0,
       0,   464,     0,     0,   465,     0,     0,     0,   466,   467,
     468,   469,   470,     0,     0,     0,     0,     0,     0,   471,
     472,     0,   473,   474,   475,     0,   136,   476,   137,   138,
     139,   140,   141,     0,     0,     0,     0,     0,   142,     0,
       0,   143,     0,   144,   145,   146,   147,   148,   149,   150,
       0,   151,     0,     0,     0,   152,     0,     0,     0,   153,
       0,     0,   154,   155,   156,     0,   157,     0,   158,   159,
       0,     0,   160,     0,     0,   161,   162,     0,   163,   164,
       0,   165,     0,   166,   167,   168,   169,   170,   171,     0,
     172,   173,     0,   174,   175,   176,   177,   178,   179,   180,
     181,     0,   182,   183,     0,   184,   185,   186,   187,   188,
       0,   189,     0,     0,   190,     0,     0,   191,     0,   192,
       0,     0,   193,     0,     0,     0,   194,   195,   196,     0,
       0,   197,     0,     0,     0,     0,   198,   199,     0,     0,
       0,     0,   200,   201,     0,   202,     0,     0,     0,   203,
       0,   204,   205,   206,   207,   208,     0,     0,     0,   209,
       0,     0,   210,   211,   212,     0,     0,     0,   213,     0,
     214,   215,     0,   216,   217,   218,     0,     0,   219,   220,
       0,   221,   222,   223,   224,   225,   226,     0,     0,   227,
     228,   229,     0,     0,   230,   231,     0,   232,   233,   234,
       0,     0,   235,     0,     0,     0,   236,     0,   237,     0,
     238,     0,   239,   240,   241,   242,     0,   243,     0,   244,
       0,     0,     0,   245,   246,     0,   247,     0,     0,   248,
     249,     0,     0,     0,   250,   251,   252,   253,     0,     0,
     254,   255,   256,     0,     0,   257,     0,     0,     0,     0,
     258,   259,     0,     0,     0,   260,     0,   261,   262,     0,
     263,   264,     0,     0,     0,   265,     0,     0,   266,   267,
       0,     0,   268,     0,     0,   269,   270,     0,     0,     0,
       0,     0,   271,   272,     0,   273,     0,   274,     0,   275,
     276,     0,     0,  1818,     0,     0,     0,     0,     0,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,     0,   294,   295,   296,
       0,   297,   298,   299,   300,     0,   301,   302,     0,     0,
       0,     0,   303,   304,   305,   306,   307,   308,     0,     0,
     309,   310,     0,   311,     0,   312,     0,   313,   314,   315,
     316,   317,   318,   319,   320,   321,     0,     0,   322,   323,
       0,     0,   324,   325,   326,   327,     0,     0,     0,   328,
     329,     0,     0,  1819,   330,     0,   331,   332,   333,     0,
       0,   334,   335,     0,   336,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   337,   338,   339,   708,   340,   341,
       0,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,     0,     0,   352,   353,   354,     0,   355,     0,   356,
     357,   358,   359,   360,     0,   361,   362,   363,     0,     0,
     364,     0,     0,     0,   365,   366,   367,   368,   369,     0,
       0,   370,   371,   372,   373,   374,     0,   375,   376,     0,
     377,   378,   379,     0,     0,   380,     0,   381,     0,   382,
     383,     0,   384,   385,   386,     0,   387,     0,     0,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
       0,   399,   400,     0,     0,     0,   401,   402,   403,   404,
       0,     0,     0,   405,     0,     0,     0,   406,     0,   407,
     408,   409,   410,     0,   411,   412,   413,   414,   415,     0,
       0,     0,     0,     0,     0,   416,   417,     0,   418,     0,
       0,   419,     0,     0,   420,   421,   422,     0,     0,   423,
     424,     0,   425,   426,   427,   428,   429,   430,     0,     0,
     431,   432,   433,   434,     0,   435,   436,     0,     0,   437,
     438,   439,   440,     0,     0,   441,   442,     0,   443,   444,
     445,   446,     0,     0,     0,     0,     0,   447,   448,     0,
       0,     0,   449,   450,   451,   452,  1820,   453,   454,     0,
     455,   456,     0,   457,   458,     0,     0,   459,     0,     0,
     460,     0,   461,     0,   462,   463,     0,     0,     0,     0,
       0,     0,   464,     0,     0,   465,     0,     0,     0,   466,
     467,   468,   469,   470,     0,     0,     0,     0,     0,     0,
     471,   472,     0,   473,   474,   475,     0,   136,   476,   137,
     138,   139,   140,   141,     0,     0,     0,     0,     0,   142,
       0,     0,   143,     0,   144,   145,   146,   147,   148,   149,
     150,     0,   151,     0,     0,  2764,   152,     0,     0,     0,
     153,     0,     0,   154,   155,   156,     0,   157,     0,   158,
     159,     0,     0,   160,     0,     0,   161,   162,     0,   163,
     164,     0,   165,     0,   166,   167,   168,   169,   170,   171,
       0,   172,   173,     0,   174,   175,   176,   177,   178,   179,
     180,   181,     0,   182,   183,     0,   184,   185,   186,   187,
     188,     0,   189,     0,     0,   190,     0,     0,   191,     0,
     192,     0,     0,   193,     0,     0,     0,   194,   195,   196,
       0,     0,   197,     0,     0,     0,     0,   198,   199,     0,
       0,     0,  2765,   200,   201,     0,   202,     0,     0,     0,
     203,     0,   204,   205,   206,   207,   208,     0,     0,     0,
     209,     0,     0,   210,   211,   212,     0,     0,     0,   213,
       0,   214,   215,     0,   216,   217,   218,     0,     0,   219,
     220,     0,   221,   222,   223,   224,   225,   226,     0,     0,
     227,   228,   229,     0,     0,   230,   231,     0,   232,   233,
     234,     0,     0,   235,     0,     0,     0,   236,     0,   237,
       0,   238,     0,   239,   240,   241,   242,     0,   243,     0,
     244,     0,     0,     0,   245,   246,     0,   247,     0,     0,
     248,   249,     0,     0,     0,   250,   251,   252,   253,     0,
       0,   254,   255,   256,     0,     0,   257,     0,     0,     0,
       0,   258,   259,     0,     0,     0,   260,     0,   261,   262,
       0,   263,   264,     0,     0,     0,   265,     0,     0,   266,
     267,     0,     0,   268,     0,     0,   269,   270,   602,     0,
       0,     0,     0,   271,   272,     0,   273,     0,   274,     0,
     275,   276,     0,     0,     0,     0,     0,     0,     0,     0,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,     0,   294,   295,
     296,     0,   297,   298,   299,   300,     0,   301,   302,     0,
       0,     0,     0,   303,   304,   305,   306,   307,   308,     0,
       0,   309,   310,     0,   311,     0,   312,     0,   313,   314,
     315,   316,   317,   318,   319,   320,   321,     0,     0,   322,
     323,     0,     0,   324,   325,   326,   327,     0,     0,     0,
     328,   329,     0,     0,     0,   330,     0,   331,   332,   333,
       0,     0,   334,   335,     0,   336,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   337,   338,   339,     0,   340,
     341,     0,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,     0,     0,   352,   353,   354,     0,   355,     0,
     356,   357,   358,   359,   360,     0,   361,   362,   363,     0,
       0,   364,     0,     0,     0,   365,   366,   367,   368,   369,
       0,     0,   370,   371,   372,   373,   374,     0,   375,   376,
       0,   377,   378,   379,     0,     0,   380,     0,   381,     0,
     382,   383,     0,   384,   385,   386,     0,   387,     0,     0,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,     0,   399,   400,     0,     0,     0,   401,   402,   403,
     404,     0,     0,     0,   405,     0,     0,     0,   406,     0,
     407,   408,   409,   410,     0,   411,   412,   413,   414,   415,
       0,     0,     0,     0,     0,     0,   416,   417,     0,   418,
       0,     0,   419,     0,     0,   420,   421,   422,     0,     0,
     423,   424,     0,   425,   426,   427,   428,   429,   430,     0,
       0,   431,   432,   433,   434,     0,   435,   436,     0,     0,
     437,   438,   439,   440,     0,   133,   441,   442,     0,   443,
     444,   445,   446,     0,     0,     0,     0,     0,   447,   448,
       0,     0,     0,   449,   450,   451,   452,     0,   453,   454,
       0,   455,   456,     0,   457,   458,     0,     0,   459,     0,
       0,   460,     0,   461,     0,   462,   463,     0,     0,     0,
       0,     0,     0,   464,     0,     0,   465,     0,     0,     0,
     466,   467,   468,   469,   470,     0,     0,     0,     0,     0,
       0,   471,   472,     0,   473,   474,   475,     0,   136,   476,
     137,   138,   139,   140,   141,     0,     0,     0,     0,     0,
     142,     0,     0,   143,     0,   144,   145,   146,   147,   148,
     149,   150,     0,   151,     0,     0,  2588,   152,     0,     0,
       0,   153,     0,     0,   154,   155,   156,     0,   157,     0,
     158,   159,     0,     0,   160,     0,     0,   161,   162,     0,
     163,   164,     0,   165,     0,   166,   167,   168,   169,   170,
     171,     0,   172,   173,     0,   174,   175,   176,   177,   178,
     179,   180,   181,     0,   182,   183,     0,   184,   185,   186,
     187,   188,     0,   189,     0,     0,   190,     0,     0,   191,
       0,   192,     0,     0,   193,     0,     0,     0,   194,   195,
     196,     0,     0,   197,     0,     0,     0,     0,   198,   199,
       0,     0,     0,  2756,   200,   201,     0,   202,     0,     0,
       0,   203,     0,   204,   205,   206,   207,   208,     0,     0,
       0,   209,     0,     0,   210,   211,   212,     0,     0,     0,
     213,     0,   214,   215,     0,   216,   217,   218,     0,     0,
     219,   220,     0,   221,   222,   223,   224,   225,   226,     0,
       0,   227,   228,   229,     0,     0,   230,   231,     0,   232,
     233,   234,     0,     0,   235,     0,     0,     0,   236,     0,
     237,     0,   238,     0,   239,   240,   241,   242,     0,   243,
       0,   244,     0,     0,     0,   245,   246,     0,   247,     0,
       0,   248,   249,     0,     0,     0,   250,   251,   252,   253,
       0,     0,   254,   255,   256,     0,     0,   257,     0,     0,
       0,     0,   258,   259,     0,     0,     0,   260,     0,   261,
     262,     0,   263,   264,     0,     0,     0,   265,     0,     0,
     266,   267,     0,     0,   268,     0,     0,   269,   270,   602,
       0,     0,     0,     0,   271,   272,     0,   273,     0,   274,
       0,   275,   276,     0,     0,     0,     0,     0,     0,     0,
       0,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,     0,   294,
     295,   296,     0,   297,   298,   299,   300,     0,   301,   302,
       0,     0,     0,     0,   303,   304,   305,   306,   307,   308,
       0,     0,   309,   310,     0,   311,     0,   312,     0,   313,
     314,   315,   316,   317,   318,   319,   320,   321,     0,     0,
     322,   323,     0,     0,   324,   325,   326,   327,     0,     0,
       0,   328,   329,     0,     0,     0,   330,     0,   331,   332,
     333,     0,     0,   334,   335,     0,   336,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   337,   338,   339,     0,
     340,   341,     0,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,     0,     0,   352,   353,   354,     0,   355,
       0,   356,   357,   358,   359,   360,     0,   361,   362,   363,
       0,     0,   364,     0,     0,     0,   365,   366,   367,   368,
     369,     0,     0,   370,   371,   372,   373,   374,     0,   375,
     376,     0,   377,   378,   379,     0,     0,   380,     0,   381,
       0,   382,   383,     0,   384,   385,   386,     0,   387,     0,
       0,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,     0,   399,   400,     0,     0,     0,   401,   402,
     403,   404,     0,     0,     0,   405,     0,     0,     0,   406,
       0,   407,   408,   409,   410,     0,   411,   412,   413,   414,
     415,     0,     0,     0,     0,     0,     0,   416,   417,     0,
     418,     0,     0,   419,     0,     0,   420,   421,   422,     0,
       0,   423,   424,     0,   425,   426,   427,   428,   429,   430,
       0,     0,   431,   432,   433,   434,     0,   435,   436,     0,
       0,   437,   438,   439,   440,     0,   133,   441,   442,     0,
     443,   444,   445,   446,     0,     0,     0,     0,     0,   447,
     448,     0,     0,     0,   449,   450,   451,   452,     0,   453,
     454,     0,   455,   456,     0,   457,   458,     0,     0,   459,
       0,     0,   460,     0,   461,     0,   462,   463,     0,     0,
       0,     0,     0,     0,   464,     0,     0,   465,     0,     0,
       0,   466,   467,   468,   469,   470,     0,     0,     0,     0,
       0,     0,   471,   472,     0,   473,   474,   475,     0,   136,
     476,   137,   138,   139,   140,   141,     0,     0,     0,     0,
       0,   142,     0,     0,   143,     0,   144,   145,   146,   147,
     148,   149,   150,     0,   151,     0,     0,     0,   152,     0,
       0,     0,   153,     0,     0,   154,   155,   156,     0,   157,
       0,   158,   159,     0,     0,   160,     0,     0,   161,   162,
       0,   163,   164,     0,   165,     0,   166,   167,   168,   169,
     170,   171,     0,   172,   173,     0,   174,   175,   176,   177,
     178,   179,   180,   181,     0,   182,   183,     0,   184,   185,
     186,   187,   188,     0,   189,     0,     0,   190,     0,     0,
     191,     0,   192,   957,     0,   193,     0,     0,     0,   194,
     195,   196,     0,     0,   197,     0,     0,     0,     0,   198,
     199,     0,     0,     0,     0,   200,   201,     0,   202,     0,
       0,     0,   203,     0,   204,   205,   206,   207,   208,     0,
       0,     0,   209,     0,     0,   210,   211,   212,     0,     0,
       0,   213,     0,   214,   215,     0,   216,   217,   218,     0,
       0,   219,   220,     0,   221,   222,   223,   224,   225,   226,
       0,     0,   227,   228,   229,     0,     0,   230,   231,     0,
     232,   233,   234,     0,     0,   235,     0,     0,     0,   236,
       0,   237,     0,   238,     0,   239,   240,   241,   242,     0,
     243,     0,   244,     0,     0,     0,   245,   246,     0,   247,
       0,     0,   248,   249,     0,     0,     0,   250,   251,   252,
     253,     0,     0,   254,   255,   256,     0,     0,   257,     0,
       0,     0,     0,   258,   259,     0,     0,     0,   260,     0,
     261,   262,     0,   263,   264,     0,     0,     0,   265,     0,
       0,   266,   267,     0,     0,   268,     0,     0,   269,   270,
     602,     0,     0,     0,     0,   271,   272,     0,   273,     0,
     274,     0,   275,   276,     0,     0,     0,     0,     0,     0,
       0,     0,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,     0,
     294,   295,   296,     0,   297,   298,   299,   300,     0,   301,
     302,     0,     0,     0,     0,   303,   304,   305,   306,   307,
     308,     0,     0,   309,   310,     0,   311,     0,   312,     0,
     313,   314,   315,   316,   317,   318,   319,   320,   321,     0,
       0,   322,   323,     0,     0,   324,   325,   326,   327,     0,
       0,     0,   328,   329,     0,     0,     0,   330,     0,   331,
     332,   333,     0,     0,   334,   335,     0,   336,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   337,   338,   339,
       0,   340,   341,     0,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,     0,     0,   352,   353,   354,     0,
     355,     0,   356,   357,   358,   359,   360,     0,   361,   362,
     363,     0,     0,   364,     0,     0,     0,   365,   366,   367,
     368,   369,     0,     0,   370,   371,   372,   373,   374,     0,
     375,   376,     0,   377,   378,   379,     0,     0,   380,     0,
     381,     0,   382,   383,     0,   384,   385,   386,     0,   387,
       0,     0,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,     0,   399,   400,     0,     0,     0,   401,
     402,   403,   404,     0,     0,     0,   405,     0,     0,     0,
     406,     0,   407,   408,   409,   410,     0,   411,   412,   413,
     414,   415,     0,     0,     0,     0,     0,     0,   416,   417,
       0,   418,     0,     0,   419,     0,     0,   420,   421,   422,
       0,     0,   423,   424,     0,   425,   426,   427,   428,   429,
     430,     0,     0,   431,   432,   433,   434,     0,   435,   436,
       0,     0,   437,   438,   439,   440,     0,   133,   441,   442,
       0,   443,   444,   445,   446,     0,     0,     0,     0,     0,
     447,   448,     0,     0,     0,   449,   450,   451,   452,     0,
     453,   454,     0,   455,   456,     0,   457,   458,     0,     0,
     459,     0,     0,   460,     0,   461,     0,   462,   463,     0,
       0,     0,     0,     0,     0,   464,     0,     0,   465,     0,
       0,     0,   466,   467,   468,   469,   470,     0,     0,     0,
       0,     0,     0,   471,   472,     0,   473,   474,   475,     0,
     136,   476,   137,   138,   139,   140,   141,  1340,     0,     0,
       0,     0,   142,     0,     0,   143,     0,   144,   145,   146,
     147,   148,   149,   150,     0,   151,     0,     0,     0,   152,
       0,     0,     0,   153,     0,     0,   154,   155,   156,     0,
     157,     0,   158,   159,     0,     0,   160,     0,     0,   161,
     162,     0,   163,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,     0,   174,   175,   176,
     177,   178,   179,   180,   181,     0,   182,   183,     0,   184,
     185,   186,   187,   188,     0,   189,     0,     0,   190,     0,
       0,   191,     0,   192,     0,     0,   193,     0,     0,     0,
     194,   195,   196,     0,     0,   197,     0,     0,     0,     0,
     198,   199,     0,     0,     0,     0,   200,   201,     0,   202,
       0,     0,     0,   203,     0,   204,   205,   206,   207,   208,
       0,     0,     0,   209,     0,     0,   210,   211,   212,     0,
       0,     0,   213,     0,   214,   215,     0,   216,   217,   218,
       0,     0,   219,   220,     0,   221,   222,   223,   224,   225,
     226,     0,     0,   227,   228,   229,     0,     0,   230,   231,
       0,   232,   233,   234,     0,     0,   235,     0,     0,     0,
     236,     0,   237,     0,   238,     0,   239,   240,   241,   242,
       0,   243,     0,   244,     0,     0,     0,   245,   246,     0,
     247,     0,     0,   248,   249,     0,     0,     0,   250,   251,
     252,   253,     0,     0,   254,   255,   256,     0,     0,   257,
       0,     0,     0,     0,   258,   259,     0,     0,     0,   260,
       0,   261,   262,     0,   263,   264,     0,     0,     0,   265,
       0,     0,   266,   267,     0,     0,   268,     0,     0,   269,
     270,   602,     0,     0,     0,     0,   271,   272,     0,   273,
       0,   274,     0,   275,   276,     0,     0,     0,     0,     0,
       0,     0,     0,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
       0,   294,   295,   296,     0,   297,   298,   299,   300,     0,
     301,   302,     0,     0,     0,     0,   303,   304,   305,   306,
     307,   308,     0,     0,   309,   310,     0,   311,     0,   312,
       0,   313,   314,   315,   316,   317,   318,   319,   320,   321,
       0,     0,   322,   323,     0,     0,   324,   325,   326,   327,
       0,     0,     0,   328,   329,     0,     0,     0,   330,     0,
     331,   332,   333,     0,     0,   334,   335,     0,   336,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   337,   338,
     339,     0,   340,   341,     0,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,     0,     0,   352,   353,   354,
       0,   355,     0,   356,   357,   358,   359,   360,     0,   361,
     362,   363,     0,     0,   364,     0,     0,     0,   365,   366,
     367,   368,   369,     0,     0,   370,   371,   372,   373,   374,
       0,   375,   376,     0,   377,   378,   379,     0,     0,   380,
       0,   381,     0,   382,   383,     0,   384,   385,   386,     0,
     387,     0,     0,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,     0,   399,   400,     0,     0,     0,
     401,   402,   403,   404,     0,     0,     0,   405,     0,     0,
       0,   406,     0,   407,   408,   409,   410,     0,   411,   412,
     413,   414,   415,     0,     0,     0,     0,     0,     0,   416,
     417,     0,   418,     0,     0,   419,     0,     0,   420,   421,
     422,     0,     0,   423,   424,     0,   425,   426,   427,   428,
     429,   430,     0,     0,   431,   432,   433,   434,     0,   435,
     436,     0,     0,   437,   438,   439,   440,     0,   133,   441,
     442,     0,   443,   444,   445,   446,     0,     0,     0,     0,
       0,   447,   448,     0,     0,     0,   449,   450,   451,   452,
       0,   453,   454,     0,   455,   456,     0,   457,   458,     0,
       0,   459,     0,     0,   460,     0,   461,     0,   462,   463,
       0,     0,     0,     0,     0,     0,   464,     0,     0,   465,
       0,     0,     0,   466,   467,   468,   469,   470,     0,     0,
       0,     0,     0,     0,   471,   472,     0,   473,   474,   475,
       0,   136,   476,   137,   138,   139,   140,   141,     0,     0,
       0,     0,     0,   142,     0,     0,   143,     0,   144,   145,
     146,   147,   148,   149,   150,     0,   151,     0,     0,     0,
     152,   935,     0,     0,   153,     0,     0,   154,   155,   156,
       0,   157,     0,   158,   159,     0,     0,   160,     0,     0,
     161,   162,     0,   163,   164,     0,   165,     0,   166,   167,
     168,   169,   170,   171,     0,   172,   173,     0,   174,   175,
     176,   177,   178,   179,   180,   181,     0,   182,   183,     0,
     184,   185,   186,   187,   188,     0,   189,     0,     0,   190,
       0,     0,   191,     0,   192,     0,     0,   193,     0,     0,
       0,   194,   195,   196,     0,     0,   197,     0,     0,     0,
       0,   198,   199,     0,     0,     0,     0,   200,   201,     0,
     202,     0,     0,     0,   203,     0,   204,   205,   206,   207,
     208,     0,     0,     0,   209,     0,     0,   210,   211,   212,
       0,     0,     0,   213,     0,   214,   215,     0,   216,   217,
     218,     0,     0,   219,   220,     0,   221,   222,   223,   224,
     225,   226,     0,     0,   227,   228,   229,     0,     0,   230,
     231,     0,   232,   233,   234,     0,     0,   235,     0,     0,
       0,   236,     0,   237,     0,   238,     0,   239,   240,   241,
     242,     0,   243,     0,   244,     0,     0,     0,   245,   246,
       0,   247,   936,     0,   248,   249,     0,     0,     0,   250,
     251,   252,   253,     0,     0,   254,   255,   256,     0,     0,
     257,     0,     0,     0,     0,   258,   259,     0,     0,     0,
     260,     0,   261,   262,     0,   263,   264,     0,     0,     0,
     265,     0,     0,   266,   267,     0,     0,   268,     0,     0,
     269,   270,     0,     0,     0,     0,     0,   271,   272,     0,
     273,     0,   274,     0,   275,   276,     0,     0,     0,     0,
       0,     0,     0,     0,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,     0,   294,   295,   296,     0,   297,   298,   299,   300,
       0,   301,   302,     0,     0,     0,     0,   303,   304,   305,
     306,   307,   308,     0,     0,   309,   310,     0,   311,     0,
     312,     0,   313,   314,   315,   316,   317,   318,   319,   320,
     321,     0,     0,   322,   323,     0,     0,   324,   325,   326,
     327,     0,     0,     0,   328,   329,     0,     0,     0,   330,
       0,   331,   332,   333,     0,     0,   334,   335,     0,   336,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   337,
     338,   339,     0,   340,   341,     0,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,     0,     0,   352,   353,
     354,     0,   355,     0,   356,   357,   358,   359,   360,     0,
     361,   362,   363,     0,     0,   364,     0,     0,     0,   365,
     366,   367,   368,   369,     0,     0,   370,   371,   372,   373,
     374,     0,   375,   376,     0,   377,   378,   379,     0,     0,
     380,     0,   381,     0,   382,   383,     0,   384,   385,   386,
       0,   387,     0,     0,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,     0,   399,   400,     0,     0,
       0,   401,   402,   403,   404,     0,     0,     0,   405,     0,
       0,     0,   406,     0,   407,   408,   409,   410,     0,   411,
     412,   413,   414,   415,     0,     0,     0,     0,     0,     0,
     416,   417,     0,   418,     0,     0,   419,     0,     0,   420,
     421,   422,     0,     0,   423,   424,     0,   425,   426,   427,
     428,   429,   430,     0,     0,   431,   432,   433,   434,     0,
     435,   436,     0,     0,   437,   438,   439,   440,     0,   937,
     441,   442,     0,   443,   444,   445,   446,     0,     0,     0,
       0,     0,   447,   448,     0,     0,     0,   449,   450,   451,
     452,     0,   453,   454,     0,   455,   456,     0,   457,   458,
       0,     0,   459,     0,     0,   460,     0,   461,     0,   462,
     463,     0,     0,     0,     0,     0,     0,   464,     0,     0,
     465,     0,     0,     0,   466,   467,   468,   469,   470,     0,
       0,     0,     0,     0,     0,   471,   472,     0,   473,   474,
     475,     0,   136,   476,   137,   138,   139,   140,   141,     0,
       0,     0,     0,     0,   142,     0,     0,   143,     0,   144,
     145,   146,   147,   148,   149,   150,     0,   151,     0,     0,
    2588,   152,     0,     0,     0,   153,     0,     0,   154,   155,
     156,     0,   157,     0,   158,   159,     0,     0,   160,     0,
       0,   161,   162,     0,   163,   164,     0,   165,     0,   166,
     167,   168,   169,   170,   171,     0,   172,   173,     0,   174,
     175,   176,   177,   178,   179,   180,   181,     0,   182,   183,
       0,   184,   185,   186,   187,   188,     0,   189,     0,     0,
     190,     0,     0,   191,     0,   192,     0,     0,   193,     0,
       0,     0,   194,   195,   196,     0,     0,   197,     0,     0,
       0,     0,   198,   199,     0,     0,     0,     0,   200,   201,
       0,   202,     0,     0,     0,   203,     0,   204,   205,   206,
     207,   208,     0,     0,     0,   209,     0,     0,   210,   211,
     212,     0,     0,     0,   213,     0,   214,   215,     0,   216,
     217,   218,     0,     0,   219,   220,     0,   221,   222,   223,
     224,   225,   226,     0,     0,   227,   228,   229,     0,     0,
     230,   231,     0,   232,   233,   234,     0,     0,   235,     0,
       0,     0,   236,     0,   237,     0,   238,     0,   239,   240,
     241,   242,     0,   243,     0,   244,     0,     0,     0,   245,
     246,     0,   247,     0,     0,   248,   249,     0,     0,     0,
     250,   251,   252,   253,     0,     0,   254,   255,   256,     0,
       0,   257,     0,     0,     0,     0,   258,   259,     0,     0,
       0,   260,     0,   261,   262,     0,   263,   264,     0,     0,
       0,   265,     0,     0,   266,   267,     0,     0,   268,     0,
       0,   269,   270,   602,     0,     0,     0,     0,   271,   272,
       0,   273,     0,   274,     0,   275,   276,     0,     0,     0,
       0,     0,     0,     0,     0,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,     0,   294,   295,   296,     0,   297,   298,   299,
     300,     0,   301,   302,     0,     0,     0,     0,   303,   304,
     305,   306,   307,   308,     0,     0,   309,   310,     0,   311,
       0,   312,     0,   313,   314,   315,   316,   317,   318,   319,
     320,   321,     0,     0,   322,   323,     0,     0,   324,   325,
     326,   327,     0,     0,     0,   328,   329,     0,     0,     0,
     330,     0,   331,   332,   333,     0,     0,   334,   335,     0,
     336,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     337,   338,   339,     0,   340,   341,     0,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,     0,     0,   352,
     353,   354,     0,   355,     0,   356,   357,   358,   359,   360,
       0,   361,   362,   363,     0,     0,   364,     0,     0,     0,
     365,   366,   367,   368,   369,     0,     0,   370,   371,   372,
     373,   374,     0,   375,   376,     0,   377,   378,   379,     0,
       0,   380,     0,   381,     0,   382,   383,     0,   384,   385,
     386,     0,   387,     0,     0,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,     0,   399,   400,     0,
       0,     0,   401,   402,   403,   404,     0,     0,     0,   405,
       0,     0,     0,   406,     0,   407,   408,   409,   410,     0,
     411,   412,   413,   414,   415,     0,     0,     0,     0,     0,
       0,   416,   417,     0,   418,     0,     0,   419,     0,     0,
     420,   421,   422,     0,     0,   423,   424,     0,   425,   426,
     427,   428,   429,   430,     0,     0,   431,   432,   433,   434,
       0,   435,   436,     0,     0,   437,   438,   439,   440,     0,
     133,   441,   442,     0,   443,   444,   445,   446,     0,     0,
       0,     0,     0,   447,   448,     0,     0,     0,   449,   450,
     451,   452,     0,   453,   454,     0,   455,   456,     0,   457,
     458,     0,     0,   459,     0,     0,   460,     0,   461,     0,
     462,   463,     0,     0,     0,     0,     0,     0,   464,     0,
       0,   465,     0,     0,     0,   466,   467,   468,   469,   470,
       0,     0,     0,     0,     0,     0,   471,   472,     0,   473,
     474,   475,     0,   136,   476,   137,   138,   139,   140,   141,
       0,     0,     0,     0,     0,   142,     0,     0,   143,     0,
     144,   145,   146,   147,   148,   149,   150,     0,   151,     0,
       0,     0,   152,     0,     0,     0,   153,     0,     0,   154,
     155,   156,     0,   157,     0,   158,   159,     0,     0,   160,
       0,     0,   161,   162,     0,   163,   164,     0,   165,     0,
     166,   167,   168,   169,   170,   171,     0,   172,   173,     0,
     174,   175,   176,   177,   178,   179,   180,   181,     0,   182,
     183,     0,   184,   185,   186,   187,   188,     0,   189,     0,
       0,   190,     0,     0,   191,     0,   192,     0,     0,   193,
       0,     0,     0,   194,   195,   196,     0,     0,   197,     0,
       0,     0,     0,   198,   199,     0,     0,     0,  2807,   200,
     201,     0,   202,     0,     0,     0,   203,     0,   204,   205,
     206,   207,   208,     0,     0,     0,   209,     0,     0,   210,
     211,   212,     0,     0,     0,   213,     0,   214,   215,     0,
     216,   217,   218,     0,     0,   219,   220,     0,   221,   222,
     223,   224,   225,   226,     0,     0,   227,   228,   229,     0,
       0,   230,   231,     0,   232,   233,   234,     0,     0,   235,
       0,     0,     0,   236,     0,   237,     0,   238,     0,   239,
     240,   241,   242,     0,   243,     0,   244,     0,     0,     0,
     245,   246,     0,   247,     0,     0,   248,   249,     0,     0,
       0,   250,   251,   252,   253,     0,     0,   254,   255,   256,
       0,     0,   257,     0,     0,     0,     0,   258,   259,     0,
       0,     0,   260,     0,   261,   262,     0,   263,   264,     0,
       0,     0,   265,     0,     0,   266,   267,     0,     0,   268,
       0,     0,   269,   270,   602,     0,     0,     0,     0,   271,
     272,     0,   273,     0,   274,     0,   275,   276,     0,     0,
       0,     0,     0,     0,     0,     0,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,     0,   294,   295,   296,     0,   297,   298,
     299,   300,     0,   301,   302,     0,     0,     0,     0,   303,
     304,   305,   306,   307,   308,     0,     0,   309,   310,     0,
     311,     0,   312,     0,   313,   314,   315,   316,   317,   318,
     319,   320,   321,     0,     0,   322,   323,     0,     0,   324,
     325,   326,   327,     0,     0,     0,   328,   329,     0,     0,
       0,   330,     0,   331,   332,   333,     0,     0,   334,   335,
       0,   336,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   337,   338,   339,     0,   340,   341,     0,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,     0,     0,
     352,   353,   354,     0,   355,     0,   356,   357,   358,   359,
     360,     0,   361,   362,   363,     0,     0,   364,     0,     0,
       0,   365,   366,   367,   368,   369,     0,     0,   370,   371,
     372,   373,   374,     0,   375,   376,     0,   377,   378,   379,
       0,     0,   380,     0,   381,     0,   382,   383,     0,   384,
     385,   386,     0,   387,     0,     0,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,     0,   399,   400,
       0,     0,     0,   401,   402,   403,   404,     0,     0,     0,
     405,     0,     0,     0,   406,     0,   407,   408,   409,   410,
       0,   411,   412,   413,   414,   415,     0,     0,     0,     0,
       0,     0,   416,   417,     0,   418,     0,     0,   419,     0,
       0,   420,   421,   422,     0,     0,   423,   424,     0,   425,
     426,   427,   428,   429,   430,     0,     0,   431,   432,   433,
     434,     0,   435,   436,     0,     0,   437,   438,   439,   440,
       0,   133,   441,   442,     0,   443,   444,   445,   446,     0,
       0,     0,     0,     0,   447,   448,     0,     0,     0,   449,
     450,   451,   452,     0,   453,   454,     0,   455,   456,     0,
     457,   458,     0,     0,   459,     0,     0,   460,     0,   461,
       0,   462,   463,     0,     0,     0,     0,     0,     0,   464,
       0,     0,   465,     0,     0,     0,   466,   467,   468,   469,
     470,     0,     0,     0,     0,     0,     0,   471,   472,     0,
     473,   474,   475,     0,   136,   476,   137,   138,   139,   140,
     141,     0,     0,     0,     0,     0,   142,     0,     0,   143,
       0,   144,   145,   146,   147,   148,   149,   150,     0,   151,
       0,     0,     0,   152,     0,     0,     0,   153,     0,     0,
     154,   155,   156,     0,   157,     0,   158,   159,     0,     0,
     160,     0,     0,   161,   162,     0,   163,   164,     0,   165,
       0,   166,   167,   168,   169,   170,   171,     0,   172,   173,
       0,   174,   175,   176,   177,   178,   179,   180,   181,     0,
     182,   183,     0,   184,   185,   186,   187,   188,     0,   189,
       0,     0,   190,     0,     0,   191,     0,   192,     0,     0,
     193,     0,     0,     0,   194,   195,   196,     0,     0,   197,
       0,     0,     0,     0,   198,   199,     0,     0,     0,     0,
     200,   201,     0,   202,     0,     0,     0,   203,     0,   204,
     205,   206,   207,   208,     0,     0,     0,   209,     0,     0,
     210,   211,   212,     0,     0,     0,   213,     0,   214,   215,
       0,   216,   217,   218,     0,     0,   219,   220,     0,   221,
     222,   223,   224,   225,   226,     0,     0,   227,   228,   229,
       0,     0,   230,   231,     0,   232,   233,   234,     0,     0,
     235,     0,     0,     0,   236,     0,   237,     0,   238,     0,
     239,   240,   241,   242,     0,   243,     0,   244,     0,     0,
       0,   245,   246,     0,   247,     0,     0,   248,   249,     0,
       0,     0,   250,   251,   252,   253,     0,     0,   254,   255,
     256,     0,     0,   257,     0,     0,     0,     0,   258,   259,
       0,     0,     0,   260,     0,   261,   262,     0,   263,   264,
       0,     0,     0,   265,     0,     0,   266,   267,     0,     0,
     268,     0,     0,   269,   270,   602,     0,     0,     0,     0,
     271,   272,     0,   273,     0,   274,     0,   275,   276,     0,
       0,     0,     0,     0,     0,     0,     0,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,     0,   294,   295,   296,     0,   297,
     298,   299,   300,     0,   301,   302,     0,     0,     0,     0,
     303,   304,   305,   306,   307,   308,     0,     0,   309,   310,
       0,   311,     0,   312,     0,   313,   314,   315,   316,   317,
     318,   319,   320,   321,     0,     0,   322,   323,     0,     0,
     324,   325,   326,   327,     0,     0,     0,   328,   329,     0,
       0,     0,   330,     0,   331,   332,   333,     0,     0,   334,
     335,     0,   336,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   337,   338,   339,     0,   340,   341,     0,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,     0,
       0,   352,   353,   354,     0,   355,     0,   356,   357,   358,
     359,   360,     0,   361,   362,   363,     0,     0,   364,     0,
       0,     0,   365,   366,   367,   368,   369,     0,     0,   370,
     371,   372,   373,   374,     0,   375,   376,     0,   377,   378,
     379,     0,     0,   380,     0,   381,     0,   382,   383,     0,
     384,   385,   386,     0,   387,     0,     0,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,     0,   399,
     400,     0,     0,     0,   401,   402,   403,   404,     0,     0,
       0,   405,     0,     0,     0,   406,     0,   407,   408,   409,
     410,     0,   411,   412,   413,   414,   415,     0,     0,     0,
       0,     0,     0,   416,   417,     0,   418,     0,     0,   419,
       0,     0,   420,   421,   422,     0,     0,   423,   424,     0,
     425,   426,   427,   428,   429,   430,     0,     0,   431,   432,
     433,   434,     0,   435,   436,     0,     0,   437,   438,   439,
     440,     0,   133,   441,   442,     0,   443,   444,   445,   446,
       0,     0,     0,     0,     0,   447,   448,     0,     0,     0,
     449,   450,   451,   452,     0,   453,   454,     0,   455,   456,
       0,   457,   458,     0,     0,   459,     0,     0,   460,     0,
     461,     0,   462,   463,     0,     0,     0,     0,     0,     0,
     464,     0,     0,   465,     0,     0,     0,   466,   467,   468,
     469,   470,     0,     0,     0,     0,     0,     0,   471,   472,
       0,   473,   474,   475,     0,   136,   476,   137,   138,   139,
     140,   141,     0,     0,     0,     0,     0,   142,  2746,     0,
     143,     0,   144,   145,   146,   147,   148,   149,   150,     0,
     151,     0,     0,     0,   152,     0,     0,     0,   153,     0,
       0,   154,   155,   156,     0,   157,     0,   158,   159,     0,
       0,   160,     0,     0,   161,   162,     0,   163,   164,     0,
     165,     0,   166,   167,   168,   169,   170,   171,     0,   172,
     173,     0,   174,   175,   176,   177,   178,   179,   180,   181,
       0,   182,   183,     0,   184,   185,   186,   187,   188,     0,
     189,     0,     0,   190,     0,     0,   191,     0,   192,     0,
       0,   193,     0,     0,     0,   194,   195,   196,     0,     0,
     197,     0,     0,     0,     0,   198,   199,     0,     0,     0,
       0,   200,   201,     0,   202,     0,     0,     0,   203,     0,
     204,   205,   206,   207,   208,     0,     0,     0,   209,     0,
       0,   210,   211,   212,     0,     0,     0,   213,     0,   214,
     215,     0,   216,   217,   218,     0,     0,   219,   220,     0,
     221,   222,   223,   224,   225,   226,     0,     0,   227,   228,
     229,     0,     0,   230,   231,     0,   232,   233,   234,     0,
       0,   235,     0,     0,     0,   236,     0,   237,     0,   238,
       0,   239,   240,   241,   242,     0,   243,     0,   244,     0,
       0,     0,   245,   246,     0,   247,     0,     0,   248,   249,
       0,     0,     0,   250,   251,   252,   253,     0,     0,   254,
     255,   256,     0,     0,   257,     0,     0,     0,     0,   258,
     259,     0,     0,     0,   260,     0,   261,   262,     0,   263,
     264,     0,     0,     0,   265,     0,     0,   266,   267,     0,
       0,   268,     0,     0,   269,   270,     0,     0,     0,     0,
       0,   271,   272,     0,   273,     0,   274,     0,   275,   276,
       0,     0,     0,     0,     0,     0,     0,     0,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,     0,   294,   295,   296,     0,
     297,   298,   299,   300,     0,   301,   302,     0,     0,     0,
       0,   303,   304,   305,   306,   307,   308,     0,     0,   309,
     310,     0,   311,     0,   312,     0,   313,   314,   315,   316,
     317,   318,   319,   320,   321,     0,     0,   322,   323,     0,
       0,   324,   325,   326,   327,     0,     0,     0,   328,   329,
       0,     0,     0,   330,     0,   331,   332,   333,     0,     0,
     334,   335,     0,   336,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   337,   338,   339,     0,   340,   341,     0,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
       0,     0,   352,   353,   354,     0,   355,     0,   356,   357,
     358,   359,   360,     0,   361,   362,   363,     0,     0,   364,
       0,     0,     0,   365,   366,   367,   368,   369,     0,     0,
     370,   371,   372,   373,   374,     0,   375,   376,     0,   377,
     378,   379,     0,     0,   380,     0,   381,     0,   382,   383,
       0,   384,   385,   386,     0,   387,     0,     0,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,     0,
     399,   400,     0,     0,     0,   401,   402,   403,   404,     0,
       0,     0,   405,     0,     0,     0,   406,     0,   407,   408,
     409,   410,     0,   411,   412,   413,   414,   415,     0,     0,
       0,     0,     0,     0,   416,   417,     0,   418,     0,     0,
     419,     0,     0,   420,   421,   422,     0,     0,   423,   424,
       0,   425,   426,   427,   428,   429,   430,     0,     0,   431,
     432,   433,   434,     0,   435,   436,     0,     0,   437,   438,
     439,   440,     0,   133,   441,   442,     0,   443,   444,   445,
     446,     0,     0,     0,     0,     0,   447,   448,     0,     0,
       0,   449,   450,   451,   452,     0,   453,   454,     0,   455,
     456,     0,   457,   458,     0,     0,   459,     0,     0,   460,
       0,   461,     0,   462,   463,     0,     0,     0,     0,     0,
       0,   464,     0,     0,   465,     0,     0,     0,   466,   467,
     468,   469,   470,     0,     0,     0,     0,     0,     0,   471,
     472,     0,   473,   474,   475,     0,   136,   476,   137,   138,
     139,   140,   141,     0,     0,     0,     0,     0,   142,     0,
       0,   143,     0,   144,   145,   146,   147,   148,   149,   150,
       0,   151,     0,     0,     0,   152,     0,     0,     0,   153,
       0,     0,   154,   155,   156,     0,   157,     0,   158,   159,
       0,     0,   160,     0,     0,   161,   162,     0,   163,   164,
       0,   165,     0,   166,   167,   168,   169,   170,   171,     0,
     172,   173,     0,   174,   175,   176,   177,   178,   179,   180,
     181,     0,   182,   183,     0,   184,   185,   186,   187,   188,
    4266,   189,     0,     0,   190,     0,     0,   191,     0,   192,
       0,     0,   193,     0,     0,     0,   194,   195,   196,     0,
       0,   197,     0,     0,     0,     0,   198,   199,     0,     0,
       0,     0,   200,   201,     0,   202,     0,     0,     0,   203,
       0,   204,   205,   206,   207,   208,     0,     0,     0,   209,
       0,     0,   210,   211,   212,     0,     0,     0,   213,     0,
     214,   215,     0,   216,   217,   218,     0,     0,   219,   220,
       0,   221,   222,   223,   224,   225,   226,     0,  4267,   227,
     228,   229,     0,     0,   230,   231,     0,   232,   233,   234,
       0,     0,   235,     0,     0,     0,   236,     0,   237,     0,
     238,     0,   239,   240,   241,   242,     0,   243,     0,   244,
       0,     0,     0,   245,   246,     0,   247,     0,     0,   248,
     249,     0,     0,     0,   250,   251,   252,   253,     0,     0,
     254,   255,   256,     0,     0,   257,     0,     0,     0,     0,
     258,   259,     0,     0,     0,   260,     0,   261,   262,     0,
     263,   264,     0,     0,     0,   265,     0,     0,   266,   267,
       0,     0,   268,     0,     0,   269,   270,     0,     0,     0,
       0,     0,   271,   272,     0,   273,     0,   274,     0,   275,
     276,     0,     0,     0,     0,     0,     0,     0,     0,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,     0,   294,   295,   296,
       0,   297,   298,   299,   300,     0,   301,   302,     0,     0,
       0,     0,   303,   304,   305,   306,   307,   308,     0,     0,
     309,   310,     0,   311,     0,   312,     0,   313,   314,   315,
     316,   317,   318,   319,   320,   321,     0,     0,   322,   323,
       0,     0,   324,   325,   326,   327,     0,     0,     0,   328,
     329,     0,     0,     0,   330,     0,   331,   332,   333,     0,
       0,   334,   335,     0,   336,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   337,   338,   339,     0,   340,   341,
       0,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,     0,     0,   352,   353,   354,     0,   355,     0,   356,
     357,   358,   359,   360,     0,   361,   362,   363,     0,     0,
     364,     0,     0,     0,   365,   366,   367,   368,   369,     0,
       0,   370,   371,   372,   373,   374,     0,   375,   376,     0,
     377,   378,   379,     0,     0,   380,     0,   381,     0,   382,
     383,     0,   384,   385,   386,     0,   387,     0,     0,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
       0,   399,   400,     0,     0,     0,   401,   402,   403,   404,
       0,     0,     0,   405,     0,     0,     0,   406,     0,   407,
     408,   409,   410,     0,   411,   412,   413,   414,   415,     0,
       0,     0,     0,     0,     0,   416,   417,     0,   418,     0,
       0,   419,     0,     0,   420,   421,   422,     0,     0,   423,
     424,     0,   425,   426,   427,   428,   429,   430,     0,     0,
     431,   432,   433,   434,     0,   435,   436,     0,     0,   437,
     438,   439,   440,     0,     0,   441,   442,     0,   443,   444,
     445,   446,     0,     0,     0,     0,     0,   447,   448,     0,
       0,     0,   449,   450,   451,   452,     0,   453,   454,     0,
     455,   456,     0,   457,   458,     0,     0,   459,     0,     0,
     460,     0,   461,     0,   462,   463,     0,     0,     0,     0,
       0,     0,   464,     0,     0,   465,     0,     0,     0,   466,
     467,   468,   469,   470,     0,     0,     0,     0,     0,     0,
     471,   472,     0,   473,   474,   475,     0,   136,   476,   137,
     138,   139,   140,   141,     0,     0,     0,     0,     0,   142,
       0,     0,   143,     0,   144,   145,   146,   147,   148,   149,
     150,     0,   151,     0,     0,     0,   152,     0,     0,     0,
     153,     0,     0,   154,   155,   156,     0,   157,     0,   158,
     159,     0,     0,   160,     0,     0,   161,   162,     0,   163,
     164,     0,   165,     0,   166,   167,   168,   169,   170,   171,
       0,   172,   173,     0,   174,   175,   176,   177,   178,   179,
     180,   181,     0,   182,   183,     0,   184,   185,   186,   187,
     188,     0,   189,     0,     0,   190,     0,     0,   191,     0,
     192,     0,     0,   193,     0,     0,     0,   194,   195,   196,
       0,     0,   197,     0,     0,     0,     0,   198,   199,     0,
       0,     0,     0,   200,   201,     0,   202,     0,     0,     0,
     203,     0,   204,   205,   206,   207,   208,     0,     0,     0,
     209,     0,     0,   210,   211,   212,     0,     0,     0,   213,
       0,   214,   215,     0,   216,   217,   218,     0,     0,   219,
     220,     0,   221,   222,   223,   224,   225,   226,     0,     0,
     227,   228,   229,     0,     0,   230,   231,     0,   232,   233,
     234,     0,     0,   235,     0,     0,     0,   236,     0,   237,
       0,   238,     0,   239,   240,   241,   242,     0,   243,     0,
     244,     0,     0,     0,   245,   246,     0,   247,     0,     0,
     248,   249,     0,     0,     0,   250,   251,   252,   253,     0,
       0,   254,   255,   256,     0,     0,   257,     0,     0,     0,
       0,   258,   259,     0,     0,     0,   260,     0,   261,   262,
       0,   263,   264,     0,     0,     0,   265,     0,     0,   266,
     267,     0,     0,   268,     0,     0,   269,   270,     0,     0,
       0,     0,     0,   271,   272,     0,   273,     0,   274,     0,
     275,   276,     0,     0,     0,     0,     0,     0,     0,     0,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,     0,   294,   295,
     296,     0,   297,   298,   299,   300,     0,   301,   302,     0,
       0,     0,     0,   303,   304,   305,   306,   307,   308,     0,
       0,   309,   310,     0,   311,     0,   312,     0,   313,   314,
     315,   316,   317,   318,   319,   320,   321,     0,     0,   322,
     323,     0,     0,   324,   325,   326,   327,     0,     0,     0,
     328,   329,     0,     0,     0,   330,     0,   331,   332,   333,
       0,     0,   334,   335,     0,   336,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   337,   338,   339,     0,   340,
     341,     0,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,     0,     0,   352,   353,   354,     0,   355,     0,
     356,   357,   358,   359,   360,     0,   361,   362,   363,     0,
       0,   364,     0,     0,     0,   365,   366,   367,   368,   369,
       0,     0,   370,   371,   372,   373,   374,     0,   375,   376,
       0,   377,   378,   379,     0,     0,   380,     0,   381,     0,
     382,   383,     0,   384,   385,   386,     0,   387,     0,     0,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,     0,   399,   400,     0,     0,     0,   401,   402,   403,
     404,     0,     0,     0,   405,     0,     0,     0,   406,     0,
     407,   408,   409,   410,     0,   411,   412,   413,   414,   415,
       0,     0,     0,   551,     0,     0,   416,   417,     0,   418,
       0,     0,   419,     0,     0,   420,   421,   422,     0,     0,
     423,   424,     0,   425,   426,   427,   428,   429,   430,     0,
       0,   431,   432,   433,   434,     0,   435,   436,     0,     0,
     437,   438,   439,   440,     0,     0,   441,   442,     0,   443,
     444,   445,   446,     0,     0,     0,     0,     0,   447,   448,
       0,     0,     0,   449,   450,   451,   452,     0,   453,   454,
       0,   455,   456,     0,   457,   458,     0,     0,   459,     0,
       0,   460,     0,   461,     0,   462,   463,     0,     0,     0,
       0,     0,     0,   464,     0,     0,   465,     0,     0,     0,
     466,   467,   468,   469,   470,     0,     0,     0,     0,     0,
       0,   471,   472,     0,   473,   474,   475,     0,   136,   476,
     137,   138,   139,   140,   141,     0,     0,     0,     0,     0,
     142,     0,     0,   143,     0,   144,   145,   146,   147,   148,
     149,   150,     0,   151,     0,     0,     0,   152,     0,     0,
       0,   153,     0,     0,   154,   155,   156,     0,   157,     0,
     158,   159,     0,     0,   160,     0,     0,   161,   162,     0,
     163,   164,     0,   165,     0,   166,   167,   168,   169,   170,
     171,     0,   172,   173,     0,   174,   175,   176,   177,   178,
     179,   180,   181,     0,   182,   183,     0,   184,   185,   186,
     187,   188,     0,   189,     0,     0,   190,     0,     0,   191,
       0,   192,     0,     0,   193,     0,     0,     0,   194,   195,
     196,     0,     0,   197,     0,     0,     0,     0,   198,   199,
       0,     0,     0,     0,   200,   201,     0,   202,     0,     0,
       0,   203,     0,   204,   205,   206,   207,   208,     0,     0,
       0,   209,     0,     0,   210,   211,   212,     0,     0,     0,
     213,     0,   214,   215,     0,   216,   217,   218,     0,     0,
     219,   220,     0,   221,   222,   223,   224,   225,   226,     0,
       0,   227,   228,   229,     0,     0,   230,   231,     0,   232,
     233,   234,     0,     0,   235,     0,     0,     0,   236,  1034,
     237,     0,   238,     0,   239,   240,   241,   242,     0,   243,
       0,   244,     0,     0,     0,   245,   246,     0,   247,     0,
       0,   248,   249,     0,     0,     0,   250,   251,   252,   253,
       0,     0,   254,   255,   256,     0,     0,   257,     0,     0,
       0,     0,   258,   259,     0,     0,     0,   260,     0,   261,
     262,     0,   263,   264,     0,     0,     0,   265,     0,     0,
     266,   267,     0,     0,   268,     0,     0,   269,   270,     0,
       0,     0,     0,     0,   271,   272,     0,   273,     0,   274,
       0,   275,   276,     0,     0,     0,     0,     0,     0,     0,
       0,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,     0,   294,
     295,   296,     0,   297,   298,   299,   300,     0,   301,   302,
       0,     0,     0,     0,   303,   304,   305,   306,   307,   308,
       0,     0,   309,   310,     0,   311,     0,   312,     0,   313,
     314,   315,   316,   317,   318,   319,   320,   321,     0,     0,
     322,   323,     0,     0,   324,   325,   326,   327,     0,     0,
       0,   328,   329,     0,     0,     0,   330,     0,   331,   332,
     333,     0,     0,   334,   335,     0,   336,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   337,   338,   339,     0,
     340,   341,     0,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,     0,     0,   352,   353,   354,     0,   355,
       0,   356,   357,   358,   359,   360,     0,   361,   362,   363,
       0,     0,   364,     0,     0,     0,   365,   366,   367,   368,
     369,     0,     0,   370,   371,   372,   373,   374,     0,   375,
     376,     0,   377,   378,   379,     0,     0,   380,     0,   381,
       0,   382,   383,     0,   384,   385,   386,     0,   387,     0,
       0,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,     0,   399,   400,     0,     0,     0,   401,   402,
     403,   404,     0,     0,     0,   405,     0,     0,     0,   406,
       0,   407,   408,   409,   410,     0,   411,   412,   413,   414,
     415,     0,     0,     0,     0,     0,     0,   416,   417,     0,
     418,     0,     0,   419,     0,     0,   420,   421,   422,     0,
       0,   423,   424,     0,   425,   426,   427,   428,   429,   430,
       0,     0,   431,   432,   433,   434,     0,   435,   436,     0,
       0,   437,   438,   439,   440,     0,     0,   441,   442,     0,
     443,   444,   445,   446,     0,     0,     0,     0,     0,   447,
     448,     0,     0,     0,   449,   450,   451,   452,     0,   453,
     454,     0,   455,   456,     0,   457,   458,     0,     0,   459,
       0,     0,   460,     0,   461,     0,   462,   463,     0,     0,
       0,     0,     0,     0,   464,     0,     0,   465,     0,     0,
       0,   466,   467,   468,   469,   470,     0,     0,     0,     0,
       0,     0,   471,   472,     0,   473,   474,   475,     0,   136,
     476,   137,   138,   139,   140,   141,     0,     0,     0,     0,
       0,   142,     0,     0,   143,     0,   144,   145,   146,   147,
     148,   149,   150,     0,   151,     0,     0,     0,   152,     0,
       0,     0,   153,     0,     0,   154,   155,   156,     0,   157,
       0,   158,   159,     0,     0,   160,     0,     0,   161,   162,
       0,   163,   164,     0,   165,     0,   166,   167,   168,   169,
     170,   171,     0,   172,   173,     0,   174,   175,   176,   177,
     178,   179,   180,   181,     0,   182,   183,     0,   184,   185,
     186,   187,   188,     0,   189,     0,     0,   190,     0,     0,
     191,     0,   192,     0,     0,   193,     0,     0,     0,   194,
     195,   196,     0,     0,   197,     0,     0,     0,     0,   198,
     199,     0,     0,     0,  1980,   200,   201,     0,   202,     0,
       0,     0,   203,     0,   204,   205,   206,   207,   208,     0,
       0,     0,   209,     0,     0,   210,   211,   212,     0,     0,
       0,   213,     0,   214,   215,     0,   216,   217,   218,     0,
       0,   219,   220,     0,   221,   222,   223,   224,   225,   226,
       0,     0,   227,   228,   229,     0,     0,   230,   231,     0,
     232,   233,   234,     0,     0,   235,     0,     0,     0,   236,
       0,   237,     0,   238,     0,   239,   240,   241,   242,     0,
     243,     0,   244,     0,     0,     0,   245,   246,     0,   247,
       0,     0,   248,   249,     0,     0,     0,   250,   251,   252,
     253,     0,     0,   254,   255,   256,     0,     0,   257,     0,
       0,     0,     0,   258,   259,     0,     0,     0,   260,     0,
     261,   262,     0,   263,   264,     0,     0,     0,   265,     0,
       0,   266,   267,     0,     0,   268,     0,     0,   269,   270,
       0,     0,     0,     0,     0,   271,   272,     0,   273,     0,
     274,     0,   275,   276,     0,     0,     0,     0,     0,     0,
       0,     0,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,     0,
     294,   295,   296,     0,   297,   298,   299,   300,     0,   301,
     302,     0,     0,     0,     0,   303,   304,   305,   306,   307,
     308,     0,     0,   309,   310,     0,   311,     0,   312,     0,
     313,   314,   315,   316,   317,   318,   319,   320,   321,     0,
       0,   322,   323,     0,     0,   324,   325,   326,   327,     0,
       0,     0,   328,   329,     0,     0,     0,   330,     0,   331,
     332,   333,     0,     0,   334,   335,     0,   336,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   337,   338,   339,
       0,   340,   341,     0,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,     0,     0,   352,   353,   354,     0,
     355,     0,   356,   357,   358,   359,   360,     0,   361,   362,
     363,     0,     0,   364,     0,     0,     0,   365,   366,   367,
     368,   369,     0,     0,   370,   371,   372,   373,   374,     0,
     375,   376,     0,   377,   378,   379,     0,     0,   380,     0,
     381,     0,   382,   383,     0,   384,   385,   386,     0,   387,
       0,     0,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,     0,   399,   400,     0,     0,     0,   401,
     402,   403,   404,     0,     0,     0,   405,     0,     0,     0,
     406,     0,   407,   408,   409,   410,     0,   411,   412,   413,
     414,   415,     0,     0,     0,     0,     0,     0,   416,   417,
       0,   418,     0,     0,   419,     0,     0,   420,   421,   422,
       0,     0,   423,   424,     0,   425,   426,   427,   428,   429,
     430,     0,     0,   431,   432,   433,   434,     0,   435,   436,
       0,     0,   437,   438,   439,   440,     0,     0,   441,   442,
       0,   443,   444,   445,   446,     0,     0,     0,     0,     0,
     447,   448,     0,     0,     0,   449,   450,   451,   452,     0,
     453,   454,     0,   455,   456,     0,   457,   458,     0,     0,
     459,     0,     0,   460,     0,   461,     0,   462,   463,     0,
       0,     0,     0,     0,     0,   464,     0,     0,   465,     0,
       0,     0,   466,   467,   468,   469,   470,     0,     0,     0,
       0,     0,     0,   471,   472,     0,   473,   474,   475,     0,
     136,   476,   137,   138,   139,   140,   141,     0,     0,     0,
       0,     0,   142,     0,     0,   143,     0,   144,   145,   146,
     147,   148,   149,   150,     0,   151,     0,     0,     0,   152,
       0,     0,     0,   153,     0,     0,   154,   155,   156,     0,
     157,     0,   158,   159,     0,     0,   160,     0,     0,   161,
     162,     0,   163,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,     0,   174,   175,   176,
     177,   178,   179,   180,   181,     0,   182,   183,     0,   184,
     185,   186,   187,   188,     0,   189,     0,     0,   190,     0,
       0,   191,     0,   192,     0,     0,   193,     0,     0,     0,
     194,   195,   196,     0,     0,   197,     0,     0,     0,     0,
     198,   199,     0,     0,     0,  2320,   200,   201,     0,   202,
       0,     0,     0,   203,     0,   204,   205,   206,   207,   208,
       0,     0,     0,   209,     0,     0,   210,   211,   212,     0,
       0,     0,   213,     0,   214,   215,     0,   216,   217,   218,
       0,     0,   219,   220,     0,   221,   222,   223,   224,   225,
     226,     0,     0,   227,   228,   229,     0,     0,   230,   231,
       0,   232,   233,   234,     0,     0,   235,     0,     0,     0,
     236,     0,   237,     0,   238,     0,   239,   240,   241,   242,
       0,   243,     0,   244,     0,     0,     0,   245,   246,     0,
     247,     0,     0,   248,   249,     0,     0,     0,   250,   251,
     252,   253,     0,     0,   254,   255,   256,     0,     0,   257,
       0,     0,     0,     0,   258,   259,     0,     0,     0,   260,
       0,   261,   262,     0,   263,   264,     0,     0,     0,   265,
       0,     0,   266,   267,     0,     0,   268,     0,     0,   269,
     270,     0,     0,     0,     0,     0,   271,   272,     0,   273,
       0,   274,     0,   275,   276,     0,     0,     0,     0,     0,
       0,     0,     0,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
       0,   294,   295,   296,     0,   297,   298,   299,   300,     0,
     301,   302,     0,     0,     0,     0,   303,   304,   305,   306,
     307,   308,     0,     0,   309,   310,     0,   311,     0,   312,
       0,   313,   314,   315,   316,   317,   318,   319,   320,   321,
       0,     0,   322,   323,     0,     0,   324,   325,   326,   327,
       0,     0,     0,   328,   329,     0,     0,     0,   330,     0,
     331,   332,   333,     0,     0,   334,   335,     0,   336,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   337,   338,
     339,     0,   340,   341,     0,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,     0,     0,   352,   353,   354,
       0,   355,     0,   356,   357,   358,   359,   360,     0,   361,
     362,   363,     0,     0,   364,     0,     0,     0,   365,   366,
     367,   368,   369,     0,     0,   370,   371,   372,   373,   374,
       0,   375,   376,     0,   377,   378,   379,     0,     0,   380,
       0,   381,     0,   382,   383,     0,   384,   385,   386,     0,
     387,     0,     0,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,     0,   399,   400,     0,     0,     0,
     401,   402,   403,   404,     0,     0,     0,   405,     0,     0,
       0,   406,     0,   407,   408,   409,   410,     0,   411,   412,
     413,   414,   415,     0,     0,     0,     0,     0,     0,   416,
     417,     0,   418,     0,     0,   419,     0,     0,   420,   421,
     422,     0,     0,   423,   424,     0,   425,   426,   427,   428,
     429,   430,     0,     0,   431,   432,   433,   434,     0,   435,
     436,     0,     0,   437,   438,   439,   440,     0,     0,   441,
     442,     0,   443,   444,   445,   446,     0,     0,     0,     0,
       0,  2321,   448,     0,     0,     0,   449,   450,   451,   452,
       0,   453,   454,     0,   455,   456,     0,   457,   458,     0,
       0,   459,     0,     0,   460,     0,   461,     0,   462,   463,
       0,     0,     0,     0,     0,     0,   464,     0,     0,   465,
       0,     0,     0,   466,   467,   468,   469,   470,     0,     0,
       0,     0,     0,     0,   471,   472,     0,   473,   474,   475,
       0,   136,   476,   137,   138,   139,   140,   141,  2845,     0,
       0,     0,     0,   142,     0,     0,   143,     0,   144,   145,
     146,   147,   148,   149,   150,     0,   151,     0,     0,     0,
     152,     0,     0,     0,   153,     0,     0,   154,   155,   156,
       0,   157,     0,   158,   159,     0,     0,   160,     0,     0,
     161,   162,     0,   163,   164,     0,   165,     0,   166,   167,
     168,   169,   170,   171,     0,   172,   173,     0,   174,   175,
     176,   177,   178,   179,   180,   181,     0,   182,   183,     0,
     184,   185,   186,   187,   188,     0,   189,     0,     0,   190,
       0,     0,   191,     0,   192,     0,     0,   193,     0,     0,
       0,   194,   195,   196,     0,     0,   197,     0,     0,     0,
       0,   198,   199,     0,     0,     0,     0,   200,   201,     0,
     202,     0,     0,     0,   203,     0,   204,   205,   206,   207,
     208,     0,     0,     0,   209,     0,     0,   210,   211,   212,
       0,     0,     0,   213,     0,   214,   215,     0,   216,   217,
     218,     0,     0,   219,   220,     0,   221,   222,   223,   224,
     225,   226,     0,     0,   227,   228,   229,     0,     0,   230,
     231,     0,   232,   233,   234,     0,     0,   235,     0,     0,
       0,   236,     0,   237,     0,   238,     0,   239,   240,   241,
     242,     0,   243,     0,   244,     0,     0,     0,   245,   246,
       0,   247,     0,     0,   248,   249,     0,     0,     0,   250,
     251,   252,   253,     0,     0,   254,   255,   256,     0,     0,
     257,     0,     0,     0,     0,   258,   259,     0,     0,     0,
     260,     0,   261,   262,     0,   263,   264,     0,     0,     0,
     265,     0,     0,   266,   267,     0,     0,   268,     0,     0,
     269,   270,     0,     0,     0,     0,     0,   271,   272,     0,
     273,     0,   274,     0,   275,   276,     0,     0,     0,     0,
       0,     0,     0,     0,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,     0,   294,   295,   296,     0,   297,   298,   299,   300,
       0,   301,   302,     0,     0,     0,     0,   303,   304,   305,
     306,   307,   308,     0,     0,   309,   310,     0,   311,     0,
     312,     0,   313,   314,   315,   316,   317,   318,   319,   320,
     321,     0,     0,   322,   323,     0,     0,   324,   325,   326,
     327,     0,     0,     0,   328,   329,     0,     0,     0,   330,
       0,   331,   332,   333,     0,     0,   334,   335,     0,   336,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   337,
     338,   339,     0,   340,   341,     0,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,     0,     0,   352,   353,
     354,     0,   355,     0,   356,   357,   358,   359,   360,     0,
     361,   362,   363,     0,     0,   364,     0,     0,     0,   365,
     366,   367,   368,   369,     0,     0,   370,   371,   372,   373,
     374,     0,   375,   376,     0,   377,   378,   379,     0,     0,
     380,     0,   381,     0,   382,   383,     0,   384,   385,   386,
       0,   387,     0,     0,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,     0,   399,   400,     0,     0,
       0,   401,   402,   403,   404,     0,     0,     0,   405,     0,
       0,     0,   406,     0,   407,   408,   409,   410,     0,   411,
     412,   413,   414,   415,     0,     0,     0,     0,     0,     0,
     416,   417,     0,   418,     0,     0,   419,     0,     0,   420,
     421,   422,     0,     0,   423,   424,     0,   425,   426,   427,
     428,   429,   430,     0,     0,   431,   432,   433,   434,     0,
     435,   436,     0,     0,   437,   438,   439,   440,     0,     0,
     441,   442,     0,   443,   444,   445,   446,     0,     0,     0,
       0,     0,   447,   448,     0,     0,     0,   449,   450,   451,
     452,     0,   453,   454,     0,   455,   456,     0,   457,   458,
       0,     0,   459,     0,     0,   460,     0,   461,     0,   462,
     463,     0,     0,     0,     0,     0,     0,   464,     0,     0,
     465,     0,     0,     0,   466,   467,   468,   469,   470,     0,
       0,     0,     0,     0,     0,   471,   472,     0,   473,   474,
     475,     0,   136,   476,   137,   138,   139,   140,   141,     0,
       0,     0,     0,     0,   142,     0,     0,   143,     0,   144,
     145,   146,   147,   148,   149,   150,     0,   151,     0,     0,
       0,   152,     0,     0,     0,   153,     0,     0,   154,   155,
     156,     0,   157,     0,   158,   159,     0,     0,   160,     0,
       0,   161,   162,     0,   163,   164,     0,   165,     0,   166,
     167,   168,   169,   170,   171,     0,   172,   173,     0,   174,
     175,   176,   177,   178,   179,   180,   181,     0,   182,   183,
       0,   184,   185,   186,   187,   188,     0,   189,     0,     0,
     190,     0,     0,   191,     0,   192,     0,     0,   193,     0,
       0,     0,   194,   195,   196,     0,     0,   197,     0,     0,
       0,     0,   198,   199,     0,     0,     0,     0,   200,   201,
       0,   202,     0,     0,     0,   203,     0,   204,   205,   206,
     207,   208,     0,     0,     0,   209,     0,     0,   210,   211,
     212,     0,     0,     0,   213,     0,   214,   215,     0,   216,
     217,   218,     0,     0,   219,   220,     0,   221,   222,   223,
     224,   225,   226,     0,     0,   227,   228,   229,     0,     0,
     230,   231,     0,   232,   233,   234,     0,     0,   235,     0,
       0,     0,   236,     0,   237,     0,   238,     0,   239,   240,
     241,   242,     0,   243,     0,   244,     0,     0,     0,   245,
     246,     0,   247,     0,     0,   248,   249,     0,     0,     0,
     250,   251,   252,   253,     0,     0,   254,   255,   256,     0,
       0,   257,     0,     0,     0,     0,   258,   259,     0,     0,
       0,   260,     0,   261,   262,     0,   263,   264,     0,     0,
       0,   265,     0,     0,   266,   267,     0,     0,   268,     0,
       0,   269,   270,     0,     0,     0,     0,     0,   271,   272,
       0,   273,     0,   274,     0,   275,   276,     0,     0,     0,
       0,     0,     0,     0,     0,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,     0,   294,   295,   296,     0,   297,   298,   299,
     300,     0,   301,   302,     0,     0,     0,     0,   303,   304,
     305,   306,   307,   308,     0,     0,   309,   310,     0,   311,
       0,   312,     0,   313,   314,   315,   316,   317,   318,   319,
     320,   321,     0,     0,   322,   323,     0,     0,   324,   325,
     326,   327,     0,     0,     0,   328,   329,     0,     0,     0,
     330,     0,   331,   332,   333,     0,     0,   334,   335,     0,
     336,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     337,   338,   339,     0,   340,   341,     0,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,     0,     0,   352,
     353,   354,  2925,   355,     0,   356,   357,   358,   359,   360,
       0,   361,   362,   363,     0,     0,   364,     0,     0,     0,
     365,   366,   367,   368,   369,     0,     0,   370,   371,   372,
     373,   374,     0,   375,   376,     0,   377,   378,   379,     0,
       0,   380,     0,   381,     0,   382,   383,     0,   384,   385,
     386,     0,   387,     0,     0,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,     0,   399,   400,     0,
       0,     0,   401,   402,   403,   404,     0,     0,     0,   405,
       0,     0,     0,   406,     0,   407,   408,   409,   410,     0,
     411,   412,   413,   414,   415,     0,     0,     0,     0,     0,
       0,   416,   417,     0,   418,     0,     0,   419,     0,     0,
     420,   421,   422,     0,     0,   423,   424,     0,   425,   426,
     427,   428,   429,   430,     0,     0,   431,   432,   433,   434,
       0,   435,   436,     0,     0,   437,   438,   439,   440,     0,
       0,   441,   442,     0,   443,   444,   445,   446,     0,     0,
       0,     0,     0,   447,   448,     0,     0,     0,   449,   450,
     451,   452,     0,   453,   454,     0,   455,   456,     0,   457,
     458,     0,     0,   459,     0,     0,   460,     0,   461,     0,
     462,   463,     0,     0,     0,     0,     0,     0,   464,     0,
       0,   465,     0,     0,     0,   466,   467,   468,   469,   470,
       0,     0,     0,     0,     0,     0,   471,   472,     0,   473,
     474,   475,     0,   136,   476,   137,   138,   139,   140,   141,
       0,     0,     0,     0,     0,   142,     0,     0,   143,     0,
     144,   145,   146,   147,   148,   149,   150,     0,   151,     0,
       0,     0,   152,     0,     0,     0,   153,     0,     0,   154,
     155,   156,     0,   157,     0,   158,   159,     0,     0,   160,
       0,     0,   161,   162,     0,   163,   164,     0,   165,     0,
     166,   167,   168,   169,   170,   171,     0,   172,   173,     0,
     174,   175,   176,   177,   178,   179,   180,   181,     0,   182,
     183,     0,   184,   185,   186,   187,   188,     0,   189,     0,
       0,   190,     0,     0,   191,     0,   192,     0,     0,   193,
       0,     0,     0,   194,   195,   196,     0,     0,   197,     0,
       0,     0,     0,   198,   199,     0,     0,     0,     0,   200,
     201,     0,   202,     0,     0,     0,   203,     0,   204,   205,
     206,   207,   208,     0,     0,     0,   209,     0,     0,   210,
     211,   212,     0,     0,     0,   213,     0,   214,   215,     0,
     216,   217,   218,     0,     0,   219,   220,     0,   221,   222,
     223,   224,   225,   226,     0,     0,   227,   228,   229,     0,
       0,   230,   231,     0,   232,   233,   234,     0,     0,   235,
       0,     0,     0,   236,     0,   237,     0,   238,     0,   239,
     240,   241,   242,     0,   243,     0,   244,     0,     0,     0,
     245,   246,     0,   247,     0,     0,   248,   249,     0,     0,
       0,   250,   251,   252,   253,     0,     0,   254,   255,   256,
       0,     0,   257,     0,     0,     0,     0,   258,   259,     0,
       0,     0,   260,     0,   261,   262,     0,   263,   264,     0,
       0,     0,   265,     0,     0,   266,   267,     0,     0,   268,
       0,     0,   269,   270,     0,     0,     0,     0,     0,   271,
     272,     0,   273,     0,   274,     0,   275,   276,     0,     0,
       0,     0,     0,     0,     0,     0,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,     0,   294,   295,   296,     0,   297,   298,
     299,   300,     0,   301,   302,     0,     0,     0,     0,   303,
     304,   305,   306,   307,   308,     0,     0,   309,   310,     0,
     311,     0,   312,     0,   313,   314,   315,   316,   317,   318,
     319,   320,   321,     0,     0,   322,   323,     0,     0,   324,
     325,   326,   327,     0,     0,     0,   328,   329,     0,     0,
       0,   330,     0,   331,   332,   333,     0,     0,   334,   335,
       0,   336,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   337,   338,   339,     0,   340,   341,     0,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,     0,     0,
     352,   353,   354,     0,   355,     0,   356,   357,   358,   359,
     360,     0,   361,   362,   363,     0,     0,   364,     0,     0,
       0,   365,   366,   367,   368,   369,     0,     0,   370,   371,
     372,   373,   374,     0,   375,   376,     0,   377,   378,   379,
       0,     0,   380,     0,   381,     0,   382,   383,     0,   384,
     385,   386,     0,   387,     0,     0,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,     0,   399,   400,
       0,     0,     0,   401,   402,   403,   404,     0,     0,     0,
     405,     0,     0,     0,   406,     0,   407,   408,   409,   410,
       0,   411,   412,   413,   414,   415,     0,     0,     0,     0,
       0,     0,   416,   417,     0,   418,     0,     0,   419,     0,
       0,   420,   421,   422,     0,     0,   423,   424,     0,   425,
     426,   427,   428,   429,   430,     0,     0,   431,   432,   433,
     434,     0,   435,   436,     0,     0,   437,   438,   439,   440,
       0,   133,   441,   442,     0,   443,   444,   445,   446,     0,
       0,     0,     0,     0,   447,   448,     0,     0,     0,   449,
     450,   451,   452,     0,   453,   454,     0,   455,   456,     0,
     457,   458,     0,     0,   459,     0,     0,   460,     0,   461,
       0,   462,   463,     0,     0,     0,     0,     0,     0,   464,
       0,     0,   465,     0,     0,     0,   466,   467,   468,   469,
     470,     0,     0,     0,     0,     0,     0,   471,   472,     0,
     473,   474,   475,     0,   136,   476,   137,   138,   139,   140,
     141,     0,     0,     0,     0,     0,   142,     0,     0,   143,
       0,   144,   145,   146,   147,   148,   149,   150,     0,   151,
       0,     0,     0,   152,     0,     0,     0,   153,     0,     0,
     154,   155,   156,     0,   157,     0,   158,   159,     0,     0,
     160,     0,     0,   161,   162,     0,   163,   164,     0,   165,
       0,   166,   167,   168,   169,   170,   171,     0,   172,   173,
       0,   174,   175,   176,   177,   178,   179,   180,   181,     0,
     182,   183,     0,   184,   185,   186,   187,   188,     0,   189,
       0,     0,   190,     0,     0,   191,     0,   192,     0,     0,
     193,     0,     0,     0,   194,   195,   196,     0,     0,   197,
       0,     0,     0,     0,   198,   199,     0,     0,     0,  2320,
     200,   201,     0,   202,     0,     0,     0,   203,     0,   204,
     205,   206,   207,   208,     0,     0,     0,   209,     0,     0,
     210,   211,   212,     0,     0,     0,   213,     0,   214,   215,
       0,   216,   217,   218,     0,     0,   219,   220,     0,   221,
     222,   223,   224,   225,   226,     0,     0,   227,   228,   229,
       0,     0,   230,   231,     0,   232,   233,   234,     0,     0,
     235,     0,     0,     0,   236,     0,   237,     0,   238,     0,
     239,   240,   241,   242,     0,   243,     0,   244,     0,     0,
       0,   245,   246,     0,   247,     0,     0,   248,   249,     0,
       0,     0,   250,   251,   252,   253,     0,     0,   254,   255,
     256,     0,     0,   257,     0,     0,     0,     0,   258,   259,
       0,     0,     0,   260,     0,   261,   262,     0,   263,   264,
       0,     0,     0,   265,     0,     0,   266,   267,     0,     0,
     268,     0,     0,   269,   270,     0,     0,     0,     0,     0,
     271,   272,     0,   273,     0,   274,     0,   275,   276,     0,
       0,     0,     0,     0,     0,     0,     0,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,     0,   294,   295,   296,     0,   297,
     298,   299,   300,     0,   301,   302,     0,     0,     0,     0,
     303,   304,   305,   306,   307,   308,     0,     0,   309,   310,
       0,   311,     0,   312,     0,   313,   314,   315,   316,   317,
     318,   319,   320,   321,     0,     0,   322,   323,     0,     0,
     324,   325,   326,   327,     0,     0,     0,   328,   329,     0,
       0,     0,   330,     0,   331,   332,   333,     0,     0,   334,
     335,     0,   336,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   337,   338,   339,     0,   340,   341,     0,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,     0,
       0,   352,   353,   354,     0,   355,     0,   356,   357,   358,
     359,   360,     0,   361,   362,   363,     0,     0,   364,     0,
       0,     0,   365,   366,   367,   368,   369,     0,     0,   370,
     371,   372,   373,   374,     0,   375,   376,     0,   377,   378,
     379,     0,     0,   380,     0,   381,     0,   382,   383,     0,
     384,   385,   386,     0,   387,     0,     0,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,     0,   399,
     400,     0,     0,     0,   401,   402,   403,   404,     0,     0,
       0,   405,     0,     0,     0,   406,     0,   407,   408,   409,
     410,     0,   411,   412,   413,   414,   415,     0,     0,     0,
       0,     0,     0,   416,   417,     0,   418,     0,     0,   419,
       0,     0,   420,   421,   422,     0,     0,   423,   424,     0,
     425,   426,   427,   428,   429,   430,     0,     0,   431,   432,
     433,   434,     0,   435,   436,     0,     0,   437,   438,   439,
     440,     0,     0,   441,   442,     0,   443,   444,   445,   446,
       0,     0,     0,     0,     0,   447,   448,     0,     0,     0,
     449,   450,   451,   452,     0,   453,   454,     0,   455,   456,
       0,   457,   458,     0,     0,   459,     0,     0,   460,     0,
     461,     0,   462,   463,     0,     0,     0,     0,     0,     0,
     464,     0,     0,   465,     0,     0,     0,   466,   467,   468,
     469,   470,     0,     0,     0,     0,     0,     0,   471,   472,
       0,   473,   474,   475,     0,   136,   476,   137,   138,   139,
     140,   141,     0,     0,     0,     0,     0,   142,     0,     0,
     143,     0,   144,   145,   146,   147,   148,   149,   150,     0,
     151,     0,     0,     0,   152,     0,     0,     0,   153,     0,
       0,   154,   155,   156,     0,   157,     0,   158,   159,     0,
       0,   160,     0,     0,   161,   162,     0,   163,   164,     0,
     165,     0,   166,   167,   168,   169,   170,   171,     0,   172,
     173,     0,   174,   175,   176,   177,   178,   179,   180,   181,
       0,   182,   183,     0,   184,   185,   186,   187,   188,     0,
     189,     0,     0,   190,     0,     0,   191,     0,   192,     0,
       0,   193,     0,     0,     0,   194,   195,   196,     0,     0,
     197,     0,     0,     0,     0,   198,   199,     0,     0,     0,
       0,   200,   201,     0,   202,     0,     0,     0,   203,     0,
     204,   205,   206,   207,   208,     0,     0,     0,   209,     0,
       0,   210,   211,   212,     0,     0,     0,   213,     0,   214,
     215,     0,   216,   217,   218,     0,     0,   219,   220,     0,
     221,   222,   223,   224,   225,   226,     0,     0,   227,   228,
     229,     0,     0,   230,   231,     0,   232,   233,   234,     0,
       0,   235,     0,     0,     0,   236,     0,   237,     0,   238,
       0,   239,   240,   241,   242,     0,   243,     0,   244,     0,
       0,     0,   245,   246,     0,   247,     0,     0,   248,   249,
       0,     0,     0,   250,   251,   252,   253,     0,     0,   254,
     255,   256,     0,     0,   257,     0,     0,     0,     0,   258,
     259,     0,     0,     0,   260,     0,   261,   262,     0,   263,
     264,     0,     0,     0,   265,     0,     0,   266,   267,     0,
       0,   268,     0,     0,   269,   270,     0,     0,     0,     0,
       0,   271,   272,     0,   273,     0,   274,     0,   275,   276,
       0,     0,     0,     0,     0,     0,     0,     0,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,     0,   294,   295,   296,     0,
     297,   298,   299,   300,     0,   301,   302,     0,     0,     0,
       0,   303,   304,   305,   306,   307,   308,     0,     0,   309,
     310,     0,   311,     0,   312,     0,   313,   314,   315,   316,
     317,   318,   319,   320,   321,     0,     0,   322,   323,     0,
       0,   324,   325,   326,   327,     0,     0,     0,   328,   329,
       0,     0,     0,   330,     0,   331,   332,   333,     0,     0,
     334,   335,     0,   336,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   337,   338,   339,     0,   340,   341,     0,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
       0,     0,   352,   353,   354,     0,   355,     0,   356,   357,
     358,   359,   360,     0,   361,   362,   363,     0,     0,   364,
       0,     0,     0,   365,   366,   367,   368,   369,     0,     0,
     370,   371,   372,   373,   374,     0,   375,   376,     0,   377,
     378,   379,     0,     0,   380,     0,   381,     0,   382,   383,
       0,   384,   385,   386,     0,   387,     0,     0,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,     0,
     399,   400,     0,     0,     0,   401,   402,   403,   404,     0,
       0,     0,   405,     0,     0,     0,   406,     0,   407,   408,
     409,   410,     0,   411,   412,   413,   414,   415,     0,     0,
       0,     0,     0,     0,   416,   417,     0,   418,     0,     0,
     419,     0,     0,   420,   421,   422,     0,     0,   423,   424,
       0,   425,   426,   427,   428,   429,   430,     0,     0,   431,
     432,   433,   434,     0,   435,   436,     0,     0,   437,   438,
     439,   440,     0,     0,   441,   442,     0,   443,   444,   445,
     446,     0,     0,     0,     0,     0,   447,   448,     0,     0,
       0,   449,   450,   451,   452,     0,   453,   454,     0,   455,
     456,     0,   457,   458,     0,     0,   459,     0,     0,   460,
       0,   461,     0,   462,   463,     0,     0,     0,     0,     0,
       0,   464,     0,     0,   465,     0,     0,     0,   466,   467,
     468,   469,   470,     0,     0,     0,     0,     0,     0,   471,
     472,     0,   473,   474,   475,     0,   136,   476,   137,   138,
     139,   140,   141,     0,     0,     0,     0,     0,   142,     0,
       0,   143,     0,   144,   145,   146,   147,   148,   149,   150,
       0,   151,     0,     0,     0,   152,     0,     0,     0,   153,
       0,     0,   154,   155,   156,     0,   157,     0,   158,   159,
       0,     0,   160,     0,     0,   161,   162,     0,   163,   164,
       0,   165,     0,   166,   167,   168,   169,   170,   171,     0,
     172,   173,     0,   174,   175,   176,   177,   178,   179,   180,
     181,     0,   182,   183,     0,   184,   185,   186,   187,   188,
       0,   189,     0,     0,   190,     0,     0,   191,     0,   192,
       0,     0,   193,     0,     0,     0,   194,   195,   196,     0,
       0,   197,     0,     0,     0,     0,   198,   199,     0,     0,
       0,     0,   200,   201,     0,   202,     0,     0,     0,   203,
       0,   204,   205,   206,   207,   208,     0,     0,     0,   209,
       0,     0,   210,   211,   212,     0,     0,     0,   213,     0,
     214,   215,     0,   216,   217,   218,     0,     0,   219,   220,
       0,   221,   222,   223,   224,   225,   226,     0,     0,   227,
     228,   229,     0,     0,   230,   231,     0,   232,  1737,   234,
       0,     0,   235,     0,     0,     0,   236,     0,   237,     0,
     238,     0,   239,   240,   241,   242,     0,   243,     0,   244,
       0,     0,     0,   245,   246,     0,   247,     0,     0,   248,
     249,     0,     0,     0,   250,   251,   252,   253,     0,     0,
     254,   255,   256,     0,     0,   257,     0,     0,     0,     0,
     258,   259,     0,     0,     0,   260,     0,   261,   262,     0,
     263,   264,     0,     0,     0,   265,     0,     0,   266,   267,
       0,     0,   268,     0,     0,   269,   270,     0,     0,     0,
       0,     0,   271,   272,     0,   273,     0,   274,     0,   275,
     276,     0,     0,     0,     0,     0,     0,     0,     0,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,     0,   294,   295,   296,
       0,   297,   298,   299,   300,     0,   301,   302,     0,     0,
       0,     0,   303,   304,   305,   306,   307,   308,     0,     0,
     309,   310,     0,   311,     0,   312,     0,   313,   314,   315,
     316,   317,   318,   319,   320,   321,     0,     0,   322,   323,
       0,     0,   324,  1738,   326,   327,     0,     0,     0,   328,
     329,     0,     0,     0,   330,     0,   331,   332,   333,     0,
       0,   334,   335,     0,   336,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   337,   338,   339,     0,   340,   341,
       0,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,     0,     0,   352,   353,   354,     0,   355,     0,   356,
     357,   358,   359,   360,     0,   361,   362,   363,     0,     0,
     364,     0,     0,     0,   365,   366,   367,   368,   369,     0,
       0,   370,   371,   372,   373,   374,     0,   375,   376,     0,
     377,   378,   379,     0,     0,   380,     0,   381,     0,   382,
     383,     0,   384,   385,   386,     0,   387,     0,     0,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
       0,   399,   400,     0,     0,     0,   401,   402,   403,   404,
       0,     0,     0,   405,     0,     0,     0,   406,     0,   407,
     408,   409,   410,     0,   411,   412,   413,   414,   415,     0,
       0,     0,     0,     0,     0,   416,   417,     0,   418,     0,
       0,   419,     0,     0,   420,   421,   422,     0,     0,   423,
     424,     0,   425,   426,   427,   428,   429,   430,     0,     0,
     431,   432,   433,   434,     0,   435,   436,     0,     0,   437,
     438,   439,   440,     0,     0,   441,   442,     0,   443,   444,
     445,   446,     0,     0,     0,     0,     0,   447,   448,     0,
       0,     0,   449,   450,   451,   452,     0,   453,   454,     0,
     455,   456,     0,   457,   458,     0,     0,   459,     0,     0,
     460,     0,   461,     0,   462,   463,     0,     0,     0,     0,
       0,     0,   464,     0,     0,   465,     0,     0,     0,   466,
     467,   468,   469,   470,     0,     0,     0,     0,     0,     0,
     471,   472,     0,   473,   474,   475,     0,   136,   476,   137,
     138,   139,   140,   141,     0,     0,     0,     0,     0,   142,
       0,     0,     0,     0,   144,   145,   146,   147,   148,   149,
       0,     0,  -362,     0,     0,     0,   152,     0,     0,     0,
     153,     0,     0,   154,   155,   156,     0,   157,     0,     0,
       0,     0,     0,   160,  3851,     0,   161,   162,     0,   163,
       0,     0,     0,     0,   166,   167,   168,  3852,   170,   171,
       0,   172,   173,     0,   174,     0,   176,     0,   178,   179,
     180,   181,     0,   182,   183,     0,   184,   185,   186,     0,
     188,     0,   189,     0,     0,   190,     0,     0,   191,     0,
     192,     0,     0,   193,     0,     0,     0,   194,   195,   196,
       0,     0,   197,     0,     0,     0,     0,   198,     0,     0,
       0,     0,     0,   200,   201,     0,   202,     0,     0,     0,
     203,     0,   204,   205,   206,   207,   208,     0,     0,     0,
       0,     0,     0,   210,   211,   212,     0,  -332,  -332,   213,
       0,  -332,   215,     0,   216,   217,   218,     0,     0,   219,
     220,     0,   221,   222,   223,   224,   225,     0,     0,     0,
     227,   228,   229,     0,     0,   230,   231,  3853,   232,   233,
     234,     0,     0,     0,     0,     0,     0,   236,     0,   237,
       0,   238,     0,   239,   240,   241,   242,     0,   243,     0,
     244,     0,     0,     0,     0,   246,     0,     0,     0,     0,
       0,   249,     0,     0,     0,   250,   251,   252,   253,  3854,
       0,   254,   255,   256,     0,     0,   257,     0,     0,     0,
       0,   258,     0,     0,     0,     0,   260,     0,   261,   262,
       0,   263,   264,  3855,     0,     0,   265,     0,     0,     0,
     267,     0,     0,   268,  3856,     0,   269,   270,     0,     0,
       0,     0,     0,   271,   272,     0,   273,     0,   274,     0,
     275,   276,     0,     0,     0,     0,  -317,     0,     0,     0,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,     0,   294,   295,
     296,     0,   297,   298,   299,   300,     0,   301,   302,     0,
       0,     0,     0,   303,   304,   305,   306,   307,   308,     0,
       0,   309,   310,     0,   311,     0,   312,     0,   313,   314,
     315,   316,   317,   318,   319,   320,   321,     0,     0,   322,
     323,     0,     0,   324,   325,   326,   327,     0,     0,     0,
       0,   329,     0,     0,     0,   330,     0,   331,   332,   333,
       0,     0,   334,  3857,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   338,   339,     0,     0,
     341,     0,   342,   343,   344,   345,   346,   347,   348,   349,
     350,     0,     0,     0,     0,   353,   354,     0,   355,     0,
     356,   357,   358,   359,   360,     0,   361,   362,   363,     0,
       0,   364,     0,     0,     0,   365,   366,   367,   368,   369,
       0,     0,   370,   371,   372,   373,   374,     0,   375,     0,
       0,   377,     0,   379,  -317,     0,   380,     0,     0,     0,
     382,     0,     0,   384,   385,   386,  3858,   387,     0,     0,
       0,   389,   390,   391,   392,   393,   394,   395,     0,   397,
     398,     0,   399,     0,     0,     0,     0,   401,   402,   403,
       0,     0,     0,     0,   405,     0,     0,     0,   406,     0,
       0,   408,     0,   410,     0,   411,     0,     0,   414,   415,
       0,     0,     0,     0,     0,     0,   416,   417,     0,   418,
       0,     0,   419,     0,     0,   420,     0,   422,     0,     0,
       0,   424,     0,   425,   426,   427,   428,   429,   430,     0,
       0,   431,   432,   433,   434,     0,   435,   436,     0,     0,
     437,   438,   439,   440,     0,     0,   441,   442,     0,   443,
     444,   445,   446,     0,     0,     0,     0,     0,   447,   448,
       0,     0,     0,     0,   450,   451,   452,     0,   453,   454,
       0,   455,   456,     0,     0,     0,     0,     0,   459,     0,
       0,   460,     0,     0,     0,   462,   463,     0,     0,     0,
       0,     0,     0,   464,     0,     0,   465,     0,     0,     0,
     466,   467,   468,   469,   470,     0,     0,  -317,     0,     0,
       0,   471,     0,     0,   473,     0,   475,     0,   136,   476,
     137,   138,   139,   140,   141,     0,     0,     0,     0,     0,
     142,     0,     0,     0,     0,   144,   145,   146,   147,   148,
     149,     0,     0,  -362,     0,     0,     0,   152,     0,     0,
       0,   153,     0,     0,   154,   155,   156,     0,   157,     0,
       0,     0,     0,     0,   160,  3851,     0,   161,   162,     0,
     163,     0,     0,     0,     0,   166,   167,   168,  3852,   170,
     171,     0,   172,   173,     0,   174,     0,   176,     0,   178,
     179,   180,   181,     0,   182,   183,     0,   184,   185,   186,
       0,   188,     0,   189,     0,     0,   190,     0,     0,   191,
       0,   192,     0,     0,   193,     0,     0,     0,   194,   195,
     196,     0,     0,   197,     0,     0,     0,     0,   198,     0,
       0,     0,     0,     0,   200,   201,     0,   202,     0,     0,
       0,   203,     0,   204,   205,   206,   207,   208,     0,     0,
       0,     0,     0,     0,   210,   211,   212,     0,  -353,     0,
     213,     0,  -353,   215,     0,   216,   217,   218,     0,     0,
     219,   220,     0,   221,   222,   223,   224,   225,     0,     0,
       0,   227,   228,   229,     0,     0,   230,   231,  3853,   232,
     233,   234,     0,     0,     0,     0,     0,     0,   236,     0,
     237,     0,   238,     0,   239,   240,   241,   242,     0,   243,
       0,   244,     0,     0,     0,     0,   246,     0,     0,     0,
       0,     0,   249,     0,     0,     0,   250,   251,   252,   253,
    3854,     0,   254,   255,   256,     0,     0,   257,     0,     0,
       0,     0,   258,     0,     0,     0,     0,   260,     0,   261,
     262,     0,   263,   264,  3855,     0,     0,   265,     0,     0,
       0,   267,     0,     0,   268,  3856,     0,   269,   270,     0,
       0,     0,     0,     0,   271,   272,     0,   273,     0,   274,
       0,   275,   276,     0,     0,     0,     0,  -317,     0,     0,
       0,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,     0,   294,
     295,   296,     0,   297,   298,   299,   300,     0,   301,   302,
       0,     0,     0,     0,   303,   304,   305,   306,   307,   308,
       0,     0,   309,   310,     0,   311,     0,   312,     0,   313,
     314,   315,   316,   317,   318,   319,   320,   321,     0,     0,
     322,   323,     0,     0,   324,   325,   326,   327,     0,     0,
       0,     0,   329,     0,     0,     0,   330,     0,   331,   332,
     333,     0,     0,   334,  3857,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   338,   339,     0,
       0,   341,     0,   342,   343,   344,   345,   346,   347,   348,
     349,   350,     0,     0,     0,     0,   353,   354,     0,   355,
       0,   356,   357,   358,   359,   360,     0,   361,   362,   363,
       0,     0,   364,     0,     0,     0,   365,   366,   367,   368,
     369,     0,     0,   370,   371,   372,   373,   374,     0,   375,
       0,     0,   377,     0,   379,  -317,     0,   380,     0,     0,
       0,   382,     0,     0,   384,   385,   386,  3858,   387,     0,
       0,     0,   389,   390,   391,   392,   393,   394,   395,     0,
     397,   398,     0,   399,     0,     0,     0,     0,   401,   402,
     403,     0,     0,     0,     0,   405,     0,     0,     0,   406,
       0,     0,   408,     0,   410,     0,   411,     0,     0,   414,
     415,     0,     0,     0,     0,     0,     0,   416,   417,     0,
     418,     0,     0,   419,     0,     0,   420,     0,   422,     0,
       0,     0,   424,     0,   425,   426,   427,   428,   429,   430,
       0,     0,   431,   432,   433,   434,     0,   435,   436,     0,
       0,   437,   438,   439,   440,     0,     0,   441,   442,     0,
     443,   444,   445,   446,     0,     0,     0,     0,     0,   447,
     448,     0,     0,     0,     0,   450,   451,   452,     0,   453,
     454,     0,   455,   456,     0,     0,     0,     0,     0,   459,
       0,     0,   460,     0,     0,     0,   462,   463,     0,     0,
       0,     0,     0,     0,   464,     0,     0,   465,     0,     0,
       0,   466,   467,   468,   469,   470,  -353,     0,  -317,     0,
       0,     0,   471,     0,     0,   473,     0,   475,     0,   136,
     476,   137,   138,   139,   140,   141,     0,     0,     0,     0,
       0,   142,     0,     0,     0,     0,   144,   145,   146,   147,
     148,   149,     0,     0,  -362,     0,     0,     0,   152,     0,
       0,     0,   153,     0,     0,   154,   155,   156,     0,   157,
       0,     0,     0,     0,     0,   160,  3851,     0,   161,   162,
       0,   163,     0,     0,     0,     0,   166,   167,   168,  3852,
     170,   171,     0,   172,   173,     0,   174,     0,   176,     0,
     178,   179,   180,   181,     0,   182,   183,     0,   184,   185,
     186,     0,   188,     0,   189,     0,     0,   190,     0,     0,
     191,     0,   192,     0,     0,   193,     0,     0,     0,   194,
     195,   196,     0,     0,   197,     0,     0,     0,     0,   198,
       0,     0,     0,     0,     0,   200,   201,     0,   202,     0,
       0,     0,   203,     0,   204,   205,   206,   207,   208,     0,
       0,     0,     0,     0,     0,   210,   211,   212,     0,  -350,
       0,   213,     0,  -350,   215,     0,   216,   217,   218,     0,
       0,   219,   220,     0,   221,   222,   223,   224,   225,     0,
       0,     0,   227,   228,   229,     0,     0,   230,   231,  3853,
     232,   233,   234,     0,     0,     0,     0,     0,     0,   236,
       0,   237,     0,   238,     0,   239,   240,   241,   242,     0,
     243,     0,   244,     0,     0,     0,     0,   246,     0,     0,
       0,     0,     0,   249,     0,     0,     0,   250,   251,   252,
     253,  3854,     0,   254,   255,   256,     0,     0,   257,     0,
       0,     0,     0,   258,     0,     0,     0,     0,   260,     0,
     261,   262,     0,   263,   264,  3855,     0,     0,   265,     0,
       0,     0,   267,     0,     0,   268,  3856,     0,   269,   270,
       0,     0,     0,     0,     0,   271,   272,     0,   273,     0,
     274,     0,   275,   276,     0,     0,     0,     0,  -317,     0,
       0,     0,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,     0,
     294,   295,   296,     0,   297,   298,   299,   300,     0,   301,
     302,     0,     0,     0,     0,   303,   304,   305,   306,   307,
     308,     0,     0,   309,   310,     0,   311,     0,   312,     0,
     313,   314,   315,   316,   317,   318,   319,   320,   321,     0,
       0,   322,   323,     0,     0,   324,   325,   326,   327,     0,
       0,     0,     0,   329,     0,     0,     0,   330,     0,   331,
     332,   333,     0,     0,   334,  3857,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   338,   339,
       0,     0,   341,     0,   342,   343,   344,   345,   346,   347,
     348,   349,   350,     0,     0,     0,     0,   353,   354,     0,
     355,     0,   356,   357,   358,   359,   360,     0,   361,   362,
     363,     0,     0,   364,     0,     0,     0,   365,   366,   367,
     368,   369,     0,     0,   370,   371,   372,   373,   374,     0,
     375,     0,     0,   377,     0,   379,  -317,     0,   380,     0,
       0,     0,   382,     0,     0,   384,   385,   386,  3858,   387,
       0,     0,     0,   389,   390,   391,   392,   393,   394,   395,
       0,   397,   398,     0,   399,     0,     0,     0,     0,   401,
     402,   403,     0,     0,     0,     0,   405,     0,     0,     0,
     406,     0,     0,   408,     0,   410,     0,   411,     0,     0,
     414,   415,     0,     0,     0,     0,     0,     0,   416,   417,
       0,   418,     0,     0,   419,     0,     0,   420,     0,   422,
       0,     0,     0,   424,     0,   425,   426,   427,   428,   429,
     430,     0,     0,   431,   432,   433,   434,     0,   435,   436,
       0,     0,   437,   438,   439,   440,     0,     0,   441,   442,
       0,   443,   444,   445,   446,     0,     0,     0,     0,     0,
     447,   448,     0,     0,     0,     0,   450,   451,   452,     0,
     453,   454,     0,   455,   456,     0,     0,     0,     0,     0,
     459,     0,     0,   460,     0,     0,     0,   462,   463,     0,
       0,     0,     0,     0,     0,   464,     0,     0,   465,     0,
       0,     0,   466,   467,   468,   469,   470,  -350,     0,  -317,
       0,     0,     0,   471,     0,     0,   473,     0,   475,     0,
     136,   476,   137,   138,   139,   140,   141,     0,     0,     0,
       0,     0,   142,     0,     0,     0,     0,   144,   145,   146,
     147,   148,   149,     0,     0,  -362,     0,     0,     0,   152,
       0,     0,     0,   153,     0,     0,   154,   155,   156,     0,
     157,     0,     0,     0,     0,     0,   160,  3851,     0,   161,
     162,     0,   163,     0,     0,     0,     0,   166,   167,   168,
    3852,   170,   171,     0,   172,   173,     0,   174,     0,   176,
       0,   178,   179,   180,   181,     0,   182,   183,     0,   184,
     185,   186,     0,   188,     0,   189,     0,     0,   190,     0,
       0,   191,     0,   192,     0,     0,   193,     0,     0,     0,
     194,   195,   196,     0,     0,   197,     0,     0,     0,     0,
     198,     0,     0,     0,     0,     0,   200,   201,     0,   202,
       0,     0,     0,   203,     0,   204,   205,   206,   207,   208,
       0,     0,     0,     0,     0,     0,   210,   211,   212,     0,
       0,     0,   213,     0,  4164,   215,     0,   216,   217,   218,
       0,     0,   219,   220,     0,   221,   222,   223,   224,   225,
       0,     0,     0,   227,   228,   229,     0,     0,   230,   231,
    3853,   232,   233,   234,     0,     0,     0,     0,     0,     0,
     236,     0,   237,     0,   238,     0,   239,   240,   241,   242,
       0,   243,     0,   244,     0,     0,     0,     0,   246,     0,
       0,     0,     0,     0,   249,     0,     0,     0,   250,   251,
     252,   253,  3854,     0,   254,   255,   256,     0,     0,   257,
       0,     0,     0,     0,   258,     0,     0,     0,     0,   260,
       0,   261,   262,     0,   263,   264,  3855,     0,     0,   265,
       0,     0,     0,   267,     0,     0,   268,  3856,     0,   269,
     270,     0,     0,     0,     0,     0,   271,   272,     0,   273,
       0,   274,     0,   275,   276,     0,     0,     0,     0,  -317,
       0,     0,     0,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
       0,   294,   295,   296,     0,   297,   298,   299,   300,     0,
     301,   302,     0,     0,     0,     0,   303,   304,   305,   306,
     307,   308,     0,     0,   309,   310,     0,   311,     0,   312,
       0,   313,   314,   315,   316,   317,   318,   319,   320,   321,
       0,     0,   322,   323,     0,     0,   324,   325,   326,   327,
       0,     0,     0,     0,   329,     0,     0,     0,   330,     0,
     331,   332,   333,     0,     0,   334,  3857,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   338,
     339,     0,     0,   341,     0,   342,   343,   344,   345,   346,
     347,   348,   349,   350,     0,     0,     0,     0,   353,   354,
       0,   355,     0,   356,   357,   358,   359,   360,     0,   361,
     362,   363,     0,     0,   364,     0,     0,     0,   365,   366,
     367,   368,   369,     0,     0,   370,   371,   372,   373,   374,
       0,   375,     0,     0,   377,     0,   379,  -317,     0,   380,
       0,     0,     0,   382,     0,     0,   384,   385,   386,  3858,
     387,     0,     0,     0,   389,   390,   391,   392,   393,   394,
     395,     0,   397,   398,     0,   399,     0,     0,     0,     0,
     401,   402,   403,     0,     0,     0,     0,   405,     0,     0,
       0,   406,     0,     0,   408,     0,   410,     0,   411,     0,
       0,   414,   415,     0,     0,     0,     0,     0,     0,   416,
     417,     0,   418,     0,     0,   419,     0,     0,   420,     0,
     422,     0,     0,     0,   424,     0,   425,   426,   427,   428,
     429,   430,     0,     0,   431,   432,   433,   434,     0,   435,
     436,     0,     0,   437,   438,   439,   440,     0,     0,   441,
     442,     0,   443,   444,   445,   446,     0,     0,     0,     0,
       0,   447,   448,     0,     0,     0,     0,   450,   451,   452,
       0,   453,   454,     0,   455,   456,     0,     0,     0,     0,
       0,   459,     0,     0,   460,     0,     0,     0,   462,   463,
       0,     0,     0,     0,     0,     0,   464,     0,     0,   465,
       0,     0,     0,   466,   467,   468,   469,   470,     0,     0,
    -317,     0,     0,     0,   471,     0,     0,   473,     0,   475,
       0,   136,   476,   137,   138,   139,   140,   141,     0,     0,
       0,     0,     0,   142,     0,     0,     0,     0,   144,   145,
     146,   147,   148,   149,     0,     0,  -362,     0,     0,     0,
     152,     0,     0,     0,   153,     0,     0,   154,   155,   156,
       0,   157,     0,     0,     0,     0,     0,   160,  3851,     0,
     161,   162,     0,   163,     0,     0,     0,     0,   166,   167,
     168,  3852,   170,   171,     0,   172,   173,     0,   174,     0,
     176,     0,   178,   179,   180,   181,     0,   182,   183,     0,
     184,   185,   186,     0,   188,     0,   189,     0,     0,   190,
       0,     0,   191,     0,   192,     0,     0,   193,     0,     0,
       0,   194,   195,   196,     0,     0,   197,     0,     0,     0,
       0,   198,     0,     0,     0,     0,     0,   200,   201,     0,
     202,     0,     0,     0,   203,     0,   204,   205,   206,   207,
     208,     0,     0,     0,     0,     0,     0,   210,   211,   212,
       0,     0,     0,   213,     0,  -355,   215,     0,   216,   217,
     218,     0,     0,   219,   220,     0,   221,   222,   223,   224,
     225,     0,     0,     0,   227,   228,   229,     0,     0,   230,
     231,  3853,   232,   233,   234,     0,     0,     0,     0,     0,
       0,   236,     0,   237,     0,   238,     0,   239,   240,   241,
     242,     0,   243,     0,   244,     0,     0,     0,     0,   246,
       0,     0,     0,     0,     0,   249,     0,     0,     0,   250,
     251,   252,   253,  3854,     0,   254,   255,   256,     0,     0,
     257,     0,     0,     0,     0,   258,     0,     0,     0,     0,
     260,     0,   261,   262,     0,   263,   264,  3855,     0,     0,
     265,     0,     0,     0,   267,     0,     0,   268,  3856,     0,
     269,   270,     0,     0,     0,     0,     0,   271,   272,     0,
     273,     0,   274,     0,   275,   276,     0,     0,     0,     0,
    -317,     0,     0,     0,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,     0,   294,   295,   296,     0,   297,   298,   299,   300,
       0,   301,   302,     0,     0,     0,     0,   303,   304,   305,
     306,   307,   308,     0,     0,   309,   310,     0,   311,     0,
     312,     0,   313,   314,   315,   316,   317,   318,   319,   320,
     321,     0,     0,   322,   323,     0,     0,   324,   325,   326,
     327,     0,     0,     0,     0,   329,     0,     0,     0,   330,
       0,   331,   332,   333,     0,     0,   334,  3857,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     338,   339,     0,     0,   341,     0,   342,   343,   344,   345,
     346,   347,   348,   349,   350,     0,     0,     0,     0,   353,
     354,     0,   355,     0,   356,   357,   358,   359,   360,     0,
     361,   362,   363,     0,     0,   364,     0,     0,     0,   365,
     366,   367,   368,   369,     0,     0,   370,   371,   372,   373,
     374,     0,   375,     0,     0,   377,     0,   379,  -317,     0,
     380,     0,     0,     0,   382,     0,     0,   384,   385,   386,
    3858,   387,     0,     0,     0,   389,   390,   391,   392,   393,
     394,   395,     0,   397,   398,     0,   399,     0,     0,     0,
       0,   401,   402,   403,     0,     0,     0,     0,   405,     0,
       0,     0,   406,     0,     0,   408,     0,   410,     0,   411,
       0,     0,   414,   415,     0,     0,     0,     0,     0,     0,
     416,   417,     0,   418,     0,     0,   419,     0,     0,   420,
       0,   422,     0,     0,     0,   424,     0,   425,   426,   427,
     428,   429,   430,     0,     0,   431,   432,   433,   434,     0,
     435,   436,     0,     0,   437,   438,   439,   440,     0,     0,
     441,   442,     0,   443,   444,   445,   446,     0,     0,     0,
       0,     0,   447,   448,     0,     0,     0,     0,   450,   451,
     452,     0,   453,   454,     0,   455,   456,     0,     0,     0,
       0,     0,   459,     0,     0,   460,     0,     0,     0,   462,
     463,     0,     0,     0,     0,     0,     0,   464,     0,     0,
     465,     0,     0,     0,   466,   467,   468,   469,   470,     0,
       0,  -317,     0,     0,     0,   471,     0,     0,   473,     0,
     475,     0,   136,   476,   137,   138,   139,   140,   141,     0,
       0,     0,     0,     0,   142,     0,     0,     0,     0,   144,
     145,   146,   147,   148,   149,     0,     0,  -362,     0,     0,
       0,   152,     0,     0,     0,   153,     0,     0,   154,   155,
     156,     0,   157,     0,     0,     0,     0,     0,   160,  3851,
       0,   161,   162,     0,   163,     0,     0,     0,     0,   166,
     167,   168,  3852,   170,   171,     0,   172,   173,     0,   174,
       0,   176,     0,   178,   179,   180,   181,     0,   182,   183,
       0,   184,   185,   186,     0,   188,     0,   189,     0,     0,
     190,     0,     0,   191,     0,   192,     0,     0,   193,     0,
       0,     0,   194,   195,   196,     0,     0,   197,     0,     0,
       0,     0,   198,     0,     0,     0,     0,     0,   200,   201,
       0,   202,     0,     0,     0,   203,     0,   204,   205,   206,
     207,   208,     0,     0,     0,     0,     0,     0,   210,   211,
     212,     0,     0,     0,   213,     0,  4271,   215,     0,   216,
     217,   218,     0,     0,   219,   220,     0,   221,   222,   223,
     224,   225,     0,     0,     0,   227,   228,   229,     0,     0,
     230,   231,  3853,   232,   233,   234,     0,     0,     0,     0,
       0,     0,   236,     0,   237,     0,   238,     0,   239,   240,
     241,   242,     0,   243,     0,   244,     0,     0,     0,     0,
     246,     0,     0,     0,     0,     0,   249,     0,     0,     0,
     250,   251,   252,   253,  3854,     0,   254,   255,   256,     0,
       0,   257,     0,     0,     0,     0,   258,     0,     0,     0,
       0,   260,     0,   261,   262,     0,   263,   264,  3855,     0,
       0,   265,     0,     0,     0,   267,     0,     0,   268,  3856,
       0,   269,   270,     0,     0,     0,     0,     0,   271,   272,
       0,   273,     0,   274,     0,   275,   276,     0,     0,     0,
       0,  -317,     0,     0,     0,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,     0,   294,   295,   296,     0,   297,   298,   299,
     300,     0,   301,   302,     0,     0,     0,     0,   303,   304,
     305,   306,   307,   308,     0,     0,   309,   310,     0,   311,
       0,   312,     0,   313,   314,   315,   316,   317,   318,   319,
     320,   321,     0,     0,   322,   323,     0,     0,   324,   325,
     326,   327,     0,     0,     0,     0,   329,     0,     0,     0,
     330,     0,   331,   332,   333,     0,     0,   334,  3857,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   338,   339,     0,     0,   341,     0,   342,   343,   344,
     345,   346,   347,   348,   349,   350,     0,     0,     0,     0,
     353,   354,     0,   355,     0,   356,   357,   358,   359,   360,
       0,   361,   362,   363,     0,     0,   364,     0,     0,     0,
     365,   366,   367,   368,   369,     0,     0,   370,   371,   372,
     373,   374,     0,   375,     0,     0,   377,     0,   379,  -317,
       0,   380,     0,     0,     0,   382,     0,     0,   384,   385,
     386,  3858,   387,     0,     0,     0,   389,   390,   391,   392,
     393,   394,   395,     0,   397,   398,     0,   399,     0,     0,
       0,     0,   401,   402,   403,     0,     0,     0,     0,   405,
       0,     0,     0,   406,     0,     0,   408,     0,   410,     0,
     411,     0,     0,   414,   415,     0,     0,     0,     0,     0,
       0,   416,   417,     0,   418,     0,     0,   419,     0,     0,
     420,     0,   422,     0,     0,     0,   424,     0,   425,   426,
     427,   428,   429,   430,     0,     0,   431,   432,   433,   434,
       0,   435,   436,     0,     0,   437,   438,   439,   440,     0,
       0,   441,   442,     0,   443,   444,   445,   446,     0,     0,
       0,     0,     0,   447,   448,     0,     0,     0,     0,   450,
     451,   452,     0,   453,   454,     0,   455,   456,     0,     0,
       0,     0,     0,   459,     0,     0,   460,     0,     0,     0,
     462,   463,     0,     0,     0,     0,     0,     0,   464,     0,
       0,   465,     0,     0,     0,   466,   467,   468,   469,   470,
       0,     0,  -317,     0,     0,     0,   471,     0,     0,   473,
       0,   475,     0,   136,   476,   137,   138,   139,   140,   141,
       0,     0,     0,     0,     0,   142,     0,     0,     0,     0,
     144,   145,   146,   147,   148,   149,     0,     0,  -362,     0,
       0,     0,   152,     0,     0,     0,   153,     0,     0,   154,
     155,   156,     0,   157,     0,     0,     0,     0,     0,   160,
    3851,     0,   161,   162,     0,   163,     0,     0,     0,     0,
     166,   167,   168,  3852,   170,   171,     0,   172,   173,     0,
     174,     0,   176,     0,   178,   179,   180,   181,     0,   182,
     183,     0,   184,   185,   186,     0,   188,     0,   189,     0,
       0,   190,     0,     0,   191,     0,   192,     0,     0,   193,
       0,     0,     0,   194,   195,   196,     0,     0,   197,     0,
       0,     0,     0,   198,     0,     0,     0,     0,     0,   200,
     201,     0,   202,     0,     0,     0,   203,     0,   204,   205,
     206,   207,   208,     0,     0,     0,     0,     0,     0,   210,
     211,   212,     0,     0,     0,   213,     0,  4319,   215,     0,
     216,   217,   218,     0,     0,   219,   220,     0,   221,   222,
     223,   224,   225,     0,     0,     0,   227,   228,   229,     0,
       0,   230,   231,  3853,   232,   233,   234,     0,     0,     0,
       0,     0,     0,   236,     0,   237,     0,   238,     0,   239,
     240,   241,   242,     0,   243,     0,   244,     0,     0,     0,
       0,   246,     0,     0,     0,     0,     0,   249,     0,     0,
       0,   250,   251,   252,   253,  3854,     0,   254,   255,   256,
       0,     0,   257,     0,     0,     0,     0,   258,     0,     0,
       0,     0,   260,     0,   261,   262,     0,   263,   264,  3855,
       0,     0,   265,     0,     0,     0,   267,     0,     0,   268,
    3856,     0,   269,   270,     0,     0,     0,     0,     0,   271,
     272,     0,   273,     0,   274,     0,   275,   276,     0,     0,
       0,     0,  -317,     0,     0,     0,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,     0,   294,   295,   296,     0,   297,   298,
     299,   300,     0,   301,   302,     0,     0,     0,     0,   303,
     304,   305,   306,   307,   308,     0,     0,   309,   310,     0,
     311,     0,   312,     0,   313,   314,   315,   316,   317,   318,
     319,   320,   321,     0,     0,   322,   323,     0,     0,   324,
     325,   326,   327,     0,     0,     0,     0,   329,     0,     0,
       0,   330,     0,   331,   332,   333,     0,     0,   334,  3857,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   338,   339,     0,     0,   341,     0,   342,   343,
     344,   345,   346,   347,   348,   349,   350,     0,     0,     0,
       0,   353,   354,     0,   355,     0,   356,   357,   358,   359,
     360,     0,   361,   362,   363,     0,     0,   364,     0,     0,
       0,   365,   366,   367,   368,   369,     0,     0,   370,   371,
     372,   373,   374,     0,   375,     0,     0,   377,     0,   379,
    -317,     0,   380,     0,     0,     0,   382,     0,     0,   384,
     385,   386,  3858,   387,     0,     0,     0,   389,   390,   391,
     392,   393,   394,   395,     0,   397,   398,     0,   399,     0,
       0,     0,     0,   401,   402,   403,     0,     0,     0,     0,
     405,     0,     0,     0,   406,     0,     0,   408,     0,   410,
       0,   411,     0,     0,   414,   415,     0,     0,     0,     0,
       0,     0,   416,   417,     0,   418,     0,     0,   419,     0,
       0,   420,     0,   422,     0,     0,     0,   424,     0,   425,
     426,   427,   428,   429,   430,     0,     0,   431,   432,   433,
     434,     0,   435,   436,     0,     0,   437,   438,   439,   440,
       0,     0,   441,   442,     0,   443,   444,   445,   446,     0,
       0,     0,     0,     0,   447,   448,     0,     0,     0,     0,
     450,   451,   452,     0,   453,   454,     0,   455,   456,     0,
       0,     0,     0,     0,   459,     0,     0,   460,     0,     0,
       0,   462,   463,     0,     0,     0,     0,     0,     0,   464,
       0,     0,   465,     0,     0,     0,   466,   467,   468,   469,
     470,     0,     0,  -317,     0,     0,     0,   471,     0,     0,
     473,     0,   475,     0,   136,   476,   137,   138,   139,   140,
     141,     0,     0,     0,     0,     0,   142,     0,     0,     0,
       0,   144,   145,   146,   147,   148,   149,     0,     0,  -362,
       0,     0,     0,   152,     0,     0,     0,   153,     0,     0,
     154,   155,   156,     0,   157,     0,     0,     0,     0,     0,
     160,  3851,     0,   161,   162,     0,   163,     0,     0,     0,
       0,   166,   167,   168,  3852,   170,   171,     0,   172,   173,
       0,   174,     0,   176,     0,   178,   179,   180,   181,     0,
     182,   183,     0,   184,   185,   186,     0,   188,     0,   189,
       0,     0,   190,     0,     0,   191,     0,   192,     0,     0,
     193,     0,     0,     0,   194,   195,   196,     0,     0,   197,
       0,     0,     0,     0,   198,     0,     0,     0,     0,     0,
     200,   201,     0,   202,     0,     0,     0,   203,     0,   204,
     205,   206,   207,   208,     0,     0,     0,     0,     0,     0,
     210,   211,   212,     0,     0,     0,   213,     0,  -336,   215,
       0,   216,   217,   218,     0,     0,   219,   220,     0,   221,
     222,   223,   224,   225,     0,     0,     0,   227,   228,   229,
       0,     0,   230,   231,  3853,   232,   233,   234,     0,     0,
       0,     0,     0,     0,   236,     0,   237,     0,   238,     0,
     239,   240,   241,   242,     0,   243,     0,   244,     0,     0,
       0,     0,   246,     0,     0,     0,     0,     0,   249,     0,
       0,     0,   250,   251,   252,   253,  3854,     0,   254,   255,
     256,     0,     0,   257,     0,     0,     0,     0,   258,     0,
       0,     0,     0,   260,     0,   261,   262,     0,   263,   264,
    3855,     0,     0,   265,     0,     0,     0,   267,     0,     0,
     268,  3856,     0,   269,   270,     0,     0,     0,     0,     0,
     271,   272,     0,   273,     0,   274,     0,   275,   276,     0,
       0,     0,     0,  -317,     0,     0,     0,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,     0,   294,   295,   296,     0,   297,
     298,   299,   300,     0,   301,   302,     0,     0,     0,     0,
     303,   304,   305,   306,   307,   308,     0,     0,   309,   310,
       0,   311,     0,   312,     0,   313,   314,   315,   316,   317,
     318,   319,   320,   321,     0,     0,   322,   323,     0,     0,
     324,   325,   326,   327,     0,     0,     0,     0,   329,     0,
       0,     0,   330,     0,   331,   332,   333,     0,     0,   334,
    3857,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   338,   339,     0,     0,   341,     0,   342,
     343,   344,   345,   346,   347,   348,   349,   350,     0,     0,
       0,     0,   353,   354,     0,   355,     0,   356,   357,   358,
     359,   360,     0,   361,   362,   363,     0,     0,   364,     0,
       0,     0,   365,   366,   367,   368,   369,     0,     0,   370,
     371,   372,   373,   374,     0,   375,     0,     0,   377,     0,
     379,  -317,     0,   380,     0,     0,     0,   382,     0,     0,
     384,   385,   386,  3858,   387,     0,     0,     0,   389,   390,
     391,   392,   393,   394,   395,     0,   397,   398,     0,   399,
       0,     0,     0,     0,   401,   402,   403,     0,     0,     0,
       0,   405,     0,     0,     0,   406,     0,     0,   408,     0,
     410,     0,   411,     0,     0,   414,   415,     0,     0,     0,
       0,     0,     0,   416,   417,     0,   418,     0,     0,   419,
       0,     0,   420,     0,   422,     0,     0,     0,   424,     0,
     425,   426,   427,   428,   429,   430,     0,     0,   431,   432,
     433,   434,     0,   435,   436,     0,     0,   437,   438,   439,
     440,     0,     0,   441,   442,     0,   443,   444,   445,   446,
       0,     0,     0,     0,     0,   447,   448,     0,     0,     0,
       0,   450,   451,   452,     0,   453,   454,     0,   455,   456,
       0,     0,     0,     0,     0,   459,     0,     0,   460,     0,
       0,     0,   462,   463,     0,     0,     0,     0,     0,     0,
     464,     0,     0,   465,     0,     0,     0,   466,   467,   468,
     469,   470,     0,     0,  -317,     0,     0,     0,   471,     0,
       0,   473,     0,   475,     0,   136,   476,   137,   138,   139,
     140,   141,     0,     0,     0,     0,     0,   142,     0,     0,
       0,     0,   144,   145,   146,   147,   148,   149,     0,     0,
    -362,     0,     0,     0,   152,     0,     0,     0,   153,     0,
       0,   154,   155,   156,     0,   157,     0,     0,     0,     0,
       0,   160,  3851,     0,   161,   162,     0,   163,     0,     0,
       0,     0,   166,   167,   168,  3852,   170,   171,     0,   172,
     173,     0,   174,     0,   176,     0,   178,   179,   180,   181,
       0,   182,   183,     0,   184,   185,   186,     0,   188,     0,
     189,     0,     0,   190,     0,     0,   191,     0,   192,     0,
       0,   193,     0,     0,     0,   194,   195,   196,     0,     0,
     197,     0,     0,     0,     0,   198,     0,     0,     0,     0,
       0,   200,   201,     0,   202,     0,     0,     0,   203,     0,
     204,   205,   206,   207,   208,     0,     0,     0,     0,     0,
       0,   210,   211,   212,     0,     0,     0,   213,     0,     0,
     215,     0,   216,   217,   218,     0,     0,   219,   220,     0,
     221,   222,   223,   224,   225,     0,     0,     0,   227,   228,
     229,     0,     0,   230,   231,  3853,   232,   233,   234,     0,
       0,     0,     0,     0,     0,   236,     0,   237,     0,   238,
       0,   239,   240,   241,   242,     0,   243,     0,   244,     0,
       0,     0,     0,   246,     0,     0,     0,     0,     0,   249,
       0,     0,     0,   250,   251,   252,   253,  3854,     0,   254,
     255,   256,     0,     0,   257,     0,     0,     0,     0,   258,
       0,     0,     0,     0,   260,     0,   261,   262,     0,   263,
     264,  3855,     0,     0,   265,     0,     0,     0,   267,     0,
       0,   268,  3856,     0,   269,   270,     0,     0,     0,     0,
       0,   271,   272,     0,   273,     0,   274,     0,   275,   276,
       0,     0,     0,     0,  -317,     0,     0,     0,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,     0,   294,   295,   296,     0,
     297,   298,   299,   300,     0,   301,   302,     0,     0,     0,
       0,   303,   304,   305,   306,   307,   308,     0,     0,   309,
     310,     0,   311,     0,   312,     0,   313,   314,   315,   316,
     317,   318,   319,   320,   321,     0,     0,   322,   323,     0,
       0,   324,   325,   326,   327,     0,     0,     0,     0,   329,
       0,     0,     0,   330,     0,   331,   332,   333,     0,     0,
     334,  3857,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   338,   339,     0,     0,   341,     0,
     342,   343,   344,   345,   346,   347,   348,   349,   350,     0,
       0,     0,     0,   353,   354,     0,   355,     0,   356,   357,
     358,   359,   360,     0,   361,   362,   363,     0,     0,   364,
       0,     0,     0,   365,   366,   367,   368,   369,     0,     0,
     370,   371,   372,   373,   374,     0,   375,     0,     0,   377,
       0,   379,  -317,     0,   380,     0,     0,     0,   382,     0,
       0,   384,   385,   386,  3858,   387,     0,     0,     0,   389,
     390,   391,   392,   393,   394,   395,     0,   397,   398,     0,
     399,     0,     0,     0,     0,   401,   402,   403,     0,     0,
       0,     0,   405,     0,     0,     0,   406,     0,     0,   408,
       0,   410,     0,   411,     0,     0,   414,   415,     0,     0,
       0,     0,     0,     0,   416,   417,     0,   418,     0,     0,
     419,     0,     0,   420,     0,   422,     0,     0,     0,   424,
       0,   425,   426,   427,   428,   429,   430,     0,     0,   431,
     432,   433,   434,     0,   435,   436,     0,     0,   437,   438,
     439,   440,     0,     0,   441,   442,     0,   443,   444,   445,
     446,     0,     0,     0,     0,     0,   447,   448,     0,     0,
       0,     0,   450,   451,   452,     0,   453,   454,     0,   455,
     456,     0,     0,     0,     0,     0,   459,     0,     0,   460,
       0,     0,     0,   462,   463,     0,     0,     0,     0,     0,
       0,   464,     0,     0,   465,     0,     0,     0,   466,   467,
     468,   469,   470,     0,     0,  -317,     0,     0,     0,   471,
       0,     0,   473,     0,   475,     0,   136,   476,   137,   138,
     139,   140,   141,     0,     0,     0,     0,     0,   142,     0,
       0,     0,     0,   144,   145,   146,   147,   148,   149,     0,
       0,  -362,     0,     0,     0,   152,     0,     0,     0,   153,
       0,     0,   154,   155,   156,     0,   157,     0,     0,     0,
       0,     0,   160,  3851,     0,   161,   162,     0,   163,     0,
       0,     0,     0,   166,   167,   168,  3852,   170,   171,     0,
     172,   173,     0,   174,     0,   176,     0,   178,   179,   180,
     181,     0,   182,   183,     0,   184,   185,   186,     0,   188,
       0,   189,     0,     0,   190,     0,     0,   191,     0,   192,
       0,     0,   193,     0,     0,     0,   194,   195,   196,     0,
       0,   197,     0,     0,     0,     0,   198,     0,     0,     0,
       0,     0,   200,   201,     0,   202,     0,     0,     0,   203,
       0,   204,   205,   206,   207,   208,     0,     0,     0,     0,
       0,     0,   210,   211,   212,     0,     0,     0,   213,     0,
       0,   215,     0,   216,   217,   218,     0,     0,   219,   220,
       0,   221,   222,   223,   224,   225,     0,     0,     0,   227,
     228,   229,     0,     0,   230,   231,  3853,   232,   233,   234,
       0,     0,     0,     0,     0,     0,   236,     0,   237,     0,
     238,     0,   239,   240,   241,   242,     0,   243,     0,   244,
       0,     0,     0,     0,   246,     0,     0,     0,     0,     0,
     249,     0,     0,     0,   250,   251,   252,   253,  3854,     0,
     254,   255,   256,     0,     0,   257,     0,     0,     0,     0,
     258,     0,     0,     0,     0,   260,     0,   261,   262,     0,
     263,   264,  3855,     0,     0,   265,     0,     0,     0,   267,
       0,     0,   268,  3856,     0,   269,   270,     0,     0,     0,
       0,     0,   271,   272,     0,   273,     0,   274,     0,   275,
     276,     0,     0,     0,     0,  -317,     0,     0,     0,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,     0,   294,   295,   296,
       0,   297,   298,   299,   300,     0,   301,   302,     0,     0,
       0,     0,   303,   304,   305,   306,   307,   308,     0,     0,
     309,   310,     0,   311,     0,   312,     0,   313,   314,   315,
     316,   317,   318,   319,   320,   321,     0,     0,   322,   323,
       0,     0,   324,   325,   326,   327,     0,     0,     0,     0,
     329,     0,     0,     0,   330,     0,   331,   332,   333,     0,
       0,   334,  3857,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   338,   339,     0,     0,   341,
       0,   342,   343,   344,   345,   346,   347,   348,   349,   350,
       0,     0,     0,     0,   353,   354,     0,   355,     0,   356,
     357,   358,   359,   360,     0,   361,   362,   363,     0,     0,
     364,     0,     0,     0,   365,   366,   367,   368,   369,     0,
       0,   370,   371,   372,   373,   374,     0,   375,     0,     0,
     377,     0,   379,  -317,     0,   380,     0,     0,     0,   382,
       0,     0,   384,   385,   386,  3858,   387,     0,     0,     0,
     389,   390,   391,   392,   393,   394,   395,     0,   397,   398,
       0,   399,     0,     0,     0,     0,   401,   402,   403,     0,
       0,     0,     0,   405,     0,     0,     0,   406,     0,     0,
     408,     0,   410,     0,   411,     0,     0,   414,   415,     0,
       0,     0,     0,     0,     0,   416,   417,     0,   418,     0,
       0,   419,     0,     0,   420,     0,   422,     0,     0,     0,
     424,     0,   425,   426,   427,   428,   429,   430,     0,     0,
     431,   432,   433,   434,     0,   435,   436,     0,     0,   437,
     438,   439,   440,     0,     0,   441,   442,     0,   443,   444,
     445,   446,     0,     0,     0,     0,     0,   447,   448,     0,
       0,     0,     0,   450,   451,   452,     0,   453,   454,     0,
     455,   456,     0,     0,     0,     0,     0,   459,     0,     0,
    4167,     0,     0,     0,   462,   463,     0,     0,     0,     0,
       0,     0,   464,     0,     0,   465,     0,     0,     0,   466,
     467,   468,   469,   470,     0,     0,  -317,     0,     0,     0,
     471,     0,     0,   473,     0,   475,     0,   136,   476,   137,
     138,   139,   140,   141,     0,     0,     0,     0,     0,   142,
       0,     0,     0,     0,   144,   145,   146,   147,   148,   149,
       0,     0,     0,     0,     0,     0,   152,     0,     0,     0,
     153,     0,     0,   154,   155,   156,     0,   157,     0,     0,
       0,     0,     0,   160,     0,     0,   161,   162,     0,   163,
       0,     0,     0,     0,   166,   167,   168,     0,   170,   171,
       0,   172,   173,     0,   174,     0,   176,     0,   178,   179,
     180,   181,     0,   182,   183,     0,   184,   185,   186,     0,
     188,     0,   189,     0,     0,   190,     0,     0,   191,     0,
     192,     0,     0,   193,     0,     0,     0,   194,   195,   196,
       0,     0,   197,     0,     0,     0,     0,   198,     0,     0,
       0,     0,     0,   200,   201,     0,   202,     0,     0,     0,
     203,     0,   204,   205,   206,   207,   208,     0,     0,     0,
       0,     0,     0,   210,   211,   212,     0,     0,     0,   213,
       0,     0,   215,     0,   216,   217,   218,     0,     0,   219,
     220,     0,   221,   222,   223,   224,   225,     0,     0,     0,
     227,   228,   229,     0,     0,   230,   231,     0,   232,   233,
     234,     0,     0,     0,     0,     0,     0,   236,     0,   237,
       0,   238,     0,   239,   240,   241,   242,     0,   243,     0,
     244,     0,     0,     0,     0,   246,     0,     0,     0,     0,
       0,   249,     0,     0,     0,   250,   251,   252,   253,     0,
       0,   254,   255,   256,     0,     0,   257,     0,     0,     0,
       0,   258,     0,     0,     0,     0,   260,     0,   261,   262,
       0,   263,   264,     0,     0,     0,   265,     0,     0,     0,
     267,     0,     0,   268,     0,     0,   269,   270,     0,     0,
       0,     0,     0,   271,   272,     0,   273,     0,   274,     0,
     275,   276,     0,     0,     0,     0,     0,     0,     0,     0,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,     0,   294,   295,
     296,     0,   297,   298,   299,   300,     0,   301,   302,     0,
       0,     0,     0,   303,   304,   305,   306,   307,   308,     0,
       0,   309,   310,     0,   311,     0,   312,     0,   313,   314,
     315,   316,   317,   318,   319,   320,   321,     0,     0,   322,
     323,     0,     0,   324,   325,   326,   327,     0,     0,     0,
       0,   329,     0,     0,     0,   330,     0,   331,   332,   333,
       0,     0,   334,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   338,   339,     0,     0,
     341,     0,   342,   343,   344,   345,   346,   347,   348,   349,
     350,     0,     0,     0,     0,   353,   354,     0,   355,     0,
     356,   357,   358,   359,   360,     0,   361,   362,   363,     0,
       0,   364,     0,     0,     0,   365,   366,   367,   368,   369,
       0,     0,   370,   371,   372,   373,   374,     0,   375,     0,
       0,   377,     0,   379,     0,     0,   380,     0,     0,     0,
     382,     0,     0,   384,   385,   386,     0,   387,     0,     0,
       0,   389,   390,   391,   392,   393,   394,   395,     0,   397,
     398,     0,   399,     0,     0,     0,     0,   401,   402,   403,
       0,     0,     0,     0,   405,     0,     0,     0,   406,     0,
       0,   408,     0,   410,     0,   411,     0,     0,   414,   415,
       0,     0,     0,     0,     0,     0,   416,   417,     0,   418,
       0,     0,   419,     0,     0,   420,     0,   422,     0,     0,
       0,   424,     0,   425,   426,   427,   428,   429,   430,     0,
       0,   431,   432,   433,   434,     0,   435,   436,     0,     0,
     437,   438,   439,   440,     0,     0,   441,   442,     0,   443,
     444,   445,   446,     0,     0,     0,     0,     0,   447,   448,
       0,     0,     0,     0,   450,   451,   452,     0,   453,   454,
       0,   455,   456,     0,     0,     0,     0,     0,   459,     0,
       0,   460,     0,     0,     0,   462,   463,     0,     0,     0,
       0,     0,     0,   464,     0,     0,   465,     0,     0,     0,
     466,   467,   468,   469,   470,     0,     0,     0,     0,     0,
       0,   471,     0,     0,   473,     0,   475,     0,     0,   476
};

static const yytype_int16 yycheck[] =
{
       6,   634,   635,   564,   950,   584,   625,   564,   951,    20,
     869,   507,  1791,    19,   122,  1644,  1131,    23,  1038,    30,
    1446,  1343,  1512,   691,  1078,    36,    32,     6,  1227,  1756,
    1267,  1131,   895,    39,  2013,   598,    42,   917,  1032,  1033,
      46,  1948,  2440,  2323,  2324,  2325,  1444,    53,   652,  2251,
    1227,  2370,  1427,  1427,   917,   893,  1431,  1431,  1433,  1433,
    1154,  1101,  2295,  1404,  2078,  2334,  2335,  1161,  2727,  2083,
    3182,  2784,  1069,  2551,  1435,  1273,  1915,   621,   622,  2358,
     918,  1354,  2173,  1918,  1847,  1915,  1917,  1922,    94,  1717,
    1778,   639,  1427,  2038,  2435,  2351,  2038,  2917,  1933,  1372,
    3187,   955,  2342,  2359,  2441,   955,  2216,  1380,  1381,  1944,
     116,  2313,   118,  2585,  3405,   121,   122,   123,  1493,  1493,
    2579,    33,  1162,  1163,  2583,     4,  1166,  1167,  1168,  1169,
    1417,  1171,  1172,  1173,  1174,  1175,  1176,  1177,  1178,   118,
     759,  2972,   121,   747,   748,   749,  3053,     9,  3245,  3246,
      23,  1971,  3249,    24,    70,    16,   760,    59,  1493,    18,
      18,    15,    16,  1870,  1871,    46,  2414,    29,    73,  3205,
     919,  3268,   931,    35,  1898,    74,   145,  3274,    29,  1789,
    1887,    19,    57,  1889,    64,    16,   120,    50,   169,  2720,
    2644,    20,    77,  2232,  1200,    15,    16,  1904,  1905,  2038,
     125,    58,    59,  3468,    33,  1907,    15,    16,  2038,    18,
     128,    18,  2582,  1920,  1921,  2835,  1923,   151,    47,  1926,
    1927,    94,   139,  1930,   169,   153,   789,    20,  1935,    58,
      59,    65,  2553,  1940,  1941,  1942,  1943,    55,  2027,   209,
    1947,   106,  1949,  3458,   356,   218,    71,   307,  1955,  2399,
    2400,  1958,   349,  1960,   120,   155,   104,    61,    15,    16,
     352,   380,    68,   379,  2303,    58,    59,    81,  2061,   131,
    3455,  1995,  1996,   120,    57,   361,   367,  2001,  2002,  3514,
     435,    79,  2167,    51,   847,   151,  2010,  2011,   126,  3401,
     151,  2015,   151,    61,   169,    68,   155,   155,   173,    35,
     260,   199,   627,   228,   151,    15,    16,    73,    20,   184,
    1861,   427,   443,     8,  3828,  2022,  2023,  2024,  2025,    15,
      16,    33,   125,    15,    16,  2565,   832,  2567,   151,    15,
      16,    61,   258,    15,    16,    47,   122,    10,   296,   244,
      73,    12,   498,    24,   242,   480,    58,    59,   155,    67,
      15,    16,    41,   224,   160,    19,    67,   222,   183,    19,
      15,    16,   348,   505,    62,   145,    15,    16,   410,  2519,
    2520,    15,    16,   203,   424,   533,    35,  1010,  1011,  1012,
      20,   145,   151,   346,   492,   564,   169,   162,   618,   431,
     173,  3638,   596,    33,   533,   218,   626,   222,    12,  3496,
    1068,   184,   158,  2357,   296,    15,    16,    47,  3505,    12,
     222,   546,   509,  1081,   189,   245,   620,   275,    58,    59,
     245,   349,   530,   465,    40,   406,  2527,  3674,   934,  3526,
     393,  2403,   303,  2160,  3531,   979,   311,  2161,    41,   425,
     619,   367,   584,   132,    15,    16,   255,   405,   234,  1392,
     500,  3965,  2417,   183,    15,    16,    15,    16,  3643,   784,
     433,   406,   126,  3754,   135,   620,   126,   625,   107,   367,
     206,   110,   153,    15,    16,   332,   186,   275,   244,    15,
      16,   637,   177,  2763,  3571,    88,   492,  3722,   494,   258,
      93,   451,   589,    15,    16,   626,   264,  2737,  2738,   618,
      15,    16,    15,    16,   620,   511,    50,  1933,   620,   515,
    1348,   244,  2791,  1351,  1889,  1889,  2309,  3629,  1356,  2799,
     526,   135,   480,   257,   530,   382,   532,   619,   311,   620,
     348,   406,  1907,  1907,  2853,   505,    15,    16,  1157,   545,
     626,  1404,   240,   224,  1382,  1383,   366,   206,  2455,   369,
     634,   635,   410,   470,  1889,  1051,  1052,   366,   618,  1227,
     369,  1165,   368,  1417,  2403,   571,    24,  1417,  1841,  3834,
     395,   471,   457,  2403,  3194,  1071,   410,   440,  1182,  1778,
    1915,   509,  2527,   589,  1080,  2527,  2834,  3118,  3675,  2837,
    2838,   405,   598,   574,   600,   368,  1092,  1093,  1094,  2419,
     480,  1778,  1963,  2423,  1100,   611,   612,   445,  2856,   366,
     433,   617,   369,   619,   418,   621,   622,  2437,  2438,  3450,
     626,   627,   303,   406,   593,   631,    15,    16,  2448,  1378,
      15,    16,  1672,   612,   237,   641,   642,   643,  1492,   620,
    2364,   647,  1492,  1683,  2965,   570,  1686,  2686,  2687,  2688,
      15,    16,  2027,  2027,  2474,  3109,   366,   556,   520,   369,
    3373,   589,  1206,  2038,  2038,   395,    15,    16,   349,  1666,
     366,    15,    16,   369,   366,   620,  2382,   369,   786,   541,
     366,   583,  1245,   369,   366,   691,   548,   369,  2527,  1695,
     624,   596,  2027,   544,  2733,  2734,  2735,  2527,  2422,  2401,
    2424,   366,   618,  2038,   369,  2315,   618,  2431,  3999,   312,
     572,   366,  3799,   544,   369,   596,  3752,   366,   636,  1478,
     369,  2445,   366,  2430,   397,   369,  1270,  2451,  2961,  2549,
    3184,  2971,  2521,   562,  2021,   596,  2443,   544,   611,   604,
     588,  1285,  2466,   601,   617,   620,   752,  1310,   754,   620,
    2860,   605,    15,    16,  3661,  3970,   366,   620,   624,   369,
    2645,  3233,  3947,   624,  2488,   624,   224,   570,   625,   562,
    3229,  2564,   375,   611,   780,   781,   782,   624,   784,   785,
     786,   445,   788,   789,  1332,   605,   894,   505,   794,  1352,
    2940,  2518,  3264,  3265,   505,   366,   605,   533,   369,  2350,
     140,   624,   781,   623,  3263,   366,   785,   366,   369,   788,
     369,   620,  3271,   593,  3645,  4106,   514,  3904,  2525,  3278,
     553,   827,    15,    16,   366,   594,   499,   369,   509,   593,
     366,   837,  3112,   369,   590,   565,    15,    16,  2792,  2793,
    2941,   847,   848,   576,   366,   303,   852,   369,   605,    70,
     562,   366,  2824,   366,   369,   624,   369,  3227,  3228,  2257,
     594,    11,   619,   620,  1421,  3235,  3203,  2832,  3238,  3239,
     582,   583,  2362,  3153,   533,   548,   599,  3974,  3219,  3976,
     576,   497,  3115,   275,   487,  3255,   117,   366,   894,  2668,
     369,   349,    45,  3172,   978,   605,   440,  3176,   537,  3269,
     189,   540,   518,    33,  3274,  3275,  3276,  3277,   589,   605,
     620,    15,    16,   605,   313,   588,  3172,  2911,   521,   605,
    3176,  1589,   562,   605,   620,   931,  2705,  3129,   620,  3749,
     546,   793,   151,   619,   620,    15,    16,   619,   620,   620,
     605,  3181,   141,  3191,  1028,   951,   586,    15,    16,   117,
     605,    42,  4039,  1501,   619,   620,   605,  1837,    15,    16,
     120,   605,   841,   242,   837,   620,   177,   123,   415,   172,
     619,   620,   122,   979,  1837,   848,   620,   366,   618,   852,
     369,   366,    98,   187,   369,  2824,  1866,    15,    16,   242,
    2416,  2417,  1830,   169,  2824,   605,  2941,  3887,  4110,  2941,
     253,   366,  1840,  1866,   369,  1843,  1844,  2382,  2382,   619,
     620,   179,  2334,  2335,    15,    16,  2779,   366,   410,   382,
     369,  3670,   366,   218,  1030,   369,  2401,  2401,  1034,   385,
     153,    15,    16,   117,   605,   258,  1144,   248,   206,   258,
     274,   272,  2730,  2063,   605,   134,   605,  2382,   619,   620,
     203,   509,  2680,    15,    16,   162,   155,  1690,   619,   620,
     619,  2896,  1068,   605,  2895,    15,    16,  2107,  2403,   605,
    2343,    15,    16,  1181,   667,  1081,  3167,   189,   620,  2277,
     275,  1685,   189,   605,   620,   184,  3125,   226,   182,  3567,
     605,    62,   605,  2187,   125,   179,   235,   118,   620,   345,
     346,   224,  2941,   366,   272,   620,   369,   620,   397,  2470,
    1778,  2941,   559,    15,    16,  4003,   364,  4007,  1751,   275,
    1228,   352,   462,  2850,   218,  1131,   605,   258,    15,    16,
     136,   589,   531,   182,   462,  1698,   456,   348,  1144,  2193,
    2194,   620,   345,   346,   367,   738,  2521,  2521,   351,    15,
      16,  3431,  2527,  2527,   138,  2784,  1700,  1030,   557,    15,
      16,  1034,   441,  3442,  3443,   117,   296,  2021,  1276,   218,
     533,  2021,   371,   366,   378,  1181,   369,  3044,   399,    73,
    1186,  3048,    12,   184,   352,  1191,  2521,   366,   272,  2186,
     369,   351,  2527,    87,   447,  2295,  3738,   228,   432,  2196,
    1206,  1764,  1765,    15,    16,    15,    16,    15,    16,   601,
     462,   406,   233,  3855,  3856,  3122,   605,  3211,   480,   369,
     605,  1227,  1228,   312,   186,  2265,   349,    15,    16,    22,
     406,   620,   269,   372,    31,   620,   367,  3896,   527,  1245,
     605,  1798,  3955,   612,   335,  2360,   527,    15,    16,  3973,
     619,  1257,   148,  1259,   619,  1261,   605,    24,   335,  2600,
    2360,   605,   366,   159,  1270,   369,    15,    16,   352,   240,
    1276,   620,    15,    16,  4386,   479,   620,   125,   618,  1285,
    1286,   358,   622,    15,    16,   397,   366,    15,    16,   369,
     618,    15,    16,   330,   622,    15,    16,  2695,   366,    15,
      16,   369,   455,   524,  1310,   135,  3575,  1313,  3957,   366,
    3959,  3038,   369,  3855,  3856,  1321,  1424,  3044,  1191,   325,
     272,  3048,  3336,   491,   555,  3049,   547,  1333,  1334,  1335,
    1336,  1337,  1338,    24,   770,  2450,  3569,  1343,   366,    15,
      16,   369,   605,  1349,  1350,  4233,  1352,   550,   462,  1355,
    2450,    15,    16,   247,  1333,  1334,  1335,   620,  1337,    15,
      16,   595,   196,   566,   957,   366,   618,   385,   369,  1375,
     163,  1350,   471,   344,   357,   594,  1355,   207,   184,   462,
     228,  3201,   366,  1262,     0,   369,   509,   555,  1261,   462,
      50,   412,    15,    16,    15,    16,    15,    16,   574,   382,
     352,   186,   433,  3223,   366,   624,  2832,   369,   155,   264,
    4300,    12,   605,  1286,   259,   527,   366,   262,  1424,   369,
      15,    16,   366,   392,   860,   369,   605,   620,   226,   323,
     264,   462,  1438,   564,   576,  1441,  1442,   235,   235,   397,
     214,   620,   216,   122,   196,    15,    16,   232,    18,  1328,
    3992,  3993,    15,    16,   348,   462,   153,   224,   151,   136,
     257,   267,   153,  1336,   366,  1338,   589,   369,   505,   365,
    2896,   555,  1478,    24,    15,    16,   203,   619,   620,   366,
     619,   575,   369,  3802,    15,    16,  4210,  4211,   123,  2824,
     511,  1497,   155,  1499,  1500,   350,  1502,  1503,   462,   576,
     366,   605,  1375,   369,   618,  4114,    15,    16,  4117,  1515,
     366,  1517,   264,   369,   408,   462,   620,     8,   245,   199,
    1499,  1500,    73,  3756,    12,   605,   575,   224,  4170,  4171,
     501,  2730,  4074,   224,   135,   618,   303,   605,    29,   570,
     620,   499,   186,   514,   576,   618,  2566,  4089,   605,   478,
     533,  1430,   620,  2730,   366,   234,   366,   369,   366,   369,
    4102,   369,   407,   620,  2801,  1438,  2941,  2941,    12,  1442,
    2664,  3585,   207,  3297,   372,   353,    73,   605,   366,    15,
      16,   369,   367,  1589,  1590,   433,  2190,   618,   620,  2085,
     548,    12,   620,  1701,   626,   527,    15,    16,   366,  3801,
    2715,   369,  2098,   555,   605,   499,  2941,   613,   614,   615,
     616,   618,   303,   186,   462,  2715,  4158,   366,   619,   170,
     369,   605,   419,   366,   967,   968,   369,  4236,  4170,  4171,
     588,   602,   224,   467,   366,  2131,   532,   369,   366,   568,
     275,   369,   366,   605,  1650,   369,   366,   135,   325,   369,
     366,   172,   349,   369,   618,   605,   153,   619,   349,   502,
     462,   605,  1005,   493,   494,   495,   496,   497,   498,   619,
     536,   618,   132,   224,  4216,   619,   454,    15,    16,   608,
     510,   553,  3321,  3322,  4226,   258,  1692,   147,   348,   532,
     366,   135,  1698,   369,  1700,  1701,   533,  3095,   342,   162,
      15,    16,   366,   605,   576,   369,  1712,  2203,  3687,  3688,
     366,  1717,   122,   369,   135,   467,  1722,   619,   605,  1725,
      30,  4263,   570,  4265,  2714,  1731,  1732,   224,  1734,   626,
    3457,   136,   619,  4275,  4132,    15,    16,   186,  1744,   605,
    4020,   544,  1748,   366,  3373,   366,   369,   366,   369,   605,
     369,  4293,   303,  4295,    16,  4297,   533,   349,  1764,  1765,
    1766,  1767,  4304,   619,    33,    75,    15,    16,   533,   217,
     618,   366,  1778,  4315,   369,  1781,  1782,  1783,   580,   581,
     440,   618,   199,    15,    16,  3692,   235,   117,  4330,  4331,
      59,  1797,   343,   605,   527,   605,   366,   605,   349,   369,
    1806,    15,    16,   366,  4346,  4347,   369,   619,   530,  4351,
     470,   619,   509,  2803,    15,    16,   618,   605,   509,     6,
    3529,    15,    16,  3532,  3463,   366,   117,   222,   369,   120,
     351,   619,   618,    15,    16,   366,  1842,   605,   369,   149,
     626,   618,   597,   598,    80,   494,   343,  1853,   235,   179,
     245,   619,   349,   618,  1860,   222,   605,   366,  1731,  1732,
     369,  1734,   605,  2330,   100,   620,   515,   254,  2727,    56,
     619,  1744,  2429,   605,   222,  1748,   619,   605,  3587,    16,
     222,   605,   217,  1762,  3608,   605,   199,   619,   179,   605,
    2770,   619,   589,  1766,  1767,   619,  2776,   612,   589,   619,
      12,    15,    16,   619,   619,    15,    16,  2770,  1781,  1782,
    1783,   524,   117,  2776,   527,   206,   361,   509,   576,   416,
     325,  2975,  1801,   620,    15,    16,    15,    16,  2036,   605,
     366,  3168,  2040,   369,   611,   612,   613,   614,   615,   616,
    2778,   605,   272,   619,   130,  2999,  3000,   366,   232,   605,
     369,  1957,   139,  3235,  2421,   619,  3238,  3239,   509,    46,
      15,    16,   620,   619,    95,  1971,  3020,   149,   626,  1842,
    2078,    39,   581,  3255,   179,  2083,    15,    16,    46,  2446,
    2447,   272,   605,   186,   605,   583,   605,  1860,   586,    15,
      16,    15,    16,    15,    16,  1874,   619,   589,   619,   136,
     619,    15,    16,   470,  1883,  1884,    15,    16,  1246,   125,
     605,  1249,   509,   596,  1252,  1894,  1895,  1896,  1897,  3119,
    1899,  1900,   352,   135,   619,    16,   619,   620,   366,   550,
    2036,   369,   619,   620,  2040,   605,  2042,  2670,   589,  2045,
    3679,  3680,   605,  3682,  3683,   566,  2052,  2053,  2054,  2055,
     524,   366,  2058,   527,   369,   275,   619,  3781,  3782,  3783,
    3784,   352,  2730,   560,   605,  3180,  2045,   272,   473,   474,
     619,  2179,  2078,   626,   605,   571,   450,  2083,   619,   624,
    3180,   363,   392,   499,    18,   618,   366,     6,   619,   369,
     183,  1732,   589,  1734,   225,   207,   605,   433,  3213,   573,
      11,  4381,   618,  2211,   414,   618,    58,    59,   619,   620,
     619,   242,   228,  3213,   618,  1994,    68,   366,  1997,  1998,
     369,  2000,   253,   620,  2003,  2004,  2005,  2006,  2007,  2008,
    2009,   186,   618,  2012,   366,  2014,   618,   369,   448,   618,
    1781,  1782,  1783,   619,   620,   136,   618,   352,  3927,  2712,
     618,   525,   366,   618,   704,   369,   530,   619,   620,   346,
     186,    95,   618,  2659,   186,   366,   619,   620,   369,   605,
      15,    16,   366,  2179,   620,   369,   726,   618,   103,  2052,
    2053,  2054,   533,   619,   366,   618,   605,   369,   325,   739,
     740,  3898,   619,   620,   504,   619,   620,  2760,  2204,   573,
     619,  3928,  3196,  3197,   335,  2211,   611,   612,   613,   614,
     615,   616,   117,   626,   588,   618,  2324,   151,  2326,  2327,
     618,   155,   409,   166,   411,   555,  2232,  3934,    33,  3283,
    3937,  3938,  3939,  3940,   618,   509,   510,   619,   620,   513,
     514,   619,   620,   517,   396,   519,    24,   618,   182,   618,
     184,   576,   366,  3575,    59,   369,   366,   618,  2264,   369,
     618,  2369,  2370,  3993,   555,   199,   618,   605,  3467,   618,
     204,   618,  2278,   618,   179,   366,   103,   366,   369,  2467,
     369,   619,   358,   208,   218,  3400,   618,  4011,   450,  2295,
     605,   225,   618,  2299,   618,    73,   618,  2303,   232,   618,
    3400,   206,   107,  3323,   619,   110,  4033,   618,   242,   214,
    2316,   366,  2318,   118,   369,  3514,   447,   433,  2324,   253,
    2326,  2327,  4029,  4030,   258,   605,  3955,   366,  2334,  2335,
     369,  4038,  2440,   267,   325,   162,   473,   474,   358,   619,
     366,   618,   366,   369,   366,   369,   462,   369,   619,   620,
     555,   618,   366,    18,  2360,   369,   605,   366,    24,   618,
     369,   618,   189,  2369,  2370,    58,    59,   272,   619,   620,
     619,   577,   578,   605,   580,   153,   582,   618,    11,   510,
     618,   493,   494,   618,   496,   618,   498,   619,   619,   620,
     618,   605,   170,  3819,  3820,   618,   281,   282,   510,  2410,
     618,   335,  3345,  2409,   605,   619,   618,    73,  2414,  2420,
     618,   605,   358,  2419,   618,  2426,   618,  2423,   619,  2425,
     619,   620,   618,   605,   358,   619,   618,    73,  4158,  2435,
      95,  2437,  2438,   367,  2440,  2441,  3926,  2316,  2449,   619,
     620,   618,  2448,  2454,  2450,   618,   224,   352,   373,  2460,
    2461,   619,   620,  2459,   570,   619,   620,   382,   618,  3762,
    3763,  2467,   618,   397,   389,   619,   620,   618,  2474,  2475,
     103,   618,   609,   610,   611,   612,   613,   614,   615,   616,
    2486,   364,   473,   474,   619,   620,   151,   153,   618,   122,
     155,   605,   623,   618,    31,   605,    73,   619,   620,   619,
     620,   618,   618,   618,   170,   619,   524,   153,    76,   619,
      78,   618,  3008,   447,   605,   115,   605,   791,   618,   184,
     619,   620,   536,   619,   620,   303,   618,   536,   619,   218,
     619,  4310,   337,  4263,   199,  4265,   470,   422,   423,   204,
     618,  3145,  2548,  2549,   618,  1044,  1045,  1046,  2427,  2428,
     605,   618,   120,   619,   620,   618,   189,  1056,   224,   484,
     225,   619,   620,  4293,  3060,   343,   605,   232,   619,   620,
     397,   349,   619,   620,  2453,   143,   510,   242,   224,   605,
     619,   605,   618,   605,   136,   218,  2459,  1086,   253,   618,
    1089,   605,   620,   258,   485,   619,   605,   145,   146,   136,
    4330,  4331,   267,   619,   620,  3908,   619,   620,  4387,  3912,
     178,  1110,  1111,   213,   618,  1114,   618,    61,   609,   610,
     611,   612,   613,   614,   615,   616,   618,    71,    95,   618,
     564,   619,   620,  1132,  1133,   268,   618,   303,  2517,    83,
      48,   575,   576,   269,    71,   117,    48,   224,   573,   620,
     555,   358,  2840,   619,   620,   619,   620,   358,  3490,  3491,
     594,   456,   596,   136,  3967,  3968,   619,   620,   117,    95,
     335,  3503,  3305,   478,  2680,  2548,  2682,   343,  3510,  2685,
    2686,  2687,  2688,   349,  2872,   619,   620,   564,  2694,   623,
     624,   613,  2880,   358,   470,    61,  2884,   343,   235,   161,
     527,  3533,   367,   349,  3536,    71,  2712,   179,   618,  2715,
     619,   620,   619,   620,   258,   315,   184,    83,   505,   319,
     257,   548,   619,   620,  2730,   524,   326,  2733,  2734,  2735,
     179,   509,   397,   161,   206,   540,  2924,   619,   620,   183,
    2746,   619,   620,   505,   188,  2853,  2752,   269,  2754,   152,
    3790,   619,   620,    82,  2760,   620,   183,   206,   225,    25,
      26,   588,   235,   568,   397,  3708,   343,   197,   619,   620,
     416,  3714,   349,   325,   360,   242,  3333,   520,   222,   619,
     620,   619,   447,   619,   620,   120,   253,   151,   325,   462,
     619,   620,    58,    59,    60,   222,   106,   470,     6,   225,
     272,   245,    68,   625,   404,   470,   618,    73,   345,   346,
    3925,   589,   619,   620,   105,    81,   242,   183,   245,  3609,
    3610,  2694,   188,   272,     4,  3925,   461,   253,  2834,  1118,
    1119,  2837,  2838,   588,  2840,   468,  4031,  4032,   235,   416,
     106,   620,   620,   509,    35,   510,   379,  2853,    55,   417,
    2856,   425,   325,    35,   120,   166,   222,   106,   124,   215,
     460,   620,    33,   509,  3131,  3132,  2872,  2746,   335,   620,
     300,   301,  3088,  3089,  2880,   305,   306,   626,  2884,   245,
     352,    68,   419,  3382,  3383,    12,   619,   153,   593,   619,
     135,   358,   525,     9,   527,   620,   619,   626,  2904,   564,
     619,  2907,   619,   352,   626,   618,  2912,   580,   581,   335,
     257,   576,  2918,   153,   560,   626,  2922,   620,  2924,   110,
     620,   473,   474,   589,   269,   269,   117,   625,   110,   594,
     269,   596,   509,  2939,    48,   117,   473,   474,   269,  2918,
     620,   269,   269,   589,   620,   618,  2952,   618,   524,   486,
     155,   395,   379,  2959,   619,   620,   222,   128,   623,   624,
     264,   620,   380,   229,  2970,   620,   544,   620,   395,   544,
     379,    25,    26,    12,   155,  2854,   620,   620,   244,   620,
     447,   172,   153,   560,  2863,   235,   157,   522,   179,   620,
     172,   591,    25,   613,  4109,   236,   174,   179,   184,  3632,
     473,   474,   620,   569,    58,    59,    60,   607,   620,  4109,
     383,   131,   589,   379,    68,   206,   358,    73,   483,    73,
     191,   447,   620,  1522,   206,   619,  3134,    81,   620,   395,
     155,   155,  3975,   155,  2907,    68,   302,  3896,   209,   620,
      73,   571,  3150,   510,   488,   155,   155,   155,  3054,   155,
     106,   155,   106,   155,   320,   155,  3062,   609,   610,   611,
     612,   613,   614,   615,   616,  2944,   120,    13,   155,   155,
     124,   155,   609,   610,   611,   612,   613,   614,   615,   616,
     155,   272,   155,   555,   510,   155,  2959,   120,   155,  3646,
     272,   103,  1591,   155,   155,  3101,  1595,   153,   269,   153,
     155,   600,   155,   155,   155,   575,   555,   189,   374,   620,
     358,   358,   136,  3119,  3120,   358,   382,  3123,   186,  3125,
    1619,   565,   488,   619,   619,   619,   619,   619,  3134,   613,
     136,   619,   619,   619,  3140,   620,   609,   610,   611,   612,
     613,   614,   615,   616,  3150,   336,  4186,   618,    94,   186,
     162,   612,  3158,   619,   336,   619,   347,   620,   564,   619,
     351,   352,  3741,   619,   619,   619,   222,    73,   222,   351,
     352,   471,   620,   619,  3180,   229,   619,   189,   618,   125,
     618,    87,   616,  3062,   619,  3191,   452,   155,   620,   618,
     244,   544,   533,   139,   594,  3201,   533,  3203,   223,   565,
     533,   618,   516,   257,   618,   618,   197,  3213,   186,   177,
     222,   235,   245,  3219,   626,  3221,   162,  3223,   619,   165,
     186,   405,   190,   129,   470,   396,   620,   620,  3336,   184,
     176,    46,   333,   201,   405,  3796,   499,   499,   103,  4279,
     499,   499,   507,   509,   499,  4360,   302,   461,   302,   420,
      71,   197,   544,   379,  4197,  4198,   268,  4200,  4373,   525,
    4360,   379,   528,  4378,   320,   131,   320,   438,  4383,   243,
     535,   525,   379,  4373,   243,   131,   222,    46,  4378,   428,
     248,   249,   228,  4383,   379,  3164,   525,   343,   379,  3295,
     379,   381,   155,   156,   379,   618,   379,   618,   564,   379,
     618,   325,   576,   268,  4247,   149,  4249,  4250,   276,  3417,
     481,   626,   345,   346,  3320,  3321,  3322,   619,   351,   325,
     374,   267,   619,   188,   231,   358,   231,   190,   382,   619,
    3336,   626,   619,   619,   505,   619,   619,   626,   201,   619,
     619,   247,   533,   620,   626,   626,   537,    15,    16,   540,
     155,   533,   620,   524,   620,   537,   527,   222,   540,   550,
     533,   544,   395,   620,   555,   626,   626,   558,   550,   544,
     544,   601,  4005,   555,   342,   238,   558,   264,   544,    46,
     392,  3942,   618,  4326,  4003,   397,   249,   652,   155,   618,
    3396,   618,   657,   364,  3400,    33,  4342,   186,   452,   186,
     186,   232,   186,   268,  3512,   626,   239,   626,   352,  3288,
     620,  3417,   573,   276,   242,   242,   370,   323,   316,   106,
     611,   612,   687,   106,   626,   245,   394,   245,   618,   611,
     612,   544,  3311,   466,   363,   199,   533,    18,   703,   345,
     346,   618,   348,   111,   112,   113,   114,   115,   443,   473,
     474,   618,   398,   509,   379,   509,   468,  3463,   626,   613,
     618,   618,   618,  3474,   619,   233,  3472,   473,   474,   525,
     233,   525,   418,   619,   528,  3481,   339,  3585,   619,   619,
     426,   618,   747,   748,   749,   750,   620,   620,   434,   619,
     128,   626,   218,   596,   358,   760,   619,   259,   619,   379,
     619,   613,   408,   618,   186,   570,  3512,   235,   619,   626,
     564,   255,    68,   525,   619,   153,   462,   242,   530,   157,
     155,   620,   620,   619,   382,   242,   358,   620,   620,   475,
     476,  3537,   565,   245,   245,   358,   548,   618,  3544,   596,
    3648,    95,   210,   211,   212,   213,   620,   618,   620,   358,
     619,   393,    73,   191,  4111,  3434,  3562,    18,   358,   619,
     618,   573,    12,    13,   618,   358,   485,   462,   367,  3575,
     620,   209,   619,   519,   618,   618,   588,   618,   352,  3585,
     464,   619,   596,   619,   619,   609,   610,   611,   612,   613,
     614,   615,   616,   499,   255,   445,   410,   197,   142,  3472,
     251,   619,   548,   468,   610,   611,   612,   613,   614,   615,
     616,  4244,   620,   199,  4233,   472,   618,   618,   155,   121,
     242,   242,   620,   488,   570,   618,   572,   120,  3634,   120,
     527,   269,   618,   391,  3513,   618,   626,    77,   138,   480,
     619,   457,  3648,   619,    94,   485,   619,   315,   620,   317,
     318,   319,   619,    18,   258,   619,   619,   619,   326,   619,
     525,    33,   527,    33,  3670,   530,   619,   619,   619,   619,
     322,   225,  3551,  3679,  3680,   125,  3682,  3683,   247,  4312,
    4241,   405,   619,   267,   620,   364,   596,   232,   242,   139,
     618,   618,   626,   619,  3802,    46,   620,   204,   366,   253,
     565,   369,   620,   322,   410,   576,   155,   533,   573,   533,
     384,   619,   162,   586,   576,   165,  4335,   618,   618,   618,
     985,   299,   618,   570,   618,   618,   176,   586,   618,   120,
      54,   245,   245,   351,    33,   352,   404,   619,   352,    63,
     618,  3747,  3748,  4362,   620,   322,   168,   197,    72,   619,
     533,  4384,   533,  3759,   533,   245,   527,   155,   396,   619,
      84,    85,    86,   580,   619,   576,   576,   405,   232,   358,
     503,   347,   222,   581,   620,  1040,  1041,   101,   228,  3658,
     443,   335,   420,  3789,  1049,  1050,  1051,  1052,  1053,  1054,
    1055,   459,   460,   596,   352,   570,  3802,   619,  1063,  1064,
     438,  1066,  1067,   364,   358,   515,  1071,   619,   150,  1074,
    1075,  1076,  1077,   593,  1079,  1080,   618,   267,    30,   535,
     618,   618,  1087,  1088,   619,  1090,  1091,  1092,  1093,  1094,
     184,  3837,  1097,  1098,  1099,  1100,  1101,  1102,  1103,  1104,
    1105,  1106,  1107,   481,  1109,   627,  3852,  1112,  1113,   619,
     377,  3857,  1117,   619,   131,   131,  1121,  1122,  1123,   618,
     153,   397,    70,   184,   593,   418,   186,   505,    30,  1134,
    1135,  1136,    61,    61,   620,  3748,   364,   619,  1143,   618,
     516,   260,     5,   358,   358,  1150,  1151,  1152,   232,  1154,
     149,   364,   624,   447,   364,   129,  1161,  1162,  1163,   138,
    1165,  1166,  1167,  1168,  1169,   618,  1171,  1172,  1173,  1174,
    1175,  1176,  1177,  1178,    46,    46,  3789,  1182,  1183,  3925,
     148,    46,    46,   591,    46,  3931,  4034,   618,   618,   570,
    3809,   125,   149,   593,   217,   274,   624,   605,   606,   607,
     119,   627,   144,   618,    46,    46,    46,    52,   398,   453,
     451,  3957,   402,  3959,    32,    33,   510,   619,   624,   149,
      38,   620,    40,   619,    42,    43,   536,   620,   418,   535,
     202,   620,   215,   619,   624,   619,   426,   620,    52,  3985,
     432,    59,    46,   184,   434,   184,   184,   536,   595,   218,
     314,   120,   352,  4074,   618,   620,  2218,  2016,   185,   470,
    3297,  2398,  3862,  3298,   635,  3560,  3889,   331,  4089,  4006,
    4177,  3558,   462,  4178,  3562,   964,  4362,  3746,  3897,  4323,
      46,  4102,   565,  1777,  4132,   475,   476,  1722,  4034,   107,
    2680,  3738,   110,  3738,  4040,  3738,  3738,  3738,  3738,  3738,
     118,  3738,  4332,  4213,  3738,  3738,  4067,  4213,  3738,  4171,
    3738,  3738,  4093,  4092,  1433,  1003,  1321,  1970,  1435,   137,
    2878,  2707,  2278,  3101,  1329,  3790,  3398,  1273,  4024,   519,
    3755,  4279,  4241,  4194,  3942,  3931,   154,  1492,   502,  3314,
    2945,  1971,  1963,  2549,  4192,  3223,  2477,  3246,  3201,  3246,
    3279,   657,    25,    26,  3706,  3473,  3521,  4111,   548,  3512,
     178,    11,   180,  4109,  3150,  2634,  3045,  3048,    23,   111,
     112,   113,   114,   115,   192,   193,  3040,    11,    33,    34,
     570,   687,   572,  3964,  3967,  1506,  4132,    60,  3968,  3900,
    3912,  3908,  2050,  3759,   458,  4216,  3714,   703,    54,  1970,
      73,  2470,   568,    58,    59,  4226,  2290,    63,    81,  4028,
    1849,  3478,  3202,  1766,    69,   233,    72,  1442,  1488,  2694,
    2257,  3096,  2307,  2169,  3740,   583,   881,  1788,    84,    85,
      86,  3062,  2670,   106,  3170,    90,  2084,    92,  1081,    94,
    2361,  2168,  4208,   261,   750,   101,  4192,   120,   512,   104,
    3962,   124,   270,   271,  4275,   273,  4209,  3822,  3295,  2197,
    3213,  3671,  4208,  4209,  1056,   529,  4032,  4312,   210,   211,
     212,   213,  4218,  3648,  4295,  1192,  4297,  2312,  2055,  4225,
     153,  1261,  1286,  4304,  2294,  2252,  3400,   950,   950,  3114,
     308,   309,   310,  3113,  4315,  3180,   950,   152,   153,  4109,
    4119,  4120,   573,   158,  1515,   950,   161,   648,  1838,   327,
     328,   329,   564,  1341,  1839,  3221,   334,  3099,  1711,   337,
    4277,  4369,  1293,  1528,  4307,  4346,  4347,  4139,  4204,  4378,
    4351,  3514,   187,  4383,   189,  1369,   354,   355,  3119,  1321,
    1793,   196,  2762,   198,  3158,  3428,  3656,   556,  4294,   222,
    1748,  1311,   863,  4299,  3779,  1254,   229,  1497,  3785,  2682,
     557,   868,   498,   498,    -1,   635,   221,   222,   635,   387,
     388,   244,   635,   315,    -1,   317,   318,   319,    -1,    -1,
      -1,    -1,    -1,    -1,   326,    -1,    -1,    -1,   243,  4335,
      -1,    -1,    -1,    -1,   412,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   264,
      -1,    -1,    -1,    -1,  4360,    -1,  4362,    -1,    -1,    -1,
    1625,  1626,  1627,  4369,    -1,    -1,    -1,  4373,    -1,   302,
      -1,    -1,  4378,    -1,    -1,  1640,    -1,  4383,    -1,    -1,
      -1,   296,    -1,    -1,    -1,    -1,    -1,   320,   466,    -1,
      -1,    -1,   470,    -1,    -1,    -1,    -1,    -1,   314,    -1,
      -1,  1666,   404,    -1,   482,    -1,    -1,  1672,    -1,    -1,
    1675,    -1,  1677,    -1,    -1,   331,    -1,    -1,  1683,   985,
    1685,  1686,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   374,    -1,    -1,    -1,    -1,   361,    -1,    -1,   382,
      -1,    -1,    -1,    -1,    -1,    -1,   534,   459,   460,   537,
      -1,    -1,   540,   541,   542,   543,    -1,    -1,    -1,    -1,
      -1,   386,    -1,    -1,  1040,  1041,    -1,    -1,    -1,    -1,
      -1,   396,   397,  1049,  1050,   400,   401,  1053,  1054,  1055,
      -1,    -1,    -1,    -1,    -1,    -1,  1761,  1063,  1064,    -1,
    1066,  1067,    -1,    -1,   582,   583,   421,    -1,  1074,  1075,
    1076,  1077,    -1,  1079,    -1,    -1,    -1,    -1,    -1,   452,
      -1,  1087,  1088,    -1,  1090,  1091,   442,    -1,    -1,   607,
      -1,  1097,  1098,  1099,    -1,    -1,  1102,  1103,  1104,  1105,
    1106,  1107,   458,  1109,    -1,    -1,  1112,  1113,    -1,    -1,
      -1,  1117,   467,    -1,    -1,  1121,  1122,  1123,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   480,    -1,    -1,  1134,  1135,
    1136,    -1,    -1,    -1,    -1,    -1,   509,  1143,    -1,    -1,
      -1,    -1,    -1,    -1,  1150,  1151,  1152,    -1,    -1,   591,
     505,     6,   525,    -1,   509,   528,   512,    -1,    13,    14,
      -1,    -1,    -1,    -1,   606,   607,    -1,    -1,    -1,    -1,
      25,    26,   527,   529,    -1,    -1,    -1,  1183,    -1,    -1,
      -1,    -1,    -1,    -1,   219,    -1,    -1,    -1,    -1,    -1,
      -1,   564,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    56,    -1,    -1,    -1,    60,    61,    -1,    -1,    -1,
      -1,    66,    -1,    -1,    -1,    -1,    -1,    -1,    73,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    81,    -1,    -1,   584,
      -1,    -1,    -1,    -1,    -1,   590,    91,    -1,    -1,    -1,
      -1,    -1,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   106,   287,   288,   289,   290,   291,   292,   293,   294,
     295,    -1,   297,   298,    -1,   120,    -1,    -1,    -1,   124,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   132,   133,    -1,
      -1,    -1,    -1,    -1,   139,    -1,    -1,  1992,    -1,    -1,
      -1,    -1,   147,    -1,    -1,    -1,   151,    -1,   153,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   164,
      -1,    -1,    -1,    -1,    -1,  1321,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1329,    -1,    -1,    -1,   182,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    12,    13,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2064,
      -1,    -1,    -1,  2068,    -1,   220,    -1,   222,  2073,  2074,
      -1,    -1,    -1,    -1,   229,    -1,    -1,  2082,    -1,    -1,
    2085,    -1,    -1,    -1,    -1,    -1,    -1,   422,   423,   244,
    2095,    -1,  2097,  2098,    -1,  2100,  2101,  2102,  2103,  2104,
      -1,    -1,  2107,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2116,    -1,    -1,    -1,    -1,    -1,    -1,  2123,    -1,
    2125,    -1,  2127,  2128,    -1,  2130,  2131,    -1,    94,    -1,
    2135,  2136,  2137,    -1,    -1,    -1,  2141,  2142,  2143,    -1,
    2145,    -1,  2147,    -1,  2149,    -1,  2151,   302,  2153,    -1,
      -1,    -1,    -1,  2158,    -1,    -1,    -1,    -1,    -1,   125,
      -1,    -1,    -1,    -1,    -1,   320,    13,    14,    -1,   324,
      -1,    -1,    -1,   139,    -1,  2180,    -1,    -1,    -1,    -1,
      -1,    -1,  2187,    30,    -1,  2190,    -1,    34,    -1,    -1,
      -1,  2196,    -1,    -1,  2199,    -1,   162,    -1,  2203,   165,
      -1,    48,    49,    -1,    -1,    -1,    -1,   362,    -1,    56,
     176,    -1,   367,    60,    61,    -1,    -1,    -1,    -1,   374,
      -1,    -1,  1528,    -1,   379,    -1,    -1,   382,    75,    -1,
      -1,   197,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    94,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   222,    -1,   413,    -1,
    2265,    -1,   228,    -1,    -1,    -1,    -1,    -1,    -1,   116,
      -1,    -1,   427,   428,   429,   430,    -1,    -1,   125,   126,
     127,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   138,   139,    -1,    -1,    -1,    -1,   452,    -1,    -1,
      -1,   267,    -1,    -1,   151,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   165,  1625,
    1626,  1627,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   181,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,    -1,
     197,    -1,    -1,    -1,   509,   202,    -1,    -1,   205,    -1,
    1666,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1675,
     525,  1677,    -1,   528,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   228,    -1,   230,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   551,    -1,    -1,   246,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   564,
      -1,    -1,    -1,    -1,    -1,    -1,   263,    -1,    -1,    -1,
     267,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   398,    -1,    -1,    -1,   402,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   418,    -1,    -1,  1761,    -1,    -1,    -1,    -1,
     426,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   434,   624,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   462,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   475,
     476,    -1,    -1,    -1,    -1,   362,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   379,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   392,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   519,    -1,    -1,   403,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2570,    -1,    -1,    -1,  2574,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   425,    -1,
      -1,   428,   548,   430,    -1,    -1,   433,    -1,    -1,   436,
     437,  2596,  2597,    -1,    -1,    -1,    -1,    -1,    -1,   446,
      -1,   448,    -1,    -1,   570,    -1,   572,    -1,    -1,   456,
      -1,  2616,    -1,    -1,    -1,   462,    -1,    -1,    -1,    -1,
    2625,    -1,  2627,   470,  2629,    -1,    -1,    -1,   475,    -1,
     477,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2659,    -1,    -1,   504,    -1,  2664,
      -1,   508,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2690,  1992,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   551,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   563,    -1,    -1,    -1,
     567,    -1,    -1,   570,    -1,    -1,    -1,    -1,   575,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    13,    14,    -1,    -1,    -1,
    2755,    -1,    -1,    -1,  2759,    -1,   603,    -1,  2064,    -1,
      -1,    -1,  2068,    -1,    -1,    -1,    34,  2073,  2074,    -1,
      -1,   618,    -1,    -1,    -1,    -1,  2082,    -1,    -1,    -1,
      48,    49,    -1,    -1,    -1,    -1,    -1,    -1,    56,  2095,
      -1,  2097,    60,    61,  2100,  2101,  2102,  2103,  2104,    -1,
      -1,  2806,    -1,    -1,    -1,    -1,    -1,    75,    -1,    -1,
    2116,    -1,    -1,    -1,    -1,    -1,    -1,  2123,    -1,  2125,
      -1,  2127,  2128,    -1,  2130,    -1,    94,    -1,    -1,  2135,
    2136,  2137,    -1,    -1,    -1,  2141,  2142,  2143,    -1,  2145,
      -1,  2147,    -1,  2149,    -1,  2151,    -1,  2153,   116,    -1,
      -1,    -1,  2158,    -1,    -1,    -1,    -1,   125,   126,   127,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     138,   139,    -1,    -1,  2180,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2196,    -1,    -1,  2199,    -1,    -1,    -1,   165,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2915,  2916,    -1,   181,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,     6,    -1,    -1,    -1,    -1,    -1,   195,    13,   197,
      -1,    -1,    -1,    -1,   202,    -1,    -1,   205,    -1,    -1,
      25,    26,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     228,    -1,   230,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    56,    -1,  2978,    -1,    60,    -1,    -1,   246,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    73,    -1,
      -1,    -1,    -1,    -1,    -1,   263,    81,    -1,    -1,   267,
    3005,  3006,    -1,  3008,    -1,    -1,    91,    -1,    25,    26,
      -1,    -1,  3017,    -1,    -1,    -1,    -1,  3022,    -1,    -1,
    3025,   106,  3027,  3028,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,   124,
      -1,    58,    59,    60,    -1,    -1,    -1,   132,    -1,    -1,
      -1,    68,    -1,    -1,   139,  3060,    73,    -1,    -1,    -1,
      -1,    -1,   147,    -1,    81,    -1,    -1,    -1,   153,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3090,    -1,    -1,    -1,   106,
      -1,    -1,    -1,    -1,   362,    -1,    -1,   182,    -1,    -1,
      -1,    -1,    -1,   120,    -1,    -1,    -1,   124,  3113,    -1,
      -1,   379,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   392,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   403,   153,   222,    -1,    -1,
    3145,    -1,    -1,    -1,   229,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3159,    -1,    -1,   425,    -1,   244,
     428,    -1,   430,    -1,    -1,   433,    -1,    -1,   436,   437,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3182,   446,    -1,
     448,    -1,    -1,    -1,    -1,  3190,    -1,    -1,   456,    -1,
      -1,    -1,    -1,    -1,   462,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   470,    -1,    -1,   222,    -1,   475,    -1,   477,
      -1,    -1,   229,    -1,    -1,    -1,    -1,   302,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   244,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   320,   504,    -1,    -1,   324,
     508,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2570,    -1,    -1,    -1,  2574,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   367,   551,    -1,   302,    -1,    -1,    -1,   374,
    2596,  2597,    -1,    -1,    -1,   563,    -1,   382,    -1,   567,
      -1,    -1,   570,   320,    -1,    -1,    -1,   575,    -1,    -1,
    2616,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2625,
      -1,  2627,    -1,  2629,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   603,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   428,    -1,    -1,    -1,    -1,    -1,    -1,
     618,    -1,    -1,    -1,    -1,    -1,    -1,   374,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   382,    -1,   452,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2690,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3401,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   509,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   452,    -1,    -1,    -1,    -1,
     525,  3446,  3447,   528,    -1,    -1,    -1,    -1,    -1,  2755,
    3455,    -1,    -1,  2759,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   564,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   509,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2806,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   525,    -1,
      -1,   528,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   564,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3595,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2915,
    2916,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3629,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3643,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3656,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2978,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3005,
    3006,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3017,    -1,    -1,    -1,    -1,  3022,    -1,    -1,  3025,
      -1,  3027,  3028,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3738,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3090,  3790,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3800,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3811,  3113,  3813,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3849,    -1,    -1,    -1,    -1,    -1,
    3855,  3856,    -1,  3159,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3182,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3190,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3947,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3978,    -1,  3980,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3990,    -1,  3992,  3993,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4015,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4072,    -1,  4074,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4089,  4090,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3401,    -1,  4102,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4110,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3446,  3447,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3455,
      -1,    -1,  4157,  4158,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4170,  4171,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4186,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4216,    -1,    -1,    -1,    -1,    -1,    -1,  4223,    -1,
      -1,  4226,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4256,    -1,    -1,    -1,    -1,    -1,    -1,  4263,    -1,
    4265,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4275,    -1,    -1,    -1,  4279,    -1,    -1,  4282,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4293,  3595,
    4295,    -1,  4297,    -1,    -1,    -1,    -1,    -1,    -1,  4304,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4315,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3629,    -1,  4330,  4331,    -1,    -1,    -1,
      -1,  4336,    -1,    -1,    -1,    -1,    -1,  3643,    -1,    -1,
      -1,  4346,  4347,    -1,    -1,    -1,  4351,    -1,    -1,    -1,
    3656,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4386,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3800,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3811,    -1,  3813,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3849,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3947,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3978,    -1,  3980,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3990,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4072,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4090,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4110,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4157,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4223,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,     5,    -1,     7,     8,     9,    10,    11,    -1,    -1,
    4256,    -1,    -1,    17,    -1,    -1,    20,    -1,    22,    23,
      24,    25,    26,    27,    28,    -1,    30,    -1,    -1,    33,
      34,    35,    36,    37,    38,    39,  4282,    41,    42,    43,
      44,    45,    -1,    47,    48,    -1,    -1,    51,    52,    53,
      54,    55,    -1,    57,    58,    59,    60,    -1,    62,    63,
      64,    65,    66,    67,    -1,    69,    70,    -1,    72,    73,
      74,    75,    76,    77,    78,    79,    -1,    81,    82,    -1,
      84,    85,    86,    87,    88,    -1,    90,    91,    92,    93,
    4336,    -1,    96,    97,    98,    99,    -1,   101,   102,   103,
      -1,   105,   106,   107,   108,   109,   110,    -1,    -1,    -1,
      -1,   115,   116,   117,    -1,    -1,   120,   121,   122,    -1,
     124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,
     134,    -1,    -1,    -1,   138,    -1,    -1,   141,   142,   143,
    4386,    -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,
     154,    -1,    -1,   157,   158,    -1,   160,   161,   162,   163,
     164,   165,   166,    -1,   168,   169,   170,   171,   172,   173,
     174,    -1,   176,   177,   178,   179,    -1,   181,    -1,    -1,
      -1,   185,    -1,   187,    -1,   189,    -1,   191,   192,   193,
     194,    -1,   196,    -1,   198,    -1,   200,    -1,   202,   203,
      -1,   205,   206,    -1,   208,   209,    -1,    -1,    -1,   213,
     214,   215,   216,   217,    -1,   219,   220,   221,    -1,    -1,
     224,    -1,    -1,    -1,   228,   229,   230,   231,    -1,    -1,
     234,    -1,   236,   237,    -1,   239,   240,    -1,    -1,    -1,
     244,    -1,    -1,   247,   248,    -1,   250,   251,    -1,   253,
     254,   255,    -1,    -1,    -1,    -1,    -1,   261,   262,    -1,
     264,    -1,   266,    -1,   268,   269,    -1,    -1,   272,    -1,
      -1,    -1,    -1,    -1,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,    -1,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,    -1,    -1,    -1,    -1,   311,   312,   313,
     314,   315,   316,    -1,    -1,   319,   320,   321,   322,    -1,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,    -1,   336,   337,   338,    -1,    -1,   341,   342,   343,
     344,   345,   346,   347,   348,   349,    -1,   351,   352,   353,
      -1,   355,   356,   357,    -1,    -1,   360,   361,    -1,   363,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   373,
     374,   375,   376,   377,   378,    -1,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,    -1,   392,   393,
     394,    -1,   396,    -1,   398,   399,   400,   401,   402,    -1,
     404,   405,   406,    -1,    -1,   409,    -1,    -1,    -1,   413,
     414,   415,   416,   417,    -1,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,    -1,   429,   430,   431,   432,   433,
     434,    -1,   436,    -1,   438,   439,    -1,   441,   442,   443,
      -1,   445,    -1,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,    -1,   460,   461,    -1,    -1,
      -1,   465,   466,   467,   468,    -1,    -1,    -1,   472,    -1,
      -1,    -1,   476,    -1,   478,   479,   480,   481,    -1,   483,
     484,   485,   486,   487,    -1,    -1,    -1,    -1,    -1,    -1,
     494,   495,    -1,   497,    -1,    -1,   500,    -1,    -1,   503,
     504,   505,   506,   507,   508,   509,    -1,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,    -1,    -1,   528,   529,   530,   531,    -1,   533,
     534,   535,    -1,   537,   538,   539,   540,    -1,    -1,    -1,
      -1,   545,   546,   547,    -1,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,    -1,   562,   563,
      -1,    -1,   566,    -1,    -1,   569,    -1,   571,    -1,   573,
     574,    -1,    -1,   577,   578,   579,   580,   581,    -1,    -1,
     584,   585,    -1,   587,   588,   589,   590,   591,   592,    -1,
      -1,    -1,    -1,    -1,    -1,   599,   600,    -1,   602,   603,
     604,    -1,    -1,   607,    -1,    -1,    -1,   611,   612,    -1,
      -1,    -1,    -1,   617,   618,    -1,    -1,   621,   622,    -1,
      -1,   625,   626,     5,    -1,     7,     8,     9,    10,    11,
      12,    -1,    -1,    -1,    -1,    17,    -1,    -1,    20,    -1,
      22,    23,    24,    25,    26,    27,    28,    -1,    30,    -1,
      -1,    33,    34,    35,    36,    37,    38,    39,    -1,    41,
      42,    43,    -1,    45,    -1,    47,    48,    -1,    -1,    51,
      52,    53,    54,    55,    -1,    57,    58,    59,    60,    -1,
      62,    63,    64,    65,    66,    67,    -1,    69,    70,    -1,
      72,    73,    74,    75,    76,    77,    78,    79,    -1,    81,
      82,    -1,    84,    85,    86,    87,    88,    -1,    90,    91,
      92,    93,    -1,    -1,    96,    97,    98,    99,    -1,   101,
     102,   103,    -1,   105,   106,   107,   108,   109,   110,    -1,
      -1,    -1,    -1,   115,   116,   117,    -1,    -1,   120,   121,
     122,    -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,
     132,   133,   134,    -1,    -1,    -1,   138,    -1,    -1,   141,
     142,   143,    -1,    -1,    -1,   147,    -1,   149,   150,    -1,
     152,   153,   154,    -1,    -1,   157,   158,    -1,   160,   161,
     162,   163,   164,   165,   166,    -1,   168,   169,   170,   171,
     172,   173,   174,    -1,   176,   177,   178,   179,    -1,   181,
      -1,    -1,    -1,   185,    -1,   187,    -1,   189,    -1,   191,
     192,   193,   194,    -1,   196,    -1,   198,    -1,   200,    -1,
     202,   203,    -1,   205,   206,    -1,   208,   209,    -1,    -1,
      -1,   213,   214,   215,   216,   217,    -1,   219,   220,   221,
      -1,    -1,   224,    -1,    -1,    -1,   228,   229,   230,   231,
      -1,    -1,   234,    -1,   236,   237,    -1,   239,   240,    -1,
      -1,    -1,   244,    -1,    -1,   247,   248,    -1,    -1,   251,
      -1,   253,   254,   255,    -1,    -1,    -1,    -1,    -1,   261,
     262,    -1,   264,    -1,   266,    -1,   268,   269,    -1,    -1,
     272,    -1,    -1,    -1,    -1,    -1,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,    -1,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,    -1,    -1,    -1,    -1,   311,
     312,   313,   314,   315,   316,    -1,    -1,   319,   320,   321,
     322,    -1,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,    -1,   336,   337,   338,    -1,    -1,   341,
     342,   343,   344,   345,   346,   347,   348,   349,    -1,   351,
     352,   353,    -1,   355,   356,   357,   358,    -1,   360,   361,
      -1,   363,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   373,   374,   375,   376,   377,   378,    -1,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,    -1,
     392,   393,   394,    -1,   396,    -1,   398,   399,   400,   401,
     402,    -1,   404,   405,   406,    -1,    -1,   409,    -1,    -1,
      -1,   413,   414,   415,   416,   417,    -1,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,    -1,   429,   430,   431,
     432,   433,   434,    -1,   436,    -1,   438,   439,    -1,   441,
     442,   443,    -1,   445,    -1,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,    -1,   460,   461,
      -1,    -1,    -1,   465,   466,   467,   468,    -1,    -1,    -1,
     472,    -1,    -1,    -1,   476,    -1,   478,   479,   480,   481,
      -1,   483,   484,   485,   486,   487,    -1,    -1,    -1,    -1,
      -1,    -1,   494,   495,    -1,   497,    -1,    -1,   500,    -1,
      -1,   503,   504,   505,   506,   507,   508,   509,    -1,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,    -1,    -1,   528,   529,   530,   531,
      -1,   533,   534,   535,    -1,   537,   538,   539,   540,    -1,
      -1,    -1,    -1,    -1,   546,   547,    -1,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,    -1,
     562,   563,    -1,    -1,   566,    -1,    -1,   569,    -1,   571,
      -1,   573,   574,    -1,    -1,   577,   578,   579,   580,   581,
      -1,    -1,   584,   585,    -1,   587,   588,   589,   590,   591,
     592,    -1,    -1,    -1,    -1,    -1,    -1,   599,   600,    -1,
     602,   603,   604,    -1,    -1,   607,    -1,    -1,    -1,   611,
     612,    -1,    -1,    -1,    -1,   617,   618,    -1,    -1,   621,
     622,    -1,    -1,   625,   626,     5,    -1,     7,     8,     9,
      10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,
      20,    -1,    22,    23,    24,    25,    26,    27,    28,    -1,
      30,    -1,    -1,    33,    34,    35,    36,    37,    38,    39,
      -1,    41,    42,    43,    -1,    45,    -1,    47,    48,    -1,
      -1,    51,    52,    53,    54,    55,    -1,    57,    58,    59,
      60,    -1,    62,    63,    64,    65,    66,    67,    -1,    69,
      70,    -1,    72,    73,    74,    75,    76,    77,    78,    79,
      -1,    81,    82,    -1,    84,    85,    86,    87,    88,    -1,
      90,    91,    92,    93,    -1,    -1,    96,    97,    98,    99,
      -1,   101,   102,   103,    -1,   105,   106,   107,   108,   109,
     110,    -1,    -1,    -1,    -1,   115,   116,   117,    -1,    -1,
     120,   121,   122,    -1,   124,    -1,    -1,    -1,   128,    -1,
     130,   131,   132,   133,   134,    -1,    -1,    -1,   138,    -1,
      -1,   141,   142,   143,    -1,    -1,    -1,   147,    -1,   149,
     150,    -1,   152,   153,   154,    -1,    -1,   157,   158,    -1,
     160,   161,   162,   163,   164,   165,   166,    -1,   168,   169,
     170,   171,   172,   173,   174,    -1,   176,   177,   178,   179,
      -1,   181,    -1,    -1,    -1,   185,   186,   187,    -1,   189,
      -1,   191,   192,   193,   194,    -1,   196,    -1,   198,    -1,
     200,    -1,   202,   203,    -1,   205,   206,    -1,   208,   209,
      -1,    -1,    -1,   213,   214,   215,   216,   217,    -1,   219,
     220,   221,    -1,    -1,   224,    -1,    -1,    -1,   228,   229,
     230,   231,    -1,    -1,   234,    -1,   236,   237,    -1,   239,
     240,    -1,    -1,    -1,   244,    -1,    -1,   247,   248,    -1,
      -1,   251,    -1,   253,   254,   255,    -1,    -1,    -1,    -1,
      -1,   261,   262,    -1,   264,    -1,   266,    -1,   268,   269,
      -1,    -1,   272,    -1,    -1,    -1,    -1,    -1,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,    -1,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,    -1,    -1,    -1,
      -1,   311,   312,   313,   314,   315,   316,    -1,    -1,   319,
     320,   321,   322,    -1,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,    -1,   336,   337,   338,    -1,
      -1,   341,   342,   343,   344,   345,   346,   347,   348,   349,
      -1,   351,   352,   353,    -1,   355,   356,   357,    -1,    -1,
     360,   361,    -1,   363,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   373,   374,   375,   376,   377,   378,    -1,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,    -1,   392,   393,   394,    -1,   396,    -1,   398,   399,
     400,   401,   402,    -1,   404,   405,   406,    -1,    -1,   409,
      -1,    -1,    -1,   413,   414,   415,   416,   417,    -1,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,    -1,   429,
     430,   431,   432,   433,   434,    -1,   436,    -1,   438,   439,
      -1,   441,   442,   443,    -1,   445,    -1,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,    -1,
     460,   461,    -1,    -1,    -1,   465,   466,   467,   468,    -1,
      -1,    -1,   472,    -1,    -1,    -1,   476,    -1,   478,   479,
     480,   481,    -1,   483,   484,   485,   486,   487,    -1,    -1,
      -1,    -1,    -1,    -1,   494,   495,    -1,   497,    -1,    -1,
     500,    -1,    -1,   503,   504,   505,   506,   507,   508,   509,
      -1,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,    -1,    -1,   528,   529,
     530,   531,    -1,   533,   534,   535,    -1,   537,   538,   539,
     540,    -1,    -1,    -1,    -1,    -1,   546,   547,    -1,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,    -1,   562,   563,    -1,    -1,   566,    -1,    -1,   569,
      -1,   571,    -1,   573,   574,    -1,    -1,   577,   578,   579,
     580,   581,    -1,    -1,   584,   585,    -1,   587,   588,   589,
     590,   591,   592,    -1,    -1,    -1,    -1,    -1,    -1,   599,
     600,    -1,   602,   603,   604,    -1,    -1,   607,    -1,    -1,
      -1,   611,   612,    -1,    -1,    -1,    -1,   617,   618,    -1,
      -1,   621,   622,    -1,    -1,   625,   626,     5,    -1,     7,
       8,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,
      -1,    -1,    20,    -1,    22,    23,    24,    25,    26,    27,
      28,    -1,    30,    -1,    -1,    33,    34,    35,    36,    37,
      38,    39,    -1,    41,    42,    43,    -1,    45,    -1,    47,
      48,    -1,    -1,    51,    52,    53,    54,    55,    -1,    57,
      58,    59,    60,    -1,    62,    63,    64,    65,    66,    67,
      -1,    69,    70,    -1,    72,    73,    74,    75,    76,    77,
      78,    79,    -1,    81,    82,    -1,    84,    85,    86,    87,
      88,    -1,    90,    91,    92,    93,    -1,    -1,    96,    97,
      98,    99,    -1,   101,   102,   103,    -1,   105,   106,   107,
     108,   109,   110,    -1,    -1,    -1,    -1,   115,   116,   117,
      -1,    -1,   120,   121,   122,    -1,   124,    -1,    -1,    -1,
     128,    -1,   130,   131,   132,   133,   134,    -1,    -1,    -1,
     138,    -1,    -1,   141,   142,   143,    -1,    -1,    -1,   147,
      -1,   149,   150,    -1,   152,   153,   154,    -1,    -1,   157,
     158,    -1,   160,   161,   162,   163,   164,   165,   166,    -1,
     168,   169,   170,   171,   172,   173,   174,    -1,   176,   177,
     178,   179,    -1,   181,    -1,    -1,    -1,   185,   186,   187,
      -1,   189,    -1,   191,   192,   193,   194,    -1,   196,    -1,
     198,    -1,   200,    -1,   202,   203,    -1,   205,   206,    -1,
     208,   209,    -1,    -1,    -1,   213,   214,   215,   216,   217,
      -1,   219,   220,   221,    -1,    -1,   224,    -1,    -1,    -1,
     228,   229,   230,   231,    -1,    -1,   234,    -1,   236,   237,
      -1,   239,   240,    -1,    -1,    -1,   244,    -1,    -1,   247,
     248,    -1,    -1,   251,    -1,   253,   254,   255,    -1,    -1,
      -1,    -1,    -1,   261,   262,    -1,   264,    -1,   266,    -1,
     268,   269,    -1,    -1,   272,    -1,    -1,    -1,    -1,    -1,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,    -1,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,    -1,
      -1,    -1,    -1,   311,   312,   313,   314,   315,   316,    -1,
      -1,   319,   320,   321,   322,    -1,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,    -1,   336,   337,
     338,    -1,    -1,   341,   342,   343,   344,   345,   346,   347,
     348,   349,    -1,   351,   352,   353,    -1,   355,   356,   357,
      -1,    -1,   360,   361,    -1,   363,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   373,   374,   375,   376,   377,
     378,    -1,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,    -1,   392,   393,   394,    -1,   396,    -1,
     398,   399,   400,   401,   402,    -1,   404,   405,   406,    -1,
      -1,   409,    -1,    -1,    -1,   413,   414,   415,   416,   417,
      -1,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
      -1,   429,   430,   431,   432,   433,   434,    -1,   436,    -1,
     438,   439,    -1,   441,   442,   443,    -1,   445,    -1,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,    -1,   460,   461,    -1,    -1,    -1,   465,   466,   467,
     468,    -1,    -1,    -1,   472,    -1,    -1,    -1,   476,    -1,
     478,   479,   480,   481,    -1,   483,   484,   485,   486,   487,
      -1,    -1,    -1,    -1,    -1,    -1,   494,   495,    -1,   497,
      -1,    -1,   500,    -1,    -1,   503,   504,   505,   506,   507,
     508,   509,    -1,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,    -1,    -1,
     528,   529,   530,   531,    -1,   533,   534,   535,    -1,   537,
     538,   539,   540,    -1,    -1,    -1,    -1,    -1,   546,   547,
      -1,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,    -1,
      -1,   569,    -1,   571,    -1,   573,   574,    -1,    -1,   577,
     578,   579,   580,   581,    -1,    -1,   584,   585,    -1,   587,
     588,   589,   590,   591,   592,    -1,    -1,    -1,    -1,    -1,
      -1,   599,   600,    -1,   602,   603,   604,    -1,    -1,   607,
      -1,    -1,    -1,   611,   612,    -1,    -1,    -1,    -1,   617,
     618,    -1,    -1,   621,   622,    -1,    -1,   625,   626,     5,
      -1,     7,     8,     9,    10,    11,    -1,    -1,    -1,    -1,
      -1,    17,    -1,    -1,    20,    -1,    22,    23,    24,    25,
      26,    27,    28,    -1,    30,    -1,    -1,    33,    34,    35,
      36,    37,    38,    39,    -1,    41,    42,    43,    -1,    45,
      -1,    47,    48,    -1,    -1,    51,    52,    53,    54,    55,
      -1,    57,    58,    59,    60,    -1,    62,    63,    64,    65,
      66,    67,    -1,    69,    70,    -1,    72,    73,    74,    75,
      76,    77,    78,    79,    -1,    81,    82,    -1,    84,    85,
      86,    87,    88,    -1,    90,    91,    92,    93,    -1,    -1,
      96,    97,    98,    99,    -1,   101,   102,   103,    -1,   105,
     106,   107,   108,   109,   110,    -1,    -1,    -1,    -1,   115,
     116,   117,    -1,    -1,   120,   121,   122,    -1,   124,    -1,
      -1,    -1,   128,    -1,   130,   131,   132,   133,   134,    -1,
      -1,    -1,   138,    -1,    -1,   141,   142,   143,    -1,    -1,
      -1,   147,    -1,   149,   150,    -1,   152,   153,   154,    -1,
      -1,   157,   158,    -1,   160,   161,   162,   163,   164,   165,
     166,    -1,   168,   169,   170,   171,   172,   173,   174,    -1,
     176,   177,   178,   179,    -1,   181,    -1,    -1,    -1,   185,
     186,   187,    -1,   189,    -1,   191,   192,   193,   194,    -1,
     196,    -1,   198,    -1,   200,    -1,   202,   203,    -1,   205,
     206,    -1,   208,   209,    -1,    -1,    -1,   213,   214,   215,
     216,   217,    -1,   219,   220,   221,    -1,    -1,   224,    -1,
      -1,    -1,   228,   229,   230,   231,    -1,    -1,   234,    -1,
     236,   237,    -1,   239,   240,    -1,    -1,    -1,   244,    -1,
      -1,   247,   248,    -1,    -1,   251,    -1,   253,   254,   255,
      -1,    -1,    -1,    -1,    -1,   261,   262,    -1,   264,    -1,
     266,    -1,   268,   269,    -1,    -1,   272,    -1,    -1,    -1,
      -1,    -1,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,    -1,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,    -1,    -1,    -1,    -1,   311,   312,   313,   314,   315,
     316,    -1,    -1,   319,   320,   321,   322,    -1,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,    -1,
     336,   337,   338,    -1,    -1,   341,   342,   343,   344,   345,
     346,   347,   348,   349,    -1,   351,   352,   353,    -1,   355,
     356,   357,    -1,    -1,   360,   361,    -1,   363,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   373,   374,   375,
     376,   377,   378,    -1,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,    -1,   392,   393,   394,    -1,
     396,    -1,   398,   399,   400,   401,   402,    -1,   404,   405,
     406,    -1,    -1,   409,    -1,    -1,    -1,   413,   414,   415,
     416,   417,    -1,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,    -1,   429,   430,   431,   432,   433,   434,    -1,
     436,    -1,   438,   439,    -1,   441,   442,   443,    -1,   445,
      -1,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,    -1,   460,   461,    -1,    -1,    -1,   465,
     466,   467,   468,    -1,    -1,    -1,   472,    -1,    -1,    -1,
     476,    -1,   478,   479,   480,   481,    -1,   483,   484,   485,
     486,   487,    -1,    -1,    -1,    -1,    -1,    -1,   494,   495,
      -1,   497,    -1,    -1,   500,    -1,    -1,   503,   504,   505,
     506,   507,   508,   509,    -1,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
      -1,    -1,   528,   529,   530,   531,    -1,   533,   534,   535,
      -1,   537,   538,   539,   540,    -1,    -1,    -1,    -1,    -1,
     546,   547,    -1,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,    -1,   562,   563,    -1,    -1,
     566,    -1,    -1,   569,    -1,   571,    -1,   573,   574,    -1,
      -1,   577,   578,   579,   580,   581,    -1,    -1,   584,   585,
      -1,   587,   588,   589,   590,   591,   592,    -1,    -1,    -1,
      -1,    -1,    -1,   599,   600,    -1,   602,   603,   604,    -1,
      -1,   607,    -1,    -1,    -1,   611,   612,    -1,    -1,    -1,
      -1,   617,   618,    -1,    -1,   621,   622,    -1,    -1,   625,
     626,     5,    -1,     7,     8,     9,    10,    11,    -1,    -1,
      -1,    -1,    -1,    17,    -1,    -1,    20,    -1,    22,    23,
      24,    25,    26,    27,    28,    -1,    30,    -1,    -1,    33,
      34,    35,    36,    37,    38,    39,    -1,    41,    42,    43,
      -1,    45,    -1,    47,    48,    -1,    -1,    51,    52,    53,
      54,    55,    -1,    57,    58,    59,    60,    -1,    62,    63,
      64,    65,    66,    67,    -1,    69,    70,    -1,    72,    73,
      74,    75,    76,    77,    78,    79,    -1,    81,    82,    -1,
      84,    85,    86,    87,    88,    -1,    90,    91,    92,    93,
      -1,    -1,    96,    97,    98,    99,    -1,   101,   102,   103,
      -1,   105,   106,   107,   108,   109,   110,    -1,    -1,    -1,
      -1,   115,   116,   117,    -1,    -1,   120,   121,   122,    -1,
     124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,
     134,    -1,    -1,    -1,   138,    -1,    -1,   141,   142,   143,
      -1,    -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,
     154,    -1,    -1,   157,   158,    -1,   160,   161,   162,   163,
     164,   165,   166,    -1,   168,   169,   170,   171,   172,   173,
     174,    -1,   176,   177,   178,   179,    -1,   181,    -1,    -1,
      -1,   185,    -1,   187,    -1,   189,    -1,   191,   192,   193,
     194,    -1,   196,    -1,   198,    -1,   200,    -1,   202,   203,
      -1,   205,   206,    -1,   208,   209,    -1,    -1,    -1,   213,
     214,   215,   216,   217,    -1,   219,   220,   221,    -1,    -1,
     224,    -1,    -1,    -1,   228,   229,   230,   231,    -1,    -1,
     234,    -1,   236,   237,    -1,   239,   240,    -1,    -1,    -1,
     244,    -1,    -1,   247,   248,    -1,    -1,   251,    -1,   253,
     254,   255,    -1,    -1,    -1,    -1,    -1,   261,   262,    -1,
     264,    -1,   266,    -1,   268,   269,    -1,    -1,   272,    -1,
      -1,    -1,    -1,    -1,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,    -1,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,    -1,    -1,    -1,    -1,   311,   312,   313,
     314,   315,   316,    -1,    -1,   319,   320,   321,   322,    -1,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,    -1,   336,   337,   338,    -1,    -1,   341,   342,   343,
     344,   345,   346,   347,   348,   349,    -1,   351,   352,   353,
      -1,   355,   356,   357,    -1,    -1,   360,   361,    -1,   363,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   373,
     374,   375,   376,   377,   378,    -1,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,    -1,   392,   393,
     394,    -1,   396,    -1,   398,   399,   400,   401,   402,    -1,
     404,   405,   406,    -1,    -1,   409,    -1,    -1,    -1,   413,
     414,   415,   416,   417,    -1,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,    -1,   429,   430,   431,   432,   433,
     434,    -1,   436,    -1,   438,   439,    -1,   441,   442,   443,
      -1,   445,    -1,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,    -1,   460,   461,    -1,    -1,
      -1,   465,   466,   467,   468,    -1,    -1,    -1,   472,    -1,
      -1,    -1,   476,    -1,   478,   479,   480,   481,    -1,   483,
     484,   485,   486,   487,    -1,    -1,    -1,    -1,    -1,    -1,
     494,   495,    -1,   497,    -1,    -1,   500,    -1,    -1,   503,
     504,   505,   506,   507,   508,   509,    -1,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,    -1,    -1,   528,   529,   530,   531,    -1,   533,
     534,   535,    -1,   537,   538,   539,   540,    -1,    -1,    -1,
      -1,    -1,   546,   547,    -1,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,    -1,   562,   563,
      -1,    -1,   566,    -1,    -1,   569,    -1,   571,    -1,   573,
     574,    -1,    -1,   577,   578,   579,   580,   581,    -1,    -1,
     584,   585,    -1,   587,   588,   589,   590,   591,   592,    -1,
      -1,    -1,    -1,    -1,    -1,   599,   600,    -1,   602,   603,
     604,    -1,    -1,   607,    -1,    -1,    -1,   611,   612,    -1,
      -1,    -1,    -1,   617,   618,    -1,    -1,   621,   622,    -1,
      -1,   625,   626,     5,    -1,     7,     8,     9,    10,    11,
      -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,    20,    -1,
      22,    23,    24,    25,    26,    27,    28,    -1,    30,    -1,
      -1,    33,    34,    35,    36,    37,    38,    39,    -1,    41,
      42,    43,    -1,    45,    -1,    47,    48,    -1,    -1,    51,
      52,    53,    54,    55,    -1,    57,    58,    59,    60,    -1,
      62,    63,    64,    65,    66,    67,    -1,    69,    70,    -1,
      72,    73,    74,    75,    76,    77,    78,    79,    -1,    81,
      82,    -1,    84,    85,    86,    87,    88,    -1,    90,    91,
      92,    93,    -1,    -1,    96,    97,    98,    99,    -1,   101,
     102,   103,    -1,   105,   106,   107,   108,   109,   110,    -1,
      -1,    -1,    -1,   115,   116,   117,    -1,    -1,   120,   121,
     122,    -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,
     132,   133,   134,    -1,    -1,    -1,   138,    -1,    -1,   141,
     142,   143,    -1,    -1,    -1,   147,    -1,   149,   150,    -1,
     152,   153,   154,    -1,    -1,   157,   158,    -1,   160,   161,
     162,   163,   164,   165,   166,    -1,   168,   169,   170,   171,
     172,   173,   174,    -1,   176,   177,   178,   179,    -1,   181,
      -1,    -1,    -1,   185,    -1,   187,    -1,   189,    -1,   191,
     192,   193,   194,    -1,   196,    -1,   198,    -1,   200,    -1,
     202,   203,    -1,   205,   206,    -1,   208,   209,    -1,    -1,
      -1,   213,   214,   215,   216,   217,    -1,   219,   220,   221,
      -1,    -1,   224,    -1,    -1,    -1,   228,   229,   230,   231,
      -1,    -1,   234,    -1,   236,   237,    -1,   239,   240,    -1,
      -1,    -1,   244,    -1,    -1,   247,   248,    -1,    -1,   251,
      -1,   253,   254,   255,    -1,    -1,    -1,    -1,    -1,   261,
     262,    -1,   264,    -1,   266,    -1,   268,   269,    -1,    -1,
     272,    -1,    -1,    -1,    -1,    -1,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,    -1,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,    -1,    -1,    -1,    -1,   311,
     312,   313,   314,   315,   316,    -1,    -1,   319,   320,   321,
     322,    -1,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,    -1,   336,   337,   338,    -1,    -1,   341,
     342,   343,   344,   345,   346,   347,   348,   349,    -1,   351,
     352,   353,    -1,   355,   356,   357,    -1,    -1,   360,   361,
      -1,   363,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   373,   374,   375,   376,   377,   378,    -1,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,    -1,
     392,   393,   394,    -1,   396,    -1,   398,   399,   400,   401,
     402,    -1,   404,   405,   406,    -1,    -1,   409,    -1,    -1,
      -1,   413,   414,   415,   416,   417,    -1,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,    -1,   429,   430,   431,
     432,   433,   434,    -1,   436,    -1,   438,   439,    -1,   441,
     442,   443,    -1,   445,    -1,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,    -1,   460,   461,
      -1,    -1,    -1,   465,   466,   467,   468,    -1,    -1,    -1,
     472,    -1,    -1,    -1,   476,    -1,   478,   479,   480,   481,
      -1,   483,   484,   485,   486,   487,    -1,    -1,    -1,    -1,
      -1,    -1,   494,   495,    -1,   497,    -1,    -1,   500,    -1,
      -1,   503,   504,   505,   506,   507,   508,   509,    -1,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,    -1,    -1,   528,   529,   530,   531,
      -1,   533,   534,   535,    -1,   537,   538,   539,   540,    -1,
      -1,    -1,    -1,    -1,   546,   547,    -1,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,    -1,
     562,   563,    -1,    -1,   566,    -1,    -1,   569,    -1,   571,
      -1,   573,   574,    -1,    -1,   577,   578,   579,   580,   581,
      -1,    -1,   584,   585,    -1,   587,   588,   589,   590,   591,
     592,    -1,    -1,    -1,    -1,    -1,    -1,   599,   600,    -1,
     602,   603,   604,    -1,    -1,   607,    -1,    -1,    -1,   611,
     612,    -1,    -1,    -1,    -1,   617,   618,    -1,    -1,   621,
     622,    -1,    -1,   625,   626,     5,    -1,     7,     8,     9,
      10,    11,    12,    -1,    -1,    -1,    -1,    17,    -1,    -1,
      20,    -1,    22,    23,    24,    25,    26,    27,    28,    -1,
      30,    -1,    -1,    33,    34,    35,    36,    37,    38,    39,
      -1,    41,    42,    43,    -1,    45,    -1,    47,    48,    -1,
      -1,    51,    52,    53,    54,    55,    -1,    57,    58,    59,
      60,    -1,    62,    63,    64,    65,    66,    67,    -1,    69,
      70,    -1,    72,    73,    74,    75,    76,    77,    78,    79,
      -1,    81,    82,    -1,    84,    85,    86,    87,    88,    -1,
      90,    91,    92,    93,    -1,    -1,    96,    97,    98,    99,
      -1,   101,   102,   103,    -1,   105,   106,   107,   108,   109,
     110,    -1,    -1,    -1,    -1,   115,   116,   117,    -1,    -1,
     120,   121,   122,    -1,   124,    -1,    -1,    -1,   128,    -1,
     130,   131,   132,   133,   134,    -1,    -1,    -1,   138,    -1,
      -1,   141,   142,   143,    -1,    -1,    -1,   147,    -1,   149,
     150,    -1,   152,   153,   154,    -1,    -1,   157,   158,    -1,
     160,   161,   162,   163,   164,   165,   166,    -1,   168,   169,
     170,   171,   172,   173,   174,    -1,   176,   177,   178,   179,
      -1,   181,    -1,    -1,    -1,   185,    -1,   187,    -1,   189,
      -1,   191,   192,   193,   194,    -1,   196,    -1,   198,    -1,
     200,    -1,   202,   203,    -1,   205,   206,    -1,   208,   209,
      -1,    -1,    -1,   213,   214,   215,   216,   217,    -1,   219,
     220,   221,    -1,    -1,   224,    -1,    -1,    -1,   228,   229,
     230,   231,    -1,    -1,   234,    -1,   236,   237,    -1,   239,
     240,    -1,    -1,    -1,   244,    -1,    -1,   247,   248,    -1,
      -1,   251,    -1,   253,   254,   255,    -1,    -1,    -1,    -1,
      -1,   261,   262,    -1,   264,    -1,   266,    -1,   268,   269,
      -1,    -1,   272,    -1,    -1,    -1,    -1,    -1,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,    -1,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,    -1,    -1,    -1,
      -1,   311,   312,   313,   314,   315,   316,    -1,    -1,   319,
     320,   321,   322,    -1,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,    -1,   336,   337,   338,    -1,
      -1,   341,   342,   343,   344,   345,    -1,   347,   348,   349,
      -1,   351,   352,   353,    -1,   355,   356,   357,    -1,    -1,
     360,   361,    -1,   363,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   373,   374,   375,   376,   377,   378,    -1,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,    -1,   392,   393,   394,    -1,   396,    -1,   398,   399,
     400,   401,   402,    -1,   404,   405,   406,    -1,    -1,   409,
      -1,    -1,    -1,   413,   414,   415,   416,   417,    -1,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,    -1,   429,
     430,   431,   432,   433,   434,    -1,   436,    -1,   438,   439,
      -1,   441,   442,   443,    -1,   445,    -1,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,    -1,
     460,   461,    -1,    -1,    -1,   465,   466,   467,   468,    -1,
      -1,    -1,   472,    -1,    -1,    -1,   476,    -1,   478,   479,
     480,   481,    -1,   483,   484,   485,   486,   487,    -1,    -1,
      -1,    -1,    -1,    -1,   494,   495,    -1,   497,    -1,    -1,
     500,    -1,    -1,   503,   504,   505,   506,   507,   508,   509,
      -1,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,    -1,    -1,   528,   529,
     530,   531,    -1,   533,   534,   535,    -1,   537,   538,   539,
     540,    -1,    -1,    -1,    -1,    -1,   546,   547,    -1,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,    -1,   562,   563,    -1,    -1,   566,    -1,    -1,   569,
      -1,   571,    -1,   573,   574,    -1,    -1,   577,   578,   579,
     580,   581,    -1,    -1,   584,   585,    -1,   587,   588,   589,
     590,   591,   592,    -1,    -1,    -1,    -1,    -1,    -1,   599,
     600,    -1,   602,   603,   604,    -1,    -1,   607,    -1,    -1,
      -1,   611,   612,    -1,    -1,    -1,    -1,   617,   618,    -1,
      -1,   621,   622,    -1,    -1,   625,   626,     5,    -1,     7,
       8,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,
      -1,    -1,    20,    -1,    22,    23,    24,    25,    26,    27,
      28,    -1,    30,    -1,    -1,    33,    34,    35,    36,    37,
      38,    39,    -1,    41,    42,    43,    -1,    45,    -1,    47,
      48,    -1,    -1,    51,    52,    53,    54,    55,    -1,    57,
      58,    59,    60,    -1,    62,    63,    64,    65,    66,    67,
      -1,    69,    70,    -1,    72,    73,    74,    75,    76,    77,
      78,    79,    -1,    81,    82,    -1,    84,    85,    86,    87,
      88,    -1,    90,    91,    92,    93,    -1,    -1,    96,    97,
      98,    99,    -1,   101,   102,   103,    -1,   105,   106,   107,
     108,   109,   110,    -1,    -1,    -1,    -1,   115,   116,   117,
      -1,    -1,   120,   121,   122,    -1,   124,    -1,    -1,    -1,
     128,    -1,   130,   131,   132,   133,   134,    -1,    -1,    -1,
     138,    -1,    -1,   141,   142,   143,    -1,    -1,    -1,   147,
      -1,   149,   150,    -1,   152,   153,   154,    -1,    -1,   157,
     158,    -1,   160,   161,   162,   163,   164,   165,   166,    -1,
     168,   169,   170,   171,   172,   173,   174,    -1,   176,   177,
     178,   179,    -1,   181,    -1,    -1,    -1,   185,    -1,   187,
      -1,   189,    -1,   191,   192,   193,   194,    -1,   196,    -1,
     198,    -1,   200,    -1,   202,   203,    -1,   205,   206,    -1,
     208,   209,    -1,    -1,    -1,   213,   214,   215,   216,   217,
      -1,   219,   220,   221,    -1,    -1,   224,    -1,    -1,    -1,
     228,   229,   230,   231,    -1,    -1,   234,    -1,   236,   237,
      -1,   239,   240,    -1,    -1,    -1,   244,    -1,    -1,   247,
     248,    -1,    -1,   251,    -1,   253,   254,   255,    -1,    -1,
      -1,    -1,    -1,   261,   262,    -1,   264,    -1,   266,    -1,
     268,   269,    -1,    -1,   272,    -1,    -1,    -1,    -1,    -1,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,    -1,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,    -1,
      -1,    -1,    -1,   311,   312,   313,   314,   315,   316,    -1,
      -1,   319,   320,   321,   322,    -1,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,    -1,   336,   337,
     338,    -1,    -1,   341,   342,   343,   344,   345,   346,   347,
     348,   349,    -1,   351,   352,   353,    -1,   355,   356,   357,
      -1,    -1,   360,   361,    -1,   363,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   373,   374,   375,   376,   377,
     378,    -1,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,    -1,   392,   393,   394,    -1,   396,    -1,
     398,   399,   400,   401,   402,    -1,   404,   405,   406,    -1,
      -1,   409,    -1,    -1,    -1,   413,   414,   415,   416,   417,
      -1,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
      -1,   429,   430,   431,   432,   433,   434,    -1,   436,    -1,
     438,   439,    -1,   441,   442,   443,    -1,   445,    -1,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,    -1,   460,   461,    -1,    -1,    -1,   465,   466,   467,
     468,    -1,    -1,    -1,   472,    -1,    -1,    -1,   476,    -1,
     478,   479,   480,   481,    -1,   483,   484,   485,   486,   487,
      -1,    -1,    -1,    -1,    -1,    -1,   494,   495,    -1,   497,
      -1,    -1,   500,    -1,    -1,   503,   504,   505,   506,   507,
     508,   509,    -1,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,    -1,    -1,
     528,   529,   530,   531,    -1,   533,   534,   535,    -1,   537,
     538,   539,   540,    -1,    -1,    -1,    -1,    -1,   546,   547,
      -1,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,    -1,
      -1,   569,    -1,   571,    -1,   573,   574,    -1,    -1,   577,
     578,   579,   580,   581,    -1,    -1,   584,   585,    -1,   587,
     588,   589,   590,   591,   592,    -1,    -1,    -1,    -1,    -1,
      -1,   599,   600,    -1,   602,   603,   604,    -1,    -1,   607,
      -1,    -1,    -1,   611,   612,    -1,    -1,    -1,    -1,   617,
     618,    -1,    -1,   621,   622,    -1,    -1,   625,   626,     5,
      -1,     7,     8,     9,    10,    11,    -1,    -1,    -1,    -1,
      -1,    17,    -1,    -1,    20,    -1,    22,    23,    24,    25,
      26,    27,    28,    -1,    30,    -1,    -1,    33,    34,    35,
      36,    37,    38,    39,    -1,    41,    42,    43,    -1,    45,
      -1,    47,    48,    -1,    -1,    51,    52,    53,    54,    55,
      -1,    57,    58,    59,    60,    -1,    62,    63,    64,    65,
      66,    67,    -1,    69,    70,    -1,    72,    73,    74,    75,
      76,    77,    78,    79,    -1,    81,    82,    -1,    84,    85,
      86,    87,    88,    -1,    90,    91,    92,    93,    -1,    -1,
      96,    97,    98,    99,    -1,   101,   102,   103,    -1,   105,
     106,   107,   108,   109,   110,    -1,    -1,    -1,    -1,   115,
     116,   117,    -1,    -1,   120,   121,   122,    -1,   124,    -1,
      -1,    -1,   128,    -1,   130,   131,   132,   133,   134,    -1,
      -1,    -1,   138,    -1,    -1,   141,   142,   143,    -1,    -1,
      -1,   147,    -1,   149,   150,    -1,   152,   153,   154,    -1,
      -1,   157,   158,    -1,   160,   161,   162,   163,   164,   165,
     166,    -1,   168,   169,   170,   171,   172,   173,   174,    -1,
     176,   177,   178,   179,    -1,   181,    -1,    -1,    -1,   185,
      -1,   187,    -1,   189,    -1,   191,   192,   193,   194,    -1,
     196,    -1,   198,    -1,   200,    -1,   202,   203,    -1,   205,
     206,    -1,   208,   209,    -1,    -1,    -1,   213,   214,   215,
     216,   217,    -1,   219,   220,   221,    -1,    -1,   224,    -1,
      -1,    -1,   228,   229,   230,   231,    -1,    -1,   234,    -1,
     236,   237,    -1,   239,   240,    -1,    -1,    -1,   244,    -1,
      -1,   247,   248,    -1,    -1,   251,    -1,   253,   254,   255,
      -1,    -1,    -1,    -1,    -1,   261,   262,    -1,   264,    -1,
     266,    -1,   268,   269,    -1,    -1,   272,    -1,    -1,    -1,
      -1,    -1,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,    -1,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,    -1,    -1,    -1,    -1,   311,   312,   313,   314,   315,
     316,    -1,    -1,   319,   320,   321,   322,    -1,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,    -1,
     336,   337,   338,    -1,    -1,   341,   342,   343,   344,   345,
     346,   347,   348,   349,    -1,   351,   352,   353,    -1,   355,
     356,   357,    -1,    -1,   360,   361,    -1,   363,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   373,   374,   375,
     376,   377,   378,    -1,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,    -1,   392,   393,   394,    -1,
     396,    -1,   398,   399,   400,   401,   402,    -1,   404,   405,
     406,    -1,    -1,   409,    -1,    -1,    -1,   413,   414,   415,
     416,   417,    -1,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,    -1,   429,   430,   431,   432,   433,   434,    -1,
     436,    -1,   438,   439,    -1,   441,   442,   443,    -1,   445,
      -1,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,    -1,   460,   461,    -1,    -1,    -1,   465,
     466,   467,   468,    -1,    -1,    -1,   472,    -1,    -1,    -1,
     476,    -1,   478,   479,   480,   481,    -1,   483,   484,   485,
     486,   487,    -1,    -1,    -1,    -1,    -1,    -1,   494,   495,
      -1,   497,    -1,    -1,   500,    -1,    -1,   503,   504,   505,
     506,   507,   508,   509,    -1,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
      -1,    -1,   528,   529,   530,   531,    -1,   533,   534,   535,
      -1,   537,   538,   539,   540,    -1,    -1,    -1,    -1,    -1,
     546,   547,    -1,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,    -1,   562,   563,    -1,    -1,
     566,    -1,    -1,   569,    -1,   571,    -1,   573,   574,    -1,
      -1,   577,   578,   579,   580,   581,    -1,    -1,   584,   585,
      -1,   587,   588,   589,   590,   591,   592,    -1,    -1,    -1,
      -1,    -1,    -1,   599,   600,    -1,   602,   603,   604,    -1,
      -1,   607,    -1,    -1,    -1,   611,   612,    -1,    -1,    -1,
      -1,   617,   618,    -1,    -1,   621,   622,    -1,    -1,   625,
     626,     5,    -1,     7,     8,     9,    10,    11,    -1,    -1,
      -1,    -1,    -1,    17,    -1,    -1,    20,    -1,    22,    23,
      24,    25,    26,    27,    28,    -1,    30,    -1,    -1,    33,
      34,    35,    36,    37,    38,    39,    -1,    41,    42,    43,
      -1,    45,    -1,    47,    48,    -1,    -1,    51,    52,    53,
      54,    55,    -1,    57,    58,    59,    60,    -1,    62,    63,
      64,    65,    66,    67,    -1,    69,    70,    -1,    72,    73,
      74,    75,    76,    77,    78,    79,    -1,    81,    82,    -1,
      84,    85,    86,    87,    88,    -1,    90,    91,    92,    93,
      -1,    -1,    96,    97,    98,    99,    -1,   101,   102,   103,
      -1,   105,   106,   107,   108,   109,   110,    -1,    -1,    -1,
      -1,   115,   116,   117,    -1,    -1,   120,   121,   122,    -1,
     124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,
     134,    -1,    -1,    -1,   138,    -1,    -1,   141,   142,   143,
      -1,    -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,
     154,    -1,    -1,   157,   158,    -1,   160,   161,   162,   163,
     164,   165,   166,    -1,   168,   169,   170,   171,   172,   173,
     174,    -1,   176,   177,   178,   179,    -1,   181,    -1,    -1,
      -1,   185,    -1,   187,    -1,   189,    -1,   191,   192,   193,
     194,    -1,   196,    -1,   198,    -1,   200,    -1,   202,   203,
      -1,   205,   206,    -1,   208,   209,    -1,    -1,    -1,   213,
     214,   215,   216,   217,    -1,   219,   220,   221,    -1,    -1,
     224,    -1,    -1,    -1,   228,   229,   230,   231,    -1,    -1,
     234,    -1,   236,   237,    -1,   239,   240,    -1,    -1,    -1,
     244,    -1,    -1,   247,   248,    -1,    -1,   251,    -1,   253,
     254,   255,    -1,    -1,    -1,    -1,    -1,   261,   262,    -1,
     264,    -1,   266,    -1,   268,   269,    -1,    -1,   272,    -1,
      -1,    -1,    -1,    -1,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,    -1,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,    -1,    -1,    -1,    -1,   311,   312,   313,
     314,   315,   316,    -1,    -1,   319,   320,   321,   322,    -1,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,    -1,   336,   337,   338,    -1,    -1,   341,   342,   343,
     344,   345,   346,   347,   348,   349,    -1,   351,   352,   353,
      -1,   355,   356,   357,    -1,    -1,   360,   361,    -1,   363,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   373,
     374,   375,   376,   377,   378,    -1,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,    -1,   392,   393,
     394,    -1,   396,    -1,   398,   399,   400,   401,   402,    -1,
     404,   405,   406,    -1,    -1,   409,    -1,    -1,    -1,   413,
     414,   415,   416,   417,    -1,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,    -1,   429,   430,   431,   432,   433,
     434,    -1,   436,    -1,   438,   439,    -1,   441,   442,   443,
      -1,   445,    -1,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,    -1,   460,   461,    -1,    -1,
      -1,   465,   466,   467,   468,    -1,    -1,    -1,   472,    -1,
      -1,    -1,   476,    -1,   478,   479,   480,   481,    -1,   483,
     484,   485,   486,   487,    -1,    -1,    -1,    -1,    -1,    -1,
     494,   495,    -1,   497,    -1,    -1,   500,    -1,    -1,   503,
     504,   505,   506,   507,   508,   509,    -1,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,    -1,    -1,   528,   529,   530,   531,    -1,   533,
     534,   535,    -1,   537,   538,   539,   540,    -1,    -1,    -1,
      -1,    -1,   546,   547,    -1,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,    -1,   562,   563,
      -1,    -1,   566,    -1,    -1,   569,    -1,   571,    -1,   573,
     574,    -1,    -1,   577,   578,   579,   580,   581,    -1,    -1,
     584,   585,    -1,   587,   588,   589,   590,   591,   592,    -1,
      -1,    -1,    -1,    -1,    -1,   599,   600,    -1,   602,   603,
     604,    -1,    -1,   607,    -1,    -1,    -1,   611,   612,    -1,
      -1,    -1,    -1,   617,   618,    -1,    -1,   621,   622,    -1,
      -1,   625,   626,     5,    -1,     7,     8,     9,    10,    11,
      -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,    20,    -1,
      22,    23,    24,    25,    26,    27,    28,    -1,    30,    -1,
      -1,    33,    34,    35,    36,    37,    38,    39,    -1,    41,
      42,    43,    -1,    45,    -1,    47,    48,    -1,    -1,    51,
      52,    53,    54,    55,    -1,    57,    58,    59,    60,    -1,
      62,    63,    64,    65,    66,    67,    -1,    69,    70,    -1,
      72,    73,    74,    75,    76,    77,    78,    79,    -1,    81,
      82,    -1,    84,    85,    86,    87,    88,    -1,    90,    91,
      92,    93,    -1,    -1,    96,    97,    98,    99,    -1,   101,
     102,   103,    -1,   105,   106,   107,   108,   109,   110,    -1,
      -1,    -1,    -1,   115,   116,   117,    -1,    -1,   120,   121,
     122,    -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,
     132,   133,   134,    -1,    -1,    -1,   138,    -1,    -1,   141,
     142,   143,    -1,    -1,    -1,   147,    -1,   149,   150,    -1,
     152,   153,   154,    -1,    -1,   157,   158,    -1,   160,   161,
     162,   163,   164,   165,   166,    -1,   168,   169,   170,   171,
     172,   173,   174,    -1,   176,   177,   178,   179,    -1,   181,
      -1,    -1,    -1,   185,    -1,   187,    -1,   189,    -1,   191,
     192,   193,   194,    -1,   196,    -1,   198,    -1,   200,    -1,
     202,   203,    -1,   205,   206,    -1,   208,   209,    -1,    -1,
      -1,   213,   214,   215,   216,   217,    -1,   219,   220,   221,
      -1,    -1,   224,    -1,    -1,    -1,   228,   229,   230,   231,
      -1,    -1,   234,    -1,   236,   237,    -1,   239,   240,    -1,
      -1,    -1,   244,    -1,    -1,   247,   248,    -1,    -1,   251,
      -1,   253,   254,   255,    -1,    -1,    -1,    -1,    -1,   261,
     262,    -1,   264,    -1,   266,    -1,   268,   269,    -1,    -1,
     272,    -1,    -1,    -1,    -1,    -1,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,    -1,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,    -1,    -1,    -1,   311,
     312,   313,   314,   315,   316,    -1,    -1,   319,   320,   321,
     322,    -1,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,    -1,   336,   337,   338,    -1,    -1,   341,
     342,   343,   344,   345,    -1,   347,   348,   349,    -1,   351,
     352,   353,    -1,   355,   356,   357,    -1,    -1,   360,   361,
      -1,   363,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   373,   374,   375,   376,   377,   378,    -1,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,    -1,
     392,   393,   394,    -1,   396,    -1,   398,   399,   400,   401,
     402,    -1,   404,   405,   406,    -1,    -1,   409,    -1,    -1,
      -1,   413,   414,   415,   416,   417,    -1,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,    -1,   429,   430,   431,
     432,   433,   434,    -1,   436,    -1,   438,   439,    -1,   441,
     442,   443,    -1,   445,    -1,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,    -1,   460,   461,
      -1,    -1,    -1,   465,   466,   467,   468,    -1,    -1,    -1,
     472,    -1,    -1,    -1,   476,    -1,   478,   479,   480,   481,
      -1,   483,   484,   485,   486,   487,    -1,    -1,    -1,    -1,
      -1,    -1,   494,   495,    -1,   497,    -1,    -1,   500,    -1,
      -1,   503,   504,   505,   506,   507,   508,   509,    -1,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,    -1,    -1,   528,   529,   530,   531,
      -1,   533,   534,   535,    -1,   537,   538,   539,   540,    -1,
      -1,    -1,    -1,    -1,   546,   547,    -1,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,    -1,
     562,   563,    -1,    -1,   566,    -1,    -1,   569,    -1,   571,
      -1,   573,   574,    -1,    -1,   577,   578,   579,   580,   581,
      -1,    -1,   584,   585,    -1,   587,   588,   589,   590,   591,
     592,    -1,    -1,    -1,    -1,    -1,    -1,   599,   600,    -1,
     602,   603,   604,    -1,    -1,   607,    -1,    -1,    -1,   611,
     612,    -1,    -1,    -1,    -1,   617,   618,    -1,    -1,   621,
     622,    -1,    -1,   625,   626,     5,    -1,     7,     8,     9,
      10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,
      20,    -1,    22,    23,    24,    25,    26,    27,    28,    -1,
      30,    -1,    -1,    33,    34,    35,    36,    37,    38,    39,
      -1,    41,    42,    43,    -1,    45,    -1,    47,    48,    -1,
      -1,    51,    52,    53,    54,    55,    -1,    57,    58,    59,
      60,    -1,    62,    63,    64,    65,    66,    67,    -1,    69,
      70,    -1,    72,    73,    74,    75,    76,    77,    78,    79,
      -1,    81,    82,    -1,    84,    85,    86,    87,    88,    -1,
      90,    91,    92,    93,    -1,    -1,    96,    97,    98,    99,
      -1,   101,   102,   103,    -1,   105,   106,   107,   108,   109,
     110,    -1,    -1,    -1,    -1,   115,   116,   117,    -1,    -1,
     120,   121,   122,    -1,   124,    -1,    -1,    -1,   128,    -1,
     130,   131,   132,   133,   134,    -1,    -1,    -1,   138,    -1,
      -1,   141,   142,   143,    -1,    -1,    -1,   147,    -1,   149,
     150,    -1,   152,   153,   154,    -1,    -1,   157,   158,    -1,
     160,   161,   162,   163,   164,   165,   166,    -1,   168,   169,
     170,   171,   172,   173,   174,    -1,   176,   177,   178,   179,
      -1,   181,    -1,    -1,    -1,   185,    -1,   187,    -1,   189,
      -1,   191,   192,   193,   194,    -1,   196,    -1,   198,    -1,
     200,    -1,   202,   203,    -1,   205,   206,    -1,   208,   209,
      -1,    -1,    -1,   213,   214,   215,   216,   217,    -1,   219,
     220,   221,    -1,    -1,   224,    -1,    -1,    -1,   228,   229,
     230,   231,    -1,    -1,   234,    -1,   236,   237,    -1,   239,
     240,    -1,    -1,    -1,   244,    -1,    -1,   247,   248,    -1,
      -1,   251,    -1,   253,   254,   255,    -1,    -1,    -1,    -1,
      -1,   261,   262,    -1,   264,    -1,   266,    -1,   268,   269,
      -1,    -1,   272,    -1,    -1,    -1,    -1,    -1,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,    -1,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,    -1,    -1,    -1,
      -1,   311,   312,   313,   314,   315,   316,    -1,    -1,   319,
     320,   321,   322,    -1,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,    -1,   336,   337,   338,    -1,
      -1,   341,   342,   343,   344,   345,    -1,   347,   348,   349,
      -1,   351,   352,   353,    -1,   355,   356,   357,    -1,    -1,
     360,   361,    -1,   363,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   373,   374,   375,   376,   377,   378,    -1,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,    -1,   392,   393,   394,    -1,   396,    -1,   398,   399,
     400,   401,   402,    -1,   404,   405,   406,    -1,    -1,   409,
      -1,    -1,    -1,   413,   414,   415,   416,   417,    -1,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,    -1,   429,
     430,   431,   432,   433,   434,    -1,   436,    -1,   438,   439,
      -1,   441,   442,   443,    -1,   445,    -1,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,    -1,
     460,   461,    -1,    -1,    -1,   465,   466,   467,   468,    -1,
      -1,    -1,   472,    -1,    -1,    -1,   476,    -1,   478,   479,
     480,   481,    -1,   483,   484,   485,   486,   487,    -1,    -1,
      -1,    -1,    -1,    -1,   494,   495,    -1,   497,    -1,    -1,
     500,    -1,    -1,   503,   504,   505,   506,   507,   508,   509,
      -1,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,    -1,    -1,   528,   529,
     530,   531,    -1,   533,   534,   535,    -1,   537,   538,   539,
     540,    -1,    -1,    -1,    -1,    -1,   546,   547,    -1,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,    -1,   562,   563,    -1,    -1,   566,    -1,    -1,   569,
      -1,   571,    -1,   573,   574,    -1,    -1,   577,   578,   579,
     580,   581,    -1,    -1,   584,   585,    -1,   587,   588,   589,
     590,   591,   592,    -1,    -1,    -1,    -1,    -1,    -1,   599,
     600,    -1,   602,   603,   604,    -1,    -1,   607,    -1,    -1,
      -1,   611,   612,    -1,    -1,    -1,    -1,   617,   618,    -1,
      -1,   621,   622,    -1,    -1,   625,   626,     5,    -1,     7,
       8,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,
      -1,    -1,    20,    -1,    22,    23,    24,    25,    26,    27,
      28,    -1,    30,    -1,    -1,    33,    34,    35,    36,    37,
      38,    39,    -1,    41,    42,    43,    -1,    45,    -1,    47,
      48,    -1,    -1,    51,    52,    53,    54,    55,    -1,    57,
      58,    59,    60,    -1,    62,    63,    64,    65,    66,    67,
      -1,    69,    70,    -1,    72,    73,    74,    75,    76,    77,
      78,    79,    -1,    81,    82,    -1,    84,    85,    86,    87,
      88,    -1,    90,    91,    92,    93,    -1,    -1,    96,    97,
      98,    99,    -1,   101,   102,   103,    -1,   105,   106,   107,
     108,   109,   110,    -1,    -1,    -1,    -1,   115,   116,   117,
      -1,    -1,   120,   121,   122,    -1,   124,    -1,    -1,    -1,
     128,    -1,   130,   131,   132,   133,   134,    -1,    -1,    -1,
     138,    -1,    -1,   141,   142,   143,    -1,    -1,    -1,   147,
      -1,   149,   150,    -1,   152,   153,   154,    -1,    -1,   157,
     158,    -1,   160,   161,   162,   163,   164,   165,   166,    -1,
     168,   169,   170,   171,   172,   173,   174,    -1,   176,   177,
     178,   179,    -1,   181,    -1,    -1,    -1,   185,    -1,   187,
      -1,   189,    -1,   191,   192,   193,   194,    -1,   196,    -1,
     198,    -1,   200,    -1,   202,   203,    -1,   205,   206,    -1,
     208,   209,    -1,    -1,    -1,   213,   214,   215,   216,   217,
      -1,   219,   220,   221,    -1,    -1,   224,    -1,    -1,    -1,
     228,   229,   230,   231,    -1,    -1,   234,    -1,   236,   237,
      -1,   239,   240,    -1,    -1,    -1,   244,    -1,    -1,   247,
     248,    -1,    -1,   251,    -1,   253,   254,   255,    -1,    -1,
      -1,    -1,    -1,   261,   262,    -1,   264,    -1,   266,    -1,
     268,   269,    -1,    -1,   272,    -1,    -1,    -1,    -1,    -1,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,    -1,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,    -1,
      -1,    -1,    -1,   311,   312,   313,   314,   315,   316,    -1,
      -1,   319,   320,   321,   322,    -1,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,    -1,   336,   337,
     338,    -1,    -1,   341,   342,   343,   344,   345,    -1,   347,
     348,   349,    -1,   351,   352,   353,    -1,   355,   356,   357,
      -1,    -1,   360,   361,    -1,   363,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   373,   374,   375,   376,   377,
     378,    -1,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,    -1,   392,   393,   394,    -1,   396,    -1,
     398,   399,   400,   401,   402,    -1,   404,   405,   406,    -1,
      -1,   409,    -1,    -1,    -1,   413,   414,   415,   416,   417,
      -1,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
      -1,   429,   430,   431,   432,   433,   434,    -1,   436,    -1,
     438,   439,    -1,   441,   442,   443,    -1,   445,    -1,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,    -1,   460,   461,    -1,    -1,    -1,   465,   466,   467,
     468,    -1,    -1,    -1,   472,    -1,    -1,    -1,   476,    -1,
     478,   479,   480,   481,    -1,   483,   484,   485,   486,   487,
      -1,    -1,    -1,    -1,    -1,    -1,   494,   495,    -1,   497,
      -1,    -1,   500,    -1,    -1,   503,   504,   505,   506,   507,
     508,   509,    -1,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,    -1,    -1,
     528,   529,   530,   531,    -1,   533,   534,   535,    -1,   537,
     538,   539,   540,    -1,    -1,    -1,    -1,    -1,   546,   547,
      -1,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,    -1,   562,   563,    -1,    -1,   566,    -1,
      -1,   569,    -1,   571,    -1,   573,   574,    -1,    -1,   577,
     578,   579,   580,   581,    -1,    -1,   584,   585,    -1,   587,
     588,   589,   590,   591,   592,    -1,    -1,    -1,    -1,    -1,
      -1,   599,   600,    -1,   602,   603,   604,    -1,    -1,   607,
      -1,    -1,    -1,   611,   612,    -1,    -1,    -1,    -1,   617,
     618,    -1,    -1,   621,   622,    -1,    -1,   625,   626,     5,
      -1,     7,     8,     9,    10,    11,    -1,    -1,    -1,    -1,
      -1,    17,    -1,    -1,    20,    -1,    22,    23,    24,    25,
      26,    27,    28,    -1,    30,    -1,    -1,    33,    34,    35,
      36,    37,    38,    39,    -1,    41,    42,    43,    -1,    45,
      -1,    47,    48,    -1,    -1,    51,    52,    53,    54,    55,
      -1,    57,    58,    59,    60,    -1,    62,    63,    64,    65,
      66,    67,    -1,    69,    70,    -1,    72,    73,    74,    75,
      76,    77,    78,    79,    -1,    81,    82,    -1,    84,    85,
      86,    87,    88,    -1,    90,    91,    92,    93,    -1,    -1,
      96,    97,    98,    99,    -1,   101,   102,   103,    -1,   105,
     106,   107,   108,   109,   110,    -1,    -1,    -1,    -1,   115,
     116,   117,    -1,    -1,   120,   121,   122,    -1,   124,    -1,
      -1,    -1,   128,    -1,   130,   131,   132,   133,   134,    -1,
      -1,    -1,   138,    -1,    -1,   141,   142,   143,    -1,    -1,
      -1,   147,    -1,   149,   150,    -1,   152,   153,   154,    -1,
      -1,   157,   158,    -1,   160,   161,   162,   163,   164,   165,
     166,    -1,   168,   169,   170,   171,   172,   173,   174,    -1,
     176,   177,   178,   179,    -1,   181,    -1,    -1,    -1,   185,
      -1,   187,    -1,   189,    -1,   191,   192,   193,   194,    -1,
     196,    -1,   198,    -1,   200,    -1,   202,   203,    -1,   205,
     206,    -1,   208,   209,    -1,    -1,    -1,   213,   214,   215,
     216,   217,    -1,   219,   220,   221,    -1,    -1,   224,    -1,
      -1,    -1,   228,   229,   230,   231,    -1,    -1,   234,    -1,
     236,   237,    -1,   239,   240,    -1,    -1,    -1,   244,    -1,
      -1,   247,   248,    -1,    -1,   251,    -1,   253,   254,   255,
      -1,    -1,    -1,    -1,    -1,   261,   262,    -1,   264,    -1,
     266,    -1,   268,   269,    -1,    -1,   272,    -1,    -1,    -1,
      -1,    -1,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,    -1,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,    -1,    -1,    -1,    -1,   311,   312,   313,   314,   315,
     316,    -1,    -1,   319,   320,   321,   322,    -1,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,    -1,
     336,   337,   338,    -1,    -1,   341,   342,   343,   344,   345,
      -1,   347,   348,   349,    -1,   351,   352,   353,    -1,   355,
     356,   357,    -1,    -1,   360,   361,    -1,   363,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   373,   374,   375,
     376,   377,   378,    -1,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,    -1,   392,   393,   394,    -1,
     396,    -1,   398,   399,   400,   401,   402,    -1,   404,   405,
     406,    -1,    -1,   409,    -1,    -1,    -1,   413,   414,   415,
     416,   417,    -1,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,    -1,   429,   430,   431,   432,   433,   434,    -1,
     436,    -1,   438,   439,    -1,   441,   442,   443,    -1,   445,
      -1,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,    -1,   460,   461,    -1,    -1,    -1,   465,
     466,   467,   468,    -1,    -1,    -1,   472,    -1,    -1,    -1,
     476,    -1,   478,   479,   480,   481,    -1,   483,   484,   485,
     486,   487,    -1,    -1,    -1,    -1,    -1,    -1,   494,   495,
      -1,   497,    -1,    -1,   500,    -1,    -1,   503,   504,   505,
     506,   507,   508,   509,    -1,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
      -1,    -1,   528,   529,   530,   531,    -1,   533,   534,   535,
      -1,   537,   538,   539,   540,    -1,    -1,    -1,    -1,    -1,
     546,   547,    -1,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,    -1,   562,   563,    -1,    -1,
     566,    -1,    -1,   569,    -1,   571,    -1,   573,   574,    -1,
      -1,   577,   578,   579,   580,   581,    -1,    -1,   584,   585,
      -1,   587,   588,   589,   590,   591,   592,    -1,    -1,    -1,
      -1,    -1,    -1,   599,   600,    -1,   602,   603,   604,    -1,
      -1,   607,    -1,    -1,    -1,   611,   612,    -1,    -1,    -1,
      -1,   617,   618,    -1,    -1,   621,   622,    -1,    -1,   625,
     626,     5,    -1,     7,     8,     9,    10,    11,    -1,    -1,
      -1,    -1,    -1,    17,    -1,    -1,    20,    -1,    22,    23,
      24,    25,    26,    27,    28,    -1,    30,    -1,    -1,    -1,
      34,    35,    -1,    -1,    38,    -1,    -1,    41,    42,    43,
      -1,    45,    -1,    47,    48,    -1,    -1,    51,    -1,    -1,
      54,    55,    -1,    57,    58,    -1,    60,    -1,    62,    63,
      64,    65,    66,    67,    -1,    69,    70,    -1,    72,    73,
      74,    75,    76,    77,    78,    79,    -1,    81,    82,    -1,
      84,    85,    86,    87,    88,    -1,    90,    -1,    -1,    93,
      -1,    -1,    96,    -1,    98,    -1,    -1,   101,    -1,    -1,
      -1,   105,   106,   107,    -1,    -1,   110,    -1,    -1,    -1,
      -1,   115,   116,   117,    -1,    -1,    -1,   121,   122,    -1,
     124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,
     134,    -1,    -1,    -1,   138,    -1,    -1,   141,   142,   143,
      -1,    -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,
     154,    -1,    -1,   157,   158,    -1,   160,   161,   162,   163,
     164,   165,    -1,    -1,   168,   169,   170,    -1,   172,   173,
     174,    -1,   176,   177,   178,   179,    -1,   181,    -1,    -1,
      -1,   185,    -1,   187,    -1,   189,    -1,   191,   192,   193,
     194,    -1,   196,    -1,   198,    -1,    -1,    -1,   202,   203,
      -1,   205,   206,    -1,   208,   209,    -1,    -1,    -1,   213,
     214,   215,   216,    -1,    -1,   219,   220,   221,    -1,    -1,
     224,    -1,    -1,    -1,    -1,   229,   230,    -1,    -1,    -1,
     234,    -1,   236,   237,    -1,   239,   240,    -1,    -1,    -1,
     244,    -1,    -1,   247,   248,    -1,    -1,   251,    -1,    -1,
     254,   255,    -1,    -1,    -1,    -1,    -1,   261,   262,    -1,
     264,    -1,   266,    -1,   268,   269,    -1,    -1,   272,    -1,
      -1,    -1,    -1,    -1,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,    -1,   296,   297,   298,    -1,   300,   301,   302,   303,
      -1,   305,   306,    -1,    -1,    -1,    -1,   311,   312,   313,
     314,   315,   316,    -1,    -1,   319,   320,    -1,   322,    -1,
     324,    -1,   326,   327,   328,   329,   330,   331,   332,   333,
     334,    -1,   336,   337,   338,    -1,    -1,   341,   342,   343,
     344,    -1,    -1,    -1,   348,   349,    -1,   351,   352,   353,
      -1,   355,   356,   357,    -1,    -1,   360,   361,    -1,   363,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   373,
     374,   375,    -1,   377,   378,    -1,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,    -1,    -1,   392,   393,
     394,    -1,   396,    -1,   398,   399,   400,   401,   402,    -1,
     404,   405,   406,    -1,    -1,   409,    -1,    -1,    -1,   413,
     414,   415,   416,   417,    -1,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,    -1,   429,   430,   431,    -1,    -1,
     434,    -1,   436,    -1,   438,   439,    -1,   441,   442,   443,
      -1,   445,    -1,    -1,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,    -1,   460,   461,    -1,    -1,
      -1,   465,   466,   467,   468,    -1,    -1,    -1,   472,    -1,
      -1,    -1,   476,    -1,   478,   479,   480,   481,    -1,   483,
     484,   485,   486,   487,    -1,    -1,    -1,    -1,    -1,    -1,
     494,   495,    -1,   497,    -1,    -1,   500,    -1,    -1,   503,
     504,   505,    -1,    -1,   508,   509,    -1,   511,   512,   513,
     514,   515,   516,    -1,    -1,   519,   520,   521,   522,    -1,
     524,   525,    -1,    -1,   528,   529,   530,   531,    -1,   533,
     534,   535,    -1,   537,   538,   539,   540,    -1,    -1,    -1,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,    -1,   562,   563,
      -1,    -1,   566,    -1,    -1,   569,    -1,   571,    -1,   573,
     574,    -1,    -1,    -1,    -1,    -1,    -1,   581,    -1,    -1,
     584,    -1,    -1,    -1,   588,   589,   590,   591,   592,    -1,
      -1,    -1,    -1,    -1,    -1,   599,   600,    -1,   602,   603,
     604,    -1,    -1,   607,    -1,    -1,    -1,    -1,     5,    -1,
       7,     8,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,
      17,   625,   626,    20,    -1,    22,    23,    24,    25,    26,
      27,    28,    -1,    30,    -1,    -1,    -1,    34,    -1,    -1,
      -1,    38,    -1,    -1,    41,    42,    43,    -1,    45,    -1,
      47,    48,    -1,    -1,    51,    -1,    -1,    54,    55,    -1,
      57,    58,    -1,    60,    -1,    62,    63,    64,    65,    66,
      67,    -1,    69,    70,    -1,    72,    73,    74,    75,    76,
      77,    78,    79,    -1,    81,    82,    83,    84,    85,    86,
      87,    88,    -1,    90,    -1,    -1,    93,    -1,    -1,    96,
      -1,    98,    -1,    -1,   101,    -1,    -1,    -1,   105,   106,
     107,    -1,    -1,   110,    -1,    -1,    -1,    -1,   115,   116,
      -1,    -1,    -1,    -1,   121,   122,    -1,   124,    -1,    -1,
      -1,   128,    -1,   130,   131,   132,   133,   134,    -1,    -1,
      -1,   138,    -1,    -1,   141,   142,   143,    -1,    -1,    -1,
     147,    -1,   149,   150,    -1,   152,   153,   154,    -1,    -1,
     157,   158,    -1,   160,   161,   162,   163,   164,   165,    -1,
      -1,   168,   169,   170,    -1,    -1,   173,   174,    -1,   176,
     177,   178,    -1,    -1,   181,    -1,    -1,    -1,   185,    -1,
     187,   188,   189,    -1,   191,   192,   193,   194,    -1,   196,
      -1,   198,    -1,    -1,    -1,   202,   203,    -1,   205,    -1,
      -1,   208,   209,    -1,    -1,    -1,   213,   214,   215,   216,
      -1,    -1,   219,   220,   221,   222,    -1,   224,    -1,    -1,
      -1,    -1,   229,   230,    -1,    -1,    -1,   234,    -1,   236,
     237,    -1,   239,   240,    -1,    -1,    -1,   244,   245,    -1,
     247,   248,    -1,    -1,   251,    -1,    -1,   254,   255,    -1,
     257,    -1,    -1,    -1,   261,   262,    -1,   264,    -1,   266,
      -1,   268,   269,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,    -1,   296,
     297,   298,    -1,   300,   301,   302,   303,    -1,   305,   306,
      -1,    -1,    -1,    -1,   311,   312,   313,   314,   315,   316,
      -1,    -1,   319,   320,    -1,   322,    -1,   324,    -1,   326,
     327,   328,   329,   330,   331,   332,   333,   334,    -1,    -1,
     337,   338,    -1,    -1,   341,   342,   343,   344,    -1,    -1,
      -1,   348,   349,    -1,    -1,    -1,   353,    -1,   355,   356,
     357,    -1,    -1,   360,   361,    -1,   363,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   373,   374,   375,    -1,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,    -1,    -1,   392,   393,   394,    -1,   396,
      -1,   398,   399,   400,   401,   402,    -1,   404,   405,   406,
      -1,    -1,   409,    -1,    -1,    -1,   413,   414,   415,   416,
     417,    -1,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,    -1,   429,   430,   431,    -1,    -1,   434,    -1,   436,
      -1,   438,   439,    -1,   441,   442,   443,    -1,   445,    -1,
      -1,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,    -1,   460,   461,   462,    -1,    -1,   465,   466,
     467,   468,    -1,    -1,    -1,   472,    -1,    -1,    -1,   476,
      -1,   478,   479,   480,   481,    -1,   483,   484,   485,   486,
     487,   488,    -1,    -1,    -1,    -1,    -1,   494,   495,    -1,
     497,    -1,    -1,   500,    -1,    -1,   503,   504,   505,    -1,
      -1,   508,   509,    -1,   511,   512,   513,   514,   515,   516,
      -1,    -1,   519,   520,   521,   522,    -1,   524,   525,    -1,
      -1,   528,   529,   530,   531,    -1,    -1,   534,   535,    -1,
     537,   538,   539,   540,    -1,    -1,    -1,    -1,    -1,   546,
     547,    -1,    -1,    -1,   551,   552,   553,   554,    -1,   556,
     557,    -1,   559,   560,    -1,   562,   563,    -1,    -1,   566,
      -1,    -1,   569,    -1,   571,    -1,   573,   574,    -1,    -1,
      -1,    -1,    -1,    -1,   581,    -1,    -1,   584,    -1,    -1,
      -1,   588,   589,   590,   591,   592,    -1,    -1,    -1,    -1,
      -1,    -1,   599,   600,    -1,   602,   603,   604,    -1,    -1,
     607,    -1,    -1,     5,    -1,     7,     8,     9,    10,    11,
      -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,    20,   626,
      22,    23,    24,    25,    26,    27,    28,    -1,    30,    -1,
      -1,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    41,
      42,    43,    -1,    45,    -1,    47,    48,    -1,    -1,    51,
      -1,    -1,    54,    55,    -1,    57,    58,    -1,    60,    -1,
      62,    63,    64,    65,    66,    67,    -1,    69,    70,    -1,
      72,    73,    74,    75,    76,    77,    78,    79,    -1,    81,
      82,    83,    84,    85,    86,    87,    88,    -1,    90,    -1,
      -1,    93,    -1,    -1,    96,    -1,    98,    -1,    -1,   101,
      -1,    -1,    -1,   105,   106,   107,    -1,    -1,   110,    -1,
      -1,    -1,    -1,   115,   116,    -1,    -1,    -1,    -1,   121,
     122,    -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,
     132,   133,   134,    -1,    -1,    -1,   138,    -1,    -1,   141,
     142,   143,    -1,    -1,    -1,   147,    -1,   149,   150,    -1,
     152,   153,   154,    -1,    -1,   157,   158,    -1,   160,   161,
     162,   163,   164,   165,    -1,    -1,   168,   169,   170,    -1,
      -1,   173,   174,    -1,   176,   177,   178,    -1,    -1,   181,
      -1,    -1,    -1,   185,    -1,   187,   188,   189,    -1,   191,
     192,   193,   194,    -1,   196,    -1,   198,    -1,    -1,    -1,
     202,   203,    -1,   205,    -1,    -1,   208,   209,    -1,    -1,
      -1,   213,   214,   215,   216,    -1,    -1,   219,   220,   221,
     222,    -1,   224,    -1,    -1,    -1,    -1,   229,   230,    -1,
      -1,    -1,   234,    -1,   236,   237,    -1,   239,   240,    -1,
      -1,    -1,   244,   245,    -1,   247,   248,    -1,    -1,   251,
      -1,    -1,   254,   255,    -1,    -1,    -1,    -1,    -1,   261,
     262,    -1,   264,    -1,   266,    -1,   268,   269,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,    -1,   296,   297,   298,    -1,   300,   301,
     302,   303,    -1,   305,   306,    -1,    -1,    -1,    -1,   311,
     312,   313,   314,   315,   316,    -1,    -1,   319,   320,    -1,
     322,    -1,   324,    -1,   326,   327,   328,   329,   330,   331,
     332,   333,   334,    -1,    -1,   337,   338,    -1,    -1,   341,
     342,   343,   344,    -1,    -1,    -1,   348,   349,    -1,    -1,
      -1,   353,    -1,   355,   356,   357,    -1,    -1,   360,   361,
      -1,   363,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   373,   374,   375,    -1,   377,   378,    -1,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,    -1,    -1,
     392,   393,   394,    -1,   396,    -1,   398,   399,   400,   401,
     402,    -1,   404,   405,   406,    -1,    -1,   409,    -1,    -1,
      -1,   413,   414,   415,   416,   417,    -1,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,    -1,   429,   430,   431,
      -1,    -1,   434,    -1,   436,    -1,   438,   439,    -1,   441,
     442,   443,    -1,   445,    -1,    -1,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,    -1,   460,   461,
      -1,    -1,    -1,   465,   466,   467,   468,    -1,    -1,    -1,
     472,    -1,    -1,    -1,   476,    -1,   478,   479,   480,   481,
      -1,   483,   484,   485,   486,   487,   488,    -1,    -1,    -1,
      -1,    -1,   494,   495,    -1,   497,    -1,    -1,   500,    -1,
      -1,   503,   504,   505,    -1,    -1,   508,   509,    -1,   511,
     512,   513,   514,   515,   516,    -1,    -1,   519,   520,   521,
     522,    -1,   524,   525,    -1,    -1,   528,   529,   530,   531,
      -1,    -1,   534,   535,    -1,   537,   538,   539,   540,    -1,
      -1,    -1,    -1,    -1,   546,   547,    -1,    -1,    -1,   551,
     552,   553,   554,    -1,   556,   557,    -1,   559,   560,    -1,
     562,   563,    -1,    -1,   566,    -1,    -1,   569,    -1,   571,
      -1,   573,   574,    -1,    -1,    -1,    -1,    -1,    -1,   581,
      -1,    -1,   584,    -1,    -1,    -1,   588,   589,   590,   591,
     592,    -1,    -1,    -1,    -1,    -1,    -1,   599,   600,    -1,
     602,   603,   604,    -1,    -1,   607,    -1,    -1,     5,    -1,
       7,     8,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,
      17,    -1,    -1,    20,   626,    22,    23,    24,    25,    26,
      27,    28,    -1,    30,    -1,    -1,    -1,    34,    -1,    -1,
      -1,    38,    -1,    -1,    41,    42,    43,    -1,    45,    -1,
      47,    48,    -1,    -1,    51,    -1,    -1,    54,    55,    -1,
      57,    58,    -1,    60,    -1,    62,    63,    64,    65,    66,
      67,    -1,    69,    70,    -1,    72,    73,    74,    75,    76,
      77,    78,    79,    -1,    81,    82,    -1,    84,    85,    86,
      87,    88,    -1,    90,    -1,    -1,    93,    -1,    -1,    96,
      -1,    98,    -1,    -1,   101,    -1,    -1,    -1,   105,   106,
     107,    -1,    -1,   110,    -1,    -1,    -1,    -1,   115,   116,
      -1,    -1,    -1,    -1,   121,   122,    -1,   124,    -1,    -1,
      -1,   128,    -1,   130,   131,   132,   133,   134,    -1,    -1,
      -1,   138,    -1,    -1,   141,   142,   143,    -1,    -1,    -1,
     147,    -1,   149,   150,    -1,   152,   153,   154,    -1,    -1,
     157,   158,    -1,   160,   161,   162,   163,   164,   165,    -1,
      -1,   168,   169,   170,    -1,    -1,   173,   174,    -1,   176,
     177,   178,    -1,    -1,   181,    -1,    -1,    -1,   185,    -1,
     187,    -1,   189,    -1,   191,   192,   193,   194,    -1,   196,
      -1,   198,    -1,    -1,    -1,   202,   203,    -1,   205,    -1,
      -1,   208,   209,    -1,    -1,    -1,   213,   214,   215,   216,
      -1,    -1,   219,   220,   221,    -1,    -1,   224,    -1,    -1,
      -1,    -1,   229,   230,    -1,    -1,    -1,   234,    -1,   236,
     237,    -1,   239,   240,    -1,    -1,    -1,   244,    -1,    -1,
     247,   248,    -1,    -1,   251,    -1,    -1,   254,   255,    -1,
      -1,    -1,    -1,    -1,   261,   262,    -1,   264,    -1,   266,
      -1,   268,   269,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,    -1,   296,
     297,   298,    -1,   300,   301,   302,   303,    -1,   305,   306,
      -1,    -1,    -1,    -1,   311,   312,   313,   314,   315,   316,
      -1,    -1,   319,   320,    -1,   322,    -1,   324,    -1,   326,
     327,   328,   329,   330,   331,   332,   333,   334,    -1,    -1,
     337,   338,    -1,    -1,   341,   342,   343,   344,    -1,    -1,
      -1,   348,   349,    -1,    -1,    -1,   353,    -1,   355,   356,
     357,    -1,    -1,   360,   361,    -1,   363,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   373,   374,   375,    -1,
     377,   378,    -1,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,    -1,    -1,   392,   393,   394,    -1,   396,
      -1,   398,   399,   400,   401,   402,    -1,   404,   405,   406,
      -1,    -1,   409,    -1,    -1,    -1,   413,   414,   415,   416,
     417,    -1,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,    -1,   429,   430,   431,    -1,    -1,   434,    -1,   436,
      -1,   438,   439,    -1,   441,   442,   443,    -1,   445,    -1,
      -1,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,    -1,   460,   461,   462,    -1,    -1,   465,   466,
     467,   468,    -1,    -1,    -1,   472,    -1,    -1,    -1,   476,
      -1,   478,   479,   480,   481,    -1,   483,   484,   485,   486,
     487,    -1,    -1,    -1,    -1,    -1,    -1,   494,   495,    -1,
     497,    -1,    -1,   500,    -1,    -1,   503,   504,   505,    -1,
      -1,   508,   509,    -1,   511,   512,   513,   514,   515,   516,
      -1,    -1,   519,   520,   521,   522,    -1,   524,   525,    -1,
      -1,   528,   529,   530,   531,    -1,    -1,   534,   535,    -1,
     537,   538,   539,   540,    -1,    -1,    -1,    -1,    -1,   546,
     547,    -1,    -1,    -1,   551,   552,   553,   554,    -1,   556,
     557,    -1,   559,   560,    -1,   562,   563,    -1,    -1,   566,
      -1,    -1,   569,    -1,   571,    -1,   573,   574,    -1,    -1,
      -1,    -1,    -1,    -1,   581,    -1,    -1,   584,    -1,    -1,
      -1,   588,   589,   590,   591,   592,    -1,    -1,    -1,    -1,
      -1,    -1,   599,   600,    -1,   602,   603,   604,    -1,    -1,
     607,    -1,    -1,     5,    -1,     7,     8,     9,    10,    11,
      -1,    -1,   619,    -1,    -1,    17,    -1,    -1,    20,   626,
      22,    23,    24,    25,    26,    27,    28,    -1,    30,    -1,
      -1,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    41,
      42,    43,    -1,    45,    -1,    47,    48,    -1,    -1,    51,
      -1,    -1,    54,    55,    -1,    57,    58,    -1,    60,    -1,
      62,    63,    64,    65,    66,    67,    -1,    69,    70,    -1,
      72,    73,    74,    75,    76,    77,    78,    79,    -1,    81,
      82,    -1,    84,    85,    86,    87,    88,    -1,    90,    -1,
      -1,    93,    -1,    -1,    96,    -1,    98,    -1,    -1,   101,
      -1,    -1,    -1,   105,   106,   107,    -1,    -1,   110,    -1,
      -1,    -1,    -1,   115,   116,    -1,    -1,    -1,    -1,   121,
     122,    -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,
     132,   133,   134,    -1,    -1,    -1,   138,    -1,    -1,   141,
     142,   143,    -1,    -1,    -1,   147,    -1,   149,   150,    -1,
     152,   153,   154,    -1,    -1,   157,   158,    -1,   160,   161,
     162,   163,   164,   165,    -1,    -1,   168,   169,   170,    -1,
      -1,   173,   174,    -1,   176,   177,   178,    -1,    -1,   181,
      -1,    -1,    -1,   185,    -1,   187,    -1,   189,    -1,   191,
     192,   193,   194,    -1,   196,    -1,   198,    -1,    -1,    -1,
     202,   203,    -1,   205,    -1,    -1,   208,   209,    -1,    -1,
      -1,   213,   214,   215,   216,    -1,    -1,   219,   220,   221,
      -1,    -1,   224,    -1,    -1,    -1,    -1,   229,   230,    -1,
      -1,    -1,   234,    -1,   236,   237,    -1,   239,   240,    -1,
      -1,    -1,   244,    -1,    -1,   247,   248,    -1,    -1,   251,
      -1,    -1,   254,   255,    -1,    -1,    -1,    -1,    -1,   261,
     262,    -1,   264,    -1,   266,    -1,   268,   269,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,    -1,   296,   297,   298,    -1,   300,   301,
     302,   303,    -1,   305,   306,    -1,    -1,    -1,    -1,   311,
     312,   313,   314,   315,   316,    -1,    -1,   319,   320,    -1,
     322,    -1,   324,    -1,   326,   327,   328,   329,   330,   331,
     332,   333,   334,    -1,    -1,   337,   338,    -1,    -1,   341,
     342,   343,   344,    -1,    -1,    -1,   348,   349,    -1,    -1,
      -1,   353,    -1,   355,   356,   357,    -1,    -1,   360,   361,
      -1,   363,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   373,   374,   375,    -1,   377,   378,    -1,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,    -1,    -1,
     392,   393,   394,    -1,   396,    -1,   398,   399,   400,   401,
     402,    -1,   404,   405,   406,    -1,    -1,   409,    -1,    -1,
      -1,   413,   414,   415,   416,   417,    -1,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,    -1,   429,   430,   431,
      -1,    -1,   434,    -1,   436,    -1,   438,   439,    -1,   441,
     442,   443,    -1,   445,    -1,    -1,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,    -1,   460,   461,
      -1,    -1,    -1,   465,   466,   467,   468,    -1,    -1,    -1,
     472,    -1,    -1,    -1,   476,    -1,   478,   479,   480,   481,
      -1,   483,   484,   485,   486,   487,    -1,    -1,    -1,    -1,
      -1,    -1,   494,   495,    -1,   497,    -1,    -1,   500,    -1,
      -1,   503,   504,   505,    -1,    -1,   508,   509,    -1,   511,
     512,   513,   514,   515,   516,    -1,    -1,   519,   520,   521,
     522,    -1,   524,   525,    -1,    -1,   528,   529,   530,   531,
      -1,    -1,   534,   535,    -1,   537,   538,   539,   540,    -1,
      -1,    -1,    -1,    -1,   546,   547,    -1,    -1,    -1,   551,
     552,   553,   554,    -1,   556,   557,    -1,   559,   560,    -1,
     562,   563,    -1,    -1,   566,    -1,    -1,   569,    -1,   571,
      -1,   573,   574,    -1,    -1,    -1,    -1,    -1,    -1,   581,
      -1,    -1,   584,    -1,    -1,    -1,   588,   589,   590,   591,
     592,    -1,    -1,    -1,    -1,    -1,    -1,   599,   600,    -1,
     602,   603,   604,    -1,    -1,   607,    -1,    -1,    -1,    -1,
       5,    -1,     7,     8,     9,    10,    11,   619,    -1,    -1,
      -1,    -1,    17,   625,   626,    20,    -1,    22,    23,    24,
      25,    26,    27,    28,    -1,    30,    -1,    -1,    -1,    34,
      -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,
      45,    -1,    47,    48,    -1,    -1,    51,    -1,    -1,    54,
      55,    -1,    57,    58,    -1,    60,    -1,    62,    63,    64,
      65,    66,    67,    -1,    69,    70,    -1,    72,    73,    74,
      75,    76,    77,    78,    79,    -1,    81,    82,    -1,    84,
      85,    86,    87,    88,    -1,    90,    -1,    -1,    93,    -1,
      -1,    96,    -1,    98,    -1,    -1,   101,    -1,    -1,    -1,
     105,   106,   107,    -1,    -1,   110,    -1,    -1,    -1,    -1,
     115,   116,    -1,    -1,    -1,    -1,   121,   122,    -1,   124,
      -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,   134,
      -1,    -1,    -1,   138,    -1,    -1,   141,   142,   143,    -1,
      -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,   154,
      -1,    -1,   157,   158,    -1,   160,   161,   162,   163,   164,
     165,    -1,    -1,   168,   169,   170,    -1,    -1,   173,   174,
      -1,   176,   177,   178,    -1,    -1,   181,    -1,    -1,    -1,
     185,    -1,   187,    -1,   189,    -1,   191,   192,   193,   194,
      -1,   196,    -1,   198,    -1,    -1,    -1,   202,   203,    -1,
     205,    -1,    -1,   208,   209,    -1,    -1,    -1,   213,   214,
     215,   216,    -1,    -1,   219,   220,   221,    -1,    -1,   224,
      -1,    -1,    -1,    -1,   229,   230,    -1,    -1,    -1,   234,
      -1,   236,   237,    -1,   239,   240,    -1,    -1,    -1,   244,
      -1,    -1,   247,   248,    -1,    -1,   251,    -1,    -1,   254,
     255,    -1,    -1,    -1,    -1,    -1,   261,   262,    -1,   264,
      -1,   266,    -1,   268,   269,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
      -1,   296,   297,   298,    -1,   300,   301,   302,   303,    -1,
     305,   306,    -1,    -1,    -1,    -1,   311,   312,   313,   314,
     315,   316,    -1,    -1,   319,   320,    -1,   322,    -1,   324,
      -1,   326,   327,   328,   329,   330,   331,   332,   333,   334,
      -1,    -1,   337,   338,    -1,    -1,   341,   342,   343,   344,
      -1,    -1,    -1,   348,   349,    -1,    -1,    -1,   353,    -1,
     355,   356,   357,    -1,    -1,   360,   361,    -1,   363,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   373,   374,
     375,    -1,   377,   378,    -1,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,    -1,    -1,   392,   393,   394,
      -1,   396,    -1,   398,   399,   400,   401,   402,    -1,   404,
     405,   406,    -1,    -1,   409,    -1,    -1,    -1,   413,   414,
     415,   416,   417,    -1,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,    -1,   429,   430,   431,    -1,    -1,   434,
      -1,   436,    -1,   438,   439,    -1,   441,   442,   443,    -1,
     445,    -1,    -1,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,    -1,   460,   461,    -1,    -1,    -1,
     465,   466,   467,   468,    -1,    -1,    -1,   472,    -1,    -1,
      -1,   476,    -1,   478,   479,   480,   481,    -1,   483,   484,
     485,   486,   487,    -1,    -1,    -1,    -1,    -1,    -1,   494,
     495,    -1,   497,    -1,    -1,   500,    -1,    -1,   503,   504,
     505,    -1,    -1,   508,   509,    -1,   511,   512,   513,   514,
     515,   516,    -1,    -1,   519,   520,   521,   522,    -1,   524,
     525,    -1,    -1,   528,   529,   530,   531,    -1,    -1,   534,
     535,    -1,   537,   538,   539,   540,    -1,    -1,    -1,    -1,
      -1,   546,   547,    -1,    -1,    -1,   551,   552,   553,   554,
      -1,   556,   557,    -1,   559,   560,    -1,   562,   563,    -1,
      -1,   566,    -1,    -1,   569,    -1,   571,    -1,   573,   574,
      -1,    -1,    -1,    -1,    -1,    -1,   581,    -1,    -1,   584,
      -1,    -1,    -1,   588,   589,   590,   591,   592,    -1,    -1,
      -1,    -1,    -1,    -1,   599,   600,    -1,   602,   603,   604,
      -1,    -1,   607,    -1,    -1,     5,    -1,     7,     8,     9,
      10,    11,    -1,   618,    -1,    -1,    -1,    17,    -1,    -1,
      20,   626,    22,    23,    24,    25,    26,    27,    28,    -1,
      30,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,    -1,
      -1,    41,    42,    43,    -1,    45,    -1,    47,    48,    -1,
      -1,    51,    -1,    -1,    54,    55,    -1,    57,    58,    -1,
      60,    -1,    62,    63,    64,    65,    66,    67,    -1,    69,
      70,    -1,    72,    73,    74,    75,    76,    77,    78,    79,
      -1,    81,    82,    -1,    84,    85,    86,    87,    88,    -1,
      90,    -1,    -1,    93,    -1,    -1,    96,    -1,    98,    -1,
      -1,   101,    -1,    -1,    -1,   105,   106,   107,    -1,    -1,
     110,    -1,    -1,    -1,    -1,   115,   116,    -1,    -1,    -1,
      -1,   121,   122,    -1,   124,    -1,    -1,    -1,   128,    -1,
     130,   131,   132,   133,   134,    -1,    -1,    -1,   138,    -1,
      -1,   141,   142,   143,    -1,    -1,    -1,   147,    -1,   149,
     150,    -1,   152,   153,   154,    -1,    -1,   157,   158,    -1,
     160,   161,   162,   163,   164,   165,    -1,    -1,   168,   169,
     170,    -1,    -1,   173,   174,    -1,   176,   177,   178,    -1,
      -1,   181,    -1,    -1,    -1,   185,    -1,   187,    -1,   189,
      -1,   191,   192,   193,   194,    -1,   196,    -1,   198,    -1,
      -1,    -1,   202,   203,    -1,   205,    -1,    -1,   208,   209,
      -1,    -1,    -1,   213,   214,   215,   216,    -1,    -1,   219,
     220,   221,    -1,    -1,   224,    -1,    -1,    -1,    -1,   229,
     230,    -1,   232,    -1,   234,    -1,   236,   237,    -1,   239,
     240,    -1,    -1,    -1,   244,    -1,    -1,   247,   248,    -1,
      -1,   251,    -1,    -1,   254,   255,    -1,    -1,    -1,    -1,
      -1,   261,   262,    -1,   264,    -1,   266,    -1,   268,   269,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,    -1,   296,   297,   298,    -1,
     300,   301,   302,   303,    -1,   305,   306,    -1,    -1,    -1,
      -1,   311,   312,   313,   314,   315,   316,    -1,    -1,   319,
     320,    -1,   322,    -1,   324,    -1,   326,   327,   328,   329,
     330,   331,   332,   333,   334,    -1,    -1,   337,   338,    -1,
      -1,   341,   342,   343,   344,    -1,    -1,    -1,   348,   349,
      -1,    -1,    -1,   353,    -1,   355,   356,   357,    -1,    -1,
     360,   361,    -1,   363,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   373,   374,   375,    -1,   377,   378,    -1,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
      -1,    -1,   392,   393,   394,    -1,   396,    -1,   398,   399,
     400,   401,   402,    -1,   404,   405,   406,    -1,    -1,   409,
      -1,    -1,    -1,   413,   414,   415,   416,   417,    -1,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,    -1,   429,
     430,   431,    -1,    -1,   434,    -1,   436,    -1,   438,   439,
      -1,   441,   442,   443,    -1,   445,    -1,    -1,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,    -1,
     460,   461,    -1,    -1,    -1,   465,   466,   467,   468,    -1,
      -1,    -1,   472,    -1,    -1,    -1,   476,    -1,   478,   479,
     480,   481,    -1,   483,   484,   485,   486,   487,    -1,    -1,
      -1,    -1,    -1,    -1,   494,   495,    -1,   497,    -1,    -1,
     500,    -1,    -1,   503,   504,   505,    -1,    -1,   508,   509,
      -1,   511,   512,   513,   514,   515,   516,    -1,    -1,   519,
     520,   521,   522,    -1,   524,   525,    -1,    -1,   528,   529,
     530,   531,    -1,    -1,   534,   535,    -1,   537,   538,   539,
     540,    -1,    -1,    -1,    -1,    -1,   546,   547,    -1,    -1,
      -1,   551,   552,   553,   554,    -1,   556,   557,    -1,   559,
     560,    -1,   562,   563,    -1,    -1,   566,    -1,    -1,   569,
      -1,   571,    -1,   573,   574,    -1,    -1,    -1,    -1,    -1,
      -1,   581,    -1,    -1,   584,    -1,    -1,    -1,   588,   589,
     590,   591,   592,    -1,    -1,    -1,    -1,    -1,    -1,   599,
     600,    -1,   602,   603,   604,    -1,    -1,   607,    -1,    -1,
       5,    -1,     7,     8,     9,    10,    11,    -1,    -1,    -1,
      -1,    -1,    17,    -1,    -1,    20,   626,    22,    23,    24,
      25,    26,    27,    28,    -1,    30,    -1,    -1,    -1,    34,
      -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,
      45,    -1,    47,    48,    -1,    -1,    51,    -1,    -1,    54,
      55,    -1,    57,    58,    -1,    60,    -1,    62,    63,    64,
      65,    66,    67,    -1,    69,    70,    -1,    72,    73,    74,
      75,    76,    77,    78,    79,    -1,    81,    82,    -1,    84,
      85,    86,    87,    88,    -1,    90,    -1,    -1,    93,    -1,
      -1,    96,    -1,    98,    -1,    -1,   101,    -1,    -1,    -1,
     105,   106,   107,    -1,    -1,   110,    -1,    -1,    -1,    -1,
     115,   116,    -1,    -1,    -1,    -1,   121,   122,    -1,   124,
      -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,   134,
      -1,    -1,    -1,   138,    -1,    -1,   141,   142,   143,    -1,
      -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,   154,
      -1,    -1,   157,   158,    -1,   160,   161,   162,   163,   164,
     165,    -1,    -1,   168,   169,   170,    -1,    -1,   173,   174,
      -1,   176,   177,   178,    -1,    -1,   181,    -1,    -1,    -1,
     185,    -1,   187,    -1,   189,    -1,   191,   192,   193,   194,
      -1,   196,    -1,   198,    -1,    -1,    -1,   202,   203,    -1,
     205,    -1,    -1,   208,   209,    -1,    -1,    -1,   213,   214,
     215,   216,    -1,    -1,   219,   220,   221,    -1,    -1,   224,
      -1,    -1,    -1,    -1,   229,   230,    -1,    -1,    -1,   234,
      -1,   236,   237,    -1,   239,   240,    -1,    -1,    -1,   244,
      -1,    -1,   247,   248,    -1,    -1,   251,    -1,    -1,   254,
     255,    -1,    -1,    -1,    -1,    -1,   261,   262,    -1,   264,
      -1,   266,    -1,   268,   269,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
      -1,   296,   297,   298,    -1,   300,   301,   302,   303,    -1,
     305,   306,    -1,    -1,    -1,    -1,   311,   312,   313,   314,
     315,   316,    -1,    -1,   319,   320,    -1,   322,    -1,   324,
      -1,   326,   327,   328,   329,   330,   331,   332,   333,   334,
      -1,    -1,   337,   338,    -1,    -1,   341,   342,   343,   344,
      -1,    -1,    -1,   348,   349,    -1,    -1,    -1,   353,    -1,
     355,   356,   357,    -1,    -1,   360,   361,    -1,   363,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   373,   374,
     375,    -1,   377,   378,    -1,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,    -1,    -1,   392,   393,   394,
      -1,   396,    -1,   398,   399,   400,   401,   402,    -1,   404,
     405,   406,    -1,    -1,   409,    -1,    -1,    -1,   413,   414,
     415,   416,   417,    -1,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,    -1,   429,   430,   431,    -1,    -1,   434,
      -1,   436,    -1,   438,   439,    -1,   441,   442,   443,    -1,
     445,    -1,    -1,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,    -1,   460,   461,    -1,    -1,    -1,
     465,   466,   467,   468,    -1,    -1,    -1,   472,    -1,    -1,
      -1,   476,    -1,   478,   479,   480,   481,    -1,   483,   484,
     485,   486,   487,    -1,    -1,    -1,    -1,    -1,    -1,   494,
     495,    -1,   497,    -1,    -1,   500,    -1,    -1,   503,   504,
     505,    -1,    -1,   508,   509,    -1,   511,   512,   513,   514,
     515,   516,    -1,    -1,   519,   520,   521,   522,    -1,   524,
     525,    -1,    -1,   528,   529,   530,   531,    -1,    -1,   534,
     535,    -1,   537,   538,   539,   540,    -1,    -1,    -1,    -1,
      -1,   546,   547,    -1,    -1,    -1,   551,   552,   553,   554,
      -1,   556,   557,    -1,   559,   560,    -1,   562,   563,    -1,
      -1,   566,    -1,    -1,   569,    -1,   571,    -1,   573,   574,
      -1,    -1,    -1,    -1,    -1,    -1,   581,    -1,    -1,   584,
      -1,    -1,    -1,   588,   589,   590,   591,   592,    -1,    -1,
      -1,    -1,    -1,    -1,   599,   600,    -1,   602,   603,   604,
      -1,    -1,   607,    -1,    -1,    -1,    -1,     5,   613,     7,
       8,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,
      -1,   626,    20,    -1,    22,    23,    24,    25,    26,    27,
      28,    -1,    30,    -1,    -1,    -1,    34,    -1,    -1,    -1,
      38,    -1,    -1,    41,    42,    43,    -1,    45,    -1,    47,
      48,    -1,    -1,    51,    -1,    -1,    54,    55,    -1,    57,
      58,    -1,    60,    -1,    62,    63,    64,    65,    66,    67,
      -1,    69,    70,    -1,    72,    73,    74,    75,    76,    77,
      78,    79,    -1,    81,    82,    -1,    84,    85,    86,    87,
      88,    -1,    90,    -1,    -1,    93,    -1,    -1,    96,    -1,
      98,    -1,    -1,   101,    -1,    -1,    -1,   105,   106,   107,
      -1,    -1,   110,    -1,    -1,    -1,    -1,   115,   116,    -1,
      -1,    -1,    -1,   121,   122,    -1,   124,    -1,    -1,    -1,
     128,    -1,   130,   131,   132,   133,   134,    -1,    -1,    -1,
     138,    -1,    -1,   141,   142,   143,    -1,    -1,    -1,   147,
      -1,   149,   150,    -1,   152,   153,   154,    -1,    -1,   157,
     158,    -1,   160,   161,   162,   163,   164,   165,    -1,    -1,
     168,   169,   170,    -1,    -1,   173,   174,    -1,   176,   177,
     178,    -1,    -1,   181,    -1,    -1,    -1,   185,    -1,   187,
      -1,   189,    -1,   191,   192,   193,   194,    -1,   196,    -1,
     198,    -1,    -1,    -1,   202,   203,    -1,   205,    -1,    -1,
     208,   209,    -1,    -1,    -1,   213,   214,   215,   216,    -1,
      -1,   219,   220,   221,    -1,    -1,   224,    -1,    -1,    -1,
      -1,   229,   230,    -1,    -1,    -1,   234,    -1,   236,   237,
      -1,   239,   240,    -1,    -1,    -1,   244,    -1,    -1,   247,
     248,    -1,    -1,   251,    -1,    -1,   254,   255,    -1,    -1,
      -1,    -1,    -1,   261,   262,    -1,   264,    -1,   266,    -1,
     268,   269,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,    -1,   296,   297,
     298,    -1,   300,   301,   302,   303,    -1,   305,   306,    -1,
      -1,    -1,    -1,   311,   312,   313,   314,   315,   316,    -1,
      -1,   319,   320,    -1,   322,    -1,   324,    -1,   326,   327,
     328,   329,   330,   331,   332,   333,   334,    -1,    -1,   337,
     338,    -1,    -1,   341,   342,   343,   344,    -1,    -1,    -1,
     348,   349,    -1,    -1,    -1,   353,    -1,   355,   356,   357,
      -1,    -1,   360,   361,    -1,   363,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   373,   374,   375,    -1,   377,
     378,    -1,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,    -1,    -1,   392,   393,   394,    -1,   396,    -1,
     398,   399,   400,   401,   402,    -1,   404,   405,   406,    -1,
      -1,   409,    -1,    -1,    -1,   413,   414,   415,   416,   417,
      -1,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
      -1,   429,   430,   431,    -1,    -1,   434,    -1,   436,    -1,
     438,   439,    -1,   441,   442,   443,    -1,   445,    -1,    -1,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,    -1,   460,   461,    -1,    -1,    -1,   465,   466,   467,
     468,    -1,    -1,    -1,   472,    -1,    -1,    -1,   476,    -1,
     478,   479,   480,   481,    -1,   483,   484,   485,   486,   487,
      -1,    -1,    -1,    -1,    -1,    -1,   494,   495,    -1,   497,
      -1,    -1,   500,    -1,    -1,   503,   504,   505,    -1,    -1,
     508,   509,    -1,   511,   512,   513,   514,   515,   516,    -1,
      -1,   519,   520,   521,   522,    -1,   524,   525,    -1,    -1,
     528,   529,   530,   531,    -1,    -1,   534,   535,    -1,   537,
     538,   539,   540,    -1,    -1,    -1,    -1,    -1,   546,   547,
      -1,    -1,    -1,   551,   552,   553,   554,    -1,   556,   557,
      -1,   559,   560,    -1,   562,   563,    -1,    -1,   566,    -1,
      -1,   569,    -1,   571,    -1,   573,   574,    -1,    -1,    -1,
      -1,    -1,    -1,   581,    -1,    -1,   584,    -1,    -1,    -1,
     588,   589,   590,   591,   592,    -1,    -1,    -1,    -1,    -1,
      -1,   599,   600,    -1,   602,   603,   604,    -1,    -1,   607,
      -1,    -1,     5,    -1,     7,     8,     9,    10,    11,    -1,
     618,    -1,    -1,    -1,    17,    -1,    -1,    20,   626,    22,
      23,    24,    25,    26,    27,    28,    -1,    30,    -1,    -1,
      -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    41,    42,
      43,    -1,    45,    -1,    47,    48,    -1,    -1,    51,    -1,
      -1,    54,    55,    -1,    57,    58,    -1,    60,    -1,    62,
      63,    64,    65,    66,    67,    -1,    69,    70,    -1,    72,
      73,    74,    75,    76,    77,    78,    79,    -1,    81,    82,
      -1,    84,    85,    86,    87,    88,    -1,    90,    -1,    -1,
      93,    -1,    -1,    96,    -1,    98,    -1,    -1,   101,    -1,
      -1,    -1,   105,   106,   107,    -1,    -1,   110,    -1,    -1,
      -1,    -1,   115,   116,    -1,    -1,    -1,    -1,   121,   122,
      -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,
     133,   134,    -1,    -1,    -1,   138,    -1,    -1,   141,   142,
     143,    -1,    -1,    -1,   147,    -1,   149,   150,    -1,   152,
     153,   154,    -1,    -1,   157,   158,    -1,   160,   161,   162,
     163,   164,   165,    -1,    -1,   168,   169,   170,    -1,    -1,
     173,   174,    -1,   176,   177,   178,    -1,    -1,   181,    -1,
      -1,    -1,   185,    -1,   187,    -1,   189,    -1,   191,   192,
     193,   194,    -1,   196,    -1,   198,    -1,    -1,    -1,   202,
     203,    -1,   205,    -1,    -1,   208,   209,    -1,    -1,    -1,
     213,   214,   215,   216,    -1,    -1,   219,   220,   221,    -1,
      -1,   224,    -1,    -1,    -1,    -1,   229,   230,    -1,    -1,
      -1,   234,    -1,   236,   237,    -1,   239,   240,    -1,    -1,
      -1,   244,    -1,    -1,   247,   248,    -1,    -1,   251,    -1,
      -1,   254,   255,    -1,    -1,    -1,    -1,    -1,   261,   262,
      -1,   264,    -1,   266,    -1,   268,   269,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,    -1,   296,   297,   298,    -1,   300,   301,   302,
     303,    -1,   305,   306,    -1,    -1,    -1,    -1,   311,   312,
     313,   314,   315,   316,    -1,    -1,   319,   320,    -1,   322,
      -1,   324,    -1,   326,   327,   328,   329,   330,   331,   332,
     333,   334,    -1,    -1,   337,   338,    -1,    -1,   341,   342,
     343,   344,    -1,    -1,    -1,   348,   349,    -1,    -1,    -1,
     353,    -1,   355,   356,   357,    -1,    -1,   360,   361,    -1,
     363,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     373,   374,   375,    -1,   377,   378,    -1,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,    -1,    -1,   392,
     393,   394,    -1,   396,    -1,   398,   399,   400,   401,   402,
      -1,   404,   405,   406,    -1,    -1,   409,    -1,    -1,    -1,
     413,   414,   415,   416,   417,    -1,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,    -1,   429,   430,   431,    -1,
      -1,   434,    -1,   436,    -1,   438,   439,    -1,   441,   442,
     443,    -1,   445,    -1,    -1,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,    -1,   460,   461,    -1,
      -1,    -1,   465,   466,   467,   468,    -1,    -1,    -1,   472,
      -1,    -1,    -1,   476,    -1,   478,   479,   480,   481,    -1,
     483,   484,   485,   486,   487,    -1,    -1,    -1,    -1,    -1,
      -1,   494,   495,    -1,   497,    -1,    -1,   500,    -1,    -1,
     503,   504,   505,    -1,    -1,   508,   509,    -1,   511,   512,
     513,   514,   515,   516,    -1,    -1,   519,   520,   521,   522,
      -1,   524,   525,    -1,    -1,   528,   529,   530,   531,    -1,
      -1,   534,   535,    -1,   537,   538,   539,   540,    -1,    -1,
      -1,    -1,    -1,   546,   547,    -1,    -1,    -1,   551,   552,
     553,   554,    -1,   556,   557,    -1,   559,   560,    -1,   562,
     563,    -1,    -1,   566,    -1,    -1,   569,    -1,   571,    -1,
     573,   574,    -1,    -1,    -1,    -1,    -1,    -1,   581,    -1,
      -1,   584,    -1,    -1,    -1,   588,   589,   590,   591,   592,
      -1,    -1,    -1,    -1,    -1,    -1,   599,   600,    -1,   602,
     603,   604,    -1,    -1,   607,    -1,    -1,    -1,    -1,     5,
      -1,     7,     8,     9,    10,    11,    -1,    -1,    -1,    -1,
      -1,    17,   625,   626,    20,    -1,    22,    23,    24,    25,
      26,    27,    28,    -1,    30,    -1,    -1,    -1,    34,    -1,
      -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,    45,
      -1,    47,    48,    -1,    -1,    51,    -1,    -1,    54,    55,
      -1,    57,    58,    -1,    60,    -1,    62,    63,    64,    65,
      66,    67,    -1,    69,    70,    -1,    72,    73,    74,    75,
      76,    77,    78,    79,    -1,    81,    82,    -1,    84,    85,
      86,    87,    88,    -1,    90,    -1,    -1,    93,    -1,    -1,
      96,    -1,    98,    -1,    -1,   101,    -1,    -1,    -1,   105,
     106,   107,    -1,    -1,   110,    -1,    -1,    -1,    -1,   115,
     116,    -1,    -1,    -1,    -1,   121,   122,    -1,   124,    -1,
      -1,    -1,   128,    -1,   130,   131,   132,   133,   134,    -1,
      -1,    -1,   138,    -1,    -1,   141,   142,   143,    -1,    -1,
      -1,   147,    -1,   149,   150,    -1,   152,   153,   154,    -1,
      -1,   157,   158,    -1,   160,   161,   162,   163,   164,   165,
      -1,    -1,   168,   169,   170,    -1,    -1,   173,   174,    -1,
     176,   177,   178,    -1,    -1,   181,    -1,    -1,    -1,   185,
      -1,   187,    -1,   189,    -1,   191,   192,   193,   194,    -1,
     196,    -1,   198,    -1,    -1,    -1,   202,   203,    -1,   205,
      -1,    -1,   208,   209,    -1,    -1,    -1,   213,   214,   215,
     216,    -1,    -1,   219,   220,   221,    -1,    -1,   224,    -1,
      -1,    -1,    -1,   229,   230,    -1,    -1,    -1,   234,    -1,
     236,   237,    -1,   239,   240,    -1,    -1,    -1,   244,    -1,
      -1,   247,   248,    -1,    -1,   251,    -1,    -1,   254,   255,
      -1,    -1,    -1,    -1,    -1,   261,   262,    -1,   264,    -1,
     266,    -1,   268,   269,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,    -1,
     296,   297,   298,    -1,   300,   301,   302,   303,    -1,   305,
     306,    -1,    -1,    -1,    -1,   311,   312,   313,   314,   315,
     316,    -1,    -1,   319,   320,    -1,   322,    -1,   324,    -1,
     326,   327,   328,   329,   330,   331,   332,   333,   334,    -1,
      -1,   337,   338,    -1,    -1,   341,   342,   343,   344,    -1,
      -1,    -1,   348,   349,    -1,    -1,    -1,   353,    -1,   355,
     356,   357,    -1,    -1,   360,   361,    -1,   363,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   373,   374,   375,
      -1,   377,   378,    -1,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,    -1,    -1,   392,   393,   394,    -1,
     396,    -1,   398,   399,   400,   401,   402,    -1,   404,   405,
     406,    -1,    -1,   409,    -1,    -1,    -1,   413,   414,   415,
     416,   417,    -1,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,    -1,   429,   430,   431,    -1,    -1,   434,    -1,
     436,    -1,   438,   439,    -1,   441,   442,   443,    -1,   445,
      -1,    -1,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,    -1,   460,   461,    -1,    -1,    -1,   465,
     466,   467,   468,    -1,    -1,    -1,   472,    -1,    -1,    -1,
     476,    -1,   478,   479,   480,   481,    -1,   483,   484,   485,
     486,   487,    -1,    -1,    -1,    -1,    -1,    -1,   494,   495,
      -1,   497,    -1,    -1,   500,    -1,    -1,   503,   504,   505,
      -1,    -1,   508,   509,    -1,   511,   512,   513,   514,   515,
     516,    -1,    -1,   519,   520,   521,   522,    -1,   524,   525,
      -1,    -1,   528,   529,   530,   531,    -1,    -1,   534,   535,
      -1,   537,   538,   539,   540,    -1,    -1,    -1,    -1,    -1,
     546,   547,    -1,    -1,    -1,   551,   552,   553,   554,    -1,
     556,   557,    -1,   559,   560,    -1,   562,   563,    -1,    -1,
     566,    -1,    -1,   569,    -1,   571,    -1,   573,   574,    -1,
      -1,    -1,    -1,    -1,    -1,   581,    -1,    -1,   584,    -1,
      -1,    -1,   588,   589,   590,   591,   592,    -1,    -1,    -1,
      -1,    -1,    -1,   599,   600,    -1,   602,   603,   604,    -1,
      -1,   607,    -1,    -1,     5,    -1,     7,     8,     9,    10,
      11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,    20,
     626,    22,    23,    24,    25,    26,    27,    28,    -1,    30,
      -1,    -1,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,
      41,    42,    43,    -1,    45,    -1,    47,    48,    -1,    -1,
      51,    -1,    -1,    54,    55,    -1,    57,    58,    -1,    60,
      -1,    62,    63,    64,    65,    66,    67,    -1,    69,    70,
      -1,    72,    73,    74,    75,    76,    77,    78,    79,    -1,
      81,    82,    -1,    84,    85,    86,    87,    88,    -1,    90,
      -1,    -1,    93,    -1,    -1,    96,    -1,    98,    -1,    -1,
     101,    -1,    -1,    -1,   105,   106,   107,    -1,    -1,   110,
      -1,    -1,    -1,    -1,   115,   116,    -1,    -1,    -1,    -1,
     121,   122,    -1,   124,    -1,    -1,    -1,   128,    -1,   130,
     131,   132,   133,   134,    -1,    -1,    -1,   138,    -1,    -1,
     141,   142,   143,    -1,    -1,    -1,   147,    -1,   149,   150,
      -1,   152,   153,   154,    -1,    -1,   157,   158,    -1,   160,
     161,   162,   163,   164,   165,    -1,    -1,   168,   169,   170,
      -1,    -1,   173,   174,    -1,   176,   177,   178,    -1,    -1,
     181,    -1,    -1,    -1,   185,    -1,   187,    -1,   189,    -1,
     191,   192,   193,   194,    -1,   196,    -1,   198,    -1,    -1,
      -1,   202,   203,    -1,   205,    -1,    -1,   208,   209,    -1,
      -1,    -1,   213,   214,   215,   216,    -1,    -1,   219,   220,
     221,    -1,    -1,   224,    -1,    -1,    -1,    -1,   229,   230,
      -1,    -1,    -1,   234,    -1,   236,   237,    -1,   239,   240,
      -1,    -1,    -1,   244,    -1,    -1,   247,   248,    -1,    -1,
     251,    -1,    -1,   254,   255,    -1,    -1,    -1,    -1,    -1,
     261,   262,    -1,   264,    -1,   266,    -1,   268,   269,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,    -1,   296,   297,   298,    -1,   300,
     301,   302,   303,    -1,   305,   306,    -1,    -1,    -1,    -1,
     311,   312,   313,   314,   315,   316,    -1,    -1,   319,   320,
      -1,   322,    -1,   324,    -1,   326,   327,   328,   329,   330,
     331,   332,   333,   334,    -1,    -1,   337,   338,    -1,    -1,
     341,   342,   343,   344,    -1,    -1,    -1,   348,   349,    -1,
      -1,    -1,   353,    -1,   355,   356,   357,    -1,    -1,   360,
     361,    -1,   363,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   373,   374,   375,    -1,   377,   378,    -1,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,    -1,
      -1,   392,   393,   394,    -1,   396,    -1,   398,   399,   400,
     401,   402,    -1,   404,   405,   406,    -1,    -1,   409,    -1,
      -1,    -1,   413,   414,   415,   416,   417,    -1,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,    -1,   429,   430,
     431,    -1,    -1,   434,    -1,   436,    -1,   438,   439,    -1,
     441,   442,   443,    -1,   445,    -1,    -1,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,    -1,   460,
     461,    -1,    -1,    -1,   465,   466,   467,   468,    -1,    -1,
      -1,   472,    -1,    -1,    -1,   476,    -1,   478,   479,   480,
     481,    -1,   483,   484,   485,   486,   487,    -1,    -1,    -1,
      -1,    -1,    -1,   494,   495,    -1,   497,    -1,    -1,   500,
      -1,    -1,   503,   504,   505,    -1,    -1,   508,   509,    -1,
     511,   512,   513,   514,   515,   516,    -1,    -1,   519,   520,
     521,   522,    -1,   524,   525,    -1,    -1,   528,   529,   530,
     531,    -1,    -1,   534,   535,    -1,   537,   538,   539,   540,
      -1,    -1,    -1,    -1,    -1,   546,   547,    -1,    -1,    -1,
     551,   552,   553,   554,    -1,   556,   557,    -1,   559,   560,
      -1,   562,   563,    -1,    -1,   566,    -1,    -1,   569,    -1,
     571,    -1,   573,   574,    -1,    -1,    -1,    -1,    -1,    -1,
     581,    -1,    -1,   584,    -1,    -1,    -1,   588,   589,   590,
     591,   592,    -1,    -1,    -1,    -1,    -1,    -1,   599,   600,
      -1,   602,   603,   604,    -1,    -1,   607,    -1,    -1,     5,
      -1,     7,     8,     9,    10,    11,    -1,    -1,    -1,    -1,
      -1,    17,    -1,    -1,    20,   626,    22,    23,    24,    25,
      26,    27,    28,    -1,    30,    -1,    -1,    -1,    34,    -1,
      -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,    45,
      -1,    47,    48,    -1,    -1,    51,    -1,    -1,    54,    55,
      -1,    57,    58,    -1,    60,    -1,    62,    63,    64,    65,
      66,    67,    -1,    69,    70,    -1,    72,    73,    74,    75,
      76,    77,    78,    79,    -1,    81,    82,    -1,    84,    85,
      86,    87,    88,    -1,    90,    -1,    -1,    93,    -1,    -1,
      96,    -1,    98,    -1,    -1,   101,    -1,    -1,    -1,   105,
     106,   107,    -1,    -1,   110,    -1,    -1,    -1,    -1,   115,
     116,    -1,    -1,    -1,    -1,   121,   122,    -1,   124,    -1,
      -1,    -1,   128,    -1,   130,   131,   132,   133,   134,    -1,
      -1,    -1,   138,    -1,    -1,   141,   142,   143,    -1,    -1,
      -1,   147,    -1,   149,   150,    -1,   152,   153,   154,    -1,
      -1,   157,   158,    -1,   160,   161,   162,   163,   164,   165,
      -1,    -1,   168,   169,   170,    -1,    -1,   173,   174,    -1,
     176,   177,   178,    -1,    -1,   181,    -1,    -1,    -1,   185,
      -1,   187,    -1,   189,    -1,   191,   192,   193,   194,    -1,
     196,    -1,   198,    -1,    -1,    -1,   202,   203,    -1,   205,
      -1,    -1,   208,   209,    -1,    -1,    -1,   213,   214,   215,
     216,    -1,    -1,   219,   220,   221,    -1,    -1,   224,    -1,
      -1,    -1,    -1,   229,   230,    -1,    -1,    -1,   234,    -1,
     236,   237,    -1,   239,   240,    -1,    -1,    -1,   244,    -1,
      -1,   247,   248,    -1,    -1,   251,    -1,    -1,   254,   255,
      -1,    -1,    -1,    -1,    -1,   261,   262,    -1,   264,    -1,
     266,    -1,   268,   269,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,    -1,
     296,   297,   298,    -1,   300,   301,   302,   303,    -1,   305,
     306,    -1,    -1,    -1,    -1,   311,   312,   313,   314,   315,
     316,    -1,    -1,   319,   320,    -1,   322,    -1,   324,    -1,
     326,   327,   328,   329,   330,   331,   332,   333,   334,    -1,
      -1,   337,   338,    -1,    -1,   341,   342,   343,   344,    -1,
      -1,    -1,   348,   349,    -1,    -1,    -1,   353,    -1,   355,
     356,   357,    -1,    -1,   360,   361,    -1,   363,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   373,   374,   375,
      -1,   377,   378,    -1,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,    -1,    -1,   392,   393,   394,    -1,
     396,    -1,   398,   399,   400,   401,   402,    -1,   404,   405,
     406,    -1,    -1,   409,    -1,    -1,    -1,   413,   414,   415,
     416,   417,    -1,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,    -1,   429,   430,   431,    -1,    -1,   434,    -1,
     436,    -1,   438,   439,    -1,   441,   442,   443,    -1,   445,
      -1,    -1,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,    -1,   460,   461,    -1,    -1,    -1,   465,
     466,   467,   468,    -1,    -1,    -1,   472,    -1,    -1,    -1,
     476,    -1,   478,   479,   480,   481,    -1,   483,   484,   485,
     486,   487,    -1,    -1,    -1,    -1,    -1,    -1,   494,   495,
      -1,   497,    -1,    -1,   500,    -1,    -1,   503,   504,   505,
      -1,    -1,   508,   509,    -1,   511,   512,   513,   514,   515,
     516,    -1,    -1,   519,   520,   521,   522,    -1,   524,   525,
      -1,    -1,   528,   529,   530,   531,    -1,    -1,   534,   535,
      -1,   537,   538,   539,   540,    -1,    -1,    -1,    -1,    -1,
     546,   547,    -1,    -1,    -1,   551,   552,   553,   554,    -1,
     556,   557,    -1,   559,   560,    -1,   562,   563,    -1,    -1,
     566,    -1,    -1,   569,    -1,   571,    -1,   573,   574,    -1,
      -1,    -1,    -1,    -1,    -1,   581,    -1,    -1,   584,    -1,
      -1,    -1,   588,   589,   590,   591,   592,    -1,    -1,    -1,
      -1,    -1,    -1,   599,   600,    -1,   602,   603,   604,    -1,
      -1,   607,    -1,    -1,     5,    -1,     7,     8,     9,    10,
      11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,    20,
     626,    22,    23,    24,    25,    26,    27,    28,    -1,    30,
      -1,    -1,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,
      41,    42,    43,    -1,    45,    -1,    47,    48,    -1,    -1,
      51,    -1,    -1,    54,    55,    -1,    57,    58,    -1,    60,
      -1,    62,    63,    64,    65,    66,    67,    -1,    69,    70,
      -1,    72,    73,    74,    75,    76,    77,    78,    79,    -1,
      81,    82,    -1,    84,    85,    86,    87,    88,    -1,    90,
      -1,    -1,    93,    -1,    -1,    96,    -1,    98,    -1,    -1,
     101,    -1,    -1,    -1,   105,   106,   107,    -1,    -1,   110,
      -1,    -1,    -1,    -1,   115,   116,    -1,    -1,    -1,    -1,
     121,   122,    -1,   124,    -1,    -1,    -1,   128,    -1,   130,
     131,   132,   133,   134,    -1,    -1,    -1,   138,    -1,    -1,
     141,   142,   143,    -1,    -1,    -1,   147,    -1,   149,   150,
      -1,   152,   153,   154,    -1,    -1,   157,   158,    -1,   160,
     161,   162,   163,   164,   165,    -1,    -1,   168,   169,   170,
      -1,    -1,   173,   174,    -1,   176,   177,   178,    -1,    -1,
     181,    -1,    -1,    -1,   185,    -1,   187,    -1,   189,    -1,
     191,   192,   193,   194,    -1,   196,    -1,   198,    -1,    -1,
      -1,   202,   203,    -1,   205,    -1,    -1,   208,   209,    -1,
      -1,    -1,   213,   214,   215,   216,    -1,    -1,   219,   220,
     221,    -1,    -1,   224,    -1,    -1,    -1,    -1,   229,   230,
      -1,    -1,    -1,   234,    -1,   236,   237,    -1,   239,   240,
      -1,    -1,    -1,   244,    -1,    -1,   247,   248,    -1,    -1,
     251,    -1,    -1,   254,   255,    -1,    -1,    -1,    -1,    -1,
     261,   262,    -1,   264,    -1,   266,    -1,   268,   269,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,    -1,   296,   297,   298,    -1,   300,
     301,   302,   303,    -1,   305,   306,    -1,    -1,    -1,    -1,
     311,   312,   313,   314,   315,   316,    -1,    -1,   319,   320,
      -1,   322,    -1,   324,    -1,   326,   327,   328,   329,   330,
     331,   332,   333,   334,    -1,    -1,   337,   338,    -1,    -1,
     341,   342,   343,   344,    -1,    -1,    -1,   348,   349,    -1,
      -1,    -1,   353,    -1,   355,   356,   357,    -1,    -1,   360,
     361,    -1,   363,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   373,   374,   375,    -1,   377,   378,    -1,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,    -1,
      -1,   392,   393,   394,    -1,   396,    -1,   398,   399,   400,
     401,   402,    -1,   404,   405,   406,    -1,    -1,   409,    -1,
      -1,    -1,   413,   414,   415,   416,   417,    -1,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,    -1,   429,   430,
     431,    -1,    -1,   434,    -1,   436,    -1,   438,   439,    -1,
     441,   442,   443,    -1,   445,    -1,    -1,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,    -1,   460,
     461,    -1,    -1,    -1,   465,   466,   467,   468,    -1,    -1,
      -1,   472,    -1,    -1,    -1,   476,    -1,   478,   479,   480,
     481,    -1,   483,   484,   485,   486,   487,    -1,    -1,    -1,
      -1,    -1,    -1,   494,   495,    -1,   497,    -1,    -1,   500,
      -1,    -1,   503,   504,   505,    -1,    -1,   508,   509,    -1,
     511,   512,   513,   514,   515,   516,    -1,    -1,   519,   520,
     521,   522,    -1,   524,   525,    -1,    -1,   528,   529,   530,
     531,    -1,    -1,   534,   535,    -1,   537,   538,   539,   540,
      -1,    -1,    -1,    -1,    -1,   546,   547,    -1,    -1,    -1,
     551,   552,   553,   554,    -1,   556,   557,    -1,   559,   560,
      -1,   562,   563,    -1,    -1,   566,    -1,    -1,   569,    -1,
     571,    -1,   573,   574,    -1,    -1,    -1,    -1,    -1,    -1,
     581,    -1,    -1,   584,    -1,    -1,    -1,   588,   589,   590,
     591,   592,    -1,    -1,    -1,    -1,    -1,    -1,   599,   600,
      -1,   602,   603,   604,    -1,    -1,   607,    -1,    -1,     5,
      -1,     7,     8,     9,    10,    11,    -1,    -1,    -1,    -1,
      -1,    17,    -1,    -1,    20,   626,    22,    23,    24,    25,
      26,    27,    28,    -1,    30,    -1,    -1,    -1,    34,    -1,
      -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,    45,
      -1,    47,    48,    -1,    -1,    51,    -1,    -1,    54,    55,
      -1,    57,    58,    -1,    60,    -1,    62,    63,    64,    65,
      66,    67,    -1,    69,    70,    -1,    72,    73,    74,    75,
      76,    77,    78,    79,    -1,    81,    82,    -1,    84,    85,
      86,    87,    88,    -1,    90,    -1,    -1,    93,    -1,    -1,
      96,    -1,    98,    -1,    -1,   101,    -1,    -1,    -1,   105,
     106,   107,    -1,    -1,   110,    -1,    -1,    -1,    -1,   115,
     116,    -1,    -1,    -1,    -1,   121,   122,    -1,   124,    -1,
      -1,    -1,   128,    -1,   130,   131,   132,   133,   134,    -1,
      -1,    -1,   138,    -1,    -1,   141,   142,   143,    -1,    -1,
      -1,   147,    -1,   149,   150,    -1,   152,   153,   154,    -1,
      -1,   157,   158,    -1,   160,   161,   162,   163,   164,   165,
      -1,    -1,   168,   169,   170,    -1,    -1,   173,   174,    -1,
     176,   177,   178,    -1,    -1,   181,    -1,    -1,    -1,   185,
      -1,   187,    -1,   189,    -1,   191,   192,   193,   194,    -1,
     196,    -1,   198,    -1,    -1,    -1,   202,   203,    -1,   205,
      -1,    -1,   208,   209,    -1,    -1,    -1,   213,   214,   215,
     216,    -1,    -1,   219,   220,   221,    -1,    -1,   224,    -1,
      -1,    -1,    -1,   229,   230,    -1,    -1,    -1,   234,    -1,
     236,   237,    -1,   239,   240,    -1,    -1,    -1,   244,    -1,
      -1,   247,   248,    -1,    -1,   251,    -1,    -1,   254,   255,
     256,    -1,    -1,    -1,    -1,   261,   262,    -1,   264,    -1,
     266,    -1,   268,   269,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,    -1,
     296,   297,   298,    -1,   300,   301,   302,   303,    -1,   305,
     306,    -1,    -1,    -1,    -1,   311,   312,   313,   314,   315,
     316,    -1,    -1,   319,   320,    -1,   322,    -1,   324,    -1,
     326,   327,   328,   329,   330,   331,   332,   333,   334,    -1,
      -1,   337,   338,    -1,    -1,   341,   342,   343,   344,    -1,
      -1,    -1,   348,   349,    -1,    -1,    -1,   353,    -1,   355,
     356,   357,    -1,    -1,   360,   361,    -1,   363,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   373,   374,   375,
      -1,   377,   378,    -1,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,    -1,    -1,   392,   393,   394,    -1,
     396,    -1,   398,   399,   400,   401,   402,    -1,   404,   405,
     406,    -1,    -1,   409,    -1,    -1,    -1,   413,   414,   415,
     416,   417,    -1,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,    -1,   429,   430,   431,    -1,    -1,   434,    -1,
     436,    -1,   438,   439,    -1,   441,   442,   443,    -1,   445,
      -1,    -1,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,    -1,   460,   461,    -1,    -1,    -1,   465,
     466,   467,   468,    -1,    -1,    -1,   472,    -1,    -1,    -1,
     476,    -1,   478,   479,   480,   481,    -1,   483,   484,   485,
     486,   487,    -1,    -1,    -1,    -1,    -1,    -1,   494,   495,
      -1,   497,    -1,    -1,   500,    -1,    -1,   503,   504,   505,
      -1,    -1,   508,   509,    -1,   511,   512,   513,   514,   515,
     516,    -1,    -1,   519,   520,   521,   522,    -1,   524,   525,
      -1,    -1,   528,   529,   530,   531,    -1,   533,   534,   535,
      -1,   537,   538,   539,   540,    -1,    -1,    -1,    -1,    -1,
     546,   547,    -1,    -1,    -1,   551,   552,   553,   554,    -1,
     556,   557,    -1,   559,   560,    -1,   562,   563,    -1,    -1,
     566,    -1,    -1,   569,    -1,   571,    -1,   573,   574,    -1,
      -1,    -1,    -1,    -1,    -1,   581,    -1,    -1,   584,    -1,
      -1,    -1,   588,   589,   590,   591,   592,    -1,    -1,    -1,
      -1,    -1,    -1,   599,   600,    -1,   602,   603,   604,    -1,
      -1,   607,    -1,     5,    -1,     7,     8,     9,    10,    11,
      -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,    20,   625,
      22,    23,    24,    25,    26,    27,    28,    -1,    30,    -1,
      -1,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    41,
      42,    43,    -1,    45,    -1,    47,    48,    -1,    -1,    51,
      -1,    -1,    54,    55,    -1,    57,    58,    -1,    60,    -1,
      62,    63,    64,    65,    66,    67,    -1,    69,    70,    -1,
      72,    73,    74,    75,    76,    77,    78,    79,    -1,    81,
      82,    -1,    84,    85,    86,    87,    88,    -1,    90,    -1,
      -1,    93,    -1,    -1,    96,    -1,    98,    -1,    -1,   101,
      -1,    -1,    -1,   105,   106,   107,    -1,    -1,   110,    -1,
      -1,    -1,    -1,   115,   116,    -1,    -1,    -1,    -1,   121,
     122,    -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,
     132,   133,   134,    -1,    -1,    -1,   138,    -1,    -1,   141,
     142,   143,    -1,    -1,    -1,   147,    -1,   149,   150,    -1,
     152,   153,   154,    -1,    -1,   157,   158,    -1,   160,   161,
     162,   163,   164,   165,    -1,    -1,   168,   169,   170,    -1,
      -1,   173,   174,    -1,   176,   177,   178,    -1,    -1,   181,
      -1,    -1,    -1,   185,    -1,   187,    -1,   189,    -1,   191,
     192,   193,   194,    -1,   196,    -1,   198,    -1,    -1,    -1,
     202,   203,    -1,   205,    -1,    -1,   208,   209,    -1,    -1,
      -1,   213,   214,   215,   216,    -1,    -1,   219,   220,   221,
      -1,    -1,   224,    -1,    -1,    -1,    -1,   229,   230,    -1,
      -1,    -1,   234,    -1,   236,   237,    -1,   239,   240,    -1,
      -1,    -1,   244,    -1,    -1,   247,   248,    -1,    -1,   251,
      -1,    -1,   254,   255,   256,    -1,    -1,    -1,    -1,   261,
     262,    -1,   264,    -1,   266,    -1,   268,   269,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,    -1,   296,   297,   298,    -1,   300,   301,
     302,   303,    -1,   305,   306,    -1,    -1,    -1,    -1,   311,
     312,   313,   314,   315,   316,    -1,    -1,   319,   320,    -1,
     322,    -1,   324,    -1,   326,   327,   328,   329,   330,   331,
     332,   333,   334,    -1,    -1,   337,   338,    -1,    -1,   341,
     342,   343,   344,    -1,    -1,    -1,   348,   349,    -1,    -1,
      -1,   353,    -1,   355,   356,   357,    -1,    -1,   360,   361,
      -1,   363,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   373,   374,   375,    -1,   377,   378,    -1,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,    -1,    -1,
     392,   393,   394,    -1,   396,    -1,   398,   399,   400,   401,
     402,    -1,   404,   405,   406,    -1,    -1,   409,    -1,    -1,
      -1,   413,   414,   415,   416,   417,    -1,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,    -1,   429,   430,   431,
      -1,    -1,   434,    -1,   436,    -1,   438,   439,    -1,   441,
     442,   443,    -1,   445,    -1,    -1,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,    -1,   460,   461,
      -1,    -1,    -1,   465,   466,   467,   468,    -1,    -1,    -1,
     472,    -1,    -1,    -1,   476,    -1,   478,   479,   480,   481,
      -1,   483,   484,   485,   486,   487,    -1,    -1,    -1,    -1,
      -1,    -1,   494,   495,    -1,   497,    -1,    -1,   500,    -1,
      -1,   503,   504,   505,    -1,    -1,   508,   509,    -1,   511,
     512,   513,   514,   515,   516,    -1,    -1,   519,   520,   521,
     522,    -1,   524,   525,    -1,    -1,   528,   529,   530,   531,
      -1,   533,   534,   535,    -1,   537,   538,   539,   540,    -1,
      -1,    -1,    -1,    -1,   546,   547,    -1,    -1,    -1,   551,
     552,   553,   554,    -1,   556,   557,    -1,   559,   560,    -1,
     562,   563,    -1,    -1,   566,    -1,    -1,   569,    -1,   571,
      -1,   573,   574,    -1,    -1,    -1,    -1,    -1,    -1,   581,
      -1,    -1,   584,    -1,    -1,    -1,   588,   589,   590,   591,
     592,    -1,    -1,    -1,    -1,    -1,    -1,   599,   600,    -1,
     602,   603,   604,    -1,    -1,   607,    -1,     5,    -1,     7,
       8,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,
      -1,    -1,    20,   625,    22,    23,    24,    25,    26,    27,
      28,    -1,    30,    -1,    -1,    -1,    34,    -1,    -1,    -1,
      38,    -1,    -1,    41,    42,    43,    -1,    45,    -1,    47,
      48,    -1,    -1,    51,    -1,    -1,    54,    55,    -1,    57,
      58,    -1,    60,    -1,    62,    63,    64,    65,    66,    67,
      -1,    69,    70,    -1,    72,    73,    74,    75,    76,    77,
      78,    79,    -1,    81,    82,    -1,    84,    85,    86,    87,
      88,    -1,    90,    -1,    -1,    93,    -1,    -1,    96,    -1,
      98,    -1,    -1,   101,    -1,    -1,    -1,   105,   106,   107,
      -1,    -1,   110,    -1,    -1,    -1,    -1,   115,   116,    -1,
      -1,    -1,    -1,   121,   122,    -1,   124,    -1,    -1,    -1,
     128,    -1,   130,   131,   132,   133,   134,    -1,    -1,    -1,
     138,    -1,    -1,   141,   142,   143,    -1,    -1,    -1,   147,
      -1,   149,   150,    -1,   152,   153,   154,    -1,    -1,   157,
     158,    -1,   160,   161,   162,   163,   164,   165,    -1,    -1,
     168,   169,   170,    -1,    -1,   173,   174,    -1,   176,   177,
     178,    -1,    -1,   181,    -1,    -1,    -1,   185,    -1,   187,
      -1,   189,    -1,   191,   192,   193,   194,    -1,   196,    -1,
     198,    -1,    -1,    -1,   202,   203,    -1,   205,    -1,    -1,
     208,   209,    -1,    -1,    -1,   213,   214,   215,   216,    -1,
      -1,   219,   220,   221,    -1,    -1,   224,    -1,    -1,    -1,
      -1,   229,   230,    -1,    -1,    -1,   234,    -1,   236,   237,
      -1,   239,   240,    -1,    -1,    -1,   244,    -1,    -1,   247,
     248,    -1,    -1,   251,    -1,    -1,   254,   255,   256,    -1,
      -1,    -1,    -1,   261,   262,    -1,   264,    -1,   266,    -1,
     268,   269,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,    -1,   296,   297,
     298,    -1,   300,   301,   302,   303,    -1,   305,   306,    -1,
      -1,    -1,    -1,   311,   312,   313,   314,   315,   316,    -1,
      -1,   319,   320,    -1,   322,    -1,   324,    -1,   326,   327,
     328,   329,   330,   331,   332,   333,   334,    -1,    -1,   337,
     338,    -1,    -1,   341,   342,   343,   344,    -1,    -1,    -1,
     348,   349,    -1,    -1,    -1,   353,    -1,   355,   356,   357,
      -1,    -1,   360,   361,    -1,   363,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   373,   374,   375,    -1,   377,
     378,    -1,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,    -1,    -1,   392,   393,   394,    -1,   396,    -1,
     398,   399,   400,   401,   402,    -1,   404,   405,   406,    -1,
      -1,   409,    -1,    -1,    -1,   413,   414,   415,   416,   417,
      -1,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
      -1,   429,   430,   431,    -1,    -1,   434,    -1,   436,    -1,
     438,   439,    -1,   441,   442,   443,    -1,   445,    -1,    -1,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,    -1,   460,   461,    -1,    -1,    -1,   465,   466,   467,
     468,    -1,    -1,    -1,   472,    -1,    -1,    -1,   476,    -1,
     478,   479,   480,   481,    -1,   483,   484,   485,   486,   487,
      -1,    -1,    -1,    -1,    -1,    -1,   494,   495,    -1,   497,
      -1,    -1,   500,    -1,    -1,   503,   504,   505,    -1,    -1,
     508,   509,    -1,   511,   512,   513,   514,   515,   516,    -1,
      -1,   519,   520,   521,   522,    -1,   524,   525,    -1,    -1,
     528,   529,   530,   531,    -1,   533,   534,   535,    -1,   537,
     538,   539,   540,    -1,    -1,    -1,    -1,    -1,   546,   547,
      -1,    -1,    -1,   551,   552,   553,   554,    -1,   556,   557,
      -1,   559,   560,    -1,   562,   563,    -1,    -1,   566,    -1,
      -1,   569,    -1,   571,    -1,   573,   574,    -1,    -1,    -1,
      -1,    -1,    -1,   581,    -1,    -1,   584,    -1,    -1,    -1,
     588,   589,   590,   591,   592,    -1,    -1,    -1,    -1,    -1,
      -1,   599,   600,    -1,   602,   603,   604,    -1,    -1,   607,
      -1,     5,    -1,     7,     8,     9,    10,    11,    -1,    -1,
      -1,    -1,    -1,    17,    -1,    -1,    20,   625,    22,    23,
      24,    25,    26,    27,    28,    -1,    30,    -1,    -1,    -1,
      34,    -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,
      -1,    45,    -1,    47,    48,    -1,    -1,    51,    -1,    -1,
      54,    55,    -1,    57,    58,    -1,    60,    -1,    62,    63,
      64,    65,    66,    67,    -1,    69,    70,    -1,    72,    73,
      74,    75,    76,    77,    78,    79,    80,    81,    82,    -1,
      84,    85,    86,    87,    88,    -1,    90,    -1,    -1,    93,
      -1,    -1,    96,    -1,    98,    -1,    -1,   101,    -1,    -1,
      -1,   105,   106,   107,    -1,    -1,   110,    -1,    -1,    -1,
      -1,   115,   116,    -1,    -1,    -1,    -1,   121,   122,    -1,
     124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,
     134,    -1,    -1,    -1,   138,    -1,    -1,   141,   142,   143,
      -1,    -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,
     154,    -1,    -1,   157,   158,    -1,   160,   161,   162,   163,
     164,   165,    -1,    -1,   168,   169,   170,    -1,    -1,   173,
     174,    -1,   176,   177,   178,    -1,    -1,   181,    -1,    -1,
      -1,   185,    -1,   187,    -1,   189,    -1,   191,   192,   193,
     194,    -1,   196,    -1,   198,    -1,    -1,    -1,   202,   203,
      -1,   205,    -1,    -1,   208,   209,    -1,    -1,    -1,   213,
     214,   215,   216,    -1,    -1,   219,   220,   221,    -1,    -1,
     224,    -1,    -1,    -1,    -1,   229,   230,    -1,    -1,    -1,
     234,    -1,   236,   237,    -1,   239,   240,    -1,    -1,    -1,
     244,    -1,    -1,   247,   248,    -1,    -1,   251,    -1,    -1,
     254,   255,    -1,    -1,    -1,    -1,    -1,   261,   262,    -1,
     264,    -1,   266,    -1,   268,   269,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,    -1,   296,   297,   298,    -1,   300,   301,   302,   303,
      -1,   305,   306,    -1,    -1,    -1,    -1,   311,   312,   313,
     314,   315,   316,    -1,    -1,   319,   320,    -1,   322,    -1,
     324,    -1,   326,   327,   328,   329,   330,   331,   332,   333,
     334,    -1,    -1,   337,   338,    -1,    -1,   341,   342,   343,
     344,    -1,    -1,    -1,   348,   349,    -1,    -1,    -1,   353,
      -1,   355,   356,   357,    -1,    -1,   360,   361,    -1,   363,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   373,
     374,   375,    -1,   377,   378,    -1,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,    -1,    -1,   392,   393,
     394,    -1,   396,    -1,   398,   399,   400,   401,   402,    -1,
     404,   405,   406,    -1,    -1,   409,    -1,    -1,    -1,   413,
     414,   415,   416,   417,    -1,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,    -1,   429,   430,   431,    -1,    -1,
     434,    -1,   436,    -1,   438,   439,    -1,   441,   442,   443,
      -1,   445,    -1,    -1,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,    -1,   460,   461,    -1,    -1,
      -1,   465,   466,   467,   468,    -1,    -1,    -1,   472,    -1,
      -1,    -1,   476,    -1,   478,   479,   480,   481,    -1,   483,
     484,   485,   486,   487,    -1,    -1,    -1,    -1,    -1,    -1,
     494,   495,    -1,   497,    -1,    -1,   500,    -1,    -1,   503,
     504,   505,    -1,    -1,   508,   509,    -1,   511,   512,   513,
     514,   515,   516,    -1,    -1,   519,   520,   521,   522,    -1,
     524,   525,    -1,    -1,   528,   529,   530,   531,    -1,    -1,
     534,   535,    -1,   537,   538,   539,   540,    -1,    -1,    -1,
      -1,    -1,   546,   547,    -1,    -1,    -1,   551,   552,   553,
     554,    -1,   556,   557,    -1,   559,   560,    -1,   562,   563,
      -1,    -1,   566,    -1,    -1,   569,    -1,   571,    -1,   573,
     574,    -1,    -1,    -1,    -1,    -1,    -1,   581,    -1,    -1,
     584,    -1,    -1,    -1,   588,   589,   590,   591,   592,    -1,
      -1,    -1,    -1,    -1,    -1,   599,   600,    -1,   602,   603,
     604,    -1,    -1,   607,    -1,     5,    -1,     7,     8,     9,
      10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,
      20,   625,    22,    23,    24,    25,    26,    27,    28,    -1,
      30,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,    -1,
      -1,    41,    42,    43,    -1,    45,    -1,    47,    48,    -1,
      -1,    51,    -1,    -1,    54,    55,    -1,    57,    58,    -1,
      60,    -1,    62,    63,    64,    65,    66,    67,    -1,    69,
      70,    -1,    72,    73,    74,    75,    76,    77,    78,    79,
      -1,    81,    82,    -1,    84,    85,    86,    87,    88,    -1,
      90,    -1,    -1,    93,    -1,    -1,    96,    -1,    98,    -1,
      -1,   101,    -1,    -1,    -1,   105,   106,   107,    -1,    -1,
     110,    -1,    -1,    -1,    -1,   115,   116,    -1,    -1,    -1,
      -1,   121,   122,    -1,   124,    -1,    -1,    -1,   128,    -1,
     130,   131,   132,   133,   134,    -1,    -1,    -1,   138,    -1,
      -1,   141,   142,   143,    -1,    -1,    -1,   147,    -1,   149,
     150,    -1,   152,   153,   154,    -1,    -1,   157,   158,    -1,
     160,   161,   162,   163,   164,   165,    -1,    -1,   168,   169,
     170,    -1,    -1,   173,   174,    -1,   176,   177,   178,    -1,
      -1,   181,    -1,    -1,    -1,   185,    -1,   187,    -1,   189,
      -1,   191,   192,   193,   194,    -1,   196,    -1,   198,    -1,
      -1,    -1,   202,   203,    -1,   205,    -1,    -1,   208,   209,
      -1,    -1,    -1,   213,   214,   215,   216,    -1,    -1,   219,
     220,   221,    -1,    -1,   224,    -1,    -1,    -1,    -1,   229,
     230,    -1,    -1,    -1,   234,    -1,   236,   237,    -1,   239,
     240,    -1,    -1,    -1,   244,    -1,    -1,   247,   248,    -1,
      -1,   251,    -1,    -1,   254,   255,    -1,    -1,    -1,    -1,
      -1,   261,   262,    -1,   264,    -1,   266,    -1,   268,   269,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,    -1,   296,   297,   298,    -1,
     300,   301,   302,   303,    -1,   305,   306,    -1,    -1,    -1,
      -1,   311,   312,   313,   314,   315,   316,    -1,    -1,   319,
     320,    -1,   322,    -1,   324,    -1,   326,   327,   328,   329,
     330,   331,   332,   333,   334,    -1,    -1,   337,   338,    -1,
      -1,   341,   342,   343,   344,    -1,    -1,    -1,   348,   349,
      -1,    -1,    -1,   353,    -1,   355,   356,   357,    -1,    -1,
     360,   361,    -1,   363,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   373,   374,   375,    -1,   377,   378,    -1,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
      -1,    -1,   392,   393,   394,    -1,   396,    -1,   398,   399,
     400,   401,   402,    -1,   404,   405,   406,    -1,    -1,   409,
      -1,    -1,    -1,   413,   414,   415,   416,   417,    -1,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,    -1,   429,
     430,   431,    -1,    -1,   434,    -1,   436,    -1,   438,   439,
      -1,   441,   442,   443,    -1,   445,    -1,    -1,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,    -1,
     460,   461,    -1,    -1,    -1,   465,   466,   467,   468,    -1,
      -1,    -1,   472,    -1,    -1,    -1,   476,    -1,   478,   479,
     480,   481,    -1,   483,   484,   485,   486,   487,    -1,    -1,
      -1,    -1,    -1,    -1,   494,   495,    -1,   497,    -1,    -1,
     500,    -1,    -1,   503,   504,   505,    -1,    -1,   508,   509,
      -1,   511,   512,   513,   514,   515,   516,    -1,    -1,   519,
     520,   521,   522,    -1,   524,   525,    -1,    -1,   528,   529,
     530,   531,    -1,    -1,   534,   535,    -1,   537,   538,   539,
     540,    -1,    -1,    -1,    -1,    -1,   546,   547,    -1,    -1,
      -1,   551,   552,   553,   554,    -1,   556,   557,    -1,   559,
     560,    -1,   562,   563,    -1,    -1,   566,    -1,    -1,   569,
      -1,   571,    -1,   573,   574,    -1,    -1,    -1,    -1,    -1,
      -1,   581,    -1,    -1,   584,    -1,    -1,    -1,   588,   589,
     590,   591,   592,    -1,    -1,    -1,    -1,    -1,    -1,   599,
     600,    -1,   602,   603,   604,    -1,    -1,   607,    -1,     5,
      -1,     7,     8,     9,    10,    11,    -1,    -1,    -1,    -1,
      -1,    17,    -1,    -1,    -1,   625,    22,    23,    24,    25,
      26,    27,    -1,    -1,    30,    -1,    -1,    -1,    34,    -1,
      -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,    45,
      -1,    -1,    -1,    -1,    -1,    51,    52,    -1,    54,    55,
      -1,    57,    -1,    -1,    -1,    -1,    62,    63,    64,    65,
      66,    67,    -1,    69,    70,    -1,    72,    -1,    74,    -1,
      76,    77,    78,    79,    -1,    81,    82,    -1,    84,    85,
      86,    -1,    88,    -1,    90,    -1,    -1,    93,    -1,    -1,
      96,    -1,    98,    -1,    -1,   101,    -1,    -1,    -1,   105,
     106,   107,    -1,    -1,   110,    -1,    -1,    -1,    -1,   115,
      -1,    -1,    -1,    -1,    -1,   121,   122,    -1,   124,    -1,
      -1,    -1,   128,    -1,   130,   131,   132,   133,   134,    -1,
      -1,    -1,    -1,    -1,    -1,   141,   142,   143,    -1,    -1,
      -1,   147,    -1,    -1,   150,    -1,   152,   153,   154,    -1,
      -1,   157,   158,    -1,   160,   161,   162,   163,   164,    -1,
      -1,    -1,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,   178,    -1,    -1,    -1,    -1,    -1,    -1,   185,
      -1,   187,    -1,   189,    -1,   191,   192,   193,   194,    -1,
     196,    -1,   198,    -1,    -1,    -1,    -1,   203,    -1,    -1,
      -1,    -1,    -1,   209,    -1,    -1,    -1,   213,   214,   215,
     216,   217,    -1,   219,   220,   221,    -1,    -1,   224,    -1,
      -1,    -1,    -1,   229,    -1,    -1,    -1,    -1,   234,    -1,
     236,   237,    -1,   239,   240,   241,    -1,    -1,   244,    -1,
      -1,    -1,   248,    -1,    -1,   251,   252,    -1,   254,   255,
      -1,    -1,    -1,    -1,    -1,   261,   262,    -1,   264,    -1,
     266,    -1,   268,   269,    -1,    -1,    -1,    -1,   274,    -1,
      -1,    -1,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,    -1,
     296,   297,   298,    -1,   300,   301,   302,   303,    -1,   305,
     306,    -1,    -1,    -1,    -1,   311,   312,   313,   314,   315,
     316,    -1,    -1,   319,   320,    -1,   322,    -1,   324,    -1,
     326,   327,   328,   329,   330,   331,   332,   333,   334,    -1,
      -1,   337,   338,    -1,    -1,   341,   342,   343,   344,    -1,
      -1,    -1,    -1,   349,    -1,    -1,    -1,   353,    -1,   355,
     356,   357,    -1,    -1,   360,   361,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   374,   375,
      -1,    -1,   378,    -1,   380,   381,   382,   383,   384,   385,
     386,   387,   388,    -1,    -1,    -1,    -1,   393,   394,    -1,
     396,    -1,   398,   399,   400,   401,   402,    -1,   404,   405,
     406,    -1,    -1,   409,    -1,    -1,    -1,   413,   414,   415,
     416,   417,    -1,    -1,   420,   421,   422,   423,   424,    -1,
     426,    -1,    -1,   429,    -1,   431,   432,    -1,   434,    -1,
      -1,    -1,   438,    -1,    -1,   441,   442,   443,   444,   445,
      -1,    -1,    -1,   449,   450,   451,   452,   453,   454,   455,
      -1,   457,   458,    -1,   460,    -1,    -1,    -1,    -1,   465,
     466,   467,    -1,    -1,    -1,    -1,   472,    -1,    -1,    -1,
     476,    -1,    -1,   479,    -1,   481,    -1,   483,    -1,    -1,
     486,   487,    -1,    -1,    -1,    -1,    -1,    -1,   494,   495,
      -1,   497,    -1,    -1,   500,    -1,    -1,   503,    -1,   505,
      -1,    -1,    -1,   509,    -1,   511,   512,   513,   514,   515,
     516,    -1,    -1,   519,   520,   521,   522,    -1,   524,   525,
      -1,    -1,   528,   529,   530,   531,    -1,    -1,   534,   535,
      -1,   537,   538,   539,   540,    -1,    -1,    -1,    -1,    -1,
     546,   547,    -1,    -1,    -1,    -1,   552,   553,   554,    -1,
     556,   557,    -1,   559,   560,    -1,    -1,    -1,    -1,    -1,
     566,    -1,    -1,   569,    -1,    -1,    -1,   573,   574,    -1,
      -1,    -1,    -1,    -1,    -1,   581,    -1,    -1,   584,    -1,
      -1,    -1,   588,   589,   590,   591,   592,    -1,    -1,   595,
      -1,    -1,    -1,   599,    -1,    -1,   602,    -1,   604,    -1,
       5,   607,     7,     8,     9,    10,    11,    -1,    -1,    -1,
      -1,    -1,    17,    -1,   620,    20,    -1,    22,    23,    24,
      25,    26,    27,    28,    -1,    30,    -1,    -1,    -1,    34,
      -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,
      45,    -1,    47,    48,    -1,    -1,    51,    -1,    -1,    54,
      55,    -1,    57,    58,    -1,    60,    -1,    62,    63,    64,
      65,    66,    67,    -1,    69,    70,    -1,    72,    73,    74,
      75,    76,    77,    78,    79,    -1,    81,    82,    -1,    84,
      85,    86,    87,    88,    -1,    90,    -1,    -1,    93,    -1,
      -1,    96,    -1,    98,    -1,    -1,   101,    -1,    -1,    -1,
     105,   106,   107,    -1,    -1,   110,    -1,    -1,    -1,    -1,
     115,   116,    -1,    -1,    -1,    -1,   121,   122,    -1,   124,
      -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,   134,
      -1,    -1,    -1,   138,    -1,    -1,   141,   142,   143,    -1,
      -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,   154,
      -1,    -1,   157,   158,    -1,   160,   161,   162,   163,   164,
     165,    -1,    -1,   168,   169,   170,    -1,    -1,   173,   174,
      -1,   176,   177,   178,    -1,    -1,   181,    -1,    -1,    -1,
     185,    -1,   187,    -1,   189,    -1,   191,   192,   193,   194,
      -1,   196,    -1,   198,    -1,    -1,    -1,   202,   203,    -1,
     205,    -1,    -1,   208,   209,    -1,    -1,    -1,   213,   214,
     215,   216,    -1,    -1,   219,   220,   221,    -1,    -1,   224,
      -1,    -1,    -1,    -1,   229,   230,    -1,    -1,    -1,   234,
      -1,   236,   237,    -1,   239,   240,    -1,    -1,    -1,   244,
      -1,    -1,   247,   248,    -1,    -1,   251,    -1,    -1,   254,
     255,    -1,    -1,    -1,    -1,    -1,   261,   262,    -1,   264,
      -1,   266,    -1,   268,   269,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
      -1,   296,   297,   298,    -1,   300,   301,   302,   303,    -1,
     305,   306,    -1,    -1,    -1,    -1,   311,   312,   313,   314,
     315,   316,    -1,    -1,   319,   320,    -1,   322,    -1,   324,
      -1,   326,   327,   328,   329,   330,   331,   332,   333,   334,
      -1,    -1,   337,   338,    -1,    -1,   341,   342,   343,   344,
      -1,    -1,    -1,   348,   349,    -1,    -1,    -1,   353,    -1,
     355,   356,   357,    -1,    -1,   360,   361,    -1,   363,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   373,   374,
     375,    -1,   377,   378,    -1,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,    -1,    -1,   392,   393,   394,
      -1,   396,    -1,   398,   399,   400,   401,   402,    -1,   404,
     405,   406,    -1,    -1,   409,    -1,    -1,    -1,   413,   414,
     415,   416,   417,    -1,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,    -1,   429,   430,   431,    -1,    -1,   434,
      -1,   436,    -1,   438,   439,    -1,   441,   442,   443,    -1,
     445,    -1,    -1,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,    -1,   460,   461,    -1,    -1,    -1,
     465,   466,   467,   468,    -1,    -1,    -1,   472,    -1,    -1,
      -1,   476,    -1,   478,   479,   480,   481,    -1,   483,   484,
     485,   486,   487,    -1,    -1,    -1,    -1,    -1,    -1,   494,
     495,    -1,   497,    -1,    -1,   500,    -1,    -1,   503,   504,
     505,    -1,    -1,   508,   509,    -1,   511,   512,   513,   514,
     515,   516,    -1,    -1,   519,   520,   521,   522,    -1,   524,
     525,    -1,    -1,   528,   529,   530,   531,    -1,    -1,   534,
     535,    -1,   537,   538,   539,   540,    -1,    -1,    -1,    -1,
      -1,   546,   547,    -1,    -1,    -1,   551,   552,   553,   554,
      -1,   556,   557,    -1,   559,   560,    -1,   562,   563,    -1,
      -1,   566,    -1,    -1,   569,    -1,   571,    -1,   573,   574,
      -1,    -1,    -1,    -1,    -1,    -1,   581,    -1,    -1,   584,
      -1,    -1,    -1,   588,   589,   590,   591,   592,    -1,    -1,
      -1,    -1,    -1,    -1,   599,   600,    -1,   602,   603,   604,
      -1,     5,   607,     7,     8,     9,    10,    11,   613,    -1,
      -1,    -1,    -1,    17,    -1,    -1,    20,    -1,    22,    23,
      24,    25,    26,    27,    28,    -1,    30,    -1,    -1,    -1,
      34,    -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,
      -1,    45,    -1,    47,    48,    -1,    -1,    51,    -1,    -1,
      54,    55,    -1,    57,    58,    -1,    60,    -1,    62,    63,
      64,    65,    66,    67,    -1,    69,    70,    -1,    72,    73,
      74,    75,    76,    77,    78,    79,    -1,    81,    82,    -1,
      84,    85,    86,    87,    88,    -1,    90,    -1,    -1,    93,
      -1,    -1,    96,    -1,    98,    -1,    -1,   101,    -1,    -1,
      -1,   105,   106,   107,    -1,    -1,   110,    -1,    -1,    -1,
      -1,   115,   116,    -1,    -1,    -1,    -1,   121,   122,    -1,
     124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,
     134,    -1,    -1,    -1,   138,    -1,    -1,   141,   142,   143,
      -1,    -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,
     154,    -1,    -1,   157,   158,    -1,   160,   161,   162,   163,
     164,   165,    -1,    -1,   168,   169,   170,    -1,    -1,   173,
     174,    -1,   176,   177,   178,    -1,    -1,   181,    -1,    -1,
      -1,   185,    -1,   187,    -1,   189,    -1,   191,   192,   193,
     194,    -1,   196,    -1,   198,    -1,    -1,    -1,   202,   203,
      -1,   205,    -1,    -1,   208,   209,    -1,    -1,    -1,   213,
     214,   215,   216,    -1,    -1,   219,   220,   221,    -1,    -1,
     224,    -1,    -1,    -1,    -1,   229,   230,    -1,    -1,    -1,
     234,    -1,   236,   237,    -1,   239,   240,    -1,    -1,    -1,
     244,    -1,    -1,   247,   248,    -1,    -1,   251,    -1,    -1,
     254,   255,    -1,    -1,    -1,    -1,    -1,   261,   262,    -1,
     264,    -1,   266,    -1,   268,   269,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,    -1,   296,   297,   298,    -1,   300,   301,   302,   303,
      -1,   305,   306,    -1,    -1,    -1,    -1,   311,   312,   313,
     314,   315,   316,    -1,    -1,   319,   320,    -1,   322,    -1,
     324,    -1,   326,   327,   328,   329,   330,   331,   332,   333,
     334,    -1,    -1,   337,   338,    -1,    -1,   341,   342,   343,
     344,    -1,    -1,    -1,   348,   349,    -1,    -1,    -1,   353,
      -1,   355,   356,   357,    -1,    -1,   360,   361,    -1,   363,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   373,
     374,   375,    -1,   377,   378,    -1,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,    -1,    -1,   392,   393,
     394,    -1,   396,    -1,   398,   399,   400,   401,   402,    -1,
     404,   405,   406,    -1,    -1,   409,    -1,    -1,    -1,   413,
     414,   415,   416,   417,    -1,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,    -1,   429,   430,   431,    -1,    -1,
     434,    -1,   436,    -1,   438,   439,    -1,   441,   442,   443,
      -1,   445,    -1,    -1,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,    -1,   460,   461,    -1,    -1,
      -1,   465,   466,   467,   468,    -1,    -1,    -1,   472,    -1,
      -1,    -1,   476,    -1,   478,   479,   480,   481,    -1,   483,
     484,   485,   486,   487,    -1,    -1,    -1,    -1,    -1,    -1,
     494,   495,    -1,   497,    -1,    -1,   500,    -1,    -1,   503,
     504,   505,    -1,    -1,   508,   509,    -1,   511,   512,   513,
     514,   515,   516,    -1,    -1,   519,   520,   521,   522,    -1,
     524,   525,    -1,    -1,   528,   529,   530,   531,    -1,    -1,
     534,   535,    -1,   537,   538,   539,   540,    -1,    -1,    -1,
      -1,    -1,   546,   547,    -1,    -1,    -1,   551,   552,   553,
     554,    -1,   556,   557,    -1,   559,   560,    -1,   562,   563,
      -1,    -1,   566,    -1,    -1,   569,    -1,   571,    -1,   573,
     574,    -1,    -1,    -1,    -1,    -1,    -1,   581,    -1,    -1,
     584,    -1,    -1,    -1,   588,   589,   590,   591,   592,    -1,
      -1,    -1,    -1,    -1,    -1,   599,   600,    -1,   602,   603,
     604,    -1,     5,   607,     7,     8,     9,    10,    11,   613,
      -1,    -1,    -1,    -1,    17,    -1,    -1,    20,    -1,    22,
      23,    24,    25,    26,    27,    28,    -1,    30,    -1,    -1,
      -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    41,    42,
      43,    -1,    45,    -1,    47,    48,    -1,    -1,    51,    -1,
      -1,    54,    55,    -1,    57,    58,    -1,    60,    -1,    62,
      63,    64,    65,    66,    67,    -1,    69,    70,    -1,    72,
      73,    74,    75,    76,    77,    78,    79,    -1,    81,    82,
      -1,    84,    85,    86,    87,    88,    -1,    90,    -1,    -1,
      93,    -1,    -1,    96,    -1,    98,    -1,    -1,   101,    -1,
      -1,    -1,   105,   106,   107,    -1,    -1,   110,    -1,    -1,
      -1,    -1,   115,   116,    -1,    -1,    -1,    -1,   121,   122,
      -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,
     133,   134,    -1,    -1,    -1,   138,    -1,    -1,   141,   142,
     143,    -1,    -1,    -1,   147,    -1,   149,   150,    -1,   152,
     153,   154,    -1,    -1,   157,   158,    -1,   160,   161,   162,
     163,   164,   165,    -1,    -1,   168,   169,   170,    -1,    -1,
     173,   174,    -1,   176,   177,   178,    -1,    -1,   181,    -1,
      -1,    -1,   185,    -1,   187,    -1,   189,    -1,   191,   192,
     193,   194,    -1,   196,    -1,   198,    -1,    -1,    -1,   202,
     203,    -1,   205,    -1,    -1,   208,   209,    -1,    -1,    -1,
     213,   214,   215,   216,    -1,    -1,   219,   220,   221,    -1,
      -1,   224,    -1,    -1,    -1,    -1,   229,   230,    -1,    -1,
      -1,   234,    -1,   236,   237,    -1,   239,   240,    -1,    -1,
      -1,   244,    -1,    -1,   247,   248,    -1,    -1,   251,    -1,
      -1,   254,   255,    -1,    -1,    -1,    -1,    -1,   261,   262,
      -1,   264,    -1,   266,    -1,   268,   269,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,    -1,   296,   297,   298,    -1,   300,   301,   302,
     303,    -1,   305,   306,    -1,    -1,    -1,    -1,   311,   312,
     313,   314,   315,   316,    -1,    -1,   319,   320,    -1,   322,
      -1,   324,    -1,   326,   327,   328,   329,   330,   331,   332,
     333,   334,    -1,    -1,   337,   338,    -1,    -1,   341,   342,
     343,   344,    -1,    -1,    -1,   348,   349,    -1,    -1,    -1,
     353,    -1,   355,   356,   357,    -1,    -1,   360,   361,    -1,
     363,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     373,   374,   375,    -1,   377,   378,    -1,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,    -1,    -1,   392,
     393,   394,    -1,   396,    -1,   398,   399,   400,   401,   402,
      -1,   404,   405,   406,    -1,    -1,   409,    -1,    -1,    -1,
     413,   414,   415,   416,   417,    -1,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,    -1,   429,   430,   431,    -1,
      -1,   434,    -1,   436,    -1,   438,   439,    -1,   441,   442,
     443,    -1,   445,    -1,    -1,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,    -1,   460,   461,    -1,
      -1,    -1,   465,   466,   467,   468,    -1,    -1,    -1,   472,
      -1,    -1,    -1,   476,    -1,   478,   479,   480,   481,    -1,
     483,   484,   485,   486,   487,    -1,    -1,    -1,    -1,    -1,
      -1,   494,   495,    -1,   497,    -1,    -1,   500,    -1,    -1,
     503,   504,   505,    -1,    -1,   508,   509,    -1,   511,   512,
     513,   514,   515,   516,    -1,    -1,   519,   520,   521,   522,
      -1,   524,   525,    -1,    -1,   528,   529,   530,   531,    -1,
      -1,   534,   535,    -1,   537,   538,   539,   540,    -1,    -1,
      -1,    -1,    -1,   546,   547,    -1,    -1,    -1,   551,   552,
     553,   554,    -1,   556,   557,    -1,   559,   560,    -1,   562,
     563,    -1,    -1,   566,    -1,    -1,   569,    -1,   571,    -1,
     573,   574,    -1,    -1,    -1,    -1,    -1,    -1,   581,    -1,
      -1,   584,    -1,    -1,    -1,   588,   589,   590,   591,   592,
      -1,    -1,    -1,    -1,    -1,    -1,   599,   600,    -1,   602,
     603,   604,    -1,     5,   607,     7,     8,     9,    10,    11,
     613,    -1,    -1,    -1,    -1,    17,    -1,    -1,    20,    -1,
      22,    23,    24,    25,    26,    27,    28,    -1,    30,    -1,
      -1,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    41,
      42,    43,    -1,    45,    -1,    47,    48,    -1,    -1,    51,
      -1,    -1,    54,    55,    -1,    57,    58,    -1,    60,    -1,
      62,    63,    64,    65,    66,    67,    -1,    69,    70,    -1,
      72,    73,    74,    75,    76,    77,    78,    79,    -1,    81,
      82,    -1,    84,    85,    86,    87,    88,    -1,    90,    -1,
      -1,    93,    -1,    -1,    96,    -1,    98,    -1,    -1,   101,
      -1,    -1,    -1,   105,   106,   107,    -1,    -1,   110,    -1,
      -1,    -1,    -1,   115,   116,    -1,    -1,    -1,    -1,   121,
     122,    -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,
     132,   133,   134,    -1,    -1,    -1,   138,    -1,    -1,   141,
     142,   143,    -1,    -1,    -1,   147,    -1,   149,   150,    -1,
     152,   153,   154,    -1,    -1,   157,   158,    -1,   160,   161,
     162,   163,   164,   165,    -1,    -1,   168,   169,   170,    -1,
      -1,   173,   174,    -1,   176,   177,   178,    -1,    -1,   181,
      -1,    -1,    -1,   185,    -1,   187,    -1,   189,    -1,   191,
     192,   193,   194,    -1,   196,    -1,   198,    -1,    -1,    -1,
     202,   203,    -1,   205,    -1,    -1,   208,   209,    -1,    -1,
      -1,   213,   214,   215,   216,    -1,    -1,   219,   220,   221,
      -1,    -1,   224,    -1,    -1,    -1,    -1,   229,   230,    -1,
      -1,    -1,   234,    -1,   236,   237,    -1,   239,   240,    -1,
      -1,    -1,   244,    -1,    -1,   247,   248,    -1,    -1,   251,
      -1,    -1,   254,   255,    -1,    -1,    -1,    -1,    -1,   261,
     262,    -1,   264,    -1,   266,    -1,   268,   269,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,    -1,   296,   297,   298,    -1,   300,   301,
     302,   303,    -1,   305,   306,    -1,    -1,    -1,    -1,   311,
     312,   313,   314,   315,   316,    -1,    -1,   319,   320,    -1,
     322,    -1,   324,    -1,   326,   327,   328,   329,   330,   331,
     332,   333,   334,    -1,    -1,   337,   338,    -1,    -1,   341,
     342,   343,   344,    -1,    -1,    -1,   348,   349,    -1,    -1,
      -1,   353,    -1,   355,   356,   357,    -1,    -1,   360,   361,
      -1,   363,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   373,   374,   375,    -1,   377,   378,    -1,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,    -1,    -1,
     392,   393,   394,    -1,   396,    -1,   398,   399,   400,   401,
     402,    -1,   404,   405,   406,    -1,    -1,   409,    -1,    -1,
      -1,   413,   414,   415,   416,   417,    -1,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,    -1,   429,   430,   431,
      -1,    -1,   434,    -1,   436,    -1,   438,   439,    -1,   441,
     442,   443,    -1,   445,    -1,    -1,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,    -1,   460,   461,
      -1,    -1,    -1,   465,   466,   467,   468,    -1,    -1,    -1,
     472,    -1,    -1,    -1,   476,    -1,   478,   479,   480,   481,
      -1,   483,   484,   485,   486,   487,    -1,    -1,    -1,    -1,
      -1,    -1,   494,   495,    -1,   497,    -1,    -1,   500,    -1,
      -1,   503,   504,   505,    -1,    -1,   508,   509,    -1,   511,
     512,   513,   514,   515,   516,    -1,    -1,   519,   520,   521,
     522,    -1,   524,   525,    -1,    -1,   528,   529,   530,   531,
      -1,    -1,   534,   535,    -1,   537,   538,   539,   540,    -1,
      -1,    -1,    -1,    -1,   546,   547,    -1,    -1,    -1,   551,
     552,   553,   554,    -1,   556,   557,    -1,   559,   560,    -1,
     562,   563,    -1,    -1,   566,    -1,    -1,   569,    -1,   571,
      -1,   573,   574,    -1,    -1,    -1,    -1,    -1,    -1,   581,
      -1,    -1,   584,    -1,    -1,    -1,   588,   589,   590,   591,
     592,    -1,    -1,    -1,    -1,    -1,    -1,   599,   600,    -1,
     602,   603,   604,    -1,     5,   607,     7,     8,     9,    10,
      11,   613,    -1,    -1,    -1,    -1,    17,    -1,    -1,    20,
      -1,    22,    23,    24,    25,    26,    27,    28,    -1,    30,
      -1,    -1,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,
      41,    42,    43,    -1,    45,    -1,    47,    48,    -1,    -1,
      51,    -1,    -1,    54,    55,    -1,    57,    58,    -1,    60,
      -1,    62,    63,    64,    65,    66,    67,    -1,    69,    70,
      -1,    72,    73,    74,    75,    76,    77,    78,    79,    -1,
      81,    82,    -1,    84,    85,    86,    87,    88,    -1,    90,
      -1,    -1,    93,    -1,    -1,    96,    -1,    98,    -1,    -1,
     101,    -1,    -1,    -1,   105,   106,   107,    -1,    -1,   110,
      -1,    -1,    -1,    -1,   115,   116,   117,    -1,    -1,    -1,
     121,   122,    -1,   124,    -1,    -1,    -1,   128,    -1,   130,
     131,   132,   133,   134,    -1,    -1,    -1,   138,    -1,    -1,
     141,   142,   143,    -1,    -1,    -1,   147,    -1,   149,   150,
      -1,   152,   153,   154,    -1,    -1,   157,   158,    -1,   160,
     161,   162,   163,   164,   165,    -1,    -1,   168,   169,   170,
      -1,    -1,   173,   174,    -1,   176,   177,   178,   179,    -1,
     181,    -1,    -1,    -1,   185,    -1,   187,    -1,   189,    -1,
     191,   192,   193,   194,    -1,   196,    -1,   198,    -1,    -1,
      -1,   202,   203,    -1,   205,   206,    -1,   208,   209,    -1,
      -1,    -1,   213,   214,   215,   216,    -1,    -1,   219,   220,
     221,    -1,    -1,   224,    -1,    -1,    -1,    -1,   229,   230,
      -1,    -1,    -1,   234,    -1,   236,   237,    -1,   239,   240,
      -1,    -1,    -1,   244,    -1,    -1,   247,   248,    -1,    -1,
     251,    -1,    -1,   254,   255,    -1,    -1,    -1,    -1,    -1,
     261,   262,    -1,   264,    -1,   266,    -1,   268,   269,    -1,
      -1,   272,    -1,    -1,    -1,    -1,    -1,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,    -1,   296,   297,   298,    -1,   300,
     301,   302,   303,    -1,   305,   306,    -1,    -1,    -1,    -1,
     311,   312,   313,   314,   315,   316,    -1,    -1,   319,   320,
      -1,   322,    -1,   324,    -1,   326,   327,   328,   329,   330,
     331,   332,   333,   334,    -1,    -1,   337,   338,    -1,    -1,
     341,   342,   343,   344,   345,   346,    -1,   348,   349,    -1,
      -1,   352,   353,    -1,   355,   356,   357,    -1,    -1,   360,
     361,    -1,   363,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   373,   374,   375,    -1,   377,   378,    -1,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,    -1,
      -1,   392,   393,   394,    -1,   396,    -1,   398,   399,   400,
     401,   402,    -1,   404,   405,   406,    -1,    -1,   409,    -1,
      -1,    -1,   413,   414,   415,   416,   417,    -1,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,    -1,   429,   430,
     431,    -1,    -1,   434,    -1,   436,    -1,   438,   439,    -1,
     441,   442,   443,    -1,   445,    -1,    -1,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,    -1,   460,
     461,    -1,    -1,    -1,   465,   466,   467,   468,    -1,    -1,
      -1,   472,    -1,    -1,    -1,   476,    -1,   478,   479,   480,
     481,    -1,   483,   484,   485,   486,   487,    -1,    -1,   490,
     491,   492,    -1,   494,   495,    -1,   497,    -1,    -1,   500,
      -1,    -1,   503,   504,   505,    -1,    -1,   508,   509,    -1,
     511,   512,   513,   514,   515,   516,    -1,    -1,   519,   520,
     521,   522,    -1,   524,   525,    -1,    -1,   528,   529,   530,
     531,    -1,    -1,   534,   535,    -1,   537,   538,   539,   540,
      -1,    -1,    -1,    -1,    -1,   546,   547,    -1,    -1,    -1,
     551,   552,   553,   554,   555,   556,   557,    -1,   559,   560,
      -1,   562,   563,    -1,    -1,   566,    -1,    -1,   569,    -1,
     571,    -1,   573,   574,    -1,    -1,    -1,    -1,    -1,    -1,
     581,    -1,    -1,   584,    -1,    -1,    -1,   588,   589,   590,
     591,   592,    -1,    -1,    -1,    -1,    -1,    -1,   599,   600,
      -1,   602,   603,   604,    -1,     5,   607,     7,     8,     9,
      10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,
      20,    -1,    22,    23,    24,    25,    26,    27,    28,    -1,
      30,    -1,    -1,    33,    34,    -1,    -1,    -1,    38,    -1,
      -1,    41,    42,    43,    -1,    45,    -1,    47,    48,    -1,
      -1,    51,    -1,    -1,    54,    55,    -1,    57,    58,    -1,
      60,    -1,    62,    63,    64,    65,    66,    67,    -1,    69,
      70,    -1,    72,    73,    74,    75,    76,    77,    78,    79,
      -1,    81,    82,    -1,    84,    85,    86,    87,    88,    -1,
      90,    -1,    -1,    93,    -1,    -1,    96,    -1,    98,    -1,
      -1,   101,    -1,    -1,    -1,   105,   106,   107,    -1,    -1,
     110,    -1,    -1,    -1,    -1,   115,   116,    -1,    -1,    -1,
     120,   121,   122,    -1,   124,    -1,    -1,    -1,   128,    -1,
     130,   131,   132,   133,   134,    -1,    -1,    -1,   138,    -1,
      -1,   141,   142,   143,    -1,    -1,    -1,   147,    -1,   149,
     150,    -1,   152,   153,   154,   155,    -1,   157,   158,    -1,
     160,   161,   162,   163,   164,   165,    -1,    -1,   168,   169,
     170,    -1,    -1,   173,   174,    -1,   176,   177,   178,    -1,
      -1,   181,    -1,    -1,    -1,   185,    -1,   187,    -1,   189,
      -1,   191,   192,   193,   194,    -1,   196,    -1,   198,    -1,
      -1,    -1,   202,   203,    -1,   205,    -1,    -1,   208,   209,
      -1,    -1,    -1,   213,   214,   215,   216,    -1,    -1,   219,
     220,   221,    -1,    -1,   224,    -1,    -1,    -1,    -1,   229,
     230,    -1,    -1,    -1,   234,    -1,   236,   237,    -1,   239,
     240,    -1,    -1,    -1,   244,    -1,    -1,   247,   248,    -1,
      -1,   251,    -1,    -1,   254,   255,   256,    -1,    -1,    -1,
      -1,   261,   262,    -1,   264,    -1,   266,    -1,   268,   269,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,    -1,   296,   297,   298,    -1,
     300,   301,   302,   303,    -1,   305,   306,    -1,    -1,    -1,
      -1,   311,   312,   313,   314,   315,   316,    -1,    -1,   319,
     320,    -1,   322,    -1,   324,    -1,   326,   327,   328,   329,
     330,   331,   332,   333,   334,    -1,    -1,   337,   338,    -1,
      -1,   341,   342,   343,   344,    -1,    -1,    -1,   348,   349,
      -1,    -1,    -1,   353,    -1,   355,   356,   357,    -1,    -1,
     360,   361,    -1,   363,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   373,   374,   375,    -1,   377,   378,    -1,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
      -1,    -1,   392,   393,   394,    -1,   396,    -1,   398,   399,
     400,   401,   402,    -1,   404,   405,   406,    -1,    -1,   409,
      -1,    -1,    -1,   413,   414,   415,   416,   417,    -1,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,    -1,   429,
     430,   431,    -1,    -1,   434,    -1,   436,    -1,   438,   439,
      -1,   441,   442,   443,    -1,   445,    -1,    -1,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,    -1,
     460,   461,    -1,    -1,    -1,   465,   466,   467,   468,    -1,
      -1,   471,   472,    -1,    -1,    -1,   476,    -1,   478,   479,
     480,   481,    -1,   483,   484,   485,   486,   487,    -1,    -1,
      -1,    -1,    -1,    -1,   494,   495,    -1,   497,    -1,    -1,
     500,    -1,    -1,   503,   504,   505,    -1,    -1,   508,   509,
      -1,   511,   512,   513,   514,   515,   516,    -1,    -1,   519,
     520,   521,   522,    -1,   524,   525,    -1,    -1,   528,   529,
     530,   531,    -1,   533,   534,   535,    -1,   537,   538,   539,
     540,    -1,    -1,    -1,    -1,    -1,   546,   547,    -1,    -1,
      -1,   551,   552,   553,   554,    -1,   556,   557,    -1,   559,
     560,    -1,   562,   563,    -1,    -1,   566,    -1,    -1,   569,
      -1,   571,    -1,   573,   574,    -1,    -1,    -1,    -1,    -1,
      -1,   581,    -1,    -1,   584,    -1,    -1,    -1,   588,   589,
     590,   591,   592,    -1,    -1,    -1,    -1,    -1,    -1,   599,
     600,    -1,   602,   603,   604,    -1,     5,   607,     7,     8,
       9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,
      -1,    20,    -1,    22,    23,    24,    25,    26,    27,    28,
      -1,    30,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,
      -1,    -1,    41,    42,    43,    -1,    45,    -1,    47,    48,
      -1,    -1,    51,    -1,    -1,    54,    55,    -1,    57,    58,
      -1,    60,    -1,    62,    63,    64,    65,    66,    67,    -1,
      69,    70,    -1,    72,    73,    74,    75,    76,    77,    78,
      79,    -1,    81,    82,    -1,    84,    85,    86,    87,    88,
      -1,    90,    -1,    -1,    93,    -1,    -1,    96,    -1,    98,
      -1,    -1,   101,    -1,    -1,    -1,   105,   106,   107,    -1,
      -1,   110,    -1,    -1,    -1,    -1,   115,   116,    -1,    -1,
      -1,    -1,   121,   122,    -1,   124,    -1,    -1,    -1,   128,
      -1,   130,   131,   132,   133,   134,    -1,    -1,    -1,   138,
      -1,    -1,   141,   142,   143,    -1,    -1,    -1,   147,    -1,
     149,   150,    -1,   152,   153,   154,    -1,    -1,   157,   158,
      -1,   160,   161,   162,   163,   164,   165,    -1,    -1,   168,
     169,   170,    -1,    -1,   173,   174,    -1,   176,   177,   178,
      -1,    -1,   181,    -1,    -1,    -1,   185,    -1,   187,    -1,
     189,    -1,   191,   192,   193,   194,    -1,   196,    -1,   198,
      -1,    -1,    -1,   202,   203,    -1,   205,    -1,    -1,   208,
     209,    -1,    -1,    -1,   213,   214,   215,   216,    -1,    -1,
     219,   220,   221,    -1,    -1,   224,    -1,    -1,    -1,    -1,
     229,   230,    -1,    -1,    -1,   234,    -1,   236,   237,    -1,
     239,   240,    -1,    -1,    -1,   244,    -1,    -1,   247,   248,
      -1,    -1,   251,    -1,    -1,   254,   255,    -1,    -1,    -1,
      -1,    -1,   261,   262,    -1,   264,    -1,   266,    -1,   268,
     269,    -1,    -1,   272,    -1,    -1,    -1,    -1,    -1,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,    -1,   296,   297,   298,
      -1,   300,   301,   302,   303,    -1,   305,   306,    -1,    -1,
      -1,    -1,   311,   312,   313,   314,   315,   316,    -1,    -1,
     319,   320,    -1,   322,    -1,   324,    -1,   326,   327,   328,
     329,   330,   331,   332,   333,   334,    -1,    -1,   337,   338,
      -1,    -1,   341,   342,   343,   344,    -1,    -1,    -1,   348,
     349,    -1,    -1,   352,   353,    -1,   355,   356,   357,    -1,
      -1,   360,   361,    -1,   363,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   373,   374,   375,   376,   377,   378,
      -1,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,    -1,    -1,   392,   393,   394,    -1,   396,    -1,   398,
     399,   400,   401,   402,    -1,   404,   405,   406,    -1,    -1,
     409,    -1,    -1,    -1,   413,   414,   415,   416,   417,    -1,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,    -1,
     429,   430,   431,    -1,    -1,   434,    -1,   436,    -1,   438,
     439,    -1,   441,   442,   443,    -1,   445,    -1,    -1,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
      -1,   460,   461,    -1,    -1,    -1,   465,   466,   467,   468,
      -1,    -1,    -1,   472,    -1,    -1,    -1,   476,    -1,   478,
     479,   480,   481,    -1,   483,   484,   485,   486,   487,    -1,
      -1,    -1,    -1,    -1,    -1,   494,   495,    -1,   497,    -1,
      -1,   500,    -1,    -1,   503,   504,   505,    -1,    -1,   508,
     509,    -1,   511,   512,   513,   514,   515,   516,    -1,    -1,
     519,   520,   521,   522,    -1,   524,   525,    -1,    -1,   528,
     529,   530,   531,    -1,    -1,   534,   535,    -1,   537,   538,
     539,   540,    -1,    -1,    -1,    -1,    -1,   546,   547,    -1,
      -1,    -1,   551,   552,   553,   554,   555,   556,   557,    -1,
     559,   560,    -1,   562,   563,    -1,    -1,   566,    -1,    -1,
     569,    -1,   571,    -1,   573,   574,    -1,    -1,    -1,    -1,
      -1,    -1,   581,    -1,    -1,   584,    -1,    -1,    -1,   588,
     589,   590,   591,   592,    -1,    -1,    -1,    -1,    -1,    -1,
     599,   600,    -1,   602,   603,   604,    -1,     5,   607,     7,
       8,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,
      -1,    -1,    20,    -1,    22,    23,    24,    25,    26,    27,
      28,    -1,    30,    -1,    -1,    33,    34,    -1,    -1,    -1,
      38,    -1,    -1,    41,    42,    43,    -1,    45,    -1,    47,
      48,    -1,    -1,    51,    -1,    -1,    54,    55,    -1,    57,
      58,    -1,    60,    -1,    62,    63,    64,    65,    66,    67,
      -1,    69,    70,    -1,    72,    73,    74,    75,    76,    77,
      78,    79,    -1,    81,    82,    -1,    84,    85,    86,    87,
      88,    -1,    90,    -1,    -1,    93,    -1,    -1,    96,    -1,
      98,    -1,    -1,   101,    -1,    -1,    -1,   105,   106,   107,
      -1,    -1,   110,    -1,    -1,    -1,    -1,   115,   116,    -1,
      -1,    -1,   120,   121,   122,    -1,   124,    -1,    -1,    -1,
     128,    -1,   130,   131,   132,   133,   134,    -1,    -1,    -1,
     138,    -1,    -1,   141,   142,   143,    -1,    -1,    -1,   147,
      -1,   149,   150,    -1,   152,   153,   154,    -1,    -1,   157,
     158,    -1,   160,   161,   162,   163,   164,   165,    -1,    -1,
     168,   169,   170,    -1,    -1,   173,   174,    -1,   176,   177,
     178,    -1,    -1,   181,    -1,    -1,    -1,   185,    -1,   187,
      -1,   189,    -1,   191,   192,   193,   194,    -1,   196,    -1,
     198,    -1,    -1,    -1,   202,   203,    -1,   205,    -1,    -1,
     208,   209,    -1,    -1,    -1,   213,   214,   215,   216,    -1,
      -1,   219,   220,   221,    -1,    -1,   224,    -1,    -1,    -1,
      -1,   229,   230,    -1,    -1,    -1,   234,    -1,   236,   237,
      -1,   239,   240,    -1,    -1,    -1,   244,    -1,    -1,   247,
     248,    -1,    -1,   251,    -1,    -1,   254,   255,   256,    -1,
      -1,    -1,    -1,   261,   262,    -1,   264,    -1,   266,    -1,
     268,   269,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,    -1,   296,   297,
     298,    -1,   300,   301,   302,   303,    -1,   305,   306,    -1,
      -1,    -1,    -1,   311,   312,   313,   314,   315,   316,    -1,
      -1,   319,   320,    -1,   322,    -1,   324,    -1,   326,   327,
     328,   329,   330,   331,   332,   333,   334,    -1,    -1,   337,
     338,    -1,    -1,   341,   342,   343,   344,    -1,    -1,    -1,
     348,   349,    -1,    -1,    -1,   353,    -1,   355,   356,   357,
      -1,    -1,   360,   361,    -1,   363,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   373,   374,   375,    -1,   377,
     378,    -1,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,    -1,    -1,   392,   393,   394,    -1,   396,    -1,
     398,   399,   400,   401,   402,    -1,   404,   405,   406,    -1,
      -1,   409,    -1,    -1,    -1,   413,   414,   415,   416,   417,
      -1,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
      -1,   429,   430,   431,    -1,    -1,   434,    -1,   436,    -1,
     438,   439,    -1,   441,   442,   443,    -1,   445,    -1,    -1,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,    -1,   460,   461,    -1,    -1,    -1,   465,   466,   467,
     468,    -1,    -1,    -1,   472,    -1,    -1,    -1,   476,    -1,
     478,   479,   480,   481,    -1,   483,   484,   485,   486,   487,
      -1,    -1,    -1,    -1,    -1,    -1,   494,   495,    -1,   497,
      -1,    -1,   500,    -1,    -1,   503,   504,   505,    -1,    -1,
     508,   509,    -1,   511,   512,   513,   514,   515,   516,    -1,
      -1,   519,   520,   521,   522,    -1,   524,   525,    -1,    -1,
     528,   529,   530,   531,    -1,   533,   534,   535,    -1,   537,
     538,   539,   540,    -1,    -1,    -1,    -1,    -1,   546,   547,
      -1,    -1,    -1,   551,   552,   553,   554,    -1,   556,   557,
      -1,   559,   560,    -1,   562,   563,    -1,    -1,   566,    -1,
      -1,   569,    -1,   571,    -1,   573,   574,    -1,    -1,    -1,
      -1,    -1,    -1,   581,    -1,    -1,   584,    -1,    -1,    -1,
     588,   589,   590,   591,   592,    -1,    -1,    -1,    -1,    -1,
      -1,   599,   600,    -1,   602,   603,   604,    -1,     5,   607,
       7,     8,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,
      17,    -1,    -1,    20,    -1,    22,    23,    24,    25,    26,
      27,    28,    -1,    30,    -1,    -1,    33,    34,    -1,    -1,
      -1,    38,    -1,    -1,    41,    42,    43,    -1,    45,    -1,
      47,    48,    -1,    -1,    51,    -1,    -1,    54,    55,    -1,
      57,    58,    -1,    60,    -1,    62,    63,    64,    65,    66,
      67,    -1,    69,    70,    -1,    72,    73,    74,    75,    76,
      77,    78,    79,    -1,    81,    82,    -1,    84,    85,    86,
      87,    88,    -1,    90,    -1,    -1,    93,    -1,    -1,    96,
      -1,    98,    -1,    -1,   101,    -1,    -1,    -1,   105,   106,
     107,    -1,    -1,   110,    -1,    -1,    -1,    -1,   115,   116,
      -1,    -1,    -1,   120,   121,   122,    -1,   124,    -1,    -1,
      -1,   128,    -1,   130,   131,   132,   133,   134,    -1,    -1,
      -1,   138,    -1,    -1,   141,   142,   143,    -1,    -1,    -1,
     147,    -1,   149,   150,    -1,   152,   153,   154,    -1,    -1,
     157,   158,    -1,   160,   161,   162,   163,   164,   165,    -1,
      -1,   168,   169,   170,    -1,    -1,   173,   174,    -1,   176,
     177,   178,    -1,    -1,   181,    -1,    -1,    -1,   185,    -1,
     187,    -1,   189,    -1,   191,   192,   193,   194,    -1,   196,
      -1,   198,    -1,    -1,    -1,   202,   203,    -1,   205,    -1,
      -1,   208,   209,    -1,    -1,    -1,   213,   214,   215,   216,
      -1,    -1,   219,   220,   221,    -1,    -1,   224,    -1,    -1,
      -1,    -1,   229,   230,    -1,    -1,    -1,   234,    -1,   236,
     237,    -1,   239,   240,    -1,    -1,    -1,   244,    -1,    -1,
     247,   248,    -1,    -1,   251,    -1,    -1,   254,   255,   256,
      -1,    -1,    -1,    -1,   261,   262,    -1,   264,    -1,   266,
      -1,   268,   269,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,    -1,   296,
     297,   298,    -1,   300,   301,   302,   303,    -1,   305,   306,
      -1,    -1,    -1,    -1,   311,   312,   313,   314,   315,   316,
      -1,    -1,   319,   320,    -1,   322,    -1,   324,    -1,   326,
     327,   328,   329,   330,   331,   332,   333,   334,    -1,    -1,
     337,   338,    -1,    -1,   341,   342,   343,   344,    -1,    -1,
      -1,   348,   349,    -1,    -1,    -1,   353,    -1,   355,   356,
     357,    -1,    -1,   360,   361,    -1,   363,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   373,   374,   375,    -1,
     377,   378,    -1,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,    -1,    -1,   392,   393,   394,    -1,   396,
      -1,   398,   399,   400,   401,   402,    -1,   404,   405,   406,
      -1,    -1,   409,    -1,    -1,    -1,   413,   414,   415,   416,
     417,    -1,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,    -1,   429,   430,   431,    -1,    -1,   434,    -1,   436,
      -1,   438,   439,    -1,   441,   442,   443,    -1,   445,    -1,
      -1,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,    -1,   460,   461,    -1,    -1,    -1,   465,   466,
     467,   468,    -1,    -1,    -1,   472,    -1,    -1,    -1,   476,
      -1,   478,   479,   480,   481,    -1,   483,   484,   485,   486,
     487,    -1,    -1,    -1,    -1,    -1,    -1,   494,   495,    -1,
     497,    -1,    -1,   500,    -1,    -1,   503,   504,   505,    -1,
      -1,   508,   509,    -1,   511,   512,   513,   514,   515,   516,
      -1,    -1,   519,   520,   521,   522,    -1,   524,   525,    -1,
      -1,   528,   529,   530,   531,    -1,   533,   534,   535,    -1,
     537,   538,   539,   540,    -1,    -1,    -1,    -1,    -1,   546,
     547,    -1,    -1,    -1,   551,   552,   553,   554,    -1,   556,
     557,    -1,   559,   560,    -1,   562,   563,    -1,    -1,   566,
      -1,    -1,   569,    -1,   571,    -1,   573,   574,    -1,    -1,
      -1,    -1,    -1,    -1,   581,    -1,    -1,   584,    -1,    -1,
      -1,   588,   589,   590,   591,   592,    -1,    -1,    -1,    -1,
      -1,    -1,   599,   600,    -1,   602,   603,   604,    -1,     5,
     607,     7,     8,     9,    10,    11,    -1,    -1,    -1,    -1,
      -1,    17,    -1,    -1,    20,    -1,    22,    23,    24,    25,
      26,    27,    28,    -1,    30,    -1,    -1,    -1,    34,    -1,
      -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,    45,
      -1,    47,    48,    -1,    -1,    51,    -1,    -1,    54,    55,
      -1,    57,    58,    -1,    60,    -1,    62,    63,    64,    65,
      66,    67,    -1,    69,    70,    -1,    72,    73,    74,    75,
      76,    77,    78,    79,    -1,    81,    82,    -1,    84,    85,
      86,    87,    88,    -1,    90,    -1,    -1,    93,    -1,    -1,
      96,    -1,    98,    99,    -1,   101,    -1,    -1,    -1,   105,
     106,   107,    -1,    -1,   110,    -1,    -1,    -1,    -1,   115,
     116,    -1,    -1,    -1,    -1,   121,   122,    -1,   124,    -1,
      -1,    -1,   128,    -1,   130,   131,   132,   133,   134,    -1,
      -1,    -1,   138,    -1,    -1,   141,   142,   143,    -1,    -1,
      -1,   147,    -1,   149,   150,    -1,   152,   153,   154,    -1,
      -1,   157,   158,    -1,   160,   161,   162,   163,   164,   165,
      -1,    -1,   168,   169,   170,    -1,    -1,   173,   174,    -1,
     176,   177,   178,    -1,    -1,   181,    -1,    -1,    -1,   185,
      -1,   187,    -1,   189,    -1,   191,   192,   193,   194,    -1,
     196,    -1,   198,    -1,    -1,    -1,   202,   203,    -1,   205,
      -1,    -1,   208,   209,    -1,    -1,    -1,   213,   214,   215,
     216,    -1,    -1,   219,   220,   221,    -1,    -1,   224,    -1,
      -1,    -1,    -1,   229,   230,    -1,    -1,    -1,   234,    -1,
     236,   237,    -1,   239,   240,    -1,    -1,    -1,   244,    -1,
      -1,   247,   248,    -1,    -1,   251,    -1,    -1,   254,   255,
     256,    -1,    -1,    -1,    -1,   261,   262,    -1,   264,    -1,
     266,    -1,   268,   269,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,    -1,
     296,   297,   298,    -1,   300,   301,   302,   303,    -1,   305,
     306,    -1,    -1,    -1,    -1,   311,   312,   313,   314,   315,
     316,    -1,    -1,   319,   320,    -1,   322,    -1,   324,    -1,
     326,   327,   328,   329,   330,   331,   332,   333,   334,    -1,
      -1,   337,   338,    -1,    -1,   341,   342,   343,   344,    -1,
      -1,    -1,   348,   349,    -1,    -1,    -1,   353,    -1,   355,
     356,   357,    -1,    -1,   360,   361,    -1,   363,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   373,   374,   375,
      -1,   377,   378,    -1,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,    -1,    -1,   392,   393,   394,    -1,
     396,    -1,   398,   399,   400,   401,   402,    -1,   404,   405,
     406,    -1,    -1,   409,    -1,    -1,    -1,   413,   414,   415,
     416,   417,    -1,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,    -1,   429,   430,   431,    -1,    -1,   434,    -1,
     436,    -1,   438,   439,    -1,   441,   442,   443,    -1,   445,
      -1,    -1,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,    -1,   460,   461,    -1,    -1,    -1,   465,
     466,   467,   468,    -1,    -1,    -1,   472,    -1,    -1,    -1,
     476,    -1,   478,   479,   480,   481,    -1,   483,   484,   485,
     486,   487,    -1,    -1,    -1,    -1,    -1,    -1,   494,   495,
      -1,   497,    -1,    -1,   500,    -1,    -1,   503,   504,   505,
      -1,    -1,   508,   509,    -1,   511,   512,   513,   514,   515,
     516,    -1,    -1,   519,   520,   521,   522,    -1,   524,   525,
      -1,    -1,   528,   529,   530,   531,    -1,   533,   534,   535,
      -1,   537,   538,   539,   540,    -1,    -1,    -1,    -1,    -1,
     546,   547,    -1,    -1,    -1,   551,   552,   553,   554,    -1,
     556,   557,    -1,   559,   560,    -1,   562,   563,    -1,    -1,
     566,    -1,    -1,   569,    -1,   571,    -1,   573,   574,    -1,
      -1,    -1,    -1,    -1,    -1,   581,    -1,    -1,   584,    -1,
      -1,    -1,   588,   589,   590,   591,   592,    -1,    -1,    -1,
      -1,    -1,    -1,   599,   600,    -1,   602,   603,   604,    -1,
       5,   607,     7,     8,     9,    10,    11,    12,    -1,    -1,
      -1,    -1,    17,    -1,    -1,    20,    -1,    22,    23,    24,
      25,    26,    27,    28,    -1,    30,    -1,    -1,    -1,    34,
      -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,
      45,    -1,    47,    48,    -1,    -1,    51,    -1,    -1,    54,
      55,    -1,    57,    58,    -1,    60,    -1,    62,    63,    64,
      65,    66,    67,    -1,    69,    70,    -1,    72,    73,    74,
      75,    76,    77,    78,    79,    -1,    81,    82,    -1,    84,
      85,    86,    87,    88,    -1,    90,    -1,    -1,    93,    -1,
      -1,    96,    -1,    98,    -1,    -1,   101,    -1,    -1,    -1,
     105,   106,   107,    -1,    -1,   110,    -1,    -1,    -1,    -1,
     115,   116,    -1,    -1,    -1,    -1,   121,   122,    -1,   124,
      -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,   134,
      -1,    -1,    -1,   138,    -1,    -1,   141,   142,   143,    -1,
      -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,   154,
      -1,    -1,   157,   158,    -1,   160,   161,   162,   163,   164,
     165,    -1,    -1,   168,   169,   170,    -1,    -1,   173,   174,
      -1,   176,   177,   178,    -1,    -1,   181,    -1,    -1,    -1,
     185,    -1,   187,    -1,   189,    -1,   191,   192,   193,   194,
      -1,   196,    -1,   198,    -1,    -1,    -1,   202,   203,    -1,
     205,    -1,    -1,   208,   209,    -1,    -1,    -1,   213,   214,
     215,   216,    -1,    -1,   219,   220,   221,    -1,    -1,   224,
      -1,    -1,    -1,    -1,   229,   230,    -1,    -1,    -1,   234,
      -1,   236,   237,    -1,   239,   240,    -1,    -1,    -1,   244,
      -1,    -1,   247,   248,    -1,    -1,   251,    -1,    -1,   254,
     255,   256,    -1,    -1,    -1,    -1,   261,   262,    -1,   264,
      -1,   266,    -1,   268,   269,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
      -1,   296,   297,   298,    -1,   300,   301,   302,   303,    -1,
     305,   306,    -1,    -1,    -1,    -1,   311,   312,   313,   314,
     315,   316,    -1,    -1,   319,   320,    -1,   322,    -1,   324,
      -1,   326,   327,   328,   329,   330,   331,   332,   333,   334,
      -1,    -1,   337,   338,    -1,    -1,   341,   342,   343,   344,
      -1,    -1,    -1,   348,   349,    -1,    -1,    -1,   353,    -1,
     355,   356,   357,    -1,    -1,   360,   361,    -1,   363,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   373,   374,
     375,    -1,   377,   378,    -1,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,    -1,    -1,   392,   393,   394,
      -1,   396,    -1,   398,   399,   400,   401,   402,    -1,   404,
     405,   406,    -1,    -1,   409,    -1,    -1,    -1,   413,   414,
     415,   416,   417,    -1,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,    -1,   429,   430,   431,    -1,    -1,   434,
      -1,   436,    -1,   438,   439,    -1,   441,   442,   443,    -1,
     445,    -1,    -1,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,    -1,   460,   461,    -1,    -1,    -1,
     465,   466,   467,   468,    -1,    -1,    -1,   472,    -1,    -1,
      -1,   476,    -1,   478,   479,   480,   481,    -1,   483,   484,
     485,   486,   487,    -1,    -1,    -1,    -1,    -1,    -1,   494,
     495,    -1,   497,    -1,    -1,   500,    -1,    -1,   503,   504,
     505,    -1,    -1,   508,   509,    -1,   511,   512,   513,   514,
     515,   516,    -1,    -1,   519,   520,   521,   522,    -1,   524,
     525,    -1,    -1,   528,   529,   530,   531,    -1,   533,   534,
     535,    -1,   537,   538,   539,   540,    -1,    -1,    -1,    -1,
      -1,   546,   547,    -1,    -1,    -1,   551,   552,   553,   554,
      -1,   556,   557,    -1,   559,   560,    -1,   562,   563,    -1,
      -1,   566,    -1,    -1,   569,    -1,   571,    -1,   573,   574,
      -1,    -1,    -1,    -1,    -1,    -1,   581,    -1,    -1,   584,
      -1,    -1,    -1,   588,   589,   590,   591,   592,    -1,    -1,
      -1,    -1,    -1,    -1,   599,   600,    -1,   602,   603,   604,
      -1,     5,   607,     7,     8,     9,    10,    11,    -1,    -1,
      -1,    -1,    -1,    17,    -1,    -1,    20,    -1,    22,    23,
      24,    25,    26,    27,    28,    -1,    30,    -1,    -1,    -1,
      34,    35,    -1,    -1,    38,    -1,    -1,    41,    42,    43,
      -1,    45,    -1,    47,    48,    -1,    -1,    51,    -1,    -1,
      54,    55,    -1,    57,    58,    -1,    60,    -1,    62,    63,
      64,    65,    66,    67,    -1,    69,    70,    -1,    72,    73,
      74,    75,    76,    77,    78,    79,    -1,    81,    82,    -1,
      84,    85,    86,    87,    88,    -1,    90,    -1,    -1,    93,
      -1,    -1,    96,    -1,    98,    -1,    -1,   101,    -1,    -1,
      -1,   105,   106,   107,    -1,    -1,   110,    -1,    -1,    -1,
      -1,   115,   116,    -1,    -1,    -1,    -1,   121,   122,    -1,
     124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,
     134,    -1,    -1,    -1,   138,    -1,    -1,   141,   142,   143,
      -1,    -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,
     154,    -1,    -1,   157,   158,    -1,   160,   161,   162,   163,
     164,   165,    -1,    -1,   168,   169,   170,    -1,    -1,   173,
     174,    -1,   176,   177,   178,    -1,    -1,   181,    -1,    -1,
      -1,   185,    -1,   187,    -1,   189,    -1,   191,   192,   193,
     194,    -1,   196,    -1,   198,    -1,    -1,    -1,   202,   203,
      -1,   205,   206,    -1,   208,   209,    -1,    -1,    -1,   213,
     214,   215,   216,    -1,    -1,   219,   220,   221,    -1,    -1,
     224,    -1,    -1,    -1,    -1,   229,   230,    -1,    -1,    -1,
     234,    -1,   236,   237,    -1,   239,   240,    -1,    -1,    -1,
     244,    -1,    -1,   247,   248,    -1,    -1,   251,    -1,    -1,
     254,   255,    -1,    -1,    -1,    -1,    -1,   261,   262,    -1,
     264,    -1,   266,    -1,   268,   269,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,    -1,   296,   297,   298,    -1,   300,   301,   302,   303,
      -1,   305,   306,    -1,    -1,    -1,    -1,   311,   312,   313,
     314,   315,   316,    -1,    -1,   319,   320,    -1,   322,    -1,
     324,    -1,   326,   327,   328,   329,   330,   331,   332,   333,
     334,    -1,    -1,   337,   338,    -1,    -1,   341,   342,   343,
     344,    -1,    -1,    -1,   348,   349,    -1,    -1,    -1,   353,
      -1,   355,   356,   357,    -1,    -1,   360,   361,    -1,   363,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   373,
     374,   375,    -1,   377,   378,    -1,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,    -1,    -1,   392,   393,
     394,    -1,   396,    -1,   398,   399,   400,   401,   402,    -1,
     404,   405,   406,    -1,    -1,   409,    -1,    -1,    -1,   413,
     414,   415,   416,   417,    -1,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,    -1,   429,   430,   431,    -1,    -1,
     434,    -1,   436,    -1,   438,   439,    -1,   441,   442,   443,
      -1,   445,    -1,    -1,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,    -1,   460,   461,    -1,    -1,
      -1,   465,   466,   467,   468,    -1,    -1,    -1,   472,    -1,
      -1,    -1,   476,    -1,   478,   479,   480,   481,    -1,   483,
     484,   485,   486,   487,    -1,    -1,    -1,    -1,    -1,    -1,
     494,   495,    -1,   497,    -1,    -1,   500,    -1,    -1,   503,
     504,   505,    -1,    -1,   508,   509,    -1,   511,   512,   513,
     514,   515,   516,    -1,    -1,   519,   520,   521,   522,    -1,
     524,   525,    -1,    -1,   528,   529,   530,   531,    -1,   533,
     534,   535,    -1,   537,   538,   539,   540,    -1,    -1,    -1,
      -1,    -1,   546,   547,    -1,    -1,    -1,   551,   552,   553,
     554,    -1,   556,   557,    -1,   559,   560,    -1,   562,   563,
      -1,    -1,   566,    -1,    -1,   569,    -1,   571,    -1,   573,
     574,    -1,    -1,    -1,    -1,    -1,    -1,   581,    -1,    -1,
     584,    -1,    -1,    -1,   588,   589,   590,   591,   592,    -1,
      -1,    -1,    -1,    -1,    -1,   599,   600,    -1,   602,   603,
     604,    -1,     5,   607,     7,     8,     9,    10,    11,    -1,
      -1,    -1,    -1,    -1,    17,    -1,    -1,    20,    -1,    22,
      23,    24,    25,    26,    27,    28,    -1,    30,    -1,    -1,
      33,    34,    -1,    -1,    -1,    38,    -1,    -1,    41,    42,
      43,    -1,    45,    -1,    47,    48,    -1,    -1,    51,    -1,
      -1,    54,    55,    -1,    57,    58,    -1,    60,    -1,    62,
      63,    64,    65,    66,    67,    -1,    69,    70,    -1,    72,
      73,    74,    75,    76,    77,    78,    79,    -1,    81,    82,
      -1,    84,    85,    86,    87,    88,    -1,    90,    -1,    -1,
      93,    -1,    -1,    96,    -1,    98,    -1,    -1,   101,    -1,
      -1,    -1,   105,   106,   107,    -1,    -1,   110,    -1,    -1,
      -1,    -1,   115,   116,    -1,    -1,    -1,    -1,   121,   122,
      -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,
     133,   134,    -1,    -1,    -1,   138,    -1,    -1,   141,   142,
     143,    -1,    -1,    -1,   147,    -1,   149,   150,    -1,   152,
     153,   154,    -1,    -1,   157,   158,    -1,   160,   161,   162,
     163,   164,   165,    -1,    -1,   168,   169,   170,    -1,    -1,
     173,   174,    -1,   176,   177,   178,    -1,    -1,   181,    -1,
      -1,    -1,   185,    -1,   187,    -1,   189,    -1,   191,   192,
     193,   194,    -1,   196,    -1,   198,    -1,    -1,    -1,   202,
     203,    -1,   205,    -1,    -1,   208,   209,    -1,    -1,    -1,
     213,   214,   215,   216,    -1,    -1,   219,   220,   221,    -1,
      -1,   224,    -1,    -1,    -1,    -1,   229,   230,    -1,    -1,
      -1,   234,    -1,   236,   237,    -1,   239,   240,    -1,    -1,
      -1,   244,    -1,    -1,   247,   248,    -1,    -1,   251,    -1,
      -1,   254,   255,   256,    -1,    -1,    -1,    -1,   261,   262,
      -1,   264,    -1,   266,    -1,   268,   269,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,    -1,   296,   297,   298,    -1,   300,   301,   302,
     303,    -1,   305,   306,    -1,    -1,    -1,    -1,   311,   312,
     313,   314,   315,   316,    -1,    -1,   319,   320,    -1,   322,
      -1,   324,    -1,   326,   327,   328,   329,   330,   331,   332,
     333,   334,    -1,    -1,   337,   338,    -1,    -1,   341,   342,
     343,   344,    -1,    -1,    -1,   348,   349,    -1,    -1,    -1,
     353,    -1,   355,   356,   357,    -1,    -1,   360,   361,    -1,
     363,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     373,   374,   375,    -1,   377,   378,    -1,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,    -1,    -1,   392,
     393,   394,    -1,   396,    -1,   398,   399,   400,   401,   402,
      -1,   404,   405,   406,    -1,    -1,   409,    -1,    -1,    -1,
     413,   414,   415,   416,   417,    -1,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,    -1,   429,   430,   431,    -1,
      -1,   434,    -1,   436,    -1,   438,   439,    -1,   441,   442,
     443,    -1,   445,    -1,    -1,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,    -1,   460,   461,    -1,
      -1,    -1,   465,   466,   467,   468,    -1,    -1,    -1,   472,
      -1,    -1,    -1,   476,    -1,   478,   479,   480,   481,    -1,
     483,   484,   485,   486,   487,    -1,    -1,    -1,    -1,    -1,
      -1,   494,   495,    -1,   497,    -1,    -1,   500,    -1,    -1,
     503,   504,   505,    -1,    -1,   508,   509,    -1,   511,   512,
     513,   514,   515,   516,    -1,    -1,   519,   520,   521,   522,
      -1,   524,   525,    -1,    -1,   528,   529,   530,   531,    -1,
     533,   534,   535,    -1,   537,   538,   539,   540,    -1,    -1,
      -1,    -1,    -1,   546,   547,    -1,    -1,    -1,   551,   552,
     553,   554,    -1,   556,   557,    -1,   559,   560,    -1,   562,
     563,    -1,    -1,   566,    -1,    -1,   569,    -1,   571,    -1,
     573,   574,    -1,    -1,    -1,    -1,    -1,    -1,   581,    -1,
      -1,   584,    -1,    -1,    -1,   588,   589,   590,   591,   592,
      -1,    -1,    -1,    -1,    -1,    -1,   599,   600,    -1,   602,
     603,   604,    -1,     5,   607,     7,     8,     9,    10,    11,
      -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,    20,    -1,
      22,    23,    24,    25,    26,    27,    28,    -1,    30,    -1,
      -1,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    41,
      42,    43,    -1,    45,    -1,    47,    48,    -1,    -1,    51,
      -1,    -1,    54,    55,    -1,    57,    58,    -1,    60,    -1,
      62,    63,    64,    65,    66,    67,    -1,    69,    70,    -1,
      72,    73,    74,    75,    76,    77,    78,    79,    -1,    81,
      82,    -1,    84,    85,    86,    87,    88,    -1,    90,    -1,
      -1,    93,    -1,    -1,    96,    -1,    98,    -1,    -1,   101,
      -1,    -1,    -1,   105,   106,   107,    -1,    -1,   110,    -1,
      -1,    -1,    -1,   115,   116,    -1,    -1,    -1,   120,   121,
     122,    -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,
     132,   133,   134,    -1,    -1,    -1,   138,    -1,    -1,   141,
     142,   143,    -1,    -1,    -1,   147,    -1,   149,   150,    -1,
     152,   153,   154,    -1,    -1,   157,   158,    -1,   160,   161,
     162,   163,   164,   165,    -1,    -1,   168,   169,   170,    -1,
      -1,   173,   174,    -1,   176,   177,   178,    -1,    -1,   181,
      -1,    -1,    -1,   185,    -1,   187,    -1,   189,    -1,   191,
     192,   193,   194,    -1,   196,    -1,   198,    -1,    -1,    -1,
     202,   203,    -1,   205,    -1,    -1,   208,   209,    -1,    -1,
      -1,   213,   214,   215,   216,    -1,    -1,   219,   220,   221,
      -1,    -1,   224,    -1,    -1,    -1,    -1,   229,   230,    -1,
      -1,    -1,   234,    -1,   236,   237,    -1,   239,   240,    -1,
      -1,    -1,   244,    -1,    -1,   247,   248,    -1,    -1,   251,
      -1,    -1,   254,   255,   256,    -1,    -1,    -1,    -1,   261,
     262,    -1,   264,    -1,   266,    -1,   268,   269,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,    -1,   296,   297,   298,    -1,   300,   301,
     302,   303,    -1,   305,   306,    -1,    -1,    -1,    -1,   311,
     312,   313,   314,   315,   316,    -1,    -1,   319,   320,    -1,
     322,    -1,   324,    -1,   326,   327,   328,   329,   330,   331,
     332,   333,   334,    -1,    -1,   337,   338,    -1,    -1,   341,
     342,   343,   344,    -1,    -1,    -1,   348,   349,    -1,    -1,
      -1,   353,    -1,   355,   356,   357,    -1,    -1,   360,   361,
      -1,   363,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   373,   374,   375,    -1,   377,   378,    -1,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,    -1,    -1,
     392,   393,   394,    -1,   396,    -1,   398,   399,   400,   401,
     402,    -1,   404,   405,   406,    -1,    -1,   409,    -1,    -1,
      -1,   413,   414,   415,   416,   417,    -1,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,    -1,   429,   430,   431,
      -1,    -1,   434,    -1,   436,    -1,   438,   439,    -1,   441,
     442,   443,    -1,   445,    -1,    -1,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,    -1,   460,   461,
      -1,    -1,    -1,   465,   466,   467,   468,    -1,    -1,    -1,
     472,    -1,    -1,    -1,   476,    -1,   478,   479,   480,   481,
      -1,   483,   484,   485,   486,   487,    -1,    -1,    -1,    -1,
      -1,    -1,   494,   495,    -1,   497,    -1,    -1,   500,    -1,
      -1,   503,   504,   505,    -1,    -1,   508,   509,    -1,   511,
     512,   513,   514,   515,   516,    -1,    -1,   519,   520,   521,
     522,    -1,   524,   525,    -1,    -1,   528,   529,   530,   531,
      -1,   533,   534,   535,    -1,   537,   538,   539,   540,    -1,
      -1,    -1,    -1,    -1,   546,   547,    -1,    -1,    -1,   551,
     552,   553,   554,    -1,   556,   557,    -1,   559,   560,    -1,
     562,   563,    -1,    -1,   566,    -1,    -1,   569,    -1,   571,
      -1,   573,   574,    -1,    -1,    -1,    -1,    -1,    -1,   581,
      -1,    -1,   584,    -1,    -1,    -1,   588,   589,   590,   591,
     592,    -1,    -1,    -1,    -1,    -1,    -1,   599,   600,    -1,
     602,   603,   604,    -1,     5,   607,     7,     8,     9,    10,
      11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,    20,
      -1,    22,    23,    24,    25,    26,    27,    28,    -1,    30,
      -1,    -1,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,
      41,    42,    43,    -1,    45,    -1,    47,    48,    -1,    -1,
      51,    -1,    -1,    54,    55,    -1,    57,    58,    -1,    60,
      -1,    62,    63,    64,    65,    66,    67,    -1,    69,    70,
      -1,    72,    73,    74,    75,    76,    77,    78,    79,    -1,
      81,    82,    -1,    84,    85,    86,    87,    88,    -1,    90,
      -1,    -1,    93,    -1,    -1,    96,    -1,    98,    -1,    -1,
     101,    -1,    -1,    -1,   105,   106,   107,    -1,    -1,   110,
      -1,    -1,    -1,    -1,   115,   116,    -1,    -1,    -1,    -1,
     121,   122,    -1,   124,    -1,    -1,    -1,   128,    -1,   130,
     131,   132,   133,   134,    -1,    -1,    -1,   138,    -1,    -1,
     141,   142,   143,    -1,    -1,    -1,   147,    -1,   149,   150,
      -1,   152,   153,   154,    -1,    -1,   157,   158,    -1,   160,
     161,   162,   163,   164,   165,    -1,    -1,   168,   169,   170,
      -1,    -1,   173,   174,    -1,   176,   177,   178,    -1,    -1,
     181,    -1,    -1,    -1,   185,    -1,   187,    -1,   189,    -1,
     191,   192,   193,   194,    -1,   196,    -1,   198,    -1,    -1,
      -1,   202,   203,    -1,   205,    -1,    -1,   208,   209,    -1,
      -1,    -1,   213,   214,   215,   216,    -1,    -1,   219,   220,
     221,    -1,    -1,   224,    -1,    -1,    -1,    -1,   229,   230,
      -1,    -1,    -1,   234,    -1,   236,   237,    -1,   239,   240,
      -1,    -1,    -1,   244,    -1,    -1,   247,   248,    -1,    -1,
     251,    -1,    -1,   254,   255,   256,    -1,    -1,    -1,    -1,
     261,   262,    -1,   264,    -1,   266,    -1,   268,   269,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,    -1,   296,   297,   298,    -1,   300,
     301,   302,   303,    -1,   305,   306,    -1,    -1,    -1,    -1,
     311,   312,   313,   314,   315,   316,    -1,    -1,   319,   320,
      -1,   322,    -1,   324,    -1,   326,   327,   328,   329,   330,
     331,   332,   333,   334,    -1,    -1,   337,   338,    -1,    -1,
     341,   342,   343,   344,    -1,    -1,    -1,   348,   349,    -1,
      -1,    -1,   353,    -1,   355,   356,   357,    -1,    -1,   360,
     361,    -1,   363,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   373,   374,   375,    -1,   377,   378,    -1,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,    -1,
      -1,   392,   393,   394,    -1,   396,    -1,   398,   399,   400,
     401,   402,    -1,   404,   405,   406,    -1,    -1,   409,    -1,
      -1,    -1,   413,   414,   415,   416,   417,    -1,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,    -1,   429,   430,
     431,    -1,    -1,   434,    -1,   436,    -1,   438,   439,    -1,
     441,   442,   443,    -1,   445,    -1,    -1,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,    -1,   460,
     461,    -1,    -1,    -1,   465,   466,   467,   468,    -1,    -1,
      -1,   472,    -1,    -1,    -1,   476,    -1,   478,   479,   480,
     481,    -1,   483,   484,   485,   486,   487,    -1,    -1,    -1,
      -1,    -1,    -1,   494,   495,    -1,   497,    -1,    -1,   500,
      -1,    -1,   503,   504,   505,    -1,    -1,   508,   509,    -1,
     511,   512,   513,   514,   515,   516,    -1,    -1,   519,   520,
     521,   522,    -1,   524,   525,    -1,    -1,   528,   529,   530,
     531,    -1,   533,   534,   535,    -1,   537,   538,   539,   540,
      -1,    -1,    -1,    -1,    -1,   546,   547,    -1,    -1,    -1,
     551,   552,   553,   554,    -1,   556,   557,    -1,   559,   560,
      -1,   562,   563,    -1,    -1,   566,    -1,    -1,   569,    -1,
     571,    -1,   573,   574,    -1,    -1,    -1,    -1,    -1,    -1,
     581,    -1,    -1,   584,    -1,    -1,    -1,   588,   589,   590,
     591,   592,    -1,    -1,    -1,    -1,    -1,    -1,   599,   600,
      -1,   602,   603,   604,    -1,     5,   607,     7,     8,     9,
      10,    11,    -1,    -1,    -1,    -1,    -1,    17,    18,    -1,
      20,    -1,    22,    23,    24,    25,    26,    27,    28,    -1,
      30,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,    -1,
      -1,    41,    42,    43,    -1,    45,    -1,    47,    48,    -1,
      -1,    51,    -1,    -1,    54,    55,    -1,    57,    58,    -1,
      60,    -1,    62,    63,    64,    65,    66,    67,    -1,    69,
      70,    -1,    72,    73,    74,    75,    76,    77,    78,    79,
      -1,    81,    82,    -1,    84,    85,    86,    87,    88,    -1,
      90,    -1,    -1,    93,    -1,    -1,    96,    -1,    98,    -1,
      -1,   101,    -1,    -1,    -1,   105,   106,   107,    -1,    -1,
     110,    -1,    -1,    -1,    -1,   115,   116,    -1,    -1,    -1,
      -1,   121,   122,    -1,   124,    -1,    -1,    -1,   128,    -1,
     130,   131,   132,   133,   134,    -1,    -1,    -1,   138,    -1,
      -1,   141,   142,   143,    -1,    -1,    -1,   147,    -1,   149,
     150,    -1,   152,   153,   154,    -1,    -1,   157,   158,    -1,
     160,   161,   162,   163,   164,   165,    -1,    -1,   168,   169,
     170,    -1,    -1,   173,   174,    -1,   176,   177,   178,    -1,
      -1,   181,    -1,    -1,    -1,   185,    -1,   187,    -1,   189,
      -1,   191,   192,   193,   194,    -1,   196,    -1,   198,    -1,
      -1,    -1,   202,   203,    -1,   205,    -1,    -1,   208,   209,
      -1,    -1,    -1,   213,   214,   215,   216,    -1,    -1,   219,
     220,   221,    -1,    -1,   224,    -1,    -1,    -1,    -1,   229,
     230,    -1,    -1,    -1,   234,    -1,   236,   237,    -1,   239,
     240,    -1,    -1,    -1,   244,    -1,    -1,   247,   248,    -1,
      -1,   251,    -1,    -1,   254,   255,    -1,    -1,    -1,    -1,
      -1,   261,   262,    -1,   264,    -1,   266,    -1,   268,   269,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,    -1,   296,   297,   298,    -1,
     300,   301,   302,   303,    -1,   305,   306,    -1,    -1,    -1,
      -1,   311,   312,   313,   314,   315,   316,    -1,    -1,   319,
     320,    -1,   322,    -1,   324,    -1,   326,   327,   328,   329,
     330,   331,   332,   333,   334,    -1,    -1,   337,   338,    -1,
      -1,   341,   342,   343,   344,    -1,    -1,    -1,   348,   349,
      -1,    -1,    -1,   353,    -1,   355,   356,   357,    -1,    -1,
     360,   361,    -1,   363,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   373,   374,   375,    -1,   377,   378,    -1,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
      -1,    -1,   392,   393,   394,    -1,   396,    -1,   398,   399,
     400,   401,   402,    -1,   404,   405,   406,    -1,    -1,   409,
      -1,    -1,    -1,   413,   414,   415,   416,   417,    -1,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,    -1,   429,
     430,   431,    -1,    -1,   434,    -1,   436,    -1,   438,   439,
      -1,   441,   442,   443,    -1,   445,    -1,    -1,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,    -1,
     460,   461,    -1,    -1,    -1,   465,   466,   467,   468,    -1,
      -1,    -1,   472,    -1,    -1,    -1,   476,    -1,   478,   479,
     480,   481,    -1,   483,   484,   485,   486,   487,    -1,    -1,
      -1,    -1,    -1,    -1,   494,   495,    -1,   497,    -1,    -1,
     500,    -1,    -1,   503,   504,   505,    -1,    -1,   508,   509,
      -1,   511,   512,   513,   514,   515,   516,    -1,    -1,   519,
     520,   521,   522,    -1,   524,   525,    -1,    -1,   528,   529,
     530,   531,    -1,   533,   534,   535,    -1,   537,   538,   539,
     540,    -1,    -1,    -1,    -1,    -1,   546,   547,    -1,    -1,
      -1,   551,   552,   553,   554,    -1,   556,   557,    -1,   559,
     560,    -1,   562,   563,    -1,    -1,   566,    -1,    -1,   569,
      -1,   571,    -1,   573,   574,    -1,    -1,    -1,    -1,    -1,
      -1,   581,    -1,    -1,   584,    -1,    -1,    -1,   588,   589,
     590,   591,   592,    -1,    -1,    -1,    -1,    -1,    -1,   599,
     600,    -1,   602,   603,   604,    -1,     5,   607,     7,     8,
       9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,
      -1,    20,    -1,    22,    23,    24,    25,    26,    27,    28,
      -1,    30,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,
      -1,    -1,    41,    42,    43,    -1,    45,    -1,    47,    48,
      -1,    -1,    51,    -1,    -1,    54,    55,    -1,    57,    58,
      -1,    60,    -1,    62,    63,    64,    65,    66,    67,    -1,
      69,    70,    -1,    72,    73,    74,    75,    76,    77,    78,
      79,    -1,    81,    82,    -1,    84,    85,    86,    87,    88,
      89,    90,    -1,    -1,    93,    -1,    -1,    96,    -1,    98,
      -1,    -1,   101,    -1,    -1,    -1,   105,   106,   107,    -1,
      -1,   110,    -1,    -1,    -1,    -1,   115,   116,    -1,    -1,
      -1,    -1,   121,   122,    -1,   124,    -1,    -1,    -1,   128,
      -1,   130,   131,   132,   133,   134,    -1,    -1,    -1,   138,
      -1,    -1,   141,   142,   143,    -1,    -1,    -1,   147,    -1,
     149,   150,    -1,   152,   153,   154,    -1,    -1,   157,   158,
      -1,   160,   161,   162,   163,   164,   165,    -1,   167,   168,
     169,   170,    -1,    -1,   173,   174,    -1,   176,   177,   178,
      -1,    -1,   181,    -1,    -1,    -1,   185,    -1,   187,    -1,
     189,    -1,   191,   192,   193,   194,    -1,   196,    -1,   198,
      -1,    -1,    -1,   202,   203,    -1,   205,    -1,    -1,   208,
     209,    -1,    -1,    -1,   213,   214,   215,   216,    -1,    -1,
     219,   220,   221,    -1,    -1,   224,    -1,    -1,    -1,    -1,
     229,   230,    -1,    -1,    -1,   234,    -1,   236,   237,    -1,
     239,   240,    -1,    -1,    -1,   244,    -1,    -1,   247,   248,
      -1,    -1,   251,    -1,    -1,   254,   255,    -1,    -1,    -1,
      -1,    -1,   261,   262,    -1,   264,    -1,   266,    -1,   268,
     269,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,    -1,   296,   297,   298,
      -1,   300,   301,   302,   303,    -1,   305,   306,    -1,    -1,
      -1,    -1,   311,   312,   313,   314,   315,   316,    -1,    -1,
     319,   320,    -1,   322,    -1,   324,    -1,   326,   327,   328,
     329,   330,   331,   332,   333,   334,    -1,    -1,   337,   338,
      -1,    -1,   341,   342,   343,   344,    -1,    -1,    -1,   348,
     349,    -1,    -1,    -1,   353,    -1,   355,   356,   357,    -1,
      -1,   360,   361,    -1,   363,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   373,   374,   375,    -1,   377,   378,
      -1,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,    -1,    -1,   392,   393,   394,    -1,   396,    -1,   398,
     399,   400,   401,   402,    -1,   404,   405,   406,    -1,    -1,
     409,    -1,    -1,    -1,   413,   414,   415,   416,   417,    -1,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,    -1,
     429,   430,   431,    -1,    -1,   434,    -1,   436,    -1,   438,
     439,    -1,   441,   442,   443,    -1,   445,    -1,    -1,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
      -1,   460,   461,    -1,    -1,    -1,   465,   466,   467,   468,
      -1,    -1,    -1,   472,    -1,    -1,    -1,   476,    -1,   478,
     479,   480,   481,    -1,   483,   484,   485,   486,   487,    -1,
      -1,    -1,    -1,    -1,    -1,   494,   495,    -1,   497,    -1,
      -1,   500,    -1,    -1,   503,   504,   505,    -1,    -1,   508,
     509,    -1,   511,   512,   513,   514,   515,   516,    -1,    -1,
     519,   520,   521,   522,    -1,   524,   525,    -1,    -1,   528,
     529,   530,   531,    -1,    -1,   534,   535,    -1,   537,   538,
     539,   540,    -1,    -1,    -1,    -1,    -1,   546,   547,    -1,
      -1,    -1,   551,   552,   553,   554,    -1,   556,   557,    -1,
     559,   560,    -1,   562,   563,    -1,    -1,   566,    -1,    -1,
     569,    -1,   571,    -1,   573,   574,    -1,    -1,    -1,    -1,
      -1,    -1,   581,    -1,    -1,   584,    -1,    -1,    -1,   588,
     589,   590,   591,   592,    -1,    -1,    -1,    -1,    -1,    -1,
     599,   600,    -1,   602,   603,   604,    -1,     5,   607,     7,
       8,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,
      -1,    -1,    20,    -1,    22,    23,    24,    25,    26,    27,
      28,    -1,    30,    -1,    -1,    -1,    34,    -1,    -1,    -1,
      38,    -1,    -1,    41,    42,    43,    -1,    45,    -1,    47,
      48,    -1,    -1,    51,    -1,    -1,    54,    55,    -1,    57,
      58,    -1,    60,    -1,    62,    63,    64,    65,    66,    67,
      -1,    69,    70,    -1,    72,    73,    74,    75,    76,    77,
      78,    79,    -1,    81,    82,    -1,    84,    85,    86,    87,
      88,    -1,    90,    -1,    -1,    93,    -1,    -1,    96,    -1,
      98,    -1,    -1,   101,    -1,    -1,    -1,   105,   106,   107,
      -1,    -1,   110,    -1,    -1,    -1,    -1,   115,   116,    -1,
      -1,    -1,    -1,   121,   122,    -1,   124,    -1,    -1,    -1,
     128,    -1,   130,   131,   132,   133,   134,    -1,    -1,    -1,
     138,    -1,    -1,   141,   142,   143,    -1,    -1,    -1,   147,
      -1,   149,   150,    -1,   152,   153,   154,    -1,    -1,   157,
     158,    -1,   160,   161,   162,   163,   164,   165,    -1,    -1,
     168,   169,   170,    -1,    -1,   173,   174,    -1,   176,   177,
     178,    -1,    -1,   181,    -1,    -1,    -1,   185,    -1,   187,
      -1,   189,    -1,   191,   192,   193,   194,    -1,   196,    -1,
     198,    -1,    -1,    -1,   202,   203,    -1,   205,    -1,    -1,
     208,   209,    -1,    -1,    -1,   213,   214,   215,   216,    -1,
      -1,   219,   220,   221,    -1,    -1,   224,    -1,    -1,    -1,
      -1,   229,   230,    -1,    -1,    -1,   234,    -1,   236,   237,
      -1,   239,   240,    -1,    -1,    -1,   244,    -1,    -1,   247,
     248,    -1,    -1,   251,    -1,    -1,   254,   255,    -1,    -1,
      -1,    -1,    -1,   261,   262,    -1,   264,    -1,   266,    -1,
     268,   269,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,    -1,   296,   297,
     298,    -1,   300,   301,   302,   303,    -1,   305,   306,    -1,
      -1,    -1,    -1,   311,   312,   313,   314,   315,   316,    -1,
      -1,   319,   320,    -1,   322,    -1,   324,    -1,   326,   327,
     328,   329,   330,   331,   332,   333,   334,    -1,    -1,   337,
     338,    -1,    -1,   341,   342,   343,   344,    -1,    -1,    -1,
     348,   349,    -1,    -1,    -1,   353,    -1,   355,   356,   357,
      -1,    -1,   360,   361,    -1,   363,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   373,   374,   375,    -1,   377,
     378,    -1,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,    -1,    -1,   392,   393,   394,    -1,   396,    -1,
     398,   399,   400,   401,   402,    -1,   404,   405,   406,    -1,
      -1,   409,    -1,    -1,    -1,   413,   414,   415,   416,   417,
      -1,    -1,   420,   421,   422,   423,   424,    -1,   426,   427,
      -1,   429,   430,   431,    -1,    -1,   434,    -1,   436,    -1,
     438,   439,    -1,   441,   442,   443,    -1,   445,    -1,    -1,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,    -1,   460,   461,    -1,    -1,    -1,   465,   466,   467,
     468,    -1,    -1,    -1,   472,    -1,    -1,    -1,   476,    -1,
     478,   479,   480,   481,    -1,   483,   484,   485,   486,   487,
      -1,    -1,    -1,   491,    -1,    -1,   494,   495,    -1,   497,
      -1,    -1,   500,    -1,    -1,   503,   504,   505,    -1,    -1,
     508,   509,    -1,   511,   512,   513,   514,   515,   516,    -1,
      -1,   519,   520,   521,   522,    -1,   524,   525,    -1,    -1,
     528,   529,   530,   531,    -1,    -1,   534,   535,    -1,   537,
     538,   539,   540,    -1,    -1,    -1,    -1,    -1,   546,   547,
      -1,    -1,    -1,   551,   552,   553,   554,    -1,   556,   557,
      -1,   559,   560,    -1,   562,   563,    -1,    -1,   566,    -1,
      -1,   569,    -1,   571,    -1,   573,   574,    -1,    -1,    -1,
      -1,    -1,    -1,   581,    -1,    -1,   584,    -1,    -1,    -1,
     588,   589,   590,   591,   592,    -1,    -1,    -1,    -1,    -1,
      -1,   599,   600,    -1,   602,   603,   604,    -1,     5,   607,
       7,     8,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,
      17,    -1,    -1,    20,    -1,    22,    23,    24,    25,    26,
      27,    28,    -1,    30,    -1,    -1,    -1,    34,    -1,    -1,
      -1,    38,    -1,    -1,    41,    42,    43,    -1,    45,    -1,
      47,    48,    -1,    -1,    51,    -1,    -1,    54,    55,    -1,
      57,    58,    -1,    60,    -1,    62,    63,    64,    65,    66,
      67,    -1,    69,    70,    -1,    72,    73,    74,    75,    76,
      77,    78,    79,    -1,    81,    82,    -1,    84,    85,    86,
      87,    88,    -1,    90,    -1,    -1,    93,    -1,    -1,    96,
      -1,    98,    -1,    -1,   101,    -1,    -1,    -1,   105,   106,
     107,    -1,    -1,   110,    -1,    -1,    -1,    -1,   115,   116,
      -1,    -1,    -1,    -1,   121,   122,    -1,   124,    -1,    -1,
      -1,   128,    -1,   130,   131,   132,   133,   134,    -1,    -1,
      -1,   138,    -1,    -1,   141,   142,   143,    -1,    -1,    -1,
     147,    -1,   149,   150,    -1,   152,   153,   154,    -1,    -1,
     157,   158,    -1,   160,   161,   162,   163,   164,   165,    -1,
      -1,   168,   169,   170,    -1,    -1,   173,   174,    -1,   176,
     177,   178,    -1,    -1,   181,    -1,    -1,    -1,   185,   186,
     187,    -1,   189,    -1,   191,   192,   193,   194,    -1,   196,
      -1,   198,    -1,    -1,    -1,   202,   203,    -1,   205,    -1,
      -1,   208,   209,    -1,    -1,    -1,   213,   214,   215,   216,
      -1,    -1,   219,   220,   221,    -1,    -1,   224,    -1,    -1,
      -1,    -1,   229,   230,    -1,    -1,    -1,   234,    -1,   236,
     237,    -1,   239,   240,    -1,    -1,    -1,   244,    -1,    -1,
     247,   248,    -1,    -1,   251,    -1,    -1,   254,   255,    -1,
      -1,    -1,    -1,    -1,   261,   262,    -1,   264,    -1,   266,
      -1,   268,   269,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,    -1,   296,
     297,   298,    -1,   300,   301,   302,   303,    -1,   305,   306,
      -1,    -1,    -1,    -1,   311,   312,   313,   314,   315,   316,
      -1,    -1,   319,   320,    -1,   322,    -1,   324,    -1,   326,
     327,   328,   329,   330,   331,   332,   333,   334,    -1,    -1,
     337,   338,    -1,    -1,   341,   342,   343,   344,    -1,    -1,
      -1,   348,   349,    -1,    -1,    -1,   353,    -1,   355,   356,
     357,    -1,    -1,   360,   361,    -1,   363,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   373,   374,   375,    -1,
     377,   378,    -1,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,    -1,    -1,   392,   393,   394,    -1,   396,
      -1,   398,   399,   400,   401,   402,    -1,   404,   405,   406,
      -1,    -1,   409,    -1,    -1,    -1,   413,   414,   415,   416,
     417,    -1,    -1,   420,   421,   422,   423,   424,    -1,   426,
     427,    -1,   429,   430,   431,    -1,    -1,   434,    -1,   436,
      -1,   438,   439,    -1,   441,   442,   443,    -1,   445,    -1,
      -1,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,    -1,   460,   461,    -1,    -1,    -1,   465,   466,
     467,   468,    -1,    -1,    -1,   472,    -1,    -1,    -1,   476,
      -1,   478,   479,   480,   481,    -1,   483,   484,   485,   486,
     487,    -1,    -1,    -1,    -1,    -1,    -1,   494,   495,    -1,
     497,    -1,    -1,   500,    -1,    -1,   503,   504,   505,    -1,
      -1,   508,   509,    -1,   511,   512,   513,   514,   515,   516,
      -1,    -1,   519,   520,   521,   522,    -1,   524,   525,    -1,
      -1,   528,   529,   530,   531,    -1,    -1,   534,   535,    -1,
     537,   538,   539,   540,    -1,    -1,    -1,    -1,    -1,   546,
     547,    -1,    -1,    -1,   551,   552,   553,   554,    -1,   556,
     557,    -1,   559,   560,    -1,   562,   563,    -1,    -1,   566,
      -1,    -1,   569,    -1,   571,    -1,   573,   574,    -1,    -1,
      -1,    -1,    -1,    -1,   581,    -1,    -1,   584,    -1,    -1,
      -1,   588,   589,   590,   591,   592,    -1,    -1,    -1,    -1,
      -1,    -1,   599,   600,    -1,   602,   603,   604,    -1,     5,
     607,     7,     8,     9,    10,    11,    -1,    -1,    -1,    -1,
      -1,    17,    -1,    -1,    20,    -1,    22,    23,    24,    25,
      26,    27,    28,    -1,    30,    -1,    -1,    -1,    34,    -1,
      -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,    45,
      -1,    47,    48,    -1,    -1,    51,    -1,    -1,    54,    55,
      -1,    57,    58,    -1,    60,    -1,    62,    63,    64,    65,
      66,    67,    -1,    69,    70,    -1,    72,    73,    74,    75,
      76,    77,    78,    79,    -1,    81,    82,    -1,    84,    85,
      86,    87,    88,    -1,    90,    -1,    -1,    93,    -1,    -1,
      96,    -1,    98,    -1,    -1,   101,    -1,    -1,    -1,   105,
     106,   107,    -1,    -1,   110,    -1,    -1,    -1,    -1,   115,
     116,    -1,    -1,    -1,   120,   121,   122,    -1,   124,    -1,
      -1,    -1,   128,    -1,   130,   131,   132,   133,   134,    -1,
      -1,    -1,   138,    -1,    -1,   141,   142,   143,    -1,    -1,
      -1,   147,    -1,   149,   150,    -1,   152,   153,   154,    -1,
      -1,   157,   158,    -1,   160,   161,   162,   163,   164,   165,
      -1,    -1,   168,   169,   170,    -1,    -1,   173,   174,    -1,
     176,   177,   178,    -1,    -1,   181,    -1,    -1,    -1,   185,
      -1,   187,    -1,   189,    -1,   191,   192,   193,   194,    -1,
     196,    -1,   198,    -1,    -1,    -1,   202,   203,    -1,   205,
      -1,    -1,   208,   209,    -1,    -1,    -1,   213,   214,   215,
     216,    -1,    -1,   219,   220,   221,    -1,    -1,   224,    -1,
      -1,    -1,    -1,   229,   230,    -1,    -1,    -1,   234,    -1,
     236,   237,    -1,   239,   240,    -1,    -1,    -1,   244,    -1,
      -1,   247,   248,    -1,    -1,   251,    -1,    -1,   254,   255,
      -1,    -1,    -1,    -1,    -1,   261,   262,    -1,   264,    -1,
     266,    -1,   268,   269,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,    -1,
     296,   297,   298,    -1,   300,   301,   302,   303,    -1,   305,
     306,    -1,    -1,    -1,    -1,   311,   312,   313,   314,   315,
     316,    -1,    -1,   319,   320,    -1,   322,    -1,   324,    -1,
     326,   327,   328,   329,   330,   331,   332,   333,   334,    -1,
      -1,   337,   338,    -1,    -1,   341,   342,   343,   344,    -1,
      -1,    -1,   348,   349,    -1,    -1,    -1,   353,    -1,   355,
     356,   357,    -1,    -1,   360,   361,    -1,   363,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   373,   374,   375,
      -1,   377,   378,    -1,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,    -1,    -1,   392,   393,   394,    -1,
     396,    -1,   398,   399,   400,   401,   402,    -1,   404,   405,
     406,    -1,    -1,   409,    -1,    -1,    -1,   413,   414,   415,
     416,   417,    -1,    -1,   420,   421,   422,   423,   424,    -1,
     426,   427,    -1,   429,   430,   431,    -1,    -1,   434,    -1,
     436,    -1,   438,   439,    -1,   441,   442,   443,    -1,   445,
      -1,    -1,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,    -1,   460,   461,    -1,    -1,    -1,   465,
     466,   467,   468,    -1,    -1,    -1,   472,    -1,    -1,    -1,
     476,    -1,   478,   479,   480,   481,    -1,   483,   484,   485,
     486,   487,    -1,    -1,    -1,    -1,    -1,    -1,   494,   495,
      -1,   497,    -1,    -1,   500,    -1,    -1,   503,   504,   505,
      -1,    -1,   508,   509,    -1,   511,   512,   513,   514,   515,
     516,    -1,    -1,   519,   520,   521,   522,    -1,   524,   525,
      -1,    -1,   528,   529,   530,   531,    -1,    -1,   534,   535,
      -1,   537,   538,   539,   540,    -1,    -1,    -1,    -1,    -1,
     546,   547,    -1,    -1,    -1,   551,   552,   553,   554,    -1,
     556,   557,    -1,   559,   560,    -1,   562,   563,    -1,    -1,
     566,    -1,    -1,   569,    -1,   571,    -1,   573,   574,    -1,
      -1,    -1,    -1,    -1,    -1,   581,    -1,    -1,   584,    -1,
      -1,    -1,   588,   589,   590,   591,   592,    -1,    -1,    -1,
      -1,    -1,    -1,   599,   600,    -1,   602,   603,   604,    -1,
       5,   607,     7,     8,     9,    10,    11,    -1,    -1,    -1,
      -1,    -1,    17,    -1,    -1,    20,    -1,    22,    23,    24,
      25,    26,    27,    28,    -1,    30,    -1,    -1,    -1,    34,
      -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,
      45,    -1,    47,    48,    -1,    -1,    51,    -1,    -1,    54,
      55,    -1,    57,    58,    -1,    60,    -1,    62,    63,    64,
      65,    66,    67,    -1,    69,    70,    -1,    72,    73,    74,
      75,    76,    77,    78,    79,    -1,    81,    82,    -1,    84,
      85,    86,    87,    88,    -1,    90,    -1,    -1,    93,    -1,
      -1,    96,    -1,    98,    -1,    -1,   101,    -1,    -1,    -1,
     105,   106,   107,    -1,    -1,   110,    -1,    -1,    -1,    -1,
     115,   116,    -1,    -1,    -1,   120,   121,   122,    -1,   124,
      -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,   134,
      -1,    -1,    -1,   138,    -1,    -1,   141,   142,   143,    -1,
      -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,   154,
      -1,    -1,   157,   158,    -1,   160,   161,   162,   163,   164,
     165,    -1,    -1,   168,   169,   170,    -1,    -1,   173,   174,
      -1,   176,   177,   178,    -1,    -1,   181,    -1,    -1,    -1,
     185,    -1,   187,    -1,   189,    -1,   191,   192,   193,   194,
      -1,   196,    -1,   198,    -1,    -1,    -1,   202,   203,    -1,
     205,    -1,    -1,   208,   209,    -1,    -1,    -1,   213,   214,
     215,   216,    -1,    -1,   219,   220,   221,    -1,    -1,   224,
      -1,    -1,    -1,    -1,   229,   230,    -1,    -1,    -1,   234,
      -1,   236,   237,    -1,   239,   240,    -1,    -1,    -1,   244,
      -1,    -1,   247,   248,    -1,    -1,   251,    -1,    -1,   254,
     255,    -1,    -1,    -1,    -1,    -1,   261,   262,    -1,   264,
      -1,   266,    -1,   268,   269,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
      -1,   296,   297,   298,    -1,   300,   301,   302,   303,    -1,
     305,   306,    -1,    -1,    -1,    -1,   311,   312,   313,   314,
     315,   316,    -1,    -1,   319,   320,    -1,   322,    -1,   324,
      -1,   326,   327,   328,   329,   330,   331,   332,   333,   334,
      -1,    -1,   337,   338,    -1,    -1,   341,   342,   343,   344,
      -1,    -1,    -1,   348,   349,    -1,    -1,    -1,   353,    -1,
     355,   356,   357,    -1,    -1,   360,   361,    -1,   363,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   373,   374,
     375,    -1,   377,   378,    -1,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,    -1,    -1,   392,   393,   394,
      -1,   396,    -1,   398,   399,   400,   401,   402,    -1,   404,
     405,   406,    -1,    -1,   409,    -1,    -1,    -1,   413,   414,
     415,   416,   417,    -1,    -1,   420,   421,   422,   423,   424,
      -1,   426,   427,    -1,   429,   430,   431,    -1,    -1,   434,
      -1,   436,    -1,   438,   439,    -1,   441,   442,   443,    -1,
     445,    -1,    -1,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,    -1,   460,   461,    -1,    -1,    -1,
     465,   466,   467,   468,    -1,    -1,    -1,   472,    -1,    -1,
      -1,   476,    -1,   478,   479,   480,   481,    -1,   483,   484,
     485,   486,   487,    -1,    -1,    -1,    -1,    -1,    -1,   494,
     495,    -1,   497,    -1,    -1,   500,    -1,    -1,   503,   504,
     505,    -1,    -1,   508,   509,    -1,   511,   512,   513,   514,
     515,   516,    -1,    -1,   519,   520,   521,   522,    -1,   524,
     525,    -1,    -1,   528,   529,   530,   531,    -1,    -1,   534,
     535,    -1,   537,   538,   539,   540,    -1,    -1,    -1,    -1,
      -1,   546,   547,    -1,    -1,    -1,   551,   552,   553,   554,
      -1,   556,   557,    -1,   559,   560,    -1,   562,   563,    -1,
      -1,   566,    -1,    -1,   569,    -1,   571,    -1,   573,   574,
      -1,    -1,    -1,    -1,    -1,    -1,   581,    -1,    -1,   584,
      -1,    -1,    -1,   588,   589,   590,   591,   592,    -1,    -1,
      -1,    -1,    -1,    -1,   599,   600,    -1,   602,   603,   604,
      -1,     5,   607,     7,     8,     9,    10,    11,    12,    -1,
      -1,    -1,    -1,    17,    -1,    -1,    20,    -1,    22,    23,
      24,    25,    26,    27,    28,    -1,    30,    -1,    -1,    -1,
      34,    -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,
      -1,    45,    -1,    47,    48,    -1,    -1,    51,    -1,    -1,
      54,    55,    -1,    57,    58,    -1,    60,    -1,    62,    63,
      64,    65,    66,    67,    -1,    69,    70,    -1,    72,    73,
      74,    75,    76,    77,    78,    79,    -1,    81,    82,    -1,
      84,    85,    86,    87,    88,    -1,    90,    -1,    -1,    93,
      -1,    -1,    96,    -1,    98,    -1,    -1,   101,    -1,    -1,
      -1,   105,   106,   107,    -1,    -1,   110,    -1,    -1,    -1,
      -1,   115,   116,    -1,    -1,    -1,    -1,   121,   122,    -1,
     124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,
     134,    -1,    -1,    -1,   138,    -1,    -1,   141,   142,   143,
      -1,    -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,
     154,    -1,    -1,   157,   158,    -1,   160,   161,   162,   163,
     164,   165,    -1,    -1,   168,   169,   170,    -1,    -1,   173,
     174,    -1,   176,   177,   178,    -1,    -1,   181,    -1,    -1,
      -1,   185,    -1,   187,    -1,   189,    -1,   191,   192,   193,
     194,    -1,   196,    -1,   198,    -1,    -1,    -1,   202,   203,
      -1,   205,    -1,    -1,   208,   209,    -1,    -1,    -1,   213,
     214,   215,   216,    -1,    -1,   219,   220,   221,    -1,    -1,
     224,    -1,    -1,    -1,    -1,   229,   230,    -1,    -1,    -1,
     234,    -1,   236,   237,    -1,   239,   240,    -1,    -1,    -1,
     244,    -1,    -1,   247,   248,    -1,    -1,   251,    -1,    -1,
     254,   255,    -1,    -1,    -1,    -1,    -1,   261,   262,    -1,
     264,    -1,   266,    -1,   268,   269,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,    -1,   296,   297,   298,    -1,   300,   301,   302,   303,
      -1,   305,   306,    -1,    -1,    -1,    -1,   311,   312,   313,
     314,   315,   316,    -1,    -1,   319,   320,    -1,   322,    -1,
     324,    -1,   326,   327,   328,   329,   330,   331,   332,   333,
     334,    -1,    -1,   337,   338,    -1,    -1,   341,   342,   343,
     344,    -1,    -1,    -1,   348,   349,    -1,    -1,    -1,   353,
      -1,   355,   356,   357,    -1,    -1,   360,   361,    -1,   363,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   373,
     374,   375,    -1,   377,   378,    -1,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,    -1,    -1,   392,   393,
     394,    -1,   396,    -1,   398,   399,   400,   401,   402,    -1,
     404,   405,   406,    -1,    -1,   409,    -1,    -1,    -1,   413,
     414,   415,   416,   417,    -1,    -1,   420,   421,   422,   423,
     424,    -1,   426,   427,    -1,   429,   430,   431,    -1,    -1,
     434,    -1,   436,    -1,   438,   439,    -1,   441,   442,   443,
      -1,   445,    -1,    -1,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,    -1,   460,   461,    -1,    -1,
      -1,   465,   466,   467,   468,    -1,    -1,    -1,   472,    -1,
      -1,    -1,   476,    -1,   478,   479,   480,   481,    -1,   483,
     484,   485,   486,   487,    -1,    -1,    -1,    -1,    -1,    -1,
     494,   495,    -1,   497,    -1,    -1,   500,    -1,    -1,   503,
     504,   505,    -1,    -1,   508,   509,    -1,   511,   512,   513,
     514,   515,   516,    -1,    -1,   519,   520,   521,   522,    -1,
     524,   525,    -1,    -1,   528,   529,   530,   531,    -1,    -1,
     534,   535,    -1,   537,   538,   539,   540,    -1,    -1,    -1,
      -1,    -1,   546,   547,    -1,    -1,    -1,   551,   552,   553,
     554,    -1,   556,   557,    -1,   559,   560,    -1,   562,   563,
      -1,    -1,   566,    -1,    -1,   569,    -1,   571,    -1,   573,
     574,    -1,    -1,    -1,    -1,    -1,    -1,   581,    -1,    -1,
     584,    -1,    -1,    -1,   588,   589,   590,   591,   592,    -1,
      -1,    -1,    -1,    -1,    -1,   599,   600,    -1,   602,   603,
     604,    -1,     5,   607,     7,     8,     9,    10,    11,    -1,
      -1,    -1,    -1,    -1,    17,    -1,    -1,    20,    -1,    22,
      23,    24,    25,    26,    27,    28,    -1,    30,    -1,    -1,
      -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    41,    42,
      43,    -1,    45,    -1,    47,    48,    -1,    -1,    51,    -1,
      -1,    54,    55,    -1,    57,    58,    -1,    60,    -1,    62,
      63,    64,    65,    66,    67,    -1,    69,    70,    -1,    72,
      73,    74,    75,    76,    77,    78,    79,    -1,    81,    82,
      -1,    84,    85,    86,    87,    88,    -1,    90,    -1,    -1,
      93,    -1,    -1,    96,    -1,    98,    -1,    -1,   101,    -1,
      -1,    -1,   105,   106,   107,    -1,    -1,   110,    -1,    -1,
      -1,    -1,   115,   116,    -1,    -1,    -1,    -1,   121,   122,
      -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,
     133,   134,    -1,    -1,    -1,   138,    -1,    -1,   141,   142,
     143,    -1,    -1,    -1,   147,    -1,   149,   150,    -1,   152,
     153,   154,    -1,    -1,   157,   158,    -1,   160,   161,   162,
     163,   164,   165,    -1,    -1,   168,   169,   170,    -1,    -1,
     173,   174,    -1,   176,   177,   178,    -1,    -1,   181,    -1,
      -1,    -1,   185,    -1,   187,    -1,   189,    -1,   191,   192,
     193,   194,    -1,   196,    -1,   198,    -1,    -1,    -1,   202,
     203,    -1,   205,    -1,    -1,   208,   209,    -1,    -1,    -1,
     213,   214,   215,   216,    -1,    -1,   219,   220,   221,    -1,
      -1,   224,    -1,    -1,    -1,    -1,   229,   230,    -1,    -1,
      -1,   234,    -1,   236,   237,    -1,   239,   240,    -1,    -1,
      -1,   244,    -1,    -1,   247,   248,    -1,    -1,   251,    -1,
      -1,   254,   255,    -1,    -1,    -1,    -1,    -1,   261,   262,
      -1,   264,    -1,   266,    -1,   268,   269,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,    -1,   296,   297,   298,    -1,   300,   301,   302,
     303,    -1,   305,   306,    -1,    -1,    -1,    -1,   311,   312,
     313,   314,   315,   316,    -1,    -1,   319,   320,    -1,   322,
      -1,   324,    -1,   326,   327,   328,   329,   330,   331,   332,
     333,   334,    -1,    -1,   337,   338,    -1,    -1,   341,   342,
     343,   344,    -1,    -1,    -1,   348,   349,    -1,    -1,    -1,
     353,    -1,   355,   356,   357,    -1,    -1,   360,   361,    -1,
     363,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     373,   374,   375,    -1,   377,   378,    -1,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,    -1,    -1,   392,
     393,   394,   395,   396,    -1,   398,   399,   400,   401,   402,
      -1,   404,   405,   406,    -1,    -1,   409,    -1,    -1,    -1,
     413,   414,   415,   416,   417,    -1,    -1,   420,   421,   422,
     423,   424,    -1,   426,   427,    -1,   429,   430,   431,    -1,
      -1,   434,    -1,   436,    -1,   438,   439,    -1,   441,   442,
     443,    -1,   445,    -1,    -1,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,    -1,   460,   461,    -1,
      -1,    -1,   465,   466,   467,   468,    -1,    -1,    -1,   472,
      -1,    -1,    -1,   476,    -1,   478,   479,   480,   481,    -1,
     483,   484,   485,   486,   487,    -1,    -1,    -1,    -1,    -1,
      -1,   494,   495,    -1,   497,    -1,    -1,   500,    -1,    -1,
     503,   504,   505,    -1,    -1,   508,   509,    -1,   511,   512,
     513,   514,   515,   516,    -1,    -1,   519,   520,   521,   522,
      -1,   524,   525,    -1,    -1,   528,   529,   530,   531,    -1,
      -1,   534,   535,    -1,   537,   538,   539,   540,    -1,    -1,
      -1,    -1,    -1,   546,   547,    -1,    -1,    -1,   551,   552,
     553,   554,    -1,   556,   557,    -1,   559,   560,    -1,   562,
     563,    -1,    -1,   566,    -1,    -1,   569,    -1,   571,    -1,
     573,   574,    -1,    -1,    -1,    -1,    -1,    -1,   581,    -1,
      -1,   584,    -1,    -1,    -1,   588,   589,   590,   591,   592,
      -1,    -1,    -1,    -1,    -1,    -1,   599,   600,    -1,   602,
     603,   604,    -1,     5,   607,     7,     8,     9,    10,    11,
      -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,    20,    -1,
      22,    23,    24,    25,    26,    27,    28,    -1,    30,    -1,
      -1,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    41,
      42,    43,    -1,    45,    -1,    47,    48,    -1,    -1,    51,
      -1,    -1,    54,    55,    -1,    57,    58,    -1,    60,    -1,
      62,    63,    64,    65,    66,    67,    -1,    69,    70,    -1,
      72,    73,    74,    75,    76,    77,    78,    79,    -1,    81,
      82,    -1,    84,    85,    86,    87,    88,    -1,    90,    -1,
      -1,    93,    -1,    -1,    96,    -1,    98,    -1,    -1,   101,
      -1,    -1,    -1,   105,   106,   107,    -1,    -1,   110,    -1,
      -1,    -1,    -1,   115,   116,    -1,    -1,    -1,    -1,   121,
     122,    -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,
     132,   133,   134,    -1,    -1,    -1,   138,    -1,    -1,   141,
     142,   143,    -1,    -1,    -1,   147,    -1,   149,   150,    -1,
     152,   153,   154,    -1,    -1,   157,   158,    -1,   160,   161,
     162,   163,   164,   165,    -1,    -1,   168,   169,   170,    -1,
      -1,   173,   174,    -1,   176,   177,   178,    -1,    -1,   181,
      -1,    -1,    -1,   185,    -1,   187,    -1,   189,    -1,   191,
     192,   193,   194,    -1,   196,    -1,   198,    -1,    -1,    -1,
     202,   203,    -1,   205,    -1,    -1,   208,   209,    -1,    -1,
      -1,   213,   214,   215,   216,    -1,    -1,   219,   220,   221,
      -1,    -1,   224,    -1,    -1,    -1,    -1,   229,   230,    -1,
      -1,    -1,   234,    -1,   236,   237,    -1,   239,   240,    -1,
      -1,    -1,   244,    -1,    -1,   247,   248,    -1,    -1,   251,
      -1,    -1,   254,   255,    -1,    -1,    -1,    -1,    -1,   261,
     262,    -1,   264,    -1,   266,    -1,   268,   269,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,    -1,   296,   297,   298,    -1,   300,   301,
     302,   303,    -1,   305,   306,    -1,    -1,    -1,    -1,   311,
     312,   313,   314,   315,   316,    -1,    -1,   319,   320,    -1,
     322,    -1,   324,    -1,   326,   327,   328,   329,   330,   331,
     332,   333,   334,    -1,    -1,   337,   338,    -1,    -1,   341,
     342,   343,   344,    -1,    -1,    -1,   348,   349,    -1,    -1,
      -1,   353,    -1,   355,   356,   357,    -1,    -1,   360,   361,
      -1,   363,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   373,   374,   375,    -1,   377,   378,    -1,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,    -1,    -1,
     392,   393,   394,    -1,   396,    -1,   398,   399,   400,   401,
     402,    -1,   404,   405,   406,    -1,    -1,   409,    -1,    -1,
      -1,   413,   414,   415,   416,   417,    -1,    -1,   420,   421,
     422,   423,   424,    -1,   426,   427,    -1,   429,   430,   431,
      -1,    -1,   434,    -1,   436,    -1,   438,   439,    -1,   441,
     442,   443,    -1,   445,    -1,    -1,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,    -1,   460,   461,
      -1,    -1,    -1,   465,   466,   467,   468,    -1,    -1,    -1,
     472,    -1,    -1,    -1,   476,    -1,   478,   479,   480,   481,
      -1,   483,   484,   485,   486,   487,    -1,    -1,    -1,    -1,
      -1,    -1,   494,   495,    -1,   497,    -1,    -1,   500,    -1,
      -1,   503,   504,   505,    -1,    -1,   508,   509,    -1,   511,
     512,   513,   514,   515,   516,    -1,    -1,   519,   520,   521,
     522,    -1,   524,   525,    -1,    -1,   528,   529,   530,   531,
      -1,   533,   534,   535,    -1,   537,   538,   539,   540,    -1,
      -1,    -1,    -1,    -1,   546,   547,    -1,    -1,    -1,   551,
     552,   553,   554,    -1,   556,   557,    -1,   559,   560,    -1,
     562,   563,    -1,    -1,   566,    -1,    -1,   569,    -1,   571,
      -1,   573,   574,    -1,    -1,    -1,    -1,    -1,    -1,   581,
      -1,    -1,   584,    -1,    -1,    -1,   588,   589,   590,   591,
     592,    -1,    -1,    -1,    -1,    -1,    -1,   599,   600,    -1,
     602,   603,   604,    -1,     5,   607,     7,     8,     9,    10,
      11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,    20,
      -1,    22,    23,    24,    25,    26,    27,    28,    -1,    30,
      -1,    -1,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,
      41,    42,    43,    -1,    45,    -1,    47,    48,    -1,    -1,
      51,    -1,    -1,    54,    55,    -1,    57,    58,    -1,    60,
      -1,    62,    63,    64,    65,    66,    67,    -1,    69,    70,
      -1,    72,    73,    74,    75,    76,    77,    78,    79,    -1,
      81,    82,    -1,    84,    85,    86,    87,    88,    -1,    90,
      -1,    -1,    93,    -1,    -1,    96,    -1,    98,    -1,    -1,
     101,    -1,    -1,    -1,   105,   106,   107,    -1,    -1,   110,
      -1,    -1,    -1,    -1,   115,   116,    -1,    -1,    -1,   120,
     121,   122,    -1,   124,    -1,    -1,    -1,   128,    -1,   130,
     131,   132,   133,   134,    -1,    -1,    -1,   138,    -1,    -1,
     141,   142,   143,    -1,    -1,    -1,   147,    -1,   149,   150,
      -1,   152,   153,   154,    -1,    -1,   157,   158,    -1,   160,
     161,   162,   163,   164,   165,    -1,    -1,   168,   169,   170,
      -1,    -1,   173,   174,    -1,   176,   177,   178,    -1,    -1,
     181,    -1,    -1,    -1,   185,    -1,   187,    -1,   189,    -1,
     191,   192,   193,   194,    -1,   196,    -1,   198,    -1,    -1,
      -1,   202,   203,    -1,   205,    -1,    -1,   208,   209,    -1,
      -1,    -1,   213,   214,   215,   216,    -1,    -1,   219,   220,
     221,    -1,    -1,   224,    -1,    -1,    -1,    -1,   229,   230,
      -1,    -1,    -1,   234,    -1,   236,   237,    -1,   239,   240,
      -1,    -1,    -1,   244,    -1,    -1,   247,   248,    -1,    -1,
     251,    -1,    -1,   254,   255,    -1,    -1,    -1,    -1,    -1,
     261,   262,    -1,   264,    -1,   266,    -1,   268,   269,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,    -1,   296,   297,   298,    -1,   300,
     301,   302,   303,    -1,   305,   306,    -1,    -1,    -1,    -1,
     311,   312,   313,   314,   315,   316,    -1,    -1,   319,   320,
      -1,   322,    -1,   324,    -1,   326,   327,   328,   329,   330,
     331,   332,   333,   334,    -1,    -1,   337,   338,    -1,    -1,
     341,   342,   343,   344,    -1,    -1,    -1,   348,   349,    -1,
      -1,    -1,   353,    -1,   355,   356,   357,    -1,    -1,   360,
     361,    -1,   363,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   373,   374,   375,    -1,   377,   378,    -1,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,    -1,
      -1,   392,   393,   394,    -1,   396,    -1,   398,   399,   400,
     401,   402,    -1,   404,   405,   406,    -1,    -1,   409,    -1,
      -1,    -1,   413,   414,   415,   416,   417,    -1,    -1,   420,
     421,   422,   423,   424,    -1,   426,   427,    -1,   429,   430,
     431,    -1,    -1,   434,    -1,   436,    -1,   438,   439,    -1,
     441,   442,   443,    -1,   445,    -1,    -1,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,    -1,   460,
     461,    -1,    -1,    -1,   465,   466,   467,   468,    -1,    -1,
      -1,   472,    -1,    -1,    -1,   476,    -1,   478,   479,   480,
     481,    -1,   483,   484,   485,   486,   487,    -1,    -1,    -1,
      -1,    -1,    -1,   494,   495,    -1,   497,    -1,    -1,   500,
      -1,    -1,   503,   504,   505,    -1,    -1,   508,   509,    -1,
     511,   512,   513,   514,   515,   516,    -1,    -1,   519,   520,
     521,   522,    -1,   524,   525,    -1,    -1,   528,   529,   530,
     531,    -1,    -1,   534,   535,    -1,   537,   538,   539,   540,
      -1,    -1,    -1,    -1,    -1,   546,   547,    -1,    -1,    -1,
     551,   552,   553,   554,    -1,   556,   557,    -1,   559,   560,
      -1,   562,   563,    -1,    -1,   566,    -1,    -1,   569,    -1,
     571,    -1,   573,   574,    -1,    -1,    -1,    -1,    -1,    -1,
     581,    -1,    -1,   584,    -1,    -1,    -1,   588,   589,   590,
     591,   592,    -1,    -1,    -1,    -1,    -1,    -1,   599,   600,
      -1,   602,   603,   604,    -1,     5,   607,     7,     8,     9,
      10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,
      20,    -1,    22,    23,    24,    25,    26,    27,    28,    -1,
      30,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,    -1,
      -1,    41,    42,    43,    -1,    45,    -1,    47,    48,    -1,
      -1,    51,    -1,    -1,    54,    55,    -1,    57,    58,    -1,
      60,    -1,    62,    63,    64,    65,    66,    67,    -1,    69,
      70,    -1,    72,    73,    74,    75,    76,    77,    78,    79,
      -1,    81,    82,    -1,    84,    85,    86,    87,    88,    -1,
      90,    -1,    -1,    93,    -1,    -1,    96,    -1,    98,    -1,
      -1,   101,    -1,    -1,    -1,   105,   106,   107,    -1,    -1,
     110,    -1,    -1,    -1,    -1,   115,   116,    -1,    -1,    -1,
      -1,   121,   122,    -1,   124,    -1,    -1,    -1,   128,    -1,
     130,   131,   132,   133,   134,    -1,    -1,    -1,   138,    -1,
      -1,   141,   142,   143,    -1,    -1,    -1,   147,    -1,   149,
     150,    -1,   152,   153,   154,    -1,    -1,   157,   158,    -1,
     160,   161,   162,   163,   164,   165,    -1,    -1,   168,   169,
     170,    -1,    -1,   173,   174,    -1,   176,   177,   178,    -1,
      -1,   181,    -1,    -1,    -1,   185,    -1,   187,    -1,   189,
      -1,   191,   192,   193,   194,    -1,   196,    -1,   198,    -1,
      -1,    -1,   202,   203,    -1,   205,    -1,    -1,   208,   209,
      -1,    -1,    -1,   213,   214,   215,   216,    -1,    -1,   219,
     220,   221,    -1,    -1,   224,    -1,    -1,    -1,    -1,   229,
     230,    -1,    -1,    -1,   234,    -1,   236,   237,    -1,   239,
     240,    -1,    -1,    -1,   244,    -1,    -1,   247,   248,    -1,
      -1,   251,    -1,    -1,   254,   255,    -1,    -1,    -1,    -1,
      -1,   261,   262,    -1,   264,    -1,   266,    -1,   268,   269,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,    -1,   296,   297,   298,    -1,
     300,   301,   302,   303,    -1,   305,   306,    -1,    -1,    -1,
      -1,   311,   312,   313,   314,   315,   316,    -1,    -1,   319,
     320,    -1,   322,    -1,   324,    -1,   326,   327,   328,   329,
     330,   331,   332,   333,   334,    -1,    -1,   337,   338,    -1,
      -1,   341,   342,   343,   344,    -1,    -1,    -1,   348,   349,
      -1,    -1,    -1,   353,    -1,   355,   356,   357,    -1,    -1,
     360,   361,    -1,   363,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   373,   374,   375,    -1,   377,   378,    -1,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
      -1,    -1,   392,   393,   394,    -1,   396,    -1,   398,   399,
     400,   401,   402,    -1,   404,   405,   406,    -1,    -1,   409,
      -1,    -1,    -1,   413,   414,   415,   416,   417,    -1,    -1,
     420,   421,   422,   423,   424,    -1,   426,   427,    -1,   429,
     430,   431,    -1,    -1,   434,    -1,   436,    -1,   438,   439,
      -1,   441,   442,   443,    -1,   445,    -1,    -1,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,    -1,
     460,   461,    -1,    -1,    -1,   465,   466,   467,   468,    -1,
      -1,    -1,   472,    -1,    -1,    -1,   476,    -1,   478,   479,
     480,   481,    -1,   483,   484,   485,   486,   487,    -1,    -1,
      -1,    -1,    -1,    -1,   494,   495,    -1,   497,    -1,    -1,
     500,    -1,    -1,   503,   504,   505,    -1,    -1,   508,   509,
      -1,   511,   512,   513,   514,   515,   516,    -1,    -1,   519,
     520,   521,   522,    -1,   524,   525,    -1,    -1,   528,   529,
     530,   531,    -1,    -1,   534,   535,    -1,   537,   538,   539,
     540,    -1,    -1,    -1,    -1,    -1,   546,   547,    -1,    -1,
      -1,   551,   552,   553,   554,    -1,   556,   557,    -1,   559,
     560,    -1,   562,   563,    -1,    -1,   566,    -1,    -1,   569,
      -1,   571,    -1,   573,   574,    -1,    -1,    -1,    -1,    -1,
      -1,   581,    -1,    -1,   584,    -1,    -1,    -1,   588,   589,
     590,   591,   592,    -1,    -1,    -1,    -1,    -1,    -1,   599,
     600,    -1,   602,   603,   604,    -1,     5,   607,     7,     8,
       9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,
      -1,    20,    -1,    22,    23,    24,    25,    26,    27,    28,
      -1,    30,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,
      -1,    -1,    41,    42,    43,    -1,    45,    -1,    47,    48,
      -1,    -1,    51,    -1,    -1,    54,    55,    -1,    57,    58,
      -1,    60,    -1,    62,    63,    64,    65,    66,    67,    -1,
      69,    70,    -1,    72,    73,    74,    75,    76,    77,    78,
      79,    -1,    81,    82,    -1,    84,    85,    86,    87,    88,
      -1,    90,    -1,    -1,    93,    -1,    -1,    96,    -1,    98,
      -1,    -1,   101,    -1,    -1,    -1,   105,   106,   107,    -1,
      -1,   110,    -1,    -1,    -1,    -1,   115,   116,    -1,    -1,
      -1,    -1,   121,   122,    -1,   124,    -1,    -1,    -1,   128,
      -1,   130,   131,   132,   133,   134,    -1,    -1,    -1,   138,
      -1,    -1,   141,   142,   143,    -1,    -1,    -1,   147,    -1,
     149,   150,    -1,   152,   153,   154,    -1,    -1,   157,   158,
      -1,   160,   161,   162,   163,   164,   165,    -1,    -1,   168,
     169,   170,    -1,    -1,   173,   174,    -1,   176,   177,   178,
      -1,    -1,   181,    -1,    -1,    -1,   185,    -1,   187,    -1,
     189,    -1,   191,   192,   193,   194,    -1,   196,    -1,   198,
      -1,    -1,    -1,   202,   203,    -1,   205,    -1,    -1,   208,
     209,    -1,    -1,    -1,   213,   214,   215,   216,    -1,    -1,
     219,   220,   221,    -1,    -1,   224,    -1,    -1,    -1,    -1,
     229,   230,    -1,    -1,    -1,   234,    -1,   236,   237,    -1,
     239,   240,    -1,    -1,    -1,   244,    -1,    -1,   247,   248,
      -1,    -1,   251,    -1,    -1,   254,   255,    -1,    -1,    -1,
      -1,    -1,   261,   262,    -1,   264,    -1,   266,    -1,   268,
     269,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,    -1,   296,   297,   298,
      -1,   300,   301,   302,   303,    -1,   305,   306,    -1,    -1,
      -1,    -1,   311,   312,   313,   314,   315,   316,    -1,    -1,
     319,   320,    -1,   322,    -1,   324,    -1,   326,   327,   328,
     329,   330,   331,   332,   333,   334,    -1,    -1,   337,   338,
      -1,    -1,   341,   342,   343,   344,    -1,    -1,    -1,   348,
     349,    -1,    -1,    -1,   353,    -1,   355,   356,   357,    -1,
      -1,   360,   361,    -1,   363,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   373,   374,   375,    -1,   377,   378,
      -1,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,    -1,    -1,   392,   393,   394,    -1,   396,    -1,   398,
     399,   400,   401,   402,    -1,   404,   405,   406,    -1,    -1,
     409,    -1,    -1,    -1,   413,   414,   415,   416,   417,    -1,
      -1,   420,   421,   422,   423,   424,    -1,   426,   427,    -1,
     429,   430,   431,    -1,    -1,   434,    -1,   436,    -1,   438,
     439,    -1,   441,   442,   443,    -1,   445,    -1,    -1,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
      -1,   460,   461,    -1,    -1,    -1,   465,   466,   467,   468,
      -1,    -1,    -1,   472,    -1,    -1,    -1,   476,    -1,   478,
     479,   480,   481,    -1,   483,   484,   485,   486,   487,    -1,
      -1,    -1,    -1,    -1,    -1,   494,   495,    -1,   497,    -1,
      -1,   500,    -1,    -1,   503,   504,   505,    -1,    -1,   508,
     509,    -1,   511,   512,   513,   514,   515,   516,    -1,    -1,
     519,   520,   521,   522,    -1,   524,   525,    -1,    -1,   528,
     529,   530,   531,    -1,    -1,   534,   535,    -1,   537,   538,
     539,   540,    -1,    -1,    -1,    -1,    -1,   546,   547,    -1,
      -1,    -1,   551,   552,   553,   554,    -1,   556,   557,    -1,
     559,   560,    -1,   562,   563,    -1,    -1,   566,    -1,    -1,
     569,    -1,   571,    -1,   573,   574,    -1,    -1,    -1,    -1,
      -1,    -1,   581,    -1,    -1,   584,    -1,    -1,    -1,   588,
     589,   590,   591,   592,    -1,    -1,    -1,    -1,    -1,    -1,
     599,   600,    -1,   602,   603,   604,    -1,     5,   607,     7,
       8,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,
      -1,    -1,    -1,    -1,    22,    23,    24,    25,    26,    27,
      -1,    -1,    30,    -1,    -1,    -1,    34,    -1,    -1,    -1,
      38,    -1,    -1,    41,    42,    43,    -1,    45,    -1,    -1,
      -1,    -1,    -1,    51,    52,    -1,    54,    55,    -1,    57,
      -1,    -1,    -1,    -1,    62,    63,    64,    65,    66,    67,
      -1,    69,    70,    -1,    72,    -1,    74,    -1,    76,    77,
      78,    79,    -1,    81,    82,    -1,    84,    85,    86,    -1,
      88,    -1,    90,    -1,    -1,    93,    -1,    -1,    96,    -1,
      98,    -1,    -1,   101,    -1,    -1,    -1,   105,   106,   107,
      -1,    -1,   110,    -1,    -1,    -1,    -1,   115,    -1,    -1,
      -1,    -1,    -1,   121,   122,    -1,   124,    -1,    -1,    -1,
     128,    -1,   130,   131,   132,   133,   134,    -1,    -1,    -1,
      -1,    -1,    -1,   141,   142,   143,    -1,   145,   146,   147,
      -1,   149,   150,    -1,   152,   153,   154,    -1,    -1,   157,
     158,    -1,   160,   161,   162,   163,   164,    -1,    -1,    -1,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
     178,    -1,    -1,    -1,    -1,    -1,    -1,   185,    -1,   187,
      -1,   189,    -1,   191,   192,   193,   194,    -1,   196,    -1,
     198,    -1,    -1,    -1,    -1,   203,    -1,    -1,    -1,    -1,
      -1,   209,    -1,    -1,    -1,   213,   214,   215,   216,   217,
      -1,   219,   220,   221,    -1,    -1,   224,    -1,    -1,    -1,
      -1,   229,    -1,    -1,    -1,    -1,   234,    -1,   236,   237,
      -1,   239,   240,   241,    -1,    -1,   244,    -1,    -1,    -1,
     248,    -1,    -1,   251,   252,    -1,   254,   255,    -1,    -1,
      -1,    -1,    -1,   261,   262,    -1,   264,    -1,   266,    -1,
     268,   269,    -1,    -1,    -1,    -1,   274,    -1,    -1,    -1,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,    -1,   296,   297,
     298,    -1,   300,   301,   302,   303,    -1,   305,   306,    -1,
      -1,    -1,    -1,   311,   312,   313,   314,   315,   316,    -1,
      -1,   319,   320,    -1,   322,    -1,   324,    -1,   326,   327,
     328,   329,   330,   331,   332,   333,   334,    -1,    -1,   337,
     338,    -1,    -1,   341,   342,   343,   344,    -1,    -1,    -1,
      -1,   349,    -1,    -1,    -1,   353,    -1,   355,   356,   357,
      -1,    -1,   360,   361,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   374,   375,    -1,    -1,
     378,    -1,   380,   381,   382,   383,   384,   385,   386,   387,
     388,    -1,    -1,    -1,    -1,   393,   394,    -1,   396,    -1,
     398,   399,   400,   401,   402,    -1,   404,   405,   406,    -1,
      -1,   409,    -1,    -1,    -1,   413,   414,   415,   416,   417,
      -1,    -1,   420,   421,   422,   423,   424,    -1,   426,    -1,
      -1,   429,    -1,   431,   432,    -1,   434,    -1,    -1,    -1,
     438,    -1,    -1,   441,   442,   443,   444,   445,    -1,    -1,
      -1,   449,   450,   451,   452,   453,   454,   455,    -1,   457,
     458,    -1,   460,    -1,    -1,    -1,    -1,   465,   466,   467,
      -1,    -1,    -1,    -1,   472,    -1,    -1,    -1,   476,    -1,
      -1,   479,    -1,   481,    -1,   483,    -1,    -1,   486,   487,
      -1,    -1,    -1,    -1,    -1,    -1,   494,   495,    -1,   497,
      -1,    -1,   500,    -1,    -1,   503,    -1,   505,    -1,    -1,
      -1,   509,    -1,   511,   512,   513,   514,   515,   516,    -1,
      -1,   519,   520,   521,   522,    -1,   524,   525,    -1,    -1,
     528,   529,   530,   531,    -1,    -1,   534,   535,    -1,   537,
     538,   539,   540,    -1,    -1,    -1,    -1,    -1,   546,   547,
      -1,    -1,    -1,    -1,   552,   553,   554,    -1,   556,   557,
      -1,   559,   560,    -1,    -1,    -1,    -1,    -1,   566,    -1,
      -1,   569,    -1,    -1,    -1,   573,   574,    -1,    -1,    -1,
      -1,    -1,    -1,   581,    -1,    -1,   584,    -1,    -1,    -1,
     588,   589,   590,   591,   592,    -1,    -1,   595,    -1,    -1,
      -1,   599,    -1,    -1,   602,    -1,   604,    -1,     5,   607,
       7,     8,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,
      17,    -1,    -1,    -1,    -1,    22,    23,    24,    25,    26,
      27,    -1,    -1,    30,    -1,    -1,    -1,    34,    -1,    -1,
      -1,    38,    -1,    -1,    41,    42,    43,    -1,    45,    -1,
      -1,    -1,    -1,    -1,    51,    52,    -1,    54,    55,    -1,
      57,    -1,    -1,    -1,    -1,    62,    63,    64,    65,    66,
      67,    -1,    69,    70,    -1,    72,    -1,    74,    -1,    76,
      77,    78,    79,    -1,    81,    82,    -1,    84,    85,    86,
      -1,    88,    -1,    90,    -1,    -1,    93,    -1,    -1,    96,
      -1,    98,    -1,    -1,   101,    -1,    -1,    -1,   105,   106,
     107,    -1,    -1,   110,    -1,    -1,    -1,    -1,   115,    -1,
      -1,    -1,    -1,    -1,   121,   122,    -1,   124,    -1,    -1,
      -1,   128,    -1,   130,   131,   132,   133,   134,    -1,    -1,
      -1,    -1,    -1,    -1,   141,   142,   143,    -1,   145,    -1,
     147,    -1,   149,   150,    -1,   152,   153,   154,    -1,    -1,
     157,   158,    -1,   160,   161,   162,   163,   164,    -1,    -1,
      -1,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,   178,    -1,    -1,    -1,    -1,    -1,    -1,   185,    -1,
     187,    -1,   189,    -1,   191,   192,   193,   194,    -1,   196,
      -1,   198,    -1,    -1,    -1,    -1,   203,    -1,    -1,    -1,
      -1,    -1,   209,    -1,    -1,    -1,   213,   214,   215,   216,
     217,    -1,   219,   220,   221,    -1,    -1,   224,    -1,    -1,
      -1,    -1,   229,    -1,    -1,    -1,    -1,   234,    -1,   236,
     237,    -1,   239,   240,   241,    -1,    -1,   244,    -1,    -1,
      -1,   248,    -1,    -1,   251,   252,    -1,   254,   255,    -1,
      -1,    -1,    -1,    -1,   261,   262,    -1,   264,    -1,   266,
      -1,   268,   269,    -1,    -1,    -1,    -1,   274,    -1,    -1,
      -1,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,    -1,   296,
     297,   298,    -1,   300,   301,   302,   303,    -1,   305,   306,
      -1,    -1,    -1,    -1,   311,   312,   313,   314,   315,   316,
      -1,    -1,   319,   320,    -1,   322,    -1,   324,    -1,   326,
     327,   328,   329,   330,   331,   332,   333,   334,    -1,    -1,
     337,   338,    -1,    -1,   341,   342,   343,   344,    -1,    -1,
      -1,    -1,   349,    -1,    -1,    -1,   353,    -1,   355,   356,
     357,    -1,    -1,   360,   361,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   374,   375,    -1,
      -1,   378,    -1,   380,   381,   382,   383,   384,   385,   386,
     387,   388,    -1,    -1,    -1,    -1,   393,   394,    -1,   396,
      -1,   398,   399,   400,   401,   402,    -1,   404,   405,   406,
      -1,    -1,   409,    -1,    -1,    -1,   413,   414,   415,   416,
     417,    -1,    -1,   420,   421,   422,   423,   424,    -1,   426,
      -1,    -1,   429,    -1,   431,   432,    -1,   434,    -1,    -1,
      -1,   438,    -1,    -1,   441,   442,   443,   444,   445,    -1,
      -1,    -1,   449,   450,   451,   452,   453,   454,   455,    -1,
     457,   458,    -1,   460,    -1,    -1,    -1,    -1,   465,   466,
     467,    -1,    -1,    -1,    -1,   472,    -1,    -1,    -1,   476,
      -1,    -1,   479,    -1,   481,    -1,   483,    -1,    -1,   486,
     487,    -1,    -1,    -1,    -1,    -1,    -1,   494,   495,    -1,
     497,    -1,    -1,   500,    -1,    -1,   503,    -1,   505,    -1,
      -1,    -1,   509,    -1,   511,   512,   513,   514,   515,   516,
      -1,    -1,   519,   520,   521,   522,    -1,   524,   525,    -1,
      -1,   528,   529,   530,   531,    -1,    -1,   534,   535,    -1,
     537,   538,   539,   540,    -1,    -1,    -1,    -1,    -1,   546,
     547,    -1,    -1,    -1,    -1,   552,   553,   554,    -1,   556,
     557,    -1,   559,   560,    -1,    -1,    -1,    -1,    -1,   566,
      -1,    -1,   569,    -1,    -1,    -1,   573,   574,    -1,    -1,
      -1,    -1,    -1,    -1,   581,    -1,    -1,   584,    -1,    -1,
      -1,   588,   589,   590,   591,   592,   593,    -1,   595,    -1,
      -1,    -1,   599,    -1,    -1,   602,    -1,   604,    -1,     5,
     607,     7,     8,     9,    10,    11,    -1,    -1,    -1,    -1,
      -1,    17,    -1,    -1,    -1,    -1,    22,    23,    24,    25,
      26,    27,    -1,    -1,    30,    -1,    -1,    -1,    34,    -1,
      -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,    45,
      -1,    -1,    -1,    -1,    -1,    51,    52,    -1,    54,    55,
      -1,    57,    -1,    -1,    -1,    -1,    62,    63,    64,    65,
      66,    67,    -1,    69,    70,    -1,    72,    -1,    74,    -1,
      76,    77,    78,    79,    -1,    81,    82,    -1,    84,    85,
      86,    -1,    88,    -1,    90,    -1,    -1,    93,    -1,    -1,
      96,    -1,    98,    -1,    -1,   101,    -1,    -1,    -1,   105,
     106,   107,    -1,    -1,   110,    -1,    -1,    -1,    -1,   115,
      -1,    -1,    -1,    -1,    -1,   121,   122,    -1,   124,    -1,
      -1,    -1,   128,    -1,   130,   131,   132,   133,   134,    -1,
      -1,    -1,    -1,    -1,    -1,   141,   142,   143,    -1,   145,
      -1,   147,    -1,   149,   150,    -1,   152,   153,   154,    -1,
      -1,   157,   158,    -1,   160,   161,   162,   163,   164,    -1,
      -1,    -1,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,   178,    -1,    -1,    -1,    -1,    -1,    -1,   185,
      -1,   187,    -1,   189,    -1,   191,   192,   193,   194,    -1,
     196,    -1,   198,    -1,    -1,    -1,    -1,   203,    -1,    -1,
      -1,    -1,    -1,   209,    -1,    -1,    -1,   213,   214,   215,
     216,   217,    -1,   219,   220,   221,    -1,    -1,   224,    -1,
      -1,    -1,    -1,   229,    -1,    -1,    -1,    -1,   234,    -1,
     236,   237,    -1,   239,   240,   241,    -1,    -1,   244,    -1,
      -1,    -1,   248,    -1,    -1,   251,   252,    -1,   254,   255,
      -1,    -1,    -1,    -1,    -1,   261,   262,    -1,   264,    -1,
     266,    -1,   268,   269,    -1,    -1,    -1,    -1,   274,    -1,
      -1,    -1,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,    -1,
     296,   297,   298,    -1,   300,   301,   302,   303,    -1,   305,
     306,    -1,    -1,    -1,    -1,   311,   312,   313,   314,   315,
     316,    -1,    -1,   319,   320,    -1,   322,    -1,   324,    -1,
     326,   327,   328,   329,   330,   331,   332,   333,   334,    -1,
      -1,   337,   338,    -1,    -1,   341,   342,   343,   344,    -1,
      -1,    -1,    -1,   349,    -1,    -1,    -1,   353,    -1,   355,
     356,   357,    -1,    -1,   360,   361,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   374,   375,
      -1,    -1,   378,    -1,   380,   381,   382,   383,   384,   385,
     386,   387,   388,    -1,    -1,    -1,    -1,   393,   394,    -1,
     396,    -1,   398,   399,   400,   401,   402,    -1,   404,   405,
     406,    -1,    -1,   409,    -1,    -1,    -1,   413,   414,   415,
     416,   417,    -1,    -1,   420,   421,   422,   423,   424,    -1,
     426,    -1,    -1,   429,    -1,   431,   432,    -1,   434,    -1,
      -1,    -1,   438,    -1,    -1,   441,   442,   443,   444,   445,
      -1,    -1,    -1,   449,   450,   451,   452,   453,   454,   455,
      -1,   457,   458,    -1,   460,    -1,    -1,    -1,    -1,   465,
     466,   467,    -1,    -1,    -1,    -1,   472,    -1,    -1,    -1,
     476,    -1,    -1,   479,    -1,   481,    -1,   483,    -1,    -1,
     486,   487,    -1,    -1,    -1,    -1,    -1,    -1,   494,   495,
      -1,   497,    -1,    -1,   500,    -1,    -1,   503,    -1,   505,
      -1,    -1,    -1,   509,    -1,   511,   512,   513,   514,   515,
     516,    -1,    -1,   519,   520,   521,   522,    -1,   524,   525,
      -1,    -1,   528,   529,   530,   531,    -1,    -1,   534,   535,
      -1,   537,   538,   539,   540,    -1,    -1,    -1,    -1,    -1,
     546,   547,    -1,    -1,    -1,    -1,   552,   553,   554,    -1,
     556,   557,    -1,   559,   560,    -1,    -1,    -1,    -1,    -1,
     566,    -1,    -1,   569,    -1,    -1,    -1,   573,   574,    -1,
      -1,    -1,    -1,    -1,    -1,   581,    -1,    -1,   584,    -1,
      -1,    -1,   588,   589,   590,   591,   592,   593,    -1,   595,
      -1,    -1,    -1,   599,    -1,    -1,   602,    -1,   604,    -1,
       5,   607,     7,     8,     9,    10,    11,    -1,    -1,    -1,
      -1,    -1,    17,    -1,    -1,    -1,    -1,    22,    23,    24,
      25,    26,    27,    -1,    -1,    30,    -1,    -1,    -1,    34,
      -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,
      45,    -1,    -1,    -1,    -1,    -1,    51,    52,    -1,    54,
      55,    -1,    57,    -1,    -1,    -1,    -1,    62,    63,    64,
      65,    66,    67,    -1,    69,    70,    -1,    72,    -1,    74,
      -1,    76,    77,    78,    79,    -1,    81,    82,    -1,    84,
      85,    86,    -1,    88,    -1,    90,    -1,    -1,    93,    -1,
      -1,    96,    -1,    98,    -1,    -1,   101,    -1,    -1,    -1,
     105,   106,   107,    -1,    -1,   110,    -1,    -1,    -1,    -1,
     115,    -1,    -1,    -1,    -1,    -1,   121,   122,    -1,   124,
      -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,   134,
      -1,    -1,    -1,    -1,    -1,    -1,   141,   142,   143,    -1,
      -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,   154,
      -1,    -1,   157,   158,    -1,   160,   161,   162,   163,   164,
      -1,    -1,    -1,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,   178,    -1,    -1,    -1,    -1,    -1,    -1,
     185,    -1,   187,    -1,   189,    -1,   191,   192,   193,   194,
      -1,   196,    -1,   198,    -1,    -1,    -1,    -1,   203,    -1,
      -1,    -1,    -1,    -1,   209,    -1,    -1,    -1,   213,   214,
     215,   216,   217,    -1,   219,   220,   221,    -1,    -1,   224,
      -1,    -1,    -1,    -1,   229,    -1,    -1,    -1,    -1,   234,
      -1,   236,   237,    -1,   239,   240,   241,    -1,    -1,   244,
      -1,    -1,    -1,   248,    -1,    -1,   251,   252,    -1,   254,
     255,    -1,    -1,    -1,    -1,    -1,   261,   262,    -1,   264,
      -1,   266,    -1,   268,   269,    -1,    -1,    -1,    -1,   274,
      -1,    -1,    -1,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
      -1,   296,   297,   298,    -1,   300,   301,   302,   303,    -1,
     305,   306,    -1,    -1,    -1,    -1,   311,   312,   313,   314,
     315,   316,    -1,    -1,   319,   320,    -1,   322,    -1,   324,
      -1,   326,   327,   328,   329,   330,   331,   332,   333,   334,
      -1,    -1,   337,   338,    -1,    -1,   341,   342,   343,   344,
      -1,    -1,    -1,    -1,   349,    -1,    -1,    -1,   353,    -1,
     355,   356,   357,    -1,    -1,   360,   361,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   374,
     375,    -1,    -1,   378,    -1,   380,   381,   382,   383,   384,
     385,   386,   387,   388,    -1,    -1,    -1,    -1,   393,   394,
      -1,   396,    -1,   398,   399,   400,   401,   402,    -1,   404,
     405,   406,    -1,    -1,   409,    -1,    -1,    -1,   413,   414,
     415,   416,   417,    -1,    -1,   420,   421,   422,   423,   424,
      -1,   426,    -1,    -1,   429,    -1,   431,   432,    -1,   434,
      -1,    -1,    -1,   438,    -1,    -1,   441,   442,   443,   444,
     445,    -1,    -1,    -1,   449,   450,   451,   452,   453,   454,
     455,    -1,   457,   458,    -1,   460,    -1,    -1,    -1,    -1,
     465,   466,   467,    -1,    -1,    -1,    -1,   472,    -1,    -1,
      -1,   476,    -1,    -1,   479,    -1,   481,    -1,   483,    -1,
      -1,   486,   487,    -1,    -1,    -1,    -1,    -1,    -1,   494,
     495,    -1,   497,    -1,    -1,   500,    -1,    -1,   503,    -1,
     505,    -1,    -1,    -1,   509,    -1,   511,   512,   513,   514,
     515,   516,    -1,    -1,   519,   520,   521,   522,    -1,   524,
     525,    -1,    -1,   528,   529,   530,   531,    -1,    -1,   534,
     535,    -1,   537,   538,   539,   540,    -1,    -1,    -1,    -1,
      -1,   546,   547,    -1,    -1,    -1,    -1,   552,   553,   554,
      -1,   556,   557,    -1,   559,   560,    -1,    -1,    -1,    -1,
      -1,   566,    -1,    -1,   569,    -1,    -1,    -1,   573,   574,
      -1,    -1,    -1,    -1,    -1,    -1,   581,    -1,    -1,   584,
      -1,    -1,    -1,   588,   589,   590,   591,   592,    -1,    -1,
     595,    -1,    -1,    -1,   599,    -1,    -1,   602,    -1,   604,
      -1,     5,   607,     7,     8,     9,    10,    11,    -1,    -1,
      -1,    -1,    -1,    17,    -1,    -1,    -1,    -1,    22,    23,
      24,    25,    26,    27,    -1,    -1,    30,    -1,    -1,    -1,
      34,    -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,
      -1,    45,    -1,    -1,    -1,    -1,    -1,    51,    52,    -1,
      54,    55,    -1,    57,    -1,    -1,    -1,    -1,    62,    63,
      64,    65,    66,    67,    -1,    69,    70,    -1,    72,    -1,
      74,    -1,    76,    77,    78,    79,    -1,    81,    82,    -1,
      84,    85,    86,    -1,    88,    -1,    90,    -1,    -1,    93,
      -1,    -1,    96,    -1,    98,    -1,    -1,   101,    -1,    -1,
      -1,   105,   106,   107,    -1,    -1,   110,    -1,    -1,    -1,
      -1,   115,    -1,    -1,    -1,    -1,    -1,   121,   122,    -1,
     124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,
     134,    -1,    -1,    -1,    -1,    -1,    -1,   141,   142,   143,
      -1,    -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,
     154,    -1,    -1,   157,   158,    -1,   160,   161,   162,   163,
     164,    -1,    -1,    -1,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,   178,    -1,    -1,    -1,    -1,    -1,
      -1,   185,    -1,   187,    -1,   189,    -1,   191,   192,   193,
     194,    -1,   196,    -1,   198,    -1,    -1,    -1,    -1,   203,
      -1,    -1,    -1,    -1,    -1,   209,    -1,    -1,    -1,   213,
     214,   215,   216,   217,    -1,   219,   220,   221,    -1,    -1,
     224,    -1,    -1,    -1,    -1,   229,    -1,    -1,    -1,    -1,
     234,    -1,   236,   237,    -1,   239,   240,   241,    -1,    -1,
     244,    -1,    -1,    -1,   248,    -1,    -1,   251,   252,    -1,
     254,   255,    -1,    -1,    -1,    -1,    -1,   261,   262,    -1,
     264,    -1,   266,    -1,   268,   269,    -1,    -1,    -1,    -1,
     274,    -1,    -1,    -1,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,    -1,   296,   297,   298,    -1,   300,   301,   302,   303,
      -1,   305,   306,    -1,    -1,    -1,    -1,   311,   312,   313,
     314,   315,   316,    -1,    -1,   319,   320,    -1,   322,    -1,
     324,    -1,   326,   327,   328,   329,   330,   331,   332,   333,
     334,    -1,    -1,   337,   338,    -1,    -1,   341,   342,   343,
     344,    -1,    -1,    -1,    -1,   349,    -1,    -1,    -1,   353,
      -1,   355,   356,   357,    -1,    -1,   360,   361,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     374,   375,    -1,    -1,   378,    -1,   380,   381,   382,   383,
     384,   385,   386,   387,   388,    -1,    -1,    -1,    -1,   393,
     394,    -1,   396,    -1,   398,   399,   400,   401,   402,    -1,
     404,   405,   406,    -1,    -1,   409,    -1,    -1,    -1,   413,
     414,   415,   416,   417,    -1,    -1,   420,   421,   422,   423,
     424,    -1,   426,    -1,    -1,   429,    -1,   431,   432,    -1,
     434,    -1,    -1,    -1,   438,    -1,    -1,   441,   442,   443,
     444,   445,    -1,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,    -1,   457,   458,    -1,   460,    -1,    -1,    -1,
      -1,   465,   466,   467,    -1,    -1,    -1,    -1,   472,    -1,
      -1,    -1,   476,    -1,    -1,   479,    -1,   481,    -1,   483,
      -1,    -1,   486,   487,    -1,    -1,    -1,    -1,    -1,    -1,
     494,   495,    -1,   497,    -1,    -1,   500,    -1,    -1,   503,
      -1,   505,    -1,    -1,    -1,   509,    -1,   511,   512,   513,
     514,   515,   516,    -1,    -1,   519,   520,   521,   522,    -1,
     524,   525,    -1,    -1,   528,   529,   530,   531,    -1,    -1,
     534,   535,    -1,   537,   538,   539,   540,    -1,    -1,    -1,
      -1,    -1,   546,   547,    -1,    -1,    -1,    -1,   552,   553,
     554,    -1,   556,   557,    -1,   559,   560,    -1,    -1,    -1,
      -1,    -1,   566,    -1,    -1,   569,    -1,    -1,    -1,   573,
     574,    -1,    -1,    -1,    -1,    -1,    -1,   581,    -1,    -1,
     584,    -1,    -1,    -1,   588,   589,   590,   591,   592,    -1,
      -1,   595,    -1,    -1,    -1,   599,    -1,    -1,   602,    -1,
     604,    -1,     5,   607,     7,     8,     9,    10,    11,    -1,
      -1,    -1,    -1,    -1,    17,    -1,    -1,    -1,    -1,    22,
      23,    24,    25,    26,    27,    -1,    -1,    30,    -1,    -1,
      -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    41,    42,
      43,    -1,    45,    -1,    -1,    -1,    -1,    -1,    51,    52,
      -1,    54,    55,    -1,    57,    -1,    -1,    -1,    -1,    62,
      63,    64,    65,    66,    67,    -1,    69,    70,    -1,    72,
      -1,    74,    -1,    76,    77,    78,    79,    -1,    81,    82,
      -1,    84,    85,    86,    -1,    88,    -1,    90,    -1,    -1,
      93,    -1,    -1,    96,    -1,    98,    -1,    -1,   101,    -1,
      -1,    -1,   105,   106,   107,    -1,    -1,   110,    -1,    -1,
      -1,    -1,   115,    -1,    -1,    -1,    -1,    -1,   121,   122,
      -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,
     133,   134,    -1,    -1,    -1,    -1,    -1,    -1,   141,   142,
     143,    -1,    -1,    -1,   147,    -1,   149,   150,    -1,   152,
     153,   154,    -1,    -1,   157,   158,    -1,   160,   161,   162,
     163,   164,    -1,    -1,    -1,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,   178,    -1,    -1,    -1,    -1,
      -1,    -1,   185,    -1,   187,    -1,   189,    -1,   191,   192,
     193,   194,    -1,   196,    -1,   198,    -1,    -1,    -1,    -1,
     203,    -1,    -1,    -1,    -1,    -1,   209,    -1,    -1,    -1,
     213,   214,   215,   216,   217,    -1,   219,   220,   221,    -1,
      -1,   224,    -1,    -1,    -1,    -1,   229,    -1,    -1,    -1,
      -1,   234,    -1,   236,   237,    -1,   239,   240,   241,    -1,
      -1,   244,    -1,    -1,    -1,   248,    -1,    -1,   251,   252,
      -1,   254,   255,    -1,    -1,    -1,    -1,    -1,   261,   262,
      -1,   264,    -1,   266,    -1,   268,   269,    -1,    -1,    -1,
      -1,   274,    -1,    -1,    -1,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,    -1,   296,   297,   298,    -1,   300,   301,   302,
     303,    -1,   305,   306,    -1,    -1,    -1,    -1,   311,   312,
     313,   314,   315,   316,    -1,    -1,   319,   320,    -1,   322,
      -1,   324,    -1,   326,   327,   328,   329,   330,   331,   332,
     333,   334,    -1,    -1,   337,   338,    -1,    -1,   341,   342,
     343,   344,    -1,    -1,    -1,    -1,   349,    -1,    -1,    -1,
     353,    -1,   355,   356,   357,    -1,    -1,   360,   361,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   374,   375,    -1,    -1,   378,    -1,   380,   381,   382,
     383,   384,   385,   386,   387,   388,    -1,    -1,    -1,    -1,
     393,   394,    -1,   396,    -1,   398,   399,   400,   401,   402,
      -1,   404,   405,   406,    -1,    -1,   409,    -1,    -1,    -1,
     413,   414,   415,   416,   417,    -1,    -1,   420,   421,   422,
     423,   424,    -1,   426,    -1,    -1,   429,    -1,   431,   432,
      -1,   434,    -1,    -1,    -1,   438,    -1,    -1,   441,   442,
     443,   444,   445,    -1,    -1,    -1,   449,   450,   451,   452,
     453,   454,   455,    -1,   457,   458,    -1,   460,    -1,    -1,
      -1,    -1,   465,   466,   467,    -1,    -1,    -1,    -1,   472,
      -1,    -1,    -1,   476,    -1,    -1,   479,    -1,   481,    -1,
     483,    -1,    -1,   486,   487,    -1,    -1,    -1,    -1,    -1,
      -1,   494,   495,    -1,   497,    -1,    -1,   500,    -1,    -1,
     503,    -1,   505,    -1,    -1,    -1,   509,    -1,   511,   512,
     513,   514,   515,   516,    -1,    -1,   519,   520,   521,   522,
      -1,   524,   525,    -1,    -1,   528,   529,   530,   531,    -1,
      -1,   534,   535,    -1,   537,   538,   539,   540,    -1,    -1,
      -1,    -1,    -1,   546,   547,    -1,    -1,    -1,    -1,   552,
     553,   554,    -1,   556,   557,    -1,   559,   560,    -1,    -1,
      -1,    -1,    -1,   566,    -1,    -1,   569,    -1,    -1,    -1,
     573,   574,    -1,    -1,    -1,    -1,    -1,    -1,   581,    -1,
      -1,   584,    -1,    -1,    -1,   588,   589,   590,   591,   592,
      -1,    -1,   595,    -1,    -1,    -1,   599,    -1,    -1,   602,
      -1,   604,    -1,     5,   607,     7,     8,     9,    10,    11,
      -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,    -1,    -1,
      22,    23,    24,    25,    26,    27,    -1,    -1,    30,    -1,
      -1,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    41,
      42,    43,    -1,    45,    -1,    -1,    -1,    -1,    -1,    51,
      52,    -1,    54,    55,    -1,    57,    -1,    -1,    -1,    -1,
      62,    63,    64,    65,    66,    67,    -1,    69,    70,    -1,
      72,    -1,    74,    -1,    76,    77,    78,    79,    -1,    81,
      82,    -1,    84,    85,    86,    -1,    88,    -1,    90,    -1,
      -1,    93,    -1,    -1,    96,    -1,    98,    -1,    -1,   101,
      -1,    -1,    -1,   105,   106,   107,    -1,    -1,   110,    -1,
      -1,    -1,    -1,   115,    -1,    -1,    -1,    -1,    -1,   121,
     122,    -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,
     132,   133,   134,    -1,    -1,    -1,    -1,    -1,    -1,   141,
     142,   143,    -1,    -1,    -1,   147,    -1,   149,   150,    -1,
     152,   153,   154,    -1,    -1,   157,   158,    -1,   160,   161,
     162,   163,   164,    -1,    -1,    -1,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,   178,    -1,    -1,    -1,
      -1,    -1,    -1,   185,    -1,   187,    -1,   189,    -1,   191,
     192,   193,   194,    -1,   196,    -1,   198,    -1,    -1,    -1,
      -1,   203,    -1,    -1,    -1,    -1,    -1,   209,    -1,    -1,
      -1,   213,   214,   215,   216,   217,    -1,   219,   220,   221,
      -1,    -1,   224,    -1,    -1,    -1,    -1,   229,    -1,    -1,
      -1,    -1,   234,    -1,   236,   237,    -1,   239,   240,   241,
      -1,    -1,   244,    -1,    -1,    -1,   248,    -1,    -1,   251,
     252,    -1,   254,   255,    -1,    -1,    -1,    -1,    -1,   261,
     262,    -1,   264,    -1,   266,    -1,   268,   269,    -1,    -1,
      -1,    -1,   274,    -1,    -1,    -1,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,    -1,   296,   297,   298,    -1,   300,   301,
     302,   303,    -1,   305,   306,    -1,    -1,    -1,    -1,   311,
     312,   313,   314,   315,   316,    -1,    -1,   319,   320,    -1,
     322,    -1,   324,    -1,   326,   327,   328,   329,   330,   331,
     332,   333,   334,    -1,    -1,   337,   338,    -1,    -1,   341,
     342,   343,   344,    -1,    -1,    -1,    -1,   349,    -1,    -1,
      -1,   353,    -1,   355,   356,   357,    -1,    -1,   360,   361,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   374,   375,    -1,    -1,   378,    -1,   380,   381,
     382,   383,   384,   385,   386,   387,   388,    -1,    -1,    -1,
      -1,   393,   394,    -1,   396,    -1,   398,   399,   400,   401,
     402,    -1,   404,   405,   406,    -1,    -1,   409,    -1,    -1,
      -1,   413,   414,   415,   416,   417,    -1,    -1,   420,   421,
     422,   423,   424,    -1,   426,    -1,    -1,   429,    -1,   431,
     432,    -1,   434,    -1,    -1,    -1,   438,    -1,    -1,   441,
     442,   443,   444,   445,    -1,    -1,    -1,   449,   450,   451,
     452,   453,   454,   455,    -1,   457,   458,    -1,   460,    -1,
      -1,    -1,    -1,   465,   466,   467,    -1,    -1,    -1,    -1,
     472,    -1,    -1,    -1,   476,    -1,    -1,   479,    -1,   481,
      -1,   483,    -1,    -1,   486,   487,    -1,    -1,    -1,    -1,
      -1,    -1,   494,   495,    -1,   497,    -1,    -1,   500,    -1,
      -1,   503,    -1,   505,    -1,    -1,    -1,   509,    -1,   511,
     512,   513,   514,   515,   516,    -1,    -1,   519,   520,   521,
     522,    -1,   524,   525,    -1,    -1,   528,   529,   530,   531,
      -1,    -1,   534,   535,    -1,   537,   538,   539,   540,    -1,
      -1,    -1,    -1,    -1,   546,   547,    -1,    -1,    -1,    -1,
     552,   553,   554,    -1,   556,   557,    -1,   559,   560,    -1,
      -1,    -1,    -1,    -1,   566,    -1,    -1,   569,    -1,    -1,
      -1,   573,   574,    -1,    -1,    -1,    -1,    -1,    -1,   581,
      -1,    -1,   584,    -1,    -1,    -1,   588,   589,   590,   591,
     592,    -1,    -1,   595,    -1,    -1,    -1,   599,    -1,    -1,
     602,    -1,   604,    -1,     5,   607,     7,     8,     9,    10,
      11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,    -1,
      -1,    22,    23,    24,    25,    26,    27,    -1,    -1,    30,
      -1,    -1,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,
      41,    42,    43,    -1,    45,    -1,    -1,    -1,    -1,    -1,
      51,    52,    -1,    54,    55,    -1,    57,    -1,    -1,    -1,
      -1,    62,    63,    64,    65,    66,    67,    -1,    69,    70,
      -1,    72,    -1,    74,    -1,    76,    77,    78,    79,    -1,
      81,    82,    -1,    84,    85,    86,    -1,    88,    -1,    90,
      -1,    -1,    93,    -1,    -1,    96,    -1,    98,    -1,    -1,
     101,    -1,    -1,    -1,   105,   106,   107,    -1,    -1,   110,
      -1,    -1,    -1,    -1,   115,    -1,    -1,    -1,    -1,    -1,
     121,   122,    -1,   124,    -1,    -1,    -1,   128,    -1,   130,
     131,   132,   133,   134,    -1,    -1,    -1,    -1,    -1,    -1,
     141,   142,   143,    -1,    -1,    -1,   147,    -1,   149,   150,
      -1,   152,   153,   154,    -1,    -1,   157,   158,    -1,   160,
     161,   162,   163,   164,    -1,    -1,    -1,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,   178,    -1,    -1,
      -1,    -1,    -1,    -1,   185,    -1,   187,    -1,   189,    -1,
     191,   192,   193,   194,    -1,   196,    -1,   198,    -1,    -1,
      -1,    -1,   203,    -1,    -1,    -1,    -1,    -1,   209,    -1,
      -1,    -1,   213,   214,   215,   216,   217,    -1,   219,   220,
     221,    -1,    -1,   224,    -1,    -1,    -1,    -1,   229,    -1,
      -1,    -1,    -1,   234,    -1,   236,   237,    -1,   239,   240,
     241,    -1,    -1,   244,    -1,    -1,    -1,   248,    -1,    -1,
     251,   252,    -1,   254,   255,    -1,    -1,    -1,    -1,    -1,
     261,   262,    -1,   264,    -1,   266,    -1,   268,   269,    -1,
      -1,    -1,    -1,   274,    -1,    -1,    -1,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,    -1,   296,   297,   298,    -1,   300,
     301,   302,   303,    -1,   305,   306,    -1,    -1,    -1,    -1,
     311,   312,   313,   314,   315,   316,    -1,    -1,   319,   320,
      -1,   322,    -1,   324,    -1,   326,   327,   328,   329,   330,
     331,   332,   333,   334,    -1,    -1,   337,   338,    -1,    -1,
     341,   342,   343,   344,    -1,    -1,    -1,    -1,   349,    -1,
      -1,    -1,   353,    -1,   355,   356,   357,    -1,    -1,   360,
     361,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   374,   375,    -1,    -1,   378,    -1,   380,
     381,   382,   383,   384,   385,   386,   387,   388,    -1,    -1,
      -1,    -1,   393,   394,    -1,   396,    -1,   398,   399,   400,
     401,   402,    -1,   404,   405,   406,    -1,    -1,   409,    -1,
      -1,    -1,   413,   414,   415,   416,   417,    -1,    -1,   420,
     421,   422,   423,   424,    -1,   426,    -1,    -1,   429,    -1,
     431,   432,    -1,   434,    -1,    -1,    -1,   438,    -1,    -1,
     441,   442,   443,   444,   445,    -1,    -1,    -1,   449,   450,
     451,   452,   453,   454,   455,    -1,   457,   458,    -1,   460,
      -1,    -1,    -1,    -1,   465,   466,   467,    -1,    -1,    -1,
      -1,   472,    -1,    -1,    -1,   476,    -1,    -1,   479,    -1,
     481,    -1,   483,    -1,    -1,   486,   487,    -1,    -1,    -1,
      -1,    -1,    -1,   494,   495,    -1,   497,    -1,    -1,   500,
      -1,    -1,   503,    -1,   505,    -1,    -1,    -1,   509,    -1,
     511,   512,   513,   514,   515,   516,    -1,    -1,   519,   520,
     521,   522,    -1,   524,   525,    -1,    -1,   528,   529,   530,
     531,    -1,    -1,   534,   535,    -1,   537,   538,   539,   540,
      -1,    -1,    -1,    -1,    -1,   546,   547,    -1,    -1,    -1,
      -1,   552,   553,   554,    -1,   556,   557,    -1,   559,   560,
      -1,    -1,    -1,    -1,    -1,   566,    -1,    -1,   569,    -1,
      -1,    -1,   573,   574,    -1,    -1,    -1,    -1,    -1,    -1,
     581,    -1,    -1,   584,    -1,    -1,    -1,   588,   589,   590,
     591,   592,    -1,    -1,   595,    -1,    -1,    -1,   599,    -1,
      -1,   602,    -1,   604,    -1,     5,   607,     7,     8,     9,
      10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,
      -1,    -1,    22,    23,    24,    25,    26,    27,    -1,    -1,
      30,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,    -1,
      -1,    41,    42,    43,    -1,    45,    -1,    -1,    -1,    -1,
      -1,    51,    52,    -1,    54,    55,    -1,    57,    -1,    -1,
      -1,    -1,    62,    63,    64,    65,    66,    67,    -1,    69,
      70,    -1,    72,    -1,    74,    -1,    76,    77,    78,    79,
      -1,    81,    82,    -1,    84,    85,    86,    -1,    88,    -1,
      90,    -1,    -1,    93,    -1,    -1,    96,    -1,    98,    -1,
      -1,   101,    -1,    -1,    -1,   105,   106,   107,    -1,    -1,
     110,    -1,    -1,    -1,    -1,   115,    -1,    -1,    -1,    -1,
      -1,   121,   122,    -1,   124,    -1,    -1,    -1,   128,    -1,
     130,   131,   132,   133,   134,    -1,    -1,    -1,    -1,    -1,
      -1,   141,   142,   143,    -1,    -1,    -1,   147,    -1,    -1,
     150,    -1,   152,   153,   154,    -1,    -1,   157,   158,    -1,
     160,   161,   162,   163,   164,    -1,    -1,    -1,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,   178,    -1,
      -1,    -1,    -1,    -1,    -1,   185,    -1,   187,    -1,   189,
      -1,   191,   192,   193,   194,    -1,   196,    -1,   198,    -1,
      -1,    -1,    -1,   203,    -1,    -1,    -1,    -1,    -1,   209,
      -1,    -1,    -1,   213,   214,   215,   216,   217,    -1,   219,
     220,   221,    -1,    -1,   224,    -1,    -1,    -1,    -1,   229,
      -1,    -1,    -1,    -1,   234,    -1,   236,   237,    -1,   239,
     240,   241,    -1,    -1,   244,    -1,    -1,    -1,   248,    -1,
      -1,   251,   252,    -1,   254,   255,    -1,    -1,    -1,    -1,
      -1,   261,   262,    -1,   264,    -1,   266,    -1,   268,   269,
      -1,    -1,    -1,    -1,   274,    -1,    -1,    -1,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,    -1,   296,   297,   298,    -1,
     300,   301,   302,   303,    -1,   305,   306,    -1,    -1,    -1,
      -1,   311,   312,   313,   314,   315,   316,    -1,    -1,   319,
     320,    -1,   322,    -1,   324,    -1,   326,   327,   328,   329,
     330,   331,   332,   333,   334,    -1,    -1,   337,   338,    -1,
      -1,   341,   342,   343,   344,    -1,    -1,    -1,    -1,   349,
      -1,    -1,    -1,   353,    -1,   355,   356,   357,    -1,    -1,
     360,   361,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   374,   375,    -1,    -1,   378,    -1,
     380,   381,   382,   383,   384,   385,   386,   387,   388,    -1,
      -1,    -1,    -1,   393,   394,    -1,   396,    -1,   398,   399,
     400,   401,   402,    -1,   404,   405,   406,    -1,    -1,   409,
      -1,    -1,    -1,   413,   414,   415,   416,   417,    -1,    -1,
     420,   421,   422,   423,   424,    -1,   426,    -1,    -1,   429,
      -1,   431,   432,    -1,   434,    -1,    -1,    -1,   438,    -1,
      -1,   441,   442,   443,   444,   445,    -1,    -1,    -1,   449,
     450,   451,   452,   453,   454,   455,    -1,   457,   458,    -1,
     460,    -1,    -1,    -1,    -1,   465,   466,   467,    -1,    -1,
      -1,    -1,   472,    -1,    -1,    -1,   476,    -1,    -1,   479,
      -1,   481,    -1,   483,    -1,    -1,   486,   487,    -1,    -1,
      -1,    -1,    -1,    -1,   494,   495,    -1,   497,    -1,    -1,
     500,    -1,    -1,   503,    -1,   505,    -1,    -1,    -1,   509,
      -1,   511,   512,   513,   514,   515,   516,    -1,    -1,   519,
     520,   521,   522,    -1,   524,   525,    -1,    -1,   528,   529,
     530,   531,    -1,    -1,   534,   535,    -1,   537,   538,   539,
     540,    -1,    -1,    -1,    -1,    -1,   546,   547,    -1,    -1,
      -1,    -1,   552,   553,   554,    -1,   556,   557,    -1,   559,
     560,    -1,    -1,    -1,    -1,    -1,   566,    -1,    -1,   569,
      -1,    -1,    -1,   573,   574,    -1,    -1,    -1,    -1,    -1,
      -1,   581,    -1,    -1,   584,    -1,    -1,    -1,   588,   589,
     590,   591,   592,    -1,    -1,   595,    -1,    -1,    -1,   599,
      -1,    -1,   602,    -1,   604,    -1,     5,   607,     7,     8,
       9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,
      -1,    -1,    -1,    22,    23,    24,    25,    26,    27,    -1,
      -1,    30,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,
      -1,    -1,    41,    42,    43,    -1,    45,    -1,    -1,    -1,
      -1,    -1,    51,    52,    -1,    54,    55,    -1,    57,    -1,
      -1,    -1,    -1,    62,    63,    64,    65,    66,    67,    -1,
      69,    70,    -1,    72,    -1,    74,    -1,    76,    77,    78,
      79,    -1,    81,    82,    -1,    84,    85,    86,    -1,    88,
      -1,    90,    -1,    -1,    93,    -1,    -1,    96,    -1,    98,
      -1,    -1,   101,    -1,    -1,    -1,   105,   106,   107,    -1,
      -1,   110,    -1,    -1,    -1,    -1,   115,    -1,    -1,    -1,
      -1,    -1,   121,   122,    -1,   124,    -1,    -1,    -1,   128,
      -1,   130,   131,   132,   133,   134,    -1,    -1,    -1,    -1,
      -1,    -1,   141,   142,   143,    -1,    -1,    -1,   147,    -1,
      -1,   150,    -1,   152,   153,   154,    -1,    -1,   157,   158,
      -1,   160,   161,   162,   163,   164,    -1,    -1,    -1,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,   178,
      -1,    -1,    -1,    -1,    -1,    -1,   185,    -1,   187,    -1,
     189,    -1,   191,   192,   193,   194,    -1,   196,    -1,   198,
      -1,    -1,    -1,    -1,   203,    -1,    -1,    -1,    -1,    -1,
     209,    -1,    -1,    -1,   213,   214,   215,   216,   217,    -1,
     219,   220,   221,    -1,    -1,   224,    -1,    -1,    -1,    -1,
     229,    -1,    -1,    -1,    -1,   234,    -1,   236,   237,    -1,
     239,   240,   241,    -1,    -1,   244,    -1,    -1,    -1,   248,
      -1,    -1,   251,   252,    -1,   254,   255,    -1,    -1,    -1,
      -1,    -1,   261,   262,    -1,   264,    -1,   266,    -1,   268,
     269,    -1,    -1,    -1,    -1,   274,    -1,    -1,    -1,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,    -1,   296,   297,   298,
      -1,   300,   301,   302,   303,    -1,   305,   306,    -1,    -1,
      -1,    -1,   311,   312,   313,   314,   315,   316,    -1,    -1,
     319,   320,    -1,   322,    -1,   324,    -1,   326,   327,   328,
     329,   330,   331,   332,   333,   334,    -1,    -1,   337,   338,
      -1,    -1,   341,   342,   343,   344,    -1,    -1,    -1,    -1,
     349,    -1,    -1,    -1,   353,    -1,   355,   356,   357,    -1,
      -1,   360,   361,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   374,   375,    -1,    -1,   378,
      -1,   380,   381,   382,   383,   384,   385,   386,   387,   388,
      -1,    -1,    -1,    -1,   393,   394,    -1,   396,    -1,   398,
     399,   400,   401,   402,    -1,   404,   405,   406,    -1,    -1,
     409,    -1,    -1,    -1,   413,   414,   415,   416,   417,    -1,
      -1,   420,   421,   422,   423,   424,    -1,   426,    -1,    -1,
     429,    -1,   431,   432,    -1,   434,    -1,    -1,    -1,   438,
      -1,    -1,   441,   442,   443,   444,   445,    -1,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,    -1,   457,   458,
      -1,   460,    -1,    -1,    -1,    -1,   465,   466,   467,    -1,
      -1,    -1,    -1,   472,    -1,    -1,    -1,   476,    -1,    -1,
     479,    -1,   481,    -1,   483,    -1,    -1,   486,   487,    -1,
      -1,    -1,    -1,    -1,    -1,   494,   495,    -1,   497,    -1,
      -1,   500,    -1,    -1,   503,    -1,   505,    -1,    -1,    -1,
     509,    -1,   511,   512,   513,   514,   515,   516,    -1,    -1,
     519,   520,   521,   522,    -1,   524,   525,    -1,    -1,   528,
     529,   530,   531,    -1,    -1,   534,   535,    -1,   537,   538,
     539,   540,    -1,    -1,    -1,    -1,    -1,   546,   547,    -1,
      -1,    -1,    -1,   552,   553,   554,    -1,   556,   557,    -1,
     559,   560,    -1,    -1,    -1,    -1,    -1,   566,    -1,    -1,
     569,    -1,    -1,    -1,   573,   574,    -1,    -1,    -1,    -1,
      -1,    -1,   581,    -1,    -1,   584,    -1,    -1,    -1,   588,
     589,   590,   591,   592,    -1,    -1,   595,    -1,    -1,    -1,
     599,    -1,    -1,   602,    -1,   604,    -1,     5,   607,     7,
       8,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,
      -1,    -1,    -1,    -1,    22,    23,    24,    25,    26,    27,
      -1,    -1,    -1,    -1,    -1,    -1,    34,    -1,    -1,    -1,
      38,    -1,    -1,    41,    42,    43,    -1,    45,    -1,    -1,
      -1,    -1,    -1,    51,    -1,    -1,    54,    55,    -1,    57,
      -1,    -1,    -1,    -1,    62,    63,    64,    -1,    66,    67,
      -1,    69,    70,    -1,    72,    -1,    74,    -1,    76,    77,
      78,    79,    -1,    81,    82,    -1,    84,    85,    86,    -1,
      88,    -1,    90,    -1,    -1,    93,    -1,    -1,    96,    -1,
      98,    -1,    -1,   101,    -1,    -1,    -1,   105,   106,   107,
      -1,    -1,   110,    -1,    -1,    -1,    -1,   115,    -1,    -1,
      -1,    -1,    -1,   121,   122,    -1,   124,    -1,    -1,    -1,
     128,    -1,   130,   131,   132,   133,   134,    -1,    -1,    -1,
      -1,    -1,    -1,   141,   142,   143,    -1,    -1,    -1,   147,
      -1,    -1,   150,    -1,   152,   153,   154,    -1,    -1,   157,
     158,    -1,   160,   161,   162,   163,   164,    -1,    -1,    -1,
     168,   169,   170,    -1,    -1,   173,   174,    -1,   176,   177,
     178,    -1,    -1,    -1,    -1,    -1,    -1,   185,    -1,   187,
      -1,   189,    -1,   191,   192,   193,   194,    -1,   196,    -1,
     198,    -1,    -1,    -1,    -1,   203,    -1,    -1,    -1,    -1,
      -1,   209,    -1,    -1,    -1,   213,   214,   215,   216,    -1,
      -1,   219,   220,   221,    -1,    -1,   224,    -1,    -1,    -1,
      -1,   229,    -1,    -1,    -1,    -1,   234,    -1,   236,   237,
      -1,   239,   240,    -1,    -1,    -1,   244,    -1,    -1,    -1,
     248,    -1,    -1,   251,    -1,    -1,   254,   255,    -1,    -1,
      -1,    -1,    -1,   261,   262,    -1,   264,    -1,   266,    -1,
     268,   269,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,    -1,   296,   297,
     298,    -1,   300,   301,   302,   303,    -1,   305,   306,    -1,
      -1,    -1,    -1,   311,   312,   313,   314,   315,   316,    -1,
      -1,   319,   320,    -1,   322,    -1,   324,    -1,   326,   327,
     328,   329,   330,   331,   332,   333,   334,    -1,    -1,   337,
     338,    -1,    -1,   341,   342,   343,   344,    -1,    -1,    -1,
      -1,   349,    -1,    -1,    -1,   353,    -1,   355,   356,   357,
      -1,    -1,   360,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   374,   375,    -1,    -1,
     378,    -1,   380,   381,   382,   383,   384,   385,   386,   387,
     388,    -1,    -1,    -1,    -1,   393,   394,    -1,   396,    -1,
     398,   399,   400,   401,   402,    -1,   404,   405,   406,    -1,
      -1,   409,    -1,    -1,    -1,   413,   414,   415,   416,   417,
      -1,    -1,   420,   421,   422,   423,   424,    -1,   426,    -1,
      -1,   429,    -1,   431,    -1,    -1,   434,    -1,    -1,    -1,
     438,    -1,    -1,   441,   442,   443,    -1,   445,    -1,    -1,
      -1,   449,   450,   451,   452,   453,   454,   455,    -1,   457,
     458,    -1,   460,    -1,    -1,    -1,    -1,   465,   466,   467,
      -1,    -1,    -1,    -1,   472,    -1,    -1,    -1,   476,    -1,
      -1,   479,    -1,   481,    -1,   483,    -1,    -1,   486,   487,
      -1,    -1,    -1,    -1,    -1,    -1,   494,   495,    -1,   497,
      -1,    -1,   500,    -1,    -1,   503,    -1,   505,    -1,    -1,
      -1,   509,    -1,   511,   512,   513,   514,   515,   516,    -1,
      -1,   519,   520,   521,   522,    -1,   524,   525,    -1,    -1,
     528,   529,   530,   531,    -1,    -1,   534,   535,    -1,   537,
     538,   539,   540,    -1,    -1,    -1,    -1,    -1,   546,   547,
      -1,    -1,    -1,    -1,   552,   553,   554,    -1,   556,   557,
      -1,   559,   560,    -1,    -1,    -1,    -1,    -1,   566,    -1,
      -1,   569,    -1,    -1,    -1,   573,   574,    -1,    -1,    -1,
      -1,    -1,    -1,   581,    -1,    -1,   584,    -1,    -1,    -1,
     588,   589,   590,   591,   592,    -1,    -1,    -1,    -1,    -1,
      -1,   599,    -1,    -1,   602,    -1,   604,    -1,    -1,   607
};

/* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
   symbol of state STATE-NUM.  */
static const yytype_uint16 yystos[] =
{
       0,    13,    14,    30,    34,    48,    49,    56,    60,    61,
      75,    94,   116,   125,   126,   127,   138,   139,   151,   165,
     181,   195,   197,   202,   205,   228,   230,   246,   263,   267,
     362,   379,   392,   403,   425,   428,   430,   433,   436,   437,
     446,   448,   456,   462,   470,   475,   477,   504,   508,   551,
     563,   567,   570,   575,   603,   618,   629,   632,   633,   634,
     635,   636,   638,   643,   645,   652,   682,   710,   717,   718,
     835,   999,  1037,  1040,  1053,  1056,  1061,  1063,  1064,  1069,
    1072,  1077,  1084,  1096,  1097,  1254,  1256,  1270,  1273,  1298,
    1306,  1317,  1324,  1338,  1342,  1345,  1354,  1360,  1364,  1366,
    1367,  1418,  1435,  1441,  1443,  1450,  1452,  1478,  1484,  1485,
    1486,  1487,  1540,  1548,  1549,    11,   103,   122,   189,   218,
     268,   397,   468,   525,  1033,  1509,  1510,  1511,  1514,   264,
     350,  1071,  1479,   533,  1409,   222,     5,     7,     8,     9,
      10,    11,    17,    20,    22,    23,    24,    25,    26,    27,
      28,    30,    34,    38,    41,    42,    43,    45,    47,    48,
      51,    54,    55,    57,    58,    60,    62,    63,    64,    65,
      66,    67,    69,    70,    72,    73,    74,    75,    76,    77,
      78,    79,    81,    82,    84,    85,    86,    87,    88,    90,
      93,    96,    98,   101,   105,   106,   107,   110,   115,   116,
     121,   122,   124,   128,   130,   131,   132,   133,   134,   138,
     141,   142,   143,   147,   149,   150,   152,   153,   154,   157,
     158,   160,   161,   162,   163,   164,   165,   168,   169,   170,
     173,   174,   176,   177,   178,   181,   185,   187,   189,   191,
     192,   193,   194,   196,   198,   202,   203,   205,   208,   209,
     213,   214,   215,   216,   219,   220,   221,   224,   229,   230,
     234,   236,   237,   239,   240,   244,   247,   248,   251,   254,
     255,   261,   262,   264,   266,   268,   269,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   296,   297,   298,   300,   301,   302,
     303,   305,   306,   311,   312,   313,   314,   315,   316,   319,
     320,   322,   324,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   337,   338,   341,   342,   343,   344,   348,   349,
     353,   355,   356,   357,   360,   361,   363,   373,   374,   375,
     377,   378,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   392,   393,   394,   396,   398,   399,   400,   401,
     402,   404,   405,   406,   409,   413,   414,   415,   416,   417,
     420,   421,   422,   423,   424,   426,   427,   429,   430,   431,
     434,   436,   438,   439,   441,   442,   443,   445,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   460,
     461,   465,   466,   467,   468,   472,   476,   478,   479,   480,
     481,   483,   484,   485,   486,   487,   494,   495,   497,   500,
     503,   504,   505,   508,   509,   511,   512,   513,   514,   515,
     516,   519,   520,   521,   522,   524,   525,   528,   529,   530,
     531,   534,   535,   537,   538,   539,   540,   546,   547,   551,
     552,   553,   554,   556,   557,   559,   560,   562,   563,   566,
     569,   571,   573,   574,   581,   584,   588,   589,   590,   591,
     592,   599,   600,   602,   603,   604,   607,   676,  1408,  1412,
    1416,  1417,   296,   524,   527,  1437,  1437,   599,  1480,   103,
     188,   268,   468,   488,   525,   530,   565,   573,   658,   659,
     886,   887,   888,   977,   978,   979,  1307,  1255,   103,   162,
     189,   222,   268,   397,   468,   525,   530,   548,   573,   588,
    1266,  1412,  1071,    98,   719,   675,   626,  1405,  1407,  1412,
     644,  1271,   385,    81,   405,  1365,   106,   222,   604,  1372,
    1437,  1071,   836,  1412,  1361,   456,   573,  1437,  1071,  1274,
    1355,   491,   707,   711,   712,  1412,   675,  1480,  1412,  1100,
    1102,  1103,   364,  1420,  1325,   711,   480,   546,   480,   527,
    1319,   385,  1442,  1299,  1412,    30,    75,   149,   392,   414,
     448,   504,  1542,   462,   618,  1098,     0,   151,   630,   392,
     169,   380,  1343,  1405,  1412,   155,  1010,  1412,   155,   676,
     199,   676,   256,  1409,  1412,  1414,   783,   784,   787,   810,
    1412,   527,   162,  1005,  1509,  1437,  1480,  1078,   683,   626,
     544,  1054,  1065,    16,  1481,   217,   889,   199,  1414,   785,
     810,   675,   369,  1506,  1510,  1511,  1512,  1513,  1514,   527,
     887,   222,   222,   222,   218,   275,   406,  1315,  1316,     7,
      20,    27,    33,    35,    36,    37,    39,    52,    53,    58,
      59,    66,    69,    87,    91,    92,    97,    99,   102,   103,
     108,   109,   110,   115,   117,   120,   166,   171,   172,   179,
     192,   194,   200,   206,   213,   217,   228,   231,   253,   261,
     272,   299,   304,   315,   319,   321,   325,   326,   327,   328,
     329,   336,   345,   346,   347,   351,   352,   357,   376,   382,
     387,   388,   390,   404,   432,   433,   445,   447,   453,   454,
     460,   506,   507,   513,   517,   518,   523,   533,   537,   538,
     539,   540,   549,   550,   551,   555,   558,   573,   577,   578,
     579,   580,   585,   587,   591,   592,   607,   611,   612,   617,
     618,   621,   622,   625,   626,   938,  1117,  1118,  1119,  1120,
    1124,  1127,  1128,  1129,  1130,  1131,  1132,  1140,  1144,  1154,
    1391,  1393,  1395,  1396,  1397,  1401,  1403,  1408,  1412,   217,
    1265,  1265,  1265,  1412,   199,  1265,  1265,   810,  1265,   675,
    1265,  1437,   639,  1346,   130,    12,    13,    94,   125,   139,
     162,   165,   176,   197,   222,   228,   267,   398,   402,   418,
     426,   434,   462,   475,   476,   519,   548,   570,   572,  1453,
    1455,  1457,  1458,  1412,   361,    65,   410,   626,  1414,   123,
     207,   275,  1276,  1412,  1117,   232,  1368,  1436,  1437,    46,
     837,   186,    33,   296,  1330,  1362,  1412,   675,  1073,  1437,
     123,   275,  1277,  1305,   296,   405,   480,  1356,  1357,   581,
     708,   470,   713,    12,   402,  1451,  1455,   544,  1481,  1101,
      12,   135,   207,   493,   494,   495,   496,   497,   498,   510,
    1107,  1108,  1109,  1505,  1419,    23,    34,    58,    59,    69,
      90,    92,    94,   104,   153,   158,   161,   187,   189,   196,
     198,   221,   222,   243,   264,   296,   361,   386,   396,   397,
     400,   401,   421,   467,   480,   509,   527,   590,   940,   976,
    1326,  1330,  1331,  1333,  1426,   713,  1047,  1048,   596,  1041,
    1047,  1318,  1412,  1437,  1305,    35,   206,   533,  1392,  1410,
    1541,  1541,  1541,  1541,  1541,  1102,  1098,   619,   624,  1412,
    1340,  1339,   313,   531,   557,  1001,   571,    99,  1414,  1415,
    1003,   789,   811,  1412,  1002,   363,     6,    56,   139,   346,
     409,   411,   812,  1405,   676,   499,  1515,  1516,  1004,  1062,
    1079,  1080,  1081,  1082,  1405,   618,   684,  1412,   646,  1260,
    1261,  1405,  1260,    55,   348,   348,   425,  1482,   345,   346,
    1123,  1412,   788,   811,   183,     6,  1415,  1468,  1469,   433,
      10,   397,   548,   662,  1113,  1508,  1516,  1524,  1528,  1529,
    1535,   662,  1113,  1507,  1516,  1524,  1529,  1535,  1509,  1514,
     889,  1412,  1412,  1412,   186,  1308,  1312,  1313,  1412,  1315,
     618,   618,   618,  1127,   618,   618,   618,  1117,  1157,   618,
     618,   618,   618,   618,   618,   618,   618,   618,  1116,  1116,
     618,   927,   618,   618,   618,   533,   618,   618,   618,   618,
     618,   618,   618,   618,   618,   618,   618,   618,  1117,   618,
     618,   618,  1155,  1156,  1401,  1412,   618,   618,   618,   618,
     618,   618,   618,   618,   618,  1117,   927,   618,   618,   618,
     618,   618,   618,   618,   618,   618,   618,   618,   618,   618,
     618,   618,   618,   618,   618,   927,   533,   618,   618,   618,
     533,   618,   618,   618,    35,   206,   533,   618,  1116,   927,
     927,   618,   618,   618,   618,   618,   618,  1127,  1127,  1127,
    1117,  1500,  1501,  1412,  1145,  1412,    15,    16,   366,   369,
     605,  1121,  1122,   155,   156,   190,   201,   238,   249,   276,
     339,  1125,    31,   136,   235,   257,   325,   419,   473,   474,
     486,   609,   610,   611,   612,   613,   614,   615,   616,  1123,
    1127,    68,   368,   620,  1410,   618,   626,   166,  1412,   676,
    1412,   358,   811,   676,  1414,   349,   589,   821,   822,  1267,
    1268,  1269,  1331,   676,  1415,  1467,  1259,  1265,   576,   640,
      33,   128,   153,   157,   191,   209,   269,   396,   405,   420,
     438,   481,   505,  1347,  1351,  1352,  1437,    80,   625,   720,
     721,   722,   723,  1412,   396,  1456,   450,   450,   525,   530,
     573,   588,   364,  1460,   524,   358,  1462,    64,   480,  1459,
     104,   588,  1461,   358,   620,    18,   155,  1209,  1210,  1444,
    1412,  1033,   485,    48,    79,   275,  1374,  1405,  1438,  1439,
    1070,   259,   262,   407,   838,   840,   625,   637,  1409,   269,
    1074,  1415,  1075,  1076,  1405,  1057,   232,  1262,  1278,  1279,
    1405,    48,  1358,   620,  1410,    54,    63,    72,    84,    85,
      86,   101,   314,   331,   458,   512,   529,   714,   716,  1456,
     358,   358,   456,  1483,  1482,   564,  1488,  1489,   613,  1111,
    1112,  1113,  1109,  1421,  1422,  1423,   161,   470,   257,   594,
    1337,   618,   103,   162,   189,   397,   527,   548,   588,  1337,
      12,   898,  1414,   258,  1228,  1230,   186,   235,  1332,  1334,
      67,   505,   184,   505,   524,    67,   505,    12,    41,    88,
      93,   237,   312,   375,   487,   521,  1320,  1321,  1322,   161,
     209,   505,   505,  1228,  1337,  1334,   269,   152,    70,   399,
     524,   547,   505,   584,  1038,   424,   500,  1049,  1050,    82,
    1261,  1033,   620,   360,  1544,   520,  1545,   242,   441,  1543,
     619,  1489,  1491,  1493,  1494,   151,   631,  1096,  1270,  1273,
    1298,  1306,  1341,  1344,  1392,  1412,   120,   884,   885,   895,
     896,   949,   106,  1116,   625,   677,     6,   790,   677,   618,
     105,   807,   807,   807,     4,  1000,  1006,   461,   588,  1516,
    1260,   235,   620,   379,  1090,  1092,  1093,   685,   686,  1117,
     219,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   297,
     298,   422,   423,   647,   648,   651,   169,   406,   620,  1055,
      57,   169,   173,   184,   311,   406,  1066,  1067,  1068,    55,
     425,   166,   657,   790,   106,   807,   215,   620,  1113,  1113,
    1113,   162,   189,   189,  1516,  1405,   980,   981,   980,   980,
    1263,  1264,  1405,  1406,  1412,   620,  1310,   626,  1314,  1117,
    1117,    12,   135,  1150,  1211,  1150,  1150,  1150,   593,  1159,
    1117,  1117,  1154,  1154,  1117,  1117,  1117,   135,  1150,  1211,
     619,   352,   619,   619,  1117,  1117,  1117,  1117,  1401,  1500,
     111,   112,   113,   114,   115,   210,   211,   212,   213,   315,
     317,   318,   319,   326,   404,   459,   460,   591,   606,   607,
    1206,  1207,  1154,   107,   110,   537,   540,  1208,   135,  1147,
    1117,  1117,  1117,  1117,  1206,  1117,  1154,  1156,     9,   620,
     626,   135,  1150,  1117,  1117,   135,  1150,  1117,  1117,  1154,
    1154,  1154,  1117,  1117,  1117,  1154,  1120,  1117,  1117,  1117,
    1117,  1117,  1117,   619,  1117,  1150,  1150,  1117,  1117,   135,
    1150,  1117,  1207,  1207,  1117,    44,   250,   545,  1117,  1117,
     619,  1402,  1403,  1412,  1150,  1150,  1117,  1117,  1117,   619,
     620,   619,   462,   618,  1497,  1498,  1117,   625,  1146,  1414,
     626,  1117,  1117,  1117,  1119,   172,   351,   550,   566,  1123,
      12,    17,  1119,  1126,  1120,  1120,   618,  1127,  1120,  1120,
    1120,  1120,   257,  1120,  1120,   231,  1120,   231,  1120,  1120,
    1120,  1120,  1120,    31,   235,   257,   419,  1414,  1127,  1117,
    1133,  1412,   626,  1405,  1267,   620,  1269,   153,   620,  1260,
    1257,   625,   641,   642,   269,   269,   269,   269,    48,   269,
     269,   620,  1348,   110,   537,   540,   715,   725,  1144,  1395,
    1401,  1414,   620,   155,   524,   618,  1470,  1415,  1470,  1470,
    1470,   189,   397,   527,  1454,  1458,  1412,   177,   342,  1412,
    1445,  1446,  1278,  1409,  1085,   264,  1373,  1210,   620,  1260,
      70,   618,   844,   845,   844,   845,   380,   847,   203,   245,
    1414,    29,   544,  1363,   620,   544,   620,   544,  1260,  1279,
    1275,   379,  1173,  1174,    12,  1359,  1357,   620,   155,   620,
    1415,   189,   397,  1454,  1412,    12,   135,  1496,   620,  1104,
    1117,  1399,  1412,   620,   196,   264,   467,  1424,  1425,  1428,
    1429,   235,  1335,  1409,  1117,   613,   889,   676,   676,   676,
    1405,   676,  1405,   269,   330,   505,  1329,  1329,   272,   352,
     555,  1231,  1232,  1393,  1412,  1337,  1412,   676,  1337,  1415,
    1332,   676,  1337,   236,   522,   174,   184,  1323,   620,  1335,
    1332,  1405,  1334,  1332,  1332,  1337,  1337,   569,  1051,   620,
     483,   462,   618,   622,  1160,  1161,  1162,  1163,  1164,  1175,
    1176,  1190,  1392,   383,  1546,   367,  1224,  1230,  1495,   885,
      68,   940,   131,  1414,    73,    87,   247,   323,   348,   408,
     499,   679,   681,   415,   559,   808,   809,   224,   804,   805,
     806,   813,   821,   822,   103,   208,   373,   382,   389,   484,
     573,   660,   661,  1409,    24,   303,   798,   799,   800,   813,
     814,   815,   821,   822,   791,   792,   798,     6,    13,    14,
      25,    26,    56,    60,    61,    66,    73,    81,    91,   106,
     124,   132,   133,   139,   147,   153,   164,   182,   220,   222,
     229,   244,   302,   320,   324,   362,   367,   374,   379,   382,
     413,   427,   428,   429,   430,   452,   509,   525,   528,   551,
     564,   832,   891,   893,   895,   896,  1011,  1015,  1017,  1020,
    1026,  1027,  1028,  1220,   358,   670,  1007,   122,   234,  1405,
     120,  1083,  1412,  1081,  1405,   834,  1092,   222,   245,   974,
    1094,   619,   620,   155,   155,   155,   155,   155,   155,   155,
     155,   155,   155,   155,   155,   155,   155,   155,   155,   155,
     155,   155,   155,   155,   155,   155,   620,  1261,   571,  1067,
     883,   884,    73,   343,   416,   560,   801,   802,   803,   813,
     817,   818,   819,   820,   821,   822,   600,   575,   786,    46,
     596,  1469,   189,   676,   676,   889,   676,  1412,   653,   553,
     576,   988,   358,   358,   358,   620,  1311,  1173,   626,  1314,
    1313,   186,   613,  1412,   620,   619,  1150,   619,  1151,   619,
     619,   619,  1117,   145,   593,  1158,    18,   619,   576,   619,
     619,   619,   620,   576,   620,  1141,   619,   613,   619,   620,
     620,   619,   619,   619,   619,   186,   619,   620,  1143,   619,
     620,   620,   620,   612,   620,   619,   619,   618,  1401,  1412,
    1150,   619,   619,   619,  1150,   619,   620,   619,   619,   619,
     619,   619,   619,   620,   619,   235,   619,   620,   620,   619,
     620,   620,   619,   619,   619,   620,   186,   620,  1150,   619,
     619,   620,   620,   620,   619,   186,  1117,   186,  1117,   186,
    1117,   186,   619,   620,   619,   619,   619,   619,   620,    18,
     255,   620,   964,   619,  1154,  1180,  1181,  1182,   462,   618,
    1099,  1492,  1493,   564,  1502,   623,   196,   264,   467,  1427,
     471,  1412,   172,   351,   550,   566,   618,    16,  1117,  1500,
     160,  1216,  1120,  1117,  1117,  1120,   618,  1127,  1120,  1113,
    1137,  1138,  1139,   618,   626,  1412,  1258,  1269,   155,   471,
    1289,  1290,  1415,    50,   440,  1034,  1260,  1414,   620,  1352,
    1260,  1353,   723,   726,   727,   722,   353,   454,   724,  1412,
    1471,  1472,   544,   613,  1405,  1412,  1466,  1466,  1466,   155,
     177,   190,   201,   248,   249,   276,   342,   394,  1447,  1449,
     594,  1212,  1272,  1086,  1087,  1088,  1089,  1405,   223,   275,
     410,   601,  1440,  1439,   618,  1113,   117,   179,   206,   272,
     352,   555,  1235,  1238,  1239,   516,   848,   839,   618,  1117,
    1409,  1415,  1415,  1076,  1405,   169,   406,   574,  1058,  1059,
    1060,   462,   470,   580,   581,   618,   879,  1280,  1283,   618,
     716,   715,   197,   186,  1466,  1466,  1466,  1490,  1112,   186,
     232,  1105,  1106,  1223,  1224,  1249,  1114,  1114,   626,  1422,
     120,   546,  1412,  1431,   332,   382,   625,   940,  1430,  1409,
     186,  1336,   619,  1412,   356,   620,  1337,   405,  1228,  1322,
    1336,  1337,  1332,  1405,  1337,  1337,   651,  1052,  1039,  1050,
    1189,  1412,    95,   225,   242,   253,   335,   447,   510,  1172,
     470,   620,  1405,  1189,   620,   184,  1547,    46,  1228,  1290,
    1290,   333,  1409,   499,   499,   499,   499,   499,   461,  1409,
    1409,  1290,   620,   806,  1409,  1409,  1409,  1409,   117,   179,
     206,   272,   352,   555,  1234,  1409,  1409,   619,   620,  1290,
    1290,   620,   800,   793,   794,   813,   814,   815,    71,    83,
     379,   907,   910,   911,   972,   974,   978,   979,  1032,  1032,
     379,  1290,  1290,  1032,  1290,   379,   379,  1290,  1290,   544,
     131,  1290,   243,   525,   183,   379,   395,   974,  1032,   243,
    1290,   379,   525,   131,  1290,  1290,  1290,  1290,  1032,   379,
      46,  1290,   834,  1290,   379,   381,    18,   155,   544,  1036,
     379,   379,  1290,   134,   312,  1412,  1290,   379,  1290,   891,
     620,   831,   832,  1015,   618,   626,   906,   912,  1404,  1412,
      77,   457,   428,  1008,  1517,  1091,   618,  1117,   618,  1409,
    1234,  1234,  1409,  1409,   117,   179,   272,   352,   555,  1236,
    1409,  1234,  1234,  1409,  1409,  1409,  1409,  1409,  1409,  1409,
    1234,  1234,  1409,  1396,  1409,  1234,   648,  1290,  1290,  1290,
    1290,   620,   803,  1414,   268,   170,   795,   796,   797,   813,
     814,   815,   816,   819,   820,   821,   822,   382,   533,  1414,
    1412,  1536,     8,    29,   781,   676,   618,   443,   257,   618,
     824,   890,   892,   893,    45,   203,   455,   993,   993,  1405,
    1405,  1405,  1264,  1412,   576,  1309,  1412,  1161,   626,  1314,
     231,  1117,   619,  1117,   536,  1117,  1117,   149,    33,    59,
     107,   110,   118,   337,   478,   540,   568,  1152,    33,   941,
    1414,  1117,   941,  1152,  1154,   619,   231,   231,  1117,  1117,
    1154,  1117,  1117,  1117,  1117,  1117,  1120,   619,   619,  1117,
    1117,  1117,  1117,  1117,  1117,  1154,   231,  1117,  1117,  1117,
     619,  1117,  1117,  1117,  1117,   186,  1117,   186,  1117,   186,
    1117,  1117,  1117,    33,    59,   959,   960,   961,   962,   963,
    1235,  1234,   619,   619,  1503,  1504,  1505,  1181,  1099,   619,
    1496,   626,   626,   626,  1414,  1117,  1500,  1119,   619,   620,
     619,  1127,  1206,  1206,    16,  1117,  1500,  1216,  1117,   619,
     620,  1153,  1154,  1412,   897,  1414,  1034,   642,  1349,   155,
     620,   619,   620,  1468,   626,   626,   544,   544,   544,  1448,
    1213,  1229,  1230,  1280,   620,  1090,  1092,   533,  1411,   601,
     264,   841,   842,   843,  1412,   853,  1120,    46,   618,   855,
     845,   841,   544,  1059,   880,  1281,   618,  1286,  1291,  1286,
     619,   879,  1282,  1398,  1399,  1402,  1412,  1284,  1205,  1412,
     155,   364,  1468,   186,   186,   186,  1097,   140,  1161,  1250,
     184,   267,  1110,  1249,  1229,  1106,    18,  1115,  1409,  1412,
     613,  1412,   626,   239,   626,  1289,   120,   941,   942,  1289,
     184,  1289,   625,  1414,    33,   120,   944,   945,  1414,  1236,
    1327,   158,   590,  1232,  1232,   352,  1328,  1212,  1332,   620,
     573,  1042,  1043,  1177,  1184,  1189,  1160,   242,   242,   370,
    1191,   242,   253,   447,  1191,  1175,  1160,  1301,  1302,  1402,
    1162,  1173,  1186,  1187,  1234,   316,  1225,   120,   946,   948,
    1414,   942,   106,   106,   122,   234,   214,   823,  1235,   806,
     661,   823,   823,   800,   620,   794,   996,  1404,  1071,    61,
     183,   395,   565,   909,   973,   996,   974,   975,   975,  1404,
    1071,  1236,  1234,  1404,  1234,    12,  1016,  1024,  1025,  1412,
    1071,  1409,  1409,   940,  1290,  1234,   245,  1024,   245,  1404,
    1404,   897,  1025,  1290,   177,   248,   348,   900,  1234,  1236,
    1236,  1404,  1071,  1221,  1222,  1402,   120,  1234,   833,  1409,
    1071,   834,  1405,  1071,  1071,    76,    78,   120,   143,   178,
     417,   899,  1234,  1016,   894,     6,   139,  1028,   903,   904,
     905,   906,   907,  1412,     8,   177,  1035,   418,   908,   909,
     966,   913,   626,   346,   393,    22,   163,   664,   544,   132,
     147,   666,   618,  1518,   618,   395,  1202,  1203,  1204,  1412,
     649,   650,  1234,  1409,  1235,   823,   823,   803,   363,   199,
    1290,   620,   797,   533,    18,   443,   618,   125,   228,   570,
     782,   663,  1530,   118,   233,   412,   511,   902,  1405,   257,
     825,   830,   831,   903,   830,   620,   892,   654,   655,   656,
     626,  1161,  1212,  1314,  1212,  1117,   619,  1117,   536,   618,
     931,   932,   932,   618,   926,   618,   924,   925,   931,   932,
     233,   926,   233,   619,   619,   619,   619,   619,  1142,  1117,
    1117,   619,   619,  1149,  1224,   620,   620,   619,   620,   619,
     235,  1134,  1135,   619,   619,   619,   619,   620,   619,   619,
    1117,   619,   184,   619,   619,   620,   619,   620,   620,   619,
    1117,   619,  1117,   619,  1117,   619,   619,   619,   618,   954,
     954,    19,   126,   445,   611,   956,   957,   958,   620,   620,
    1111,  1505,   619,  1499,   626,   997,   619,  1154,  1119,   619,
     620,   619,  1114,  1139,   619,   596,  1350,    54,    63,    72,
      84,    85,    86,   101,   314,   331,   442,   458,   512,   529,
     728,   727,  1472,   596,  1475,   613,   613,  1468,  1468,  1468,
     618,  1117,   358,  1296,  1088,  1405,  1092,   218,  1095,  1369,
     619,   620,  1114,   840,   379,   856,   857,   619,  1415,  1107,
    1287,  1288,  1402,  1292,   620,   618,  1283,   619,   619,   620,
     626,  1488,   619,   620,   715,   186,  1468,  1468,  1468,  1212,
    1212,   141,   371,  1245,  1246,  1251,   570,   235,  1409,  1412,
     626,  1412,   255,  1412,    12,    33,   120,   358,  1117,  1434,
      68,   947,  1117,  1415,   357,   382,   533,  1433,  1427,  1289,
    1228,  1228,  1337,   651,   155,   382,  1044,   564,   619,  1492,
    1185,   623,   242,  1175,  1191,  1191,   242,   358,   358,   576,
     620,  1300,  1289,  1210,  1107,  1117,  1226,  1400,   794,  1018,
     618,   245,   245,   975,   996,   981,   996,   996,   139,   470,
    1016,  1029,  1013,   620,  1235,   942,  1409,   996,  1034,   596,
    1409,  1030,  1016,   620,    19,   126,  1227,   837,  1016,  1021,
    1016,   618,   619,   620,  1412,  1405,    32,    33,    38,    40,
      42,    43,    59,   107,   110,   118,   137,   154,   178,   180,
     192,   193,   233,   261,   270,   271,   273,   308,   309,   310,
     327,   328,   329,   334,   337,   354,   355,   387,   388,   412,
     466,   470,   482,   534,   537,   540,   541,   542,   543,   582,
     583,   607,   914,   917,   918,   919,   920,   921,   922,   923,
    1412,   393,  1117,  1117,   358,   670,   676,   358,    73,   671,
    1412,  1519,    18,  1016,   619,   620,   619,   620,   618,  1412,
     823,   797,  1409,   902,  1537,   358,   358,   687,   688,   690,
    1412,   485,  1405,   879,   619,   218,   433,   827,  1375,   892,
     618,   618,   618,  1412,  1212,  1223,  1206,  1117,   117,   272,
     352,   555,    20,    33,    47,   562,   940,   950,   951,   952,
     352,   352,   619,  1206,  1206,   464,  1148,  1117,  1117,  1154,
      42,   335,   619,   596,  1136,  1117,  1206,  1117,  1117,  1117,
    1117,   619,   619,   619,  1235,   619,   964,   959,   957,   959,
     960,  1234,  1183,  1497,  1412,   619,  1154,  1115,   410,   197,
     435,  1473,  1473,  1473,   120,  1117,  1294,  1295,   142,  1095,
     251,  1375,   843,   619,   203,   245,   858,   619,   620,  1111,
     620,  1289,  1293,  1294,  1291,  1285,  1283,  1398,  1412,   834,
    1412,  1468,  1229,   199,  1217,  1411,  1411,   625,  1247,  1248,
    1414,   472,   613,   410,   431,   465,  1432,   948,  1289,   618,
     618,  1431,  1117,  1409,   155,   121,  1045,  1496,  1210,  1163,
    1160,  1175,   242,   242,  1160,  1175,  1166,  1165,  1167,  1302,
    1212,  1295,  1200,  1201,  1111,   620,  1227,   380,   618,  1019,
    1117,   996,   981,   618,   980,   980,   120,   120,   912,  1066,
    1025,   947,   527,   914,  1012,  1222,  1022,  1024,  1014,  1353,
     905,   618,   967,   931,   931,   932,   926,   924,   391,   915,
     924,   924,   952,    59,   582,   918,   920,   952,   952,    59,
     583,   583,   586,   924,   916,   932,   926,   926,   952,   931,
     932,    25,    68,    73,   120,   351,   358,   395,   466,   565,
     934,   935,   936,   965,  1123,   586,   931,   952,    33,   931,
     953,   931,   931,   932,   618,   925,   933,   626,  1206,   480,
    1409,   138,  1009,   619,   620,  1520,  1521,   619,  1203,   650,
     660,   485,   226,   235,   372,   691,   692,   693,   694,  1113,
     457,   619,   620,   689,  1409,   619,   619,   890,    18,   882,
     994,   995,  1412,   994,   994,   258,  1233,   619,   619,   619,
     619,   619,    33,    20,   562,   940,    33,   941,   619,   620,
     619,   619,  1392,   619,   619,   620,   619,   322,   247,   405,
     619,   619,   619,   619,   619,   619,   955,   619,   620,   901,
    1106,  1229,  1492,   619,   267,   364,    62,   240,   344,   501,
     514,   602,  1464,  1465,   596,  1474,  1474,  1474,   619,   620,
    1297,   232,   618,   846,   618,   859,  1412,   857,   881,  1288,
    1295,   619,  1491,    46,   204,  1214,  1252,  1414,   620,   322,
      74,   556,   410,  1433,   533,   533,  1289,  1409,   155,   384,
    1046,  1178,   358,  1169,  1175,  1175,   358,  1171,  1117,  1117,
     618,  1223,  1198,  1199,  1188,  1400,  1235,   856,   619,   618,
     618,   994,   618,   618,   110,   537,   540,   611,   612,  1394,
    1395,  1035,  1405,   934,  1071,  1023,  1058,   619,   968,  1412,
     299,   969,   478,   568,   608,   928,   929,   930,   618,   928,
     928,   952,   586,   928,   618,   952,   928,   946,  1409,   938,
     939,  1394,   570,   120,   245,   936,   245,   351,   952,   953,
     952,   953,   928,   352,   928,  1412,   665,   672,   673,  1412,
     462,   618,  1522,   619,  1409,   619,   620,   689,  1525,   664,
    1531,   690,   914,   937,   826,   830,   618,   879,   619,   620,
    1227,   618,   619,   619,  1232,   941,   953,   352,  1117,   322,
     168,   619,  1234,  1110,  1110,   533,   533,   533,    16,  1463,
     197,   300,   301,   305,   306,  1476,  1477,  1295,   245,   527,
    1113,   849,   851,   852,  1412,   580,   860,   901,  1218,  1400,
    1215,  1223,   940,   943,  1248,   619,   619,  1434,  1409,   155,
    1497,  1168,   576,  1170,   576,  1205,  1233,   182,   218,   575,
    1193,  1194,  1197,   901,  1227,   619,   994,   994,   619,   994,
     994,  1396,  1396,   834,  1031,   232,   619,   620,   187,   378,
     479,   358,   970,   930,   998,  1392,   998,   938,   581,   503,
     667,    52,    65,   175,   217,   241,   252,   361,   444,   674,
     732,   734,   735,   736,   738,   739,   740,   741,   742,   743,
     745,   753,   754,   757,   768,   771,   773,   774,  1408,  1413,
    1417,  1100,  1098,   596,  1523,  1538,   693,  1412,  1405,   669,
     670,   443,   947,  1491,   827,   879,   828,    73,   244,   982,
     985,   988,   989,   990,   995,   352,   596,   983,   987,   989,
     992,   984,   986,   989,   991,   619,   619,   619,  1464,   364,
    1234,  1234,  1234,  1234,  1477,   570,  1405,   853,   515,   854,
     619,   620,   235,   254,    73,   106,   222,   302,   320,   343,
     525,   876,   877,   878,  1331,   597,   598,   620,  1219,  1227,
    1117,  1229,   942,  1253,  1409,  1179,  1117,   618,  1117,   618,
     619,   974,   974,  1194,   619,   619,   982,   619,   619,  1035,
     618,  1412,   125,   570,   619,   620,   619,  1117,   150,   668,
     755,   758,  1412,   186,   342,   746,   733,  1413,  1413,  1412,
     737,   633,   274,   432,   595,   777,    30,   775,   627,   619,
      51,    61,   264,   678,   937,   184,   666,  1532,   619,  1488,
    1409,  1290,   990,  1227,   619,   377,   992,   991,  1303,  1304,
    1402,  1173,  1114,  1235,   850,   852,   862,   535,  1290,   131,
     131,  1290,  1290,  1290,  1290,   618,   871,   878,   153,  1400,
     397,  1240,    70,  1376,  1492,  1205,  1205,   184,  1192,  1192,
     966,   982,   983,   984,   856,    50,   348,   440,   470,   971,
     971,   952,  1392,   952,  1117,  1117,   593,   760,   764,   186,
    1412,   748,   749,  1117,   696,   731,   732,   734,   736,   738,
     740,   741,   742,   743,   745,   753,   768,   771,   773,   696,
     778,   776,   769,   772,  1491,    61,   364,    61,   129,   679,
     680,  1123,  1539,  1113,   671,   937,   829,  1234,  1408,   620,
    1289,  1370,   619,   854,   618,   864,   866,   861,  1409,  1290,
    1290,   272,   352,   555,  1237,  1238,  1237,  1235,  1414,   516,
     872,   873,  1290,  1227,  1412,   148,   159,   365,   532,  1377,
    1378,   260,  1379,   619,   619,   199,   242,   367,  1196,  1195,
     619,     5,   120,   351,   358,   358,   756,   765,   145,   764,
     767,   232,   149,  1117,   149,   731,   624,   569,  1117,   697,
     777,   775,   364,   364,   129,   731,  1526,   138,  1533,  1491,
    1304,  1295,   943,   618,   865,   866,   867,   307,   863,   866,
    1409,  1409,   874,   619,   620,   897,  1241,    46,    46,   148,
      46,  1378,   502,   532,  1380,  1381,    46,    46,   618,   618,
     570,   125,   593,   759,   761,  1117,   696,   149,   744,   217,
     536,   274,   624,   780,   138,   119,   695,   698,   770,  1413,
     770,   144,   672,   678,  1371,   619,   620,   307,   869,   870,
    1120,   875,  1414,   873,   618,  1392,  1392,    46,  1392,    46,
      46,  1381,  1202,  1204,   971,   971,   762,   761,   767,   766,
      52,   747,  1412,   750,  1117,   779,    89,   167,   703,   729,
    1412,   149,   731,   624,   453,  1534,   451,  1382,   866,   620,
     868,   876,  1113,  1242,  1243,  1244,  1392,  1392,  1392,   619,
     619,  1117,   149,   536,   620,   696,   149,   696,   202,   620,
     699,    80,   100,   624,  1527,   731,   215,  1376,   870,   619,
    1117,   619,   620,   763,    52,   696,  1412,   751,   432,   149,
     184,  1412,   937,   184,   184,   731,    46,  1379,  1114,  1244,
     536,   145,   146,   752,   595,   700,   120,   730,   706,   707,
    1234,   701,   702,  1392,   218,  1383,   696,   696,   748,   490,
     492,   704,   705,   706,   709,  1123,  1412,  1117,  1096,   352,
     618,  1385,   620,   731,   185,   260,   451,  1384,   619,   625,
    1386,  1387,  1402,   470,  1388,   705,  1414,   619,   620,  1389,
    1390,  1402,  1387,   620,  1289,  1390,  1113,  1295,  1114
};

#define yyerrok		(yyerrstatus = 0)
#define yyclearin	(yychar = YYEMPTY)
#define YYEMPTY		(-2)
#define YYEOF		0

#define YYACCEPT	goto yyacceptlab
#define YYABORT		goto yyabortlab
#define YYERROR		goto yyerrorlab


/* Like YYERROR except do call yyerror.  This remains here temporarily
   to ease the transition to the new meaning of YYERROR, for GCC.
   Once GCC version 2 has supplanted version 1, this can go.  */

#define YYFAIL		goto yyerrlab

#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)					\
do								\
  if (yychar == YYEMPTY && yylen == 1)				\
    {								\
      yychar = (Token);						\
      yylval = (Value);						\
      yytoken = YYTRANSLATE (yychar);				\
      YYPOPSTACK (1);						\
      goto yybackup;						\
    }								\
  else								\
    {								\
      yyerror (YY_("syntax error: cannot back up")); \
      YYERROR;							\
    }								\
while (YYID (0))


#define YYTERROR	1
#define YYERRCODE	256


/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
   If N is 0, then set CURRENT to the empty location which ends
   the previous symbol: RHS[0] (always defined).  */

#define YYRHSLOC(Rhs, K) ((Rhs)[K])
#ifndef YYLLOC_DEFAULT
# define YYLLOC_DEFAULT(Current, Rhs, N)				\
    do									\
      if (YYID (N))                                                    \
	{								\
	  (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;	\
	  (Current).first_column = YYRHSLOC (Rhs, 1).first_column;	\
	  (Current).last_line    = YYRHSLOC (Rhs, N).last_line;		\
	  (Current).last_column  = YYRHSLOC (Rhs, N).last_column;	\
	}								\
      else								\
	{								\
	  (Current).first_line   = (Current).last_line   =		\
	    YYRHSLOC (Rhs, 0).last_line;				\
	  (Current).first_column = (Current).last_column =		\
	    YYRHSLOC (Rhs, 0).last_column;				\
	}								\
    while (YYID (0))
#endif


/* YY_LOCATION_PRINT -- Print the location on the stream.
   This macro was not mandated originally: define only if we know
   we won't break user code: when these are the locations we know.  */

#ifndef YY_LOCATION_PRINT
# if YYLTYPE_IS_TRIVIAL
#  define YY_LOCATION_PRINT(File, Loc)			\
     fprintf (File, "%d.%d-%d.%d",			\
	      (Loc).first_line, (Loc).first_column,	\
	      (Loc).last_line,  (Loc).last_column)
# else
#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
# endif
#endif


/* YYLEX -- calling `yylex' with the right arguments.  */

#ifdef YYLEX_PARAM
# define YYLEX yylex (&yylval, YYLEX_PARAM)
#else
# define YYLEX yylex (&yylval)
#endif

/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)			\
do {						\
  if (yydebug)					\
    YYFPRINTF Args;				\
} while (YYID (0))

# define YY_SYMBOL_PRINT(Title, Type, Value, Location)			  \
do {									  \
  if (yydebug)								  \
    {									  \
      YYFPRINTF (stderr, "%s ", Title);					  \
      yy_symbol_print (stderr,						  \
		  Type, Value); \
      YYFPRINTF (stderr, "\n");						  \
    }									  \
} while (YYID (0))


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep)
#else
static void
yy_symbol_value_print (yyoutput, yytype, yyvaluep)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
#endif
{
  if (!yyvaluep)
    return;
# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# else
  YYUSE (yyoutput);
# endif
  switch (yytype)
    {
      default:
	break;
    }
}


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep)
#else
static void
yy_symbol_print (yyoutput, yytype, yyvaluep)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
#endif
{
  if (yytype < YYNTOKENS)
    YYFPRINTF (yyoutput, "token %s (", yytname[yytype]);
  else
    YYFPRINTF (yyoutput, "nterm %s (", yytname[yytype]);

  yy_symbol_value_print (yyoutput, yytype, yyvaluep);
  YYFPRINTF (yyoutput, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_stack_print (yytype_int16 *bottom, yytype_int16 *top)
#else
static void
yy_stack_print (bottom, top)
    yytype_int16 *bottom;
    yytype_int16 *top;
#endif
{
  YYFPRINTF (stderr, "Stack now");
  for (; bottom <= top; ++bottom)
    YYFPRINTF (stderr, " %d", *bottom);
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)				\
do {								\
  if (yydebug)							\
    yy_stack_print ((Bottom), (Top));				\
} while (YYID (0))


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_reduce_print (YYSTYPE *yyvsp, int yyrule)
#else
static void
yy_reduce_print (yyvsp, yyrule)
    YYSTYPE *yyvsp;
    int yyrule;
#endif
{
  int yynrhs = yyr2[yyrule];
  int yyi;
  unsigned long int yylno = yyrline[yyrule];
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
	     yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      fprintf (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
		       &(yyvsp[(yyi + 1) - (yynrhs)])
		       		       );
      fprintf (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)		\
do {					\
  if (yydebug)				\
    yy_reduce_print (yyvsp, Rule); \
} while (YYID (0))

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef	YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif



#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined __GLIBC__ && defined _STRING_H
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static YYSIZE_T
yystrlen (const char *yystr)
#else
static YYSIZE_T
yystrlen (yystr)
    const char *yystr;
#endif
{
  YYSIZE_T yylen;
  for (yylen = 0; yystr[yylen]; yylen++)
    continue;
  return yylen;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static char *
yystpcpy (char *yydest, const char *yysrc)
#else
static char *
yystpcpy (yydest, yysrc)
    char *yydest;
    const char *yysrc;
#endif
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYSIZE_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYSIZE_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
	switch (*++yyp)
	  {
	  case '\'':
	  case ',':
	    goto do_not_strip_quotes;

	  case '\\':
	    if (*++yyp != '\\')
	      goto do_not_strip_quotes;
	    /* Fall through.  */
	  default:
	    if (yyres)
	      yyres[yyn] = *yyp;
	    yyn++;
	    break;

	  case '"':
	    if (yyres)
	      yyres[yyn] = '\0';
	    return yyn;
	  }
    do_not_strip_quotes: ;
    }

  if (! yyres)
    return yystrlen (yystr);

  return yystpcpy (yyres, yystr) - yyres;
}
# endif

/* Copy into YYRESULT an error message about the unexpected token
   YYCHAR while in state YYSTATE.  Return the number of bytes copied,
   including the terminating null byte.  If YYRESULT is null, do not
   copy anything; just return the number of bytes that would be
   copied.  As a special case, return 0 if an ordinary "syntax error"
   message will do.  Return YYSIZE_MAXIMUM if overflow occurs during
   size calculation.  */
static YYSIZE_T
yysyntax_error (char *yyresult, int yystate, int yychar)
{
  int yyn = yypact[yystate];

  if (! (YYPACT_NINF < yyn && yyn <= YYLAST))
    return 0;
  else
    {
      int yytype = YYTRANSLATE (yychar);
      YYSIZE_T yysize0 = yytnamerr (0, yytname[yytype]);
      YYSIZE_T yysize = yysize0;
      YYSIZE_T yysize1;
      int yysize_overflow = 0;
      enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
      char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
      int yyx;

# if 0
      /* This is so xgettext sees the translatable formats that are
	 constructed on the fly.  */
      YY_("syntax error, unexpected %s");
      YY_("syntax error, unexpected %s, expecting %s");
      YY_("syntax error, unexpected %s, expecting %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s");
# endif
      char *yyfmt;
      char const *yyf;
      static char const yyunexpected[] = "syntax error, unexpected %s";
      static char const yyexpecting[] = ", expecting %s";
      static char const yyor[] = " or %s";
      char yyformat[sizeof yyunexpected
		    + sizeof yyexpecting - 1
		    + ((YYERROR_VERBOSE_ARGS_MAXIMUM - 2)
		       * (sizeof yyor - 1))];
      char const *yyprefix = yyexpecting;

      /* Start YYX at -YYN if negative to avoid negative indexes in
	 YYCHECK.  */
      int yyxbegin = yyn < 0 ? -yyn : 0;

      /* Stay within bounds of both yycheck and yytname.  */
      int yychecklim = YYLAST - yyn + 1;
      int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
      int yycount = 1;

      yyarg[0] = yytname[yytype];
      yyfmt = yystpcpy (yyformat, yyunexpected);

      for (yyx = yyxbegin; yyx < yyxend; ++yyx)
	if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
	  {
	    if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
	      {
		yycount = 1;
		yysize = yysize0;
		yyformat[sizeof yyunexpected - 1] = '\0';
		break;
	      }
	    yyarg[yycount++] = yytname[yyx];
	    yysize1 = yysize + yytnamerr (0, yytname[yyx]);
	    yysize_overflow |= (yysize1 < yysize);
	    yysize = yysize1;
	    yyfmt = yystpcpy (yyfmt, yyprefix);
	    yyprefix = yyor;
	  }

      yyf = YY_(yyformat);
      yysize1 = yysize + yystrlen (yyf);
      yysize_overflow |= (yysize1 < yysize);
      yysize = yysize1;

      if (yysize_overflow)
	return YYSIZE_MAXIMUM;

      if (yyresult)
	{
	  /* Avoid sprintf, as that infringes on the user's name space.
	     Don't have undefined behavior even if the translation
	     produced a string with the wrong number of "%s"s.  */
	  char *yyp = yyresult;
	  int yyi = 0;
	  while ((*yyp = *yyf) != '\0')
	    {
	      if (*yyp == '%' && yyf[1] == 's' && yyi < yycount)
		{
		  yyp += yytnamerr (yyp, yyarg[yyi++]);
		  yyf += 2;
		}
	      else
		{
		  yyp++;
		  yyf++;
		}
	    }
	}
      return yysize;
    }
}
#endif /* YYERROR_VERBOSE */


/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep)
#else
static void
yydestruct (yymsg, yytype, yyvaluep)
    const char *yymsg;
    int yytype;
    YYSTYPE *yyvaluep;
#endif
{
  YYUSE (yyvaluep);

  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  switch (yytype)
    {

      default:
	break;
    }
}


/* Prevent warnings from -Wmissing-prototypes.  */

#ifdef YYPARSE_PARAM
#if defined __STDC__ || defined __cplusplus
int yyparse (void *YYPARSE_PARAM);
#else
int yyparse ();
#endif
#else /* ! YYPARSE_PARAM */
#if defined __STDC__ || defined __cplusplus
int yyparse (void);
#else
int yyparse ();
#endif
#endif /* ! YYPARSE_PARAM */






/*----------.
| yyparse.  |
`----------*/

#ifdef YYPARSE_PARAM
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (void *YYPARSE_PARAM)
#else
int
yyparse (YYPARSE_PARAM)
    void *YYPARSE_PARAM;
#endif
#else /* ! YYPARSE_PARAM */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (void)
#else
int
yyparse ()

#endif
#endif
{
  /* The look-ahead symbol.  */
int yychar;

/* The semantic value of the look-ahead symbol.  */
YYSTYPE yylval;

/* Number of syntax errors so far.  */
int yynerrs;

  int yystate;
  int yyn;
  int yyresult;
  /* Number of tokens to shift before error messages enabled.  */
  int yyerrstatus;
  /* Look-ahead token as an internal (translated) token number.  */
  int yytoken = 0;
#if YYERROR_VERBOSE
  /* Buffer for error messages, and its allocated size.  */
  char yymsgbuf[128];
  char *yymsg = yymsgbuf;
  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
#endif

  /* Three stacks and their tools:
     `yyss': related to states,
     `yyvs': related to semantic values,
     `yyls': related to locations.

     Refer to the stacks thru separate pointers, to allow yyoverflow
     to reallocate them elsewhere.  */

  /* The state stack.  */
  yytype_int16 yyssa[YYINITDEPTH];
  yytype_int16 *yyss = yyssa;
  yytype_int16 *yyssp;

  /* The semantic value stack.  */
  YYSTYPE yyvsa[YYINITDEPTH];
  YYSTYPE *yyvs = yyvsa;
  YYSTYPE *yyvsp;



#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N))

  YYSIZE_T yystacksize = YYINITDEPTH;

  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;


  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY;		/* Cause a token to be read.  */

  /* Initialize stack pointers.
     Waste one element of value and location stack
     so that they stay on the same level as the state stack.
     The wasted elements are never initialized.  */

  yyssp = yyss;
  yyvsp = yyvs;

  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
	/* Give user a chance to reallocate the stack.  Use copies of
	   these so that the &'s don't force the real ones into
	   memory.  */
	YYSTYPE *yyvs1 = yyvs;
	yytype_int16 *yyss1 = yyss;


	/* Each stack pointer address is followed by the size of the
	   data in use in that stack, in bytes.  This used to be a
	   conditional around just the two extra args, but that might
	   be undefined if yyoverflow is a macro.  */
	yyoverflow (YY_("memory exhausted"),
		    &yyss1, yysize * sizeof (*yyssp),
		    &yyvs1, yysize * sizeof (*yyvsp),

		    &yystacksize);

	yyss = yyss1;
	yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyexhaustedlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
	goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
	yystacksize = YYMAXDEPTH;

      {
	yytype_int16 *yyss1 = yyss;
	union yyalloc *yyptr =
	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
	if (! yyptr)
	  goto yyexhaustedlab;
	YYSTACK_RELOCATE (yyss);
	YYSTACK_RELOCATE (yyvs);

#  undef YYSTACK_RELOCATE
	if (yyss1 != yyssa)
	  YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;


      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
		  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
	YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

  /* Do appropriate processing given the current state.  Read a
     look-ahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to look-ahead token.  */
  yyn = yypact[yystate];
  if (yyn == YYPACT_NINF)
    goto yydefault;

  /* Not known => get a look-ahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid look-ahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = YYLEX;
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yyn == 0 || yyn == YYTABLE_NINF)
	goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the look-ahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the shifted token unless it is eof.  */
  if (yychar != YYEOF)
    yychar = YYEMPTY;

  yystate = yyn;
  *++yyvsp = yylval;

  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     `$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];


  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 2:
#line 1758 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            if (!thd->bootstrap &&
              (!(thd->lex->select_lex.options & OPTION_FOUND_COMMENT)))
            {
              my_message(ER_EMPTY_QUERY, ER(ER_EMPTY_QUERY), MYF(0));
              MYSQL_YYABORT;
            }
            thd->lex->sql_command= SQLCOM_EMPTY_QUERY;
            YYLIP->found_semicolon= NULL;
          }
    break;

  case 3:
#line 1770 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex_input_stream *lip = YYLIP;

            if ((YYTHD->client_capabilities & CLIENT_MULTI_QUERIES) &&
                lip->multi_statements &&
                ! lip->eof())
            {
              /*
                We found a well formed query, and multi queries are allowed:
                - force the parser to stop after the ';'
                - mark the start of the next query for the next invocation
                  of the parser.
              */
              lip->next_state= MY_LEX_END;
              lip->found_semicolon= lip->get_ptr();
            }
            else
            {
              /* Single query, terminated. */
              lip->found_semicolon= NULL;
            }
          }
    break;

  case 5:
#line 1795 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            /* Single query, not terminated. */
            YYLIP->found_semicolon= NULL;
          }
    break;

  case 62:
#line 1869 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_DEALLOCATE_PREPARE;
            lex->prepared_stmt_name= (yyvsp[(3) - (3)].lex_str);
          }
    break;

  case 65:
#line 1884 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_PREPARE;
            lex->prepared_stmt_name= (yyvsp[(2) - (4)].lex_str);
          }
    break;

  case 66:
#line 1894 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->prepared_stmt_code= (yyvsp[(1) - (1)].lex_str);
            lex->prepared_stmt_code_is_varref= FALSE;
          }
    break;

  case 67:
#line 1901 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->prepared_stmt_code= (yyvsp[(2) - (2)].lex_str);
            lex->prepared_stmt_code_is_varref= TRUE;
          }
    break;

  case 68:
#line 1911 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_EXECUTE;
            lex->prepared_stmt_name= (yyvsp[(2) - (2)].lex_str);
          }
    break;

  case 69:
#line 1918 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 74:
#line 1933 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            LEX_STRING *lexstr= (LEX_STRING*)sql_memdup(&(yyvsp[(2) - (2)].lex_str), sizeof(LEX_STRING));
            if (!lexstr || lex->prepared_stmt_params.push_back(lexstr))
              MYSQL_YYABORT;
          }
    break;

  case 75:
#line 1945 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            if (Lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HELP");
              MYSQL_YYABORT;
            }
          }
    break;

  case 76:
#line 1953 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_HELP;
            lex->help_arg= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 77:
#line 1964 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex = Lex;
            lex->sql_command = SQLCOM_CHANGE_MASTER;
            /*
              Clear LEX_MASTER_INFO struct and allocate memory for
              repl_ignore_server_ids. repl_ignore_server_ids is freed
              in THD::cleanup_after_query.  So it is guaranteed to be
              uninitialized before here.
            */
            lex->mi.set_unspecified();
            my_init_dynamic_array(&Lex->mi.repl_ignore_server_ids,
                                  sizeof(::server_id), 16, 16);
          }
    break;

  case 78:
#line 1978 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 81:
#line 1988 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->mi.host = (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 82:
#line 1992 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->mi.bind_addr = (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 83:
#line 1996 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->mi.user = (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 84:
#line 2000 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->mi.password = (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 85:
#line 2004 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->mi.port = (yyvsp[(3) - (3)].ulong_num);
          }
    break;

  case 86:
#line 2008 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->mi.connect_retry = (yyvsp[(3) - (3)].ulong_num);
          }
    break;

  case 87:
#line 2012 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->mi.retry_count= (yyvsp[(3) - (3)].ulong_num);
            Lex->mi.retry_count_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
    break;

  case 88:
#line 2017 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            if ((yyvsp[(3) - (3)].ulong_num) > MASTER_DELAY_MAX)
            {
              my_error(ER_MASTER_DELAY_VALUE_OUT_OF_RANGE, MYF(0),
                       static_cast<uint>((yyvsp[(3) - (3)].ulong_num)), MASTER_DELAY_MAX);
            }
            else
              Lex->mi.sql_delay = (yyvsp[(3) - (3)].ulong_num);
          }
    break;

  case 89:
#line 2027 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->mi.ssl= (yyvsp[(3) - (3)].ulong_num) ? 
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
    break;

  case 90:
#line 2032 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_ca= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 91:
#line 2036 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_capath= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 92:
#line 2040 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_cert= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 93:
#line 2044 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_cipher= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 94:
#line 2048 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_key= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 95:
#line 2052 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_verify_server_cert= (yyvsp[(3) - (3)].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
    break;

  case 96:
#line 2057 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_crl= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 97:
#line 2061 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_crlpath= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 98:
#line 2066 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->mi.heartbeat_period= (float) (yyvsp[(3) - (3)].item_num)->val_real();
            if (Lex->mi.heartbeat_period > SLAVE_MAX_HEARTBEAT_PERIOD ||
                Lex->mi.heartbeat_period < 0.0)
            {
               const char format[]= "%d";
               char buf[4*sizeof(SLAVE_MAX_HEARTBEAT_PERIOD) + sizeof(format)];
               sprintf(buf, format, SLAVE_MAX_HEARTBEAT_PERIOD);
               my_error(ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE, MYF(0), buf);
               MYSQL_YYABORT;
            }
            if (Lex->mi.heartbeat_period > slave_net_timeout)
            {
              push_warning_printf(YYTHD, Sql_condition::WARN_LEVEL_WARN,
                                  ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX,
                                  ER(ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX));
            }
            if (Lex->mi.heartbeat_period < 0.001)
            {
              if (Lex->mi.heartbeat_period != 0.0)
              {
                push_warning_printf(YYTHD, Sql_condition::WARN_LEVEL_WARN,
                                    ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN,
                                    ER(ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN));
                Lex->mi.heartbeat_period= 0.0;
              }
              Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_DISABLE;
            }
            Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
    break;

  case 99:
#line 2097 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->mi.repl_ignore_server_ids_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
           }
    break;

  case 104:
#line 2112 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            insert_dynamic(&Lex->mi.repl_ignore_server_ids, (uchar*) &((yyvsp[(1) - (1)].ulong_num)));
          }
    break;

  case 105:
#line 2118 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->mi.log_file_name = (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 106:
#line 2122 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->mi.pos = (yyvsp[(3) - (3)].ulonglong_number);
            /* 
               If the user specified a value < BIN_LOG_HEADER_SIZE, adjust it
               instead of causing subsequent errors. 
               We need to do it in this file, because only there we know that 
               MASTER_LOG_POS has been explicitely specified. On the contrary
               in change_master() (sql_repl.cc) we cannot distinguish between 0
               (MASTER_LOG_POS explicitely specified as 0) and 0 (unspecified),
               whereas we want to distinguish (specified 0 means "read the binlog
               from 0" (4 in fact), unspecified means "don't change the position
               (keep the preceding value)").
            */
            Lex->mi.pos = max<ulonglong>(BIN_LOG_HEADER_SIZE, Lex->mi.pos);
          }
    break;

  case 107:
#line 2138 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->mi.relay_log_name = (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 108:
#line 2142 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->mi.relay_log_pos = (yyvsp[(3) - (3)].ulong_num);
            /* Adjust if < BIN_LOG_HEADER_SIZE (same comment as Lex->mi.pos) */
            Lex->mi.relay_log_pos = max<ulong>(BIN_LOG_HEADER_SIZE,
                                               Lex->mi.relay_log_pos);
          }
    break;

  case 109:
#line 2154 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_CREATE_TABLE;
            if (!lex->select_lex.add_table_to_list(thd, (yyvsp[(5) - (5)].table), NULL,
                                                   TL_OPTION_UPDATING,
                                                   TL_WRITE, MDL_EXCLUSIVE))
              MYSQL_YYABORT;
            /*
              For CREATE TABLE, an non-existing table is not an error.
              Instruct open_tables() to just take an MDL lock if the
              table does not exist.
            */
            lex->query_tables->open_strategy= TABLE_LIST::OPEN_IF_EXISTS;
            lex->alter_info.reset();
            lex->col_list.empty();
            lex->change=NullS;
            memset(&lex->create_info, 0, sizeof(lex->create_info));
            lex->create_info.options=(yyvsp[(2) - (5)].num) | (yyvsp[(4) - (5)].num);
            lex->create_info.default_table_charset= NULL;
            lex->name.str= 0;
            lex->name.length= 0;
            lex->create_last_non_select_table= lex->last_table();
          }
    break;

  case 110:
#line 2179 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->current_select= &lex->select_lex; 
            if ((lex->create_info.used_fields & HA_CREATE_USED_ENGINE) &&
                !lex->create_info.db_type)
            {
              lex->create_info.db_type=
                lex->create_info.options & HA_LEX_CREATE_TMP_TABLE ?
                ha_default_temp_handlerton(thd) : ha_default_handlerton(thd);
              push_warning_printf(YYTHD, Sql_condition::WARN_LEVEL_WARN,
                                  ER_WARN_USING_OTHER_HANDLER,
                                  ER(ER_WARN_USING_OTHER_HANDLER),
                                  ha_resolve_storage_engine_name(lex->create_info.db_type),
                                  (yyvsp[(5) - (7)].table)->table.str);
            }
            create_table_set_open_action_and_adjust_tables(lex);
          }
    break;

  case 111:
#line 2198 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            if (add_create_index_prepare(Lex, (yyvsp[(7) - (7)].table)))
              MYSQL_YYABORT;
          }
    break;

  case 112:
#line 2203 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            if (add_create_index(Lex, (yyvsp[(2) - (12)].key_type), (yyvsp[(4) - (12)].lex_str)))
              MYSQL_YYABORT;
          }
    break;

  case 113:
#line 2209 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            if (add_create_index_prepare(Lex, (yyvsp[(7) - (7)].table)))
              MYSQL_YYABORT;
          }
    break;

  case 114:
#line 2214 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            if (add_create_index(Lex, (yyvsp[(2) - (12)].key_type), (yyvsp[(4) - (12)].lex_str)))
              MYSQL_YYABORT;
          }
    break;

  case 115:
#line 2220 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            if (add_create_index_prepare(Lex, (yyvsp[(7) - (7)].table)))
              MYSQL_YYABORT;
          }
    break;

  case 116:
#line 2225 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            if (add_create_index(Lex, (yyvsp[(2) - (12)].key_type), (yyvsp[(4) - (12)].lex_str)))
              MYSQL_YYABORT;
          }
    break;

  case 117:
#line 2230 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->create_info.default_table_charset= NULL;
            Lex->create_info.used_fields= 0;
          }
    break;

  case 118:
#line 2235 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CREATE_DB;
            lex->name= (yyvsp[(4) - (6)].lex_str);
            lex->create_info.options=(yyvsp[(3) - (6)].num);
          }
    break;

  case 119:
#line 2242 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->create_view_mode= VIEW_CREATE_NEW;
            Lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED;
            Lex->create_view_suid= TRUE;
          }
    break;

  case 120:
#line 2248 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 121:
#line 2250 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_CREATE_USER;
          }
    break;

  case 122:
#line 2254 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->alter_tablespace_info->ts_cmd_type= CREATE_LOGFILE_GROUP;
          }
    break;

  case 123:
#line 2258 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->alter_tablespace_info->ts_cmd_type= CREATE_TABLESPACE;
          }
    break;

  case 124:
#line 2262 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_CREATE_SERVER;
          }
    break;

  case 125:
#line 2273 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->server_options.server_name= (yyvsp[(2) - (10)].lex_str).str;
            Lex->server_options.server_name_length= (yyvsp[(2) - (10)].lex_str).length;
            Lex->server_options.scheme= (yyvsp[(6) - (10)].lex_str).str;
          }
    break;

  case 128:
#line 2287 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->server_options.username= (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 129:
#line 2291 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->server_options.host= (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 130:
#line 2295 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->server_options.db= (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 131:
#line 2299 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->server_options.owner= (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 132:
#line 2303 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->server_options.password= (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 133:
#line 2307 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->server_options.socket= (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 134:
#line 2311 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->server_options.port= (yyvsp[(2) - (2)].ulong_num);
          }
    break;

  case 135:
#line 2318 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex=Lex;

            lex->stmt_definition_begin= (yyvsp[(1) - (4)].simple_string);
            lex->create_info.options= (yyvsp[(3) - (4)].num);
            if (!(lex->event_parse_data= Event_parse_data::new_instance(thd)))
              MYSQL_YYABORT;
            lex->event_parse_data->identifier= (yyvsp[(4) - (4)].spname);
            lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;

            lex->sql_command= SQLCOM_CREATE_EVENT;
            /* We need that for disallowing subqueries */
          }
    break;

  case 136:
#line 2338 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_CREATE_EVENT;
          }
    break;

  case 137:
#line 2349 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->item_expression= (yyvsp[(2) - (3)].item);
            Lex->event_parse_data->interval= (yyvsp[(3) - (3)].interval);
          }
    break;

  case 139:
#line 2356 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->item_execute_at= (yyvsp[(2) - (2)].item);
          }
    break;

  case 140:
#line 2362 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 141:
#line 2364 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->status= Event_parse_data::ENABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
    break;

  case 142:
#line 2370 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->status= Event_parse_data::SLAVESIDE_DISABLED;
            Lex->event_parse_data->status_changed= true; 
            (yyval.num)= 1;
          }
    break;

  case 143:
#line 2376 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->status= Event_parse_data::DISABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
    break;

  case 144:
#line 2385 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Item *item= new (YYTHD->mem_root) Item_func_now_local(0);
            if (item == NULL)
              MYSQL_YYABORT;
            Lex->event_parse_data->item_starts= item;
          }
    break;

  case 145:
#line 2392 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->item_starts= (yyvsp[(2) - (2)].item);
          }
    break;

  case 147:
#line 2400 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->item_ends= (yyvsp[(2) - (2)].item);
          }
    break;

  case 148:
#line 2406 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 150:
#line 2412 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_PRESERVE;
            (yyval.num)= 1;
          }
    break;

  case 151:
#line 2418 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;
            (yyval.num)= 1;
          }
    break;

  case 152:
#line 2426 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 153:
#line 2428 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->comment= Lex->event_parse_data->comment= (yyvsp[(2) - (2)].lex_str);
            (yyval.num)= 1;
          }
    break;

  case 154:
#line 2435 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;

            /*
              This stops the following :
              - CREATE EVENT ... DO CREATE EVENT ...;
              - ALTER  EVENT ... DO CREATE EVENT ...;
              - CREATE EVENT ... DO ALTER EVENT DO ....;
              - CREATE PROCEDURE ... BEGIN CREATE EVENT ... END|
              This allows:
              - CREATE EVENT ... DO DROP EVENT yyy;
              - CREATE EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO DROP EVENT yyy;
              - CREATE PROCEDURE ... BEGIN ALTER EVENT ... END|
                (the nested ALTER EVENT can have anything but DO clause)
              - CREATE PROCEDURE ... BEGIN DROP EVENT ... END|
            */
            if (lex->sphead)
            {
              my_error(ER_EVENT_RECURSION_FORBIDDEN, MYF(0));
              MYSQL_YYABORT;
            }
              
            if (!(lex->sphead= new sp_head()))
              MYSQL_YYABORT;

            lex->sphead->reset_thd_mem_root(thd);
            lex->sphead->init(lex);
            lex->sphead->init_sp_name(thd, lex->event_parse_data->identifier);

            lex->sphead->m_type= TYPE_ENUM_PROCEDURE;

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
            lex->sphead->m_chistics= &lex->sp_chistics;

            lex->sphead->set_body_start(thd, lip->get_cpp_ptr());
          }
    break;

  case 155:
#line 2478 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            /* return back to the original memory root ASAP */
            lex->sphead->set_stmt_end(thd);
            lex->sphead->restore_thd_mem_root(thd);

            lex->sp_chistics.suid= SP_IS_SUID;  //always the definer!

            lex->event_parse_data->body_changed= TRUE;
          }
    break;

  case 169:
#line 2510 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
           LEX *lex=Lex;
           lex->users_list.empty();
           lex->columns.empty();
           lex->grant= lex->grant_tot_col= 0;
           lex->all_privileges= 0;
           lex->select_lex.db= 0;
           lex->ssl_type= SSL_TYPE_NOT_SPECIFIED;
           lex->ssl_cipher= lex->x509_subject= lex->x509_issuer= 0;
           memset(&(lex->mqh), 0, sizeof(lex->mqh));
         }
    break;

  case 170:
#line 2525 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            if (!(yyvsp[(1) - (3)].lex_str).str || check_and_convert_db_name(&(yyvsp[(1) - (3)].lex_str), FALSE))
            {
              my_error(ER_WRONG_DB_NAME, MYF(0), (yyvsp[(1) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }
            if (check_routine_name(&(yyvsp[(3) - (3)].lex_str)))
            {
              MYSQL_YYABORT;
            }
            (yyval.spname)= new sp_name((yyvsp[(1) - (3)].lex_str), (yyvsp[(3) - (3)].lex_str), true);
            if ((yyval.spname) == NULL)
              MYSQL_YYABORT;
            (yyval.spname)->init_qname(YYTHD);
          }
    break;

  case 171:
#line 2541 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            LEX_STRING db;
            if (check_routine_name(&(yyvsp[(1) - (1)].lex_str)))
            {
              MYSQL_YYABORT;
            }
            if (lex->copy_db_to(&db.str, &db.length))
              MYSQL_YYABORT;
            (yyval.spname)= new sp_name(db, (yyvsp[(1) - (1)].lex_str), false);
            if ((yyval.spname) == NULL)
              MYSQL_YYABORT;
            (yyval.spname)->init_qname(thd);
          }
    break;

  case 172:
#line 2559 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 173:
#line 2560 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 174:
#line 2564 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 175:
#line 2565 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 176:
#line 2571 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->sp_chistics.comment= (yyvsp[(2) - (2)].lex_str); }
    break;

  case 177:
#line 2573 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { /* Just parse it, we only have one language for now. */ }
    break;

  case 178:
#line 2575 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->sp_chistics.daccess= SP_NO_SQL; }
    break;

  case 179:
#line 2577 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->sp_chistics.daccess= SP_CONTAINS_SQL; }
    break;

  case 180:
#line 2579 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->sp_chistics.daccess= SP_READS_SQL_DATA; }
    break;

  case 181:
#line 2581 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->sp_chistics.daccess= SP_MODIFIES_SQL_DATA; }
    break;

  case 182:
#line 2583 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 183:
#line 2588 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { }
    break;

  case 184:
#line 2589 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->sp_chistics.detistic= TRUE; }
    break;

  case 185:
#line 2590 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->sp_chistics.detistic= FALSE; }
    break;

  case 186:
#line 2595 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->sp_chistics.suid= SP_IS_SUID;
          }
    break;

  case 187:
#line 2599 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->sp_chistics.suid= SP_IS_NOT_SUID;
          }
    break;

  case 188:
#line 2606 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex = Lex;

            lex->sql_command= SQLCOM_CALL;
            lex->spname= (yyvsp[(2) - (2)].spname);
            lex->value_list.empty();
            sp_add_used_routine(lex, YYTHD, (yyvsp[(2) - (2)].spname), TYPE_ENUM_PROCEDURE);
          }
    break;

  case 189:
#line 2614 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 194:
#line 2630 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
           Lex->value_list.push_back((yyvsp[(3) - (3)].item));
          }
    break;

  case 195:
#line 2634 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->value_list.push_back((yyvsp[(1) - (1)].item));
          }
    break;

  case 200:
#line 2652 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            lex->length= 0;
            lex->dec= 0;
            lex->type= 0;

            lex->default_value= 0;
            lex->on_update_value= 0;

            lex->comment= null_lex_str;
            lex->charset= NULL;

            lex->interval_list.empty();
            lex->uint_geom_type= 0;
          }
    break;

  case 201:
#line 2672 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_pcontext *spc= lex->spcont;

            if (spc->find_variable((yyvsp[(1) - (3)].lex_str), TRUE))
            {
              my_error(ER_SP_DUP_PARAM, MYF(0), (yyvsp[(1) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }

            sp_variable *spvar= spc->add_variable(YYTHD,
                                                  (yyvsp[(1) - (3)].lex_str),
                                                  (enum enum_field_types) (yyvsp[(3) - (3)].num),
                                                  sp_variable::MODE_IN);

            if (lex->sphead->fill_field_definition(YYTHD, lex,
                                                   (enum enum_field_types) (yyvsp[(3) - (3)].num),
                                                   &spvar->field_def))
            {
              MYSQL_YYABORT;
            }
            spvar->field_def.field_name= spvar->name.str;
            spvar->field_def.pack_flag |= FIELDFLAG_MAYBE_NULL;
          }
    break;

  case 206:
#line 2711 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_pcontext *spc= lex->spcont;

            if (spc->find_variable((yyvsp[(3) - (4)].lex_str), TRUE))
            {
              my_error(ER_SP_DUP_PARAM, MYF(0), (yyvsp[(3) - (4)].lex_str).str);
              MYSQL_YYABORT;
            }
            sp_variable *spvar= spc->add_variable(YYTHD,
                                                  (yyvsp[(3) - (4)].lex_str),
                                                  (enum enum_field_types) (yyvsp[(4) - (4)].num),
                                                  (sp_variable::enum_mode) (yyvsp[(1) - (4)].num));

            if (lex->sphead->fill_field_definition(YYTHD, lex,
                                                   (enum enum_field_types) (yyvsp[(4) - (4)].num),
                                                   &spvar->field_def))
            {
              MYSQL_YYABORT;
            }
            spvar->field_def.field_name= spvar->name.str;
            spvar->field_def.pack_flag |= FIELDFLAG_MAYBE_NULL;
          }
    break;

  case 207:
#line 2737 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)= sp_variable::MODE_IN; }
    break;

  case 208:
#line 2738 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)= sp_variable::MODE_IN; }
    break;

  case 209:
#line 2739 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)= sp_variable::MODE_OUT; }
    break;

  case 210:
#line 2740 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)= sp_variable::MODE_INOUT; }
    break;

  case 211:
#line 2744 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 213:
#line 2749 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 215:
#line 2755 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
          }
    break;

  case 216:
#line 2759 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            /* We check for declarations out of (standard) order this way
              because letting the grammar rules reflect it caused tricky
               shift/reduce conflicts with the wrong result. (And we get
               better error handling this way.) */
            if (((yyvsp[(2) - (3)].spblock).vars || (yyvsp[(2) - (3)].spblock).conds) && ((yyvsp[(1) - (3)].spblock).curs || (yyvsp[(1) - (3)].spblock).hndlrs))
            { /* Variable or condition following cursor or handler */
              my_message(ER_SP_VARCOND_AFTER_CURSHNDLR,
                         ER(ER_SP_VARCOND_AFTER_CURSHNDLR), MYF(0));
              MYSQL_YYABORT;
            }
            if ((yyvsp[(2) - (3)].spblock).curs && (yyvsp[(1) - (3)].spblock).hndlrs)
            { /* Cursor following handler */
              my_message(ER_SP_CURSOR_AFTER_HANDLER,
                         ER(ER_SP_CURSOR_AFTER_HANDLER), MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.spblock).vars= (yyvsp[(1) - (3)].spblock).vars + (yyvsp[(2) - (3)].spblock).vars;
            (yyval.spblock).conds= (yyvsp[(1) - (3)].spblock).conds + (yyvsp[(2) - (3)].spblock).conds;
            (yyval.spblock).hndlrs= (yyvsp[(1) - (3)].spblock).hndlrs + (yyvsp[(2) - (3)].spblock).hndlrs;
            (yyval.spblock).curs= (yyvsp[(1) - (3)].spblock).curs + (yyvsp[(2) - (3)].spblock).curs;
          }
    break;

  case 217:
#line 2785 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            lex->sphead->reset_lex(YYTHD);
            lex->spcont->declare_var_boundary((yyvsp[(2) - (2)].num));
          }
    break;

  case 218:
#line 2793 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->spcont;
            uint num_vars= pctx->context_var_count();
            enum enum_field_types var_type= (enum enum_field_types) (yyvsp[(4) - (5)].num);
            Item *dflt_value_item= (yyvsp[(5) - (5)].item);
            
            if (!dflt_value_item)
            {
              dflt_value_item= new (thd->mem_root) Item_null();
              if (dflt_value_item == NULL)
                MYSQL_YYABORT;
              /* QQ Set to the var_type with null_value? */
            }
            
            for (uint i = num_vars-(yyvsp[(2) - (5)].num) ; i < num_vars ; i++)
            {
              uint var_idx= pctx->var_context2runtime(i);
              sp_variable *spvar= pctx->find_variable(var_idx);
            
              if (!spvar)
                MYSQL_YYABORT;
            
              spvar->type= var_type;
              spvar->default_value= dflt_value_item;
            
              if (lex->sphead->fill_field_definition(YYTHD, lex, var_type,
                                                     &spvar->field_def))
              {
                MYSQL_YYABORT;
              }
            
              spvar->field_def.field_name= spvar->name.str;
              spvar->field_def.pack_flag |= FIELDFLAG_MAYBE_NULL;
            
              /* The last instruction is responsible for freeing LEX. */

              sp_instr_set *is= new sp_instr_set(lex->sphead->instructions(),
                                                 pctx,
                                                 var_idx,
                                                 dflt_value_item,
                                                 var_type,
                                                 lex,
                                                 (i == num_vars - 1));
              if (is == NULL ||
                  lex->sphead->add_instr(is))
                MYSQL_YYABORT;
            }

            pctx->declare_var_boundary(0);
            if (lex->sphead->restore_lex(YYTHD))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyvsp[(2) - (5)].num);
            (yyval.spblock).conds= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
          }
    break;

  case 219:
#line 2850 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_pcontext *spc= lex->spcont;

            if (spc->find_condition((yyvsp[(2) - (5)].lex_str), TRUE))
            {
              my_error(ER_SP_DUP_COND, MYF(0), (yyvsp[(2) - (5)].lex_str).str);
              MYSQL_YYABORT;
            }
            if(spc->add_condition(YYTHD, (yyvsp[(2) - (5)].lex_str), (yyvsp[(5) - (5)].spcondvalue)))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
            (yyval.spblock).conds= 1;
          }
    break;

  case 220:
#line 2865 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            sp_handler *h= lex->spcont->add_handler(thd,
                                                    (sp_handler::enum_type) (yyvsp[(2) - (4)].num));

            lex->spcont= lex->spcont->push_context(thd,
                                                   sp_pcontext::HANDLER_SCOPE);

            sp_pcontext *ctx= lex->spcont;
            sp_instr_hpush_jump *i=
              new sp_instr_hpush_jump(sp->instructions(), ctx, h);

            if (i == NULL || sp->add_instr(i))
              MYSQL_YYABORT;

            /* For continue handlers, mark end of handler scope. */
            if ((yyvsp[(2) - (4)].num) == sp_handler::CONTINUE &&
                sp->push_backpatch(i, ctx->last_label()))
              MYSQL_YYABORT;

            if (sp->push_backpatch(i, ctx->push_label(thd, EMPTY_STR, 0)))
              MYSQL_YYABORT;
          }
    break;

  case 221:
#line 2892 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *ctx= lex->spcont;
            sp_label *hlab= lex->spcont->pop_label(); /* After this hdlr */
            sp_instr_hreturn *i;

            if ((yyvsp[(2) - (7)].num) == sp_handler::CONTINUE)
            {
              i= new sp_instr_hreturn(sp->instructions(), ctx);
              if (i == NULL ||
                  sp->add_instr(i))
                MYSQL_YYABORT;
            }
            else
            {  /* EXIT or UNDO handler, just jump to the end of the block */
              i= new sp_instr_hreturn(sp->instructions(), ctx);
              if (i == NULL ||
                  sp->add_instr(i) ||
                  sp->push_backpatch(i, lex->spcont->last_label())) /* Block end */
                MYSQL_YYABORT;
            }
            lex->sphead->backpatch(hlab);

            lex->spcont= ctx->pop_context();

            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).curs= 0;
            (yyval.spblock).hndlrs= 1;
          }
    break;

  case 222:
#line 2922 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *ctx= lex->spcont;
            uint offp;
            sp_instr_cpush *i;

            if (ctx->find_cursor((yyvsp[(2) - (5)].lex_str), &offp, TRUE))
            {
              my_error(ER_SP_DUP_CURS, MYF(0), (yyvsp[(2) - (5)].lex_str).str);
              delete (yyvsp[(5) - (5)].lex);
              MYSQL_YYABORT;
            }
            i= new sp_instr_cpush(sp->instructions(), ctx, (yyvsp[(5) - (5)].lex),
                                  ctx->current_cursor_count());
            if (i == NULL ||
                sp->add_instr(i) ||
                ctx->add_cursor((yyvsp[(2) - (5)].lex_str)))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= 0;
            (yyval.spblock).curs= 1;
          }
    break;

  case 223:
#line 2947 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->sphead->reset_lex(YYTHD);
          }
    break;

  case 224:
#line 2951 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            DBUG_ASSERT(lex->sql_command == SQLCOM_SELECT);

            if (lex->result)
            {
              my_message(ER_SP_BAD_CURSOR_SELECT, ER(ER_SP_BAD_CURSOR_SELECT),
                         MYF(0));
              MYSQL_YYABORT;
            }
            lex->sp_lex_in_use= TRUE;
            (yyval.lex)= lex;
            if (lex->sphead->restore_lex(YYTHD))
              MYSQL_YYABORT;
          }
    break;

  case 225:
#line 2970 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)= sp_handler::EXIT; }
    break;

  case 226:
#line 2971 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)= sp_handler::CONTINUE; }
    break;

  case 227:
#line 2977 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 228:
#line 2979 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)+= 1; }
    break;

  case 229:
#line 2984 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *ctx= lex->spcont->parent_context();

            if (ctx->check_duplicate_handler((yyvsp[(1) - (1)].spcondvalue)))
            {
              my_message(ER_SP_DUP_HANDLER, ER(ER_SP_DUP_HANDLER), MYF(0));
              MYSQL_YYABORT;
            }
            else
            {
              sp_instr_hpush_jump *i=
                (sp_instr_hpush_jump *)sp->last_instruction();

              i->add_condition((yyvsp[(1) - (1)].spcondvalue));
            }
          }
    break;

  case 230:
#line 3006 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { /* mysql errno */
            if ((yyvsp[(1) - (1)].ulong_num) == 0)
            {
              my_error(ER_WRONG_VALUE, MYF(0), "CONDITION", "0");
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= new (YYTHD->mem_root) sp_condition_value((yyvsp[(1) - (1)].ulong_num));
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 232:
#line 3021 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { /* SQLSTATE */

            /*
              An error is triggered:
                - if the specified string is not a valid SQLSTATE,
                - or if it represents the completion condition -- it is not
                  allowed to SIGNAL, or declare a handler for the completion
                  condition.
            */
            if (!is_sqlstate_valid(&(yyvsp[(3) - (3)].lex_str)) || is_sqlstate_completion((yyvsp[(3) - (3)].lex_str).str))
            {
              my_error(ER_SP_BAD_SQLSTATE, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= new (YYTHD->mem_root) sp_condition_value((yyvsp[(3) - (3)].lex_str).str);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 233:
#line 3042 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 234:
#line 3043 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 235:
#line 3048 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.spcondvalue)= (yyvsp[(1) - (1)].spcondvalue);
          }
    break;

  case 236:
#line 3052 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.spcondvalue)= Lex->spcont->find_condition((yyvsp[(1) - (1)].lex_str), false);
            if ((yyval.spcondvalue) == NULL)
            {
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 237:
#line 3061 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.spcondvalue)= new (YYTHD->mem_root) sp_condition_value(sp_condition_value::WARNING);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 238:
#line 3067 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.spcondvalue)= new (YYTHD->mem_root) sp_condition_value(sp_condition_value::NOT_FOUND);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 239:
#line 3073 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.spcondvalue)= new (YYTHD->mem_root) sp_condition_value(sp_condition_value::EXCEPTION);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 240:
#line 3082 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            Yacc_state *state= & thd->m_parser_state->m_yacc;

            lex->sql_command= SQLCOM_SIGNAL;
            lex->m_sql_cmd=
              new (thd->mem_root) Sql_cmd_signal((yyvsp[(2) - (3)].spcondvalue), state->m_set_signal_info);
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 241:
#line 3097 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_condition_value *cond;
            if (lex->spcont == NULL)
            {
              /* SIGNAL foo cannot be used outside of stored programs */
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
            cond= lex->spcont->find_condition((yyvsp[(1) - (1)].lex_str), false);
            if (cond == NULL)
            {
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
            if (cond->type != sp_condition_value::SQLSTATE)
            {
              my_error(ER_SIGNAL_BAD_CONDITION_TYPE, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= cond;
          }
    break;

  case 242:
#line 3120 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.spcondvalue)= (yyvsp[(1) - (1)].spcondvalue); }
    break;

  case 243:
#line 3125 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.spcondvalue)= NULL; }
    break;

  case 244:
#line 3127 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.spcondvalue)= (yyvsp[(1) - (1)].spcondvalue); }
    break;

  case 245:
#line 3132 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            YYTHD->m_parser_state->m_yacc.m_set_signal_info.clear();
          }
    break;

  case 247:
#line 3140 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Set_signal_information *info;
            info= & YYTHD->m_parser_state->m_yacc.m_set_signal_info;
            int index= (int) (yyvsp[(1) - (3)].diag_condition_item_name);
            info->clear();
            info->m_item[index]= (yyvsp[(3) - (3)].item);
          }
    break;

  case 248:
#line 3149 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Set_signal_information *info;
            info= & YYTHD->m_parser_state->m_yacc.m_set_signal_info;
            int index= (int) (yyvsp[(3) - (5)].diag_condition_item_name);
            if (info->m_item[index] != NULL)
            {
              my_error(ER_DUP_SIGNAL_SET, MYF(0),
                       Diag_condition_item_names[index].str);
              MYSQL_YYABORT;
            }
            info->m_item[index]= (yyvsp[(5) - (5)].item);
          }
    break;

  case 249:
#line 3168 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].item); }
    break;

  case 250:
#line 3170 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (1)].item)->type() == Item::FUNC_ITEM)
            {
              Item_func *item= (Item_func*) (yyvsp[(1) - (1)].item);
              if (item->functype() == Item_func::SUSERVAR_FUNC)
              {
                /*
                  Don't allow the following syntax:
                    SIGNAL/RESIGNAL ...
                    SET <signal condition item name> = @foo := expr
                */
                my_parse_error(ER(ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
              }
            }
            (yyval.item)= (yyvsp[(1) - (1)].item);
          }
    break;

  case 251:
#line 3188 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].item); }
    break;

  case 252:
#line 3194 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.diag_condition_item_name)= DIAG_CLASS_ORIGIN; }
    break;

  case 253:
#line 3196 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.diag_condition_item_name)= DIAG_SUBCLASS_ORIGIN; }
    break;

  case 254:
#line 3198 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.diag_condition_item_name)= DIAG_CONSTRAINT_CATALOG; }
    break;

  case 255:
#line 3200 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.diag_condition_item_name)= DIAG_CONSTRAINT_SCHEMA; }
    break;

  case 256:
#line 3202 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.diag_condition_item_name)= DIAG_CONSTRAINT_NAME; }
    break;

  case 257:
#line 3204 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.diag_condition_item_name)= DIAG_CATALOG_NAME; }
    break;

  case 258:
#line 3206 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.diag_condition_item_name)= DIAG_SCHEMA_NAME; }
    break;

  case 259:
#line 3208 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.diag_condition_item_name)= DIAG_TABLE_NAME; }
    break;

  case 260:
#line 3210 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.diag_condition_item_name)= DIAG_COLUMN_NAME; }
    break;

  case 261:
#line 3212 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.diag_condition_item_name)= DIAG_CURSOR_NAME; }
    break;

  case 262:
#line 3214 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.diag_condition_item_name)= DIAG_MESSAGE_TEXT; }
    break;

  case 263:
#line 3216 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.diag_condition_item_name)= DIAG_MYSQL_ERRNO; }
    break;

  case 264:
#line 3221 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            Yacc_state *state= & thd->m_parser_state->m_yacc;

            lex->sql_command= SQLCOM_RESIGNAL;
            lex->m_sql_cmd=
              new (thd->mem_root) Sql_cmd_resignal((yyvsp[(2) - (3)].spcondvalue),
                                                   state->m_set_signal_info);
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 265:
#line 3237 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Diagnostics_information *info= (yyvsp[(4) - (4)].diag_info);

            info->set_which_da((yyvsp[(2) - (4)].diag_area));

            Lex->sql_command= SQLCOM_GET_DIAGNOSTICS;
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_get_diagnostics(info);

            if (Lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 266:
#line 3252 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
    break;

  case 267:
#line 3254 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
    break;

  case 268:
#line 3259 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.diag_info)= new (YYTHD->mem_root) Statement_information((yyvsp[(1) - (1)].stmt_info_list));
            if ((yyval.diag_info) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 269:
#line 3265 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.diag_info)= new (YYTHD->mem_root) Condition_information((yyvsp[(2) - (3)].item), (yyvsp[(3) - (3)].cond_info_list));
            if ((yyval.diag_info) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 270:
#line 3274 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.stmt_info_list)= new (YYTHD->mem_root) List<Statement_information_item>;
            if ((yyval.stmt_info_list) == NULL || (yyval.stmt_info_list)->push_back((yyvsp[(1) - (1)].stmt_info_item)))
              MYSQL_YYABORT;
          }
    break;

  case 271:
#line 3280 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].stmt_info_list)->push_back((yyvsp[(3) - (3)].stmt_info_item)))
              MYSQL_YYABORT;
            (yyval.stmt_info_list)= (yyvsp[(1) - (3)].stmt_info_list);
          }
    break;

  case 272:
#line 3289 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.stmt_info_item)= new (YYTHD->mem_root) Statement_information_item((yyvsp[(3) - (3)].stmt_info_item_name), (yyvsp[(1) - (3)].item));
            if ((yyval.stmt_info_item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 273:
#line 3297 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex_input_stream *lip= &YYTHD->m_parser_state->m_lip;
            (yyval.item)= create_item_for_sp_var(YYTHD, (yyvsp[(1) - (1)].lex_str), NULL,
                                       lip->get_tok_start(), lip->get_ptr());
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 274:
#line 3305 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_get_user_var((yyvsp[(2) - (2)].lex_str));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 275:
#line 3314 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.stmt_info_item_name)= Statement_information_item::NUMBER; }
    break;

  case 276:
#line 3316 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.stmt_info_item_name)= Statement_information_item::ROW_COUNT; }
    break;

  case 277:
#line 3325 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].item); }
    break;

  case 278:
#line 3330 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.cond_info_list)= new (YYTHD->mem_root) List<Condition_information_item>;
            if ((yyval.cond_info_list) == NULL || (yyval.cond_info_list)->push_back((yyvsp[(1) - (1)].cond_info_item)))
              MYSQL_YYABORT;
          }
    break;

  case 279:
#line 3336 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].cond_info_list)->push_back((yyvsp[(3) - (3)].cond_info_item)))
              MYSQL_YYABORT;
            (yyval.cond_info_list)= (yyvsp[(1) - (3)].cond_info_list);
          }
    break;

  case 280:
#line 3345 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.cond_info_item)= new (YYTHD->mem_root) Condition_information_item((yyvsp[(3) - (3)].cond_info_item_name), (yyvsp[(1) - (3)].item));
            if ((yyval.cond_info_item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 281:
#line 3353 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::CLASS_ORIGIN; }
    break;

  case 282:
#line 3355 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::SUBCLASS_ORIGIN; }
    break;

  case 283:
#line 3357 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_CATALOG; }
    break;

  case 284:
#line 3359 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_SCHEMA; }
    break;

  case 285:
#line 3361 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_NAME; }
    break;

  case 286:
#line 3363 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::CATALOG_NAME; }
    break;

  case 287:
#line 3365 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::SCHEMA_NAME; }
    break;

  case 288:
#line 3367 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::TABLE_NAME; }
    break;

  case 289:
#line 3369 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::COLUMN_NAME; }
    break;

  case 290:
#line 3371 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::CURSOR_NAME; }
    break;

  case 291:
#line 3373 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::MESSAGE_TEXT; }
    break;

  case 292:
#line 3375 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::MYSQL_ERRNO; }
    break;

  case 293:
#line 3377 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::RETURNED_SQLSTATE; }
    break;

  case 294:
#line 3382 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            /* NOTE: field definition is filled in sp_decl section. */

            LEX *lex= Lex;
            sp_pcontext *spc= lex->spcont;

            if (spc->find_variable((yyvsp[(1) - (1)].lex_str), TRUE))
            {
              my_error(ER_SP_DUP_VAR, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
            spc->add_variable(YYTHD,
                              (yyvsp[(1) - (1)].lex_str),
                              MYSQL_TYPE_DECIMAL,
                              sp_variable::MODE_IN);
            (yyval.num)= 1;
          }
    break;

  case 295:
#line 3400 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            /* NOTE: field definition is filled in sp_decl section. */

            LEX *lex= Lex;
            sp_pcontext *spc= lex->spcont;

            if (spc->find_variable((yyvsp[(3) - (3)].lex_str), TRUE))
            {
              my_error(ER_SP_DUP_VAR, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }
            spc->add_variable(YYTHD,
                              (yyvsp[(3) - (3)].lex_str),
                              MYSQL_TYPE_DECIMAL,
                              sp_variable::MODE_IN);
            (yyval.num)= (yyvsp[(1) - (3)].num) + 1;
          }
    break;

  case 296:
#line 3420 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.item) = NULL; }
    break;

  case 297:
#line 3421 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.item) = (yyvsp[(2) - (2)].item); }
    break;

  case 311:
#line 3442 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->sphead->new_cont_backpatch(NULL); }
    break;

  case 312:
#line 3444 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->sphead->do_cont_backpatch(); }
    break;

  case 313:
#line 3448 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;

            lex->sphead->reset_lex(thd);
            lex->sphead->m_tmp_query= lip->get_tok_start();
          }
    break;

  case 314:
#line 3457 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;
            sp_head *sp= lex->sphead;

            sp->m_flags|= sp_get_flags_for_command(lex);
            if (lex->sql_command == SQLCOM_CHANGE_DB)
            { /* "USE db" doesn't work in a procedure */
              my_error(ER_SP_BADSTATEMENT, MYF(0), "USE");
              MYSQL_YYABORT;
            }
            /*
              Don't add an instruction for SET statements, since all
              instructions for them were already added during processing
              of "set" rule.
            */
            DBUG_ASSERT(lex->sql_command != SQLCOM_SET_OPTION ||
                        lex->var_list.is_empty());
            if (lex->sql_command != SQLCOM_SET_OPTION)
            {
              sp_instr_stmt *i=new sp_instr_stmt(sp->instructions(),
                                                 lex->spcont, lex);
              if (i == NULL)
                MYSQL_YYABORT;

              /*
                Extract the query statement from the tokenizer.  The
                end is either lex->ptr, if there was no lookahead,
                lex->tok_end otherwise.
              */
              if (yychar == YYEMPTY)
                i->m_query.length= lip->get_ptr() - sp->m_tmp_query;
              else
                i->m_query.length= lip->get_tok_end() - sp->m_tmp_query;
              if (!(i->m_query.str= strmake_root(thd->mem_root,
                                                 sp->m_tmp_query,
                                                 i->m_query.length)) ||
                    sp->add_instr(i))
                MYSQL_YYABORT;
            }
            if (sp->restore_lex(thd))
              MYSQL_YYABORT;
          }
    break;

  case 315:
#line 3505 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->sphead->reset_lex(YYTHD); }
    break;

  case 316:
#line 3507 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            if (sp->m_type != TYPE_ENUM_FUNCTION)
            {
              my_message(ER_SP_BADRETURN, ER(ER_SP_BADRETURN), MYF(0));
              MYSQL_YYABORT;
            }
            else
            {
              sp_instr_freturn *i;

              i= new sp_instr_freturn(sp->instructions(), lex->spcont, (yyvsp[(3) - (3)].item),
                                      sp->m_return_field_def.sql_type, lex);
              if (i == NULL ||
                  sp->add_instr(i))
                MYSQL_YYABORT;
              sp->m_flags|= sp_head::HAS_RETURN;
            }
            if (sp->restore_lex(YYTHD))
              MYSQL_YYABORT;
          }
    break;

  case 317:
#line 3533 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { /* Unlabeled controls get a secret label. */
            LEX *lex= Lex;

            lex->spcont->push_label(YYTHD,
                                    EMPTY_STR,
                                    lex->sphead->instructions());
          }
    break;

  case 318:
#line 3541 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            lex->sphead->backpatch(lex->spcont->pop_label());
          }
    break;

  case 319:
#line 3550 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp = lex->sphead;
            sp_pcontext *ctx= lex->spcont;
            sp_label *lab= ctx->find_label((yyvsp[(2) - (2)].lex_str));

            if (! lab)
            {
              my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "LEAVE", (yyvsp[(2) - (2)].lex_str).str);
              MYSQL_YYABORT;
            }
            else
            {
              sp_instr_jump *i;
              uint ip= sp->instructions();
              uint n;
              /*
                When jumping to a BEGIN-END block end, the target jump
                points to the block hpop/cpop cleanup instructions,
                so we should exclude the block context here.
                When jumping to something else (i.e., sp_label::ITERATION),
                there are no hpop/cpop at the jump destination,
                so we should include the block context here for cleanup.
              */
              bool exclusive= (lab->type == sp_label::BEGIN);

              n= ctx->diff_handlers(lab->ctx, exclusive);
              if (n)
              {
                sp_instr_hpop *hpop= new sp_instr_hpop(ip++, ctx, n);
                if (hpop == NULL)
                  MYSQL_YYABORT;
                sp->add_instr(hpop);
              }
              n= ctx->diff_cursors(lab->ctx, exclusive);
              if (n)
              {
                sp_instr_cpop *cpop= new sp_instr_cpop(ip++, ctx, n);
                if (cpop == NULL)
                  MYSQL_YYABORT;
                sp->add_instr(cpop);
              }
              i= new sp_instr_jump(ip, ctx);
              if (i == NULL)
                MYSQL_YYABORT;
              sp->push_backpatch(i, lab);  /* Jumping forward */
              sp->add_instr(i);
            }
          }
    break;

  case 320:
#line 3603 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *ctx= lex->spcont;
            sp_label *lab= ctx->find_label((yyvsp[(2) - (2)].lex_str));

            if (! lab || lab->type != sp_label::ITERATION)
            {
              my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "ITERATE", (yyvsp[(2) - (2)].lex_str).str);
              MYSQL_YYABORT;
            }
            else
            {
              sp_instr_jump *i;
              uint ip= sp->instructions();
              uint n;

              n= ctx->diff_handlers(lab->ctx, FALSE);  /* Inclusive the dest. */
              if (n)
              {
                sp_instr_hpop *hpop= new sp_instr_hpop(ip++, ctx, n);
                if (hpop == NULL ||
                    sp->add_instr(hpop))
                  MYSQL_YYABORT;
              }
              n= ctx->diff_cursors(lab->ctx, FALSE);  /* Inclusive the dest. */
              if (n)
              {
                sp_instr_cpop *cpop= new sp_instr_cpop(ip++, ctx, n);
                if (cpop == NULL ||
                    sp->add_instr(cpop))
                  MYSQL_YYABORT;
              }
              i= new sp_instr_jump(ip, ctx, lab->ip); /* Jump back */
              if (i == NULL ||
                  sp->add_instr(i))
                MYSQL_YYABORT;
            }
          }
    break;

  case 321:
#line 3646 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            uint offset;
            sp_instr_copen *i;

            if (! lex->spcont->find_cursor((yyvsp[(2) - (2)].lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[(2) - (2)].lex_str).str);
              MYSQL_YYABORT;
            }
            i= new sp_instr_copen(sp->instructions(), lex->spcont, offset);
            if (i == NULL ||
                sp->add_instr(i))
              MYSQL_YYABORT;
          }
    break;

  case 322:
#line 3666 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            uint offset;
            sp_instr_cfetch *i;

            if (! lex->spcont->find_cursor((yyvsp[(3) - (4)].lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[(3) - (4)].lex_str).str);
              MYSQL_YYABORT;
            }
            i= new sp_instr_cfetch(sp->instructions(), lex->spcont, offset);
            if (i == NULL ||
                sp->add_instr(i))
              MYSQL_YYABORT;
          }
    break;

  case 323:
#line 3683 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 324:
#line 3688 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            uint offset;
            sp_instr_cclose *i;

            if (! lex->spcont->find_cursor((yyvsp[(2) - (2)].lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[(2) - (2)].lex_str).str);
              MYSQL_YYABORT;
            }
            i= new sp_instr_cclose(sp->instructions(), lex->spcont,  offset);
            if (i == NULL ||
                sp->add_instr(i))
              MYSQL_YYABORT;
          }
    break;

  case 328:
#line 3714 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *spc= lex->spcont;
            sp_variable *spv;

            if (!spc || !(spv = spc->find_variable((yyvsp[(1) - (1)].lex_str), false)))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
            else
            {
              /* An SP local variable */
              sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();

              i->add_to_varlist(spv);
            }
          }
    break;

  case 329:
#line 3734 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *spc= lex->spcont;
            sp_variable *spv;

            if (!spc || !(spv = spc->find_variable((yyvsp[(3) - (3)].lex_str), false)))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }
            else
            {
              /* An SP local variable */
              sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();

              i->add_to_varlist(spv);
            }
          }
    break;

  case 330:
#line 3756 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->sphead->reset_lex(YYTHD); }
    break;

  case 331:
#line 3758 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *ctx= lex->spcont;
            uint ip= sp->instructions();
            sp_instr_jump_if_not *i = new sp_instr_jump_if_not(ip, ctx,
                                                               (yyvsp[(2) - (3)].item), lex);
            if (i == NULL ||
                sp->push_backpatch(i, ctx->push_label(YYTHD, EMPTY_STR, 0)) ||
                sp->add_cont_backpatch(i) ||
                sp->add_instr(i))
              MYSQL_YYABORT;
            if (sp->restore_lex(YYTHD))
              MYSQL_YYABORT;
          }
    break;

  case 332:
#line 3774 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            sp_head *sp= Lex->sphead;
            sp_pcontext *ctx= Lex->spcont;
            uint ip= sp->instructions();
            sp_instr_jump *i = new sp_instr_jump(ip, ctx);
            if (i == NULL ||
                sp->add_instr(i))
              MYSQL_YYABORT;
            sp->backpatch(ctx->pop_label());
            sp->push_backpatch(i, ctx->push_label(YYTHD, EMPTY_STR, 0));
          }
    break;

  case 333:
#line 3786 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            lex->sphead->backpatch(lex->spcont->pop_label());
          }
    break;

  case 339:
#line 3806 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            case_stmt_action_case(lex);
            lex->sphead->reset_lex(YYTHD); /* For expr $3 */
          }
    break;

  case 340:
#line 3812 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (case_stmt_action_expr(lex, (yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;

            /* For expr $3 */
            if (lex->sphead->restore_lex(YYTHD))
              MYSQL_YYABORT;
          }
    break;

  case 341:
#line 3825 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            case_stmt_action_end_case(lex, true);
          }
    break;

  case 342:
#line 3833 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            case_stmt_action_case(lex);
          }
    break;

  case 343:
#line 3841 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            case_stmt_action_end_case(lex, false);
          }
    break;

  case 348:
#line 3859 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->sphead->reset_lex(YYTHD); /* For expr $3 */
          }
    break;

  case 349:
#line 3863 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            /* Simple case: <caseval> = <whenval> */

            LEX *lex= Lex;
            if (case_stmt_action_when(lex, (yyvsp[(3) - (3)].item), true))
              MYSQL_YYABORT;
            /* For expr $3 */
            if (lex->sphead->restore_lex(YYTHD))
              MYSQL_YYABORT;
          }
    break;

  case 350:
#line 3875 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (case_stmt_action_then(lex))
              MYSQL_YYABORT;
          }
    break;

  case 351:
#line 3884 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->sphead->reset_lex(YYTHD); /* For expr $3 */
          }
    break;

  case 352:
#line 3888 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (case_stmt_action_when(lex, (yyvsp[(3) - (3)].item), false))
              MYSQL_YYABORT;
            /* For expr $3 */
            if (lex->sphead->restore_lex(YYTHD))
              MYSQL_YYABORT;
          }
    break;

  case 353:
#line 3898 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (case_stmt_action_then(lex))
              MYSQL_YYABORT;
          }
    break;

  case 354:
#line 3907 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            uint ip= sp->instructions();
            sp_instr_error *i= new sp_instr_error(ip, lex->spcont,
                                                  ER_SP_CASE_NOT_FOUND);
            if (i == NULL ||
                sp->add_instr(i))
              MYSQL_YYABORT;
          }
    break;

  case 356:
#line 3922 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_pcontext *ctx= lex->spcont;
            sp_label *lab= ctx->find_label((yyvsp[(1) - (2)].lex_str));

            if (lab)
            {
              my_error(ER_SP_LABEL_REDEFINE, MYF(0), (yyvsp[(1) - (2)].lex_str).str);
              MYSQL_YYABORT;
            }
            else
            {
              lab= lex->spcont->push_label(YYTHD, (yyvsp[(1) - (2)].lex_str), lex->sphead->instructions());
              lab->type= sp_label::ITERATION;
            }
          }
    break;

  case 357:
#line 3939 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_label *lab= lex->spcont->pop_label();

            if ((yyvsp[(5) - (5)].lex_str).str)
            {
              if (my_strcasecmp(system_charset_info, (yyvsp[(5) - (5)].lex_str).str, lab->name.str) != 0)
              {
                my_error(ER_SP_LABEL_MISMATCH, MYF(0), (yyvsp[(5) - (5)].lex_str).str);
                MYSQL_YYABORT;
              }
            }
            lex->sphead->backpatch(lab);
          }
    break;

  case 358:
#line 3956 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.lex_str)= null_lex_str; }
    break;

  case 359:
#line 3957 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str); }
    break;

  case 360:
#line 3962 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_pcontext *ctx= lex->spcont;
            sp_label *lab= ctx->find_label((yyvsp[(1) - (2)].lex_str));

            if (lab)
            {
              my_error(ER_SP_LABEL_REDEFINE, MYF(0), (yyvsp[(1) - (2)].lex_str).str);
              MYSQL_YYABORT;
            }

            lab= lex->spcont->push_label(YYTHD, (yyvsp[(1) - (2)].lex_str), lex->sphead->instructions());
            lab->type= sp_label::BEGIN;
          }
    break;

  case 361:
#line 3977 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_label *lab= lex->spcont->pop_label();

            if ((yyvsp[(5) - (5)].lex_str).str)
            {
              if (my_strcasecmp(system_charset_info, (yyvsp[(5) - (5)].lex_str).str, lab->name.str) != 0)
              {
                my_error(ER_SP_LABEL_MISMATCH, MYF(0), (yyvsp[(5) - (5)].lex_str).str);
                MYSQL_YYABORT;
              }
            }
          }
    break;

  case 362:
#line 3993 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { /* Unlabeled blocks get a secret label. */
            LEX *lex= Lex;
            uint ip= lex->sphead->instructions();
            sp_label *lab= lex->spcont->push_label(YYTHD, EMPTY_STR, ip);
            lab->type= sp_label::BEGIN;
          }
    break;

  case 363:
#line 4000 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->spcont->pop_label();
          }
    break;

  case 364:
#line 4008 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { /* QQ This is just a dummy for grouping declarations and statements
              together. No [[NOT] ATOMIC] yet, and we need to figure out how
              make it coexist with the existing BEGIN COMMIT/ROLLBACK. */
            LEX *lex= Lex;
            lex->spcont= lex->spcont->push_context(YYTHD,
                                                   sp_pcontext::REGULAR_SCOPE);
          }
    break;

  case 365:
#line 4018 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *ctx= lex->spcont;
            sp_instr *i;

            sp->backpatch(ctx->last_label()); /* We always have a label */
            if ((yyvsp[(3) - (5)].spblock).hndlrs)
            {
              i= new sp_instr_hpop(sp->instructions(), ctx, (yyvsp[(3) - (5)].spblock).hndlrs);
              if (i == NULL ||
                  sp->add_instr(i))
                MYSQL_YYABORT;
            }
            if ((yyvsp[(3) - (5)].spblock).curs)
            {
              i= new sp_instr_cpop(sp->instructions(), ctx, (yyvsp[(3) - (5)].spblock).curs);
              if (i == NULL ||
                  sp->add_instr(i))
                MYSQL_YYABORT;
            }
            lex->spcont= ctx->pop_context();
          }
    break;

  case 366:
#line 4046 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            uint ip= lex->sphead->instructions();
            sp_label *lab= lex->spcont->last_label();  /* Jumping back */
            sp_instr_jump *i = new sp_instr_jump(ip, lex->spcont, lab->ip);
            if (i == NULL ||
                lex->sphead->add_instr(i))
              MYSQL_YYABORT;
          }
    break;

  case 367:
#line 4056 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->sphead->reset_lex(YYTHD); }
    break;

  case 368:
#line 4058 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            uint ip= sp->instructions();
            sp_instr_jump_if_not *i = new sp_instr_jump_if_not(ip, lex->spcont,
                                                               (yyvsp[(3) - (4)].item), lex);
            if (i == NULL ||
                /* Jumping forward */
                sp->push_backpatch(i, lex->spcont->last_label()) ||
                sp->new_cont_backpatch(i) ||
                sp->add_instr(i))
              MYSQL_YYABORT;
            if (sp->restore_lex(YYTHD))
              MYSQL_YYABORT;
          }
    break;

  case 369:
#line 4074 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            uint ip= lex->sphead->instructions();
            sp_label *lab= lex->spcont->last_label();  /* Jumping back */
            sp_instr_jump *i = new sp_instr_jump(ip, lex->spcont, lab->ip);
            if (i == NULL ||
                lex->sphead->add_instr(i))
              MYSQL_YYABORT;
            lex->sphead->do_cont_backpatch();
          }
    break;

  case 370:
#line 4085 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->sphead->reset_lex(YYTHD); }
    break;

  case 371:
#line 4087 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            uint ip= lex->sphead->instructions();
            sp_label *lab= lex->spcont->last_label();  /* Jumping back */
            sp_instr_jump_if_not *i = new sp_instr_jump_if_not(ip, lex->spcont,
                                                               (yyvsp[(5) - (7)].item), lab->ip,
                                                               lex);
            if (i == NULL ||
                lex->sphead->add_instr(i))
              MYSQL_YYABORT;
            if (lex->sphead->restore_lex(YYTHD))
              MYSQL_YYABORT;
            /* We can shortcut the cont_backpatch here */
            i->m_cont_dest= ip+1;
          }
    break;

  case 372:
#line 4106 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->trg_chistics.action_time= TRG_ACTION_BEFORE; }
    break;

  case 373:
#line 4108 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->trg_chistics.action_time= TRG_ACTION_AFTER; }
    break;

  case 374:
#line 4113 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->trg_chistics.event= TRG_EVENT_INSERT; }
    break;

  case 375:
#line 4115 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->trg_chistics.event= TRG_EVENT_UPDATE; }
    break;

  case 376:
#line 4117 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->trg_chistics.event= TRG_EVENT_DELETE; }
    break;

  case 380:
#line 4151 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 381:
#line 4153 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->logfile_group_name= (yyvsp[(4) - (4)].lex_str).str;
          }
    break;

  case 382:
#line 4163 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { 
            Lex->alter_tablespace_info->ts_alter_tablespace_type= ALTER_TABLESPACE_ADD_FILE; 
          }
    break;

  case 383:
#line 4169 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { 
            Lex->alter_tablespace_info->ts_alter_tablespace_type= ALTER_TABLESPACE_DROP_FILE; 
          }
    break;

  case 388:
#line 4192 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 439:
#line 4290 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->data_file_name= (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 440:
#line 4298 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->undo_file_name= (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 441:
#line 4306 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->redo_file_name= (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 442:
#line 4314 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info= new st_alter_tablespace();
            if (lex->alter_tablespace_info == NULL)
              MYSQL_YYABORT;
            lex->alter_tablespace_info->tablespace_name= (yyvsp[(1) - (1)].lex_str).str;
            lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
    break;

  case 443:
#line 4326 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info= new st_alter_tablespace();
            if (lex->alter_tablespace_info == NULL)
              MYSQL_YYABORT;
            lex->alter_tablespace_info->logfile_group_name= (yyvsp[(1) - (1)].lex_str).str;
            lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
    break;

  case 444:
#line 4338 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_READ_ONLY;
          }
    break;

  case 445:
#line 4343 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_READ_WRITE;
          }
    break;

  case 446:
#line 4348 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_NOT_ACCESSIBLE;
          }
    break;

  case 447:
#line 4356 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->initial_size= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 448:
#line 4364 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->autoextend_size= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 449:
#line 4372 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->max_size= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 450:
#line 4380 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->extent_size= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 451:
#line 4388 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->undo_buffer_size= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 452:
#line 4396 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->redo_buffer_size= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 453:
#line 4404 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->alter_tablespace_info->nodegroup_id != UNDEF_NODEGROUP)
            {
              my_error(ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"NODEGROUP");
              MYSQL_YYABORT;
            }
            lex->alter_tablespace_info->nodegroup_id= (yyvsp[(3) - (3)].ulong_num);
          }
    break;

  case 454:
#line 4417 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->alter_tablespace_info->ts_comment != NULL)
            {
              my_error(ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"COMMENT");
              MYSQL_YYABORT;
            }
            lex->alter_tablespace_info->ts_comment= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 455:
#line 4430 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->alter_tablespace_info->storage_engine != NULL)
            {
              my_error(ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),
                       "STORAGE ENGINE");
              MYSQL_YYABORT;
            }
            lex->alter_tablespace_info->storage_engine= (yyvsp[(4) - (4)].db_type);
          }
    break;

  case 456:
#line 4444 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->wait_until_completed= TRUE;
          }
    break;

  case 457:
#line 4449 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (!(lex->alter_tablespace_info->wait_until_completed))
            {
              my_error(ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"NO_WAIT");
              MYSQL_YYABORT;
            }
            lex->alter_tablespace_info->wait_until_completed= FALSE;
          }
    break;

  case 458:
#line 4461 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.ulonglong_number)= (yyvsp[(1) - (1)].ulong_num);}
    break;

  case 459:
#line 4463 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            ulonglong number;
            uint text_shift_number= 0;
            longlong prefix_number;
            char *start_ptr= (yyvsp[(1) - (1)].lex_str).str;
            uint str_len= (yyvsp[(1) - (1)].lex_str).length;
            char *end_ptr= start_ptr + str_len;
            int error;
            prefix_number= my_strtoll10(start_ptr, &end_ptr, &error);
            if ((start_ptr + str_len - 1) == end_ptr)
            {
              switch (end_ptr[0])
              {
                case 'g':
                case 'G':
                  text_shift_number+=10;
                case 'm':
                case 'M':
                  text_shift_number+=10;
                case 'k':
                case 'K':
                  text_shift_number+=10;
                  break;
                default:
                {
                  my_error(ER_WRONG_SIZE_NUMBER, MYF(0));
                  MYSQL_YYABORT;
                }
              }
              if (prefix_number >> 31)
              {
                my_error(ER_SIZE_OVERFLOW_ERROR, MYF(0));
                MYSQL_YYABORT;
              }
              number= prefix_number << text_shift_number;
            }
            else
            {
              my_error(ER_WRONG_SIZE_NUMBER, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.ulonglong_number)= number;
          }
    break;

  case 460:
#line 4513 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 461:
#line 4516 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 462:
#line 4518 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            TABLE_LIST *src_table;
            LEX *lex= thd->lex;

            lex->create_info.options|= HA_LEX_CREATE_TABLE_LIKE;
            src_table= lex->select_lex.add_table_to_list(thd, (yyvsp[(2) - (2)].table), NULL, 0,
                                                         TL_READ,
                                                         MDL_SHARED_READ);
            if (! src_table)
              MYSQL_YYABORT;
            /* CREATE TABLE ... LIKE is not allowed for views. */
            src_table->required_type= FRMTYPE_TABLE;
          }
    break;

  case 463:
#line 4533 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            TABLE_LIST *src_table;
            LEX *lex= thd->lex;

            lex->create_info.options|= HA_LEX_CREATE_TABLE_LIKE;
            src_table= lex->select_lex.add_table_to_list(thd, (yyvsp[(3) - (4)].table), NULL, 0,
                                                         TL_READ,
                                                         MDL_SHARED_READ);
            if (! src_table)
              MYSQL_YYABORT;
            /* CREATE TABLE ... LIKE is not allowed for views. */
            src_table->required_type= FRMTYPE_TABLE;
          }
    break;

  case 464:
#line 4552 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 465:
#line 4555 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Select->set_braces(1);}
    break;

  case 466:
#line 4556 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 467:
#line 4560 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 468:
#line 4562 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Select->set_braces(0);}
    break;

  case 469:
#line 4563 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 470:
#line 4565 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Select->set_braces(1);}
    break;

  case 471:
#line 4566 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 472:
#line 4571 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            /*
              Remove all tables used in PARTITION clause from the global table
              list. Partitioning with subqueries is not allowed anyway.
            */
            TABLE_LIST *last_non_sel_table= Lex->create_last_non_select_table;
            last_non_sel_table->next_global= 0;
            Lex->query_tables_last= &last_non_sel_table->next_global;
          }
    break;

  case 473:
#line 4607 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 475:
#line 4613 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->part_info= new partition_info();
            if (!lex->part_info)
            {
              mem_alloc_error(sizeof(partition_info));
              MYSQL_YYABORT;
            }
            if (lex->sql_command == SQLCOM_ALTER_TABLE)
            {
              lex->alter_info.flags|= ALTER_PARTITION;
            }
          }
    break;

  case 477:
#line 4631 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
#ifdef WITH_PARTITION_STORAGE_ENGINE
            LEX_STRING partition_name={C_STRING_WITH_LEN("partition")};
            if (!plugin_is_ready(&partition_name, MYSQL_STORAGE_ENGINE_PLUGIN))
            {
              my_error(ER_OPTION_PREVENTS_STATEMENT, MYF(0),
                      "--skip-partition");
              MYSQL_YYABORT;
            }
#else
            my_error(ER_FEATURE_DISABLED, MYF(0), "partitioning",
                    "--with-plugin-partition");
            MYSQL_YYABORT;
#endif
          }
    break;

  case 478:
#line 4650 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (!lex->part_info)
            {
              my_parse_error(ER(ER_PARTITION_ENTRY_ERROR));
              MYSQL_YYABORT;
            }
            /*
              We enter here when opening the frm file to translate
              partition info string into part_info data structure.
            */
          }
    break;

  case 479:
#line 4662 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 481:
#line 4671 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->list_of_part_fields= TRUE;
            part_info->column_list= FALSE;
            part_info->part_type= HASH_PARTITION;
          }
    break;

  case 482:
#line 4678 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->part_info->part_type= HASH_PARTITION; }
    break;

  case 483:
#line 4679 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 484:
#line 4681 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->part_info->part_type= RANGE_PARTITION; }
    break;

  case 485:
#line 4683 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->part_info->part_type= RANGE_PARTITION; }
    break;

  case 486:
#line 4685 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->part_info->part_type= LIST_PARTITION; }
    break;

  case 487:
#line 4687 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->part_info->part_type= LIST_PARTITION; }
    break;

  case 488:
#line 4691 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 489:
#line 4693 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->part_info->linear_hash_ind= TRUE;}
    break;

  case 490:
#line 4697 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 491:
#line 4698 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 492:
#line 4702 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 493:
#line 4703 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 494:
#line 4708 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->num_columns++;
            if (part_info->part_field_list.push_back((yyvsp[(1) - (1)].lex_str).str))
            {
              mem_alloc_error(1);
              MYSQL_YYABORT;
            }
            if (part_info->num_columns > MAX_REF_PARTS)
            {
              my_error(ER_TOO_MANY_PARTITION_FUNC_FIELDS_ERROR, MYF(0),
                       "list of partition fields");
              MYSQL_YYABORT;
            }
          }
    break;

  case 495:
#line 4727 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->column_list= TRUE;
            part_info->list_of_part_fields= TRUE;
          }
    break;

  case 496:
#line 4737 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->set_part_expr((yyvsp[(2) - (5)].simple_string)+1, (yyvsp[(3) - (5)].item), (yyvsp[(4) - (5)].simple_string), FALSE))
            { MYSQL_YYABORT; }
            part_info->num_columns= 1;
            part_info->column_list= FALSE;
          }
    break;

  case 497:
#line 4748 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            if (Lex->part_info->set_part_expr((yyvsp[(2) - (5)].simple_string)+1, (yyvsp[(3) - (5)].item), (yyvsp[(4) - (5)].simple_string), TRUE))
            { MYSQL_YYABORT; }
          }
    break;

  case 498:
#line 4756 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 499:
#line 4758 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { 
            uint num_parts= (yyvsp[(2) - (2)].ulong_num);
            partition_info *part_info= Lex->part_info;
            if (num_parts == 0)
            {
              my_error(ER_NO_PARTS_ERROR, MYF(0), "partitions");
              MYSQL_YYABORT;
            }

            part_info->num_parts= num_parts;
            part_info->use_default_num_partitions= FALSE;
          }
    break;

  case 500:
#line 4773 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 501:
#line 4775 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->part_info->subpart_type= HASH_PARTITION; }
    break;

  case 502:
#line 4776 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 503:
#line 4779 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->subpart_type= HASH_PARTITION;
            part_info->list_of_subpart_fields= TRUE;
          }
    break;

  case 504:
#line 4784 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 505:
#line 4788 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 506:
#line 4789 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 507:
#line 4794 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->subpart_field_list.push_back((yyvsp[(1) - (1)].lex_str).str))
            {
              mem_alloc_error(1);
              MYSQL_YYABORT;
            }
            if (part_info->subpart_field_list.elements > MAX_REF_PARTS)
            {
              my_error(ER_TOO_MANY_PARTITION_FUNC_FIELDS_ERROR, MYF(0),
                       "list of subpartition fields");
              MYSQL_YYABORT;
            }
          }
    break;

  case 508:
#line 4812 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            bool not_corr_func;
            not_corr_func= !lex->safe_to_cache_query;
            lex->safe_to_cache_query= 1;
            if (not_corr_func)
            {
              my_parse_error(ER(ER_WRONG_EXPR_IN_PARTITION_FUNC_ERROR));
              MYSQL_YYABORT;
            }
            (yyval.item)=(yyvsp[(1) - (1)].item);
          }
    break;

  case 509:
#line 4827 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 510:
#line 4829 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            uint num_parts= (yyvsp[(2) - (2)].ulong_num);
            LEX *lex= Lex;
            if (num_parts == 0)
            {
              my_error(ER_NO_PARTS_ERROR, MYF(0), "subpartitions");
              MYSQL_YYABORT;
            }
            lex->part_info->num_subparts= num_parts;
            lex->part_info->use_default_num_subpartitions= FALSE;
          }
    break;

  case 511:
#line 4844 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->part_type == RANGE_PARTITION)
            {
              my_error(ER_PARTITIONS_MUST_BE_DEFINED_ERROR, MYF(0),
                       "RANGE");
              MYSQL_YYABORT;
            }
            else if (part_info->part_type == LIST_PARTITION)
            {
              my_error(ER_PARTITIONS_MUST_BE_DEFINED_ERROR, MYF(0),
                       "LIST");
              MYSQL_YYABORT;
            }
          }
    break;

  case 512:
#line 4860 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            uint count_curr_parts= part_info->partitions.elements;
            if (part_info->num_parts != 0)
            {
              if (part_info->num_parts !=
                  count_curr_parts)
              {
                my_parse_error(ER(ER_PARTITION_WRONG_NO_PART_ERROR));
                MYSQL_YYABORT;
              }
            }
            else if (count_curr_parts > 0)
            {
              part_info->num_parts= count_curr_parts;
            }
            part_info->count_curr_subparts= 0;
          }
    break;

  case 513:
#line 4881 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 514:
#line 4882 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 515:
#line 4887 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            partition_element *p_elem= new partition_element();

            if (!p_elem || part_info->partitions.push_back(p_elem))
            {
              mem_alloc_error(sizeof(partition_element));
              MYSQL_YYABORT;
            }
            p_elem->part_state= PART_NORMAL;
            part_info->curr_part_elem= p_elem;
            part_info->current_partition= p_elem;
            part_info->use_default_partitions= FALSE;
            part_info->use_default_num_partitions= FALSE;
          }
    break;

  case 516:
#line 4906 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 517:
#line 4911 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            partition_element *p_elem= part_info->curr_part_elem;
            p_elem->partition_name= (yyvsp[(1) - (1)].lex_str).str;
          }
    break;

  case 518:
#line 4920 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (part_info->part_type == RANGE_PARTITION)
              {
                my_error(ER_PARTITION_REQUIRES_VALUES_ERROR, MYF(0),
                         "RANGE", "LESS THAN");
                MYSQL_YYABORT;
              }
              if (part_info->part_type == LIST_PARTITION)
              {
                my_error(ER_PARTITION_REQUIRES_VALUES_ERROR, MYF(0),
                         "LIST", "IN");
                MYSQL_YYABORT;
              }
            }
            else
              part_info->part_type= HASH_PARTITION;
          }
    break;

  case 519:
#line 4942 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (part_info->part_type != RANGE_PARTITION)
              {
                my_error(ER_PARTITION_WRONG_VALUES_ERROR, MYF(0),
                         "RANGE", "LESS THAN");
                MYSQL_YYABORT;
              }
            }
            else
              part_info->part_type= RANGE_PARTITION;
          }
    break;

  case 520:
#line 4957 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 521:
#line 4959 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (part_info->part_type != LIST_PARTITION)
              {
                my_error(ER_PARTITION_WRONG_VALUES_ERROR, MYF(0),
                               "LIST", "IN");
                MYSQL_YYABORT;
              }
            }
            else
              part_info->part_type= LIST_PARTITION;
          }
    break;

  case 522:
#line 4974 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 523:
#line 4979 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;

            if (part_info->num_columns &&
                part_info->num_columns != 1U)
            {
              part_info->print_debug("Kilroy II", NULL);
              my_parse_error(ER(ER_PARTITION_COLUMN_LIST_ERROR));
              MYSQL_YYABORT;
            }
            else
              part_info->num_columns= 1U;
            if (part_info->init_column_part())
            {
              MYSQL_YYABORT;
            }
            if (part_info->add_max_value())
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 524:
#line 5000 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 525:
#line 5005 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            part_info->print_debug("part_values_in: part_value_item", NULL);

            if (part_info->num_columns != 1U)
            {
              if (!lex->is_partition_management() ||
                  part_info->num_columns == 0 ||
                  part_info->num_columns > MAX_REF_PARTS)
              {
                part_info->print_debug("Kilroy III", NULL);
                my_parse_error(ER(ER_PARTITION_COLUMN_LIST_ERROR));
                MYSQL_YYABORT;
              }
              /*
                Reorganize the current large array into a list of small
                arrays with one entry in each array. This can happen
                in the first partition of an ALTER TABLE statement where
                we ADD or REORGANIZE partitions. Also can only happen
                for LIST partitions.
              */
              if (part_info->reorganize_into_single_field_col_val())
              {
                MYSQL_YYABORT;
              }
            }
          }
    break;

  case 526:
#line 5034 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->num_columns < 2U)
            {
              my_parse_error(ER(ER_ROW_SINGLE_PARTITION_FIELD_ERROR));
              MYSQL_YYABORT;
            }
          }
    break;

  case 527:
#line 5045 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 528:
#line 5046 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 529:
#line 5051 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->print_debug("( part_value_item", NULL);
            /* Initialisation code needed for each list of value expressions */
            if (!(part_info->part_type == LIST_PARTITION &&
                  part_info->num_columns == 1U) &&
                 part_info->init_column_part())
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 530:
#line 5062 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 531:
#line 5064 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->print_debug(") part_value_item", NULL);
            if (part_info->num_columns == 0)
              part_info->num_columns= part_info->curr_list_object;
            if (part_info->num_columns != part_info->curr_list_object)
            {
              /*
                All value items lists must be of equal length, in some cases
                which is covered by the above if-statement we don't know yet
                how many columns is in the partition so the assignment above
                ensures that we only report errors when we know we have an
                error.
              */
              part_info->print_debug("Kilroy I", NULL);
              my_parse_error(ER(ER_PARTITION_COLUMN_LIST_ERROR));
              MYSQL_YYABORT;
            }
            part_info->curr_list_object= 0;
          }
    break;

  case 532:
#line 5087 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 533:
#line 5088 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 534:
#line 5093 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->part_type == LIST_PARTITION)
            {
              my_parse_error(ER(ER_MAXVALUE_IN_VALUES_IN));
              MYSQL_YYABORT;
            }
            if (part_info->add_max_value())
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 535:
#line 5106 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            Item *part_expr= (yyvsp[(1) - (1)].item);

            if (!lex->safe_to_cache_query)
            {
              my_parse_error(ER(ER_WRONG_EXPR_IN_PARTITION_FUNC_ERROR));
              MYSQL_YYABORT;
            }
            if (part_info->add_column_list_value(YYTHD, part_expr))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 536:
#line 5126 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->num_subparts != 0 &&
                !part_info->use_default_subpartitions)
            {
              /*
                We come here when we have defined subpartitions on the first
                partition but not on all the subsequent partitions. 
              */
              my_parse_error(ER(ER_PARTITION_WRONG_NO_SUBPART_ERROR));
              MYSQL_YYABORT;
            }
          }
    break;

  case 537:
#line 5140 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->num_subparts != 0)
            {
              if (part_info->num_subparts !=
                  part_info->count_curr_subparts)
              {
                my_parse_error(ER(ER_PARTITION_WRONG_NO_SUBPART_ERROR));
                MYSQL_YYABORT;
              }
            }
            else if (part_info->count_curr_subparts > 0)
            {
              if (part_info->partitions.elements > 1)
              {
                my_parse_error(ER(ER_PARTITION_WRONG_NO_SUBPART_ERROR));
                MYSQL_YYABORT;
              }
              part_info->num_subparts= part_info->count_curr_subparts;
            }
            part_info->count_curr_subparts= 0;
          }
    break;

  case 538:
#line 5165 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 539:
#line 5166 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 540:
#line 5171 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            partition_element *curr_part= part_info->current_partition;
            partition_element *sub_p_elem= new partition_element(curr_part);
            if (part_info->use_default_subpartitions &&
                part_info->partitions.elements >= 2)
            {
              /*
                create table t1 (a int)
                partition by list (a) subpartition by hash (a)
                (partition p0 values in (1),
                 partition p1 values in (2) subpartition sp11);
                causes use to arrive since we are on the second
                partition, but still use_default_subpartitions
                is set. When we come here we're processing at least
                the second partition (the current partition processed
                have already been put into the partitions list.
              */
              my_parse_error(ER(ER_PARTITION_WRONG_NO_SUBPART_ERROR));
              MYSQL_YYABORT;
            }
            if (!sub_p_elem ||
             curr_part->subpartitions.push_back(sub_p_elem))
            {
              mem_alloc_error(sizeof(partition_element));
              MYSQL_YYABORT;
            }
            part_info->curr_part_elem= sub_p_elem;
            part_info->use_default_subpartitions= FALSE;
            part_info->use_default_num_subpartitions= FALSE;
            part_info->count_curr_subparts++;
          }
    break;

  case 541:
#line 5203 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 542:
#line 5208 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->partition_name= (yyvsp[(1) - (1)].lex_str).str; }
    break;

  case 543:
#line 5212 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 544:
#line 5213 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 545:
#line 5217 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 546:
#line 5218 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 547:
#line 5223 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->tablespace_name= (yyvsp[(3) - (3)].lex_str).str; }
    break;

  case 548:
#line 5225 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->curr_part_elem->engine_type= (yyvsp[(4) - (4)].db_type);
            part_info->default_engine_type= (yyvsp[(4) - (4)].db_type);
          }
    break;

  case 549:
#line 5231 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->nodegroup_id= (uint16) (yyvsp[(3) - (3)].ulong_num); }
    break;

  case 550:
#line 5233 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->part_max_rows= (ha_rows) (yyvsp[(3) - (3)].ulonglong_number); }
    break;

  case 551:
#line 5235 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->part_min_rows= (ha_rows) (yyvsp[(3) - (3)].ulonglong_number); }
    break;

  case 552:
#line 5237 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->data_file_name= (yyvsp[(4) - (4)].lex_str).str; }
    break;

  case 553:
#line 5239 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->index_file_name= (yyvsp[(4) - (4)].lex_str).str; }
    break;

  case 554:
#line 5241 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->part_comment= (yyvsp[(3) - (3)].lex_str).str; }
    break;

  case 555:
#line 5250 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->sql_command == SQLCOM_INSERT)
              lex->sql_command= SQLCOM_INSERT_SELECT;
            else if (lex->sql_command == SQLCOM_REPLACE)
              lex->sql_command= SQLCOM_REPLACE_SELECT;
            /*
              The following work only with the local list, the global list
              is created correctly in this case
            */
            lex->current_select->table_list.save_and_clear(&lex->save_list);
            mysql_init_select(lex);
            lex->current_select->parsing_place= SELECT_LIST;
          }
    break;

  case 556:
#line 5265 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Select->parsing_place= NO_MATTER;
          }
    break;

  case 557:
#line 5269 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            /*
              The following work only with the local list, the global list
              is created correctly in this case
            */
            Lex->current_select->table_list.push_front(&Lex->save_list);
          }
    break;

  case 558:
#line 5279 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 559:
#line 5280 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 560:
#line 5284 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 561:
#line 5285 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 562:
#line 5289 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 563:
#line 5290 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 564:
#line 5294 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 565:
#line 5295 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 566:
#line 5299 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 567:
#line 5300 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)= (yyvsp[(1) - (1)].num);}
    break;

  case 568:
#line 5304 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)=(yyvsp[(1) - (1)].num); }
    break;

  case 569:
#line 5305 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)= (yyvsp[(1) - (2)].num) | (yyvsp[(2) - (2)].num); }
    break;

  case 570:
#line 5309 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)=HA_LEX_CREATE_TMP_TABLE; }
    break;

  case 571:
#line 5313 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 572:
#line 5314 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)=HA_LEX_CREATE_IF_NOT_EXISTS; }
    break;

  case 580:
#line 5335 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->create_info.db_type= (yyvsp[(3) - (3)].db_type);
            Lex->create_info.used_fields|= HA_CREATE_USED_ENGINE;
          }
    break;

  case 581:
#line 5340 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->create_info.max_rows= (yyvsp[(3) - (3)].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_MAX_ROWS;
          }
    break;

  case 582:
#line 5345 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->create_info.min_rows= (yyvsp[(3) - (3)].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_MIN_ROWS;
          }
    break;

  case 583:
#line 5350 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->create_info.avg_row_length=(yyvsp[(3) - (3)].ulong_num);
            Lex->create_info.used_fields|= HA_CREATE_USED_AVG_ROW_LENGTH;
          }
    break;

  case 584:
#line 5355 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->create_info.password=(yyvsp[(3) - (3)].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_PASSWORD;
          }
    break;

  case 585:
#line 5360 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->create_info.comment=(yyvsp[(3) - (3)].lex_str);
            Lex->create_info.used_fields|= HA_CREATE_USED_COMMENT;
          }
    break;

  case 586:
#line 5365 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->create_info.auto_increment_value=(yyvsp[(3) - (3)].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_AUTO;
          }
    break;

  case 587:
#line 5370 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            switch((yyvsp[(3) - (3)].ulong_num)) {
            case 0:
                Lex->create_info.table_options|= HA_OPTION_NO_PACK_KEYS;
                break;
            case 1:
                Lex->create_info.table_options|= HA_OPTION_PACK_KEYS;
                break;
            default:
                my_parse_error(ER(ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_PACK_KEYS;
          }
    break;

  case 588:
#line 5385 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->create_info.table_options&=
              ~(HA_OPTION_PACK_KEYS | HA_OPTION_NO_PACK_KEYS);
            Lex->create_info.used_fields|= HA_CREATE_USED_PACK_KEYS;
          }
    break;

  case 589:
#line 5391 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->create_info.table_options|= (yyvsp[(3) - (3)].ulong_num) ? HA_OPTION_CHECKSUM : HA_OPTION_NO_CHECKSUM;
            Lex->create_info.used_fields|= HA_CREATE_USED_CHECKSUM;
          }
    break;

  case 590:
#line 5396 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
             Lex->create_info.table_options|= (yyvsp[(3) - (3)].ulong_num) ? HA_OPTION_CHECKSUM : HA_OPTION_NO_CHECKSUM;
             Lex->create_info.used_fields|= HA_CREATE_USED_CHECKSUM;
          }
    break;

  case 591:
#line 5401 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->create_info.table_options|= (yyvsp[(3) - (3)].ulong_num) ? HA_OPTION_DELAY_KEY_WRITE : HA_OPTION_NO_DELAY_KEY_WRITE;
            Lex->create_info.used_fields|= HA_CREATE_USED_DELAY_KEY_WRITE;
          }
    break;

  case 592:
#line 5406 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->create_info.row_type= (yyvsp[(3) - (3)].row_type);
            Lex->create_info.used_fields|= HA_CREATE_USED_ROW_FORMAT;
          }
    break;

  case 593:
#line 5411 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->select_lex.table_list.save_and_clear(&Lex->save_list);
          }
    break;

  case 594:
#line 5415 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            /*
              Move the union list to the merge_list and exclude its tables
              from the global list.
            */
            LEX *lex=Lex;
            lex->create_info.merge_list= lex->select_lex.table_list;
            lex->select_lex.table_list= lex->save_list;
            /*
              When excluding union list from the global list we assume that
              elements of the former immediately follow elements which represent
              table being created/altered and parent tables.
            */
            TABLE_LIST *last_non_sel_table= lex->create_last_non_select_table;
            DBUG_ASSERT(last_non_sel_table->next_global ==
                        lex->create_info.merge_list.first);
            last_non_sel_table->next_global= 0;
            Lex->query_tables_last= &last_non_sel_table->next_global;

            lex->create_info.used_fields|= HA_CREATE_USED_UNION;
          }
    break;

  case 597:
#line 5439 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->create_info.merge_insert_method= (yyvsp[(3) - (3)].ulong_num);
            Lex->create_info.used_fields|= HA_CREATE_USED_INSERT_METHOD;
          }
    break;

  case 598:
#line 5444 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->create_info.data_file_name= (yyvsp[(4) - (4)].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_DATADIR;
          }
    break;

  case 599:
#line 5449 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->create_info.index_file_name= (yyvsp[(4) - (4)].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_INDEXDIR;
          }
    break;

  case 600:
#line 5454 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {Lex->create_info.tablespace= (yyvsp[(2) - (2)].lex_str).str;}
    break;

  case 601:
#line 5456 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {Lex->create_info.storage_media= HA_SM_DISK;}
    break;

  case 602:
#line 5458 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {Lex->create_info.storage_media= HA_SM_MEMORY;}
    break;

  case 603:
#line 5460 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->create_info.connect_string.str= (yyvsp[(3) - (3)].lex_str).str;
            Lex->create_info.connect_string.length= (yyvsp[(3) - (3)].lex_str).length;
            Lex->create_info.used_fields|= HA_CREATE_USED_CONNECTION;
          }
    break;

  case 604:
#line 5466 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->create_info.used_fields|= HA_CREATE_USED_KEY_BLOCK_SIZE;
            Lex->create_info.key_block_size= (yyvsp[(3) - (3)].ulong_num);
          }
    break;

  case 605:
#line 5474 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            HA_CREATE_INFO *cinfo= &Lex->create_info;
            if ((cinfo->used_fields & HA_CREATE_USED_DEFAULT_CHARSET) &&
                 cinfo->default_table_charset && (yyvsp[(4) - (4)].charset) &&
                 !my_charset_same(cinfo->default_table_charset,(yyvsp[(4) - (4)].charset)))
            {
              my_error(ER_CONFLICTING_DECLARATIONS, MYF(0),
                       "CHARACTER SET ", cinfo->default_table_charset->csname,
                       "CHARACTER SET ", (yyvsp[(4) - (4)].charset)->csname);
              MYSQL_YYABORT;
            }
            Lex->create_info.default_table_charset= (yyvsp[(4) - (4)].charset);
            Lex->create_info.used_fields|= HA_CREATE_USED_DEFAULT_CHARSET;
          }
    break;

  case 606:
#line 5492 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            HA_CREATE_INFO *cinfo= &Lex->create_info;
            if ((cinfo->used_fields & HA_CREATE_USED_DEFAULT_CHARSET) &&
                 cinfo->default_table_charset && (yyvsp[(4) - (4)].charset) &&
                 !((yyvsp[(4) - (4)].charset)= merge_charset_and_collation(cinfo->default_table_charset,
                                                   (yyvsp[(4) - (4)].charset))))
            {
              MYSQL_YYABORT;
            }

            Lex->create_info.default_table_charset= (yyvsp[(4) - (4)].charset);
            Lex->create_info.used_fields|= HA_CREATE_USED_DEFAULT_CHARSET;
          }
    break;

  case 607:
#line 5509 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            plugin_ref plugin=
              ha_resolve_by_name(thd, &(yyvsp[(1) - (1)].lex_str),
                thd->lex->create_info.options & HA_LEX_CREATE_TMP_TABLE);

            if (plugin)
              (yyval.db_type)= plugin_data(plugin, handlerton*);
            else
            {
              if (thd->variables.sql_mode & MODE_NO_ENGINE_SUBSTITUTION)
              {
                my_error(ER_UNKNOWN_STORAGE_ENGINE, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
                MYSQL_YYABORT;
              }
              (yyval.db_type)= 0;
              push_warning_printf(thd, Sql_condition::WARN_LEVEL_WARN,
                                  ER_UNKNOWN_STORAGE_ENGINE,
                                  ER(ER_UNKNOWN_STORAGE_ENGINE),
                                  (yyvsp[(1) - (1)].lex_str).str);
            }
          }
    break;

  case 608:
#line 5535 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            plugin_ref plugin=
              ha_resolve_by_name(thd, &(yyvsp[(1) - (1)].lex_str),
                lex->create_info.options & HA_LEX_CREATE_TMP_TABLE);
            if (plugin)
              (yyval.db_type)= plugin_data(plugin, handlerton*);
            else
            {
              my_error(ER_UNKNOWN_STORAGE_ENGINE, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 609:
#line 5552 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_DEFAULT; }
    break;

  case 610:
#line 5553 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_FIXED; }
    break;

  case 611:
#line 5554 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_DYNAMIC; }
    break;

  case 612:
#line 5555 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_COMPRESSED; }
    break;

  case 613:
#line 5556 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_REDUNDANT; }
    break;

  case 614:
#line 5557 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_COMPACT; }
    break;

  case 615:
#line 5561 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.ulong_num)= MERGE_INSERT_DISABLED; }
    break;

  case 616:
#line 5562 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.ulong_num)= MERGE_INSERT_TO_FIRST; }
    break;

  case 617:
#line 5563 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.ulong_num)= MERGE_INSERT_TO_LAST; }
    break;

  case 618:
#line 5567 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 620:
#line 5572 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {(yyval.num) = (int) STRING_RESULT; }
    break;

  case 621:
#line 5573 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {(yyval.num) = (int) REAL_RESULT; }
    break;

  case 622:
#line 5574 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {(yyval.num) = (int) DECIMAL_RESULT; }
    break;

  case 623:
#line 5575 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {(yyval.num) = (int) INT_RESULT; }
    break;

  case 624:
#line 5581 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
          Lex->create_last_non_select_table= Lex->last_table();
        }
    break;

  case 630:
#line 5599 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->col_list.empty(); /* Alloced by sql_alloc */
          }
    break;

  case 631:
#line 5606 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            if (add_create_index (Lex, (yyvsp[(1) - (7)].key_type), (yyvsp[(2) - (7)].lex_str)))
              MYSQL_YYABORT;
          }
    break;

  case 632:
#line 5612 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            if (add_create_index (Lex, (yyvsp[(1) - (8)].key_type), (yyvsp[(3) - (8)].lex_str)))
              MYSQL_YYABORT;
          }
    break;

  case 633:
#line 5618 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            if (add_create_index (Lex, (yyvsp[(1) - (8)].key_type), (yyvsp[(3) - (8)].lex_str)))
              MYSQL_YYABORT;
          }
    break;

  case 634:
#line 5624 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            if (add_create_index (Lex, (yyvsp[(2) - (8)].key_type), (yyvsp[(3) - (8)].lex_str).str ? (yyvsp[(3) - (8)].lex_str) : (yyvsp[(1) - (8)].lex_str)))
              MYSQL_YYABORT;
          }
    break;

  case 635:
#line 5629 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Key *key= new Foreign_key((yyvsp[(4) - (8)].lex_str).str ? (yyvsp[(4) - (8)].lex_str) : (yyvsp[(1) - (8)].lex_str), lex->col_list,
                                      (yyvsp[(8) - (8)].table),
                                      lex->ref_list,
                                      lex->fk_delete_opt,
                                      lex->fk_update_opt,
                                      lex->fk_match_option);
            if (key == NULL)
              MYSQL_YYABORT;
            lex->alter_info.key_list.push_back(key);
            if (add_create_index (lex, Key::MULTIPLE, (yyvsp[(1) - (8)].lex_str).str ? (yyvsp[(1) - (8)].lex_str) : (yyvsp[(4) - (8)].lex_str),
                                  &default_key_create_info, 1))
              MYSQL_YYABORT;
            /* Only used for ALTER TABLE. Ignored otherwise. */
            lex->alter_info.flags|= ALTER_FOREIGN_KEY;
          }
    break;

  case 636:
#line 5647 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->col_list.empty(); /* Alloced by sql_alloc */
          }
    break;

  case 640:
#line 5662 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.lex_str)= null_lex_str; }
    break;

  case 641:
#line 5663 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str); }
    break;

  case 642:
#line 5667 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(2) - (2)].lex_str); }
    break;

  case 643:
#line 5672 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->length=lex->dec=0;
            lex->type=0;
            lex->default_value= lex->on_update_value= 0;
            lex->comment=null_lex_str;
            lex->charset=NULL;
          }
    break;

  case 644:
#line 5681 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (add_field_to_list(lex->thd, &(yyvsp[(1) - (4)].lex_str), (enum enum_field_types) (yyvsp[(3) - (4)].num),
                                  lex->length,lex->dec,lex->type,
                                  lex->default_value, lex->on_update_value, 
                                  &lex->comment,
                                  lex->change,&lex->interval_list,lex->charset,
                                  lex->uint_geom_type))
              MYSQL_YYABORT;
          }
    break;

  case 645:
#line 5694 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)=(yyvsp[(1) - (3)].num); }
    break;

  case 646:
#line 5695 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)=(yyvsp[(1) - (3)].num); }
    break;

  case 647:
#line 5696 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_FLOAT; }
    break;

  case 648:
#line 5698 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->length= (char*) "1";
            (yyval.num)=MYSQL_TYPE_BIT;
          }
    break;

  case 649:
#line 5703 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.num)=MYSQL_TYPE_BIT;
          }
    break;

  case 650:
#line 5707 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->length= (char*) "1";
            (yyval.num)=MYSQL_TYPE_TINY;
          }
    break;

  case 651:
#line 5712 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->length= (char*) "1";
            (yyval.num)=MYSQL_TYPE_TINY;
          }
    break;

  case 652:
#line 5717 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.num)=MYSQL_TYPE_STRING;
          }
    break;

  case 653:
#line 5721 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->length= (char*) "1";
            (yyval.num)=MYSQL_TYPE_STRING;
          }
    break;

  case 654:
#line 5726 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.num)=MYSQL_TYPE_STRING;
            Lex->charset=national_charset_info;
          }
    break;

  case 655:
#line 5731 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->length= (char*) "1";
            (yyval.num)=MYSQL_TYPE_STRING;
            Lex->charset=national_charset_info;
          }
    break;

  case 656:
#line 5737 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_STRING;
          }
    break;

  case 657:
#line 5742 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->length= (char*) "1";
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_STRING;
          }
    break;

  case 658:
#line 5748 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.num)= MYSQL_TYPE_VARCHAR;
          }
    break;

  case 659:
#line 5752 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.num)= MYSQL_TYPE_VARCHAR;
            Lex->charset=national_charset_info;
          }
    break;

  case 660:
#line 5757 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->charset=&my_charset_bin;
            (yyval.num)= MYSQL_TYPE_VARCHAR;
          }
    break;

  case 661:
#line 5762 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_YEAR; }
    break;

  case 662:
#line 5764 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_DATE; }
    break;

  case 663:
#line 5766 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)= MYSQL_TYPE_TIME2; }
    break;

  case 664:
#line 5768 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            if (YYTHD->variables.sql_mode & MODE_MAXDB)
              (yyval.num)=MYSQL_TYPE_DATETIME2;
            else
            {
              /* 
                Unlike other types TIMESTAMP fields are NOT NULL by default.
              */
              Lex->type|= NOT_NULL_FLAG;
              (yyval.num)=MYSQL_TYPE_TIMESTAMP2;
            }
          }
    break;

  case 665:
#line 5781 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)= MYSQL_TYPE_DATETIME2; }
    break;

  case 666:
#line 5783 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_TINY_BLOB;
          }
    break;

  case 667:
#line 5788 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_BLOB;
          }
    break;

  case 668:
#line 5793 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
#ifdef HAVE_SPATIAL
            Lex->charset=&my_charset_bin;
            Lex->uint_geom_type= (uint)(yyvsp[(1) - (1)].num);
            (yyval.num)=MYSQL_TYPE_GEOMETRY;
#else
            my_error(ER_FEATURE_DISABLED, MYF(0),
                     sym_group_geom.name, sym_group_geom.needed_define);
            MYSQL_YYABORT;
#endif
          }
    break;

  case 669:
#line 5805 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_MEDIUM_BLOB;
          }
    break;

  case 670:
#line 5810 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_LONG_BLOB;
          }
    break;

  case 671:
#line 5815 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_MEDIUM_BLOB;
          }
    break;

  case 672:
#line 5820 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_MEDIUM_BLOB; }
    break;

  case 673:
#line 5822 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_TINY_BLOB; }
    break;

  case 674:
#line 5824 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_BLOB; }
    break;

  case 675:
#line 5826 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_MEDIUM_BLOB; }
    break;

  case 676:
#line 5828 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_LONG_BLOB; }
    break;

  case 677:
#line 5830 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_NEWDECIMAL;}
    break;

  case 678:
#line 5832 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_NEWDECIMAL;}
    break;

  case 679:
#line 5834 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_NEWDECIMAL;}
    break;

  case 680:
#line 5836 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {Lex->interval_list.empty();}
    break;

  case 681:
#line 5838 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_ENUM; }
    break;

  case 682:
#line 5840 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->interval_list.empty();}
    break;

  case 683:
#line 5842 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_SET; }
    break;

  case 684:
#line 5844 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_MEDIUM_BLOB; }
    break;

  case 685:
#line 5846 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.num)=MYSQL_TYPE_LONGLONG;
            Lex->type|= (AUTO_INCREMENT_FLAG | NOT_NULL_FLAG | UNSIGNED_FLAG |
              UNIQUE_FLAG);
          }
    break;

  case 686:
#line 5854 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)= Field::GEOM_GEOMETRY; }
    break;

  case 687:
#line 5855 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)= Field::GEOM_GEOMETRYCOLLECTION; }
    break;

  case 688:
#line 5857 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->length= (char*)"25";
            (yyval.num)= Field::GEOM_POINT;
          }
    break;

  case 689:
#line 5861 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)= Field::GEOM_MULTIPOINT; }
    break;

  case 690:
#line 5862 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)= Field::GEOM_LINESTRING; }
    break;

  case 691:
#line 5863 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)= Field::GEOM_MULTILINESTRING; }
    break;

  case 692:
#line 5864 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)= Field::GEOM_POLYGON; }
    break;

  case 693:
#line 5865 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)= Field::GEOM_MULTIPOLYGON; }
    break;

  case 694:
#line 5869 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 695:
#line 5873 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 696:
#line 5874 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 697:
#line 5878 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 698:
#line 5879 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 699:
#line 5883 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 700:
#line 5884 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 701:
#line 5885 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 702:
#line 5886 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 703:
#line 5887 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 704:
#line 5891 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_LONG; }
    break;

  case 705:
#line 5892 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_TINY; }
    break;

  case 706:
#line 5893 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_SHORT; }
    break;

  case 707:
#line 5894 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_INT24; }
    break;

  case 708:
#line 5895 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_LONGLONG; }
    break;

  case 709:
#line 5900 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.num)= YYTHD->variables.sql_mode & MODE_REAL_AS_FLOAT ?
              MYSQL_TYPE_FLOAT : MYSQL_TYPE_DOUBLE;
          }
    break;

  case 710:
#line 5905 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_DOUBLE; }
    break;

  case 711:
#line 5907 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_DOUBLE; }
    break;

  case 712:
#line 5912 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->dec=Lex->length= (char*)0; }
    break;

  case 713:
#line 5914 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->dec= (char*)0; }
    break;

  case 714:
#line 5916 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 715:
#line 5921 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->length=(yyvsp[(2) - (5)].lex_str).str;
            lex->dec=(yyvsp[(4) - (5)].lex_str).str;
          }
    break;

  case 716:
#line 5930 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->dec= (char *) 0; }
    break;

  case 717:
#line 5931 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->dec= (yyvsp[(2) - (3)].lex_str).str; }
    break;

  case 718:
#line 5935 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 0; }
    break;

  case 719:
#line 5936 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 0; }
    break;

  case 720:
#line 5938 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
             int error;
             (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(2) - (3)].lex_str).str, NULL, &error);
           }
    break;

  case 721:
#line 5945 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 722:
#line 5946 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 723:
#line 5950 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 724:
#line 5951 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 725:
#line 5955 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 726:
#line 5956 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->type|= UNSIGNED_FLAG;}
    break;

  case 727:
#line 5957 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->type|= UNSIGNED_FLAG | ZEROFILL_FLAG; }
    break;

  case 728:
#line 5961 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->length= (yyvsp[(2) - (3)].lex_str).str; }
    break;

  case 729:
#line 5962 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->length= (yyvsp[(2) - (3)].lex_str).str; }
    break;

  case 730:
#line 5963 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->length= (yyvsp[(2) - (3)].lex_str).str; }
    break;

  case 731:
#line 5964 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->length= (yyvsp[(2) - (3)].lex_str).str; }
    break;

  case 732:
#line 5967 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->length=(char*) 0; /* use default length */ }
    break;

  case 733:
#line 5968 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { }
    break;

  case 734:
#line 5972 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 735:
#line 5973 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 736:
#line 5977 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 737:
#line 5978 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 738:
#line 5982 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 740:
#line 5987 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->type&= ~ NOT_NULL_FLAG; }
    break;

  case 741:
#line 5988 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->type|= NOT_NULL_FLAG; }
    break;

  case 742:
#line 5989 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->default_value=(yyvsp[(2) - (2)].item); }
    break;

  case 743:
#line 5990 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->on_update_value= (yyvsp[(3) - (3)].item); }
    break;

  case 744:
#line 5991 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->type|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG; }
    break;

  case 745:
#line 5993 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { 
            LEX *lex=Lex;
            lex->type|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG | UNIQUE_FLAG;
            lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
    break;

  case 746:
#line 5999 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->type|= PRI_KEY_FLAG | NOT_NULL_FLAG;
            lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
    break;

  case 747:
#line 6005 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->type|= UNIQUE_FLAG; 
            lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
    break;

  case 748:
#line 6011 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->type|= UNIQUE_KEY_FLAG; 
            lex->alter_info.flags|= ALTER_ADD_INDEX; 
          }
    break;

  case 749:
#line 6016 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->comment= (yyvsp[(2) - (2)].lex_str); }
    break;

  case 750:
#line 6018 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            if (Lex->charset && !my_charset_same(Lex->charset,(yyvsp[(2) - (2)].charset)))
            {
              my_error(ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                       (yyvsp[(2) - (2)].charset)->name,Lex->charset->csname);
              MYSQL_YYABORT;
            }
            else
            {
              Lex->charset=(yyvsp[(2) - (2)].charset);
            }
          }
    break;

  case 751:
#line 6035 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
          (yyval.num)= (yyvsp[(1) - (2)].num);

          if (Lex->charset) /* Lex->charset is scanned in "type" */
          {
            if (!(Lex->charset= merge_charset_and_collation(Lex->charset, (yyvsp[(2) - (2)].charset))))
              MYSQL_YYABORT;
          }
          else if ((yyvsp[(2) - (2)].charset))
          {
            my_error(ER_NOT_SUPPORTED_YET, MYF(0),
                     "COLLATE with no CHARACTER SET "
                     "in SP parameters, RETURNS, DECLARE");
            MYSQL_YYABORT;
          }
        }
    break;

  case 752:
#line 6056 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_now_local((yyvsp[(2) - (2)].ulong_num));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 754:
#line 6065 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.item)=(yyvsp[(1) - (1)].item); }
    break;

  case 755:
#line 6069 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 756:
#line 6070 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 757:
#line 6075 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            if (!((yyval.charset)=get_charset_by_csname((yyvsp[(1) - (1)].lex_str).str,MY_CS_PRIMARY,MYF(0))))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 758:
#line 6082 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.charset)= &my_charset_bin; }
    break;

  case 759:
#line 6086 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.charset)=(yyvsp[(1) - (1)].charset);   }
    break;

  case 760:
#line 6087 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.charset)=NULL; }
    break;

  case 761:
#line 6091 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.charset)= NULL; }
    break;

  case 762:
#line 6092 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.charset)= (yyvsp[(2) - (2)].charset); }
    break;

  case 763:
#line 6097 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            if (!((yyval.charset)=get_charset_by_csname((yyvsp[(1) - (1)].lex_str).str,MY_CS_PRIMARY,MYF(0))) &&
                !((yyval.charset)=get_old_charset_by_name((yyvsp[(1) - (1)].lex_str).str)))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 764:
#line 6105 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.charset)= &my_charset_bin; }
    break;

  case 765:
#line 6109 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.charset)=(yyvsp[(1) - (1)].charset);   }
    break;

  case 766:
#line 6110 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.charset)=NULL; }
    break;

  case 767:
#line 6115 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            if (!((yyval.charset)= mysqld_collation_get_by_name((yyvsp[(1) - (1)].lex_str).str)))
              MYSQL_YYABORT;
          }
    break;

  case 768:
#line 6122 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.charset)=NULL; }
    break;

  case 769:
#line 6123 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.charset)=(yyvsp[(2) - (2)].charset); }
    break;

  case 770:
#line 6127 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.charset)=(yyvsp[(1) - (1)].charset); }
    break;

  case 771:
#line 6128 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.charset)=NULL; }
    break;

  case 772:
#line 6132 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 773:
#line 6133 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 774:
#line 6138 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->charset= &my_charset_latin1; }
    break;

  case 775:
#line 6140 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->charset= &my_charset_latin1_bin;
          }
    break;

  case 776:
#line 6144 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->charset= &my_charset_latin1_bin;
          }
    break;

  case 777:
#line 6151 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            if (!(Lex->charset=get_charset_by_csname("ucs2",
                                                     MY_CS_PRIMARY,MYF(0))))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), "ucs2");
              MYSQL_YYABORT;
            }
          }
    break;

  case 778:
#line 6160 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            if (!(Lex->charset= mysqld_collation_get_by_name("ucs2_bin")))
              MYSQL_YYABORT;
          }
    break;

  case 779:
#line 6165 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            if (!(Lex->charset= mysqld_collation_get_by_name("ucs2_bin")))
              my_error(ER_UNKNOWN_COLLATION, MYF(0), "ucs2_bin");
          }
    break;

  case 780:
#line 6172 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->charset=NULL; }
    break;

  case 783:
#line 6175 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->charset=&my_charset_bin; }
    break;

  case 784:
#line 6176 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->charset=(yyvsp[(2) - (3)].charset); }
    break;

  case 785:
#line 6178 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->charset= NULL;
            Lex->type|= BINCMP_FLAG;
          }
    break;

  case 786:
#line 6183 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->charset= (yyvsp[(3) - (3)].charset);
            Lex->type|= BINCMP_FLAG;
          }
    break;

  case 787:
#line 6190 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { }
    break;

  case 788:
#line 6191 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->type|= BINCMP_FLAG; }
    break;

  case 789:
#line 6196 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
          if ((yyvsp[(2) - (2)].ulong_num) == 0)
          {
            my_parse_error(ER(ER_SYNTAX_ERROR));
            MYSQL_YYABORT;
          }
        }
    break;

  case 790:
#line 6204 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(2) - (4)].ulong_num); }
    break;

  case 791:
#line 6208 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 0; }
    break;

  case 792:
#line 6209 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 1 << MY_STRXFRM_DESC_SHIFT; }
    break;

  case 793:
#line 6213 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 1 << MY_STRXFRM_REVERSE_SHIFT; }
    break;

  case 794:
#line 6216 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 0; }
    break;

  case 795:
#line 6217 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(1) - (1)].ulong_num); }
    break;

  case 796:
#line 6218 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(1) - (2)].ulong_num) | (yyvsp[(2) - (2)].ulong_num); }
    break;

  case 797:
#line 6219 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(1) - (1)].ulong_num) ; }
    break;

  case 798:
#line 6224 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
          (yyval.ulong_num)= (yyvsp[(1) - (1)].ulong_num) < 1 ? 1 : ((yyvsp[(1) - (1)].ulong_num) > MY_STRXFRM_NLEVELS ? MY_STRXFRM_NLEVELS : (yyvsp[(1) - (1)].ulong_num));
          (yyval.ulong_num)--;
        }
    break;

  case 799:
#line 6232 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
          (yyval.ulong_num)= (1 | (yyvsp[(2) - (2)].ulong_num)) << (yyvsp[(1) - (2)].ulong_num);
        }
    break;

  case 800:
#line 6238 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(1) - (1)].ulong_num); }
    break;

  case 801:
#line 6239 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.ulong_num)|= (yyvsp[(3) - (3)].ulong_num); }
    break;

  case 802:
#line 6244 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
          uint start= (yyvsp[(1) - (3)].ulong_num);
          uint end= (yyvsp[(3) - (3)].ulong_num);
          for ((yyval.ulong_num)= 0; start <= end; start++)
            (yyval.ulong_num)|= (1 << start);
        }
    break;

  case 803:
#line 6253 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(1) - (1)].ulong_num); }
    break;

  case 804:
#line 6254 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(1) - (1)].ulong_num); }
    break;

  case 805:
#line 6258 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 0; }
    break;

  case 806:
#line 6259 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(2) - (2)].ulong_num); }
    break;

  case 809:
#line 6273 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.table)=(yyvsp[(2) - (5)].table);
          }
    break;

  case 810:
#line 6280 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->ref_list.empty(); }
    break;

  case 812:
#line 6286 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Key_part_spec *key= new Key_part_spec((yyvsp[(3) - (3)].lex_str), 0);
            if (key == NULL)
              MYSQL_YYABORT;
            Lex->ref_list.push_back(key);
          }
    break;

  case 813:
#line 6293 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Key_part_spec *key= new Key_part_spec((yyvsp[(1) - (1)].lex_str), 0);
            if (key == NULL)
              MYSQL_YYABORT;
            LEX *lex= Lex;
            lex->ref_list.empty();
            lex->ref_list.push_back(key);
          }
    break;

  case 814:
#line 6305 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->fk_match_option= Foreign_key::FK_MATCH_UNDEF; }
    break;

  case 815:
#line 6307 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->fk_match_option= Foreign_key::FK_MATCH_FULL; }
    break;

  case 816:
#line 6309 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->fk_match_option= Foreign_key::FK_MATCH_PARTIAL; }
    break;

  case 817:
#line 6311 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->fk_match_option= Foreign_key::FK_MATCH_SIMPLE; }
    break;

  case 818:
#line 6316 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->fk_update_opt= Foreign_key::FK_OPTION_UNDEF;
            lex->fk_delete_opt= Foreign_key::FK_OPTION_UNDEF;
          }
    break;

  case 819:
#line 6322 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[(3) - (3)].m_fk_option);
            lex->fk_delete_opt= Foreign_key::FK_OPTION_UNDEF;
          }
    break;

  case 820:
#line 6328 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->fk_update_opt= Foreign_key::FK_OPTION_UNDEF;
            lex->fk_delete_opt= (yyvsp[(3) - (3)].m_fk_option);
          }
    break;

  case 821:
#line 6335 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[(3) - (6)].m_fk_option);
            lex->fk_delete_opt= (yyvsp[(6) - (6)].m_fk_option);
          }
    break;

  case 822:
#line 6342 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[(6) - (6)].m_fk_option);
            lex->fk_delete_opt= (yyvsp[(3) - (6)].m_fk_option);
          }
    break;

  case 823:
#line 6350 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.m_fk_option)= Foreign_key::FK_OPTION_RESTRICT; }
    break;

  case 824:
#line 6351 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.m_fk_option)= Foreign_key::FK_OPTION_CASCADE; }
    break;

  case 825:
#line 6352 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.m_fk_option)= Foreign_key::FK_OPTION_SET_NULL; }
    break;

  case 826:
#line 6353 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.m_fk_option)= Foreign_key::FK_OPTION_NO_ACTION; }
    break;

  case 827:
#line 6354 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.m_fk_option)= Foreign_key::FK_OPTION_DEFAULT;  }
    break;

  case 828:
#line 6358 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.key_type)= Key::MULTIPLE; }
    break;

  case 829:
#line 6362 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.key_type)= Key::PRIMARY; }
    break;

  case 830:
#line 6363 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.key_type)= Key::UNIQUE; }
    break;

  case 831:
#line 6367 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 832:
#line 6368 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 833:
#line 6372 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 835:
#line 6377 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 836:
#line 6378 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 837:
#line 6379 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 838:
#line 6383 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.key_type)= Key::MULTIPLE; }
    break;

  case 839:
#line 6384 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.key_type)= Key::UNIQUE; }
    break;

  case 840:
#line 6388 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.key_type)= Key::FULLTEXT;}
    break;

  case 841:
#line 6393 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
#ifdef HAVE_SPATIAL
            (yyval.key_type)= Key::SPATIAL;
#else
            my_error(ER_FEATURE_DISABLED, MYF(0),
                     sym_group_geom.name, sym_group_geom.needed_define);
            MYSQL_YYABORT;
#endif
          }
    break;

  case 842:
#line 6405 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->key_create_info= default_key_create_info;
          }
    break;

  case 845:
#line 6422 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 847:
#line 6427 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 849:
#line 6432 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 857:
#line 6452 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->key_create_info.algorithm= (yyvsp[(2) - (2)].key_alg); }
    break;

  case 858:
#line 6453 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->key_create_info.algorithm= (yyvsp[(2) - (2)].key_alg); }
    break;

  case 859:
#line 6458 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->key_create_info.block_size= (yyvsp[(3) - (3)].ulong_num); }
    break;

  case 860:
#line 6459 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->key_create_info.comment= (yyvsp[(2) - (2)].lex_str); }
    break;

  case 865:
#line 6474 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            if (plugin_is_ready(&(yyvsp[(3) - (3)].lex_str), MYSQL_FTPARSER_PLUGIN))
              Lex->key_create_info.parser_name= (yyvsp[(3) - (3)].lex_str);
            else
            {
              my_error(ER_FUNCTION_NOT_DEFINED, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 866:
#line 6486 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.key_alg)= HA_KEY_ALG_BTREE; }
    break;

  case 867:
#line 6487 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.key_alg)= HA_KEY_ALG_RTREE; }
    break;

  case 868:
#line 6488 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.key_alg)= HA_KEY_ALG_HASH; }
    break;

  case 869:
#line 6492 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->col_list.push_back((yyvsp[(3) - (4)].key_part)); }
    break;

  case 870:
#line 6493 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->col_list.push_back((yyvsp[(1) - (2)].key_part)); }
    break;

  case 871:
#line 6498 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.key_part)= new Key_part_spec((yyvsp[(1) - (1)].lex_str), 0);
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 872:
#line 6504 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            int key_part_len= atoi((yyvsp[(3) - (4)].lex_str).str);
            if (!key_part_len)
            {
              my_error(ER_KEY_PART_0, MYF(0), (yyvsp[(1) - (4)].lex_str).str);
            }
            (yyval.key_part)= new Key_part_spec((yyvsp[(1) - (4)].lex_str), (uint) key_part_len);
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 873:
#line 6517 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.lex_str)= null_lex_str; }
    break;

  case 874:
#line 6518 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str); }
    break;

  case 875:
#line 6522 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.lex_str)= null_lex_str; }
    break;

  case 876:
#line 6523 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(2) - (2)].lex_str); }
    break;

  case 877:
#line 6527 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->interval_list.push_back((yyvsp[(1) - (1)].string)); }
    break;

  case 878:
#line 6528 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->interval_list.push_back((yyvsp[(3) - (3)].string)); }
    break;

  case 879:
#line 6536 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->name.str= 0;
            lex->name.length= 0;
            lex->sql_command= SQLCOM_ALTER_TABLE;
            lex->duplicates= DUP_ERROR; 
            if (!lex->select_lex.add_table_to_list(thd, (yyvsp[(4) - (4)].table), NULL,
                                                   TL_OPTION_UPDATING,
                                                   TL_READ_NO_INSERT,
                                                   MDL_SHARED_NO_WRITE))
              MYSQL_YYABORT;
            lex->col_list.empty();
            lex->select_lex.init_order();
            lex->select_lex.db= (lex->select_lex.table_list.first)->db;
            memset(&lex->create_info, 0, sizeof(lex->create_info));
            lex->create_info.db_type= 0;
            lex->create_info.default_table_charset= NULL;
            lex->create_info.row_type= ROW_TYPE_NOT_USED;
            lex->alter_info.reset();
            lex->no_write_to_binlog= 0;
            lex->create_info.storage_media= HA_SM_DEFAULT;
            lex->create_last_non_select_table= lex->last_table();
            DBUG_ASSERT(!lex->m_sql_cmd);
          }
    break;

  case 880:
#line 6562 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (!lex->m_sql_cmd)
            {
              /* Create a generic ALTER TABLE statment. */
              lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_alter_table();
              if (lex->m_sql_cmd == NULL)
                MYSQL_YYABORT;
            }
          }
    break;

  case 881:
#line 6574 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->create_info.default_table_charset= NULL;
            Lex->create_info.used_fields= 0;
          }
    break;

  case 882:
#line 6579 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_ALTER_DB;
            lex->name= (yyvsp[(3) - (5)].lex_str);
            if (lex->name.str == NULL &&
                lex->copy_db_to(&lex->name.str, &lex->name.length))
              MYSQL_YYABORT;
          }
    break;

  case 883:
#line 6588 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "DATABASE");
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_ALTER_DB_UPGRADE;
            lex->name= (yyvsp[(3) - (7)].lex_str);
          }
    break;

  case 884:
#line 6599 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
    break;

  case 885:
#line 6610 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_PROCEDURE;
            lex->spname= (yyvsp[(3) - (5)].spname);
          }
    break;

  case 886:
#line 6617 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
    break;

  case 887:
#line 6628 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_FUNCTION;
            lex->spname= (yyvsp[(3) - (5)].spname);
          }
    break;

  case 888:
#line 6635 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "ALTER VIEW");
              MYSQL_YYABORT;
            }
            lex->create_view_mode= VIEW_ALTER;
          }
    break;

  case 889:
#line 6646 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 890:
#line 6653 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "ALTER VIEW");
              MYSQL_YYABORT;
            }
            lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED;
            lex->create_view_mode= VIEW_ALTER;
          }
    break;

  case 891:
#line 6665 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 892:
#line 6667 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            /* 
              It is safe to use Lex->spname because
              ALTER EVENT xxx RENATE TO yyy DO ALTER EVENT RENAME TO
              is not allowed. Lex->spname is used in the case of RENAME TO
              If it had to be supported spname had to be added to
              Event_parse_data.
            */

            if (!(Lex->event_parse_data= Event_parse_data::new_instance(YYTHD)))
              MYSQL_YYABORT;
            Lex->event_parse_data->identifier= (yyvsp[(4) - (4)].spname);

            Lex->sql_command= SQLCOM_ALTER_EVENT;
          }
    break;

  case 893:
#line 6687 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            if (!((yyvsp[(6) - (10)].num) || (yyvsp[(7) - (10)].num) || (yyvsp[(8) - (10)].num) || (yyvsp[(9) - (10)].num) || (yyvsp[(10) - (10)].num)))
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_ALTER_EVENT;
          }
    break;

  case 894:
#line 6700 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_TABLESPACE;
          }
    break;

  case 895:
#line 6705 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_LOGFILE_GROUP;
          }
    break;

  case 896:
#line 6710 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= CHANGE_FILE_TABLESPACE;
          }
    break;

  case 897:
#line 6715 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_ACCESS_MODE_TABLESPACE;
          }
    break;

  case 898:
#line 6720 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_SERVER;
            lex->server_options.server_name= (yyvsp[(3) - (7)].lex_str).str;
            lex->server_options.server_name_length= (yyvsp[(3) - (7)].lex_str).length;
          }
    break;

  case 899:
#line 6729 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)= 0;}
    break;

  case 900:
#line 6730 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 901:
#line 6731 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 902:
#line 6732 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 903:
#line 6736 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)= 0;}
    break;

  case 904:
#line 6738 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            /*
              Use lex's spname to hold the new name.
              The original name is in the Event_parse_data object
            */
            Lex->spname= (yyvsp[(3) - (3)].spname); 
            (yyval.num)= 1;
          }
    break;

  case 905:
#line 6749 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)= 0;}
    break;

  case 906:
#line 6750 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 907:
#line 6754 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.lex_str).str= 0; (yyval.lex_str).length= 0; }
    break;

  case 908:
#line 6755 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str); }
    break;

  case 910:
#line 6760 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->alter_info.tablespace_op= DISCARD_TABLESPACE; }
    break;

  case 911:
#line 6761 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->alter_info.tablespace_op= IMPORT_TABLESPACE; }
    break;

  case 917:
#line 6777 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= ALTER_DROP_PARTITION;
          }
    break;

  case 918:
#line 6782 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_info.flags|= ALTER_REBUILD_PARTITION;
            lex->no_write_to_binlog= (yyvsp[(3) - (4)].num);
          }
    break;

  case 919:
#line 6789 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[(3) - (4)].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_optimize_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 921:
#line 6803 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[(3) - (4)].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_analyze_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 922:
#line 6815 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_check_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 924:
#line 6828 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[(3) - (4)].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_repair_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 926:
#line 6841 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_info.flags|= ALTER_COALESCE_PARTITION;
            lex->no_write_to_binlog= (yyvsp[(3) - (4)].num);
            lex->alter_info.num_parts= (yyvsp[(4) - (4)].ulong_num);
          }
    break;

  case 927:
#line 6848 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_truncate_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 929:
#line 6861 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            size_t dummy;
            lex->select_lex.db=(yyvsp[(6) - (7)].table)->db.str;
            if (lex->select_lex.db == NULL &&
                lex->copy_db_to(&lex->select_lex.db, &dummy))
            {
              MYSQL_YYABORT;
            }
            lex->name= (yyvsp[(6) - (7)].table)->table;
            lex->alter_info.flags|= ALTER_EXCHANGE_PARTITION;
            if (!lex->select_lex.add_table_to_list(thd, (yyvsp[(6) - (7)].table), NULL,
                                                   TL_OPTION_UPDATING,
                                                   TL_READ_NO_INSERT,
                                                   MDL_SHARED_NO_WRITE))
              MYSQL_YYABORT;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                               Sql_cmd_alter_table_exchange_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 930:
#line 6888 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= ALTER_REMOVE_PARTITIONING;
          }
    break;

  case 931:
#line 6895 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= ALTER_ALL_PARTITION;
          }
    break;

  case 933:
#line 6903 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->part_info= new partition_info();
            if (!lex->part_info)
            {
              mem_alloc_error(sizeof(partition_info));
              MYSQL_YYABORT;
            }
            lex->alter_info.flags|= ALTER_ADD_PARTITION;
            lex->no_write_to_binlog= (yyvsp[(3) - (3)].num);
          }
    break;

  case 934:
#line 6915 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 936:
#line 6921 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->part_info->num_parts= lex->part_info->partitions.elements;
          }
    break;

  case 937:
#line 6926 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->part_info->num_parts= (yyvsp[(2) - (2)].ulong_num);
          }
    break;

  case 938:
#line 6933 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->part_info= new partition_info();
            if (!lex->part_info)
            {
              mem_alloc_error(sizeof(partition_info));
              MYSQL_YYABORT;
            }
            lex->no_write_to_binlog= (yyvsp[(3) - (3)].num);
          }
    break;

  case 940:
#line 6948 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= ALTER_TABLE_REORG;
          }
    break;

  case 941:
#line 6952 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= ALTER_REORGANIZE_PARTITION;
          }
    break;

  case 942:
#line 6956 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->num_parts= part_info->partitions.elements;
          }
    break;

  case 943:
#line 6963 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 944:
#line 6964 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 945:
#line 6969 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            if (Lex->alter_info.partition_names.push_back((yyvsp[(1) - (1)].lex_str).str))
            {
              mem_alloc_error(1);
              MYSQL_YYABORT;
            }
          }
    break;

  case 948:
#line 6989 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->change=0;
            lex->alter_info.flags|= ALTER_ADD_COLUMN;
          }
    break;

  case 949:
#line 6998 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->create_last_non_select_table= Lex->last_table();
          }
    break;

  case 950:
#line 7002 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->create_last_non_select_table= Lex->last_table();
            Lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
    break;

  case 951:
#line 7007 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= ALTER_ADD_COLUMN | ALTER_ADD_INDEX;
          }
    break;

  case 952:
#line 7011 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->change= (yyvsp[(3) - (3)].lex_str).str;
            lex->alter_info.flags|= ALTER_CHANGE_COLUMN;
          }
    break;

  case 953:
#line 7017 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->create_last_non_select_table= Lex->last_table();
          }
    break;

  case 954:
#line 7021 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->length=lex->dec=0; lex->type=0;
            lex->default_value= lex->on_update_value= 0;
            lex->comment=null_lex_str;
            lex->charset= NULL;
            lex->alter_info.flags|= ALTER_CHANGE_COLUMN;
          }
    break;

  case 955:
#line 7030 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (add_field_to_list(lex->thd,&(yyvsp[(3) - (6)].lex_str),
                                  (enum enum_field_types) (yyvsp[(5) - (6)].num),
                                  lex->length,lex->dec,lex->type,
                                  lex->default_value, lex->on_update_value,
                                  &lex->comment,
                                  (yyvsp[(3) - (6)].lex_str).str, &lex->interval_list, lex->charset,
                                  lex->uint_geom_type))
              MYSQL_YYABORT;
          }
    break;

  case 956:
#line 7042 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->create_last_non_select_table= Lex->last_table();
          }
    break;

  case 957:
#line 7046 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Alter_drop *ad= new Alter_drop(Alter_drop::COLUMN, (yyvsp[(3) - (4)].lex_str).str);
            if (ad == NULL)
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad);
            lex->alter_info.flags|= ALTER_DROP_COLUMN;
          }
    break;

  case 958:
#line 7055 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= ALTER_DROP_INDEX | ALTER_FOREIGN_KEY;
          }
    break;

  case 959:
#line 7059 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Alter_drop *ad= new Alter_drop(Alter_drop::KEY, primary_key_name);
            if (ad == NULL)
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad);
            lex->alter_info.flags|= ALTER_DROP_INDEX;
          }
    break;

  case 960:
#line 7068 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Alter_drop *ad= new Alter_drop(Alter_drop::KEY, (yyvsp[(3) - (3)].lex_str).str);
            if (ad == NULL)
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad);
            lex->alter_info.flags|= ALTER_DROP_INDEX;
          }
    break;

  case 961:
#line 7077 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->alter_info.keys_onoff= DISABLE;
            lex->alter_info.flags|= ALTER_KEYS_ONOFF;
          }
    break;

  case 962:
#line 7083 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->alter_info.keys_onoff= ENABLE;
            lex->alter_info.flags|= ALTER_KEYS_ONOFF;
          }
    break;

  case 963:
#line 7089 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Alter_column *ac= new Alter_column((yyvsp[(3) - (6)].lex_str).str,(yyvsp[(6) - (6)].item));
            if (ac == NULL)
              MYSQL_YYABORT;
            lex->alter_info.alter_list.push_back(ac);
            lex->alter_info.flags|= ALTER_CHANGE_COLUMN_DEFAULT;
          }
    break;

  case 964:
#line 7098 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Alter_column *ac= new Alter_column((yyvsp[(3) - (5)].lex_str).str, (Item*) 0);
            if (ac == NULL)
              MYSQL_YYABORT;
            lex->alter_info.alter_list.push_back(ac);
            lex->alter_info.flags|= ALTER_CHANGE_COLUMN_DEFAULT;
          }
    break;

  case 965:
#line 7107 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            size_t dummy;
            lex->select_lex.db=(yyvsp[(3) - (3)].table)->db.str;
            if (lex->select_lex.db == NULL &&
                lex->copy_db_to(&lex->select_lex.db, &dummy))
            {
              MYSQL_YYABORT;
            }
            if (check_table_name((yyvsp[(3) - (3)].table)->table.str,(yyvsp[(3) - (3)].table)->table.length, FALSE) ||
                ((yyvsp[(3) - (3)].table)->db.str && check_and_convert_db_name(&(yyvsp[(3) - (3)].table)->db, FALSE)))
            {
              my_error(ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[(3) - (3)].table)->table.str);
              MYSQL_YYABORT;
            }
            lex->name= (yyvsp[(3) - (3)].table)->table;
            lex->alter_info.flags|= ALTER_RENAME;
          }
    break;

  case 966:
#line 7126 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            if (!(yyvsp[(4) - (5)].charset))
            {
              THD *thd= YYTHD;
              (yyvsp[(4) - (5)].charset)= thd->variables.collation_database;
            }
            (yyvsp[(5) - (5)].charset)= (yyvsp[(5) - (5)].charset) ? (yyvsp[(5) - (5)].charset) : (yyvsp[(4) - (5)].charset);
            if (!my_charset_same((yyvsp[(4) - (5)].charset),(yyvsp[(5) - (5)].charset)))
            {
              my_error(ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                       (yyvsp[(5) - (5)].charset)->name, (yyvsp[(4) - (5)].charset)->csname);
              MYSQL_YYABORT;
            }
            LEX *lex= Lex;
            lex->create_info.table_charset=
            lex->create_info.default_table_charset= (yyvsp[(5) - (5)].charset);
            lex->create_info.used_fields|= (HA_CREATE_USED_CHARSET |
              HA_CREATE_USED_DEFAULT_CHARSET);
            lex->alter_info.flags|= ALTER_CONVERT;
          }
    break;

  case 967:
#line 7147 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->alter_info.flags|= ALTER_OPTIONS;
            if ((lex->create_info.used_fields & HA_CREATE_USED_ENGINE) &&
                !lex->create_info.db_type)
            {
              lex->create_info.used_fields&= ~HA_CREATE_USED_ENGINE;
            }
          }
    break;

  case 968:
#line 7157 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= ALTER_RECREATE;
          }
    break;

  case 969:
#line 7161 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->alter_info.flags|= ALTER_ORDER;
          }
    break;

  case 970:
#line 7168 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 971:
#line 7169 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 972:
#line 7173 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->ignore= 0;}
    break;

  case 973:
#line 7174 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->ignore= 1;}
    break;

  case 974:
#line 7178 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->drop_mode= DROP_DEFAULT; }
    break;

  case 975:
#line 7179 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->drop_mode= DROP_RESTRICT; }
    break;

  case 976:
#line 7180 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->drop_mode= DROP_CASCADE; }
    break;

  case 977:
#line 7184 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 978:
#line 7185 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { store_position_for_column((yyvsp[(2) - (2)].lex_str).str); }
    break;

  case 979:
#line 7186 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { store_position_for_column(first_keyword); }
    break;

  case 980:
#line 7190 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 981:
#line 7191 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 982:
#line 7192 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 983:
#line 7193 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 984:
#line 7198 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_START;
            lex->type = 0;
            /* We'll use mi structure for UNTIL options */
            lex->mi.set_unspecified();
            /* If you change this code don't forget to update SLAVE START too */
          }
    break;

  case 985:
#line 7207 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 986:
#line 7209 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            /*
              It is not possible to set user's information when
              one is trying to start the SQL Thread.
            */
            if ((Lex->slave_thd_opt & SLAVE_SQL) == SLAVE_SQL &&
                (Lex->slave_thd_opt & SLAVE_IO) != SLAVE_IO &&
                (Lex->slave_connection.user ||
                 Lex->slave_connection.password ||
                 Lex->slave_connection.plugin_auth ||
                 Lex->slave_connection.plugin_dir))
            {
              my_error(ER_SQLTHREAD_WITH_SECURE_SLAVE, MYF(0));
              MYSQL_YYABORT;
            }
          }
    break;

  case 987:
#line 7226 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_STOP;
            lex->type = 0;
            /* If you change this code don't forget to update SLAVE STOP too */
          }
    break;

  case 988:
#line 7236 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_BEGIN;
            lex->start_transaction_opt= (yyvsp[(3) - (3)].num);
          }
    break;

  case 989:
#line 7244 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num) = 0; }
    break;

  case 990:
#line 7246 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_WITH_CONS_SNAPSHOT;
          }
    break;

  case 992:
#line 7257 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->slave_connection.user= 0;
          }
    break;

  case 993:
#line 7261 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->slave_connection.user= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 994:
#line 7267 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->slave_connection.password= 0;
          }
    break;

  case 995:
#line 7271 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->slave_connection.password= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 996:
#line 7276 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->slave_connection.plugin_auth= 0;
          }
    break;

  case 997:
#line 7280 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->slave_connection.plugin_auth= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 998:
#line 7286 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->slave_connection.plugin_dir= 0;
          }
    break;

  case 999:
#line 7290 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->slave_connection.plugin_dir= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 1000:
#line 7296 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->slave_thd_opt= 0; }
    break;

  case 1001:
#line 7298 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1004:
#line 7307 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1005:
#line 7308 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->slave_thd_opt|=SLAVE_SQL; }
    break;

  case 1006:
#line 7309 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->slave_thd_opt|=SLAVE_IO; }
    break;

  case 1007:
#line 7313 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1008:
#line 7315 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (((lex->mi.log_file_name || lex->mi.pos) &&
                (lex->mi.relay_log_name || lex->mi.relay_log_pos)) ||
                !((lex->mi.log_file_name && lex->mi.pos) ||
                  (lex->mi.relay_log_name && lex->mi.relay_log_pos)))
            {
               my_message(ER_BAD_SLAVE_UNTIL_COND,
                          ER(ER_BAD_SLAVE_UNTIL_COND), MYF(0));
               MYSQL_YYABORT;
            }
          }
    break;

  case 1011:
#line 7336 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_CHECKSUM;
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
    break;

  case 1012:
#line 7343 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1013:
#line 7347 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->check_opt.flags= 0; }
    break;

  case 1014:
#line 7348 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->check_opt.flags= T_QUICK; }
    break;

  case 1015:
#line 7349 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->check_opt.flags= T_EXTEND; }
    break;

  case 1016:
#line 7354 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_REPAIR;
            lex->no_write_to_binlog= (yyvsp[(2) - (3)].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
    break;

  case 1017:
#line 7364 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_repair_table();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1018:
#line 7375 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->check_opt.flags = T_MEDIUM; }
    break;

  case 1019:
#line 7376 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1020:
#line 7380 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1021:
#line 7381 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1022:
#line 7385 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->check_opt.flags|= T_QUICK; }
    break;

  case 1023:
#line 7386 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->check_opt.flags|= T_EXTEND; }
    break;

  case 1024:
#line 7387 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->check_opt.sql_flags|= TT_USEFRM; }
    break;

  case 1025:
#line 7392 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_ANALYZE;
            lex->no_write_to_binlog= (yyvsp[(2) - (3)].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
    break;

  case 1026:
#line 7402 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_analyze_table();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1027:
#line 7414 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_BINLOG_BASE64_EVENT;
            Lex->comment= (yyvsp[(2) - (2)].lex_str);
          }
    break;

  case 1028:
#line 7422 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "CHECK");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CHECK;
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
    break;

  case 1029:
#line 7437 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_check_table();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1030:
#line 7448 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->check_opt.flags = T_MEDIUM; }
    break;

  case 1031:
#line 7449 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1032:
#line 7453 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1033:
#line 7454 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1034:
#line 7458 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->check_opt.flags|= T_QUICK; }
    break;

  case 1035:
#line 7459 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->check_opt.flags|= T_FAST; }
    break;

  case 1036:
#line 7460 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->check_opt.flags|= T_MEDIUM; }
    break;

  case 1037:
#line 7461 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->check_opt.flags|= T_EXTEND; }
    break;

  case 1038:
#line 7462 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->check_opt.flags|= T_CHECK_ONLY_CHANGED; }
    break;

  case 1039:
#line 7463 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->check_opt.sql_flags|= TT_FOR_UPGRADE; }
    break;

  case 1040:
#line 7468 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_OPTIMIZE;
            lex->no_write_to_binlog= (yyvsp[(2) - (3)].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
    break;

  case 1041:
#line 7478 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_optimize_table();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1042:
#line 7489 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 1043:
#line 7490 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1044:
#line 7491 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1045:
#line 7496 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_RENAME_TABLE;
          }
    break;

  case 1046:
#line 7500 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1047:
#line 7502 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_RENAME_USER;
          }
    break;

  case 1048:
#line 7509 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(1) - (3)].lex_user)) || Lex->users_list.push_back((yyvsp[(3) - (3)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 1049:
#line 7514 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(3) - (5)].lex_user)) || Lex->users_list.push_back((yyvsp[(5) - (5)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 1052:
#line 7527 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            SELECT_LEX *sl= lex->current_select;
            if (!sl->add_table_to_list(lex->thd, (yyvsp[(1) - (3)].table),NULL,TL_OPTION_UPDATING,
                                       TL_IGNORE, MDL_EXCLUSIVE) ||
                !sl->add_table_to_list(lex->thd, (yyvsp[(3) - (3)].table),NULL,TL_OPTION_UPDATING,
                                       TL_IGNORE, MDL_EXCLUSIVE))
              MYSQL_YYABORT;
          }
    break;

  case 1053:
#line 7540 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->alter_info.reset();
          }
    break;

  case 1054:
#line 7544 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ASSIGN_TO_KEYCACHE;
            lex->ident= (yyvsp[(6) - (6)].lex_str);
          }
    break;

  case 1059:
#line 7563 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (2)].table), NULL, 0, TL_READ,
                                           MDL_SHARED_READ,
                                           Select->pop_index_hints()))
              MYSQL_YYABORT;
          }
    break;

  case 1060:
#line 7573 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (3)].table), NULL, 0, TL_READ, 
                                           MDL_SHARED_READ,
                                           Select->pop_index_hints()))
              MYSQL_YYABORT;
          }
    break;

  case 1061:
#line 7582 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str); }
    break;

  case 1062:
#line 7583 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.lex_str) = default_key_cache_base; }
    break;

  case 1063:
#line 7588 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_PRELOAD_KEYS;
            lex->alter_info.reset();
          }
    break;

  case 1064:
#line 7594 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1069:
#line 7609 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (3)].table), NULL, (yyvsp[(3) - (3)].num), TL_READ,
                                           MDL_SHARED_READ,
                                           Select->pop_index_hints()))
              MYSQL_YYABORT;
          }
    break;

  case 1070:
#line 7619 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (4)].table), NULL, (yyvsp[(4) - (4)].num), TL_READ,
                                           MDL_SHARED_READ,
                                           Select->pop_index_hints()))
              MYSQL_YYABORT;
          }
    break;

  case 1071:
#line 7629 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= ALTER_ADMIN_PARTITION;
          }
    break;

  case 1073:
#line 7636 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->select_lex.alloc_index_hints(YYTHD);
            Select->set_index_hint_type(INDEX_HINT_USE, 
                                        old_mode ? 
                                        INDEX_HINT_MASK_JOIN : 
                                        INDEX_HINT_MASK_ALL);
          }
    break;

  case 1075:
#line 7647 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { }
    break;

  case 1077:
#line 7653 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 1078:
#line 7654 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)= TL_OPTION_IGNORE_LEAVES; }
    break;

  case 1079:
#line 7664 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SELECT;
          }
    break;

  case 1082:
#line 7678 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            if (setup_select_in_parentheses(Lex))
              MYSQL_YYABORT;
          }
    break;

  case 1084:
#line 7688 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            if (setup_select_in_parentheses(Lex))
              MYSQL_YYABORT;
          }
    break;

  case 1086:
#line 7697 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            SELECT_LEX * sel= lex->current_select;
            if (lex->current_select->set_braces(0))
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            if (sel->linkage == UNION_TYPE &&
                sel->master_unit()->first_select()->braces)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
          }
    break;

  case 1088:
#line 7716 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            SELECT_LEX *sel= lex->current_select;
            if (sel->linkage != UNION_TYPE)
              mysql_init_select(lex);
            lex->current_select->parsing_place= SELECT_LIST;
          }
    break;

  case 1089:
#line 7724 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Select->parsing_place= NO_MATTER;
          }
    break;

  case 1091:
#line 7731 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1096:
#line 7741 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Select->context.table_list=
              Select->context.first_name_resolution_table=
                Select->table_list.first;
          }
    break;

  case 1099:
#line 7756 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            if (Select->options & SELECT_DISTINCT && Select->options & SELECT_ALL)
            {
              my_error(ER_WRONG_USAGE, MYF(0), "ALL", "DISTINCT");
              MYSQL_YYABORT;
            }
          }
    break;

  case 1103:
#line 7773 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            /* 
              Allow this flag only on the first top-level SELECT statement, if
              SQL_CACHE wasn't specified, and only once per query.
             */
            if (Lex->current_select != &Lex->select_lex)
            {
              my_error(ER_CANT_USE_OPTION_HERE, MYF(0), "SQL_NO_CACHE");
              MYSQL_YYABORT;
            }
            else if (Lex->select_lex.sql_cache == SELECT_LEX::SQL_CACHE)
            {
              my_error(ER_WRONG_USAGE, MYF(0), "SQL_CACHE", "SQL_NO_CACHE");
              MYSQL_YYABORT;
            }
            else if (Lex->select_lex.sql_cache == SELECT_LEX::SQL_NO_CACHE)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "SQL_NO_CACHE");
              MYSQL_YYABORT;
            }
            else
            {
              Lex->safe_to_cache_query=0;
              Lex->select_lex.options&= ~OPTION_TO_QUERY_CACHE;
              Lex->select_lex.sql_cache= SELECT_LEX::SQL_NO_CACHE;
            }
          }
    break;

  case 1104:
#line 7801 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            /* 
              Allow this flag only on the first top-level SELECT statement, if
              SQL_NO_CACHE wasn't specified, and only once per query.
             */
            if (Lex->current_select != &Lex->select_lex)
            {
              my_error(ER_CANT_USE_OPTION_HERE, MYF(0), "SQL_CACHE");
              MYSQL_YYABORT;
            }         
            else if (Lex->select_lex.sql_cache == SELECT_LEX::SQL_NO_CACHE)
            {
              my_error(ER_WRONG_USAGE, MYF(0), "SQL_NO_CACHE", "SQL_CACHE");
              MYSQL_YYABORT;
            }
            else if (Lex->select_lex.sql_cache == SELECT_LEX::SQL_CACHE)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "SQL_CACHE");
              MYSQL_YYABORT;
            }
            else
            {
              Lex->safe_to_cache_query=1;
              Lex->select_lex.options|= OPTION_TO_QUERY_CACHE;
              Lex->select_lex.sql_cache= SELECT_LEX::SQL_CACHE;
            }
          }
    break;

  case 1106:
#line 7833 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->current_select->set_lock_for_tables(TL_WRITE);
            lex->safe_to_cache_query=0;
          }
    break;

  case 1107:
#line 7839 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->current_select->
              set_lock_for_tables(TL_READ_WITH_SHARED_LOCKS);
            lex->safe_to_cache_query=0;
          }
    break;

  case 1110:
#line 7851 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            Item *item= new (thd->mem_root)
                          Item_field(&thd->lex->current_select->context,
                                     NULL, NULL, "*");
            if (item == NULL)
              MYSQL_YYABORT;
            if (add_item_to_list(thd, item))
              MYSQL_YYABORT;
            (thd->lex->current_select->with_wild)++;
          }
    break;

  case 1111:
#line 7866 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;

            if (add_item_to_list(thd, (yyvsp[(2) - (3)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1112:
#line 7873 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            DBUG_ASSERT((yyvsp[(1) - (4)].simple_string) < (yyvsp[(3) - (4)].simple_string));

            if (add_item_to_list(thd, (yyvsp[(2) - (4)].item)))
              MYSQL_YYABORT;
            if ((yyvsp[(4) - (4)].lex_str).str)
            {
              if (Lex->sql_command == SQLCOM_CREATE_VIEW &&
                  check_column_name((yyvsp[(4) - (4)].lex_str).str))
              {
                my_error(ER_WRONG_COLUMN_NAME, MYF(0), (yyvsp[(4) - (4)].lex_str).str);
                MYSQL_YYABORT;
              }
              (yyvsp[(2) - (4)].item)->is_autogenerated_name= FALSE;
              (yyvsp[(2) - (4)].item)->set_name((yyvsp[(4) - (4)].lex_str).str, (yyvsp[(4) - (4)].lex_str).length, system_charset_info);
            }
            else if (!(yyvsp[(2) - (4)].item)->name)
            {
              (yyvsp[(2) - (4)].item)->set_name((yyvsp[(1) - (4)].simple_string), (uint) ((yyvsp[(3) - (4)].simple_string) - (yyvsp[(1) - (4)].simple_string)), thd->charset());
            }
          }
    break;

  case 1113:
#line 7898 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.simple_string)= (char*) YYLIP->get_cpp_tok_start();
          }
    break;

  case 1114:
#line 7904 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.simple_string)= (char*) YYLIP->get_cpp_tok_end();
          }
    break;

  case 1115:
#line 7910 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.lex_str)=null_lex_str;}
    break;

  case 1116:
#line 7911 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(2) - (2)].lex_str); }
    break;

  case 1117:
#line 7912 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(2) - (2)].lex_str); }
    break;

  case 1118:
#line 7913 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str); }
    break;

  case 1119:
#line 7914 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str); }
    break;

  case 1120:
#line 7918 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1121:
#line 7919 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1122:
#line 7925 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            /*
              Design notes:
              Do not use a manually maintained stack like thd->lex->xxx_list,
              but use the internal bison stack ($$, $1 and $3) instead.
              Using the bison stack is:
              - more robust to changes in the grammar,
              - guaranteed to be in sync with the parser state,
              - better for performances (no memory allocation).
            */
            Item_cond_or *item1;
            Item_cond_or *item3;
            if (is_cond_or((yyvsp[(1) - (3)].item)))
            {
              item1= (Item_cond_or*) (yyvsp[(1) - (3)].item);
              if (is_cond_or((yyvsp[(3) - (3)].item)))
              {
                item3= (Item_cond_or*) (yyvsp[(3) - (3)].item);
                /*
                  (X1 OR X2) OR (Y1 OR Y2) ==> OR (X1, X2, Y1, Y2)
                */
                item3->add_at_head(item1->argument_list());
                (yyval.item) = (yyvsp[(3) - (3)].item);
              }
              else
              {
                /*
                  (X1 OR X2) OR Y ==> OR (X1, X2, Y)
                */
                item1->add((yyvsp[(3) - (3)].item));
                (yyval.item) = (yyvsp[(1) - (3)].item);
              }
            }
            else if (is_cond_or((yyvsp[(3) - (3)].item)))
            {
              item3= (Item_cond_or*) (yyvsp[(3) - (3)].item);
              /*
                X OR (Y1 OR Y2) ==> OR (X, Y1, Y2)
              */
              item3->add_at_head((yyvsp[(1) - (3)].item));
              (yyval.item) = (yyvsp[(3) - (3)].item);
            }
            else
            {
              /* X OR Y */
              (yyval.item) = new (YYTHD->mem_root) Item_cond_or((yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
              if ((yyval.item) == NULL)
                MYSQL_YYABORT;
            }
          }
    break;

  case 1123:
#line 7976 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            /* XOR is a proprietary extension */
            (yyval.item) = new (YYTHD->mem_root) Item_func_xor((yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1124:
#line 7983 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            /* See comments in rule expr: expr or expr */
            Item_cond_and *item1;
            Item_cond_and *item3;
            if (is_cond_and((yyvsp[(1) - (3)].item)))
            {
              item1= (Item_cond_and*) (yyvsp[(1) - (3)].item);
              if (is_cond_and((yyvsp[(3) - (3)].item)))
              {
                item3= (Item_cond_and*) (yyvsp[(3) - (3)].item);
                /*
                  (X1 AND X2) AND (Y1 AND Y2) ==> AND (X1, X2, Y1, Y2)
                */
                item3->add_at_head(item1->argument_list());
                (yyval.item) = (yyvsp[(3) - (3)].item);
              }
              else
              {
                /*
                  (X1 AND X2) AND Y ==> AND (X1, X2, Y)
                */
                item1->add((yyvsp[(3) - (3)].item));
                (yyval.item) = (yyvsp[(1) - (3)].item);
              }
            }
            else if (is_cond_and((yyvsp[(3) - (3)].item)))
            {
              item3= (Item_cond_and*) (yyvsp[(3) - (3)].item);
              /*
                X AND (Y1 AND Y2) ==> AND (X, Y1, Y2)
              */
              item3->add_at_head((yyvsp[(1) - (3)].item));
              (yyval.item) = (yyvsp[(3) - (3)].item);
            }
            else
            {
              /* X AND Y */
              (yyval.item) = new (YYTHD->mem_root) Item_cond_and((yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
              if ((yyval.item) == NULL)
                MYSQL_YYABORT;
            }
          }
    break;

  case 1125:
#line 8026 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= negate_expression(YYTHD, (yyvsp[(2) - (2)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1126:
#line 8032 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_istrue((yyvsp[(1) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1127:
#line 8038 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_isnottrue((yyvsp[(1) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1128:
#line 8044 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_isfalse((yyvsp[(1) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1129:
#line 8050 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_isnotfalse((yyvsp[(1) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1130:
#line 8056 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_isnull((yyvsp[(1) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1131:
#line 8062 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_isnotnull((yyvsp[(1) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1133:
#line 8072 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_isnull((yyvsp[(1) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1134:
#line 8078 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_isnotnull((yyvsp[(1) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1135:
#line 8084 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_equal((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1136:
#line 8090 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= (*(yyvsp[(2) - (3)].boolfunc2creator))(0)->create((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1137:
#line 8096 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= all_any_subquery_creator((yyvsp[(1) - (6)].item), (yyvsp[(2) - (6)].boolfunc2creator), (yyvsp[(3) - (6)].num), (yyvsp[(5) - (6)].select_lex));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1139:
#line 8106 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_in_subselect((yyvsp[(1) - (5)].item), (yyvsp[(4) - (5)].select_lex));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1140:
#line 8112 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            Item *item= new (thd->mem_root) Item_in_subselect((yyvsp[(1) - (6)].item), (yyvsp[(5) - (6)].select_lex));
            if (item == NULL)
              MYSQL_YYABORT;
            (yyval.item)= negate_expression(thd, item);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1141:
#line 8122 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= handle_sql2003_note184_exception(YYTHD, (yyvsp[(1) - (5)].item), true, (yyvsp[(4) - (5)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1142:
#line 8128 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { 
            (yyvsp[(6) - (7)].item_list)->push_front((yyvsp[(4) - (7)].item));
            (yyvsp[(6) - (7)].item_list)->push_front((yyvsp[(1) - (7)].item));
            (yyval.item)= new (YYTHD->mem_root) Item_func_in(*(yyvsp[(6) - (7)].item_list));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1143:
#line 8136 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= handle_sql2003_note184_exception(YYTHD, (yyvsp[(1) - (6)].item), false, (yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1144:
#line 8142 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyvsp[(7) - (8)].item_list)->push_front((yyvsp[(5) - (8)].item));
            (yyvsp[(7) - (8)].item_list)->push_front((yyvsp[(1) - (8)].item));
            Item_func_in *item = new (YYTHD->mem_root) Item_func_in(*(yyvsp[(7) - (8)].item_list));
            if (item == NULL)
              MYSQL_YYABORT;
            item->negate();
            (yyval.item)= item;
          }
    break;

  case 1145:
#line 8152 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_between((yyvsp[(1) - (5)].item),(yyvsp[(3) - (5)].item),(yyvsp[(5) - (5)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1146:
#line 8158 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Item_func_between *item;
            item= new (YYTHD->mem_root) Item_func_between((yyvsp[(1) - (6)].item),(yyvsp[(4) - (6)].item),(yyvsp[(6) - (6)].item));
            if (item == NULL)
              MYSQL_YYABORT;
            item->negate();
            (yyval.item)= item;
          }
    break;

  case 1147:
#line 8167 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Item *item1= new (YYTHD->mem_root) Item_func_soundex((yyvsp[(1) - (4)].item));
            Item *item4= new (YYTHD->mem_root) Item_func_soundex((yyvsp[(4) - (4)].item));
            if ((item1 == NULL) || (item4 == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (YYTHD->mem_root) Item_func_eq(item1, item4);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1148:
#line 8177 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_like((yyvsp[(1) - (4)].item),(yyvsp[(3) - (4)].item),(yyvsp[(4) - (4)].item),Lex->escape_used);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1149:
#line 8183 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Item *item= new (YYTHD->mem_root) Item_func_like((yyvsp[(1) - (5)].item),(yyvsp[(4) - (5)].item),(yyvsp[(5) - (5)].item),
                                                             Lex->escape_used);
            if (item == NULL)
              MYSQL_YYABORT;
            (yyval.item)= new (YYTHD->mem_root) Item_func_not(item);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1150:
#line 8193 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_regex((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1151:
#line 8199 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Item *item= new (YYTHD->mem_root) Item_func_regex((yyvsp[(1) - (4)].item),(yyvsp[(4) - (4)].item));
            if (item == NULL)
              MYSQL_YYABORT;
            (yyval.item)= negate_expression(YYTHD, item);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1153:
#line 8212 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_bit_or((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1154:
#line 8218 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_bit_and((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1155:
#line 8224 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_shift_left((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1156:
#line 8230 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_shift_right((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1157:
#line 8236 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_plus((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1158:
#line 8242 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_minus((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1159:
#line 8248 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[(1) - (5)].item),(yyvsp[(4) - (5)].item),(yyvsp[(5) - (5)].interval),0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1160:
#line 8254 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[(1) - (5)].item),(yyvsp[(4) - (5)].item),(yyvsp[(5) - (5)].interval),1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1161:
#line 8260 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_mul((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1162:
#line 8266 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_div((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1163:
#line 8272 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_mod((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1164:
#line 8278 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_int_div((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1165:
#line 8284 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_mod((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1166:
#line 8290 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_bit_xor((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1176:
#line 8319 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_eq_creator; }
    break;

  case 1177:
#line 8320 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_ge_creator; }
    break;

  case 1178:
#line 8321 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_gt_creator; }
    break;

  case 1179:
#line 8322 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_le_creator; }
    break;

  case 1180:
#line 8323 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_lt_creator; }
    break;

  case 1181:
#line 8324 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_ne_creator; }
    break;

  case 1182:
#line 8328 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num) = 1; }
    break;

  case 1183:
#line 8329 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num) = 0; }
    break;

  case 1189:
#line 8339 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            Item *i1= new (thd->mem_root) Item_string((yyvsp[(3) - (3)].lex_str).str,
                                                      (yyvsp[(3) - (3)].lex_str).length,
                                                      thd->charset());
            if (i1 == NULL)
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_func_set_collation((yyvsp[(1) - (3)].item), i1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1194:
#line 8355 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_concat((yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1195:
#line 8361 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= (yyvsp[(2) - (2)].item);
          }
    break;

  case 1196:
#line 8365 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_neg((yyvsp[(2) - (2)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1197:
#line 8371 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_bit_neg((yyvsp[(2) - (2)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1198:
#line 8377 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= negate_expression(YYTHD, (yyvsp[(2) - (2)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1199:
#line 8383 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { 
            (yyval.item)= new (YYTHD->mem_root) Item_singlerow_subselect((yyvsp[(2) - (3)].select_lex));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1200:
#line 8389 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(2) - (3)].item); }
    break;

  case 1201:
#line 8391 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyvsp[(4) - (5)].item_list)->push_front((yyvsp[(2) - (5)].item));
            (yyval.item)= new (YYTHD->mem_root) Item_row(*(yyvsp[(4) - (5)].item_list));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1202:
#line 8398 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyvsp[(5) - (6)].item_list)->push_front((yyvsp[(3) - (6)].item));
            (yyval.item)= new (YYTHD->mem_root) Item_row(*(yyvsp[(5) - (6)].item_list));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1203:
#line 8405 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_exists_subselect((yyvsp[(3) - (4)].select_lex));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1204:
#line 8411 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Item_string *item;
            (yyval.item)= NULL;
            /*
              If "expr" is reasonably short pure ASCII string literal,
              try to parse known ODBC style date, time or timestamp literals,
              e.g:
              SELECT {d'2001-01-01'};
              SELECT {t'10:20:30'};
              SELECT {ts'2001-01-01 10:20:30'};
            */
            if ((yyvsp[(3) - (4)].item)->type() == Item::STRING_ITEM &&
               (item= (Item_string *) (yyvsp[(3) - (4)].item)) &&
                item->collation.repertoire == MY_REPERTOIRE_ASCII &&
                item->str_value.length() < MAX_DATE_STRING_REP_LENGTH * 4)
            {
              enum_field_types type= MYSQL_TYPE_STRING;
              ErrConvString str(&item->str_value);
              LEX_STRING *ls= &(yyvsp[(2) - (4)].lex_str);
              if (ls->length == 1)
              {
                if (ls->str[0] == 'd')  /* {d'2001-01-01'} */
                  type= MYSQL_TYPE_DATE;
                else if (ls->str[0] == 't') /* {t'10:20:30'} */
                  type= MYSQL_TYPE_TIME;
              }
              else if (ls->length == 2) /* {ts'2001-01-01 10:20:30'} */
              {
                if (ls->str[0] == 't' && ls->str[1] == 's')
                  type= MYSQL_TYPE_DATETIME;
              }
              if (type != MYSQL_TYPE_STRING)
                (yyval.item)= create_temporal_literal(YYTHD,
                                            str.ptr(), str.length(),
                                            system_charset_info,
                                            type, false);
            }
            if ((yyval.item) == NULL)
              (yyval.item)= (yyvsp[(3) - (4)].item);
          }
    break;

  case 1205:
#line 8452 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyvsp[(2) - (7)].item_list)->push_front((yyvsp[(5) - (7)].item));
            Item_func_match *i1= new (YYTHD->mem_root) Item_func_match(*(yyvsp[(2) - (7)].item_list), (yyvsp[(6) - (7)].num));
            if (i1 == NULL)
              MYSQL_YYABORT;
            Select->add_ftfunc_to_list(i1);
            (yyval.item)= i1;
          }
    break;

  case 1206:
#line 8461 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= create_func_cast(YYTHD, (yyvsp[(2) - (2)].item), ITEM_CAST_CHAR, NULL, NULL,
                                 &my_charset_bin);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1207:
#line 8468 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            (yyval.item)= create_func_cast(YYTHD, (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].cast_type), lex->length, lex->dec,
                                 lex->charset);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1208:
#line 8476 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_case(* (yyvsp[(3) - (5)].item_list), (yyvsp[(2) - (5)].item), (yyvsp[(4) - (5)].item) );
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1209:
#line 8482 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= create_func_cast(YYTHD, (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].cast_type), Lex->length, Lex->dec,
                                 Lex->charset);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1210:
#line 8489 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_conv_charset((yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].charset));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1211:
#line 8495 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            if ((yyvsp[(3) - (4)].item)->is_splocal())
            {
              Item_splocal *il= static_cast<Item_splocal *>((yyvsp[(3) - (4)].item));

              my_error(ER_WRONG_COLUMN_NAME, MYF(0), il->my_name()->str);
              MYSQL_YYABORT;
            }
            (yyval.item)= new (YYTHD->mem_root) Item_default_value(Lex->current_context(),
                                                         (yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1212:
#line 8509 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_insert_value(Lex->current_context(),
                                                        (yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1213:
#line 8517 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[(5) - (5)].item),(yyvsp[(2) - (5)].item),(yyvsp[(3) - (5)].interval),0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1214:
#line 8532 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_char(*(yyvsp[(3) - (4)].item_list));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1215:
#line 8538 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_char(*(yyvsp[(3) - (6)].item_list), (yyvsp[(5) - (6)].charset));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1216:
#line 8544 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_current_user(Lex->current_context());
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query= 0;
          }
    break;

  case 1217:
#line 8552 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_typecast((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1218:
#line 8558 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_dayofmonth((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1219:
#line 8564 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_hour((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1220:
#line 8570 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_insert((yyvsp[(3) - (10)].item),(yyvsp[(5) - (10)].item),(yyvsp[(7) - (10)].item),(yyvsp[(9) - (10)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1221:
#line 8576 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            List<Item> *list= new (thd->mem_root) List<Item>;
            if (list == NULL)
              MYSQL_YYABORT;
            list->push_front((yyvsp[(5) - (6)].item));
            list->push_front((yyvsp[(3) - (6)].item));
            Item_row *item= new (thd->mem_root) Item_row(*list);
            if (item == NULL)
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_func_interval(item);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1222:
#line 8591 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            (yyvsp[(7) - (8)].item_list)->push_front((yyvsp[(5) - (8)].item));
            (yyvsp[(7) - (8)].item_list)->push_front((yyvsp[(3) - (8)].item));
            Item_row *item= new (thd->mem_root) Item_row(*(yyvsp[(7) - (8)].item_list));
            if (item == NULL)
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_func_interval(item);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1223:
#line 8603 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_left((yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1224:
#line 8609 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_minute((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1225:
#line 8615 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_month((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1226:
#line 8621 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_right((yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1227:
#line 8627 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_second((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1228:
#line 8633 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_time_typecast((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1229:
#line 8639 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_datetime_typecast((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1230:
#line 8645 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_add_time((yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item), 1, 0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1231:
#line 8651 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_trim((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1232:
#line 8657 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_ltrim((yyvsp[(6) - (7)].item),(yyvsp[(4) - (7)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1233:
#line 8663 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_rtrim((yyvsp[(6) - (7)].item),(yyvsp[(4) - (7)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1234:
#line 8669 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_trim((yyvsp[(6) - (7)].item),(yyvsp[(4) - (7)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1235:
#line 8675 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_ltrim((yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1236:
#line 8681 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_rtrim((yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1237:
#line 8687 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_trim((yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1238:
#line 8693 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_trim((yyvsp[(5) - (6)].item),(yyvsp[(3) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1239:
#line 8699 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_user();
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query=0;
          }
    break;

  case 1240:
#line 8707 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_year((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1241:
#line 8728 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item),
                                                             INTERVAL_DAY, 0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1242:
#line 8735 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[(3) - (8)].item), (yyvsp[(6) - (8)].item), (yyvsp[(7) - (8)].interval), 0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1243:
#line 8741 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_curdate_local();
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
    break;

  case 1244:
#line 8748 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_curtime_local((yyvsp[(2) - (2)].ulong_num));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
    break;

  case 1245:
#line 8756 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[(3) - (8)].item),(yyvsp[(6) - (8)].item),(yyvsp[(7) - (8)].interval),0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1246:
#line 8763 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[(3) - (8)].item),(yyvsp[(6) - (8)].item),(yyvsp[(7) - (8)].interval),1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1247:
#line 8769 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)=new (YYTHD->mem_root) Item_extract( (yyvsp[(3) - (6)].interval), (yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1248:
#line 8775 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_get_format((yyvsp[(3) - (6)].date_time_type), (yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1249:
#line 8781 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= (yyvsp[(1) - (1)].item);
            Lex->safe_to_cache_query= 0;
          }
    break;

  case 1250:
#line 8786 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item) = new (YYTHD->mem_root) Item_func_locate((yyvsp[(5) - (6)].item),(yyvsp[(3) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1251:
#line 8792 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item),
                                                             INTERVAL_DAY, 1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1252:
#line 8799 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[(3) - (8)].item), (yyvsp[(6) - (8)].item), (yyvsp[(7) - (8)].interval), 1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1253:
#line 8805 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_substr((yyvsp[(3) - (8)].item),(yyvsp[(5) - (8)].item),(yyvsp[(7) - (8)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1254:
#line 8811 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_substr((yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1255:
#line 8817 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_substr((yyvsp[(3) - (8)].item),(yyvsp[(5) - (8)].item),(yyvsp[(7) - (8)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1256:
#line 8823 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_substr((yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1257:
#line 8829 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            /*
              Unlike other time-related functions, SYSDATE() is
              replication-unsafe because it is not affected by the
              TIMESTAMP variable.  It is unsafe even if
              sysdate_is_now=1, because the slave may have
              sysdate_is_now=0.
            */
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            if (global_system_variables.sysdate_is_now == 0)
              (yyval.item)= new (YYTHD->mem_root) Item_func_sysdate_local((yyvsp[(2) - (2)].ulong_num));
            else
              (yyval.item)= new (YYTHD->mem_root) Item_func_now_local((yyvsp[(2) - (2)].ulong_num));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
    break;

  case 1258:
#line 8847 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[(7) - (8)].item),(yyvsp[(5) - (8)].item),(yyvsp[(3) - (8)].interval_time_st),0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1259:
#line 8853 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_timestamp_diff((yyvsp[(5) - (8)].item),(yyvsp[(7) - (8)].item),(yyvsp[(3) - (8)].interval_time_st));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1260:
#line 8859 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_curdate_utc();
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
    break;

  case 1261:
#line 8866 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_curtime_utc((yyvsp[(2) - (2)].ulong_num));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
    break;

  case 1262:
#line 8873 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_now_utc((yyvsp[(2) - (2)].ulong_num));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
    break;

  case 1263:
#line 8888 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_ascii((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1264:
#line 8894 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_charset((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1265:
#line 8900 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_coalesce(* (yyvsp[(3) - (4)].item_list));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1266:
#line 8906 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_collation((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1267:
#line 8912 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_database();
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
    break;

  case 1268:
#line 8919 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_if((yyvsp[(3) - (8)].item),(yyvsp[(5) - (8)].item),(yyvsp[(7) - (8)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1269:
#line 8925 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_microsecond((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1270:
#line 8931 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item) = new (YYTHD->mem_root) Item_func_mod((yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1271:
#line 8937 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)=  new (YYTHD->mem_root) Item_func_old_password((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1272:
#line 8943 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            Item* i1;
            if (thd->variables.old_passwords)
              i1= new (thd->mem_root) Item_func_old_password((yyvsp[(3) - (4)].item));
            else
              i1= new (thd->mem_root) Item_func_password((yyvsp[(3) - (4)].item));
            if (i1 == NULL)
              MYSQL_YYABORT;
            (yyval.item)= i1;
          }
    break;

  case 1273:
#line 8955 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item) = new (YYTHD->mem_root) Item_func_quarter((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1274:
#line 8961 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_repeat((yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1275:
#line 8967 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_replace((yyvsp[(3) - (8)].item),(yyvsp[(5) - (8)].item),(yyvsp[(7) - (8)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1276:
#line 8973 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_reverse((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1277:
#line 8979 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_row_count();
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query= 0;
          }
    break;

  case 1278:
#line 8987 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_round((yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item),1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1279:
#line 8993 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            Item *i1= new (thd->mem_root) Item_int((char*) "0",
                                           thd->variables.default_week_format,
                                                   1);
            if (i1 == NULL)
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_func_week((yyvsp[(3) - (4)].item), i1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1280:
#line 9005 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_week((yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1281:
#line 9011 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_weight_string((yyvsp[(3) - (5)].item), 0, 0, (yyvsp[(4) - (5)].ulong_num));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1282:
#line 9017 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root)
                Item_func_weight_string((yyvsp[(3) - (8)].item), 0, (yyvsp[(6) - (8)].ulong_num),
                                        (yyvsp[(7) - (8)].ulong_num) | MY_STRXFRM_PAD_WITH_SPACE);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1283:
#line 9025 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Item *item= new (YYTHD->mem_root) Item_char_typecast((yyvsp[(3) - (7)].item), (yyvsp[(6) - (7)].ulong_num), &my_charset_bin);
            if (item == NULL)
              MYSQL_YYABORT;
            (yyval.item)= new (YYTHD->mem_root)
                Item_func_weight_string(item, 0, (yyvsp[(6) - (7)].ulong_num), MY_STRXFRM_PAD_WITH_SPACE);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1284:
#line 9035 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_weight_string((yyvsp[(3) - (10)].item), (yyvsp[(5) - (10)].ulong_num), (yyvsp[(7) - (10)].ulong_num), (yyvsp[(9) - (10)].ulong_num));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1285:
#line 9041 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
#ifdef HAVE_SPATIAL
            (yyval.item)= (yyvsp[(1) - (1)].item);
            /* $1 may be NULL, GEOM_NEW not tested for out of memory */
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
#else
            my_error(ER_FEATURE_DISABLED, MYF(0),
                     sym_group_geom.name, sym_group_geom.needed_define);
            MYSQL_YYABORT;
#endif
          }
    break;

  case 1286:
#line 9057 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= GEOM_NEW(YYTHD,
                         Item_func_spatial_mbr_rel((yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item),
                                               Item_func::SP_CONTAINS_FUNC));
          }
    break;

  case 1287:
#line 9063 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= GEOM_NEW(YYTHD,
                         Item_func_spatial_collection(* (yyvsp[(3) - (4)].item_list),
                           Geometry::wkb_geometrycollection,
                           Geometry::wkb_point));
          }
    break;

  case 1288:
#line 9070 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= GEOM_NEW(YYTHD,
                         Item_func_spatial_collection(* (yyvsp[(3) - (4)].item_list),
                           Geometry::wkb_linestring,
                           Geometry::wkb_point));
          }
    break;

  case 1289:
#line 9077 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= GEOM_NEW(YYTHD,
                         Item_func_spatial_collection(* (yyvsp[(3) - (4)].item_list),
                           Geometry::wkb_multilinestring,
                           Geometry::wkb_linestring));
          }
    break;

  case 1290:
#line 9084 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= GEOM_NEW(YYTHD,
                         Item_func_spatial_collection(* (yyvsp[(3) - (4)].item_list),
                           Geometry::wkb_multipoint,
                           Geometry::wkb_point));
          }
    break;

  case 1291:
#line 9091 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= GEOM_NEW(YYTHD,
                         Item_func_spatial_collection(* (yyvsp[(3) - (4)].item_list),
                           Geometry::wkb_multipolygon,
                           Geometry::wkb_polygon));
          }
    break;

  case 1292:
#line 9098 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= GEOM_NEW(YYTHD, Item_func_point((yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item)));
          }
    break;

  case 1293:
#line 9102 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= GEOM_NEW(YYTHD,
                         Item_func_spatial_collection(* (yyvsp[(3) - (4)].item_list),
                           Geometry::wkb_polygon,
                           Geometry::wkb_linestring));
          }
    break;

  case 1294:
#line 9121 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
#ifdef HAVE_DLOPEN
            udf_func *udf= 0;
            LEX *lex= Lex;
            if (using_udf_functions &&
                (udf= find_udf((yyvsp[(1) - (2)].lex_str).str, (yyvsp[(1) - (2)].lex_str).length)) &&
                udf->type == UDFTYPE_AGGREGATE)
            {
              if (lex->current_select->inc_in_sum_expr())
              {
                my_parse_error(ER(ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
              }
            }
            /* Temporary placing the result of find_udf in $3 */
            (yyval.udf)= udf;
#endif
          }
    break;

  case 1295:
#line 9140 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            Create_func *builder;
            Item *item= NULL;

            if (check_routine_name(&(yyvsp[(1) - (5)].lex_str)))
            {
              MYSQL_YYABORT;
            }

            /*
              Implementation note:
              names are resolved with the following order:
              - MySQL native functions,
              - User Defined Functions,
              - Stored Functions (assuming the current <use> database)

              This will be revised with WL#2128 (SQL PATH)
            */
            builder= find_native_function_builder(thd, (yyvsp[(1) - (5)].lex_str));
            if (builder)
            {
              item= builder->create_func(thd, (yyvsp[(1) - (5)].lex_str), (yyvsp[(4) - (5)].item_list));
            }
            else
            {
#ifdef HAVE_DLOPEN
              /* Retrieving the result of find_udf */
              udf_func *udf= (yyvsp[(3) - (5)].udf);

              if (udf)
              {
                if (udf->type == UDFTYPE_AGGREGATE)
                {
                  Select->in_sum_expr--;
                }

                item= Create_udf_func::s_singleton.create(thd, udf, (yyvsp[(4) - (5)].item_list));
              }
              else
#endif
              {
                builder= find_qualified_function_builder(thd);
                DBUG_ASSERT(builder);
                item= builder->create_func(thd, (yyvsp[(1) - (5)].lex_str), (yyvsp[(4) - (5)].item_list));
              }
            }

            if (! ((yyval.item)= item))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 1296:
#line 9194 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            Create_qfunc *builder;
            Item *item= NULL;

            /*
              The following in practice calls:
              <code>Create_sp_func::create()</code>
              and builds a stored function.

              However, it's important to maintain the interface between the
              parser and the implementation in item_create.cc clean,
              since this will change with WL#2128 (SQL PATH):
              - INFORMATION_SCHEMA.version() is the SQL 99 syntax for the native
              function version(),
              - MySQL.version() is the SQL 2003 syntax for the native function
              version() (a vendor can specify any schema).
            */

            if (!(yyvsp[(1) - (6)].lex_str).str || check_and_convert_db_name(&(yyvsp[(1) - (6)].lex_str), FALSE))
            {
              my_error(ER_WRONG_DB_NAME, MYF(0), (yyvsp[(1) - (6)].lex_str).str);
              MYSQL_YYABORT;
            }
            if (check_routine_name(&(yyvsp[(3) - (6)].lex_str)))
            {
              MYSQL_YYABORT;
            }

            builder= find_qualified_function_builder(thd);
            DBUG_ASSERT(builder);
            item= builder->create(thd, (yyvsp[(1) - (6)].lex_str), (yyvsp[(3) - (6)].lex_str), true, (yyvsp[(5) - (6)].item_list));

            if (! ((yyval.item)= item))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 1297:
#line 9236 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)= (yyvsp[(1) - (2)].num) | (yyvsp[(2) - (2)].num); }
    break;

  case 1298:
#line 9238 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)= FT_BOOL; }
    break;

  case 1299:
#line 9242 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)= FT_NL; }
    break;

  case 1300:
#line 9243 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)= FT_NL; }
    break;

  case 1301:
#line 9247 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)= 0;         }
    break;

  case 1302:
#line 9248 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)= FT_EXPAND; }
    break;

  case 1303:
#line 9252 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.item_list)= NULL; }
    break;

  case 1304:
#line 9253 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.item_list)= (yyvsp[(1) - (1)].item_list); }
    break;

  case 1305:
#line 9258 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item_list)= new (YYTHD->mem_root) List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[(1) - (1)].item));
          }
    break;

  case 1306:
#line 9265 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (3)].item_list)->push_back((yyvsp[(3) - (3)].item));
            (yyval.item_list)= (yyvsp[(1) - (3)].item_list);
          }
    break;

  case 1307:
#line 9273 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            /*
             Use Item::name as a storage for the attribute value of user
             defined function argument. It is safe to use Item::name
             because the syntax will not allow having an explicit name here.
             See WL#1017 re. udf attributes.
            */
            if ((yyvsp[(4) - (4)].lex_str).str)
            {
              (yyvsp[(2) - (4)].item)->is_autogenerated_name= FALSE;
              (yyvsp[(2) - (4)].item)->set_name((yyvsp[(4) - (4)].lex_str).str, (yyvsp[(4) - (4)].lex_str).length, system_charset_info);
            }
            /* 
               A field has to have its proper name in order for name
               resolution to work, something we are only guaranteed if we
               parse it out. If we hijack the input stream with
               remember_name we may get quoted or escaped names.
            */
            else if ((yyvsp[(2) - (4)].item)->type() != Item::FIELD_ITEM)
              (yyvsp[(2) - (4)].item)->set_name((yyvsp[(1) - (4)].simple_string), (uint) ((yyvsp[(3) - (4)].simple_string) - (yyvsp[(1) - (4)].simple_string)), YYTHD->charset());
            (yyval.item)= (yyvsp[(2) - (4)].item);
          }
    break;

  case 1308:
#line 9299 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_avg((yyvsp[(3) - (4)].item), FALSE);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1309:
#line 9305 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_avg((yyvsp[(4) - (5)].item), TRUE);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1310:
#line 9311 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_and((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1311:
#line 9317 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_or((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1312:
#line 9323 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_xor((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1313:
#line 9329 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Item *item= new (YYTHD->mem_root) Item_int((int32) 0L,1);
            if (item == NULL)
              MYSQL_YYABORT;
            (yyval.item)= new (YYTHD->mem_root) Item_sum_count(item);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1314:
#line 9338 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_count((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1315:
#line 9344 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Select->in_sum_expr++; }
    break;

  case 1316:
#line 9346 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Select->in_sum_expr--; }
    break;

  case 1317:
#line 9348 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_count(* (yyvsp[(5) - (7)].item_list));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1318:
#line 9354 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_min((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1319:
#line 9365 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_min((yyvsp[(4) - (5)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1320:
#line 9371 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_max((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1321:
#line 9377 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_max((yyvsp[(4) - (5)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1322:
#line 9383 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_std((yyvsp[(3) - (4)].item), 0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1323:
#line 9389 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_variance((yyvsp[(3) - (4)].item), 0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1324:
#line 9395 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_std((yyvsp[(3) - (4)].item), 1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1325:
#line 9401 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_variance((yyvsp[(3) - (4)].item), 1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1326:
#line 9407 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_sum((yyvsp[(3) - (4)].item), FALSE);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1327:
#line 9413 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_sum((yyvsp[(4) - (5)].item), TRUE);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1328:
#line 9419 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Select->in_sum_expr++; }
    break;

  case 1329:
#line 9423 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            SELECT_LEX *sel= Select;
            sel->in_sum_expr--;
            (yyval.item)= new (YYTHD->mem_root)
                  Item_func_group_concat(Lex->current_context(), (yyvsp[(3) - (8)].num), (yyvsp[(5) - (8)].item_list),
                                         sel->gorder_list, (yyvsp[(7) - (8)].string));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            (yyvsp[(5) - (8)].item_list)->empty();
          }
    break;

  case 1330:
#line 9437 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            if (! Lex->parsing_options.allows_variable)
            {
              my_error(ER_VIEW_SELECT_VARIABLE, MYF(0));
              MYSQL_YYABORT;
            }
          }
    break;

  case 1331:
#line 9445 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= (yyvsp[(3) - (3)].item);
          }
    break;

  case 1332:
#line 9452 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Item_func_set_user_var *item;
            (yyval.item)= item= new (YYTHD->mem_root) Item_func_set_user_var((yyvsp[(1) - (3)].lex_str), (yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            LEX *lex= Lex;
            lex->uncacheable(UNCACHEABLE_RAND);
            lex->set_var_list.push_back(item);
          }
    break;

  case 1333:
#line 9462 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_get_user_var((yyvsp[(1) - (1)].lex_str));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            LEX *lex= Lex;
            lex->uncacheable(UNCACHEABLE_RAND);
          }
    break;

  case 1334:
#line 9470 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            /* disallow "SELECT @@global.global.variable" */
            if ((yyvsp[(3) - (4)].lex_str).str && (yyvsp[(4) - (4)].lex_str).str && check_reserved_words(&(yyvsp[(3) - (4)].lex_str)))
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            if (!((yyval.item)= get_system_var(YYTHD, (yyvsp[(2) - (4)].var_type), (yyvsp[(3) - (4)].lex_str), (yyvsp[(4) - (4)].lex_str))))
              MYSQL_YYABORT;
            if (!((Item_func_get_system_var*) (yyval.item))->is_written_to_binlog())
              Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_VARIABLE);
          }
    break;

  case 1335:
#line 9485 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num) = 0; }
    break;

  case 1336:
#line 9486 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num) = 1; }
    break;

  case 1337:
#line 9491 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.string)= new (YYTHD->mem_root) String(",", 1, &my_charset_latin1);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1338:
#line 9496 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.string) = (yyvsp[(2) - (2)].string); }
    break;

  case 1339:
#line 9501 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Select->gorder_list = NULL;
          }
    break;

  case 1340:
#line 9505 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            SELECT_LEX *select= Select;
            select->gorder_list= new (YYTHD->mem_root)
                                   SQL_I_List<ORDER>(select->order_list);
            if (select->gorder_list == NULL)
              MYSQL_YYABORT;
            select->order_list.empty();
          }
    break;

  case 1341:
#line 9517 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->current_select->inc_in_sum_expr())
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
          }
    break;

  case 1342:
#line 9526 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Select->in_sum_expr--;
            (yyval.item)= (yyvsp[(3) - (3)].item);
          }
    break;

  case 1343:
#line 9534 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_CHAR; Lex->charset= &my_charset_bin; Lex->dec= 0; }
    break;

  case 1344:
#line 9536 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_CHAR; Lex->dec= 0; }
    break;

  case 1345:
#line 9538 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_CHAR; Lex->charset= national_charset_info; Lex->dec=0; }
    break;

  case 1346:
#line 9540 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_SIGNED_INT; Lex->charset= NULL; Lex->dec=Lex->length= (char*)0; }
    break;

  case 1347:
#line 9542 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_SIGNED_INT; Lex->charset= NULL; Lex->dec=Lex->length= (char*)0; }
    break;

  case 1348:
#line 9544 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_UNSIGNED_INT; Lex->charset= NULL; Lex->dec=Lex->length= (char*)0; }
    break;

  case 1349:
#line 9546 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_UNSIGNED_INT; Lex->charset= NULL; Lex->dec=Lex->length= (char*)0; }
    break;

  case 1350:
#line 9548 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.cast_type)= ITEM_CAST_DATE; Lex->charset= NULL; Lex->dec= Lex->length= (char *) 0; }
    break;

  case 1351:
#line 9550 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.cast_type)= ITEM_CAST_TIME; Lex->charset= NULL; Lex->length= (char *) 0; }
    break;

  case 1352:
#line 9552 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.cast_type)= ITEM_CAST_DATETIME; Lex->charset= NULL; Lex->length= (char *) 0; }
    break;

  case 1353:
#line 9554 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_DECIMAL; Lex->charset= NULL; }
    break;

  case 1354:
#line 9558 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.item_list)= NULL; }
    break;

  case 1355:
#line 9559 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.item_list)= (yyvsp[(1) - (1)].item_list);}
    break;

  case 1356:
#line 9564 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item_list)= new (YYTHD->mem_root) List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[(1) - (1)].item));
          }
    break;

  case 1357:
#line 9571 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (3)].item_list)->push_back((yyvsp[(3) - (3)].item));
            (yyval.item_list)= (yyvsp[(1) - (3)].item_list);
          }
    break;

  case 1358:
#line 9578 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.item_list)= (yyvsp[(1) - (1)].item_list); }
    break;

  case 1359:
#line 9579 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.item_list)= (yyvsp[(2) - (3)].item_list); }
    break;

  case 1360:
#line 9584 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item_list)= new (YYTHD->mem_root) List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[(1) - (1)].item));
          }
    break;

  case 1361:
#line 9591 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (3)].item_list)->push_back((yyvsp[(3) - (3)].item));
            (yyval.item_list)= (yyvsp[(1) - (3)].item_list);
          }
    break;

  case 1362:
#line 9598 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.item)= NULL; }
    break;

  case 1363:
#line 9599 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].item); }
    break;

  case 1364:
#line 9603 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.item)= NULL; }
    break;

  case 1365:
#line 9604 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(2) - (2)].item); }
    break;

  case 1366:
#line 9609 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item_list)= new List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[(2) - (4)].item));
            (yyval.item_list)->push_back((yyvsp[(4) - (4)].item));
          }
    break;

  case 1367:
#line 9617 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (5)].item_list)->push_back((yyvsp[(3) - (5)].item));
            (yyvsp[(1) - (5)].item_list)->push_back((yyvsp[(5) - (5)].item));
            (yyval.item_list)= (yyvsp[(1) - (5)].item_list);
          }
    break;

  case 1368:
#line 9627 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.table_list)=(yyvsp[(1) - (1)].table_list); }
    break;

  case 1369:
#line 9629 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (!((yyval.table_list)= lex->current_select->nest_last_join(lex->thd)))
              MYSQL_YYABORT;
          }
    break;

  case 1370:
#line 9637 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { MYSQL_YYABORT_UNLESS((yyval.table_list)=(yyvsp[(1) - (1)].table_list)); }
    break;

  case 1371:
#line 9648 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.table_list)=(yyvsp[(1) - (1)].table_list); }
    break;

  case 1372:
#line 9649 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.table_list)=(yyvsp[(3) - (4)].table_list); }
    break;

  case 1373:
#line 9655 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.table_list)=(yyvsp[(1) - (1)].table_list); }
    break;

  case 1374:
#line 9657 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (3)].table_list) && ((yyval.table_list)=(yyvsp[(3) - (3)].table_list)));
          }
    break;

  case 1375:
#line 9677 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { MYSQL_YYABORT_UNLESS((yyvsp[(1) - (3)].table_list) && ((yyval.table_list)=(yyvsp[(3) - (3)].table_list))); }
    break;

  case 1376:
#line 9679 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { MYSQL_YYABORT_UNLESS((yyvsp[(1) - (3)].table_list) && ((yyval.table_list)=(yyvsp[(3) - (3)].table_list))); (yyvsp[(3) - (3)].table_list)->straight=1; }
    break;

  case 1377:
#line 9682 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (4)].table_list) && (yyvsp[(3) - (4)].table_list));
            /* Change the current name resolution context to a local context. */
            if (push_new_name_resolution_context(YYTHD, (yyvsp[(1) - (4)].table_list), (yyvsp[(3) - (4)].table_list)))
              MYSQL_YYABORT;
            Select->parsing_place= IN_ON;
          }
    break;

  case 1378:
#line 9690 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            add_join_on((yyvsp[(3) - (6)].table_list),(yyvsp[(6) - (6)].item));
            Lex->pop_context();
            Select->parsing_place= NO_MATTER;
          }
    break;

  case 1379:
#line 9697 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (4)].table_list) && (yyvsp[(3) - (4)].table_list));
            /* Change the current name resolution context to a local context. */
            if (push_new_name_resolution_context(YYTHD, (yyvsp[(1) - (4)].table_list), (yyvsp[(3) - (4)].table_list)))
              MYSQL_YYABORT;
            Select->parsing_place= IN_ON;
          }
    break;

  case 1380:
#line 9705 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyvsp[(3) - (6)].table_list)->straight=1;
            add_join_on((yyvsp[(3) - (6)].table_list),(yyvsp[(6) - (6)].item));
            Lex->pop_context();
            Select->parsing_place= NO_MATTER;
          }
    break;

  case 1381:
#line 9713 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (4)].table_list) && (yyvsp[(3) - (4)].table_list));
          }
    break;

  case 1382:
#line 9717 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { add_join_natural((yyvsp[(1) - (8)].table_list),(yyvsp[(3) - (8)].table_list),(yyvsp[(7) - (8)].string_list),Select); (yyval.table_list)=(yyvsp[(3) - (8)].table_list); }
    break;

  case 1383:
#line 9719 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (4)].table_list) && ((yyval.table_list)=(yyvsp[(4) - (4)].table_list)));
            add_join_natural((yyvsp[(1) - (4)].table_list),(yyvsp[(4) - (4)].table_list),NULL,Select);
          }
    break;

  case 1384:
#line 9727 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (6)].table_list) && (yyvsp[(5) - (6)].table_list));
            /* Change the current name resolution context to a local context. */
            if (push_new_name_resolution_context(YYTHD, (yyvsp[(1) - (6)].table_list), (yyvsp[(5) - (6)].table_list)))
              MYSQL_YYABORT;
            Select->parsing_place= IN_ON;
          }
    break;

  case 1385:
#line 9735 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            add_join_on((yyvsp[(5) - (8)].table_list),(yyvsp[(8) - (8)].item));
            Lex->pop_context();
            (yyvsp[(5) - (8)].table_list)->outer_join|=JOIN_TYPE_LEFT;
            (yyval.table_list)=(yyvsp[(5) - (8)].table_list);
            Select->parsing_place= NO_MATTER;
          }
    break;

  case 1386:
#line 9743 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (5)].table_list) && (yyvsp[(5) - (5)].table_list));
          }
    break;

  case 1387:
#line 9747 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { 
            add_join_natural((yyvsp[(1) - (10)].table_list),(yyvsp[(5) - (10)].table_list),(yyvsp[(9) - (10)].string_list),Select); 
            (yyvsp[(5) - (10)].table_list)->outer_join|=JOIN_TYPE_LEFT; 
            (yyval.table_list)=(yyvsp[(5) - (10)].table_list); 
          }
    break;

  case 1388:
#line 9753 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (6)].table_list) && (yyvsp[(6) - (6)].table_list));
            add_join_natural((yyvsp[(1) - (6)].table_list),(yyvsp[(6) - (6)].table_list),NULL,Select);
            (yyvsp[(6) - (6)].table_list)->outer_join|=JOIN_TYPE_LEFT;
            (yyval.table_list)=(yyvsp[(6) - (6)].table_list);
          }
    break;

  case 1389:
#line 9763 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (6)].table_list) && (yyvsp[(5) - (6)].table_list));
            /* Change the current name resolution context to a local context. */
            if (push_new_name_resolution_context(YYTHD, (yyvsp[(1) - (6)].table_list), (yyvsp[(5) - (6)].table_list)))
              MYSQL_YYABORT;
            Select->parsing_place= IN_ON;
          }
    break;

  case 1390:
#line 9771 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (!((yyval.table_list)= lex->current_select->convert_right_join()))
              MYSQL_YYABORT;
            add_join_on((yyval.table_list), (yyvsp[(8) - (8)].item));
            Lex->pop_context();
            Select->parsing_place= NO_MATTER;
          }
    break;

  case 1391:
#line 9780 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (5)].table_list) && (yyvsp[(5) - (5)].table_list));
          }
    break;

  case 1392:
#line 9784 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (!((yyval.table_list)= lex->current_select->convert_right_join()))
              MYSQL_YYABORT;
            add_join_natural((yyval.table_list),(yyvsp[(5) - (10)].table_list),(yyvsp[(9) - (10)].string_list),Select);
          }
    break;

  case 1393:
#line 9791 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (6)].table_list) && (yyvsp[(6) - (6)].table_list));
            add_join_natural((yyvsp[(6) - (6)].table_list),(yyvsp[(1) - (6)].table_list),NULL,Select);
            LEX *lex= Lex;
            if (!((yyval.table_list)= lex->current_select->convert_right_join()))
              MYSQL_YYABORT;
          }
    break;

  case 1394:
#line 9801 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1395:
#line 9802 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1396:
#line 9803 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1397:
#line 9811 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.string_list)= 0;}
    break;

  case 1399:
#line 9817 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.string_list)= (yyvsp[(3) - (5)].string_list);
          }
    break;

  case 1400:
#line 9831 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            SELECT_LEX *sel= Select;
            sel->table_join_options= 0;
          }
    break;

  case 1401:
#line 9836 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            if (!((yyval.table_list)= Select->add_table_to_list(YYTHD, (yyvsp[(2) - (5)].table), (yyvsp[(4) - (5)].lex_str_ptr),
                                                Select->get_table_join_options(),
                                                YYPS->m_lock_type,
                                                YYPS->m_mdl_type,
                                                Select->pop_index_hints(),
                                                (yyvsp[(3) - (5)].string_list))))
              MYSQL_YYABORT;
            Select->add_joined_table((yyval.table_list));
          }
    break;

  case 1402:
#line 9847 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            SELECT_LEX *sel= lex->current_select;
            if ((yyvsp[(1) - (3)].num))
            {
              if (sel->set_braces(1))
              {
                my_parse_error(ER(ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
              }
              /* select in braces, can't contain global parameters */
              if (sel->master_unit()->fake_select_lex)
                sel->master_unit()->global_parameters=
                   sel->master_unit()->fake_select_lex;
            }
            if ((yyvsp[(2) - (3)].select_lex)->init_nested_join(lex->thd))
              MYSQL_YYABORT;
            (yyval.table_list)= 0;
            /* incomplete derived tables return NULL, we must be
               nested in select_derived rule to be here. */
          }
    break;

  case 1403:
#line 9887 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            /* Use $2 instead of Lex->current_select as derived table will
               alter value of Lex->current_select. */
            if (!((yyvsp[(3) - (5)].table_list) || (yyvsp[(5) - (5)].lex_str_ptr)) && (yyvsp[(2) - (5)].select_lex)->embedding &&
                !(yyvsp[(2) - (5)].select_lex)->embedding->nested_join->join_list.elements)
            {
              /* we have a derived table ($3 == NULL) but no alias,
                 Since we are nested in further parentheses so we
                 can pass NULL to the outer level parentheses
                 Permits parsing of "((((select ...))) as xyz)" */
              (yyval.table_list)= 0;
            }
            else if (!(yyvsp[(3) - (5)].table_list))
            {
              /* Handle case of derived table, alias may be NULL if there
                 are no outer parentheses, add_table_to_list() will throw
                 error in this case */
              LEX *lex=Lex;
              SELECT_LEX *sel= lex->current_select;
              SELECT_LEX_UNIT *unit= sel->master_unit();
              lex->current_select= sel= unit->outer_select();
              Table_ident *ti= new Table_ident(unit);
              if (ti == NULL)
                MYSQL_YYABORT;
              if (!((yyval.table_list)= sel->add_table_to_list(lex->thd,
                                               ti, (yyvsp[(5) - (5)].lex_str_ptr), 0,
                                               TL_READ, MDL_SHARED_READ)))

                MYSQL_YYABORT;
              sel->add_joined_table((yyval.table_list));
              lex->pop_context();
              lex->nest_level--;
            }
            else if (((yyvsp[(3) - (5)].table_list)->select_lex &&
                     (yyvsp[(3) - (5)].table_list)->select_lex->master_unit()->is_union()) || (yyvsp[(5) - (5)].lex_str_ptr))
            {
              /* simple nested joins cannot have aliases or unions */
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            else
            {
              /* nested join: FROM (t1 JOIN t2 ...),
                 nest_level is the same as in the outer query */
              (yyval.table_list)= (yyvsp[(3) - (5)].table_list);
            }
          }
    break;

  case 1405:
#line 9941 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            if (add_select_to_union_list(Lex, (bool)(yyvsp[(3) - (3)].num), FALSE))
              MYSQL_YYABORT;
          }
    break;

  case 1406:
#line 9946 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            /*
              Remove from the name resolution context stack the context of the
              last select in the union.
             */
            Lex->pop_context();
          }
    break;

  case 1408:
#line 9959 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            SELECT_LEX * sel= lex->current_select;
            if (lex->current_select->set_braces(0))
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            if (sel->linkage == UNION_TYPE &&
                sel->master_unit()->first_select()->braces)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
          }
    break;

  case 1409:
#line 9978 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            SELECT_LEX *sel= lex->current_select;
            if (sel->linkage != UNION_TYPE)
              mysql_init_select(lex);
            lex->current_select->parsing_place= SELECT_LIST;
          }
    break;

  case 1410:
#line 9986 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Select->parsing_place= NO_MATTER;
          }
    break;

  case 1412:
#line 9995 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if ((yyvsp[(1) - (1)].select_lex)->init_nested_join(lex->thd))
              MYSQL_YYABORT;
          }
    break;

  case 1413:
#line 10001 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            /* for normal joins, $3 != NULL and end_nested_join() != NULL,
               for derived tables, both must equal NULL */

            if (!((yyval.table_list)= (yyvsp[(1) - (3)].select_lex)->end_nested_join(lex->thd)) && (yyvsp[(3) - (3)].table_list))
              MYSQL_YYABORT;
            if (!(yyvsp[(3) - (3)].table_list) && (yyval.table_list))
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
          }
    break;

  case 1414:
#line 10017 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->derived_tables|= DERIVED_SUBQUERY;
            if (!lex->expr_allows_subselect ||
                lex->sql_command == (int)SQLCOM_PURGE)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            if (lex->current_select->linkage == GLOBAL_OPTIONS_TYPE ||
                mysql_new_select(lex, 1))
              MYSQL_YYABORT;
            mysql_init_select(lex);
            lex->current_select->linkage= DERIVED_TABLE_TYPE;
            lex->current_select->parsing_place= SELECT_LIST;
          }
    break;

  case 1415:
#line 10034 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Select->parsing_place= NO_MATTER;
          }
    break;

  case 1417:
#line 10041 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.select_lex)= Select; }
    break;

  case 1418:
#line 10046 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (! lex->parsing_options.allows_derived)
            {
              my_error(ER_VIEW_SELECT_DERIVED, MYF(0));
              MYSQL_YYABORT;
            }

            SELECT_LEX *sel= lex->current_select;
            TABLE_LIST *embedding;
            if (!sel->embedding || sel->end_nested_join(lex->thd))
            {
              /* we are not in parentheses */
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            embedding= Select->embedding;
            (yyval.num)= embedding &&
                !embedding->nested_join->join_list.elements;
            /* return true if we are deeply nested */
          }
    break;

  case 1419:
#line 10071 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1420:
#line 10072 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1421:
#line 10077 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.num)= old_mode ?  INDEX_HINT_MASK_JOIN : INDEX_HINT_MASK_ALL; 
          }
    break;

  case 1422:
#line 10080 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)= INDEX_HINT_MASK_JOIN;  }
    break;

  case 1423:
#line 10081 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)= INDEX_HINT_MASK_ORDER; }
    break;

  case 1424:
#line 10082 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)= INDEX_HINT_MASK_GROUP; }
    break;

  case 1425:
#line 10086 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.index_hint)= INDEX_HINT_FORCE; }
    break;

  case 1426:
#line 10087 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.index_hint)= INDEX_HINT_IGNORE; }
    break;

  case 1427:
#line 10092 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Select->set_index_hint_type((yyvsp[(1) - (3)].index_hint), (yyvsp[(3) - (3)].num));
          }
    break;

  case 1429:
#line 10097 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Select->set_index_hint_type(INDEX_HINT_USE, (yyvsp[(3) - (3)].num));
          }
    break;

  case 1434:
#line 10110 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Select->alloc_index_hints(YYTHD); }
    break;

  case 1436:
#line 10114 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {  Select->clear_index_hints(); }
    break;

  case 1438:
#line 10119 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Select->add_index_hint(YYTHD, NULL, 0); }
    break;

  case 1439:
#line 10120 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1440:
#line 10125 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Select->add_index_hint(YYTHD, (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length); }
    break;

  case 1441:
#line 10127 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Select->add_index_hint(YYTHD, (char *)"PRIMARY", 7); }
    break;

  case 1444:
#line 10137 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            if (!((yyval.string_list)= new List<String>))
              MYSQL_YYABORT;
            String *s= new (YYTHD->mem_root) String((const char *) (yyvsp[(1) - (1)].lex_str).str,
                                                    (yyvsp[(1) - (1)].lex_str).length,
                                                    system_charset_info);
            if (s == NULL)
              MYSQL_YYABORT;
            (yyval.string_list)->push_back(s);
          }
    break;

  case 1445:
#line 10148 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            String *s= new (YYTHD->mem_root) String((const char *) (yyvsp[(3) - (3)].lex_str).str,
                                                    (yyvsp[(3) - (3)].lex_str).length,
                                                    system_charset_info);
            if (s == NULL)
              MYSQL_YYABORT;
            (yyvsp[(1) - (3)].string_list)->push_back(s);
            (yyval.string_list)= (yyvsp[(1) - (3)].string_list);
          }
    break;

  case 1446:
#line 10160 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1447:
#line 10161 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_DAY_HOUR; }
    break;

  case 1448:
#line 10162 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_DAY_MICROSECOND; }
    break;

  case 1449:
#line 10163 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_DAY_MINUTE; }
    break;

  case 1450:
#line 10164 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_DAY_SECOND; }
    break;

  case 1451:
#line 10165 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_HOUR_MICROSECOND; }
    break;

  case 1452:
#line 10166 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_HOUR_MINUTE; }
    break;

  case 1453:
#line 10167 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_HOUR_SECOND; }
    break;

  case 1454:
#line 10168 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_MINUTE_MICROSECOND; }
    break;

  case 1455:
#line 10169 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_MINUTE_SECOND; }
    break;

  case 1456:
#line 10170 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_SECOND_MICROSECOND; }
    break;

  case 1457:
#line 10171 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_YEAR_MONTH; }
    break;

  case 1458:
#line 10175 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_DAY; }
    break;

  case 1459:
#line 10176 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_WEEK; }
    break;

  case 1460:
#line 10177 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_HOUR; }
    break;

  case 1461:
#line 10178 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_MINUTE; }
    break;

  case 1462:
#line 10179 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_MONTH; }
    break;

  case 1463:
#line 10180 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_QUARTER; }
    break;

  case 1464:
#line 10181 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_SECOND; }
    break;

  case 1465:
#line 10182 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_MICROSECOND; }
    break;

  case 1466:
#line 10183 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_YEAR; }
    break;

  case 1467:
#line 10187 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATE; }
    break;

  case 1468:
#line 10188 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_TIME; }
    break;

  case 1469:
#line 10189 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATETIME; }
    break;

  case 1470:
#line 10190 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATETIME; }
    break;

  case 1474:
#line 10200 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.lex_str_ptr)=0; }
    break;

  case 1475:
#line 10202 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.lex_str_ptr)= (LEX_STRING*) sql_memdup(&(yyvsp[(2) - (2)].lex_str),sizeof(LEX_STRING));
            if ((yyval.lex_str_ptr) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1478:
#line 10215 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Select->where= 0; }
    break;

  case 1479:
#line 10217 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Select->parsing_place= IN_WHERE;
          }
    break;

  case 1480:
#line 10221 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            SELECT_LEX *select= Select;
            select->where= (yyvsp[(3) - (3)].item);
            select->parsing_place= NO_MATTER;
            if ((yyvsp[(3) - (3)].item))
              (yyvsp[(3) - (3)].item)->top_level_item();
          }
    break;

  case 1482:
#line 10233 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Select->parsing_place= IN_HAVING;
          }
    break;

  case 1483:
#line 10237 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            SELECT_LEX *sel= Select;
            sel->having= (yyvsp[(3) - (3)].item);
            sel->parsing_place= NO_MATTER;
            if ((yyvsp[(3) - (3)].item))
              (yyvsp[(3) - (3)].item)->top_level_item();
          }
    break;

  case 1484:
#line 10248 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->escape_used= TRUE;
            (yyval.item)= (yyvsp[(2) - (2)].item);
          }
    break;

  case 1485:
#line 10253 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            Lex->escape_used= FALSE;
            (yyval.item)= ((thd->variables.sql_mode & MODE_NO_BACKSLASH_ESCAPES) ?
                 new (thd->mem_root) Item_string("", 0, &my_charset_latin1) :
                 new (thd->mem_root) Item_string("\\", 1, &my_charset_latin1));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1488:
#line 10275 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { if (add_group_to_list(YYTHD, (yyvsp[(3) - (4)].item),(bool) (yyvsp[(4) - (4)].num))) MYSQL_YYABORT; }
    break;

  case 1489:
#line 10277 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { if (add_group_to_list(YYTHD, (yyvsp[(1) - (2)].item),(bool) (yyvsp[(2) - (2)].num))) MYSQL_YYABORT; }
    break;

  case 1490:
#line 10281 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1491:
#line 10283 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            /*
              'WITH CUBE' is reserved in the MySQL syntax, but not implemented,
              and cause LALR(2) conflicts.
              This syntax is not standard.
              MySQL syntax: GROUP BY col1, col2, col3 WITH CUBE
              SQL-2003: GROUP BY ... CUBE(col1, col2, col3)
            */
            LEX *lex=Lex;
            if (lex->current_select->linkage == GLOBAL_OPTIONS_TYPE)
            {
              my_error(ER_WRONG_USAGE, MYF(0), "WITH CUBE",
                       "global union parameters");
              MYSQL_YYABORT;
            }
            lex->current_select->olap= CUBE_TYPE;
            my_error(ER_NOT_SUPPORTED_YET, MYF(0), "CUBE");
            MYSQL_YYABORT;
          }
    break;

  case 1492:
#line 10303 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            /*
              'WITH ROLLUP' is needed for backward compatibility,
              and cause LALR(2) conflicts.
              This syntax is not standard.
              MySQL syntax: GROUP BY col1, col2, col3 WITH ROLLUP
              SQL-2003: GROUP BY ... ROLLUP(col1, col2, col3)
            */
            LEX *lex= Lex;
            if (lex->current_select->linkage == GLOBAL_OPTIONS_TYPE)
            {
              my_error(ER_WRONG_USAGE, MYF(0), "WITH ROLLUP",
                       "global union parameters");
              MYSQL_YYABORT;
            }
            lex->current_select->olap= ROLLUP_TYPE;
          }
    break;

  case 1496:
#line 10337 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            bool ascending= ((yyvsp[(2) - (2)].num) == 1) ? true : false;
            if (add_order_to_list(thd, (yyvsp[(1) - (2)].item), ascending))
              MYSQL_YYABORT;
          }
    break;

  case 1499:
#line 10356 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            SELECT_LEX *sel= lex->current_select;
            SELECT_LEX_UNIT *unit= sel-> master_unit();
            if (sel->linkage != GLOBAL_OPTIONS_TYPE &&
                sel->olap != UNSPECIFIED_OLAP_TYPE &&
                (sel->linkage != UNION_TYPE || sel->braces))
            {
              my_error(ER_WRONG_USAGE, MYF(0),
                       "CUBE/ROLLUP", "ORDER BY");
              MYSQL_YYABORT;
            }
            if (lex->sql_command != SQLCOM_ALTER_TABLE && !unit->fake_select_lex)
            {
              /*
                A query of the of the form (SELECT ...) ORDER BY order_list is
                executed in the same way as the query
                SELECT ... ORDER BY order_list
                unless the SELECT construct contains ORDER BY or LIMIT clauses.
                Otherwise we create a fake SELECT_LEX if it has not been created
                yet.
              */
              SELECT_LEX *first_sl= unit->first_select();
              if (!unit->is_union() &&
                  (first_sl->order_list.elements || 
                   first_sl->select_limit) &&            
                  unit->add_fake_select_lex(lex->thd))
                MYSQL_YYABORT;
            }
          }
    break;

  case 1501:
#line 10391 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { if (add_order_to_list(YYTHD, (yyvsp[(3) - (4)].item),(bool) (yyvsp[(4) - (4)].num))) MYSQL_YYABORT; }
    break;

  case 1502:
#line 10393 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { if (add_order_to_list(YYTHD, (yyvsp[(1) - (2)].item),(bool) (yyvsp[(2) - (2)].num))) MYSQL_YYABORT; }
    break;

  case 1503:
#line 10397 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num) =  1; }
    break;

  case 1504:
#line 10398 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num) =1; }
    break;

  case 1505:
#line 10399 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num) =0; }
    break;

  case 1506:
#line 10404 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            SELECT_LEX *sel= lex->current_select;
            sel->offset_limit= 0;
            sel->select_limit= 0;
          }
    break;

  case 1507:
#line 10410 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1508:
#line 10414 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1509:
#line 10415 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1510:
#line 10420 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
          }
    break;

  case 1511:
#line 10427 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[(1) - (1)].item);
            sel->offset_limit= 0;
            sel->explicit_limit= 1;
          }
    break;

  case 1512:
#line 10434 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[(3) - (3)].item);
            sel->offset_limit= (yyvsp[(1) - (3)].item);
            sel->explicit_limit= 1;
          }
    break;

  case 1513:
#line 10441 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[(1) - (3)].item);
            sel->offset_limit= (yyvsp[(3) - (3)].item);
            sel->explicit_limit= 1;
          }
    break;

  case 1514:
#line 10451 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
          Item_splocal *splocal;
          Lex_input_stream *lip= &YYTHD->m_parser_state->m_lip;

          splocal= create_item_for_sp_var(YYTHD, (yyvsp[(1) - (1)].lex_str), NULL,
                                          lip->get_tok_start(), lip->get_ptr());
          if (splocal == NULL)
            MYSQL_YYABORT;
          Lex->safe_to_cache_query= 0;
          if (splocal->type() != Item::INT_ITEM)
          {
            my_error(ER_WRONG_SPVAR_TYPE_IN_LIMIT, MYF(0));
            MYSQL_YYABORT;
          }
          splocal->limit_clause_param= TRUE;
          (yyval.item)= splocal;
        }
    break;

  case 1515:
#line 10469 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
          ((Item_param *) (yyvsp[(1) - (1)].item))->limit_clause_param= TRUE;
        }
    break;

  case 1516:
#line 10473 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_uint((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1517:
#line 10479 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_uint((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1518:
#line 10485 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_uint((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1519:
#line 10494 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->current_select->select_limit= 0;
          }
    break;

  case 1520:
#line 10499 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[(2) - (2)].item);
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
            sel->explicit_limit= 1;
          }
    break;

  case 1521:
#line 10508 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1522:
#line 10509 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (ulong) strtol((yyvsp[(1) - (1)].lex_str).str, (char**) 0, 16); }
    break;

  case 1523:
#line 10510 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1524:
#line 10511 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1525:
#line 10512 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1526:
#line 10513 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1527:
#line 10517 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1528:
#line 10518 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (ulong) strtol((yyvsp[(1) - (1)].lex_str).str, (char**) 0, 16); }
    break;

  case 1529:
#line 10519 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1530:
#line 10520 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1531:
#line 10521 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { MYSQL_YYABORT; }
    break;

  case 1532:
#line 10525 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1533:
#line 10526 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1534:
#line 10527 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1535:
#line 10528 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1536:
#line 10529 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1537:
#line 10533 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1538:
#line 10534 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1539:
#line 10535 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1540:
#line 10536 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { MYSQL_YYABORT; }
    break;

  case 1541:
#line 10541 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { my_parse_error(ER(ER_ONLY_INTEGERS_ALLOWED)); }
    break;

  case 1545:
#line 10552 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;

            if (! lex->parsing_options.allows_select_procedure)
            {
              my_error(ER_VIEW_SELECT_CLAUSE, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }

            if (&lex->select_lex != lex->current_select)
            {
              my_error(ER_WRONG_USAGE, MYF(0), "PROCEDURE", "subquery");
              MYSQL_YYABORT;
            }
            lex->proc_list.elements=0;
            lex->proc_list.first=0;
            lex->proc_list.next= &lex->proc_list.first;
            Item_field *item= new (YYTHD->mem_root)
                                Item_field(&lex->current_select->context,
                                           NULL, NULL, (yyvsp[(2) - (2)].lex_str).str);
            if (item == NULL)
              MYSQL_YYABORT;
            if (add_proc_to_list(lex->thd, item))
              MYSQL_YYABORT;
            Lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
          }
    break;

  case 1547:
#line 10582 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1548:
#line 10583 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1551:
#line 10593 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;

            if (add_proc_to_list(thd, (yyvsp[(2) - (3)].item)))
              MYSQL_YYABORT;
            if (!(yyvsp[(2) - (3)].item)->name)
              (yyvsp[(2) - (3)].item)->set_name((yyvsp[(1) - (3)].simple_string), (uint) ((yyvsp[(3) - (3)].simple_string) - (yyvsp[(1) - (3)].simple_string)), thd->charset());
          }
    break;

  case 1552:
#line 10604 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (!lex->describe && (!(lex->result= new select_dumpvar())))
              MYSQL_YYABORT;
          }
    break;

  case 1553:
#line 10610 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1555:
#line 10615 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1556:
#line 10620 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->result) 
            {
              my_var *var= new my_var((yyvsp[(2) - (2)].lex_str),0,0,(enum_field_types)0);
              if (var == NULL)
                MYSQL_YYABORT;
              ((select_dumpvar *)lex->result)->var_list.push_back(var);
            }
            else
            {
              /*
                The parser won't create select_result instance only
                if it's an EXPLAIN.
              */
              DBUG_ASSERT(lex->describe);
            }
          }
    break;

  case 1557:
#line 10639 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            sp_variable *t;

            if (!lex->spcont || !(t=lex->spcont->find_variable((yyvsp[(1) - (1)].lex_str), false)))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
            if (lex->result)
            {
              my_var *var= new my_var((yyvsp[(1) - (1)].lex_str),1,t->offset,t->type);
              if (var == NULL)
                MYSQL_YYABORT;
              ((select_dumpvar *)lex->result)->var_list.push_back(var);
#ifndef DBUG_OFF
              var->sp= lex->sphead;
#endif
            }
            else
            {
              /*
                The parser won't create select_result instance only
                if it's an EXPLAIN.
              */
              DBUG_ASSERT(lex->describe);
            }
          }
    break;

  case 1558:
#line 10671 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            if (! Lex->parsing_options.allows_select_into)
            {
              my_error(ER_VIEW_SELECT_CLAUSE, MYF(0), "INTO");
              MYSQL_YYABORT;
            }
          }
    break;

  case 1560:
#line 10683 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
            if (!(lex->exchange= new sql_exchange((yyvsp[(2) - (2)].lex_str).str, 0)) ||
                !(lex->result= new select_export(lex->exchange)))
              MYSQL_YYABORT;
          }
    break;

  case 1561:
#line 10691 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->exchange->cs= (yyvsp[(4) - (4)].charset); }
    break;

  case 1563:
#line 10694 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (!lex->describe)
            {
              lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
              if (!(lex->exchange= new sql_exchange((yyvsp[(2) - (2)].lex_str).str,1)))
                MYSQL_YYABORT;
              if (!(lex->result= new select_dump(lex->exchange)))
                MYSQL_YYABORT;
            }
          }
    break;

  case 1564:
#line 10706 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
          }
    break;

  case 1565:
#line 10717 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_DO;
            mysql_init_select(lex);
          }
    break;

  case 1566:
#line 10723 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->insert_list= (yyvsp[(3) - (3)].item_list);
          }
    break;

  case 1567:
#line 10734 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_DROP_TABLE;
            lex->drop_temporary= (yyvsp[(2) - (4)].num);
            lex->drop_if_exists= (yyvsp[(4) - (4)].num);
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
    break;

  case 1568:
#line 10743 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1569:
#line 10744 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1570:
#line 10745 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Alter_drop *ad= new Alter_drop(Alter_drop::KEY, (yyvsp[(3) - (6)].lex_str).str);
            if (ad == NULL)
              MYSQL_YYABORT;
            lex->sql_command= SQLCOM_DROP_INDEX;
            lex->alter_info.reset();
            lex->alter_info.flags= ALTER_DROP_INDEX;
            lex->alter_info.drop_list.push_back(ad);
            if (!lex->current_select->add_table_to_list(lex->thd, (yyvsp[(5) - (6)].table), NULL,
                                                        TL_OPTION_UPDATING,
                                                        TL_READ_NO_INSERT,
                                                        MDL_SHARED_NO_WRITE))
              MYSQL_YYABORT;
          }
    break;

  case 1571:
#line 10761 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_DROP_DB;
            lex->drop_if_exists=(yyvsp[(3) - (4)].num);
            lex->name= (yyvsp[(4) - (4)].lex_str);
          }
    break;

  case 1572:
#line 10768 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_name *spname;
            if ((yyvsp[(4) - (6)].lex_str).str && check_and_convert_db_name(&(yyvsp[(4) - (6)].lex_str), FALSE))
            {
               my_error(ER_WRONG_DB_NAME, MYF(0), (yyvsp[(4) - (6)].lex_str).str);
               MYSQL_YYABORT;
            }
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_DROP_FUNCTION;
            lex->drop_if_exists= (yyvsp[(3) - (6)].num);
            spname= new sp_name((yyvsp[(4) - (6)].lex_str), (yyvsp[(6) - (6)].lex_str), true);
            if (spname == NULL)
              MYSQL_YYABORT;
            spname->init_qname(thd);
            lex->spname= spname;
          }
    break;

  case 1573:
#line 10791 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            LEX_STRING db= {0, 0};
            sp_name *spname;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            if (thd->db && lex->copy_db_to(&db.str, &db.length))
              MYSQL_YYABORT;
            lex->sql_command = SQLCOM_DROP_FUNCTION;
            lex->drop_if_exists= (yyvsp[(3) - (4)].num);
            spname= new sp_name(db, (yyvsp[(4) - (4)].lex_str), false);
            if (spname == NULL)
              MYSQL_YYABORT;
            spname->init_qname(thd);
            lex->spname= spname;
          }
    break;

  case 1574:
#line 10812 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_DROP_PROCEDURE;
            lex->drop_if_exists= (yyvsp[(3) - (4)].num);
            lex->spname= (yyvsp[(4) - (4)].spname);
          }
    break;

  case 1575:
#line 10824 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_DROP_USER;
          }
    break;

  case 1576:
#line 10828 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DROP_VIEW;
            lex->drop_if_exists= (yyvsp[(3) - (3)].num);
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
    break;

  case 1577:
#line 10836 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1578:
#line 10838 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->drop_if_exists= (yyvsp[(3) - (4)].num);
            Lex->spname= (yyvsp[(4) - (4)].spname);
            Lex->sql_command = SQLCOM_DROP_EVENT;
          }
    break;

  case 1579:
#line 10844 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DROP_TRIGGER;
            lex->drop_if_exists= (yyvsp[(3) - (4)].num);
            lex->spname= (yyvsp[(4) - (4)].spname);
          }
    break;

  case 1580:
#line 10851 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= DROP_TABLESPACE;
          }
    break;

  case 1581:
#line 10856 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= DROP_LOGFILE_GROUP;
          }
    break;

  case 1582:
#line 10861 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_DROP_SERVER;
            Lex->drop_if_exists= (yyvsp[(3) - (4)].num);
            Lex->server_options.server_name= (yyvsp[(4) - (4)].lex_str).str;
            Lex->server_options.server_name_length= (yyvsp[(4) - (4)].lex_str).length;
          }
    break;

  case 1585:
#line 10876 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (1)].table), NULL,
                                           TL_OPTION_UPDATING,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
    break;

  case 1586:
#line 10887 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (2)].table), NULL,
                                           TL_OPTION_UPDATING,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type,
                                           NULL,
                                           (yyvsp[(2) - (2)].string_list)))
              MYSQL_YYABORT;
          }
    break;

  case 1589:
#line 10905 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (1)].table), NULL,
                                           TL_OPTION_UPDATING | TL_OPTION_ALIAS,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
    break;

  case 1590:
#line 10915 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 1591:
#line 10916 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1592:
#line 10920 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 1593:
#line 10921 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1601:
#line 10944 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSERT;
            lex->duplicates= DUP_ERROR; 
            mysql_init_select(lex);
          }
    break;

  case 1602:
#line 10952 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Select->set_lock_for_tables((yyvsp[(3) - (5)].lock_type));
            Lex->current_select= &Lex->select_lex;
          }
    break;

  case 1603:
#line 10957 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1604:
#line 10962 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_REPLACE;
            lex->duplicates= DUP_REPLACE;
            mysql_init_select(lex);
          }
    break;

  case 1605:
#line 10969 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Select->set_lock_for_tables((yyvsp[(3) - (4)].lock_type));
            Lex->current_select= &Lex->select_lex;
          }
    break;

  case 1606:
#line 10974 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1607:
#line 10979 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
#ifdef HAVE_QUERY_CACHE
            /*
              If it is SP we do not allow insert optimisation whan result of
              insert visible only after the table unlocking but everyone can
              read table.
            */
            (yyval.lock_type)= (Lex->sphead ? TL_WRITE_DEFAULT : TL_WRITE_CONCURRENT_INSERT);
#else
            (yyval.lock_type)= TL_WRITE_CONCURRENT_INSERT;
#endif
          }
    break;

  case 1608:
#line 10991 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
    break;

  case 1609:
#line 10993 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
          Lex->keyword_delayed_begin_offset= (uint)(YYLIP->get_tok_start() -
                                                    YYTHD->query());
          Lex->keyword_delayed_end_offset= Lex->keyword_delayed_begin_offset +
                                           YYLIP->yyLength() + 1;
          (yyval.lock_type)= TL_WRITE_DELAYED;
        }
    break;

  case 1610:
#line 11000 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE; }
    break;

  case 1611:
#line 11004 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.lock_type)= (yyvsp[(1) - (1)].lock_type); }
    break;

  case 1612:
#line 11006 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
          Lex->keyword_delayed_begin_offset= (uint)(YYLIP->get_tok_start() -
                                                    YYTHD->query());
          Lex->keyword_delayed_end_offset= Lex->keyword_delayed_begin_offset +
                                           YYLIP->yyLength() + 1;
          (yyval.lock_type)= TL_WRITE_DELAYED;
        }
    break;

  case 1613:
#line 11016 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1614:
#line 11017 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1615:
#line 11022 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->field_list.empty();
            lex->many_values.empty();
            lex->insert_list=0;
          }
    break;

  case 1616:
#line 11030 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1617:
#line 11031 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1618:
#line 11032 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1619:
#line 11034 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (!(lex->insert_list = new List_item) ||
                lex->many_values.push_back(lex->insert_list))
              MYSQL_YYABORT;
          }
    break;

  case 1621:
#line 11044 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->field_list.push_back((yyvsp[(3) - (3)].item)); }
    break;

  case 1622:
#line 11045 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->field_list.push_back((yyvsp[(1) - (1)].item)); }
    break;

  case 1623:
#line 11049 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1624:
#line 11050 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1625:
#line 11052 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Select->set_braces(0);}
    break;

  case 1626:
#line 11053 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1627:
#line 11055 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Select->set_braces(1);}
    break;

  case 1628:
#line 11056 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1633:
#line 11071 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->field_list.push_back((yyvsp[(1) - (3)].item)) ||
                lex->insert_list->push_back((yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1634:
#line 11080 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1635:
#line 11081 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1636:
#line 11085 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1637:
#line 11086 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1638:
#line 11091 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
              if (!(Lex->insert_list = new List_item))
                MYSQL_YYABORT;
          }
    break;

  case 1639:
#line 11096 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->many_values.push_back(lex->insert_list))
              MYSQL_YYABORT;
          }
    break;

  case 1640:
#line 11104 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1642:
#line 11110 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            if (Lex->insert_list->push_back((yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1643:
#line 11115 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            if (Lex->insert_list->push_back((yyvsp[(1) - (1)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1644:
#line 11122 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].item);}
    break;

  case 1645:
#line 11124 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_default_value(Lex->current_context());
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1647:
#line 11133 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->duplicates= DUP_UPDATE; }
    break;

  case 1649:
#line 11141 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            mysql_init_select(lex);
            lex->sql_command= SQLCOM_UPDATE;
            lex->duplicates= DUP_ERROR; 
          }
    break;

  case 1650:
#line 11149 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->select_lex.table_list.elements > 1)
              lex->sql_command= SQLCOM_UPDATE_MULTI;
            else if (lex->select_lex.get_table_list()->derived)
            {
              /* it is single table update and it is update of derived table */
              my_error(ER_NON_UPDATABLE_TABLE, MYF(0),
                       lex->select_lex.get_table_list()->alias, "UPDATE");
              MYSQL_YYABORT;
            }
            /*
              In case of multi-update setting write lock for all tables may
              be too pessimistic. We will decrease lock level if possible in
              mysql_multi_update().
            */
            Select->set_lock_for_tables((yyvsp[(3) - (7)].lock_type));
          }
    break;

  case 1651:
#line 11167 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1654:
#line 11177 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            if (add_item_to_list(YYTHD, (yyvsp[(1) - (3)].item)) || add_value_to_list(YYTHD, (yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1657:
#line 11190 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
          LEX *lex= Lex;
          if (lex->update_list.push_back((yyvsp[(1) - (3)].item)) || 
              lex->value_list.push_back((yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1658:
#line 11199 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
    break;

  case 1659:
#line 11200 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
    break;

  case 1660:
#line 11207 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DELETE;
            mysql_init_select(lex);
            YYPS->m_lock_type= TL_WRITE_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_WRITE;

            lex->ignore= 0;
            lex->select_lex.init_order();
          }
    break;

  case 1662:
#line 11222 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(2) - (3)].table), NULL, TL_OPTION_UPDATING,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type,
                                           NULL,
                                           (yyvsp[(3) - (3)].string_list)))
              MYSQL_YYABORT;
            YYPS->m_lock_type= TL_READ_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_READ;
          }
    break;

  case 1663:
#line 11233 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1664:
#line 11235 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            mysql_init_multi_delete(Lex);
            YYPS->m_lock_type= TL_READ_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_READ;
          }
    break;

  case 1665:
#line 11241 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            if (multi_delete_set_locks_and_link_aux_tables(Lex))
              MYSQL_YYABORT;
          }
    break;

  case 1666:
#line 11246 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            mysql_init_multi_delete(Lex);
            YYPS->m_lock_type= TL_READ_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_READ;
          }
    break;

  case 1667:
#line 11252 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            if (multi_delete_set_locks_and_link_aux_tables(Lex))
              MYSQL_YYABORT;
          }
    break;

  case 1670:
#line 11265 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Table_ident *ti= new Table_ident((yyvsp[(1) - (2)].lex_str));
            if (ti == NULL)
              MYSQL_YYABORT;
            if (!Select->add_table_to_list(YYTHD,
                                           ti,
                                           NULL,
                                           TL_OPTION_UPDATING | TL_OPTION_ALIAS,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
    break;

  case 1671:
#line 11278 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Table_ident *ti= new Table_ident(YYTHD, (yyvsp[(1) - (4)].lex_str), (yyvsp[(3) - (4)].lex_str), 0);
            if (ti == NULL)
              MYSQL_YYABORT;
            if (!Select->add_table_to_list(YYTHD,
                                           ti,
                                           NULL,
                                           TL_OPTION_UPDATING | TL_OPTION_ALIAS,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
    break;

  case 1672:
#line 11293 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1673:
#line 11294 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1674:
#line 11298 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1675:
#line 11299 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1676:
#line 11303 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Select->options|= OPTION_QUICK; }
    break;

  case 1677:
#line 11304 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { YYPS->m_lock_type= TL_WRITE_LOW_PRIORITY; }
    break;

  case 1678:
#line 11305 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->ignore= 1; }
    break;

  case 1679:
#line 11310 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX* lex= Lex;
            lex->sql_command= SQLCOM_TRUNCATE;
            lex->alter_info.reset();
            lex->select_lex.options= 0;
            lex->select_lex.sql_cache= SELECT_LEX::SQL_CACHE_UNSPECIFIED;
            lex->select_lex.init_order();
            YYPS->m_lock_type= TL_WRITE;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
    break;

  case 1680:
#line 11321 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_truncate_table();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1687:
#line 11346 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_CPU;
    }
    break;

  case 1688:
#line 11350 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_MEMORY;
    }
    break;

  case 1689:
#line 11354 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_BLOCK_IO;
    }
    break;

  case 1690:
#line 11358 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_CONTEXT;
    }
    break;

  case 1691:
#line 11362 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_PAGE_FAULTS;
    }
    break;

  case 1692:
#line 11366 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_IPC;
    }
    break;

  case 1693:
#line 11370 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_SWAPS;
    }
    break;

  case 1694:
#line 11374 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_SOURCE;
    }
    break;

  case 1695:
#line 11378 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_ALL;
    }
    break;

  case 1696:
#line 11385 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
      Lex->profile_query_id= 0;
    }
    break;

  case 1697:
#line 11389 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
      Lex->profile_query_id= atoi((yyvsp[(3) - (3)].lex_str).str);
    }
    break;

  case 1698:
#line 11398 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->wild=0;
            mysql_init_select(lex);
            lex->current_select->parsing_place= SELECT_LIST;
            memset(&lex->create_info, 0, sizeof(lex->create_info));
          }
    break;

  case 1699:
#line 11406 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Select->parsing_place= NO_MATTER;
          }
    break;

  case 1700:
#line 11413 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_DATABASES;
             if (prepare_schema_table(YYTHD, lex, 0, SCH_SCHEMATA))
               MYSQL_YYABORT;
           }
    break;

  case 1701:
#line 11420 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TABLES;
             lex->select_lex.db= (yyvsp[(3) - (4)].simple_string);
             if (prepare_schema_table(YYTHD, lex, 0, SCH_TABLE_NAMES))
               MYSQL_YYABORT;
           }
    break;

  case 1702:
#line 11428 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TRIGGERS;
             lex->select_lex.db= (yyvsp[(3) - (4)].simple_string);
             if (prepare_schema_table(YYTHD, lex, 0, SCH_TRIGGERS))
               MYSQL_YYABORT;
           }
    break;

  case 1703:
#line 11436 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_EVENTS;
             lex->select_lex.db= (yyvsp[(2) - (3)].simple_string);
             if (prepare_schema_table(YYTHD, lex, 0, SCH_EVENTS))
               MYSQL_YYABORT;
           }
    break;

  case 1704:
#line 11444 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TABLE_STATUS;
             lex->select_lex.db= (yyvsp[(3) - (4)].simple_string);
             if (prepare_schema_table(YYTHD, lex, 0, SCH_TABLES))
               MYSQL_YYABORT;
           }
    break;

  case 1705:
#line 11452 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_OPEN_TABLES;
            lex->select_lex.db= (yyvsp[(3) - (4)].simple_string);
            if (prepare_schema_table(YYTHD, lex, 0, SCH_OPEN_TABLES))
              MYSQL_YYABORT;
          }
    break;

  case 1706:
#line 11460 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_PLUGINS;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_PLUGINS))
              MYSQL_YYABORT;
          }
    break;

  case 1707:
#line 11467 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->create_info.db_type= (yyvsp[(2) - (3)].db_type); }
    break;

  case 1708:
#line 11469 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->create_info.db_type= NULL; }
    break;

  case 1709:
#line 11471 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_FIELDS;
            if ((yyvsp[(5) - (6)].simple_string))
              (yyvsp[(4) - (6)].table)->change_db((yyvsp[(5) - (6)].simple_string));
            if (prepare_schema_table(YYTHD, lex, (yyvsp[(4) - (6)].table), SCH_COLUMNS))
              MYSQL_YYABORT;
          }
    break;

  case 1710:
#line 11480 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_SHOW_BINLOGS;
          }
    break;

  case 1711:
#line 11484 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_HOSTS;
          }
    break;

  case 1712:
#line 11488 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_BINLOG_EVENTS;
          }
    break;

  case 1714:
#line 11493 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_RELAYLOG_EVENTS;
          }
    break;

  case 1716:
#line 11498 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_KEYS;
            if ((yyvsp[(4) - (5)].simple_string))
              (yyvsp[(3) - (5)].table)->change_db((yyvsp[(4) - (5)].simple_string));
            if (prepare_schema_table(YYTHD, lex, (yyvsp[(3) - (5)].table), SCH_STATISTICS))
              MYSQL_YYABORT;
          }
    break;

  case 1717:
#line 11507 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_STORAGE_ENGINES;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_ENGINES))
              MYSQL_YYABORT;
          }
    break;

  case 1718:
#line 11514 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_AUTHORS;
          }
    break;

  case 1719:
#line 11519 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_CONTRIBUTORS;
          }
    break;

  case 1720:
#line 11524 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_PRIVILEGES;
          }
    break;

  case 1721:
#line 11529 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (void) create_select_for_variable("warning_count"); }
    break;

  case 1722:
#line 11531 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (void) create_select_for_variable("error_count"); }
    break;

  case 1723:
#line 11533 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->sql_command = SQLCOM_SHOW_WARNS;}
    break;

  case 1724:
#line 11535 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->sql_command = SQLCOM_SHOW_ERRORS;}
    break;

  case 1725:
#line 11537 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->sql_command = SQLCOM_SHOW_PROFILES; }
    break;

  case 1726:
#line 11539 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { 
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_PROFILE;
            if (prepare_schema_table(YYTHD, lex, NULL, SCH_PROFILES) != 0)
              YYABORT;
          }
    break;

  case 1727:
#line 11546 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS;
            lex->option_type= (yyvsp[(1) - (3)].var_type);
            if (prepare_schema_table(YYTHD, lex, 0, SCH_STATUS))
              MYSQL_YYABORT;
          }
    break;

  case 1728:
#line 11554 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->sql_command= SQLCOM_SHOW_PROCESSLIST;}
    break;

  case 1729:
#line 11556 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_VARIABLES;
            lex->option_type= (yyvsp[(1) - (3)].var_type);
            if (prepare_schema_table(YYTHD, lex, 0, SCH_VARIABLES))
              MYSQL_YYABORT;
          }
    break;

  case 1730:
#line 11564 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_CHARSETS;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_CHARSETS))
              MYSQL_YYABORT;
          }
    break;

  case 1731:
#line 11571 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_COLLATIONS;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_COLLATIONS))
              MYSQL_YYABORT;
          }
    break;

  case 1732:
#line 11578 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_GRANTS;
            LEX_USER *curr_user;
            if (!(curr_user= (LEX_USER*) lex->thd->alloc(sizeof(st_lex_user))))
              MYSQL_YYABORT;
            memset(curr_user, 0, sizeof(st_lex_user));
            lex->grant_user= curr_user;
          }
    break;

  case 1733:
#line 11588 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_GRANTS;
            lex->grant_user=(yyvsp[(3) - (3)].lex_user);
            lex->grant_user->password=null_lex_str;
          }
    break;

  case 1734:
#line 11595 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->sql_command=SQLCOM_SHOW_CREATE_DB;
            Lex->create_info.options=(yyvsp[(3) - (4)].num);
            Lex->name= (yyvsp[(4) - (4)].lex_str);
          }
    break;

  case 1735:
#line 11601 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (!lex->select_lex.add_table_to_list(YYTHD, (yyvsp[(3) - (3)].table), NULL,0))
              MYSQL_YYABORT;
            lex->only_view= 0;
            lex->create_info.storage_media= HA_SM_DEFAULT;
          }
    break;

  case 1736:
#line 11610 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (!lex->select_lex.add_table_to_list(YYTHD, (yyvsp[(3) - (3)].table), NULL, 0))
              MYSQL_YYABORT;
            lex->only_view= 1;
          }
    break;

  case 1737:
#line 11618 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_SHOW_MASTER_STAT;
          }
    break;

  case 1738:
#line 11622 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_STAT;
          }
    break;

  case 1739:
#line 11626 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            lex->sql_command = SQLCOM_SHOW_CREATE_PROC;
            lex->spname= (yyvsp[(3) - (3)].spname);
          }
    break;

  case 1740:
#line 11633 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            lex->sql_command = SQLCOM_SHOW_CREATE_FUNC;
            lex->spname= (yyvsp[(3) - (3)].spname);
          }
    break;

  case 1741:
#line 11640 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_CREATE_TRIGGER;
            lex->spname= (yyvsp[(3) - (3)].spname);
          }
    break;

  case 1742:
#line 11646 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_PROC;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_PROCEDURES))
              MYSQL_YYABORT;
          }
    break;

  case 1743:
#line 11653 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_FUNC;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_PROCEDURES))
              MYSQL_YYABORT;
          }
    break;

  case 1744:
#line 11660 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_SHOW_PROC_CODE;
            Lex->spname= (yyvsp[(3) - (3)].spname);
          }
    break;

  case 1745:
#line 11665 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_SHOW_FUNC_CODE;
            Lex->spname= (yyvsp[(3) - (3)].spname);
          }
    break;

  case 1746:
#line 11670 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->spname= (yyvsp[(3) - (3)].spname);
            Lex->sql_command = SQLCOM_SHOW_CREATE_EVENT;
          }
    break;

  case 1747:
#line 11678 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_STATUS; }
    break;

  case 1748:
#line 11680 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_MUTEX; }
    break;

  case 1749:
#line 11682 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_LOGS; }
    break;

  case 1754:
#line 11696 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.simple_string)= 0; }
    break;

  case 1755:
#line 11697 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.simple_string)= (yyvsp[(2) - (2)].lex_str).str; }
    break;

  case 1756:
#line 11701 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->verbose=0; }
    break;

  case 1757:
#line 11702 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->verbose=1; }
    break;

  case 1760:
#line 11711 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->mi.log_file_name = 0; }
    break;

  case 1761:
#line 11712 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->mi.log_file_name = (yyvsp[(2) - (2)].lex_str).str; }
    break;

  case 1762:
#line 11716 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->mi.pos = 4; /* skip magic number */ }
    break;

  case 1763:
#line 11717 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->mi.pos = (yyvsp[(2) - (2)].ulonglong_number); }
    break;

  case 1765:
#line 11723 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->wild= new (YYTHD->mem_root) String((yyvsp[(2) - (2)].lex_str).str, (yyvsp[(2) - (2)].lex_str).length,
                                                    system_charset_info);
            if (Lex->wild == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1766:
#line 11730 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Select->where= (yyvsp[(2) - (2)].item);
            if ((yyvsp[(2) - (2)].item))
              (yyvsp[(2) - (2)].item)->top_level_item();
          }
    break;

  case 1767:
#line 11740 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            mysql_init_select(lex);
            lex->current_select->parsing_place= SELECT_LIST;
            lex->sql_command= SQLCOM_SHOW_FIELDS;
            lex->select_lex.db= 0;
            lex->verbose= 0;
            if (prepare_schema_table(YYTHD, lex, (yyvsp[(2) - (2)].table), SCH_COLUMNS))
              MYSQL_YYABORT;
          }
    break;

  case 1768:
#line 11751 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Select->parsing_place= NO_MATTER;
          }
    break;

  case 1769:
#line 11755 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->describe|= DESCRIBE_NORMAL; }
    break;

  case 1770:
#line 11757 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->select_lex.options|= SELECT_DESCRIBE; }
    break;

  case 1778:
#line 11774 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1779:
#line 11775 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->describe|= DESCRIBE_EXTENDED; }
    break;

  case 1780:
#line 11776 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->describe|= DESCRIBE_PARTITIONS; }
    break;

  case 1781:
#line 11780 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1782:
#line 11781 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->wild= (yyvsp[(1) - (1)].string); }
    break;

  case 1783:
#line 11783 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->wild= new (YYTHD->mem_root) String((const char*) (yyvsp[(1) - (1)].lex_str).str,
                                                    (yyvsp[(1) - (1)].lex_str).length,
                                                    system_charset_info);
            if (Lex->wild == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1784:
#line 11797 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_FLUSH;
            lex->type= 0;
            lex->no_write_to_binlog= (yyvsp[(2) - (2)].num);
          }
    break;

  case 1785:
#line 11804 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1786:
#line 11809 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->type|= REFRESH_TABLES;
            /*
              Set type of metadata and table locks for
              FLUSH TABLES table_list [WITH READ LOCK].
            */
            YYPS->m_lock_type= TL_READ_NO_INSERT;
            YYPS->m_mdl_type= MDL_SHARED_HIGH_PRIO;
          }
    break;

  case 1787:
#line 11818 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1788:
#line 11819 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1790:
#line 11824 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1791:
#line 11826 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            TABLE_LIST *tables= Lex->query_tables;
            Lex->type|= REFRESH_READ_LOCK;
            for (; tables; tables= tables->next_global)
            {
              tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
              tables->required_type= FRMTYPE_TABLE; /* Don't try to flush views. */
              tables->open_type= OT_BASE_ONLY;      /* Ignore temporary tables. */
            }
          }
    break;

  case 1793:
#line 11841 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1794:
#line 11846 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_ERROR_LOG; }
    break;

  case 1795:
#line 11848 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_ENGINE_LOG; }
    break;

  case 1796:
#line 11850 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_GENERAL_LOG; }
    break;

  case 1797:
#line 11852 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_SLOW_LOG; }
    break;

  case 1798:
#line 11854 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_BINARY_LOG; }
    break;

  case 1799:
#line 11856 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_RELAY_LOG; }
    break;

  case 1800:
#line 11858 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_QUERY_CACHE_FREE; }
    break;

  case 1801:
#line 11860 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_HOSTS; }
    break;

  case 1802:
#line 11862 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_GRANT; }
    break;

  case 1803:
#line 11864 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_LOG; }
    break;

  case 1804:
#line 11866 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_STATUS; }
    break;

  case 1805:
#line 11868 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_DES_KEY_FILE; }
    break;

  case 1806:
#line 11870 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_USER_RESOURCES; }
    break;

  case 1807:
#line 11874 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1808:
#line 11875 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1809:
#line 11880 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RESET; lex->type=0;
          }
    break;

  case 1810:
#line 11885 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1813:
#line 11894 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_SLAVE; }
    break;

  case 1814:
#line 11895 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { }
    break;

  case 1815:
#line 11896 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_MASTER; }
    break;

  case 1816:
#line 11897 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_QUERY_CACHE;}
    break;

  case 1817:
#line 11901 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->reset_slave_info.all= false; }
    break;

  case 1818:
#line 11902 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->reset_slave_info.all= true; }
    break;

  case 1819:
#line 11907 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->type=0;
            lex->sql_command = SQLCOM_PURGE;
          }
    break;

  case 1820:
#line 11913 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1822:
#line 11922 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->to_log = (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 1823:
#line 11926 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->value_list.empty();
            lex->value_list.push_front((yyvsp[(2) - (2)].item));
            lex->sql_command= SQLCOM_PURGE_BEFORE;
          }
    break;

  case 1824:
#line 11938 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->value_list.empty();
            lex->value_list.push_front((yyvsp[(3) - (3)].item));
            lex->sql_command= SQLCOM_KILL;
          }
    break;

  case 1825:
#line 11947 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->type= 0; }
    break;

  case 1826:
#line 11948 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->type= 0; }
    break;

  case 1827:
#line 11949 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->type= ONLY_KILL_QUERY; }
    break;

  case 1828:
#line 11956 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CHANGE_DB;
            lex->select_lex.db= (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 1829:
#line 11967 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), 
                       (yyvsp[(2) - (2)].filetype) == FILETYPE_CSV ? "LOAD DATA" : "LOAD XML");
              MYSQL_YYABORT;
            }
          }
    break;

  case 1830:
#line 11979 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_LOAD;
            lex->local_file=  (yyvsp[(5) - (7)].num);
            lex->duplicates= DUP_ERROR;
            lex->ignore= 0;
            if (!(lex->exchange= new sql_exchange((yyvsp[(7) - (7)].lex_str).str, 0, (yyvsp[(2) - (7)].filetype))))
              MYSQL_YYABORT;
          }
    break;

  case 1831:
#line 11989 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(12) - (13)].table), NULL, TL_OPTION_UPDATING,
                                           (yyvsp[(4) - (13)].lock_type), MDL_SHARED_WRITE, NULL, (yyvsp[(13) - (13)].string_list)))
              MYSQL_YYABORT;
            lex->field_list.empty();
            lex->update_list.empty();
            lex->value_list.empty();
          }
    break;

  case 1832:
#line 11999 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->exchange->cs= (yyvsp[(15) - (15)].charset); }
    break;

  case 1833:
#line 12003 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1834:
#line 12007 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.filetype)= FILETYPE_CSV; }
    break;

  case 1835:
#line 12008 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.filetype)= FILETYPE_XML; }
    break;

  case 1836:
#line 12012 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)=0;}
    break;

  case 1837:
#line 12013 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)=1;}
    break;

  case 1838:
#line 12017 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
    break;

  case 1839:
#line 12019 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
#ifdef HAVE_QUERY_CACHE
            /*
              Ignore this option in SP to avoid problem with query cache
            */
            if (Lex->sphead != 0)
              (yyval.lock_type)= TL_WRITE_DEFAULT;
            else
#endif
              (yyval.lock_type)= TL_WRITE_CONCURRENT_INSERT;
          }
    break;

  case 1840:
#line 12030 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
    break;

  case 1841:
#line 12034 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->duplicates=DUP_ERROR; }
    break;

  case 1842:
#line 12035 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->duplicates=DUP_REPLACE; }
    break;

  case 1843:
#line 12036 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->ignore= 1; }
    break;

  case 1848:
#line 12051 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->field_term= (yyvsp[(3) - (3)].string);
          }
    break;

  case 1849:
#line 12056 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            DBUG_ASSERT(lex->exchange != 0);
            lex->exchange->enclosed= (yyvsp[(4) - (4)].string);
            lex->exchange->opt_enclosed= 1;
          }
    break;

  case 1850:
#line 12063 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->enclosed= (yyvsp[(3) - (3)].string);
          }
    break;

  case 1851:
#line 12068 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->escaped= (yyvsp[(3) - (3)].string);
          }
    break;

  case 1856:
#line 12086 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->line_term= (yyvsp[(3) - (3)].string);
          }
    break;

  case 1857:
#line 12091 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->line_start= (yyvsp[(3) - (3)].string);
          }
    break;

  case 1858:
#line 12098 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { }
    break;

  case 1859:
#line 12100 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->exchange->line_term = (yyvsp[(4) - (4)].string); }
    break;

  case 1861:
#line 12105 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->skip_lines= atol((yyvsp[(2) - (3)].lex_str).str);
          }
    break;

  case 1862:
#line 12112 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { }
    break;

  case 1863:
#line 12114 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { }
    break;

  case 1864:
#line 12118 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1865:
#line 12119 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1866:
#line 12120 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1867:
#line 12125 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->field_list.push_back((yyvsp[(3) - (3)].item)); }
    break;

  case 1868:
#line 12127 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->field_list.push_back((yyvsp[(1) - (1)].item)); }
    break;

  case 1869:
#line 12131 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {(yyval.item)= (yyvsp[(1) - (1)].item);}
    break;

  case 1870:
#line 12133 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_user_var_as_out_param((yyvsp[(2) - (2)].lex_str));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1871:
#line 12141 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1872:
#line 12142 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1875:
#line 12152 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->update_list.push_back((yyvsp[(1) - (5)].item)) || 
                lex->value_list.push_back((yyvsp[(4) - (5)].item)))
                MYSQL_YYABORT;
            (yyvsp[(4) - (5)].item)->set_name((yyvsp[(3) - (5)].simple_string), (uint) ((yyvsp[(5) - (5)].simple_string) - (yyvsp[(3) - (5)].simple_string)), YYTHD->charset());
          }
    break;

  case 1876:
#line 12165 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX_STRING tmp;
            THD *thd= YYTHD;
            const CHARSET_INFO *cs_con= thd->variables.collation_connection;
            const CHARSET_INFO *cs_cli= thd->variables.character_set_client;
            uint repertoire= thd->lex->text_string_is_7bit &&
                             my_charset_is_ascii_based(cs_cli) ?
                             MY_REPERTOIRE_ASCII : MY_REPERTOIRE_UNICODE30;
            if (thd->charset_is_collation_connection ||
                (repertoire == MY_REPERTOIRE_ASCII &&
                 my_charset_is_ascii_based(cs_con)))
              tmp= (yyvsp[(1) - (1)].lex_str);
            else
            {
              if (thd->convert_string(&tmp, cs_con, (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, cs_cli))
                MYSQL_YYABORT;
            }
            (yyval.item)= new (thd->mem_root) Item_string(tmp.str, tmp.length, cs_con,
                                                DERIVATION_COERCIBLE,
                                                repertoire);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1877:
#line 12189 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            uint repertoire= Lex->text_string_is_7bit ?
                             MY_REPERTOIRE_ASCII : MY_REPERTOIRE_UNICODE30;
            DBUG_ASSERT(my_charset_is_ascii_based(national_charset_info));
            (yyval.item)= new (YYTHD->mem_root) Item_string((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length,
                                                  national_charset_info,
                                                  DERIVATION_COERCIBLE,
                                                  repertoire);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1878:
#line 12201 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Item_string *str= new (YYTHD->mem_root) Item_string((yyvsp[(2) - (2)].lex_str).str,
                                                                (yyvsp[(2) - (2)].lex_str).length, (yyvsp[(1) - (2)].charset));
            if (str == NULL)
              MYSQL_YYABORT;
            str->set_repertoire_from_value();
            str->set_cs_specified(TRUE);

            (yyval.item)= str;
          }
    break;

  case 1879:
#line 12212 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Item_string* item= (Item_string*) (yyvsp[(1) - (2)].item);
            item->append((yyvsp[(2) - (2)].lex_str).str, (yyvsp[(2) - (2)].lex_str).length);
            if (!(item->collation.repertoire & MY_REPERTOIRE_EXTENDED))
            {
              /*
                 If the string has been pure ASCII so far,
                 check the new part.
              */
              const CHARSET_INFO *cs= YYTHD->variables.collation_connection;
              item->collation.repertoire|= my_string_repertoire(cs,
                                                                (yyvsp[(2) - (2)].lex_str).str,
                                                                (yyvsp[(2) - (2)].lex_str).length);
            }
          }
    break;

  case 1880:
#line 12231 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.string)= new (YYTHD->mem_root) String((yyvsp[(1) - (1)].lex_str).str,
                                             (yyvsp[(1) - (1)].lex_str).length,
                                             YYTHD->variables.collation_connection);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1881:
#line 12239 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Item *tmp= new (YYTHD->mem_root) Item_hex_string((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
            if (tmp == NULL)
              MYSQL_YYABORT;
            /*
              it is OK only emulate fix_fields, because we need only
              value of constant
            */
            tmp->quick_fix_field();
            (yyval.string)= tmp->val_str((String*) 0);
          }
    break;

  case 1882:
#line 12251 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Item *tmp= new (YYTHD->mem_root) Item_bin_string((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
            if (tmp == NULL)
              MYSQL_YYABORT;
            /*
              it is OK only emulate fix_fields, because we need only
              value of constant
            */
            tmp->quick_fix_field();
            (yyval.string)= tmp->val_str((String*) 0);
          }
    break;

  case 1883:
#line 12266 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;
            Item_param *item;
            if (! lex->parsing_options.allows_variable)
            {
              my_error(ER_VIEW_SELECT_VARIABLE, MYF(0));
              MYSQL_YYABORT;
            }
            item= new (thd->mem_root) Item_param((uint) (lip->get_tok_start() - thd->query()));
            if (!((yyval.item)= item) || lex->param_list.push_back(item))
            {
              my_message(ER_OUT_OF_RESOURCES, ER(ER_OUT_OF_RESOURCES), MYF(0));
              MYSQL_YYABORT;
            }
          }
    break;

  case 1884:
#line 12286 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.item) = (yyvsp[(1) - (1)].item); }
    break;

  case 1885:
#line 12287 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.item) = (yyvsp[(2) - (2)].item_num); }
    break;

  case 1886:
#line 12289 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyvsp[(2) - (2)].item_num)->max_length++;
            (yyval.item)= (yyvsp[(2) - (2)].item_num)->neg();
          }
    break;

  case 1887:
#line 12297 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.item) = (yyvsp[(1) - (1)].item); }
    break;

  case 1888:
#line 12298 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.item) = (yyvsp[(1) - (1)].item_num); }
    break;

  case 1889:
#line 12299 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].item); }
    break;

  case 1890:
#line 12301 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item) = new (YYTHD->mem_root) Item_null();
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            YYLIP->next_state= MY_LEX_OPERATOR_OR_IDENT;
          }
    break;

  case 1891:
#line 12308 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_int((char*) "FALSE",0,1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1892:
#line 12314 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_int((char*) "TRUE",1,1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1893:
#line 12320 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item) = new (YYTHD->mem_root) Item_hex_string((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1894:
#line 12326 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_bin_string((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1895:
#line 12332 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Item *tmp= new (YYTHD->mem_root) Item_hex_string((yyvsp[(2) - (2)].lex_str).str, (yyvsp[(2) - (2)].lex_str).length);
            if (tmp == NULL)
              MYSQL_YYABORT;
            /*
              it is OK only emulate fix_fieds, because we need only
              value of constant
            */
            tmp->quick_fix_field();
            String *str= tmp->val_str((String*) 0);

            Item_string *item_str;
            item_str= new (YYTHD->mem_root)
                        Item_string(NULL, /* name will be set in select_item */
                                    str ? str->ptr() : "",
                                    str ? str->length() : 0,
                                    (yyvsp[(1) - (2)].charset));
            if (!item_str ||
                !item_str->check_well_formed_result(&item_str->str_value, TRUE))
            {
              MYSQL_YYABORT;
            }

            item_str->set_repertoire_from_value();
            item_str->set_cs_specified(TRUE);

            (yyval.item)= item_str;
          }
    break;

  case 1896:
#line 12361 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Item *tmp= new (YYTHD->mem_root) Item_bin_string((yyvsp[(2) - (2)].lex_str).str, (yyvsp[(2) - (2)].lex_str).length);
            if (tmp == NULL)
              MYSQL_YYABORT;
            /*
              it is OK only emulate fix_fieds, because we need only
              value of constant
            */
            tmp->quick_fix_field();
            String *str= tmp->val_str((String*) 0);

            Item_string *item_str;
            item_str= new (YYTHD->mem_root)
                        Item_string(NULL, /* name will be set in select_item */
                                    str ? str->ptr() : "",
                                    str ? str->length() : 0,
                                    (yyvsp[(1) - (2)].charset));
            if (!item_str ||
                !item_str->check_well_formed_result(&item_str->str_value, TRUE))
            {
              MYSQL_YYABORT;
            }

            item_str->set_cs_specified(TRUE);

            (yyval.item)= item_str;
          }
    break;

  case 1897:
#line 12392 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            int error;
            (yyval.item_num)= new (YYTHD->mem_root)
                  Item_int((yyvsp[(1) - (1)].lex_str).str,
                           (longlong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, NULL, &error),
                           (yyvsp[(1) - (1)].lex_str).length);
            if ((yyval.item_num) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1898:
#line 12402 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            int error;
            (yyval.item_num)= new (YYTHD->mem_root)
                  Item_int((yyvsp[(1) - (1)].lex_str).str,
                           (longlong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, NULL, &error),
                           (yyvsp[(1) - (1)].lex_str).length);
            if ((yyval.item_num) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1899:
#line 12412 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item_num)= new (YYTHD->mem_root) Item_uint((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
            if ((yyval.item_num) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1900:
#line 12418 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item_num)= new (YYTHD->mem_root) Item_decimal((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length,
                                                   YYTHD->charset());
            if (((yyval.item_num) == NULL) || (YYTHD->is_error()))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 1901:
#line 12427 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item_num)= new (YYTHD->mem_root) Item_float((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
            if (((yyval.item_num) == NULL) || (YYTHD->is_error()))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 1902:
#line 12439 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            if (!((yyval.item)= create_temporal_literal(YYTHD, (yyvsp[(2) - (2)].lex_str).str, (yyvsp[(2) - (2)].lex_str).length, YYCSCL,
                                              MYSQL_TYPE_DATE, true)))
              MYSQL_YYABORT;
          }
    break;

  case 1903:
#line 12445 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            if (!((yyval.item)= create_temporal_literal(YYTHD, (yyvsp[(2) - (2)].lex_str).str, (yyvsp[(2) - (2)].lex_str).length, YYCSCL,
                                              MYSQL_TYPE_TIME, true)))
              MYSQL_YYABORT;
          }
    break;

  case 1904:
#line 12451 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            if (!((yyval.item)= create_temporal_literal(YYTHD, (yyvsp[(2) - (2)].lex_str).str, (yyvsp[(2) - (2)].lex_str).length, YYCSCL,
                                              MYSQL_TYPE_DATETIME, true)))
              MYSQL_YYABORT;
          }
    break;

  case 1905:
#line 12466 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.item)=(yyvsp[(1) - (1)].item); }
    break;

  case 1906:
#line 12467 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.item)=(yyvsp[(1) - (1)].item); }
    break;

  case 1907:
#line 12472 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            SELECT_LEX *sel= Select;
            (yyval.item)= new (YYTHD->mem_root) Item_field(Lex->current_context(),
                                                 NullS, (yyvsp[(1) - (3)].lex_str).str, "*");
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            sel->with_wild++;
          }
    break;

  case 1908:
#line 12481 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            SELECT_LEX *sel= Select;
            const char* schema= thd->client_capabilities & CLIENT_NO_SCHEMA ?
                                  NullS : (yyvsp[(1) - (5)].lex_str).str;
            (yyval.item)= new (thd->mem_root) Item_field(Lex->current_context(),
                                               schema,
                                               (yyvsp[(3) - (5)].lex_str).str,"*");
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            sel->with_wild++;
          }
    break;

  case 1909:
#line 12496 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.item)=(yyvsp[(1) - (1)].item); }
    break;

  case 1910:
#line 12501 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_variable *spv;
            sp_pcontext *spc = lex->spcont;
            if (spc && (spv = spc->find_variable((yyvsp[(1) - (1)].lex_str), false)))
            {
              Lex_input_stream *lip= &thd->m_parser_state->m_lip;

              /* We're compiling a stored procedure and found a variable */
              if (! lex->parsing_options.allows_variable)
              {
                my_error(ER_VIEW_SELECT_VARIABLE, MYF(0));
                MYSQL_YYABORT;
              }

              (yyval.item)= create_item_for_sp_var(thd, (yyvsp[(1) - (1)].lex_str), spv,
                                         lip->get_tok_start_prev(),
                                         lip->get_tok_end());
              if ((yyval.item) == NULL)
                MYSQL_YYABORT;
              lex->safe_to_cache_query=0;
            }
            else
            {
              SELECT_LEX *sel=Select;
              if ((sel->parsing_place != IN_HAVING) ||
                  (sel->get_in_sum_expr() > 0))
              {
                (yyval.item)= new (thd->mem_root) Item_field(Lex->current_context(),
                                                   NullS, NullS, (yyvsp[(1) - (1)].lex_str).str);
              }
              else
              {
                (yyval.item)= new (thd->mem_root) Item_ref(Lex->current_context(),
                                                 NullS, NullS, (yyvsp[(1) - (1)].lex_str).str);
              }
              if ((yyval.item) == NULL)
                MYSQL_YYABORT;
            }
          }
    break;

  case 1911:
#line 12542 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].item); }
    break;

  case 1912:
#line 12547 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            SELECT_LEX *sel=Select;
            if ((sel->parsing_place != IN_HAVING) ||
                (sel->get_in_sum_expr() > 0))
            {
              (yyval.item)= new (thd->mem_root) Item_field(Lex->current_context(),
                                                 NullS, NullS, (yyvsp[(1) - (1)].lex_str).str);
            }
            else
            {
              (yyval.item)= new (thd->mem_root) Item_ref(Lex->current_context(),
                                               NullS, NullS, (yyvsp[(1) - (1)].lex_str).str);
            }
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1913:
#line 12564 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].item); }
    break;

  case 1914:
#line 12569 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            /*
              FIXME This will work ok in simple_ident_nospvar case because
              we can't meet simple_ident_nospvar in trigger now. But it
              should be changed in future.
            */
            if (lex->sphead && lex->sphead->m_type == TYPE_ENUM_TRIGGER &&
                (!my_strcasecmp(system_charset_info, (yyvsp[(1) - (3)].lex_str).str, "NEW") ||
                 !my_strcasecmp(system_charset_info, (yyvsp[(1) - (3)].lex_str).str, "OLD")))
            {
              Item_trigger_field *trg_fld;
              bool new_row= ((yyvsp[(1) - (3)].lex_str).str[0]=='N' || (yyvsp[(1) - (3)].lex_str).str[0]=='n');

              if (lex->trg_chistics.event == TRG_EVENT_INSERT &&
                  !new_row)
              {
                my_error(ER_TRG_NO_SUCH_ROW_IN_TRG, MYF(0), "OLD", "on INSERT");
                MYSQL_YYABORT;
              }

              if (lex->trg_chistics.event == TRG_EVENT_DELETE &&
                  new_row)
              {
                my_error(ER_TRG_NO_SUCH_ROW_IN_TRG, MYF(0), "NEW", "on DELETE");
                MYSQL_YYABORT;
              }

              DBUG_ASSERT(!new_row ||
                          (lex->trg_chistics.event == TRG_EVENT_INSERT ||
                           lex->trg_chistics.event == TRG_EVENT_UPDATE));
              const bool read_only=
                !(new_row && lex->trg_chistics.action_time == TRG_ACTION_BEFORE);
              trg_fld= new (thd->mem_root)
                         Item_trigger_field(Lex->current_context(),
                                            new_row ?
                                              Item_trigger_field::NEW_ROW:
                                              Item_trigger_field::OLD_ROW,
                                            (yyvsp[(3) - (3)].lex_str).str,
                                            SELECT_ACL,
                                            read_only);
              if (trg_fld == NULL)
                MYSQL_YYABORT;

              /*
                Let us add this item to list of all Item_trigger_field objects
                in trigger.
              */
              lex->trg_table_fields.link_in_list(trg_fld,
                                                 &trg_fld->next_trg_field);

              (yyval.item)= trg_fld;
            }
            else
            {
              SELECT_LEX *sel= lex->current_select;
              if (sel->no_table_names_allowed)
              {
                my_error(ER_TABLENAME_NOT_ALLOWED_HERE,
                         MYF(0), (yyvsp[(1) - (3)].lex_str).str, thd->where);
              }
              if ((sel->parsing_place != IN_HAVING) ||
                  (sel->get_in_sum_expr() > 0))
              {
                (yyval.item)= new (thd->mem_root) Item_field(Lex->current_context(),
                                                   NullS, (yyvsp[(1) - (3)].lex_str).str, (yyvsp[(3) - (3)].lex_str).str);
              }
              else
              {
                (yyval.item)= new (thd->mem_root) Item_ref(Lex->current_context(),
                                                 NullS, (yyvsp[(1) - (3)].lex_str).str, (yyvsp[(3) - (3)].lex_str).str);
              }
              if ((yyval.item) == NULL)
                MYSQL_YYABORT;
            }
          }
    break;

  case 1915:
#line 12648 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            SELECT_LEX *sel= lex->current_select;
            if (sel->no_table_names_allowed)
            {
              my_error(ER_TABLENAME_NOT_ALLOWED_HERE,
                       MYF(0), (yyvsp[(2) - (4)].lex_str).str, thd->where);
            }
            if ((sel->parsing_place != IN_HAVING) ||
                (sel->get_in_sum_expr() > 0))
            {
              (yyval.item)= new (thd->mem_root) Item_field(Lex->current_context(),
                                                 NullS, (yyvsp[(2) - (4)].lex_str).str, (yyvsp[(4) - (4)].lex_str).str);

            }
            else
            {
              (yyval.item)= new (thd->mem_root) Item_ref(Lex->current_context(),
                                               NullS, (yyvsp[(2) - (4)].lex_str).str, (yyvsp[(4) - (4)].lex_str).str);
            }
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1916:
#line 12673 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            SELECT_LEX *sel= lex->current_select;
            const char* schema= (thd->client_capabilities & CLIENT_NO_SCHEMA ?
                                 NullS : (yyvsp[(1) - (5)].lex_str).str);
            if (sel->no_table_names_allowed)
            {
              my_error(ER_TABLENAME_NOT_ALLOWED_HERE,
                       MYF(0), (yyvsp[(3) - (5)].lex_str).str, thd->where);
            }
            if ((sel->parsing_place != IN_HAVING) ||
                (sel->get_in_sum_expr() > 0))
            {
              (yyval.item)= new (thd->mem_root) Item_field(Lex->current_context(),
                                                 schema,
                                                 (yyvsp[(3) - (5)].lex_str).str, (yyvsp[(5) - (5)].lex_str).str);
            }
            else
            {
              (yyval.item)= new (thd->mem_root) Item_ref(Lex->current_context(),
                                               schema,
                                               (yyvsp[(3) - (5)].lex_str).str, (yyvsp[(5) - (5)].lex_str).str);
            }
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1917:
#line 12703 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str);}
    break;

  case 1918:
#line 12705 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            TABLE_LIST *table= Select->table_list.first;
            if (my_strcasecmp(table_alias_charset, (yyvsp[(1) - (5)].lex_str).str, table->db))
            {
              my_error(ER_WRONG_DB_NAME, MYF(0), (yyvsp[(1) - (5)].lex_str).str);
              MYSQL_YYABORT;
            }
            if (my_strcasecmp(table_alias_charset, (yyvsp[(3) - (5)].lex_str).str,
                              table->table_name))
            {
              my_error(ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[(3) - (5)].lex_str).str);
              MYSQL_YYABORT;
            }
            (yyval.lex_str)=(yyvsp[(5) - (5)].lex_str);
          }
    break;

  case 1919:
#line 12721 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            TABLE_LIST *table= Select->table_list.first;
            if (my_strcasecmp(table_alias_charset, (yyvsp[(1) - (3)].lex_str).str, table->alias))
            {
              my_error(ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[(1) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }
            (yyval.lex_str)=(yyvsp[(3) - (3)].lex_str);
          }
    break;

  case 1920:
#line 12730 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(2) - (2)].lex_str);}
    break;

  case 1921:
#line 12735 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.table)= new Table_ident((yyvsp[(1) - (1)].lex_str));
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1922:
#line 12741 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.table)= new Table_ident(YYTHD, (yyvsp[(1) - (3)].lex_str),(yyvsp[(3) - (3)].lex_str),0);
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1923:
#line 12747 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            /* For Delphi */
            (yyval.table)= new Table_ident((yyvsp[(2) - (2)].lex_str));
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1924:
#line 12757 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.table)= new Table_ident((yyvsp[(1) - (2)].lex_str));
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1925:
#line 12763 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.table)= new Table_ident(YYTHD, (yyvsp[(1) - (4)].lex_str),(yyvsp[(3) - (4)].lex_str),0);
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1926:
#line 12772 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX_STRING db={(char*) any_db,3};
            (yyval.table)= new Table_ident(YYTHD, db,(yyvsp[(1) - (1)].lex_str),0);
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1927:
#line 12781 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str); }
    break;

  case 1928:
#line 12783 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
            {
              const CHARSET_INFO *cs= system_charset_info;
              int dummy_error;
              uint wlen= cs->cset->well_formed_len(cs, (yyvsp[(1) - (1)].lex_str).str,
                                                   (yyvsp[(1) - (1)].lex_str).str+(yyvsp[(1) - (1)].lex_str).length,
                                                   (yyvsp[(1) - (1)].lex_str).length, &dummy_error);
              if (wlen < (yyvsp[(1) - (1)].lex_str).length)
              {
                ErrConvString err((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, &my_charset_bin);
                my_error(ER_INVALID_CHARACTER_STRING, MYF(0),
                         cs->csname, err.ptr());
                MYSQL_YYABORT;
              }
              (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str);
            }
            else
            {
              if (thd->convert_string(&(yyval.lex_str), system_charset_info,
                                  (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
    break;

  case 1929:
#line 12813 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
              (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lex_str), system_charset_info,
                                  (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
    break;

  case 1930:
#line 12829 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;

            if (thd->charset_is_collation_connection)
              (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lex_str), thd->variables.collation_connection,
                                  (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            } 
          }
    break;

  case 1931:
#line 12845 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;

            if (thd->charset_is_character_set_filesystem)
              (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lex_str),
                                      thd->variables.character_set_filesystem,
                                      (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
    break;

  case 1932:
#line 12861 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str); }
    break;

  case 1933:
#line 12863 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            (yyval.lex_str).str= thd->strmake((yyvsp[(1) - (1)].symbol).str, (yyvsp[(1) - (1)].symbol).length);
            if ((yyval.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lex_str).length= (yyvsp[(1) - (1)].symbol).length;
          }
    break;

  case 1934:
#line 12873 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str); }
    break;

  case 1935:
#line 12875 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            (yyval.lex_str).str= thd->strmake((yyvsp[(1) - (1)].symbol).str, (yyvsp[(1) - (1)].symbol).length);
            if ((yyval.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lex_str).length= (yyvsp[(1) - (1)].symbol).length;
          }
    break;

  case 1936:
#line 12885 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str);}
    break;

  case 1937:
#line 12886 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str);}
    break;

  case 1938:
#line 12887 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str);}
    break;

  case 1939:
#line 12892 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            if (!((yyval.lex_user)=(LEX_USER*) thd->alloc(sizeof(st_lex_user))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user = (yyvsp[(1) - (1)].lex_str);
            (yyval.lex_user)->host.str= (char *) "%";
            (yyval.lex_user)->host.length= 1;
            (yyval.lex_user)->password= null_lex_str; 
            (yyval.lex_user)->plugin= empty_lex_str;
            (yyval.lex_user)->auth= empty_lex_str;

            if (check_string_char_length(&(yyval.lex_user)->user, ER(ER_USERNAME),
                                         USERNAME_CHAR_LENGTH,
                                         system_charset_info, 0))
              MYSQL_YYABORT;
          }
    break;

  case 1940:
#line 12909 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            if (!((yyval.lex_user)=(LEX_USER*) thd->alloc(sizeof(st_lex_user))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user = (yyvsp[(1) - (3)].lex_str); (yyval.lex_user)->host=(yyvsp[(3) - (3)].lex_str);
            (yyval.lex_user)->password= null_lex_str; 
            (yyval.lex_user)->plugin= empty_lex_str;
            (yyval.lex_user)->auth= empty_lex_str;

            if (check_string_char_length(&(yyval.lex_user)->user, ER(ER_USERNAME),
                                         USERNAME_CHAR_LENGTH,
                                         system_charset_info, 0) ||
                check_host_name(&(yyval.lex_user)->host))
              MYSQL_YYABORT;
            /*
              Convert hostname part of username to lowercase.
              It's OK to use in-place lowercase as long as
              the character set is utf8.
            */
            my_casedn_str(system_charset_info, (yyval.lex_user)->host.str);
          }
    break;

  case 1941:
#line 12931 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            if (!((yyval.lex_user)=(LEX_USER*) YYTHD->alloc(sizeof(st_lex_user))))
              MYSQL_YYABORT;
            /* 
              empty LEX_USER means current_user and 
              will be handled in the  get_current_user() function
              later
            */
            memset((yyval.lex_user), 0, sizeof(LEX_USER));
          }
    break;

  case 1942:
#line 12945 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1943:
#line 12946 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1944:
#line 12947 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1945:
#line 12948 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1946:
#line 12949 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1947:
#line 12950 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1948:
#line 12951 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1949:
#line 12952 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1950:
#line 12953 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1951:
#line 12954 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1952:
#line 12955 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1953:
#line 12956 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1954:
#line 12957 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1955:
#line 12958 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1956:
#line 12959 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1957:
#line 12960 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1958:
#line 12961 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1959:
#line 12962 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1960:
#line 12963 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1961:
#line 12964 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1962:
#line 12965 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1963:
#line 12966 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1964:
#line 12967 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1965:
#line 12968 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1966:
#line 12969 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1967:
#line 12970 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1968:
#line 12971 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1969:
#line 12972 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1970:
#line 12973 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1971:
#line 12974 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1972:
#line 12975 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1973:
#line 12976 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1974:
#line 12977 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1975:
#line 12978 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1976:
#line 12979 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1977:
#line 12980 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1978:
#line 12981 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1979:
#line 12982 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1980:
#line 12983 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1981:
#line 12984 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1982:
#line 12985 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1983:
#line 12986 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1984:
#line 12987 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1985:
#line 12988 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1986:
#line 12989 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1987:
#line 12990 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1988:
#line 12991 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1989:
#line 12992 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1990:
#line 12993 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1991:
#line 13003 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1992:
#line 13004 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1993:
#line 13005 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1994:
#line 13006 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1995:
#line 13007 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1996:
#line 13008 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1997:
#line 13009 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1998:
#line 13010 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 1999:
#line 13011 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2000:
#line 13012 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2001:
#line 13013 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2002:
#line 13014 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2003:
#line 13015 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2004:
#line 13016 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2005:
#line 13017 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2006:
#line 13018 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2007:
#line 13019 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2008:
#line 13020 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2009:
#line 13021 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2010:
#line 13022 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2011:
#line 13023 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2012:
#line 13024 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2013:
#line 13025 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2014:
#line 13026 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2015:
#line 13027 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2016:
#line 13028 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2017:
#line 13029 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2018:
#line 13030 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2019:
#line 13031 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2020:
#line 13032 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2021:
#line 13033 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2022:
#line 13034 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2023:
#line 13035 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2024:
#line 13036 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2025:
#line 13037 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2026:
#line 13038 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2027:
#line 13039 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2028:
#line 13040 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2029:
#line 13041 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2030:
#line 13042 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2031:
#line 13043 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2032:
#line 13044 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2033:
#line 13045 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2034:
#line 13046 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2035:
#line 13047 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2036:
#line 13052 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2037:
#line 13053 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2038:
#line 13054 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2039:
#line 13055 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2040:
#line 13056 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2041:
#line 13057 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2042:
#line 13058 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2043:
#line 13059 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2044:
#line 13060 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2045:
#line 13061 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2046:
#line 13062 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2047:
#line 13063 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2048:
#line 13064 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2049:
#line 13065 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2050:
#line 13066 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2051:
#line 13067 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2052:
#line 13068 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2053:
#line 13069 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2054:
#line 13070 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2055:
#line 13071 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2056:
#line 13072 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2057:
#line 13073 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2058:
#line 13074 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2059:
#line 13075 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2060:
#line 13076 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2061:
#line 13077 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2062:
#line 13078 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2063:
#line 13079 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2064:
#line 13080 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2065:
#line 13081 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2066:
#line 13082 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2067:
#line 13083 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2068:
#line 13084 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2069:
#line 13085 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2070:
#line 13086 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2071:
#line 13087 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2072:
#line 13088 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2073:
#line 13089 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2074:
#line 13090 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2075:
#line 13091 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2076:
#line 13092 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2077:
#line 13093 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2078:
#line 13094 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2079:
#line 13095 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2080:
#line 13096 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2081:
#line 13097 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2082:
#line 13098 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2083:
#line 13099 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2084:
#line 13100 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2085:
#line 13101 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2086:
#line 13102 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2087:
#line 13103 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2088:
#line 13104 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2089:
#line 13105 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2090:
#line 13106 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2091:
#line 13107 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2092:
#line 13108 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2093:
#line 13109 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2094:
#line 13110 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2095:
#line 13111 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2096:
#line 13112 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2097:
#line 13113 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2098:
#line 13114 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2099:
#line 13115 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2100:
#line 13116 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2101:
#line 13117 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2102:
#line 13118 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2103:
#line 13119 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2104:
#line 13120 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2105:
#line 13121 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2106:
#line 13122 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2107:
#line 13123 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2108:
#line 13124 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2109:
#line 13125 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2110:
#line 13126 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2111:
#line 13127 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2112:
#line 13128 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2113:
#line 13129 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2114:
#line 13130 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2115:
#line 13131 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2116:
#line 13132 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2117:
#line 13133 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2118:
#line 13134 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2119:
#line 13135 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2120:
#line 13136 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2121:
#line 13137 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2122:
#line 13138 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2123:
#line 13139 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2124:
#line 13140 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2125:
#line 13141 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2126:
#line 13142 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2127:
#line 13143 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2128:
#line 13144 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2129:
#line 13145 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2130:
#line 13146 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2131:
#line 13147 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2132:
#line 13148 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2133:
#line 13149 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2134:
#line 13150 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2135:
#line 13151 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2136:
#line 13152 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2137:
#line 13153 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2138:
#line 13154 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2139:
#line 13155 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2140:
#line 13156 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2141:
#line 13157 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2142:
#line 13158 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2143:
#line 13159 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2144:
#line 13160 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2145:
#line 13161 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2146:
#line 13162 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2147:
#line 13163 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2148:
#line 13164 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2149:
#line 13165 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2150:
#line 13166 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2151:
#line 13167 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2152:
#line 13168 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2153:
#line 13169 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2154:
#line 13170 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2155:
#line 13171 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2156:
#line 13172 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2157:
#line 13173 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2158:
#line 13174 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2159:
#line 13175 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2160:
#line 13176 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2161:
#line 13177 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2162:
#line 13178 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2163:
#line 13179 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2164:
#line 13180 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2165:
#line 13181 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2166:
#line 13182 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2167:
#line 13183 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2168:
#line 13184 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2169:
#line 13185 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2170:
#line 13186 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2171:
#line 13187 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2172:
#line 13188 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2173:
#line 13189 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2174:
#line 13190 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2175:
#line 13191 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2176:
#line 13192 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2177:
#line 13193 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2178:
#line 13194 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2179:
#line 13195 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2180:
#line 13196 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2181:
#line 13197 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2182:
#line 13198 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2183:
#line 13199 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2184:
#line 13200 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2185:
#line 13201 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2186:
#line 13202 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2187:
#line 13203 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2188:
#line 13204 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2189:
#line 13205 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2190:
#line 13206 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2191:
#line 13207 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2192:
#line 13208 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2193:
#line 13209 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2194:
#line 13210 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2195:
#line 13211 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2196:
#line 13212 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2197:
#line 13213 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2198:
#line 13214 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2199:
#line 13215 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2200:
#line 13216 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2201:
#line 13217 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2202:
#line 13218 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2203:
#line 13219 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2204:
#line 13220 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2205:
#line 13221 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2206:
#line 13222 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2207:
#line 13223 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2208:
#line 13224 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2209:
#line 13225 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2210:
#line 13226 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2211:
#line 13227 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2212:
#line 13228 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2213:
#line 13229 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2214:
#line 13230 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2215:
#line 13231 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2216:
#line 13232 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2217:
#line 13233 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2218:
#line 13234 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2219:
#line 13235 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2220:
#line 13236 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2221:
#line 13237 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2222:
#line 13238 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2223:
#line 13239 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2224:
#line 13240 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2225:
#line 13241 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2226:
#line 13242 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2227:
#line 13243 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2228:
#line 13244 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2229:
#line 13245 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2230:
#line 13246 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2231:
#line 13247 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2232:
#line 13248 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2233:
#line 13249 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2234:
#line 13250 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2235:
#line 13251 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2236:
#line 13252 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2237:
#line 13253 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2238:
#line 13254 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2239:
#line 13255 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2240:
#line 13256 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2241:
#line 13257 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2242:
#line 13258 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2243:
#line 13259 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2244:
#line 13260 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2245:
#line 13261 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2246:
#line 13262 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2247:
#line 13263 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2248:
#line 13264 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2249:
#line 13265 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2250:
#line 13266 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2251:
#line 13267 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2252:
#line 13268 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2253:
#line 13269 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2254:
#line 13270 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2255:
#line 13271 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2256:
#line 13272 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2257:
#line 13273 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2258:
#line 13274 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2259:
#line 13275 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2260:
#line 13276 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2261:
#line 13277 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2262:
#line 13278 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2263:
#line 13279 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2264:
#line 13280 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2265:
#line 13281 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2266:
#line 13282 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2267:
#line 13283 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2268:
#line 13284 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2269:
#line 13285 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2270:
#line 13286 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2271:
#line 13287 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2272:
#line 13288 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2273:
#line 13289 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2274:
#line 13290 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2275:
#line 13291 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2276:
#line 13292 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2277:
#line 13293 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2278:
#line 13294 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2279:
#line 13295 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2280:
#line 13296 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2281:
#line 13297 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2282:
#line 13304 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SET_OPTION;
            mysql_init_select(lex);
            lex->option_type=OPT_SESSION;
            lex->var_list.empty();
            lex->one_shot_set= 0;
            lex->autocommit= 0;
          }
    break;

  case 2283:
#line 13314 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2284:
#line 13318 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2285:
#line 13319 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2288:
#line 13328 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;

            if (lex->sphead)
            {
              /*
                If we are in SP we want have own LEX for each assignment.
                This is mostly because it is hard for several sp_instr_set
                and sp_instr_set_trigger instructions share one LEX.
                (Well, it is theoretically possible but adds some extra
                overhead on preparation for execution stage and IMO less
                robust).

                QQ: May be we should simply prohibit group assignments in SP?
              */
              lex->sphead->reset_lex(thd);
              lex= thd->lex;

              /* Set new LEX as if we at start of set rule. */
              lex->sql_command= SQLCOM_SET_OPTION;
              mysql_init_select(lex);
              lex->option_type=OPT_SESSION;
              lex->var_list.empty();
              lex->one_shot_set= 0;
              lex->autocommit= 0;
              lex->sphead->m_tmp_query= lip->get_tok_start();
            }
          }
    break;

  case 2289:
#line 13359 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;

            if (lex->sphead)
            {
              sp_head *sp= lex->sphead;

              if (!lex->var_list.is_empty())
              {
                /*
                  We have assignment to user or system variable or
                  option setting, so we should construct sp_instr_stmt
                  for it.
                */
                LEX_STRING qbuff;
                sp_instr_stmt *i;

                if (!(i= new sp_instr_stmt(sp->instructions(), lex->spcont,
                                           lex)))
                  MYSQL_YYABORT;

                /*
                  Extract the query statement from the tokenizer.  The
                  end is either lip->ptr, if there was no lookahead,
                  lip->tok_end otherwise.
                */
                if (yychar == YYEMPTY)
                  qbuff.length= lip->get_ptr() - sp->m_tmp_query;
                else
                  qbuff.length= lip->get_tok_end() - sp->m_tmp_query;

                if (!(qbuff.str= (char*) alloc_root(thd->mem_root,
                                                    qbuff.length + 5)))
                  MYSQL_YYABORT;

                strmake(strmake(qbuff.str, "SET ", 4), sp->m_tmp_query,
                        qbuff.length);
                qbuff.length+= 4;
                i->m_query= qbuff;
                if (sp->add_instr(i))
                  MYSQL_YYABORT;
              }
              if (lex->sphead->restore_lex(thd))
                MYSQL_YYABORT;
            }
          }
    break;

  case 2290:
#line 13410 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2291:
#line 13411 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_GLOBAL; }
    break;

  case 2292:
#line 13412 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2293:
#line 13413 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2294:
#line 13417 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)= OPT_DEFAULT; }
    break;

  case 2295:
#line 13421 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2296:
#line 13422 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_GLOBAL; }
    break;

  case 2297:
#line 13423 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2298:
#line 13424 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2299:
#line 13428 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_DEFAULT; }
    break;

  case 2300:
#line 13429 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_GLOBAL; }
    break;

  case 2301:
#line 13430 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2302:
#line 13431 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2305:
#line 13441 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            LEX_STRING *name= &(yyvsp[(2) - (4)].variable).base_name;

            if ((yyvsp[(2) - (4)].variable).var == trg_new_row_fake_var)
            {
              /* We are in trigger and assigning value to field of new row */
              if ((yyvsp[(1) - (4)].var_type))
              {
                my_parse_error(ER(ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
              }
              if (set_trigger_new_row(YYTHD, name, (yyvsp[(4) - (4)].item)))
                MYSQL_YYABORT;
            }
            else if ((yyvsp[(2) - (4)].variable).var)
            {
              if ((yyvsp[(1) - (4)].var_type))
                lex->option_type= (yyvsp[(1) - (4)].var_type);

              /* It is a system variable. */
              if (set_system_variable(thd, &(yyvsp[(2) - (4)].variable), lex->option_type, (yyvsp[(4) - (4)].item)))
                MYSQL_YYABORT;
            }
            else
            {
              sp_pcontext *spc= lex->spcont;
              sp_variable *spv= spc->find_variable(*name, false);

              if ((yyvsp[(1) - (4)].var_type))
              {
                my_parse_error(ER(ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
              }

              /* It is a local variable. */
              if (set_local_variable(thd, spv, (yyvsp[(4) - (4)].item)))
                MYSQL_YYABORT;
            }
          }
    break;

  case 2306:
#line 13483 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex=Lex;
            lex->option_type= (yyvsp[(1) - (5)].var_type);
            Item *item= new (thd->mem_root) Item_int((int32) (yyvsp[(5) - (5)].tx_isolation));
            if (item == NULL)
              MYSQL_YYABORT;
            set_var *var= new set_var(lex->option_type,
                                      find_sys_var(thd, "tx_isolation"),
                                      &null_lex_str,
                                      item);
            if (var == NULL)
              MYSQL_YYABORT;
            lex->var_list.push_back(var);
          }
    break;

  case 2307:
#line 13502 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Item_func_set_user_var *item;
            item= new (YYTHD->mem_root) Item_func_set_user_var((yyvsp[(2) - (4)].lex_str), (yyvsp[(4) - (4)].item));
            if (item == NULL)
              MYSQL_YYABORT;
            set_var_user *var= new set_var_user(item);
            if (var == NULL)
              MYSQL_YYABORT;
            Lex->var_list.push_back(var);
          }
    break;

  case 2308:
#line 13513 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            struct sys_var_with_base tmp= (yyvsp[(4) - (6)].variable);
            /* Lookup if necessary: must be a system variable. */
            if (tmp.var == NULL)
            {
              if (find_sys_var_null_base(thd, &tmp))
                MYSQL_YYABORT;
            }
            if (set_system_variable(thd, &tmp, (yyvsp[(3) - (6)].var_type), (yyvsp[(6) - (6)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 2309:
#line 13526 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            int flags= (yyvsp[(2) - (2)].charset) ? 0 : set_var_collation_client::SET_CS_DEFAULT;
            const CHARSET_INFO *cs2;
            cs2= (yyvsp[(2) - (2)].charset) ? (yyvsp[(2) - (2)].charset): global_system_variables.character_set_client;
            set_var_collation_client *var;
            var= new set_var_collation_client(flags,
                                              cs2,
                                              thd->variables.collation_database,
                                              cs2);
            if (var == NULL)
              MYSQL_YYABORT;
            lex->var_list.push_back(var);
          }
    break;

  case 2310:
#line 13542 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_pcontext *spc= lex->spcont;
            LEX_STRING names;

            names.str= (char *)"names";
            names.length= 5;
            if (spc && spc->find_variable(names, false))
              my_error(ER_SP_BAD_VAR_SHADOW, MYF(0), names.str);
            else
              my_parse_error(ER(ER_SYNTAX_ERROR));

            MYSQL_YYABORT;
          }
    break;

  case 2311:
#line 13557 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            const CHARSET_INFO *cs2;
            const CHARSET_INFO *cs3;
            int flags= set_var_collation_client::SET_CS_NAMES
                       | ((yyvsp[(2) - (3)].charset) ? 0 : set_var_collation_client::SET_CS_DEFAULT)
                       | ((yyvsp[(3) - (3)].charset) ? set_var_collation_client::SET_CS_COLLATE : 0);
            cs2= (yyvsp[(2) - (3)].charset) ? (yyvsp[(2) - (3)].charset) : global_system_variables.character_set_client;
            cs3= (yyvsp[(3) - (3)].charset) ? (yyvsp[(3) - (3)].charset) : cs2;
            if (!my_charset_same(cs2, cs3))
            {
              my_error(ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                       cs3->name, cs2->csname);
              MYSQL_YYABORT;
            }
            set_var_collation_client *var;
            var= new set_var_collation_client(flags, cs3, cs3, cs3);
            if (var == NULL)
              MYSQL_YYABORT;
            lex->var_list.push_back(var);
          }
    break;

  case 2312:
#line 13579 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            LEX_USER *user;
            sp_pcontext *spc= lex->spcont;
            LEX_STRING pw;

            pw.str= (char *)"password";
            pw.length= 8;
            if (spc && spc->find_variable(pw, false))
            {
              my_error(ER_SP_BAD_VAR_SHADOW, MYF(0), pw.str);
              MYSQL_YYABORT;
            }
            if (!(user=(LEX_USER*) thd->alloc(sizeof(LEX_USER))))
              MYSQL_YYABORT;
            user->host=null_lex_str;
            user->user.str=thd->security_ctx->user;
            user->user.length= strlen(thd->security_ctx->user);
            set_var_password *var= new set_var_password(user, (yyvsp[(3) - (3)].simple_string));
            if (var == NULL)
              MYSQL_YYABORT;
            thd->lex->var_list.push_back(var);
            thd->lex->autocommit= TRUE;
            if (lex->sphead)
              lex->sphead->m_flags|= sp_head::HAS_SET_AUTOCOMMIT_STMT;
          }
    break;

  case 2313:
#line 13607 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            set_var_password *var= new set_var_password((yyvsp[(3) - (5)].lex_user),(yyvsp[(5) - (5)].simple_string));
            if (var == NULL)
              MYSQL_YYABORT;
            Lex->var_list.push_back(var);
            Lex->autocommit= TRUE;
            if (Lex->sphead)
              Lex->sphead->m_flags|= sp_head::HAS_SET_AUTOCOMMIT_STMT;
          }
    break;

  case 2314:
#line 13620 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            sp_pcontext *spc= thd->lex->spcont;
            sp_variable *spv;

            /* Best effort lookup for system variable. */
            if (!spc || !(spv = spc->find_variable((yyvsp[(1) - (1)].lex_str), false)))
            {
              struct sys_var_with_base tmp= {NULL, (yyvsp[(1) - (1)].lex_str)};

              /* Not an SP local variable */
              if (find_sys_var_null_base(thd, &tmp))
                MYSQL_YYABORT;

              (yyval.variable)= tmp;
            }
            else
            {
              /*
                Possibly an SP local variable (or a shadowed sysvar).
                Will depend on the context of the SET statement.
              */
              (yyval.variable).var= NULL;
              (yyval.variable).base_name= (yyvsp[(1) - (1)].lex_str);
            }
          }
    break;

  case 2315:
#line 13647 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (check_reserved_words(&(yyvsp[(1) - (3)].lex_str)))
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            if (lex->sphead && lex->sphead->m_type == TYPE_ENUM_TRIGGER &&
                (!my_strcasecmp(system_charset_info, (yyvsp[(1) - (3)].lex_str).str, "NEW") || 
                 !my_strcasecmp(system_charset_info, (yyvsp[(1) - (3)].lex_str).str, "OLD")))
            {
              if ((yyvsp[(1) - (3)].lex_str).str[0]=='O' || (yyvsp[(1) - (3)].lex_str).str[0]=='o')
              {
                my_error(ER_TRG_CANT_CHANGE_ROW, MYF(0), "OLD", "");
                MYSQL_YYABORT;
              }
              if (lex->trg_chistics.event == TRG_EVENT_DELETE)
              {
                my_error(ER_TRG_NO_SUCH_ROW_IN_TRG, MYF(0),
                         "NEW", "on DELETE");
                MYSQL_YYABORT;
              }
              if (lex->trg_chistics.action_time == TRG_ACTION_AFTER)
              {
                my_error(ER_TRG_CANT_CHANGE_ROW, MYF(0), "NEW", "after ");
                MYSQL_YYABORT;
              }
              /* This special combination will denote field of NEW row */
              (yyval.variable).var= trg_new_row_fake_var;
              (yyval.variable).base_name= (yyvsp[(3) - (3)].lex_str);
            }
            else
            {
              sys_var *tmp=find_sys_var(YYTHD, (yyvsp[(3) - (3)].lex_str).str, (yyvsp[(3) - (3)].lex_str).length);
              if (!tmp)
                MYSQL_YYABORT;
              if (!tmp->is_struct())
                my_error(ER_VARIABLE_IS_NOT_STRUCT, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              (yyval.variable).var= tmp;
              (yyval.variable).base_name= (yyvsp[(1) - (3)].lex_str);
            }
          }
    break;

  case 2316:
#line 13690 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            sys_var *tmp=find_sys_var(YYTHD, (yyvsp[(3) - (3)].lex_str).str, (yyvsp[(3) - (3)].lex_str).length);
            if (!tmp)
              MYSQL_YYABORT;
            if (!tmp->is_struct())
              my_error(ER_VARIABLE_IS_NOT_STRUCT, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
            (yyval.variable).var= tmp;
            (yyval.variable).base_name.str=    (char*) "default";
            (yyval.variable).base_name.length= 7;
          }
    break;

  case 2317:
#line 13703 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.tx_isolation)= ISO_READ_UNCOMMITTED; }
    break;

  case 2318:
#line 13704 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.tx_isolation)= ISO_READ_COMMITTED; }
    break;

  case 2319:
#line 13705 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.tx_isolation)= ISO_REPEATABLE_READ; }
    break;

  case 2320:
#line 13706 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.tx_isolation)= ISO_SERIALIZABLE; }
    break;

  case 2321:
#line 13710 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.simple_string)=(yyvsp[(1) - (1)].lex_str).str;}
    break;

  case 2322:
#line 13712 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.simple_string)= (yyvsp[(3) - (4)].lex_str).length ? YYTHD->variables.old_passwords ?
              Item_func_old_password::alloc(YYTHD, (yyvsp[(3) - (4)].lex_str).str, (yyvsp[(3) - (4)].lex_str).length) :
              Item_func_password::alloc(YYTHD, (yyvsp[(3) - (4)].lex_str).str, (yyvsp[(3) - (4)].lex_str).length) :
              (yyvsp[(3) - (4)].lex_str).str;
            if ((yyval.simple_string) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2323:
#line 13721 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.simple_string)= (yyvsp[(3) - (4)].lex_str).length ? Item_func_old_password::alloc(YYTHD, (yyvsp[(3) - (4)].lex_str).str,
                                                          (yyvsp[(3) - (4)].lex_str).length) :
              (yyvsp[(3) - (4)].lex_str).str;
            if ((yyval.simple_string) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2324:
#line 13732 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.item)=(yyvsp[(1) - (1)].item); }
    break;

  case 2325:
#line 13733 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.item)=0; }
    break;

  case 2326:
#line 13735 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)=new (YYTHD->mem_root) Item_string("ON",  2, system_charset_info);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2327:
#line 13741 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)=new (YYTHD->mem_root) Item_string("ALL", 3, system_charset_info);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2328:
#line 13747 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.item)=new (YYTHD->mem_root) Item_string("binary", 6, system_charset_info);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2329:
#line 13758 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "LOCK");
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_LOCK_TABLES;
          }
    break;

  case 2330:
#line 13769 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2335:
#line 13784 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            thr_lock_type lock_type= (thr_lock_type) (yyvsp[(3) - (3)].num);
            bool lock_for_write= (lock_type >= TL_WRITE_ALLOW_WRITE);
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (3)].table), (yyvsp[(2) - (3)].lex_str_ptr), 0, lock_type,
                                           (lock_for_write ?
                                            MDL_SHARED_NO_READ_WRITE :
                                            MDL_SHARED_READ)))
              MYSQL_YYABORT;
          }
    break;

  case 2336:
#line 13796 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)= TL_READ_NO_INSERT; }
    break;

  case 2337:
#line 13797 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)= TL_WRITE_DEFAULT; }
    break;

  case 2338:
#line 13798 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)= TL_WRITE_LOW_PRIORITY; }
    break;

  case 2339:
#line 13799 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)= TL_READ; }
    break;

  case 2340:
#line 13804 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "UNLOCK");
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_UNLOCK_TABLES;
          }
    break;

  case 2341:
#line 13815 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2342:
#line 13824 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HANDLER");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_HA_OPEN;
            if (!lex->current_select->add_table_to_list(thd, (yyvsp[(2) - (4)].table), (yyvsp[(4) - (4)].lex_str_ptr), 0))
              MYSQL_YYABORT;
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_handler_open();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2343:
#line 13840 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HANDLER");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_HA_CLOSE;
            if (!lex->current_select->add_table_to_list(thd, (yyvsp[(2) - (3)].table), 0, 0))
              MYSQL_YYABORT;
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_handler_close();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2344:
#line 13856 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HANDLER");
              MYSQL_YYABORT;
            }
            lex->expr_allows_subselect= FALSE;
            lex->sql_command = SQLCOM_HA_READ;
            Item *one= new (YYTHD->mem_root) Item_int((int32) 1);
            if (one == NULL)
              MYSQL_YYABORT;
            lex->current_select->select_limit= one;
            lex->current_select->offset_limit= 0;
            if (!lex->current_select->add_table_to_list(lex->thd, (yyvsp[(2) - (3)].table), 0, 0))
              MYSQL_YYABORT;
          }
    break;

  case 2345:
#line 13874 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            Lex->expr_allows_subselect= TRUE;
            /* Stored functions are not supported for HANDLER READ. */
            if (lex->uses_stored_routines())
            {
              my_error(ER_NOT_SUPPORTED_YET, MYF(0),
                       "stored functions in HANDLER ... READ");
              MYSQL_YYABORT;
            }
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_handler_read((yyvsp[(5) - (7)].ha_read_mode),
                                  lex->ident.str, lex->insert_list,
                                  thd->m_parser_state->m_yacc.m_ha_rkey_mode);
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2346:
#line 13894 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->ident= null_lex_str; (yyval.ha_read_mode)=(yyvsp[(1) - (1)].ha_read_mode); }
    break;

  case 2347:
#line 13895 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->ident= (yyvsp[(1) - (2)].lex_str); (yyval.ha_read_mode)=(yyvsp[(2) - (2)].ha_read_mode); }
    break;

  case 2348:
#line 13899 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.ha_read_mode)= RFIRST; }
    break;

  case 2349:
#line 13900 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.ha_read_mode)= RNEXT;  }
    break;

  case 2350:
#line 13904 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.ha_read_mode)= RFIRST; }
    break;

  case 2351:
#line 13905 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.ha_read_mode)= RNEXT;  }
    break;

  case 2352:
#line 13906 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.ha_read_mode)= RPREV;  }
    break;

  case 2353:
#line 13907 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.ha_read_mode)= RLAST;  }
    break;

  case 2354:
#line 13909 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            YYTHD->m_parser_state->m_yacc.m_ha_rkey_mode= (yyvsp[(1) - (1)].ha_rkey_mode);
            Lex->insert_list= new List_item;
            if (! Lex->insert_list)
              MYSQL_YYABORT;
          }
    break;

  case 2355:
#line 13916 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.ha_read_mode)= RKEY;
          }
    break;

  case 2356:
#line 13922 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_KEY_EXACT;   }
    break;

  case 2357:
#line 13923 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_NEXT; }
    break;

  case 2358:
#line 13924 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_PREV; }
    break;

  case 2359:
#line 13925 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_AFTER_KEY;   }
    break;

  case 2360:
#line 13926 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_BEFORE_KEY;  }
    break;

  case 2361:
#line 13933 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2362:
#line 13938 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_REVOKE;
            lex->type= 0;
          }
    break;

  case 2363:
#line 13944 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->columns.elements)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_REVOKE;
            lex->type= TYPE_ENUM_FUNCTION;
          }
    break;

  case 2364:
#line 13955 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->columns.elements)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_REVOKE;
            lex->type= TYPE_ENUM_PROCEDURE;
          }
    break;

  case 2365:
#line 13966 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_REVOKE_ALL;
          }
    break;

  case 2366:
#line 13970 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->users_list.push_front ((yyvsp[(3) - (5)].lex_user));
            lex->sql_command= SQLCOM_REVOKE;
            lex->type= TYPE_ENUM_PROXY;
          }
    break;

  case 2367:
#line 13980 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2368:
#line 13986 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT;
            lex->type= 0;
          }
    break;

  case 2369:
#line 13993 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->columns.elements)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_GRANT;
            lex->type= TYPE_ENUM_FUNCTION;
          }
    break;

  case 2370:
#line 14005 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->columns.elements)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_GRANT;
            lex->type= TYPE_ENUM_PROCEDURE;
          }
    break;

  case 2371:
#line 14016 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->users_list.push_front ((yyvsp[(3) - (6)].lex_user));
            lex->sql_command= SQLCOM_GRANT;
            lex->type= TYPE_ENUM_PROXY;
          }
    break;

  case 2374:
#line 14030 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2375:
#line 14032 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { 
            Lex->all_privileges= 1; 
            Lex->grant= GLOBAL_ACLS;
          }
    break;

  case 2380:
#line 14050 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->which_columns = SELECT_ACL;}
    break;

  case 2381:
#line 14051 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2382:
#line 14053 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->which_columns = INSERT_ACL;}
    break;

  case 2383:
#line 14054 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2384:
#line 14056 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->which_columns = UPDATE_ACL; }
    break;

  case 2385:
#line 14057 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2386:
#line 14059 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->which_columns = REFERENCES_ACL;}
    break;

  case 2387:
#line 14060 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2388:
#line 14061 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->grant |= DELETE_ACL;}
    break;

  case 2389:
#line 14062 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2390:
#line 14063 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->grant |= INDEX_ACL;}
    break;

  case 2391:
#line 14064 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->grant |= ALTER_ACL;}
    break;

  case 2392:
#line 14065 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->grant |= CREATE_ACL;}
    break;

  case 2393:
#line 14066 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->grant |= DROP_ACL;}
    break;

  case 2394:
#line 14067 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->grant |= EXECUTE_ACL;}
    break;

  case 2395:
#line 14068 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->grant |= RELOAD_ACL;}
    break;

  case 2396:
#line 14069 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->grant |= SHUTDOWN_ACL;}
    break;

  case 2397:
#line 14070 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->grant |= PROCESS_ACL;}
    break;

  case 2398:
#line 14071 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->grant |= FILE_ACL;}
    break;

  case 2399:
#line 14072 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->grant |= GRANT_ACL;}
    break;

  case 2400:
#line 14073 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->grant |= SHOW_DB_ACL;}
    break;

  case 2401:
#line 14074 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->grant |= SUPER_ACL;}
    break;

  case 2402:
#line 14075 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->grant |= CREATE_TMP_ACL;}
    break;

  case 2403:
#line 14076 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->grant |= LOCK_TABLES_ACL; }
    break;

  case 2404:
#line 14077 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->grant |= REPL_SLAVE_ACL; }
    break;

  case 2405:
#line 14078 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->grant |= REPL_CLIENT_ACL; }
    break;

  case 2406:
#line 14079 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->grant |= CREATE_VIEW_ACL; }
    break;

  case 2407:
#line 14080 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->grant |= SHOW_VIEW_ACL; }
    break;

  case 2408:
#line 14081 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->grant |= CREATE_PROC_ACL; }
    break;

  case 2409:
#line 14082 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->grant |= ALTER_PROC_ACL; }
    break;

  case 2410:
#line 14083 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->grant |= CREATE_USER_ACL; }
    break;

  case 2411:
#line 14084 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->grant |= EVENT_ACL;}
    break;

  case 2412:
#line 14085 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->grant |= TRIGGER_ACL; }
    break;

  case 2413:
#line 14086 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->grant |= CREATE_TABLESPACE_ACL; }
    break;

  case 2414:
#line 14090 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2415:
#line 14091 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2418:
#line 14101 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->x509_subject)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "SUBJECT");
              MYSQL_YYABORT;
            }
            lex->x509_subject=(yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 2419:
#line 14111 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->x509_issuer)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "ISSUER");
              MYSQL_YYABORT;
            }
            lex->x509_issuer=(yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 2420:
#line 14121 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->ssl_cipher)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "CIPHER");
              MYSQL_YYABORT;
            }
            lex->ssl_cipher=(yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 2421:
#line 14134 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            size_t dummy;
            if (lex->copy_db_to(&lex->current_select->db, &dummy))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_ACLS & ~GRANT_ACL;
            else if (lex->columns.elements)
            {
              my_message(ER_ILLEGAL_GRANT_FOR_TABLE,
                         ER(ER_ILLEGAL_GRANT_FOR_TABLE), MYF(0));
              MYSQL_YYABORT;
            }
          }
    break;

  case 2422:
#line 14149 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->current_select->db = (yyvsp[(1) - (3)].lex_str).str;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_ACLS & ~GRANT_ACL;
            else if (lex->columns.elements)
            {
              my_message(ER_ILLEGAL_GRANT_FOR_TABLE,
                         ER(ER_ILLEGAL_GRANT_FOR_TABLE), MYF(0));
              MYSQL_YYABORT;
            }
          }
    break;

  case 2423:
#line 14162 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->current_select->db = NULL;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant= GLOBAL_ACLS & ~GRANT_ACL;
            else if (lex->columns.elements)
            {
              my_message(ER_ILLEGAL_GRANT_FOR_TABLE,
                         ER(ER_ILLEGAL_GRANT_FOR_TABLE), MYF(0));
              MYSQL_YYABORT;
            }
          }
    break;

  case 2424:
#line 14175 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (!lex->current_select->add_table_to_list(lex->thd, (yyvsp[(1) - (1)].table),NULL,
                                                        TL_OPTION_UPDATING))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant =  TABLE_ACLS & ~GRANT_ACL;
          }
    break;

  case 2425:
#line 14187 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(1) - (1)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 2426:
#line 14192 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(3) - (3)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 2427:
#line 14200 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(1) - (1)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 2428:
#line 14205 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(3) - (3)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 2429:
#line 14213 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.lex_user)=(yyvsp[(1) - (4)].lex_user); (yyvsp[(1) - (4)].lex_user)->password=(yyvsp[(4) - (4)].lex_str);
            if (Lex->sql_command == SQLCOM_REVOKE)
              MYSQL_YYABORT;
            if ((yyvsp[(4) - (4)].lex_str).length)
            {
              if (YYTHD->variables.old_passwords)
              {
                char *buff= 
                  (char *) YYTHD->alloc(SCRAMBLED_PASSWORD_CHAR_LENGTH_323+1);
                if (buff == NULL)
                  MYSQL_YYABORT;
                my_make_scrambled_password_323(buff, (yyvsp[(4) - (4)].lex_str).str, (yyvsp[(4) - (4)].lex_str).length);
                (yyvsp[(1) - (4)].lex_user)->password.str= buff;
                (yyvsp[(1) - (4)].lex_user)->password.length= SCRAMBLED_PASSWORD_CHAR_LENGTH_323;
              }
              else
              {
                char *buff= 
                  (char *) YYTHD->alloc(SCRAMBLED_PASSWORD_CHAR_LENGTH+1);
                if (buff == NULL)
                  MYSQL_YYABORT;
                my_make_scrambled_password(buff, (yyvsp[(4) - (4)].lex_str).str, (yyvsp[(4) - (4)].lex_str).length);
                (yyvsp[(1) - (4)].lex_user)->password.str= buff;
                (yyvsp[(1) - (4)].lex_user)->password.length= SCRAMBLED_PASSWORD_CHAR_LENGTH;
              }
            }
          }
    break;

  case 2430:
#line 14242 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { 
            if (Lex->sql_command == SQLCOM_REVOKE)
              MYSQL_YYABORT;
            (yyval.lex_user)= (yyvsp[(1) - (5)].lex_user); 
            (yyvsp[(1) - (5)].lex_user)->password= (yyvsp[(5) - (5)].lex_str); 
          }
    break;

  case 2431:
#line 14249 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            if (Lex->sql_command == SQLCOM_REVOKE)
              MYSQL_YYABORT;
            (yyval.lex_user)= (yyvsp[(1) - (4)].lex_user);
            (yyvsp[(1) - (4)].lex_user)->plugin= (yyvsp[(4) - (4)].lex_str);
            (yyvsp[(1) - (4)].lex_user)->auth= empty_lex_str;
          }
    break;

  case 2432:
#line 14257 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            if (Lex->sql_command == SQLCOM_REVOKE)
              MYSQL_YYABORT;
            (yyval.lex_user)= (yyvsp[(1) - (6)].lex_user);
            (yyvsp[(1) - (6)].lex_user)->plugin= (yyvsp[(4) - (6)].lex_str);
            (yyvsp[(1) - (6)].lex_user)->auth= (yyvsp[(6) - (6)].lex_str);
          }
    break;

  case 2433:
#line 14265 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.lex_user)= (yyvsp[(1) - (1)].lex_user); (yyvsp[(1) - (1)].lex_user)->password= null_lex_str; }
    break;

  case 2434:
#line 14270 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->grant |= lex->which_columns;
          }
    break;

  case 2438:
#line 14284 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            String *new_str = new (YYTHD->mem_root) String((const char*) (yyvsp[(1) - (1)].lex_str).str,(yyvsp[(1) - (1)].lex_str).length,system_charset_info);
            if (new_str == NULL)
              MYSQL_YYABORT;
            List_iterator <LEX_COLUMN> iter(Lex->columns);
            class LEX_COLUMN *point;
            LEX *lex=Lex;
            while ((point=iter++))
            {
              if (!my_strcasecmp(system_charset_info,
                                 point->column.ptr(), new_str->ptr()))
                break;
            }
            lex->grant_tot_col|= lex->which_columns;
            if (point)
              point->rights |= lex->which_columns;
            else
            {
              LEX_COLUMN *col= new LEX_COLUMN (*new_str,lex->which_columns);
              if (col == NULL)
                MYSQL_YYABORT;
              lex->columns.push_back(col);
            }
          }
    break;

  case 2440:
#line 14313 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->ssl_type=SSL_TYPE_SPECIFIED;
          }
    break;

  case 2441:
#line 14317 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->ssl_type=SSL_TYPE_ANY;
          }
    break;

  case 2442:
#line 14321 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->ssl_type=SSL_TYPE_X509;
          }
    break;

  case 2443:
#line 14325 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->ssl_type=SSL_TYPE_NONE;
          }
    break;

  case 2444:
#line 14331 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2446:
#line 14336 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2447:
#line 14337 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->grant |= GRANT_ACL;}
    break;

  case 2448:
#line 14341 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2449:
#line 14342 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2450:
#line 14346 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->grant |= GRANT_ACL;}
    break;

  case 2451:
#line 14348 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.questions=(yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::QUERIES_PER_HOUR;
          }
    break;

  case 2452:
#line 14354 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.updates=(yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::UPDATES_PER_HOUR;
          }
    break;

  case 2453:
#line 14360 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.conn_per_hour= (yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::CONNECTIONS_PER_HOUR;
          }
    break;

  case 2454:
#line 14366 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.user_conn= (yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::USER_CONNECTIONS;
          }
    break;

  case 2455:
#line 14375 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_BEGIN;
            lex->start_transaction_opt= 0;
          }
    break;

  case 2456:
#line 14380 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2457:
#line 14384 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2458:
#line 14385 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2459:
#line 14390 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
    break;

  case 2460:
#line 14391 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_NO; }
    break;

  case 2461:
#line 14392 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_YES; }
    break;

  case 2462:
#line 14397 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
    break;

  case 2463:
#line 14398 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_YES; }
    break;

  case 2464:
#line 14399 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_NO; }
    break;

  case 2465:
#line 14403 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2466:
#line 14404 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2467:
#line 14409 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_COMMIT;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[(3) - (4)].m_yes_no_unk) != TVL_YES || (yyvsp[(4) - (4)].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[(3) - (4)].m_yes_no_unk);
            lex->tx_release= (yyvsp[(4) - (4)].m_yes_no_unk);
          }
    break;

  case 2468:
#line 14421 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[(3) - (4)].m_yes_no_unk) != TVL_YES || (yyvsp[(4) - (4)].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[(3) - (4)].m_yes_no_unk);
            lex->tx_release= (yyvsp[(4) - (4)].m_yes_no_unk);
          }
    break;

  case 2469:
#line 14431 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK_TO_SAVEPOINT;
            lex->ident= (yyvsp[(5) - (5)].lex_str);
          }
    break;

  case 2470:
#line 14440 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SAVEPOINT;
            lex->ident= (yyvsp[(2) - (2)].lex_str);
          }
    break;

  case 2471:
#line 14449 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RELEASE_SAVEPOINT;
            lex->ident= (yyvsp[(3) - (3)].lex_str);
          }
    break;

  case 2472:
#line 14462 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2474:
#line 14468 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            if (add_select_to_union_list(Lex, (bool)(yyvsp[(2) - (2)].num), TRUE))
              MYSQL_YYABORT;
          }
    break;

  case 2475:
#line 14473 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            /*
              Remove from the name resolution context stack the context of the
              last select in the union.
            */
            Lex->pop_context();
          }
    break;

  case 2476:
#line 14483 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 2477:
#line 14484 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 2478:
#line 14485 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 2481:
#line 14494 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            DBUG_ASSERT(lex->current_select->linkage != GLOBAL_OPTIONS_TYPE);
            SELECT_LEX *sel= lex->current_select;
            SELECT_LEX_UNIT *unit= sel->master_unit();
            SELECT_LEX *fake= unit->fake_select_lex;
            if (fake)
            {
              unit->global_parameters= fake;
              fake->no_table_names_allowed= 1;
              lex->current_select= fake;
            }
            thd->where= "global ORDER clause";
          }
    break;

  case 2482:
#line 14510 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            thd->lex->current_select->no_table_names_allowed= 0;
            thd->where= "";
          }
    break;

  case 2485:
#line 14523 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)=1; }
    break;

  case 2486:
#line 14524 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)=1; }
    break;

  case 2487:
#line 14525 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { (yyval.num)=0; }
    break;

  case 2488:
#line 14530 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { 
            (yyval.select_lex)= Lex->current_select->master_unit()->first_select();
          }
    break;

  case 2489:
#line 14534 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            (yyval.select_lex)= Lex->current_select->master_unit()->first_select();
          }
    break;

  case 2491:
#line 14543 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            if (add_select_to_union_list(Lex, (bool)(yyvsp[(3) - (3)].num), FALSE))
              MYSQL_YYABORT;
          }
    break;

  case 2492:
#line 14549 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->pop_context();
            (yyval.select_lex)= (yyvsp[(1) - (6)].select_lex);
          }
    break;

  case 2493:
#line 14558 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { 
            (yyval.select_lex)= (yyvsp[(2) - (3)].select_lex);
          }
    break;

  case 2494:
#line 14564 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (!lex->expr_allows_subselect ||
               lex->sql_command == (int)SQLCOM_PURGE)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            /* 
              we are making a "derived table" for the parenthesis
              as we need to have a lex level to fit the union 
              after the parenthesis, e.g. 
              (SELECT .. ) UNION ...  becomes 
              SELECT * FROM ((SELECT ...) UNION ...)
            */
            if (mysql_new_select(Lex, 1))
              MYSQL_YYABORT;
          }
    break;

  case 2495:
#line 14585 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;

            lex->pop_context();
            SELECT_LEX *child= lex->current_select;
            lex->current_select = lex->current_select->outer_select();
            lex->nest_level--;
            lex->current_select->n_child_sum_items += child->n_sum_items;
            /*
              A subselect can add fields to an outer select. Reserve space for
              them.
            */
            lex->current_select->select_n_where_fields+=
            child->select_n_where_fields;
          }
    break;

  case 2500:
#line 14613 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Select->options|= SELECT_STRAIGHT_JOIN; }
    break;

  case 2501:
#line 14615 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            if (check_simple_select())
              MYSQL_YYABORT;
            YYPS->m_lock_type= TL_READ_HIGH_PRIORITY;
            YYPS->m_mdl_type= MDL_SHARED_READ;
            Select->options|= SELECT_HIGH_PRIORITY;
          }
    break;

  case 2502:
#line 14622 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Select->options|= SELECT_DISTINCT; }
    break;

  case 2503:
#line 14623 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Select->options|= SELECT_SMALL_RESULT; }
    break;

  case 2504:
#line 14624 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Select->options|= SELECT_BIG_RESULT; }
    break;

  case 2505:
#line 14626 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            if (check_simple_select())
              MYSQL_YYABORT;
            Select->options|= OPTION_BUFFER_RESULT;
          }
    break;

  case 2506:
#line 14632 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            if (check_simple_select())
              MYSQL_YYABORT;
            Select->options|= OPTION_FOUND_ROWS;
          }
    break;

  case 2507:
#line 14637 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Select->options|= SELECT_ALL; }
    break;

  case 2508:
#line 14648 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2509:
#line 14650 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2510:
#line 14652 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2524:
#line 14685 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            /*
              We have to distinguish missing DEFINER-clause from case when
              CURRENT_USER specified as definer explicitly in order to properly
              handle CREATE TRIGGER statements which come to replication thread
              from older master servers (i.e. to create non-suid trigger in this
              case).
            */
            YYTHD->lex->definer= 0;
          }
    break;

  case 2525:
#line 14699 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            YYTHD->lex->definer= get_current_user(YYTHD, (yyvsp[(3) - (3)].lex_user));
          }
    break;

  case 2526:
#line 14712 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2527:
#line 14714 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2528:
#line 14716 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2529:
#line 14721 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->create_view_mode= VIEW_CREATE_OR_REPLACE; }
    break;

  case 2530:
#line 14726 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED; }
    break;

  case 2531:
#line 14728 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->create_view_algorithm= VIEW_ALGORITHM_MERGE; }
    break;

  case 2532:
#line 14730 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->create_view_algorithm= VIEW_ALGORITHM_TMPTABLE; }
    break;

  case 2533:
#line 14735 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->create_view_suid= VIEW_SUID_DEFAULT; }
    break;

  case 2534:
#line 14737 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->create_view_suid= VIEW_SUID_DEFINER; }
    break;

  case 2535:
#line 14739 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->create_view_suid= VIEW_SUID_INVOKER; }
    break;

  case 2536:
#line 14744 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_CREATE_VIEW;
            /* first table in list is target VIEW name */
            if (!lex->select_lex.add_table_to_list(thd, (yyvsp[(3) - (3)].table), NULL,
                                                   TL_OPTION_UPDATING,
                                                   TL_IGNORE,
                                                   MDL_EXCLUSIVE))
              MYSQL_YYABORT;
            lex->query_tables->open_strategy= TABLE_LIST::OPEN_STUB;
          }
    break;

  case 2538:
#line 14761 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2540:
#line 14767 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
              Lex->view_list.push_back((LEX_STRING*)
              sql_memdup(&(yyvsp[(1) - (1)].lex_str), sizeof(LEX_STRING)));
            }
    break;

  case 2541:
#line 14772 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
              Lex->view_list.push_back((LEX_STRING*)
              sql_memdup(&(yyvsp[(3) - (3)].lex_str), sizeof(LEX_STRING)));
            }
    break;

  case 2542:
#line 14779 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->parsing_options.allows_variable= FALSE;
            lex->parsing_options.allows_select_into= FALSE;
            lex->parsing_options.allows_select_procedure= FALSE;
            lex->parsing_options.allows_derived= FALSE;
            lex->create_view_select.str= (char *) YYLIP->get_cpp_ptr();
          }
    break;

  case 2543:
#line 14788 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            uint len= YYLIP->get_cpp_ptr() - lex->create_view_select.str;
            void *create_view_select= thd->memdup(lex->create_view_select.str, len);
            lex->create_view_select.length= len;
            lex->create_view_select.str= (char *) create_view_select;
            trim_whitespace(thd->charset(), &lex->create_view_select);
            lex->parsing_options.allows_variable= TRUE;
            lex->parsing_options.allows_select_into= TRUE;
            lex->parsing_options.allows_select_procedure= TRUE;
            lex->parsing_options.allows_derived= TRUE;
          }
    break;

  case 2546:
#line 14810 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->create_view_check= VIEW_CHECK_NONE; }
    break;

  case 2547:
#line 14812 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->create_view_check= VIEW_CHECK_CASCADED; }
    break;

  case 2548:
#line 14814 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->create_view_check= VIEW_CHECK_CASCADED; }
    break;

  case 2549:
#line 14816 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->create_view_check= VIEW_CHECK_LOCAL; }
    break;

  case 2550:
#line 14833 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { /* $8 */
            Lex->raw_trg_on_table_name_begin= YYLIP->get_tok_start();
          }
    break;

  case 2551:
#line 14839 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { /* $12 */
            Lex->raw_trg_on_table_name_end= YYLIP->get_tok_start();
          }
    break;

  case 2552:
#line 14844 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { /* $15 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;
            sp_head *sp;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "TRIGGER");
              MYSQL_YYABORT;
            }

            if (!(sp= new sp_head()))
              MYSQL_YYABORT;
            sp->reset_thd_mem_root(thd);
            sp->init(lex);
            sp->m_type= TYPE_ENUM_TRIGGER;
            sp->init_sp_name(thd, (yyvsp[(3) - (14)].spname));
            lex->stmt_definition_begin= (yyvsp[(2) - (14)].simple_string);
            lex->ident.str= (yyvsp[(7) - (14)].simple_string);
            lex->ident.length= (yyvsp[(11) - (14)].simple_string) - (yyvsp[(7) - (14)].simple_string);

            lex->sphead= sp;
            lex->spname= (yyvsp[(3) - (14)].spname);

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
            lex->sphead->m_chistics= &lex->sp_chistics;
            lex->sphead->set_body_start(thd, lip->get_cpp_ptr());
          }
    break;

  case 2553:
#line 14874 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { /* $17 */
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            lex->sql_command= SQLCOM_CREATE_TRIGGER;
            sp->set_stmt_end(YYTHD);
            sp->restore_thd_mem_root(YYTHD);

            if (sp->is_not_allowed_in_function("trigger"))
              MYSQL_YYABORT;

            /*
              We have to do it after parsing trigger body, because some of
              sp_proc_stmt alternatives are not saving/restoring LEX, so
              lex->query_tables can be wiped out.
            */
            if (!lex->select_lex.add_table_to_list(YYTHD, (yyvsp[(9) - (16)].table),
                                                   (LEX_STRING*) 0,
                                                   TL_OPTION_UPDATING,
                                                   TL_READ_NO_INSERT,
                                                   MDL_SHARED_NO_WRITE))
              MYSQL_YYABORT;
          }
    break;

  case 2554:
#line 14908 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (is_native_function(thd, & (yyvsp[(4) - (8)].lex_str)))
            {
              my_error(ER_NATIVE_FCT_NAME_COLLISION, MYF(0),
                       (yyvsp[(4) - (8)].lex_str).str);
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CREATE_FUNCTION;
            lex->udf.type= UDFTYPE_AGGREGATE;
            lex->stmt_definition_begin= (yyvsp[(2) - (8)].simple_string);
            lex->udf.name = (yyvsp[(4) - (8)].lex_str);
            lex->udf.returns=(Item_result) (yyvsp[(6) - (8)].num);
            lex->udf.dl=(yyvsp[(8) - (8)].lex_str).str;
          }
    break;

  case 2555:
#line 14926 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (is_native_function(thd, & (yyvsp[(3) - (7)].lex_str)))
            {
              my_error(ER_NATIVE_FCT_NAME_COLLISION, MYF(0),
                       (yyvsp[(3) - (7)].lex_str).str);
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CREATE_FUNCTION;
            lex->udf.type= UDFTYPE_FUNCTION;
            lex->stmt_definition_begin= (yyvsp[(1) - (7)].simple_string);
            lex->udf.name = (yyvsp[(3) - (7)].lex_str);
            lex->udf.returns=(Item_result) (yyvsp[(5) - (7)].num);
            lex->udf.dl=(yyvsp[(7) - (7)].lex_str).str;
          }
    break;

  case 2556:
#line 14949 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { /* $5 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;
            sp_head *sp;
            const char* tmp_param_begin;

            lex->stmt_definition_begin= (yyvsp[(1) - (4)].simple_string);
            lex->spname= (yyvsp[(3) - (4)].spname);

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            /* Order is important here: new - reset - init */
            sp= new sp_head();
            if (sp == NULL)
              MYSQL_YYABORT;
            sp->reset_thd_mem_root(thd);
            sp->init(lex);
            sp->init_sp_name(thd, lex->spname);

            sp->m_type= TYPE_ENUM_FUNCTION;
            lex->sphead= sp;

            tmp_param_begin= lip->get_cpp_tok_start();
            tmp_param_begin++;
            lex->sphead->m_param_begin= tmp_param_begin;
          }
    break;

  case 2557:
#line 14981 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { /* $8 */
            Lex->sphead->m_param_end= YYLIP->get_cpp_tok_start();
          }
    break;

  case 2558:
#line 14985 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { /* $10 */
            LEX *lex= Lex;
            lex->charset= NULL;
            lex->length= lex->dec= NULL;
            lex->interval_list.empty();
            lex->type= 0;
          }
    break;

  case 2559:
#line 14993 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { /* $12 */
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            /*
              This was disabled in 5.1.12. See bug #20701
              When collation support in SP is implemented, then this test
              should be removed.
            */
            if (((yyvsp[(11) - (11)].num) == MYSQL_TYPE_STRING || (yyvsp[(11) - (11)].num) == MYSQL_TYPE_VARCHAR)
                && (lex->type & BINCMP_FLAG))
            {
              my_error(ER_NOT_SUPPORTED_YET, MYF(0), "return value collation");
              MYSQL_YYABORT;
            }

            if (sp->fill_field_definition(YYTHD, lex,
                                          (enum enum_field_types) (yyvsp[(11) - (11)].num),
                                          &sp->m_return_field_def))
              MYSQL_YYABORT;

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
    break;

  case 2560:
#line 15016 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { /* $14 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;

            lex->sphead->m_chistics= &lex->sp_chistics;
            lex->sphead->set_body_start(thd, lip->get_cpp_tok_start());
          }
    break;

  case 2561:
#line 15025 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            if (sp->is_not_allowed_in_function("function"))
              MYSQL_YYABORT;

            lex->sql_command= SQLCOM_CREATE_SPFUNCTION;
            sp->set_stmt_end(thd);
            if (!(sp->m_flags & sp_head::HAS_RETURN))
            {
              my_error(ER_SP_NORETURN, MYF(0), sp->m_qname.str);
              MYSQL_YYABORT;
            }
            if (is_native_function(thd, & sp->m_name))
            {
              /*
                This warning will be printed when
                [1] A client query is parsed,
                [2] A stored function is loaded by db_load_routine.
                Printing the warning for [2] is intentional, to cover the
                following scenario:
                - A user define a SF 'foo' using MySQL 5.N
                - An application uses select foo(), and works.
                - MySQL 5.{N+1} defines a new native function 'foo', as
                part of a new feature.
                - MySQL 5.{N+1} documentation is updated, and should mention
                that there is a potential incompatible change in case of
                existing stored function named 'foo'.
                - The user deploys 5.{N+1}. At this point, 'select foo()'
                means something different, and the user code is most likely
                broken (it's only safe if the code is 'select db.foo()').
                With a warning printed when the SF is loaded (which has to occur
                before the call), the warning will provide a hint explaining
                the root cause of a later failure of 'select foo()'.
                With no warning printed, the user code will fail with no
                apparent reason.
                Printing a warning each time db_load_routine is executed for
                an ambiguous function is annoying, since that can happen a lot,
                but in practice should not happen unless there *are* name
                collisions.
                If a collision exists, it should not be silenced but fixed.
              */
              push_warning_printf(thd,
                                  Sql_condition::WARN_LEVEL_NOTE,
                                  ER_NATIVE_FCT_NAME_COLLISION,
                                  ER(ER_NATIVE_FCT_NAME_COLLISION),
                                  sp->m_name.str);
            }
            sp->restore_thd_mem_root(thd);
          }
    break;

  case 2562:
#line 15081 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }

            lex->stmt_definition_begin= (yyvsp[(2) - (3)].simple_string);

            /* Order is important here: new - reset - init */
            sp= new sp_head();
            if (sp == NULL)
              MYSQL_YYABORT;
            sp->reset_thd_mem_root(YYTHD);
            sp->init(lex);
            sp->m_type= TYPE_ENUM_PROCEDURE;
            sp->init_sp_name(YYTHD, (yyvsp[(3) - (3)].spname));

            lex->sphead= sp;
          }
    break;

  case 2563:
#line 15105 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            const char* tmp_param_begin;

            tmp_param_begin= YYLIP->get_cpp_tok_start();
            tmp_param_begin++;
            Lex->sphead->m_param_begin= tmp_param_begin;
          }
    break;

  case 2564:
#line 15114 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_param_end= YYLIP->get_cpp_tok_start();
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
    break;

  case 2565:
#line 15122 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_chistics= &lex->sp_chistics;
            lex->sphead->set_body_start(thd, YYLIP->get_cpp_tok_start());
          }
    break;

  case 2566:
#line 15130 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            sp->set_stmt_end(YYTHD);
            lex->sql_command= SQLCOM_CREATE_PROCEDURE;
            sp->restore_thd_mem_root(YYTHD);
          }
    break;

  case 2567:
#line 15144 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_START;
          }
    break;

  case 2568:
#line 15148 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_END;
          }
    break;

  case 2569:
#line 15152 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_PREPARE;
          }
    break;

  case 2570:
#line 15156 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_COMMIT;
          }
    break;

  case 2571:
#line 15160 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_ROLLBACK;
          }
    break;

  case 2572:
#line 15164 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_RECOVER;
          }
    break;

  case 2573:
#line 15171 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (1)].string)->length() <= MAXGTRIDSIZE);
            if (!(Lex->xid=(XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            Lex->xid->set(1L, (yyvsp[(1) - (1)].string)->ptr(), (yyvsp[(1) - (1)].string)->length(), 0, 0);
          }
    break;

  case 2574:
#line 15178 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (3)].string)->length() <= MAXGTRIDSIZE && (yyvsp[(3) - (3)].string)->length() <= MAXBQUALSIZE);
            if (!(Lex->xid=(XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            Lex->xid->set(1L, (yyvsp[(1) - (3)].string)->ptr(), (yyvsp[(1) - (3)].string)->length(), (yyvsp[(3) - (3)].string)->ptr(), (yyvsp[(3) - (3)].string)->length());
          }
    break;

  case 2575:
#line 15185 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (5)].string)->length() <= MAXGTRIDSIZE && (yyvsp[(3) - (5)].string)->length() <= MAXBQUALSIZE);
            if (!(Lex->xid=(XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            Lex->xid->set((yyvsp[(5) - (5)].ulong_num), (yyvsp[(1) - (5)].string)->ptr(), (yyvsp[(1) - (5)].string)->length(), (yyvsp[(3) - (5)].string)->ptr(), (yyvsp[(3) - (5)].string)->length());
          }
    break;

  case 2576:
#line 15194 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2577:
#line 15195 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2578:
#line 15199 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->xa_opt=XA_NONE;        }
    break;

  case 2579:
#line 15200 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->xa_opt=XA_JOIN;        }
    break;

  case 2580:
#line 15201 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->xa_opt=XA_RESUME;      }
    break;

  case 2581:
#line 15205 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->xa_opt=XA_NONE;        }
    break;

  case 2582:
#line 15206 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->xa_opt=XA_ONE_PHASE;   }
    break;

  case 2583:
#line 15211 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->xa_opt=XA_NONE;        }
    break;

  case 2584:
#line 15213 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->xa_opt=XA_SUSPEND;     }
    break;

  case 2586:
#line 15218 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {}
    break;

  case 2587:
#line 15219 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    { Lex->xa_opt=XA_FOR_MIGRATE; }
    break;

  case 2588:
#line 15224 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSTALL_PLUGIN;
            lex->comment= (yyvsp[(3) - (5)].lex_str);
            lex->ident= (yyvsp[(5) - (5)].lex_str);
          }
    break;

  case 2589:
#line 15234 "/export/home/pb2/build/sb_0-4537852-1323800558.21/mysql-5.6.4-m7-release-export-2873633/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_UNINSTALL_PLUGIN;
            lex->comment= (yyvsp[(3) - (3)].lex_str);
          }
    break;


/* Line 1267 of yacc.c.  */
#line 35278 "/export/home/pb2/build/sb_0-4537852-1323800558.21/dist/sql/sql_yacc.cc"
      default: break;
    }
  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;


  /* Now `shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*------------------------------------.
| yyerrlab -- here on detecting error |
`------------------------------------*/
yyerrlab:
  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if ! YYERROR_VERBOSE
      yyerror (YY_("syntax error"));
#else
      {
	YYSIZE_T yysize = yysyntax_error (0, yystate, yychar);
	if (yymsg_alloc < yysize && yymsg_alloc < YYSTACK_ALLOC_MAXIMUM)
	  {
	    YYSIZE_T yyalloc = 2 * yysize;
	    if (! (yysize <= yyalloc && yyalloc <= YYSTACK_ALLOC_MAXIMUM))
	      yyalloc = YYSTACK_ALLOC_MAXIMUM;
	    if (yymsg != yymsgbuf)
	      YYSTACK_FREE (yymsg);
	    yymsg = (char *) YYSTACK_ALLOC (yyalloc);
	    if (yymsg)
	      yymsg_alloc = yyalloc;
	    else
	      {
		yymsg = yymsgbuf;
		yymsg_alloc = sizeof yymsgbuf;
	      }
	  }

	if (0 < yysize && yysize <= yymsg_alloc)
	  {
	    (void) yysyntax_error (yymsg, yystate, yychar);
	    yyerror (yymsg);
	  }
	else
	  {
	    yyerror (YY_("syntax error"));
	    if (yysize != 0)
	      goto yyexhaustedlab;
	  }
      }
#endif
    }



  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse look-ahead token after an
	 error, discard it.  */

      if (yychar <= YYEOF)
	{
	  /* Return failure if at end of input.  */
	  if (yychar == YYEOF)
	    YYABORT;
	}
      else
	{
	  yydestruct ("Error: discarding",
		      yytoken, &yylval);
	  yychar = YYEMPTY;
	}
    }

  /* Else will try to reuse look-ahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

  /* Pacify compilers like GCC when the user code never invokes
     YYERROR and the label yyerrorlab therefore never appears in user
     code.  */
  if (/*CONSTCOND*/ 0)
     goto yyerrorlab;

  /* Do not reclaim the symbols of the rule which action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;	/* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (yyn != YYPACT_NINF)
	{
	  yyn += YYTERROR;
	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
	    {
	      yyn = yytable[yyn];
	      if (0 < yyn)
		break;
	    }
	}

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
	YYABORT;


      yydestruct ("Error: popping",
		  yystos[yystate], yyvsp);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  *++yyvsp = yylval;


  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#ifndef yyoverflow
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
  if (yychar != YYEOF && yychar != YYEMPTY)
     yydestruct ("Cleanup: discarding lookahead",
		 yytoken, &yylval);
  /* Do not reclaim the symbols of the rule which action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
		  yystos[*yyssp], yyvsp);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
#if YYERROR_VERBOSE
  if (yymsg != yymsgbuf)
    YYSTACK_FREE (yymsg);
#endif
  /* Make sure YYID is used.  */
  return YYID (yyresult);
}



