
/* A Bison parser, made by GNU Bison 2.4.1.  */

/* Skeleton implementation for Bison's Yacc-like parsers in C
   
      Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
   Free Software Foundation, Inc.
   
   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.
   
   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.
   
   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.
   
   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "2.4.1"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Push parsers.  */
#define YYPUSH 0

/* Pull parsers.  */
#define YYPULL 1

/* Using locations.  */
#define YYLSP_NEEDED 0

/* Substitute the variable and function names.  */
#define yyparse         MYSQLparse
#define yylex           MYSQLlex
#define yyerror         MYSQLerror
#define yylval          MYSQLlval
#define yychar          MYSQLchar
#define yydebug         MYSQLdebug
#define yynerrs         MYSQLnerrs


/* Copy the first part of user declarations.  */

/* Line 189 of yacc.c  */
#line 24 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"

/* thd is passed as an argument to yyparse(), and subsequently to yylex().
** The type will be void*, so it must be  cast to (THD*) when used.
** Use the YYTHD macro for this.
*/
#define YYPARSE_PARAM yythd
#define YYLEX_PARAM yythd
#define YYTHD ((THD *)yythd)
#define YYLIP (& YYTHD->m_parser_state->m_lip)
#define YYPS (& YYTHD->m_parser_state->m_yacc)
#define YYCSCL  YYTHD->variables.character_set_client

#define MYSQL_YACC
#define YYINITDEPTH 100
#define YYMAXDEPTH 3200                        /* Because of 64K stack */
#define Lex (YYTHD->lex)
#define Select Lex->current_select
#include "sql_priv.h"
#include "unireg.h"                    // REQUIRED: for other includes
#include "sql_parse.h"                        /* comp_*_creator */
#include "sql_table.h"                        /* primary_key_name */
#include "sql_partition.h"  /* mem_alloc_error, partition_info, HASH_PARTITION */
#include "sql_acl.h"                          /* *_ACL */
#include "password.h"       /* my_make_scrambled_password_323, my_make_scrambled_password */
#include "sql_class.h"      /* Key_part_spec, enum_filetype, Diag_condition_item_name */
#include "rpl_slave.h"
#include "lex_symbol.h"
#include "item_create.h"
#include "sp_head.h"
#include "sp_instr.h"
#include "sp_pcontext.h"
#include "sp_rcontext.h"
#include "sp.h"
#include "sql_alter.h"                         // Sql_cmd_alter_table*
#include "sql_truncate.h"                      // Sql_cmd_truncate_table
#include "sql_admin.h"                         // Sql_cmd_analyze/Check..._table
#include "sql_partition_admin.h"               // Sql_cmd_alter_table_*_part.
#include "sql_handler.h"                       // Sql_cmd_handler_*
#include "sql_signal.h"
#include "sql_get_diagnostics.h"               // Sql_cmd_get_diagnostics
#include "event_parse_data.h"
#include <myisam.h>
#include <myisammrg.h>
#include "keycaches.h"
#include "set_var.h"
#include "opt_explain_traditional.h"
#include "opt_explain_json.h"

/* this is to get the bison compilation windows warnings out */
#ifdef _MSC_VER
/* warning C4065: switch statement contains 'default' but no 'case' labels */
#pragma warning (disable : 4065)
#endif

using std::min;
using std::max;

int yylex(void *yylval, void *yythd);

#define yyoverflow(A,B,C,D,E,F)               \
  {                                           \
    ulong val= *(F);                          \
    if (my_yyoverflow((B), (D), &val))        \
    {                                         \
      yyerror((char*) (A));                   \
      return 2;                               \
    }                                         \
    else                                      \
    {                                         \
      *(F)= (YYSIZE_T)val;                    \
    }                                         \
  }

#define MYSQL_YYABORT                         \
  do                                          \
  {                                           \
    LEX::cleanup_lex_after_parse_error(YYTHD);\
    YYABORT;                                  \
  } while (0)

#define MYSQL_YYABORT_UNLESS(A)         \
  if (!(A))                             \
  {                                     \
    my_parse_error(ER(ER_SYNTAX_ERROR));\
    MYSQL_YYABORT;                      \
  }

/*
  Work around for broken code generated by bison 1.875.

  The code generated by bison 1.875a and later, bison 2.1 and bison 2.2 is ok.
  With bison 1.875 however, the generated code contains:
<pre>
  yyerrlab1:
  #if defined (__GNUC_MINOR__) && 2093 <= (__GNUC__ * 1000 + __GNUC_MINOR__)
    __attribute__ ((__unused__))
  #endif
</pre>
  This usage of __attribute__ is illegal, so we remove it.
  See the following references for details:
  http://lists.gnu.org/archive/html/bug-bison/2004-02/msg00014.html
  http://gcc.gnu.org/bugzilla/show_bug.cgi?id=14273
*/

#if defined (__GNUC_MINOR__) && 2093 <= (__GNUC__ * 1000 + __GNUC_MINOR__)
#undef __attribute__
#define __attribute__(X)
#endif


#ifndef DBUG_OFF
#define YYDEBUG 1
#else
#define YYDEBUG 0
#endif

/**
  @brief Push an error message into MySQL error stack with line
  and position information.

  This function provides semantic action implementers with a way
  to push the famous "You have a syntax error near..." error
  message into the error stack, which is normally produced only if
  a parse error is discovered internally by the Bison generated
  parser.
*/

void my_parse_error(const char *s)
{
  THD *thd= current_thd;
  Lex_input_stream *lip= & thd->m_parser_state->m_lip;

  const char *yytext= lip->get_tok_start();
  if (!yytext)
    yytext= "";

  /* Push an error into the error stack */
  ErrConvString err(yytext, thd->variables.character_set_client);
  my_printf_error(ER_PARSE_ERROR,  ER(ER_PARSE_ERROR), MYF(0), s,
                  err.ptr(), lip->yylineno);
}

/**
  @brief Bison callback to report a syntax/OOM error

  This function is invoked by the bison-generated parser
  when a syntax error, a parse error or an out-of-memory
  condition occurs. This function is not invoked when the
  parser is requested to abort by semantic action code
  by means of YYABORT or YYACCEPT macros. This is why these
  macros should not be used (use MYSQL_YYABORT/MYSQL_YYACCEPT
  instead).

  The parser will abort immediately after invoking this callback.

  This function is not for use in semantic actions and is internal to
  the parser, as it performs some pre-return cleanup. 
  In semantic actions, please use my_parse_error or my_error to
  push an error into the error stack and MYSQL_YYABORT
  to abort from the parser.
*/

void MYSQLerror(const char *s)
{
  THD *thd= current_thd;

  /*
    Restore the original LEX if it was replaced when parsing
    a stored procedure. We must ensure that a parsing error
    does not leave any side effects in the THD.
  */
  LEX::cleanup_lex_after_parse_error(thd);

  /* "parse error" changed into "syntax error" between bison 1.75 and 1.875 */
  if (strcmp(s,"parse error") == 0 || strcmp(s,"syntax error") == 0)
    s= ER(ER_SYNTAX_ERROR);
  my_parse_error(s);
}


#ifndef DBUG_OFF
void turn_parser_debug_on()
{
  /*
     MYSQLdebug is in sql/sql_yacc.cc, in bison generated code.
     Turning this option on is **VERY** verbose, and should be
     used when investigating a syntax error problem only.

     The syntax to run with bison traces is as follows :
     - Starting a server manually :
       mysqld --debug="d,parser_debug" ...
     - Running a test :
       mysql-test-run.pl --mysqld="--debug=d,parser_debug" ...

     The result will be in the process stderr (var/log/master.err)
   */

  extern int yydebug;
  yydebug= 1;
}
#endif

static bool is_native_function(THD *thd, const LEX_STRING *name)
{
  if (find_native_function_builder(thd, *name))
    return true;

  if (is_lex_native_function(name))
    return true;

  return false;
}


/**
  Helper action for a case statement (entering the CASE).
  This helper is used for both 'simple' and 'searched' cases.
  This helper, with the other case_stmt_action_..., is executed when
  the following SQL code is parsed:
<pre>
CREATE PROCEDURE proc_19194_simple(i int)
BEGIN
  DECLARE str CHAR(10);

  CASE i
    WHEN 1 THEN SET str="1";
    WHEN 2 THEN SET str="2";
    WHEN 3 THEN SET str="3";
    ELSE SET str="unknown";
  END CASE;

  SELECT str;
END
</pre>
  The actions are used to generate the following code:
<pre>
SHOW PROCEDURE CODE proc_19194_simple;
Pos     Instruction
0       set str@1 NULL
1       set_case_expr (12) 0 i@0
2       jump_if_not 5(12) (case_expr@0 = 1)
3       set str@1 _latin1'1'
4       jump 12
5       jump_if_not 8(12) (case_expr@0 = 2)
6       set str@1 _latin1'2'
7       jump 12
8       jump_if_not 11(12) (case_expr@0 = 3)
9       set str@1 _latin1'3'
10      jump 12
11      set str@1 _latin1'unknown'
12      stmt 0 "SELECT str"
</pre>

  @param thd thread handler
*/

void case_stmt_action_case(THD *thd)
{
  LEX *lex= thd->lex;
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  sp->m_parser_data.new_cont_backpatch();

  /*
    BACKPATCH: Creating target label for the jump to
    "case_stmt_action_end_case"
    (Instruction 12 in the example)
  */

  pctx->push_label(thd, EMPTY_STR, sp->instructions());
}

/**
  Helper action for a case then statements.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
*/

bool case_stmt_action_then(THD *thd, LEX *lex)
{
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  sp_instr_jump *i =
    new (thd->mem_root) sp_instr_jump(sp->instructions(), pctx);

  if (!i || sp->add_instr(thd, i))
    return true;

  /*
    BACKPATCH: Resolving forward jump from
    "case_stmt_action_when" to "case_stmt_action_then"
    (jump_if_not from instruction 2 to 5, 5 to 8 ... in the example)
  */

  sp->m_parser_data.do_backpatch(pctx->pop_label(), sp->instructions());

  /*
    BACKPATCH: Registering forward jump from
    "case_stmt_action_then" to "case_stmt_action_end_case"
    (jump from instruction 4 to 12, 7 to 12 ... in the example)
  */

  return sp->m_parser_data.add_backpatch_entry(i, pctx->last_label());
}

/**
  Helper action for an end case.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
  @param simple true for simple cases, false for searched cases
*/

void case_stmt_action_end_case(LEX *lex, bool simple)
{
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  /*
    BACKPATCH: Resolving forward jump from
    "case_stmt_action_then" to "case_stmt_action_end_case"
    (jump from instruction 4 to 12, 7 to 12 ... in the example)
  */
  sp->m_parser_data.do_backpatch(pctx->pop_label(), sp->instructions());

  if (simple)
    pctx->pop_case_expr_id();

  sp->m_parser_data.do_cont_backpatch(sp->instructions());
}


static bool
find_sys_var_null_base(THD *thd, struct sys_var_with_base *tmp)
{
  tmp->var= find_sys_var(thd, tmp->base_name.str, tmp->base_name.length);

  if (tmp->var == NULL)
    my_error(ER_UNKNOWN_SYSTEM_VARIABLE, MYF(0), tmp->base_name.str);
  else
    tmp->base_name= null_lex_str;

  return thd->is_error();
}


/**
  Helper action for a SET statement.
  Used to push a system variable into the assignment list.

  @param thd      the current thread
  @param tmp      the system variable with base name
  @param var_type the scope of the variable
  @param val      the value being assigned to the variable

  @return TRUE if error, FALSE otherwise.
*/

static bool
set_system_variable(THD *thd, struct sys_var_with_base *tmp,
                    enum enum_var_type var_type, Item *val)
{
  set_var *var;
  LEX *lex= thd->lex;
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  /* No AUTOCOMMIT from a stored function or trigger. */
  if (pctx && tmp->var == Sys_autocommit_ptr)
    sp->m_flags|= sp_head::HAS_SET_AUTOCOMMIT_STMT;

#ifdef HAVE_REPLICATION
  if (lex->uses_stored_routines() &&
      ((tmp->var == Sys_gtid_next_ptr
#ifdef HAVE_GTID_NEXT_LIST
       || tmp->var == Sys_gtid_next_list_ptr
#endif
       ) ||
       Sys_gtid_purged_ptr == tmp->var))
  {
    my_error(ER_SET_STATEMENT_CANNOT_INVOKE_FUNCTION, MYF(0),
             tmp->var->name.str);
    return TRUE;
  }
#endif

  if (! (var= new set_var(var_type, tmp->var, &tmp->base_name, val)))
    return TRUE;

  return lex->var_list.push_back(var);
}


/**
  Helper action for a SET statement.
  Used to SET a field of NEW row.

  @param thd                thread handler
  @param trigger_field_name the NEW-row field name
  @param expr_item          the value expression being assigned
  @param expr_query         the value expression query

  @return error status (true if error, false otherwise).
*/

static bool set_trigger_new_row(THD *thd,
                                LEX_STRING trigger_field_name,
                                Item *expr_item,
                                LEX_STRING expr_query)
{
  LEX *lex= thd->lex;
  sp_head *sp= lex->sphead;

  DBUG_ASSERT(expr_item);
  DBUG_ASSERT(sp->m_trg_chistics.action_time == TRG_ACTION_BEFORE &&
              (sp->m_trg_chistics.event == TRG_EVENT_INSERT ||
               sp->m_trg_chistics.event == TRG_EVENT_UPDATE));

  Item_trigger_field *trg_fld=
    new (thd->mem_root) Item_trigger_field(lex->current_context(),
                                           Item_trigger_field::NEW_ROW,
                                           trigger_field_name.str,
                                           UPDATE_ACL, false);

  if (!trg_fld)
    return true;

  sp_instr_set_trigger_field *i=
    new (thd->mem_root)
      sp_instr_set_trigger_field(sp->instructions(),
                                 lex,
                                 trigger_field_name,
                                 trg_fld, expr_item,
                                 expr_query);

  if (!i)
    return true;

  /*
    Let us add this item to list of all Item_trigger_field
    objects in trigger.
  */
  sp->m_trg_table_fields.link_in_list(trg_fld, &trg_fld->next_trg_field);

  return sp->add_instr(thd, i);
}


/**
  Create an object to represent a SP variable in the Item-hierarchy.

  @param thd              The current thread.
  @param name             The SP variable name.
  @param spv              The SP variable (optional).
  @param query_start_ptr  Start of the SQL-statement query string (optional).
  @param start_in_q       Start position of the SP variable name in the query.
  @param end_in_q         End position of the SP variable name in the query.

  @remark If spv is not specified, the name is used to search for the
          variable in the parse-time context. If the variable does not
          exist, a error is set and NULL is returned to the caller.

  @return An Item_splocal object representing the SP variable, or NULL on error.
*/
static Item_splocal* create_item_for_sp_var(THD *thd,
                                            LEX_STRING name,
                                            sp_variable *spv,
                                            const char *query_start_ptr,
                                            const char *start_in_q,
                                            const char *end_in_q)
{
  LEX *lex= thd->lex;
  uint spv_pos_in_query= 0;
  uint spv_len_in_query= 0;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  /* If necessary, look for the variable. */
  if (pctx && !spv)
    spv= pctx->find_variable(name, false);

  if (!spv)
  {
    my_error(ER_SP_UNDECLARED_VAR, MYF(0), name.str);
    return NULL;
  }

  DBUG_ASSERT(pctx && spv);

  if (query_start_ptr)
  {
    /* Position and length of the SP variable name in the query. */
    spv_pos_in_query= start_in_q - query_start_ptr;
    spv_len_in_query= end_in_q - start_in_q;
  }

  Item_splocal *item=
    new (thd->mem_root) Item_splocal(
      name, spv->offset, spv->type, spv_pos_in_query, spv_len_in_query);

#ifndef DBUG_OFF
  if (item)
    item->m_sp= lex->sphead;
#endif

  return item;
}


/**
  Helper to resolve the SQL:2003 Syntax exception 1) in <in predicate>.
  See SQL:2003, Part 2, section 8.4 <in predicate>, Note 184, page 383.
  This function returns the proper item for the SQL expression
  <code>left [NOT] IN ( expr )</code>
  @param thd the current thread
  @param left the in predicand
  @param equal true for IN predicates, false for NOT IN predicates
  @param expr first and only expression of the in value list
  @return an expression representing the IN predicate.
*/
Item* handle_sql2003_note184_exception(THD *thd, Item* left, bool equal,
                                       Item *expr)
{
  /*
    Relevant references for this issue:
    - SQL:2003, Part 2, section 8.4 <in predicate>, page 383,
    - SQL:2003, Part 2, section 7.2 <row value expression>, page 296,
    - SQL:2003, Part 2, section 6.3 <value expression primary>, page 174,
    - SQL:2003, Part 2, section 7.15 <subquery>, page 370,
    - SQL:2003 Feature F561, "Full value expressions".

    The exception in SQL:2003 Note 184 means:
    Item_singlerow_subselect, which corresponds to a <scalar subquery>,
    should be re-interpreted as an Item_in_subselect, which corresponds
    to a <table subquery> when used inside an <in predicate>.

    Our reading of Note 184 is reccursive, so that all:
    - IN (( <subquery> ))
    - IN ((( <subquery> )))
    - IN '('^N <subquery> ')'^N
    - etc
    should be interpreted as a <table subquery>, no matter how deep in the
    expression the <subquery> is.
  */

  Item *result;

  DBUG_ENTER("handle_sql2003_note184_exception");

  if (expr->type() == Item::SUBSELECT_ITEM)
  {
    Item_subselect *expr2 = (Item_subselect*) expr;

    if (expr2->substype() == Item_subselect::SINGLEROW_SUBS)
    {
      Item_singlerow_subselect *expr3 = (Item_singlerow_subselect*) expr2;
      st_select_lex *subselect;

      /*
        Implement the mandated change, by altering the semantic tree:
          left IN Item_singlerow_subselect(subselect)
        is modified to
          left IN (subselect)
        which is represented as
          Item_in_subselect(left, subselect)
      */
      subselect= expr3->invalidate_and_restore_select_lex();
      result= new (thd->mem_root) Item_in_subselect(left, subselect);

      if (! equal)
        result = negate_expression(thd, result);

      DBUG_RETURN(result);
    }
  }

  if (equal)
    result= new (thd->mem_root) Item_func_eq(left, expr);
  else
    result= new (thd->mem_root) Item_func_ne(left, expr);

  DBUG_RETURN(result);
}

/**
   @brief Creates a new SELECT_LEX for a UNION branch.

   Sets up and initializes a SELECT_LEX structure for a query once the parser
   discovers a UNION token. The current SELECT_LEX is pushed on the stack and
   the new SELECT_LEX becomes the current one.

   @param lex The parser state.

   @param is_union_distinct True if the union preceding the new select statement
   uses UNION DISTINCT.

   @param is_top_level This should be @c TRUE if the newly created SELECT_LEX
   is a non-nested statement.

   @return <code>false</code> if successful, <code>true</code> if an error was
   reported. In the latter case parsing should stop.
 */
bool add_select_to_union_list(LEX *lex, bool is_union_distinct, 
                              bool is_top_level)
{
  /* 
     Only the last SELECT can have INTO. Since the grammar won't allow INTO in
     a nested SELECT, we make this check only when creating a top-level SELECT.
  */
  if (is_top_level && lex->result)
  {
    my_error(ER_WRONG_USAGE, MYF(0), "UNION", "INTO");
    return TRUE;
  }
  if (lex->proc_analyse)
  {
    my_error(ER_WRONG_USAGE, MYF(0), "UNION", "SELECT ... PROCEDURE ANALYSE()");
    return TRUE;
  }
  if (lex->current_select->linkage == GLOBAL_OPTIONS_TYPE)
  {
    my_parse_error(ER(ER_SYNTAX_ERROR));
    return TRUE;
  }
  /* This counter shouldn't be incremented for UNION parts */
  lex->nest_level--;
  if (mysql_new_select(lex, 0))
    return TRUE;
  mysql_init_select(lex);
  lex->current_select->linkage=UNION_TYPE;
  if (is_union_distinct) /* UNION DISTINCT - remember position */
    lex->current_select->master_unit()->union_distinct=
      lex->current_select;
  return FALSE;
}

/**
   @brief Initializes a SELECT_LEX for a query within parentheses (aka
   braces).

   @return false if successful, true if an error was reported. In the latter
   case parsing should stop.
 */
bool setup_select_in_parentheses(LEX *lex) 
{
  SELECT_LEX * sel= lex->current_select;
  if (sel->set_braces(1))
  {
    my_parse_error(ER(ER_SYNTAX_ERROR));
    return TRUE;
  }
  if (sel->linkage == UNION_TYPE &&
      !sel->master_unit()->first_select()->braces &&
      sel->master_unit()->first_select()->linkage ==
      UNION_TYPE)
  {
    my_parse_error(ER(ER_SYNTAX_ERROR));
    return TRUE;
  }
  if (sel->linkage == UNION_TYPE &&
      sel->olap != UNSPECIFIED_OLAP_TYPE &&
      sel->master_unit()->fake_select_lex)
  {
    my_error(ER_WRONG_USAGE, MYF(0), "CUBE/ROLLUP", "ORDER BY");
    return TRUE;
  }
  /* select in braces, can't contain global parameters */
  if (sel->master_unit()->fake_select_lex)
    sel->master_unit()->global_parameters=
      sel->master_unit()->fake_select_lex;
  return FALSE;
}

static bool add_create_index_prepare (LEX *lex, Table_ident *table)
{
  lex->sql_command= SQLCOM_CREATE_INDEX;
  if (!lex->current_select->add_table_to_list(lex->thd, table, NULL,
                                              TL_OPTION_UPDATING,
                                              TL_READ_NO_INSERT,
                                              MDL_SHARED_UPGRADABLE))
    return TRUE;
  lex->alter_info.reset();
  lex->alter_info.flags= Alter_info::ALTER_ADD_INDEX;
  lex->col_list.empty();
  lex->change= NullS;
  return FALSE;
}

static bool add_create_index (LEX *lex, Key::Keytype type,
                              const LEX_STRING &name,
                              KEY_CREATE_INFO *info= NULL, bool generated= 0)
{
  Key *key;
  key= new Key(type, name, info ? info : &lex->key_create_info, generated, 
               lex->col_list);
  if (key == NULL)
    return TRUE;

  lex->alter_info.key_list.push_back(key);
  lex->col_list.empty();
  return FALSE;
}

/**
  Make a new string allocated on THD's mem-root.

  @param thd        thread handler.
  @param start_ptr  start of the new string.
  @param end_ptr    end of the new string.

  @return LEX_STRING object, containing a pointer to a newly
  constructed/allocated string, and its length. The pointer is NULL
  in case of out-of-memory error.
*/
static LEX_STRING make_string(THD *thd,
                              const char *start_ptr,
                              const char *end_ptr)
{
  LEX_STRING s;

  s.length= end_ptr - start_ptr;
  s.str= (char *) thd->alloc(s.length + 1);

  if (s.str)
    strmake(s.str, start_ptr, s.length);

  return s;
}

/*
  The start is either lip->ptr, if there was no lookahead, lip->tok_start
  otherwise.
*/
#define YY_TOKEN_START \
  ((yychar == YYEMPTY) ?  YYLIP->get_ptr() : YYLIP->get_tok_start())

/*
   The end is either lip->ptr, if there was no lookahead,
   or lip->tok_end otherwise.
*/

#define YY_TOKEN_END \
  ((yychar == YYEMPTY) ?  YYLIP->get_ptr() : YYLIP->get_tok_end())

/**
  Create a separate LEX for each assignment if in SP.

  If we are in SP we want have own LEX for each assignment.
  This is mostly because it is hard for several sp_instr_set
  and sp_instr_set_trigger instructions share one LEX.
  (Well, it is theoretically possible but adds some extra
  overhead on preparation for execution stage and IMO less
  robust).

  @see sp_create_assignment_instr

  @param thd        Thread context
  @param option_ptr Option-value-expression start pointer
*/

static void sp_create_assignment_lex(THD *thd, const char *option_ptr)
{
  LEX *lex= thd->lex;
  sp_head *sp= lex->sphead;

  /*
    We can come here in the following cases:

      1. it's a regular SET statement outside stored programs
        (lex->sphead is NULL);

      2. we're parsing a stored program normally (loading from mysql.proc, ...);

      3. we're re-parsing SET-statement with a user variable after meta-data
        change. It's guaranteed, that:
        - this SET-statement deals with a user/system variable (otherwise, it
          would be a different SP-instruction, and we would parse an expression);
        - this SET-statement has a single user/system variable assignment
          (that's how we generate sp_instr_stmt-instructions for SET-statements).
        So, in this case, even if lex->sphead is set, we should not process
        further.
  */

  if (!sp ||            // case #1
      sp->is_invoked()) // case #3
  {
    return;
  }

  LEX *old_lex= lex;
  sp->reset_lex(thd);
  lex= thd->lex;

  /* Set new LEX as if we at start of set rule. */
  mysql_init_select(lex);
  lex->sql_command= SQLCOM_SET_OPTION;
  lex->var_list.empty();
  lex->one_shot_set= 0;
  lex->autocommit= 0;

  /*
    It's a SET statement within SP. It will be either translated
    into one or more sp_instr_stmt instructions, or it will be
    sp_instr_set / sp_instr_set_trigger_field instructions.
    In any case, position of SP-variable can not be determined
    reliably. So, we set the start pointer of the current statement
    to NULL.
  */
  sp->m_parser_data.set_current_stmt_start_ptr(NULL);
  sp->m_parser_data.set_option_start_ptr(option_ptr);

  /* Inherit from outer lex. */
  lex->option_type= old_lex->option_type;
}


/**
  Create a SP instruction for a SET assignment.

  @see sp_create_assignment_lex

  @param thd           Thread context
  @param expr_end_ptr  Option-value-expression end pointer

  @return false if success, true otherwise.
*/

static bool sp_create_assignment_instr(THD *thd, const char *expr_end_ptr)
{
  LEX *lex= thd->lex;
  sp_head *sp= lex->sphead;

  /*
    We can come here in the following cases:

      1. it's a regular SET statement outside stored programs
        (lex->sphead is NULL);

      2. we're parsing a stored program normally (loading from mysql.proc, ...);

      3. we're re-parsing SET-statement with a user variable after meta-data
        change. It's guaranteed, that:
        - this SET-statement deals with a user/system variable (otherwise, it
          would be a different SP-instruction, and we would parse an expression);
        - this SET-statement has a single user/system variable assignment
          (that's how we generate sp_instr_stmt-instructions for SET-statements).
        So, in this case, even if lex->sphead is set, we should not process
        further.
  */

  if (!sp ||            // case #1
      sp->is_invoked()) // case #3
  {
    return false;
  }

  if (!lex->var_list.is_empty())
  {
    /* Extract expression string. */

    const char *expr_start_ptr= sp->m_parser_data.get_option_start_ptr();

    LEX_STRING expr;
    expr.str= (char *) expr_start_ptr;
    expr.length= expr_end_ptr - expr_start_ptr;

    /* Construct SET-statement query. */

    LEX_STRING set_stmt_query;

    set_stmt_query.length= expr.length + 3;
    set_stmt_query.str= (char *) thd->alloc(set_stmt_query.length + 1);

    if (!set_stmt_query.str)
      return true;

    strmake(strmake(set_stmt_query.str, "SET", 3),
            expr.str, expr.length);

    /*
      We have assignment to user or system variable or option setting, so we
      should construct sp_instr_stmt for it.
    */

    sp_instr_stmt *i=
      new (thd->mem_root)
        sp_instr_stmt(sp->instructions(), lex, set_stmt_query);

    if (!i || sp->add_instr(thd, i))
      return true;
  }

  /* Remember option_type of the currently parsed LEX. */
  enum_var_type inner_option_type= lex->option_type;

  if (sp->restore_lex(thd))
    return true;

  /* Copy option_type to outer lex in case it has changed. */
  thd->lex->option_type= inner_option_type;

  return false;
}

/**
  Compare a LEX_USER against the current user as defined by the exact user and
  host used during authentication.

  @param user A pointer to a user which needs to be matched against the
              current.

  @see SET PASSWORD rules

  @retval true The specified user is the authorized user
  @retval false The user doesn't match
*/

bool match_authorized_user(Security_context *ctx, LEX_USER *user)
{
  if(user->user.str && my_strcasecmp(system_charset_info,
                                     ctx->priv_user,
                                     user->user.str) == 0)
  {
    /*
      users match; let's compare hosts.
      1. first compare with the host we actually authorized,
      2. then see if we match the host mask of the priv_host
    */
    if (user->host.str && my_strcasecmp(system_charset_info,
                                        user->host.str,
                                        ctx->priv_host) == 0)
    {
      /* specified user exactly match the authorized user */
      return true;
    }
  }
  return false;
}




/* Line 189 of yacc.c  */
#line 1024 "/export/home/pb2/build/sb_0-8905559-1365164376.65/dist_GPL/sql/sql_yacc.cc"

/* Enabling traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* Enabling the token table.  */
#ifndef YYTOKEN_TABLE
# define YYTOKEN_TABLE 0
#endif


/* Tokens.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
   /* Put the tokens into the symbol table, so that GDB and other debuggers
      know about them.  */
   enum yytokentype {
     ABORT_SYM = 258,
     ACCESSIBLE_SYM = 259,
     ACTION = 260,
     ADD = 261,
     ADDDATE_SYM = 262,
     AFTER_SYM = 263,
     AGAINST = 264,
     AGGREGATE_SYM = 265,
     ALGORITHM_SYM = 266,
     ALL = 267,
     ALTER = 268,
     ANALYSE_SYM = 269,
     ANALYZE_SYM = 270,
     AND_AND_SYM = 271,
     AND_SYM = 272,
     ANY_SYM = 273,
     AS = 274,
     ASC = 275,
     ASCII_SYM = 276,
     ASENSITIVE_SYM = 277,
     AT_SYM = 278,
     AUTOEXTEND_SIZE_SYM = 279,
     AUTO_INC = 280,
     AVG_ROW_LENGTH = 281,
     AVG_SYM = 282,
     BACKUP_SYM = 283,
     BEFORE_SYM = 284,
     BEGIN_SYM = 285,
     BETWEEN_SYM = 286,
     BIGINT = 287,
     BINARY = 288,
     BINLOG_SYM = 289,
     BIN_NUM = 290,
     BIT_AND = 291,
     BIT_OR = 292,
     BIT_SYM = 293,
     BIT_XOR = 294,
     BLOB_SYM = 295,
     BLOCK_SYM = 296,
     BOOLEAN_SYM = 297,
     BOOL_SYM = 298,
     BOTH = 299,
     BTREE_SYM = 300,
     BY = 301,
     BYTE_SYM = 302,
     CACHE_SYM = 303,
     CALL_SYM = 304,
     CASCADE = 305,
     CASCADED = 306,
     CASE_SYM = 307,
     CAST_SYM = 308,
     CATALOG_NAME_SYM = 309,
     CHAIN_SYM = 310,
     CHANGE = 311,
     CHANGED = 312,
     CHARSET = 313,
     CHAR_SYM = 314,
     CHECKSUM_SYM = 315,
     CHECK_SYM = 316,
     CIPHER_SYM = 317,
     CLASS_ORIGIN_SYM = 318,
     CLIENT_SYM = 319,
     CLOSE_SYM = 320,
     COALESCE = 321,
     CODE_SYM = 322,
     COLLATE_SYM = 323,
     COLLATION_SYM = 324,
     COLUMNS = 325,
     COLUMN_SYM = 326,
     COLUMN_FORMAT_SYM = 327,
     COLUMN_NAME_SYM = 328,
     COMMENT_SYM = 329,
     COMMITTED_SYM = 330,
     COMMIT_SYM = 331,
     COMPACT_SYM = 332,
     COMPLETION_SYM = 333,
     COMPRESSED_SYM = 334,
     CONCURRENT = 335,
     CONDITION_SYM = 336,
     CONNECTION_SYM = 337,
     CONSISTENT_SYM = 338,
     CONSTRAINT = 339,
     CONSTRAINT_CATALOG_SYM = 340,
     CONSTRAINT_NAME_SYM = 341,
     CONSTRAINT_SCHEMA_SYM = 342,
     CONTAINS_SYM = 343,
     CONTEXT_SYM = 344,
     CONTINUE_SYM = 345,
     CONVERT_SYM = 346,
     COUNT_SYM = 347,
     CPU_SYM = 348,
     CREATE = 349,
     CROSS = 350,
     CUBE_SYM = 351,
     CURDATE = 352,
     CURRENT_SYM = 353,
     CURRENT_USER = 354,
     CURSOR_SYM = 355,
     CURSOR_NAME_SYM = 356,
     CURTIME = 357,
     DATABASE = 358,
     DATABASES = 359,
     DATAFILE_SYM = 360,
     DATA_SYM = 361,
     DATETIME = 362,
     DATE_ADD_INTERVAL = 363,
     DATE_SUB_INTERVAL = 364,
     DATE_SYM = 365,
     DAY_HOUR_SYM = 366,
     DAY_MICROSECOND_SYM = 367,
     DAY_MINUTE_SYM = 368,
     DAY_SECOND_SYM = 369,
     DAY_SYM = 370,
     DEALLOCATE_SYM = 371,
     DECIMAL_NUM = 372,
     DECIMAL_SYM = 373,
     DECLARE_SYM = 374,
     DEFAULT = 375,
     DEFAULT_AUTH_SYM = 376,
     DEFINER_SYM = 377,
     DELAYED_SYM = 378,
     DELAY_KEY_WRITE_SYM = 379,
     DELETE_SYM = 380,
     DESC = 381,
     DESCRIBE = 382,
     DES_KEY_FILE = 383,
     DETERMINISTIC_SYM = 384,
     DIAGNOSTICS_SYM = 385,
     DIRECTORY_SYM = 386,
     DISABLE_SYM = 387,
     DISCARD = 388,
     DISK_SYM = 389,
     DISTINCT = 390,
     DIV_SYM = 391,
     DOUBLE_SYM = 392,
     DO_SYM = 393,
     DROP = 394,
     DUAL_SYM = 395,
     DUMPFILE = 396,
     DUPLICATE_SYM = 397,
     DYNAMIC_SYM = 398,
     EACH_SYM = 399,
     ELSE = 400,
     ELSEIF_SYM = 401,
     ENABLE_SYM = 402,
     ENCLOSED = 403,
     END = 404,
     ENDS_SYM = 405,
     END_OF_INPUT = 406,
     ENGINES_SYM = 407,
     ENGINE_SYM = 408,
     ENUM = 409,
     EQ = 410,
     EQUAL_SYM = 411,
     ERROR_SYM = 412,
     ERRORS = 413,
     ESCAPED = 414,
     ESCAPE_SYM = 415,
     EVENTS_SYM = 416,
     EVENT_SYM = 417,
     EVERY_SYM = 418,
     EXCHANGE_SYM = 419,
     EXECUTE_SYM = 420,
     EXISTS = 421,
     EXIT_SYM = 422,
     EXPANSION_SYM = 423,
     EXPIRE_SYM = 424,
     EXPORT_SYM = 425,
     EXTENDED_SYM = 426,
     EXTENT_SIZE_SYM = 427,
     EXTRACT_SYM = 428,
     FALSE_SYM = 429,
     FAST_SYM = 430,
     FAULTS_SYM = 431,
     FETCH_SYM = 432,
     FILE_SYM = 433,
     FIRST_SYM = 434,
     FIXED_SYM = 435,
     FLOAT_NUM = 436,
     FLOAT_SYM = 437,
     FLUSH_SYM = 438,
     FORCE_SYM = 439,
     FOREIGN = 440,
     FOR_SYM = 441,
     FORMAT_SYM = 442,
     FOUND_SYM = 443,
     FROM = 444,
     FULL = 445,
     FULLTEXT_SYM = 446,
     FUNCTION_SYM = 447,
     GE = 448,
     GENERAL = 449,
     GEOMETRYCOLLECTION = 450,
     GEOMETRY_SYM = 451,
     GET_FORMAT = 452,
     GET_SYM = 453,
     GLOBAL_SYM = 454,
     GRANT = 455,
     GRANTS = 456,
     GROUP_SYM = 457,
     GROUP_CONCAT_SYM = 458,
     GT_SYM = 459,
     HANDLER_SYM = 460,
     HASH_SYM = 461,
     HAVING = 462,
     HELP_SYM = 463,
     HEX_NUM = 464,
     HIGH_PRIORITY = 465,
     HOST_SYM = 466,
     HOSTS_SYM = 467,
     HOUR_MICROSECOND_SYM = 468,
     HOUR_MINUTE_SYM = 469,
     HOUR_SECOND_SYM = 470,
     HOUR_SYM = 471,
     IDENT = 472,
     IDENTIFIED_SYM = 473,
     IDENT_QUOTED = 474,
     IF = 475,
     IGNORE_SYM = 476,
     IGNORE_SERVER_IDS_SYM = 477,
     IMPORT = 478,
     INDEXES = 479,
     INDEX_SYM = 480,
     INFILE = 481,
     INITIAL_SIZE_SYM = 482,
     INNER_SYM = 483,
     INOUT_SYM = 484,
     INSENSITIVE_SYM = 485,
     INSERT = 486,
     INSERT_METHOD = 487,
     INSTALL_SYM = 488,
     INTERVAL_SYM = 489,
     INTO = 490,
     INT_SYM = 491,
     INVOKER_SYM = 492,
     IN_SYM = 493,
     IO_AFTER_GTIDS = 494,
     IO_BEFORE_GTIDS = 495,
     IO_SYM = 496,
     IPC_SYM = 497,
     IS = 498,
     ISOLATION = 499,
     ISSUER_SYM = 500,
     ITERATE_SYM = 501,
     JOIN_SYM = 502,
     KEYS = 503,
     KEY_BLOCK_SIZE = 504,
     KEY_SYM = 505,
     KILL_SYM = 506,
     LANGUAGE_SYM = 507,
     LAST_SYM = 508,
     LE = 509,
     LEADING = 510,
     LEAVES = 511,
     LEAVE_SYM = 512,
     LEFT = 513,
     LESS_SYM = 514,
     LEVEL_SYM = 515,
     LEX_HOSTNAME = 516,
     LIKE = 517,
     LIMIT = 518,
     LINEAR_SYM = 519,
     LINES = 520,
     LINESTRING = 521,
     LIST_SYM = 522,
     LOAD = 523,
     LOCAL_SYM = 524,
     LOCATOR_SYM = 525,
     LOCKS_SYM = 526,
     LOCK_SYM = 527,
     LOGFILE_SYM = 528,
     LOGS_SYM = 529,
     LONGBLOB = 530,
     LONGTEXT = 531,
     LONG_NUM = 532,
     LONG_SYM = 533,
     LOOP_SYM = 534,
     LOW_PRIORITY = 535,
     LT = 536,
     MASTER_AUTO_POSITION_SYM = 537,
     MASTER_BIND_SYM = 538,
     MASTER_CONNECT_RETRY_SYM = 539,
     MASTER_DELAY_SYM = 540,
     MASTER_HOST_SYM = 541,
     MASTER_LOG_FILE_SYM = 542,
     MASTER_LOG_POS_SYM = 543,
     MASTER_PASSWORD_SYM = 544,
     MASTER_PORT_SYM = 545,
     MASTER_RETRY_COUNT_SYM = 546,
     MASTER_SERVER_ID_SYM = 547,
     MASTER_SSL_CAPATH_SYM = 548,
     MASTER_SSL_CA_SYM = 549,
     MASTER_SSL_CERT_SYM = 550,
     MASTER_SSL_CIPHER_SYM = 551,
     MASTER_SSL_CRL_SYM = 552,
     MASTER_SSL_CRLPATH_SYM = 553,
     MASTER_SSL_KEY_SYM = 554,
     MASTER_SSL_SYM = 555,
     MASTER_SSL_VERIFY_SERVER_CERT_SYM = 556,
     MASTER_SYM = 557,
     MASTER_USER_SYM = 558,
     MASTER_HEARTBEAT_PERIOD_SYM = 559,
     MATCH = 560,
     MAX_CONNECTIONS_PER_HOUR = 561,
     MAX_QUERIES_PER_HOUR = 562,
     MAX_ROWS = 563,
     MAX_SIZE_SYM = 564,
     MAX_SYM = 565,
     MAX_UPDATES_PER_HOUR = 566,
     MAX_USER_CONNECTIONS_SYM = 567,
     MAX_VALUE_SYM = 568,
     MEDIUMBLOB = 569,
     MEDIUMINT = 570,
     MEDIUMTEXT = 571,
     MEDIUM_SYM = 572,
     MEMORY_SYM = 573,
     MERGE_SYM = 574,
     MESSAGE_TEXT_SYM = 575,
     MICROSECOND_SYM = 576,
     MIGRATE_SYM = 577,
     MINUTE_MICROSECOND_SYM = 578,
     MINUTE_SECOND_SYM = 579,
     MINUTE_SYM = 580,
     MIN_ROWS = 581,
     MIN_SYM = 582,
     MODE_SYM = 583,
     MODIFIES_SYM = 584,
     MODIFY_SYM = 585,
     MOD_SYM = 586,
     MONTH_SYM = 587,
     MULTILINESTRING = 588,
     MULTIPOINT = 589,
     MULTIPOLYGON = 590,
     MUTEX_SYM = 591,
     MYSQL_ERRNO_SYM = 592,
     NAMES_SYM = 593,
     NAME_SYM = 594,
     NATIONAL_SYM = 595,
     NATURAL = 596,
     NCHAR_STRING = 597,
     NCHAR_SYM = 598,
     NDBCLUSTER_SYM = 599,
     NE = 600,
     NEG = 601,
     NEW_SYM = 602,
     NEXT_SYM = 603,
     NODEGROUP_SYM = 604,
     NONE_SYM = 605,
     NOT2_SYM = 606,
     NOT_SYM = 607,
     NOW_SYM = 608,
     NO_SYM = 609,
     NO_WAIT_SYM = 610,
     NO_WRITE_TO_BINLOG = 611,
     NULL_SYM = 612,
     NUM = 613,
     NUMBER_SYM = 614,
     NUMERIC_SYM = 615,
     NVARCHAR_SYM = 616,
     OFFSET_SYM = 617,
     OLD_PASSWORD = 618,
     ON = 619,
     ONE_SYM = 620,
     ONLY_SYM = 621,
     OPEN_SYM = 622,
     OPTIMIZE = 623,
     OPTIONS_SYM = 624,
     OPTION = 625,
     OPTIONALLY = 626,
     OR2_SYM = 627,
     ORDER_SYM = 628,
     OR_OR_SYM = 629,
     OR_SYM = 630,
     OUTER = 631,
     OUTFILE = 632,
     OUT_SYM = 633,
     OWNER_SYM = 634,
     PACK_KEYS_SYM = 635,
     PAGE_SYM = 636,
     PARAM_MARKER = 637,
     PARSER_SYM = 638,
     PARTIAL = 639,
     PARTITION_SYM = 640,
     PARTITIONS_SYM = 641,
     PARTITIONING_SYM = 642,
     PASSWORD = 643,
     PHASE_SYM = 644,
     PLUGIN_DIR_SYM = 645,
     PLUGIN_SYM = 646,
     PLUGINS_SYM = 647,
     POINT_SYM = 648,
     POLYGON = 649,
     PORT_SYM = 650,
     POSITION_SYM = 651,
     PRECISION = 652,
     PREPARE_SYM = 653,
     PRESERVE_SYM = 654,
     PREV_SYM = 655,
     PRIMARY_SYM = 656,
     PRIVILEGES = 657,
     PROCEDURE_SYM = 658,
     PROCESS = 659,
     PROCESSLIST_SYM = 660,
     PROFILE_SYM = 661,
     PROFILES_SYM = 662,
     PROXY_SYM = 663,
     PURGE = 664,
     QUARTER_SYM = 665,
     QUERY_SYM = 666,
     QUICK = 667,
     RANGE_SYM = 668,
     READS_SYM = 669,
     READ_ONLY_SYM = 670,
     READ_SYM = 671,
     READ_WRITE_SYM = 672,
     REAL = 673,
     REBUILD_SYM = 674,
     RECOVER_SYM = 675,
     REDOFILE_SYM = 676,
     REDO_BUFFER_SIZE_SYM = 677,
     REDUNDANT_SYM = 678,
     REFERENCES = 679,
     REGEXP = 680,
     RELAY = 681,
     RELAYLOG_SYM = 682,
     RELAY_LOG_FILE_SYM = 683,
     RELAY_LOG_POS_SYM = 684,
     RELAY_THREAD = 685,
     RELEASE_SYM = 686,
     RELOAD = 687,
     REMOVE_SYM = 688,
     RENAME = 689,
     REORGANIZE_SYM = 690,
     REPAIR = 691,
     REPEATABLE_SYM = 692,
     REPEAT_SYM = 693,
     REPLACE = 694,
     REPLICATION = 695,
     REQUIRE_SYM = 696,
     RESET_SYM = 697,
     RESIGNAL_SYM = 698,
     RESOURCES = 699,
     RESTORE_SYM = 700,
     RESTRICT = 701,
     RESUME_SYM = 702,
     RETURNED_SQLSTATE_SYM = 703,
     RETURNS_SYM = 704,
     RETURN_SYM = 705,
     REVERSE_SYM = 706,
     REVOKE = 707,
     RIGHT = 708,
     ROLLBACK_SYM = 709,
     ROLLUP_SYM = 710,
     ROUTINE_SYM = 711,
     ROWS_SYM = 712,
     ROW_FORMAT_SYM = 713,
     ROW_SYM = 714,
     ROW_COUNT_SYM = 715,
     RTREE_SYM = 716,
     SAVEPOINT_SYM = 717,
     SCHEDULE_SYM = 718,
     SCHEMA_NAME_SYM = 719,
     SECOND_MICROSECOND_SYM = 720,
     SECOND_SYM = 721,
     SECURITY_SYM = 722,
     SELECT_SYM = 723,
     SENSITIVE_SYM = 724,
     SEPARATOR_SYM = 725,
     SERIALIZABLE_SYM = 726,
     SERIAL_SYM = 727,
     SESSION_SYM = 728,
     SERVER_SYM = 729,
     SERVER_OPTIONS = 730,
     SET = 731,
     SET_VAR = 732,
     SHARE_SYM = 733,
     SHIFT_LEFT = 734,
     SHIFT_RIGHT = 735,
     SHOW = 736,
     SHUTDOWN = 737,
     SIGNAL_SYM = 738,
     SIGNED_SYM = 739,
     SIMPLE_SYM = 740,
     SLAVE = 741,
     SLOW = 742,
     SMALLINT = 743,
     SNAPSHOT_SYM = 744,
     SOCKET_SYM = 745,
     SONAME_SYM = 746,
     SOUNDS_SYM = 747,
     SOURCE_SYM = 748,
     SPATIAL_SYM = 749,
     SPECIFIC_SYM = 750,
     SQLEXCEPTION_SYM = 751,
     SQLSTATE_SYM = 752,
     SQLWARNING_SYM = 753,
     SQL_AFTER_GTIDS = 754,
     SQL_AFTER_MTS_GAPS = 755,
     SQL_BEFORE_GTIDS = 756,
     SQL_BIG_RESULT = 757,
     SQL_BUFFER_RESULT = 758,
     SQL_CACHE_SYM = 759,
     SQL_CALC_FOUND_ROWS = 760,
     SQL_NO_CACHE_SYM = 761,
     SQL_SMALL_RESULT = 762,
     SQL_SYM = 763,
     SQL_THREAD = 764,
     SSL_SYM = 765,
     STARTING = 766,
     STARTS_SYM = 767,
     START_SYM = 768,
     STATS_AUTO_RECALC_SYM = 769,
     STATS_PERSISTENT_SYM = 770,
     STATS_SAMPLE_PAGES_SYM = 771,
     STATUS_SYM = 772,
     STDDEV_SAMP_SYM = 773,
     STD_SYM = 774,
     STOP_SYM = 775,
     STORAGE_SYM = 776,
     STRAIGHT_JOIN = 777,
     STRING_SYM = 778,
     SUBCLASS_ORIGIN_SYM = 779,
     SUBDATE_SYM = 780,
     SUBJECT_SYM = 781,
     SUBPARTITIONS_SYM = 782,
     SUBPARTITION_SYM = 783,
     SUBSTRING = 784,
     SUM_SYM = 785,
     SUPER_SYM = 786,
     SUSPEND_SYM = 787,
     SWAPS_SYM = 788,
     SWITCHES_SYM = 789,
     SYSDATE = 790,
     TABLES = 791,
     TABLESPACE = 792,
     TABLE_REF_PRIORITY = 793,
     TABLE_SYM = 794,
     TABLE_CHECKSUM_SYM = 795,
     TABLE_NAME_SYM = 796,
     TEMPORARY = 797,
     TEMPTABLE_SYM = 798,
     TERMINATED = 799,
     TEXT_STRING = 800,
     TEXT_SYM = 801,
     THAN_SYM = 802,
     THEN_SYM = 803,
     TIMESTAMP = 804,
     TIMESTAMP_ADD = 805,
     TIMESTAMP_DIFF = 806,
     TIME_SYM = 807,
     TINYBLOB = 808,
     TINYINT = 809,
     TINYTEXT = 810,
     TO_SYM = 811,
     TRAILING = 812,
     TRANSACTION_SYM = 813,
     TRIGGERS_SYM = 814,
     TRIGGER_SYM = 815,
     TRIM = 816,
     TRUE_SYM = 817,
     TRUNCATE_SYM = 818,
     TYPES_SYM = 819,
     TYPE_SYM = 820,
     UDF_RETURNS_SYM = 821,
     ULONGLONG_NUM = 822,
     UNCOMMITTED_SYM = 823,
     UNDEFINED_SYM = 824,
     UNDERSCORE_CHARSET = 825,
     UNDOFILE_SYM = 826,
     UNDO_BUFFER_SIZE_SYM = 827,
     UNDO_SYM = 828,
     UNICODE_SYM = 829,
     UNINSTALL_SYM = 830,
     UNION_SYM = 831,
     UNIQUE_SYM = 832,
     UNKNOWN_SYM = 833,
     UNLOCK_SYM = 834,
     UNSIGNED = 835,
     UNTIL_SYM = 836,
     UPDATE_SYM = 837,
     UPGRADE_SYM = 838,
     USAGE = 839,
     USER = 840,
     USE_FRM = 841,
     USE_SYM = 842,
     USING = 843,
     UTC_DATE_SYM = 844,
     UTC_TIMESTAMP_SYM = 845,
     UTC_TIME_SYM = 846,
     VALUES = 847,
     VALUE_SYM = 848,
     VARBINARY = 849,
     VARCHAR = 850,
     VARIABLES = 851,
     VARIANCE_SYM = 852,
     VARYING = 853,
     VAR_SAMP_SYM = 854,
     VIEW_SYM = 855,
     WAIT_SYM = 856,
     WARNINGS = 857,
     WEEK_SYM = 858,
     WEIGHT_STRING_SYM = 859,
     WHEN_SYM = 860,
     WHERE = 861,
     WHILE_SYM = 862,
     WITH = 863,
     WITH_CUBE_SYM = 864,
     WITH_ROLLUP_SYM = 865,
     WORK_SYM = 866,
     WRAPPER_SYM = 867,
     WRITE_SYM = 868,
     X509_SYM = 869,
     XA_SYM = 870,
     XML_SYM = 871,
     XOR = 872,
     YEAR_MONTH_SYM = 873,
     YEAR_SYM = 874,
     ZEROFILL = 875
   };
#endif
/* Tokens.  */
#define ABORT_SYM 258
#define ACCESSIBLE_SYM 259
#define ACTION 260
#define ADD 261
#define ADDDATE_SYM 262
#define AFTER_SYM 263
#define AGAINST 264
#define AGGREGATE_SYM 265
#define ALGORITHM_SYM 266
#define ALL 267
#define ALTER 268
#define ANALYSE_SYM 269
#define ANALYZE_SYM 270
#define AND_AND_SYM 271
#define AND_SYM 272
#define ANY_SYM 273
#define AS 274
#define ASC 275
#define ASCII_SYM 276
#define ASENSITIVE_SYM 277
#define AT_SYM 278
#define AUTOEXTEND_SIZE_SYM 279
#define AUTO_INC 280
#define AVG_ROW_LENGTH 281
#define AVG_SYM 282
#define BACKUP_SYM 283
#define BEFORE_SYM 284
#define BEGIN_SYM 285
#define BETWEEN_SYM 286
#define BIGINT 287
#define BINARY 288
#define BINLOG_SYM 289
#define BIN_NUM 290
#define BIT_AND 291
#define BIT_OR 292
#define BIT_SYM 293
#define BIT_XOR 294
#define BLOB_SYM 295
#define BLOCK_SYM 296
#define BOOLEAN_SYM 297
#define BOOL_SYM 298
#define BOTH 299
#define BTREE_SYM 300
#define BY 301
#define BYTE_SYM 302
#define CACHE_SYM 303
#define CALL_SYM 304
#define CASCADE 305
#define CASCADED 306
#define CASE_SYM 307
#define CAST_SYM 308
#define CATALOG_NAME_SYM 309
#define CHAIN_SYM 310
#define CHANGE 311
#define CHANGED 312
#define CHARSET 313
#define CHAR_SYM 314
#define CHECKSUM_SYM 315
#define CHECK_SYM 316
#define CIPHER_SYM 317
#define CLASS_ORIGIN_SYM 318
#define CLIENT_SYM 319
#define CLOSE_SYM 320
#define COALESCE 321
#define CODE_SYM 322
#define COLLATE_SYM 323
#define COLLATION_SYM 324
#define COLUMNS 325
#define COLUMN_SYM 326
#define COLUMN_FORMAT_SYM 327
#define COLUMN_NAME_SYM 328
#define COMMENT_SYM 329
#define COMMITTED_SYM 330
#define COMMIT_SYM 331
#define COMPACT_SYM 332
#define COMPLETION_SYM 333
#define COMPRESSED_SYM 334
#define CONCURRENT 335
#define CONDITION_SYM 336
#define CONNECTION_SYM 337
#define CONSISTENT_SYM 338
#define CONSTRAINT 339
#define CONSTRAINT_CATALOG_SYM 340
#define CONSTRAINT_NAME_SYM 341
#define CONSTRAINT_SCHEMA_SYM 342
#define CONTAINS_SYM 343
#define CONTEXT_SYM 344
#define CONTINUE_SYM 345
#define CONVERT_SYM 346
#define COUNT_SYM 347
#define CPU_SYM 348
#define CREATE 349
#define CROSS 350
#define CUBE_SYM 351
#define CURDATE 352
#define CURRENT_SYM 353
#define CURRENT_USER 354
#define CURSOR_SYM 355
#define CURSOR_NAME_SYM 356
#define CURTIME 357
#define DATABASE 358
#define DATABASES 359
#define DATAFILE_SYM 360
#define DATA_SYM 361
#define DATETIME 362
#define DATE_ADD_INTERVAL 363
#define DATE_SUB_INTERVAL 364
#define DATE_SYM 365
#define DAY_HOUR_SYM 366
#define DAY_MICROSECOND_SYM 367
#define DAY_MINUTE_SYM 368
#define DAY_SECOND_SYM 369
#define DAY_SYM 370
#define DEALLOCATE_SYM 371
#define DECIMAL_NUM 372
#define DECIMAL_SYM 373
#define DECLARE_SYM 374
#define DEFAULT 375
#define DEFAULT_AUTH_SYM 376
#define DEFINER_SYM 377
#define DELAYED_SYM 378
#define DELAY_KEY_WRITE_SYM 379
#define DELETE_SYM 380
#define DESC 381
#define DESCRIBE 382
#define DES_KEY_FILE 383
#define DETERMINISTIC_SYM 384
#define DIAGNOSTICS_SYM 385
#define DIRECTORY_SYM 386
#define DISABLE_SYM 387
#define DISCARD 388
#define DISK_SYM 389
#define DISTINCT 390
#define DIV_SYM 391
#define DOUBLE_SYM 392
#define DO_SYM 393
#define DROP 394
#define DUAL_SYM 395
#define DUMPFILE 396
#define DUPLICATE_SYM 397
#define DYNAMIC_SYM 398
#define EACH_SYM 399
#define ELSE 400
#define ELSEIF_SYM 401
#define ENABLE_SYM 402
#define ENCLOSED 403
#define END 404
#define ENDS_SYM 405
#define END_OF_INPUT 406
#define ENGINES_SYM 407
#define ENGINE_SYM 408
#define ENUM 409
#define EQ 410
#define EQUAL_SYM 411
#define ERROR_SYM 412
#define ERRORS 413
#define ESCAPED 414
#define ESCAPE_SYM 415
#define EVENTS_SYM 416
#define EVENT_SYM 417
#define EVERY_SYM 418
#define EXCHANGE_SYM 419
#define EXECUTE_SYM 420
#define EXISTS 421
#define EXIT_SYM 422
#define EXPANSION_SYM 423
#define EXPIRE_SYM 424
#define EXPORT_SYM 425
#define EXTENDED_SYM 426
#define EXTENT_SIZE_SYM 427
#define EXTRACT_SYM 428
#define FALSE_SYM 429
#define FAST_SYM 430
#define FAULTS_SYM 431
#define FETCH_SYM 432
#define FILE_SYM 433
#define FIRST_SYM 434
#define FIXED_SYM 435
#define FLOAT_NUM 436
#define FLOAT_SYM 437
#define FLUSH_SYM 438
#define FORCE_SYM 439
#define FOREIGN 440
#define FOR_SYM 441
#define FORMAT_SYM 442
#define FOUND_SYM 443
#define FROM 444
#define FULL 445
#define FULLTEXT_SYM 446
#define FUNCTION_SYM 447
#define GE 448
#define GENERAL 449
#define GEOMETRYCOLLECTION 450
#define GEOMETRY_SYM 451
#define GET_FORMAT 452
#define GET_SYM 453
#define GLOBAL_SYM 454
#define GRANT 455
#define GRANTS 456
#define GROUP_SYM 457
#define GROUP_CONCAT_SYM 458
#define GT_SYM 459
#define HANDLER_SYM 460
#define HASH_SYM 461
#define HAVING 462
#define HELP_SYM 463
#define HEX_NUM 464
#define HIGH_PRIORITY 465
#define HOST_SYM 466
#define HOSTS_SYM 467
#define HOUR_MICROSECOND_SYM 468
#define HOUR_MINUTE_SYM 469
#define HOUR_SECOND_SYM 470
#define HOUR_SYM 471
#define IDENT 472
#define IDENTIFIED_SYM 473
#define IDENT_QUOTED 474
#define IF 475
#define IGNORE_SYM 476
#define IGNORE_SERVER_IDS_SYM 477
#define IMPORT 478
#define INDEXES 479
#define INDEX_SYM 480
#define INFILE 481
#define INITIAL_SIZE_SYM 482
#define INNER_SYM 483
#define INOUT_SYM 484
#define INSENSITIVE_SYM 485
#define INSERT 486
#define INSERT_METHOD 487
#define INSTALL_SYM 488
#define INTERVAL_SYM 489
#define INTO 490
#define INT_SYM 491
#define INVOKER_SYM 492
#define IN_SYM 493
#define IO_AFTER_GTIDS 494
#define IO_BEFORE_GTIDS 495
#define IO_SYM 496
#define IPC_SYM 497
#define IS 498
#define ISOLATION 499
#define ISSUER_SYM 500
#define ITERATE_SYM 501
#define JOIN_SYM 502
#define KEYS 503
#define KEY_BLOCK_SIZE 504
#define KEY_SYM 505
#define KILL_SYM 506
#define LANGUAGE_SYM 507
#define LAST_SYM 508
#define LE 509
#define LEADING 510
#define LEAVES 511
#define LEAVE_SYM 512
#define LEFT 513
#define LESS_SYM 514
#define LEVEL_SYM 515
#define LEX_HOSTNAME 516
#define LIKE 517
#define LIMIT 518
#define LINEAR_SYM 519
#define LINES 520
#define LINESTRING 521
#define LIST_SYM 522
#define LOAD 523
#define LOCAL_SYM 524
#define LOCATOR_SYM 525
#define LOCKS_SYM 526
#define LOCK_SYM 527
#define LOGFILE_SYM 528
#define LOGS_SYM 529
#define LONGBLOB 530
#define LONGTEXT 531
#define LONG_NUM 532
#define LONG_SYM 533
#define LOOP_SYM 534
#define LOW_PRIORITY 535
#define LT 536
#define MASTER_AUTO_POSITION_SYM 537
#define MASTER_BIND_SYM 538
#define MASTER_CONNECT_RETRY_SYM 539
#define MASTER_DELAY_SYM 540
#define MASTER_HOST_SYM 541
#define MASTER_LOG_FILE_SYM 542
#define MASTER_LOG_POS_SYM 543
#define MASTER_PASSWORD_SYM 544
#define MASTER_PORT_SYM 545
#define MASTER_RETRY_COUNT_SYM 546
#define MASTER_SERVER_ID_SYM 547
#define MASTER_SSL_CAPATH_SYM 548
#define MASTER_SSL_CA_SYM 549
#define MASTER_SSL_CERT_SYM 550
#define MASTER_SSL_CIPHER_SYM 551
#define MASTER_SSL_CRL_SYM 552
#define MASTER_SSL_CRLPATH_SYM 553
#define MASTER_SSL_KEY_SYM 554
#define MASTER_SSL_SYM 555
#define MASTER_SSL_VERIFY_SERVER_CERT_SYM 556
#define MASTER_SYM 557
#define MASTER_USER_SYM 558
#define MASTER_HEARTBEAT_PERIOD_SYM 559
#define MATCH 560
#define MAX_CONNECTIONS_PER_HOUR 561
#define MAX_QUERIES_PER_HOUR 562
#define MAX_ROWS 563
#define MAX_SIZE_SYM 564
#define MAX_SYM 565
#define MAX_UPDATES_PER_HOUR 566
#define MAX_USER_CONNECTIONS_SYM 567
#define MAX_VALUE_SYM 568
#define MEDIUMBLOB 569
#define MEDIUMINT 570
#define MEDIUMTEXT 571
#define MEDIUM_SYM 572
#define MEMORY_SYM 573
#define MERGE_SYM 574
#define MESSAGE_TEXT_SYM 575
#define MICROSECOND_SYM 576
#define MIGRATE_SYM 577
#define MINUTE_MICROSECOND_SYM 578
#define MINUTE_SECOND_SYM 579
#define MINUTE_SYM 580
#define MIN_ROWS 581
#define MIN_SYM 582
#define MODE_SYM 583
#define MODIFIES_SYM 584
#define MODIFY_SYM 585
#define MOD_SYM 586
#define MONTH_SYM 587
#define MULTILINESTRING 588
#define MULTIPOINT 589
#define MULTIPOLYGON 590
#define MUTEX_SYM 591
#define MYSQL_ERRNO_SYM 592
#define NAMES_SYM 593
#define NAME_SYM 594
#define NATIONAL_SYM 595
#define NATURAL 596
#define NCHAR_STRING 597
#define NCHAR_SYM 598
#define NDBCLUSTER_SYM 599
#define NE 600
#define NEG 601
#define NEW_SYM 602
#define NEXT_SYM 603
#define NODEGROUP_SYM 604
#define NONE_SYM 605
#define NOT2_SYM 606
#define NOT_SYM 607
#define NOW_SYM 608
#define NO_SYM 609
#define NO_WAIT_SYM 610
#define NO_WRITE_TO_BINLOG 611
#define NULL_SYM 612
#define NUM 613
#define NUMBER_SYM 614
#define NUMERIC_SYM 615
#define NVARCHAR_SYM 616
#define OFFSET_SYM 617
#define OLD_PASSWORD 618
#define ON 619
#define ONE_SYM 620
#define ONLY_SYM 621
#define OPEN_SYM 622
#define OPTIMIZE 623
#define OPTIONS_SYM 624
#define OPTION 625
#define OPTIONALLY 626
#define OR2_SYM 627
#define ORDER_SYM 628
#define OR_OR_SYM 629
#define OR_SYM 630
#define OUTER 631
#define OUTFILE 632
#define OUT_SYM 633
#define OWNER_SYM 634
#define PACK_KEYS_SYM 635
#define PAGE_SYM 636
#define PARAM_MARKER 637
#define PARSER_SYM 638
#define PARTIAL 639
#define PARTITION_SYM 640
#define PARTITIONS_SYM 641
#define PARTITIONING_SYM 642
#define PASSWORD 643
#define PHASE_SYM 644
#define PLUGIN_DIR_SYM 645
#define PLUGIN_SYM 646
#define PLUGINS_SYM 647
#define POINT_SYM 648
#define POLYGON 649
#define PORT_SYM 650
#define POSITION_SYM 651
#define PRECISION 652
#define PREPARE_SYM 653
#define PRESERVE_SYM 654
#define PREV_SYM 655
#define PRIMARY_SYM 656
#define PRIVILEGES 657
#define PROCEDURE_SYM 658
#define PROCESS 659
#define PROCESSLIST_SYM 660
#define PROFILE_SYM 661
#define PROFILES_SYM 662
#define PROXY_SYM 663
#define PURGE 664
#define QUARTER_SYM 665
#define QUERY_SYM 666
#define QUICK 667
#define RANGE_SYM 668
#define READS_SYM 669
#define READ_ONLY_SYM 670
#define READ_SYM 671
#define READ_WRITE_SYM 672
#define REAL 673
#define REBUILD_SYM 674
#define RECOVER_SYM 675
#define REDOFILE_SYM 676
#define REDO_BUFFER_SIZE_SYM 677
#define REDUNDANT_SYM 678
#define REFERENCES 679
#define REGEXP 680
#define RELAY 681
#define RELAYLOG_SYM 682
#define RELAY_LOG_FILE_SYM 683
#define RELAY_LOG_POS_SYM 684
#define RELAY_THREAD 685
#define RELEASE_SYM 686
#define RELOAD 687
#define REMOVE_SYM 688
#define RENAME 689
#define REORGANIZE_SYM 690
#define REPAIR 691
#define REPEATABLE_SYM 692
#define REPEAT_SYM 693
#define REPLACE 694
#define REPLICATION 695
#define REQUIRE_SYM 696
#define RESET_SYM 697
#define RESIGNAL_SYM 698
#define RESOURCES 699
#define RESTORE_SYM 700
#define RESTRICT 701
#define RESUME_SYM 702
#define RETURNED_SQLSTATE_SYM 703
#define RETURNS_SYM 704
#define RETURN_SYM 705
#define REVERSE_SYM 706
#define REVOKE 707
#define RIGHT 708
#define ROLLBACK_SYM 709
#define ROLLUP_SYM 710
#define ROUTINE_SYM 711
#define ROWS_SYM 712
#define ROW_FORMAT_SYM 713
#define ROW_SYM 714
#define ROW_COUNT_SYM 715
#define RTREE_SYM 716
#define SAVEPOINT_SYM 717
#define SCHEDULE_SYM 718
#define SCHEMA_NAME_SYM 719
#define SECOND_MICROSECOND_SYM 720
#define SECOND_SYM 721
#define SECURITY_SYM 722
#define SELECT_SYM 723
#define SENSITIVE_SYM 724
#define SEPARATOR_SYM 725
#define SERIALIZABLE_SYM 726
#define SERIAL_SYM 727
#define SESSION_SYM 728
#define SERVER_SYM 729
#define SERVER_OPTIONS 730
#define SET 731
#define SET_VAR 732
#define SHARE_SYM 733
#define SHIFT_LEFT 734
#define SHIFT_RIGHT 735
#define SHOW 736
#define SHUTDOWN 737
#define SIGNAL_SYM 738
#define SIGNED_SYM 739
#define SIMPLE_SYM 740
#define SLAVE 741
#define SLOW 742
#define SMALLINT 743
#define SNAPSHOT_SYM 744
#define SOCKET_SYM 745
#define SONAME_SYM 746
#define SOUNDS_SYM 747
#define SOURCE_SYM 748
#define SPATIAL_SYM 749
#define SPECIFIC_SYM 750
#define SQLEXCEPTION_SYM 751
#define SQLSTATE_SYM 752
#define SQLWARNING_SYM 753
#define SQL_AFTER_GTIDS 754
#define SQL_AFTER_MTS_GAPS 755
#define SQL_BEFORE_GTIDS 756
#define SQL_BIG_RESULT 757
#define SQL_BUFFER_RESULT 758
#define SQL_CACHE_SYM 759
#define SQL_CALC_FOUND_ROWS 760
#define SQL_NO_CACHE_SYM 761
#define SQL_SMALL_RESULT 762
#define SQL_SYM 763
#define SQL_THREAD 764
#define SSL_SYM 765
#define STARTING 766
#define STARTS_SYM 767
#define START_SYM 768
#define STATS_AUTO_RECALC_SYM 769
#define STATS_PERSISTENT_SYM 770
#define STATS_SAMPLE_PAGES_SYM 771
#define STATUS_SYM 772
#define STDDEV_SAMP_SYM 773
#define STD_SYM 774
#define STOP_SYM 775
#define STORAGE_SYM 776
#define STRAIGHT_JOIN 777
#define STRING_SYM 778
#define SUBCLASS_ORIGIN_SYM 779
#define SUBDATE_SYM 780
#define SUBJECT_SYM 781
#define SUBPARTITIONS_SYM 782
#define SUBPARTITION_SYM 783
#define SUBSTRING 784
#define SUM_SYM 785
#define SUPER_SYM 786
#define SUSPEND_SYM 787
#define SWAPS_SYM 788
#define SWITCHES_SYM 789
#define SYSDATE 790
#define TABLES 791
#define TABLESPACE 792
#define TABLE_REF_PRIORITY 793
#define TABLE_SYM 794
#define TABLE_CHECKSUM_SYM 795
#define TABLE_NAME_SYM 796
#define TEMPORARY 797
#define TEMPTABLE_SYM 798
#define TERMINATED 799
#define TEXT_STRING 800
#define TEXT_SYM 801
#define THAN_SYM 802
#define THEN_SYM 803
#define TIMESTAMP 804
#define TIMESTAMP_ADD 805
#define TIMESTAMP_DIFF 806
#define TIME_SYM 807
#define TINYBLOB 808
#define TINYINT 809
#define TINYTEXT 810
#define TO_SYM 811
#define TRAILING 812
#define TRANSACTION_SYM 813
#define TRIGGERS_SYM 814
#define TRIGGER_SYM 815
#define TRIM 816
#define TRUE_SYM 817
#define TRUNCATE_SYM 818
#define TYPES_SYM 819
#define TYPE_SYM 820
#define UDF_RETURNS_SYM 821
#define ULONGLONG_NUM 822
#define UNCOMMITTED_SYM 823
#define UNDEFINED_SYM 824
#define UNDERSCORE_CHARSET 825
#define UNDOFILE_SYM 826
#define UNDO_BUFFER_SIZE_SYM 827
#define UNDO_SYM 828
#define UNICODE_SYM 829
#define UNINSTALL_SYM 830
#define UNION_SYM 831
#define UNIQUE_SYM 832
#define UNKNOWN_SYM 833
#define UNLOCK_SYM 834
#define UNSIGNED 835
#define UNTIL_SYM 836
#define UPDATE_SYM 837
#define UPGRADE_SYM 838
#define USAGE 839
#define USER 840
#define USE_FRM 841
#define USE_SYM 842
#define USING 843
#define UTC_DATE_SYM 844
#define UTC_TIMESTAMP_SYM 845
#define UTC_TIME_SYM 846
#define VALUES 847
#define VALUE_SYM 848
#define VARBINARY 849
#define VARCHAR 850
#define VARIABLES 851
#define VARIANCE_SYM 852
#define VARYING 853
#define VAR_SAMP_SYM 854
#define VIEW_SYM 855
#define WAIT_SYM 856
#define WARNINGS 857
#define WEEK_SYM 858
#define WEIGHT_STRING_SYM 859
#define WHEN_SYM 860
#define WHERE 861
#define WHILE_SYM 862
#define WITH 863
#define WITH_CUBE_SYM 864
#define WITH_ROLLUP_SYM 865
#define WORK_SYM 866
#define WRAPPER_SYM 867
#define WRITE_SYM 868
#define X509_SYM 869
#define XA_SYM 870
#define XML_SYM 871
#define XOR 872
#define YEAR_MONTH_SYM 873
#define YEAR_SYM 874
#define ZEROFILL 875




#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
typedef union YYSTYPE
{

/* Line 214 of yacc.c  */
#line 965 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"

  int  num;
  ulong ulong_num;
  ulonglong ulonglong_number;
  longlong longlong_number;
  LEX_STRING lex_str;
  LEX_STRING *lex_str_ptr;
  LEX_SYMBOL symbol;
  Table_ident *table;
  char *simple_string;
  Item *item;
  Item_num *item_num;
  List<Item> *item_list;
  List<String> *string_list;
  String *string;
  Key_part_spec *key_part;
  TABLE_LIST *table_list;
  udf_func *udf;
  LEX_USER *lex_user;
  struct sys_var_with_base variable;
  enum enum_var_type var_type;
  Key::Keytype key_type;
  enum ha_key_alg key_alg;
  handlerton *db_type;
  enum row_type row_type;
  enum ha_rkey_function ha_rkey_mode;
  enum enum_ha_read_modes ha_read_mode;
  enum enum_tx_isolation tx_isolation;
  enum Cast_target cast_type;
  enum Item_udftype udf_type;
  const CHARSET_INFO *charset;
  thr_lock_type lock_type;
  interval_type interval, interval_time_st;
  timestamp_type date_time_type;
  st_select_lex *select_lex;
  chooser_compare_func_creator boolfunc2creator;
  class sp_condition_value *spcondvalue;
  struct { int vars, conds, hndlrs, curs; } spblock;
  sp_name *spname;
  LEX *lex;
  sp_head *sphead;
  struct p_elem_val *p_elem_value;
  enum index_hint_type index_hint;
  enum enum_filetype filetype;
  enum Foreign_key::fk_option m_fk_option;
  enum enum_yes_no_unknown m_yes_no_unk;
  Diag_condition_item_name diag_condition_item_name;
  Diagnostics_information::Which_area diag_area;
  Diagnostics_information *diag_info;
  Statement_information_item *stmt_info_item;
  Statement_information_item::Name stmt_info_item_name;
  List<Statement_information_item> *stmt_info_list;
  Condition_information_item *cond_info_item;
  Condition_information_item::Name cond_info_item_name;
  List<Condition_information_item> *cond_info_list;
  bool is_not_empty;



/* Line 214 of yacc.c  */
#line 2360 "/export/home/pb2/build/sb_0-8905559-1365164376.65/dist_GPL/sql/sql_yacc.cc"
} YYSTYPE;
# define YYSTYPE_IS_TRIVIAL 1
# define yystype YYSTYPE /* obsolescent; will be withdrawn */
# define YYSTYPE_IS_DECLARED 1
#endif


/* Copy the second part of user declarations.  */

/* Line 264 of yacc.c  */
#line 1023 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"

bool my_yyoverflow(short **a, YYSTYPE **b, ulong *yystacksize);


/* Line 264 of yacc.c  */
#line 2377 "/export/home/pb2/build/sb_0-8905559-1365164376.65/dist_GPL/sql/sql_yacc.cc"

#ifdef short
# undef short
#endif

#ifdef YYTYPE_UINT8
typedef YYTYPE_UINT8 yytype_uint8;
#else
typedef unsigned char yytype_uint8;
#endif

#ifdef YYTYPE_INT8
typedef YYTYPE_INT8 yytype_int8;
#elif (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
typedef signed char yytype_int8;
#else
typedef short int yytype_int8;
#endif

#ifdef YYTYPE_UINT16
typedef YYTYPE_UINT16 yytype_uint16;
#else
typedef unsigned short int yytype_uint16;
#endif

#ifdef YYTYPE_INT16
typedef YYTYPE_INT16 yytype_int16;
#else
typedef short int yytype_int16;
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif ! defined YYSIZE_T && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned int
# endif
#endif

#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)

#ifndef YY_
# if YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(msgid) dgettext ("bison-runtime", msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(msgid) msgid
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(e) ((void) (e))
#else
# define YYUSE(e) /* empty */
#endif

/* Identity function, used to suppress warnings about constant conditions.  */
#ifndef lint
# define YYID(n) (n)
#else
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static int
YYID (int yyi)
#else
static int
YYID (yyi)
    int yyi;
#endif
{
  return yyi;
}
#endif

#if ! defined yyoverflow || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#     ifndef _STDLIB_H
#      define _STDLIB_H 1
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's `empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (YYID (0))
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined _STDLIB_H \
       && ! ((defined YYMALLOC || defined malloc) \
	     && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef _STDLIB_H
#    define _STDLIB_H 1
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* ! defined yyoverflow || YYERROR_VERBOSE */


#if (! defined yyoverflow \
     && (! defined __cplusplus \
	 || (defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yytype_int16 yyss_alloc;
  YYSTYPE yyvs_alloc;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE)) \
      + YYSTACK_GAP_MAXIMUM)

/* Copy COUNT objects from FROM to TO.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(To, From, Count) \
      __builtin_memcpy (To, From, (Count) * sizeof (*(From)))
#  else
#   define YYCOPY(To, From, Count)		\
      do					\
	{					\
	  YYSIZE_T yyi;				\
	  for (yyi = 0; yyi < (Count); yyi++)	\
	    (To)[yyi] = (From)[yyi];		\
	}					\
      while (YYID (0))
#  endif
# endif

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack_alloc, Stack)				\
    do									\
      {									\
	YYSIZE_T yynewbytes;						\
	YYCOPY (&yyptr->Stack_alloc, Stack, yysize);			\
	Stack = &yyptr->Stack_alloc;					\
	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
	yyptr += yynewbytes / sizeof (*yyptr);				\
      }									\
    while (YYID (0))

#endif

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  597
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   55604

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  640
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  948
/* YYNRULES -- Number of rules.  */
#define YYNRULES  2665
/* YYNRULES -- Number of states.  */
#define YYNSTATES  4520

/* YYTRANSLATE(YYLEX) -- Bison symbol number corresponding to YYLEX.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   875

#define YYTRANSLATE(YYX)						\
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[YYLEX] -- Bison symbol number corresponding to YYLEX.  */
static const yytype_uint16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   633,     2,     2,     2,   627,   622,     2,
     630,   631,   625,   624,   632,   623,   638,   626,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   639,   636,
       2,     2,     2,     2,   637,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,   628,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   634,   621,   635,   629,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620
};

#if YYDEBUG
/* YYPRHS[YYN] -- Index of the first RHS symbol of rule number YYN in
   YYRHS.  */
static const yytype_uint16 yyprhs[] =
{
       0,     0,     3,     5,     6,    11,    14,    15,    17,    19,
      21,    23,    25,    27,    29,    31,    33,    35,    37,    39,
      41,    43,    45,    47,    49,    51,    53,    55,    57,    59,
      61,    63,    65,    67,    69,    71,    73,    75,    77,    79,
      81,    83,    85,    87,    89,    91,    93,    95,    97,    99,
     101,   103,   105,   107,   109,   111,   113,   115,   117,   119,
     121,   123,   125,   129,   131,   133,   138,   140,   143,   144,
     149,   150,   153,   157,   159,   162,   163,   167,   168,   174,
     176,   180,   184,   188,   192,   196,   200,   204,   208,   212,
     216,   220,   224,   228,   232,   236,   240,   244,   248,   252,
     258,   262,   264,   265,   267,   271,   273,   277,   281,   285,
     289,   290,   298,   299,   300,   315,   316,   317,   332,   333,
     334,   349,   350,   357,   358,   362,   367,   372,   376,   379,
     390,   392,   396,   399,   402,   405,   408,   411,   414,   417,
     418,   432,   433,   440,   443,   444,   446,   450,   452,   453,
     456,   457,   460,   461,   463,   467,   472,   473,   476,   477,
     480,   482,   484,   486,   488,   490,   492,   494,   496,   498,
     500,   502,   504,   506,   507,   511,   513,   514,   517,   518,
     521,   524,   527,   530,   533,   537,   541,   543,   545,   547,
     550,   554,   558,   559,   564,   565,   569,   570,   572,   576,
     578,   579,   581,   585,   587,   588,   592,   593,   595,   599,
     601,   606,   607,   609,   611,   613,   614,   618,   621,   625,
     626,   630,   631,   637,   643,   644,   652,   653,   660,   662,
     664,   666,   670,   672,   674,   676,   680,   681,   683,   685,
     687,   689,   692,   694,   698,   700,   702,   703,   705,   706,
     709,   713,   719,   721,   723,   725,   727,   729,   731,   733,
     735,   737,   739,   741,   743,   745,   747,   749,   753,   758,
     759,   761,   763,   767,   769,   773,   777,   779,   782,   784,
     786,   788,   790,   794,   798,   800,   802,   804,   806,   808,
     810,   812,   814,   816,   818,   820,   822,   824,   826,   830,
     831,   832,   836,   838,   840,   842,   844,   846,   848,   850,
     852,   854,   856,   858,   860,   862,   863,   869,   870,   873,
     874,   878,   879,   882,   885,   888,   891,   892,   899,   902,
     903,   906,   908,   910,   914,   915,   916,   917,   925,   926,
     929,   932,   934,   936,   937,   938,   947,   948,   955,   957,
     960,   962,   965,   966,   967,   974,   975,   976,   983,   984,
     987,   988,   994,   995,   997,   998,  1004,  1005,  1008,  1009,
    1015,  1020,  1021,  1022,  1031,  1032,  1033,  1042,  1044,  1046,
    1048,  1050,  1052,  1055,  1060,  1066,  1067,  1072,  1077,  1082,
    1086,  1090,  1093,  1096,  1097,  1100,  1102,  1105,  1109,  1111,
    1113,  1115,  1116,  1118,  1120,  1123,  1127,  1129,  1131,  1133,
    1135,  1137,  1139,  1141,  1143,  1144,  1146,  1148,  1151,  1155,
    1157,  1159,  1161,  1163,  1165,  1166,  1168,  1170,  1173,  1177,
    1179,  1181,  1183,  1185,  1187,  1189,  1191,  1192,  1194,  1196,
    1199,  1203,  1205,  1207,  1209,  1212,  1215,  1218,  1220,  1222,
    1224,  1226,  1229,  1233,  1237,  1241,  1245,  1249,  1253,  1257,
    1261,  1266,  1268,  1270,  1272,  1274,  1277,  1281,  1284,  1289,
    1295,  1296,  1302,  1303,  1304,  1310,  1311,  1319,  1321,  1322,
    1324,  1325,  1330,  1331,  1332,  1336,  1342,  1349,  1350,  1355,
    1358,  1361,  1364,  1367,  1368,  1370,  1371,  1375,  1376,  1378,
    1380,  1384,  1386,  1391,  1397,  1403,  1404,  1407,  1408,  1409,
    1417,  1418,  1429,  1431,  1435,  1437,  1439,  1440,  1443,  1444,
    1448,  1450,  1454,  1455,  1462,  1464,  1465,  1466,  1472,  1473,
    1478,  1480,  1482,  1484,  1488,  1490,  1494,  1495,  1496,  1502,
    1504,  1508,  1510,  1512,  1513,  1517,  1519,  1523,  1524,  1529,
    1531,  1532,  1534,  1537,  1539,  1543,  1548,  1552,  1556,  1560,
    1565,  1570,  1574,  1575,  1576,  1583,  1584,  1586,  1587,  1589,
    1591,  1594,  1596,  1598,  1599,  1601,  1603,  1606,  1608,  1609,
    1613,  1614,  1616,  1618,  1621,  1623,  1626,  1630,  1634,  1638,
    1642,  1646,  1650,  1654,  1658,  1662,  1666,  1670,  1674,  1678,
    1682,  1686,  1690,  1694,  1698,  1702,  1706,  1707,  1714,  1716,
    1718,  1722,  1727,  1732,  1735,  1738,  1741,  1745,  1749,  1754,
    1759,  1761,  1763,  1765,  1767,  1769,  1771,  1773,  1775,  1777,
    1779,  1781,  1783,  1786,  1788,  1790,  1792,  1794,  1796,  1798,
    1802,  1804,  1806,  1809,  1812,  1820,  1829,  1838,  1847,  1856,
    1859,  1860,  1862,  1867,  1868,  1870,  1873,  1874,  1879,  1883,
    1887,  1891,  1893,  1896,  1898,  1900,  1904,  1907,  1911,  1914,
    1917,  1919,  1923,  1927,  1930,  1934,  1936,  1939,  1942,  1945,
    1947,  1950,  1952,  1954,  1956,  1959,  1963,  1966,  1970,  1973,
    1976,  1980,  1984,  1988,  1989,  1996,  1997,  2004,  2007,  2009,
    2011,  2013,  2015,  2017,  2019,  2021,  2023,  2025,  2027,  2029,
    2032,  2035,  2037,  2040,  2042,  2045,  2049,  2052,  2054,  2056,
    2058,  2060,  2062,  2064,  2066,  2069,  2070,  2072,  2074,  2080,
    2081,  2085,  2086,  2089,  2093,  2094,  2096,  2099,  2101,  2103,
    2105,  2107,  2111,  2115,  2119,  2123,  2124,  2126,  2127,  2129,
    2130,  2132,  2135,  2137,  2139,  2142,  2145,  2149,  2151,  2155,
    2158,  2160,  2163,  2166,  2169,  2172,  2175,  2178,  2181,  2184,
    2187,  2190,  2193,  2195,  2197,  2200,  2202,  2204,  2206,  2208,
    2210,  2211,  2214,  2216,  2218,  2220,  2222,  2224,  2225,  2228,
    2230,  2232,  2233,  2235,  2237,  2240,  2243,  2245,  2248,  2251,
    2252,  2254,  2256,  2258,  2262,  2264,  2268,  2269,  2271,  2272,
    2277,  2279,  2281,  2283,  2284,  2286,  2289,  2291,  2293,  2296,
    2298,  2302,  2306,  2308,  2310,  2311,  2314,  2315,  2317,  2323,
    2324,  2328,  2332,  2334,  2335,  2338,  2341,  2344,  2345,  2349,
    2353,  2360,  2367,  2369,  2371,  2374,  2377,  2380,  2382,  2385,
    2388,  2390,  2392,  2393,  2395,  2397,  2399,  2401,  2402,  2404,
    2406,  2408,  2409,  2411,  2414,  2415,  2417,  2418,  2420,  2421,
    2423,  2425,  2428,  2430,  2433,  2435,  2438,  2441,  2444,  2448,
    2451,  2453,  2455,  2457,  2459,  2463,  2465,  2467,  2469,  2474,
    2477,  2479,  2484,  2485,  2487,  2488,  2491,  2493,  2497,  2498,
    2505,  2506,  2512,  2520,  2521,  2527,  2528,  2534,  2535,  2541,
    2542,  2547,  2548,  2559,  2563,  2568,  2572,  2576,  2584,  2589,
    2593,  2599,  2600,  2604,  2606,  2611,  2612,  2616,  2617,  2620,
    2621,  2623,  2624,  2627,  2630,  2633,  2636,  2638,  2640,  2642,
    2646,  2651,  2652,  2659,  2664,  2665,  2671,  2672,  2679,  2684,
    2688,  2690,  2698,  2702,  2704,  2706,  2707,  2713,  2714,  2718,
    2721,  2722,  2728,  2729,  2730,  2737,  2739,  2743,  2745,  2747,
    2751,  2754,  2758,  2761,  2766,  2767,  2774,  2775,  2776,  2785,
    2790,  2795,  2799,  2803,  2806,  2809,  2816,  2822,  2826,  2832,
    2834,  2836,  2838,  2840,  2842,  2843,  2845,  2847,  2850,  2853,
    2857,  2861,  2865,  2869,  2870,  2872,  2873,  2875,  2876,  2878,
    2880,  2881,  2884,  2886,  2887,  2889,  2891,  2893,  2894,  2901,
    2905,  2909,  2910,  2912,  2914,  2918,  2922,  2925,  2928,  2933,
    2934,  2938,  2939,  2943,  2944,  2948,  2949,  2953,  2954,  2956,
    2958,  2962,  2964,  2966,  2967,  2970,  2972,  2976,  2980,  2984,
    2986,  2987,  2993,  2994,  2996,  2998,  2999,  3006,  3007,  3009,
    3011,  3014,  3016,  3018,  3020,  3021,  3027,  3030,  3031,  3037,
    3038,  3040,  3042,  3045,  3047,  3049,  3051,  3053,  3055,  3058,
    3059,  3065,  3066,  3068,  3070,  3071,  3076,  3081,  3085,  3091,
    3093,  3097,  3101,  3102,  3109,  3111,  3113,  3115,  3119,  3122,
    3126,  3128,  3130,  3131,  3138,  3140,  3142,  3144,  3148,  3152,
    3157,  3158,  3165,  3166,  3169,  3170,  3175,  3176,  3179,  3181,
    3184,  3189,  3192,  3196,  3199,  3203,  3204,  3208,  3209,  3210,
    3217,  3220,  3222,  3224,  3227,  3230,  3239,  3244,  3245,  3247,
    3250,  3252,  3254,  3256,  3258,  3259,  3262,  3267,  3271,  3273,
    3275,  3279,  3284,  3285,  3286,  3287,  3290,  3293,  3295,  3297,
    3298,  3301,  3305,  3309,  3313,  3316,  3320,  3325,  3329,  3334,
    3338,  3343,  3345,  3349,  3354,  3358,  3362,  3369,  3371,  3377,
    3384,  3390,  3398,  3405,  3414,  3420,  3427,  3432,  3437,  3443,
    3447,  3452,  3454,  3458,  3462,  3466,  3470,  3474,  3478,  3484,
    3490,  3494,  3498,  3502,  3506,  3510,  3514,  3516,  3518,  3520,
    3522,  3524,  3526,  3528,  3530,  3532,  3534,  3536,  3538,  3540,
    3542,  3544,  3546,  3548,  3550,  3552,  3554,  3556,  3558,  3562,
    3564,  3566,  3568,  3570,  3574,  3577,  3580,  3583,  3586,  3590,
    3594,  3600,  3607,  3612,  3617,  3625,  3628,  3635,  3641,  3648,
    3655,  3660,  3665,  3671,  3676,  3683,  3686,  3691,  3696,  3701,
    3712,  3719,  3728,  3735,  3740,  3745,  3752,  3757,  3762,  3767,
    3774,  3779,  3787,  3795,  3803,  3810,  3817,  3824,  3831,  3835,
    3840,  3847,  3856,  3859,  3862,  3871,  3880,  3887,  3894,  3896,
    3903,  3910,  3919,  3928,  3935,  3944,  3951,  3954,  3963,  3972,
    3975,  3978,  3981,  3986,  3991,  3996,  4001,  4005,  4014,  4021,
    4030,  4035,  4042,  4047,  4052,  4057,  4064,  4073,  4078,  4082,
    4089,  4094,  4101,  4107,  4116,  4124,  4135,  4137,  4144,  4149,
    4154,  4159,  4164,  4169,  4176,  4181,  4182,  4188,  4195,  4198,
    4202,  4203,  4208,  4209,  4213,  4214,  4216,  4218,  4222,  4227,
    4232,  4238,  4243,  4248,  4253,  4259,  4264,  4265,  4266,  4274,
    4279,  4285,  4290,  4296,  4301,  4306,  4311,  4316,  4321,  4327,
    4328,  4337,  4338,  4342,  4346,  4348,  4353,  4354,  4356,  4357,
    4360,  4361,  4363,  4364,  4368,  4371,  4375,  4378,  4380,  4383,
    4385,  4388,  4390,  4393,  4396,  4399,  4400,  4402,  4404,  4408,
    4410,  4414,  4416,  4420,  4421,  4423,  4424,  4427,  4432,  4438,
    4440,  4442,  4444,  4446,  4451,  4453,  4457,  4461,  4465,  4466,
    4473,  4474,  4481,  4482,  4491,  4496,  4497,  4506,  4507,  4518,
    4525,  4526,  4535,  4536,  4547,  4554,  4556,  4559,  4562,  4563,
    4565,  4571,  4572,  4578,  4582,  4588,  4591,  4592,  4593,  4601,
    4603,  4604,  4605,  4612,  4613,  4617,  4618,  4619,  4625,  4626,
    4628,  4629,  4631,  4632,  4635,  4639,  4643,  4645,  4647,  4648,
    4656,  4657,  4665,  4667,  4670,  4671,  4672,  4675,  4676,  4679,
    4680,  4682,  4684,  4686,  4688,  4692,  4694,  4698,  4700,  4702,
    4704,  4706,  4708,  4710,  4712,  4714,  4716,  4718,  4720,  4722,
    4724,  4726,  4728,  4730,  4732,  4734,  4736,  4738,  4740,  4742,
    4744,  4746,  4748,  4749,  4751,  4753,  4754,  4757,  4758,  4760,
    4761,  4762,  4766,  4767,  4768,  4772,  4775,  4776,  4777,  4782,
    4787,  4790,  4791,  4793,  4795,  4799,  4803,  4805,  4808,  4809,
    4811,  4812,  4817,  4822,  4825,  4826,  4828,  4830,  4831,  4833,
    4834,  4836,  4839,  4841,  4845,  4849,  4851,  4853,  4855,  4857,
    4859,  4860,  4863,  4865,  4867,  4869,  4871,  4873,  4875,  4877,
    4879,  4881,  4883,  4885,  4887,  4889,  4891,  4893,  4895,  4897,
    4899,  4901,  4903,  4905,  4907,  4909,  4910,  4911,  4918,  4919,
    4921,  4925,  4927,  4928,  4931,  4935,  4937,  4940,  4942,  4943,
    4947,  4948,  4949,  4957,  4960,  4962,  4963,  4967,  4968,  4976,
    4977,  4978,  4987,  4992,  4999,  5004,  5009,  5014,  5015,  5022,
    5027,  5032,  5037,  5043,  5048,  5050,  5054,  5056,  5059,  5061,
    5065,  5067,  5068,  5071,  5072,  5074,  5075,  5077,  5079,  5082,
    5086,  5088,  5090,  5091,  5092,  5101,  5102,  5103,  5110,  5111,
    5113,  5115,  5117,  5119,  5121,  5124,  5126,  5128,  5130,  5134,
    5139,  5140,  5144,  5148,  5150,  5153,  5156,  5157,  5161,  5162,
    5168,  5172,  5174,  5178,  5180,  5184,  5186,  5188,  5189,  5191,
    5192,  5197,  5198,  5200,  5204,  5206,  5208,  5210,  5211,  5212,
    5219,  5220,  5221,  5233,  5237,  5239,  5243,  5247,  5249,  5253,
    5254,  5256,  5257,  5262,  5263,  5271,  5272,  5278,  5279,  5286,
    5288,  5292,  5295,  5300,  5301,  5304,  5305,  5308,  5310,  5312,
    5314,  5315,  5320,  5321,  5323,  5324,  5326,  5328,  5332,  5334,
    5336,  5339,  5342,  5345,  5347,  5349,  5351,  5353,  5354,  5358,
    5359,  5363,  5366,  5371,  5376,  5380,  5385,  5390,  5392,  5396,
    5400,  5407,  5410,  5413,  5414,  5421,  5422,  5429,  5435,  5438,
    5440,  5446,  5452,  5455,  5458,  5460,  5465,  5469,  5472,  5476,
    5479,  5482,  5484,  5488,  5493,  5497,  5501,  5504,  5507,  5511,
    5515,  5519,  5523,  5527,  5531,  5535,  5539,  5541,  5543,  5545,
    5547,  5549,  5550,  5552,  5553,  5556,  5557,  5559,  5561,  5563,
    5564,  5567,  5568,  5571,  5572,  5575,  5578,  5579,  5584,  5585,
    5590,  5592,  5594,  5596,  5598,  5600,  5602,  5604,  5605,  5607,
    5609,  5613,  5614,  5616,  5618,  5619,  5624,  5625,  5626,  5632,
    5634,  5635,  5639,  5640,  5644,  5648,  5650,  5653,  5656,  5659,
    5662,  5665,  5668,  5671,  5673,  5675,  5677,  5679,  5681,  5683,
    5684,  5686,  5687,  5691,  5695,  5697,  5698,  5702,  5704,  5707,
    5708,  5710,  5711,  5715,  5719,  5722,  5725,  5729,  5730,  5732,
    5734,  5737,  5738,  5739,  5740,  5741,  5764,  5766,  5768,  5769,
    5771,  5772,  5774,  5776,  5777,  5779,  5781,  5782,  5785,  5788,
    5790,  5794,  5799,  5803,  5807,  5808,  5811,  5814,  5816,  5820,
    5824,  5825,  5830,  5831,  5835,  5837,  5839,  5840,  5844,  5847,
    5851,  5853,  5855,  5858,  5859,  5862,  5866,  5868,  5874,  5876,
    5878,  5881,  5884,  5886,  5888,  5890,  5892,  5894,  5897,  5900,
    5902,  5904,  5906,  5908,  5910,  5912,  5914,  5916,  5919,  5922,
    5924,  5926,  5928,  5930,  5932,  5935,  5938,  5941,  5943,  5945,
    5949,  5955,  5957,  5959,  5961,  5963,  5965,  5969,  5974,  5980,
    5982,  5988,  5992,  5995,  5997,  6001,  6004,  6007,  6012,  6014,
    6016,  6018,  6020,  6022,  6024,  6026,  6028,  6030,  6032,  6034,
    6036,  6038,  6040,  6042,  6046,  6049,  6051,  6053,  6055,  6057,
    6059,  6061,  6063,  6065,  6067,  6069,  6071,  6073,  6075,  6077,
    6079,  6081,  6083,  6085,  6087,  6089,  6091,  6093,  6095,  6097,
    6099,  6101,  6103,  6105,  6107,  6109,  6111,  6113,  6115,  6117,
    6119,  6121,  6123,  6125,  6127,  6129,  6131,  6133,  6135,  6137,
    6139,  6141,  6143,  6145,  6147,  6149,  6151,  6153,  6155,  6157,
    6159,  6161,  6163,  6165,  6167,  6169,  6171,  6173,  6175,  6177,
    6179,  6181,  6183,  6185,  6187,  6189,  6191,  6193,  6195,  6197,
    6199,  6201,  6203,  6205,  6207,  6209,  6211,  6213,  6215,  6217,
    6219,  6221,  6223,  6225,  6227,  6229,  6231,  6233,  6235,  6237,
    6239,  6241,  6243,  6245,  6247,  6249,  6251,  6253,  6255,  6257,
    6259,  6261,  6263,  6265,  6267,  6269,  6271,  6273,  6275,  6277,
    6279,  6281,  6283,  6285,  6287,  6289,  6291,  6293,  6295,  6297,
    6299,  6301,  6303,  6305,  6307,  6309,  6311,  6313,  6315,  6317,
    6319,  6321,  6323,  6325,  6327,  6329,  6331,  6333,  6335,  6337,
    6339,  6341,  6343,  6345,  6347,  6349,  6351,  6353,  6355,  6357,
    6359,  6361,  6363,  6365,  6367,  6369,  6371,  6373,  6375,  6377,
    6379,  6381,  6383,  6385,  6387,  6389,  6391,  6393,  6395,  6397,
    6399,  6401,  6403,  6405,  6407,  6409,  6411,  6413,  6415,  6417,
    6419,  6421,  6423,  6425,  6427,  6429,  6431,  6433,  6435,  6437,
    6439,  6441,  6443,  6445,  6447,  6449,  6451,  6453,  6455,  6457,
    6459,  6461,  6463,  6465,  6467,  6469,  6471,  6473,  6475,  6477,
    6479,  6481,  6483,  6485,  6487,  6489,  6491,  6493,  6495,  6497,
    6499,  6501,  6503,  6505,  6507,  6509,  6511,  6513,  6515,  6517,
    6519,  6521,  6523,  6525,  6527,  6529,  6531,  6533,  6535,  6537,
    6539,  6541,  6543,  6545,  6547,  6549,  6551,  6553,  6555,  6557,
    6559,  6561,  6563,  6565,  6567,  6569,  6571,  6573,  6575,  6577,
    6579,  6581,  6583,  6585,  6587,  6589,  6591,  6593,  6595,  6597,
    6599,  6601,  6603,  6605,  6607,  6609,  6611,  6613,  6615,  6617,
    6619,  6621,  6623,  6625,  6627,  6629,  6631,  6633,  6635,  6637,
    6639,  6641,  6643,  6645,  6647,  6649,  6651,  6653,  6655,  6657,
    6659,  6661,  6663,  6665,  6667,  6669,  6671,  6673,  6675,  6677,
    6679,  6681,  6683,  6685,  6687,  6689,  6691,  6693,  6695,  6697,
    6699,  6701,  6703,  6705,  6707,  6709,  6711,  6713,  6715,  6717,
    6719,  6721,  6723,  6725,  6727,  6729,  6731,  6733,  6735,  6737,
    6739,  6741,  6743,  6745,  6747,  6749,  6751,  6752,  6756,  6757,
    6761,  6762,  6766,  6767,  6771,  6772,  6776,  6779,  6780,  6783,
    6784,  6787,  6788,  6793,  6794,  6798,  6800,  6802,  6804,  6806,
    6807,  6809,  6811,  6813,  6814,  6817,  6820,  6823,  6827,  6828,
    6833,  6838,  6845,  6848,  6852,  6856,  6860,  6866,  6868,  6872,
    6876,  6878,  6880,  6884,  6888,  6890,  6894,  6897,  6900,  6903,
    6906,  6909,  6911,  6913,  6918,  6923,  6925,  6927,  6929,  6931,
    6933,  6934,  6939,  6941,  6943,  6945,  6949,  6953,  6955,  6957,
    6960,  6963,  6964,  6968,  6973,  6977,  6978,  6986,  6988,  6991,
    6993,  6995,  6997,  6999,  7001,  7003,  7004,  7010,  7012,  7014,
    7016,  7018,  7020,  7024,  7031,  7038,  7045,  7053,  7059,  7063,
    7072,  7081,  7090,  7097,  7098,  7100,  7102,  7105,  7106,  7108,
    7110,  7114,  7115,  7119,  7120,  7124,  7125,  7129,  7130,  7134,
    7136,  7138,  7140,  7142,  7144,  7146,  7148,  7150,  7152,  7154,
    7156,  7159,  7162,  7164,  7168,  7171,  7174,  7177,  7180,  7183,
    7186,  7189,  7192,  7194,  7196,  7199,  7200,  7202,  7206,  7208,
    7211,  7214,  7217,  7219,  7223,  7227,  7229,  7231,  7235,  7237,
    7241,  7246,  7252,  7257,  7264,  7266,  7267,  7271,  7275,  7277,
    7279,  7280,  7283,  7286,  7289,  7292,  7293,  7296,  7297,  7301,
    7304,  7306,  7309,  7312,  7315,  7318,  7321,  7322,  7326,  7327,
    7329,  7330,  7334,  7337,  7338,  7340,  7343,  7344,  7346,  7351,
    7356,  7362,  7365,  7369,  7370,  7372,  7373,  7378,  7379,  7381,
    7383,  7384,  7386,  7387,  7390,  7393,  7395,  7396,  7398,  7400,
    7403,  7407,  7410,  7411,  7418,  7422,  7423,  7424,  7425,  7427,
    7430,  7432,  7434,  7436,  7438,  7440,  7442,  7444,  7446,  7448,
    7451,  7454,  7458,  7460,  7462,  7464,  7466,  7468,  7470,  7472,
    7474,  7476,  7478,  7480,  7482,  7484,  7485,  7489,  7491,  7494,
    7496,  7499,  7503,  7507,  7511,  7512,  7516,  7520,  7521,  7529,
    7530,  7534,  7536,  7540,  7541,  7545,  7546,  7550,  7555,  7557,
    7561,  7562,  7566,  7567,  7571,  7576,  7581,  7582,  7583,  7584,
    7601,  7610,  7618,  7619,  7620,  7621,  7622,  7623,  7639,  7640,
    7641,  7642,  7643,  7656,  7661,  7666,  7670,  7675,  7679,  7682,
    7684,  7688,  7694,  7696,  7698,  7699,  7701,  7703,  7704,  7707,
    7708,  7709,  7713,  7714,  7717,  7723
};

/* YYRHS -- A `-1'-separated list of the rules' RHS.  */
static const yytype_int16 yyrhs[] =
{
     641,     0,    -1,   151,    -1,    -1,   644,   642,   636,   643,
      -1,   644,   151,    -1,    -1,   151,    -1,   645,    -1,  1512,
      -1,  1016,    -1,  1082,    -1,  1084,    -1,   697,    -1,   657,
      -1,  1085,    -1,  1074,    -1,  1518,    -1,   664,    -1,   646,
      -1,  1327,    -1,  1359,    -1,  1274,    -1,  1276,    -1,   650,
      -1,  1366,    -1,   732,    -1,  1486,    -1,  1477,    -1,   655,
      -1,  1291,    -1,  1586,    -1,  1386,    -1,  1389,    -1,  1469,
      -1,  1090,    -1,  1098,    -1,   851,    -1,  1105,    -1,   648,
      -1,  1382,    -1,  1521,    -1,  1093,    -1,  1077,    -1,  1294,
      -1,  1376,    -1,   731,    -1,  1484,    -1,  1519,    -1,  1520,
      -1,  1117,    -1,  1441,    -1,   724,    -1,  1345,    -1,  1058,
      -1,  1060,    -1,  1338,    -1,  1587,    -1,  1475,    -1,  1319,
      -1,  1388,    -1,  1578,    -1,   647,   398,  1435,    -1,   116,
      -1,   139,    -1,   398,  1435,   189,   649,    -1,  1432,    -1,
     637,  1437,    -1,    -1,   165,  1435,   651,   652,    -1,    -1,
     588,   653,    -1,   653,   632,   654,    -1,   654,    -1,   637,
    1437,    -1,    -1,   208,   656,  1437,    -1,    -1,    56,   302,
     556,   658,   659,    -1,   660,    -1,   659,   632,   660,    -1,
     286,   155,  1431,    -1,   283,   155,  1431,    -1,   303,   155,
    1431,    -1,   289,   155,  1431,    -1,   290,   155,  1255,    -1,
     284,   155,  1255,    -1,   291,   155,  1255,    -1,   285,   155,
    1255,    -1,   300,   155,  1255,    -1,   294,   155,  1431,    -1,
     293,   155,  1431,    -1,   295,   155,  1431,    -1,   296,   155,
    1431,    -1,   299,   155,  1431,    -1,   301,   155,  1255,    -1,
     297,   155,  1431,    -1,   298,   155,  1431,    -1,   304,   155,
    1418,    -1,   222,   155,   630,   661,   631,    -1,   282,   155,
    1255,    -1,   663,    -1,    -1,   662,    -1,   661,   632,   662,
      -1,  1255,    -1,   287,   155,  1431,    -1,   288,   155,  1257,
      -1,   428,   155,  1431,    -1,   429,   155,  1255,    -1,    -1,
      94,   903,   539,   906,  1427,   665,   840,    -1,    -1,    -1,
      94,   994,   225,  1435,   998,   364,  1427,   666,   630,  1011,
     631,   999,   667,  1050,    -1,    -1,    -1,    94,   995,   225,
    1435,   997,   364,  1427,   668,   630,  1011,   631,  1000,   669,
    1050,    -1,    -1,    -1,    94,   996,   225,  1435,   997,   364,
    1427,   670,   630,  1011,   631,  1001,   671,  1050,    -1,    -1,
      94,   103,   906,  1435,   672,   900,    -1,    -1,    94,   673,
    1540,    -1,    94,   585,   690,  1502,    -1,    94,   273,   202,
     804,    -1,    94,   537,   801,    -1,    94,   674,    -1,   474,
    1437,   185,   106,   612,  1437,   369,   630,   675,   631,    -1,
     676,    -1,   675,   632,   676,    -1,   585,  1432,    -1,   211,
    1432,    -1,   103,  1432,    -1,   379,  1432,    -1,   388,  1432,
      -1,   490,  1432,    -1,   395,  1255,    -1,    -1,  1134,   162,
     906,   691,   678,   364,   463,   679,   684,   681,   686,   138,
     687,    -1,    -1,   163,  1138,  1227,   680,   682,   683,    -1,
      23,  1138,    -1,    -1,   147,    -1,   132,   364,   486,    -1,
     132,    -1,    -1,   512,  1138,    -1,    -1,   150,  1138,    -1,
      -1,   685,    -1,   364,    78,   399,    -1,   364,    78,   352,
     399,    -1,    -1,    74,  1432,    -1,    -1,   688,   689,    -1,
     749,    -1,   751,    -1,   747,    -1,   768,    -1,   786,    -1,
     788,    -1,   783,    -1,   753,    -1,   755,    -1,   756,    -1,
     757,    -1,   758,    -1,   760,    -1,    -1,  1435,   638,  1435,
      -1,  1435,    -1,    -1,   692,   694,    -1,    -1,   693,   695,
      -1,    74,  1432,    -1,   252,   508,    -1,   354,   508,    -1,
      88,   508,    -1,   414,   508,   106,    -1,   329,   508,   106,
      -1,   696,    -1,   694,    -1,   129,    -1,  1144,   129,    -1,
     508,   467,   122,    -1,   508,   467,   237,    -1,    -1,    49,
     691,   698,   699,    -1,    -1,   630,   700,   631,    -1,    -1,
     701,    -1,   701,   632,  1138,    -1,  1138,    -1,    -1,   703,
      -1,   703,   632,   705,    -1,   705,    -1,    -1,  1435,   704,
     954,    -1,    -1,   707,    -1,   707,   632,   708,    -1,   708,
      -1,   709,   704,  1435,   954,    -1,    -1,   238,    -1,   378,
      -1,   229,    -1,    -1,   710,   746,   636,    -1,   746,   636,
      -1,   711,   746,   636,    -1,    -1,   712,   713,   636,    -1,
      -1,   119,   743,   714,   954,   744,    -1,   119,  1435,    81,
     186,   720,    -1,    -1,   119,   717,   205,   186,   715,   718,
     746,    -1,    -1,   119,  1435,   100,   186,   716,  1117,    -1,
     167,    -1,    90,    -1,   719,    -1,   718,   632,   719,    -1,
     723,    -1,  1255,    -1,   721,    -1,   497,   722,  1433,    -1,
      -1,   593,    -1,   720,    -1,  1435,    -1,   498,    -1,  1144,
     188,    -1,   496,    -1,   483,   725,   727,    -1,  1435,    -1,
     721,    -1,    -1,   725,    -1,    -1,   476,   728,    -1,   730,
     155,   729,    -1,   728,   632,   730,   155,   729,    -1,  1417,
      -1,  1165,    -1,  1423,    -1,    63,    -1,   524,    -1,    85,
      -1,    87,    -1,    86,    -1,    54,    -1,   464,    -1,   541,
      -1,    73,    -1,   101,    -1,   320,    -1,   337,    -1,   443,
     726,   727,    -1,   198,   733,   130,   734,    -1,    -1,    98,
      -1,   735,    -1,    81,   739,   740,    -1,   736,    -1,   735,
     632,   736,    -1,   737,   155,   738,    -1,  1435,    -1,   637,
    1437,    -1,   359,    -1,   460,    -1,   729,    -1,   741,    -1,
     740,   632,   741,    -1,   737,   155,   742,    -1,    63,    -1,
     524,    -1,    85,    -1,    87,    -1,    86,    -1,    54,    -1,
     464,    -1,   541,    -1,    73,    -1,   101,    -1,   320,    -1,
     337,    -1,   448,    -1,  1435,    -1,   743,   632,  1435,    -1,
      -1,    -1,   120,   745,  1138,    -1,   749,    -1,   751,    -1,
     747,    -1,   768,    -1,   786,    -1,   788,    -1,   783,    -1,
     753,    -1,   755,    -1,   756,    -1,   757,    -1,   758,    -1,
     760,    -1,    -1,   220,   748,   763,   149,   220,    -1,    -1,
     750,   645,    -1,    -1,   450,   752,  1138,    -1,    -1,   754,
     792,    -1,   257,  1436,    -1,   246,  1436,    -1,   367,  1435,
      -1,    -1,   177,   761,  1435,   235,   759,   762,    -1,    65,
    1435,    -1,    -1,   348,   189,    -1,   189,    -1,  1435,    -1,
     762,   632,  1435,    -1,    -1,    -1,    -1,   764,  1138,   765,
     548,   711,   766,   767,    -1,    -1,   146,   763,    -1,   145,
     711,    -1,   769,    -1,   772,    -1,    -1,    -1,    52,   770,
    1138,   771,   774,   782,   149,    52,    -1,    -1,    52,   773,
     775,   782,   149,    52,    -1,   776,    -1,   774,   776,    -1,
     779,    -1,   775,   779,    -1,    -1,    -1,   605,   777,  1138,
     778,   548,   711,    -1,    -1,    -1,   605,   780,  1138,   781,
     548,   711,    -1,    -1,   145,   711,    -1,    -1,  1436,   639,
     784,   792,   785,    -1,    -1,  1436,    -1,    -1,  1436,   639,
     787,   790,   785,    -1,    -1,   789,   790,    -1,    -1,    30,
     791,   712,   710,   149,    -1,   279,   711,   149,   279,    -1,
      -1,    -1,   607,   793,  1138,   794,   138,   711,   149,   607,
      -1,    -1,    -1,   438,   711,   581,   795,  1138,   796,   149,
     438,    -1,    29,    -1,     8,    -1,   231,    -1,   582,    -1,
     125,    -1,   826,   828,    -1,   826,    56,   823,   807,    -1,
     826,     6,   823,   802,   811,    -1,    -1,   587,   273,   202,
    1435,    -1,   826,     6,   823,   814,    -1,   826,   139,   823,
     814,    -1,   827,   806,   817,    -1,   827,   806,   820,    -1,
       6,   824,    -1,     6,   825,    -1,    -1,   808,   809,    -1,
     810,    -1,   809,   810,    -1,   809,   632,   810,    -1,   829,
      -1,   830,    -1,   831,    -1,    -1,   812,    -1,   813,    -1,
     812,   813,    -1,   812,   632,   813,    -1,   829,    -1,   830,
      -1,   831,    -1,   832,    -1,   835,    -1,   837,    -1,   838,
      -1,   836,    -1,    -1,   815,    -1,   816,    -1,   815,   816,
      -1,   815,   632,   816,    -1,   829,    -1,   830,    -1,   831,
      -1,   837,    -1,   838,    -1,    -1,   818,    -1,   819,    -1,
     818,   819,    -1,   818,   632,   819,    -1,   829,    -1,   833,
      -1,   834,    -1,   835,    -1,   837,    -1,   838,    -1,   836,
      -1,    -1,   821,    -1,   822,    -1,   821,   822,    -1,   821,
     632,   822,    -1,   829,    -1,   837,    -1,   838,    -1,   105,
    1432,    -1,   571,  1432,    -1,   421,  1432,    -1,  1435,    -1,
    1435,    -1,   415,    -1,   417,    -1,   352,     4,    -1,   227,
    1311,   839,    -1,    24,  1311,   839,    -1,   309,  1311,   839,
      -1,   172,  1311,   839,    -1,   572,  1311,   839,    -1,   422,
    1311,   839,    -1,   349,  1311,  1256,    -1,    74,  1311,  1432,
      -1,  1352,   153,  1311,   914,    -1,   601,    -1,   355,    -1,
    1256,    -1,   217,    -1,   630,   841,    -1,   907,   846,   843,
      -1,   262,  1427,    -1,   630,   262,  1427,   631,    -1,   920,
     631,   907,   846,   843,    -1,    -1,   846,   896,   631,   842,
    1525,    -1,    -1,    -1,  1397,   899,   896,   844,  1522,    -1,
      -1,  1397,   899,   630,   896,   631,   845,  1525,    -1,   847,
      -1,    -1,   848,    -1,    -1,   385,   850,   849,   853,    -1,
      -1,    -1,   385,   852,   853,    -1,    46,   854,   864,   865,
     872,    -1,   856,   250,   857,   630,   858,   631,    -1,    -1,
     856,   206,   855,   862,    -1,   413,   862,    -1,   413,   861,
      -1,   267,   862,    -1,   267,   861,    -1,    -1,   264,    -1,
      -1,    11,   155,  1256,    -1,    -1,   859,    -1,   860,    -1,
     859,   632,   860,    -1,  1435,    -1,    70,   630,   858,   631,
      -1,   630,  1134,   870,  1135,   631,    -1,   630,  1134,   870,
    1135,   631,    -1,    -1,   386,  1256,    -1,    -1,    -1,   528,
      46,   856,   206,   863,   866,   871,    -1,    -1,   528,    46,
     856,   250,   857,   630,   868,   631,   867,   871,    -1,   869,
      -1,   868,   632,   869,    -1,  1435,    -1,  1141,    -1,    -1,
     527,  1256,    -1,    -1,   630,   873,   631,    -1,   874,    -1,
     873,   632,   874,    -1,    -1,   385,   875,   876,   877,   893,
     888,    -1,  1435,    -1,    -1,    -1,   592,   259,   547,   878,
     880,    -1,    -1,   592,   238,   879,   881,    -1,   313,    -1,
     883,    -1,   883,    -1,   630,   882,   631,    -1,   883,    -1,
     882,   632,   883,    -1,    -1,    -1,   630,   884,   886,   885,
     631,    -1,   887,    -1,   886,   632,   887,    -1,   313,    -1,
    1141,    -1,    -1,   630,   889,   631,    -1,   890,    -1,   889,
     632,   890,    -1,    -1,   528,   891,   892,   893,    -1,  1437,
      -1,    -1,   894,    -1,   894,   895,    -1,   895,    -1,   537,
    1311,  1437,    -1,  1352,   153,  1311,   914,    -1,   349,  1311,
    1256,    -1,   308,  1311,  1258,    -1,   326,  1311,  1258,    -1,
     106,   131,  1311,  1432,    -1,   225,   131,  1311,  1432,    -1,
      74,  1311,  1432,    -1,    -1,    -1,   468,   897,  1128,  1132,
     898,   918,    -1,    -1,    19,    -1,    -1,   901,    -1,   902,
      -1,   901,   902,    -1,   913,    -1,   912,    -1,    -1,   904,
      -1,   905,    -1,   905,   904,    -1,   542,    -1,    -1,   220,
    1144,   166,    -1,    -1,   909,    -1,   910,    -1,   910,   908,
      -1,   910,    -1,   910,   909,    -1,   910,   632,   909,    -1,
     153,  1311,   914,    -1,   308,  1311,  1257,    -1,   326,  1311,
    1257,    -1,    26,  1311,  1255,    -1,   388,  1311,  1432,    -1,
      74,  1311,  1432,    -1,    25,  1311,  1257,    -1,   380,  1311,
    1255,    -1,   380,  1311,   120,    -1,   514,  1311,  1255,    -1,
     514,  1311,   120,    -1,   515,  1311,  1255,    -1,   515,  1311,
     120,    -1,   516,  1311,  1255,    -1,   516,  1311,   120,    -1,
      60,  1311,  1255,    -1,   540,  1311,  1255,    -1,   124,  1311,
    1255,    -1,   458,  1311,   916,    -1,    -1,   576,  1311,   911,
     630,  1375,   631,    -1,   912,    -1,   913,    -1,   232,  1311,
     917,    -1,   106,   131,  1311,  1432,    -1,   225,   131,  1311,
    1432,    -1,   537,  1435,    -1,   521,   134,    -1,   521,   318,
      -1,    82,  1311,  1432,    -1,   249,  1311,  1255,    -1,   966,
     957,  1311,   959,    -1,   966,    68,  1311,   965,    -1,  1437,
      -1,  1437,    -1,   120,    -1,   180,    -1,   143,    -1,    79,
      -1,   423,    -1,    77,    -1,   354,    -1,   179,    -1,   253,
      -1,  1250,    -1,  1127,  1131,    -1,   523,    -1,   418,    -1,
     118,    -1,   236,    -1,   921,    -1,   922,    -1,   921,   632,
     922,    -1,   923,    -1,   924,    -1,   929,   925,    -1,   929,
     983,    -1,   989,  1013,   998,   630,  1011,   631,   999,    -1,
     995,   992,  1013,   997,   630,  1011,   631,  1000,    -1,   996,
     992,  1013,   997,   630,  1011,   631,  1001,    -1,   927,   990,
    1013,   998,   630,  1011,   631,   999,    -1,   927,   185,   250,
    1013,   630,  1011,   631,   983,    -1,   927,   926,    -1,    -1,
     926,    -1,    61,   630,  1138,   631,    -1,    -1,   928,    -1,
      84,  1013,    -1,    -1,  1426,   930,   931,   951,    -1,   939,
     949,   945,    -1,   940,   950,   945,    -1,   182,   941,   945,
      -1,    38,    -1,    38,   948,    -1,    43,    -1,    42,    -1,
     935,   948,   969,    -1,   935,   969,    -1,   936,   948,   970,
      -1,   936,   970,    -1,    33,   948,    -1,    33,    -1,   937,
     948,   969,    -1,   938,   948,   970,    -1,   594,   948,    -1,
     619,   949,   945,    -1,   110,    -1,   552,   943,    -1,   549,
     943,    -1,   107,   943,    -1,   553,    -1,    40,   949,    -1,
     934,    -1,   314,    -1,   275,    -1,   278,   594,    -1,   278,
     937,   969,    -1,   555,   969,    -1,   546,   949,   969,    -1,
     316,   969,    -1,   276,   969,    -1,   118,   941,   945,    -1,
     360,   941,   945,    -1,   180,   941,   945,    -1,    -1,   154,
     932,   630,  1015,   631,   969,    -1,    -1,   476,   933,   630,
    1015,   631,   969,    -1,   278,   969,    -1,   472,    -1,   196,
      -1,   195,    -1,   393,    -1,   334,    -1,   266,    -1,   333,
      -1,   394,    -1,   335,    -1,    59,    -1,   343,    -1,   340,
      59,    -1,   935,   598,    -1,   595,    -1,   340,   595,    -1,
     361,    -1,   343,   595,    -1,   340,    59,   598,    -1,   343,
     598,    -1,   236,    -1,   554,    -1,   488,    -1,   315,    -1,
      32,    -1,   418,    -1,   137,    -1,   137,   397,    -1,    -1,
     948,    -1,   942,    -1,   630,   358,   632,   358,   631,    -1,
      -1,   630,   358,   631,    -1,    -1,   630,   631,    -1,   630,
     358,   631,    -1,    -1,   946,    -1,   946,   947,    -1,   947,
      -1,   484,    -1,   580,    -1,   620,    -1,   630,   277,   631,
      -1,   630,   567,   631,    -1,   630,   117,   631,    -1,   630,
     358,   631,    -1,    -1,   948,    -1,    -1,   942,    -1,    -1,
     952,    -1,   952,   953,    -1,   953,    -1,   357,    -1,  1144,
     357,    -1,   120,   956,    -1,   364,   582,   955,    -1,    25,
      -1,   472,   120,   593,    -1,   982,   250,    -1,   577,    -1,
     577,   250,    -1,    74,  1432,    -1,    68,   963,    -1,    72,
     120,    -1,    72,   180,    -1,    72,   143,    -1,   521,   120,
      -1,   521,   134,    -1,   521,   318,    -1,   931,   964,    -1,
     353,   944,    -1,   955,    -1,  1416,    -1,    59,   476,    -1,
      58,    -1,  1437,    -1,    33,    -1,   958,    -1,   120,    -1,
      -1,   957,   959,    -1,  1437,    -1,    33,    -1,   961,    -1,
     120,    -1,  1437,    -1,    -1,    68,   965,    -1,   963,    -1,
     120,    -1,    -1,   120,    -1,    21,    -1,    33,    21,    -1,
      21,    33,    -1,   574,    -1,   574,    33,    -1,    33,   574,
      -1,    -1,   967,    -1,   968,    -1,    47,    -1,   957,   958,
     970,    -1,    33,    -1,    33,   957,   958,    -1,    -1,    33,
      -1,    -1,   630,  1256,   972,   631,    -1,    20,    -1,   126,
      -1,   451,    -1,    -1,   973,    -1,   973,   974,    -1,   974,
      -1,  1256,    -1,   976,   975,    -1,   977,    -1,   978,   632,
     977,    -1,   976,   623,   976,    -1,   978,    -1,   979,    -1,
      -1,   260,   980,    -1,    -1,   401,    -1,   424,  1427,   984,
     986,   987,    -1,    -1,   630,   985,   631,    -1,   985,   632,
    1435,    -1,  1435,    -1,    -1,   305,   190,    -1,   305,   384,
      -1,   305,   485,    -1,    -1,   364,   582,   988,    -1,   364,
     125,   988,    -1,   364,   582,   988,   364,   125,   988,    -1,
     364,   125,   988,   364,   582,   988,    -1,   446,    -1,    50,
      -1,   476,   357,    -1,   354,     5,    -1,   476,   120,    -1,
     991,    -1,   401,   250,    -1,   577,   992,    -1,   250,    -1,
     225,    -1,    -1,   991,    -1,   248,    -1,   225,    -1,   224,
      -1,    -1,   577,    -1,   191,    -1,   494,    -1,    -1,   997,
      -1,   997,  1005,    -1,    -1,  1002,    -1,    -1,  1004,    -1,
      -1,  1003,    -1,  1007,    -1,  1002,  1007,    -1,  1008,    -1,
    1003,  1008,    -1,  1009,    -1,  1004,  1009,    -1,   588,  1010,
      -1,   565,  1010,    -1,   249,  1311,  1255,    -1,    74,  1432,
      -1,  1006,    -1,  1005,    -1,  1006,    -1,  1006,    -1,   608,
     383,  1430,    -1,    45,    -1,   461,    -1,   206,    -1,  1011,
     632,  1012,  1248,    -1,  1012,  1248,    -1,  1435,    -1,  1435,
     630,   358,   631,    -1,    -1,  1426,    -1,    -1,   638,  1435,
      -1,  1414,    -1,  1015,   632,  1414,    -1,    -1,    13,  1054,
     539,  1427,  1017,  1029,    -1,    -1,    13,   103,  1028,  1018,
     901,    -1,    13,   103,  1435,   583,   106,   131,   339,    -1,
      -1,    13,   403,   691,  1019,   692,    -1,    -1,    13,   192,
     691,  1020,   692,    -1,    -1,    13,  1548,  1543,  1021,  1550,
      -1,    -1,    13,  1543,  1022,  1550,    -1,    -1,    13,  1543,
     162,   691,  1023,  1025,  1026,   681,   686,  1027,    -1,    13,
     537,   803,    -1,    13,   273,   202,   805,    -1,    13,   537,
     800,    -1,    13,   537,   799,    -1,    13,   474,  1437,   369,
     630,   675,   631,    -1,    13,   585,   690,  1024,    -1,  1438,
     388,   169,    -1,  1024,   632,  1438,   388,   169,    -1,    -1,
     364,   463,   679,    -1,   685,    -1,   364,   463,   679,   685,
      -1,    -1,   434,   556,   691,    -1,    -1,   138,   687,    -1,
      -1,  1435,    -1,    -1,   133,   537,    -1,   223,   537,    -1,
    1044,   847,    -1,  1044,  1033,    -1,  1033,    -1,   848,    -1,
    1035,    -1,   139,   385,  1042,    -1,   419,   385,  1092,  1034,
      -1,    -1,   368,   385,  1092,  1034,  1030,  1092,    -1,    15,
     385,  1092,  1034,    -1,    -1,    61,   385,  1034,  1031,  1087,
      -1,    -1,   436,   385,  1092,  1034,  1032,  1079,    -1,    66,
     385,  1092,  1256,    -1,   563,   385,  1034,    -1,  1038,    -1,
     164,   385,  1043,   608,   539,  1427,   850,    -1,   433,   387,
     850,    -1,    12,    -1,  1042,    -1,    -1,     6,   385,  1092,
    1036,  1037,    -1,    -1,   630,   873,   631,    -1,   386,  1256,
      -1,    -1,   435,   385,  1092,  1039,  1040,    -1,    -1,    -1,
    1042,  1041,   235,   630,   873,   631,    -1,  1043,    -1,  1042,
     632,  1043,    -1,  1435,    -1,  1046,    -1,  1044,   632,  1046,
      -1,     6,  1053,    -1,  1045,   923,  1056,    -1,     6,   924,
      -1,  1045,   630,   920,   631,    -1,    -1,    56,  1053,  1426,
    1047,   929,  1056,    -1,    -1,    -1,   330,  1053,  1426,  1048,
     931,   951,  1049,  1056,    -1,   139,  1053,  1426,  1055,    -1,
     139,   185,   250,  1426,    -1,   139,   401,   250,    -1,   139,
     991,  1426,    -1,   132,   248,    -1,   147,   248,    -1,    13,
    1053,  1426,   476,   120,  1416,    -1,    13,  1053,  1426,   139,
     120,    -1,   434,  1057,  1427,    -1,    91,   556,   957,   959,
     964,    -1,   908,    -1,   184,    -1,  1241,    -1,  1051,    -1,
    1052,    -1,    -1,  1052,    -1,  1051,    -1,  1052,  1051,    -1,
    1051,  1052,    -1,    11,  1311,   120,    -1,    11,  1311,  1435,
      -1,   272,  1311,   120,    -1,   272,  1311,  1435,    -1,    -1,
      71,    -1,    -1,   221,    -1,    -1,   446,    -1,    50,    -1,
      -1,     8,  1435,    -1,   179,    -1,    -1,   556,    -1,   155,
      -1,    19,    -1,    -1,   513,   486,  1069,  1059,  1072,  1064,
      -1,   520,   486,  1069,    -1,   513,   558,  1061,    -1,    -1,
    1062,    -1,  1063,    -1,  1062,   632,  1063,    -1,   608,    83,
     489,    -1,   416,   366,    -1,   416,   613,    -1,  1065,  1066,
    1067,  1068,    -1,    -1,   585,   155,  1432,    -1,    -1,   388,
     155,  1432,    -1,    -1,   121,   155,  1432,    -1,    -1,   390,
     155,  1432,    -1,    -1,  1070,    -1,  1071,    -1,  1070,   632,
    1071,    -1,   509,    -1,   430,    -1,    -1,   581,  1073,    -1,
     663,    -1,  1073,   632,   663,    -1,   501,   155,  1432,    -1,
     499,   155,  1432,    -1,   500,    -1,    -1,    60,  1471,  1075,
    1281,  1076,    -1,    -1,   412,    -1,   171,    -1,    -1,   436,
    1092,  1471,  1078,  1281,  1079,    -1,    -1,  1080,    -1,  1081,
      -1,  1081,  1080,    -1,   412,    -1,   171,    -1,   586,    -1,
      -1,    15,  1092,  1471,  1083,  1281,    -1,    34,  1432,    -1,
      -1,    61,  1471,  1086,  1281,  1087,    -1,    -1,  1088,    -1,
    1089,    -1,  1089,  1088,    -1,   412,    -1,   175,    -1,   317,
      -1,   171,    -1,    57,    -1,   186,   583,    -1,    -1,   368,
    1092,  1471,  1091,  1281,    -1,    -1,   356,    -1,   269,    -1,
      -1,   434,  1471,  1094,  1096,    -1,   434,   585,   690,  1095,
      -1,  1438,   556,  1438,    -1,  1095,   632,  1438,   556,  1438,
      -1,  1097,    -1,  1096,   632,  1097,    -1,  1427,   556,  1427,
      -1,    -1,    48,   225,  1099,  1100,   238,  1104,    -1,  1101,
      -1,  1103,    -1,  1102,    -1,  1101,   632,  1102,    -1,  1427,
    1113,    -1,  1427,  1111,  1113,    -1,  1435,    -1,   120,    -1,
      -1,   268,   225,   235,    48,  1106,  1107,    -1,  1110,    -1,
    1108,    -1,  1109,    -1,  1108,   632,  1109,    -1,  1427,  1113,
    1116,    -1,  1427,  1111,  1113,  1116,    -1,    -1,   385,   850,
    1112,   630,  1034,   631,    -1,    -1,  1114,  1115,    -1,    -1,
     991,   630,  1223,   631,    -1,    -1,   221,   256,    -1,  1118,
      -1,   468,  1121,    -1,   630,  1119,   631,  1525,    -1,   468,
    1123,    -1,   630,  1119,   631,    -1,   468,  1202,    -1,   630,
    1120,   631,    -1,    -1,  1123,  1122,  1522,    -1,    -1,    -1,
    1124,  1128,  1132,  1125,  1126,  1131,    -1,  1244,  1250,    -1,
    1269,    -1,  1127,    -1,  1269,  1127,    -1,  1127,  1269,    -1,
     189,  1182,  1233,  1238,  1235,  1244,  1250,  1261,    -1,   189,
     140,  1233,  1250,    -1,    -1,  1129,    -1,  1129,  1130,    -1,
    1130,    -1,  1539,    -1,   506,    -1,   504,    -1,    -1,   186,
     582,    -1,   272,   238,   478,   328,    -1,  1132,   632,  1133,
      -1,  1133,    -1,   625,    -1,  1134,  1421,  1135,    -1,  1134,
    1138,  1135,  1136,    -1,    -1,    -1,    -1,    19,  1435,    -1,
      19,  1432,    -1,  1435,    -1,  1432,    -1,    -1,   630,   631,
      -1,  1138,  1142,  1138,    -1,  1138,   617,  1138,    -1,  1138,
    1143,  1138,    -1,   352,  1138,    -1,  1139,   243,   562,    -1,
    1139,   243,  1144,   562,    -1,  1139,   243,   174,    -1,  1139,
     243,  1144,   174,    -1,  1139,   243,   578,    -1,  1139,   243,
    1144,   578,    -1,  1139,    -1,  1139,   243,   357,    -1,  1139,
     243,  1144,   357,    -1,  1139,   156,  1140,    -1,  1139,  1146,
    1140,    -1,  1139,  1146,  1147,   630,  1534,   631,    -1,  1140,
      -1,  1141,   238,   630,  1534,   631,    -1,  1141,  1144,   238,
     630,  1534,   631,    -1,  1141,   238,   630,  1138,   631,    -1,
    1141,   238,   630,  1138,   632,  1175,   631,    -1,  1141,  1144,
     238,   630,  1138,   631,    -1,  1141,  1144,   238,   630,  1138,
     632,  1175,   631,    -1,  1141,    31,  1141,    17,  1140,    -1,
    1141,  1144,    31,  1141,    17,  1140,    -1,  1141,   492,   262,
    1141,    -1,  1141,   262,  1148,  1237,    -1,  1141,  1144,   262,
    1148,  1237,    -1,  1141,   425,  1141,    -1,  1141,  1144,   425,
    1141,    -1,  1141,    -1,  1141,   621,  1141,    -1,  1141,   622,
    1141,    -1,  1141,   479,  1141,    -1,  1141,   480,  1141,    -1,
    1141,   624,  1141,    -1,  1141,   623,  1141,    -1,  1141,   624,
     234,  1138,  1227,    -1,  1141,   623,   234,  1138,  1227,    -1,
    1141,   625,  1141,    -1,  1141,   626,  1141,    -1,  1141,   627,
    1141,    -1,  1141,   136,  1141,    -1,  1141,   331,  1141,    -1,
    1141,   628,  1141,    -1,  1148,    -1,   375,    -1,   372,    -1,
      17,    -1,    16,    -1,   352,    -1,   351,    -1,   633,    -1,
     351,    -1,   155,    -1,   193,    -1,   204,    -1,   254,    -1,
     281,    -1,   345,    -1,    12,    -1,    18,    -1,  1423,    -1,
    1149,    -1,  1150,    -1,  1153,    -1,  1151,    -1,  1148,    68,
    1437,    -1,  1417,    -1,  1415,    -1,  1165,    -1,  1161,    -1,
    1148,   374,  1148,    -1,   624,  1148,    -1,   623,  1148,    -1,
     629,  1148,    -1,  1145,  1148,    -1,   630,  1534,   631,    -1,
     630,  1138,   631,    -1,   630,  1138,   632,  1175,   631,    -1,
     459,   630,  1138,   632,  1175,   631,    -1,   166,   630,  1534,
     631,    -1,   634,  1435,  1138,   635,    -1,   305,  1176,     9,
     630,  1141,  1155,   631,    -1,    33,  1148,    -1,    53,   630,
    1138,    19,  1173,   631,    -1,    52,  1178,  1180,  1179,   149,
      -1,    91,   630,  1138,   632,  1173,   631,    -1,    91,   630,
    1138,   588,   958,   631,    -1,   120,   630,  1423,   631,    -1,
     592,   630,  1424,   631,    -1,   234,  1138,  1227,   624,  1138,
      -1,    59,   630,  1175,   631,    -1,    59,   630,  1175,   588,
     958,   631,    -1,    99,  1137,    -1,   110,   630,  1138,   631,
      -1,   115,   630,  1138,   631,    -1,   216,   630,  1138,   631,
      -1,   231,   630,  1138,   632,  1138,   632,  1138,   632,  1138,
     631,    -1,   234,   630,  1138,   632,  1138,   631,    -1,   234,
     630,  1138,   632,  1138,   632,  1175,   631,    -1,   258,   630,
    1138,   632,  1138,   631,    -1,   325,   630,  1138,   631,    -1,
     332,   630,  1138,   631,    -1,   453,   630,  1138,   632,  1138,
     631,    -1,   466,   630,  1138,   631,    -1,   552,   630,  1138,
     631,    -1,   549,   630,  1138,   631,    -1,   549,   630,  1138,
     632,  1138,   631,    -1,   561,   630,  1138,   631,    -1,   561,
     630,   255,  1138,   189,  1138,   631,    -1,   561,   630,   557,
    1138,   189,  1138,   631,    -1,   561,   630,    44,  1138,   189,
    1138,   631,    -1,   561,   630,   255,   189,  1138,   631,    -1,
     561,   630,   557,   189,  1138,   631,    -1,   561,   630,    44,
     189,  1138,   631,    -1,   561,   630,  1138,   189,  1138,   631,
      -1,   585,   630,   631,    -1,   619,   630,  1138,   631,    -1,
       7,   630,  1138,   632,  1138,   631,    -1,     7,   630,  1138,
     632,   234,  1138,  1227,   631,    -1,    97,  1137,    -1,   102,
     944,    -1,   108,   630,  1138,   632,   234,  1138,  1227,   631,
      -1,   109,   630,  1138,   632,   234,  1138,  1227,   631,    -1,
     173,   630,  1227,   189,  1138,   631,    -1,   197,   630,  1229,
     632,  1138,   631,    -1,   955,    -1,   396,   630,  1141,   238,
    1138,   631,    -1,   525,   630,  1138,   632,  1138,   631,    -1,
     525,   630,  1138,   632,   234,  1138,  1227,   631,    -1,   529,
     630,  1138,   632,  1138,   632,  1138,   631,    -1,   529,   630,
    1138,   632,  1138,   631,    -1,   529,   630,  1138,   189,  1138,
     186,  1138,   631,    -1,   529,   630,  1138,   189,  1138,   631,
      -1,   535,   944,    -1,   550,   630,  1228,   632,  1138,   632,
    1138,   631,    -1,   551,   630,  1228,   632,  1138,   632,  1138,
     631,    -1,   589,  1137,    -1,   591,   944,    -1,   590,   944,
      -1,    21,   630,  1138,   631,    -1,    58,   630,  1138,   631,
      -1,    66,   630,  1175,   631,    -1,    69,   630,  1138,   631,
      -1,   103,   630,   631,    -1,   220,   630,  1138,   632,  1138,
     632,  1138,   631,    -1,   187,   630,  1138,   632,  1138,   631,
      -1,   187,   630,  1138,   632,  1138,   632,  1138,   631,    -1,
     321,   630,  1138,   631,    -1,   331,   630,  1138,   632,  1138,
     631,    -1,   363,   630,  1138,   631,    -1,   388,   630,  1138,
     631,    -1,   410,   630,  1138,   631,    -1,   438,   630,  1138,
     632,  1138,   631,    -1,   439,   630,  1138,   632,  1138,   632,
    1138,   631,    -1,   451,   630,  1138,   631,    -1,   460,   630,
     631,    -1,   563,   630,  1138,   632,  1138,   631,    -1,   603,
     630,  1138,   631,    -1,   603,   630,  1138,   632,  1138,   631,
      -1,   604,   630,  1138,   981,   631,    -1,   604,   630,  1138,
      19,    59,   971,   981,   631,    -1,   604,   630,  1138,    19,
      33,   971,   631,    -1,   604,   630,  1138,   632,  1255,   632,
    1255,   632,  1255,   631,    -1,  1152,    -1,    88,   630,  1138,
     632,  1138,   631,    -1,   195,   630,  1175,   631,    -1,   266,
     630,  1175,   631,    -1,   333,   630,  1175,   631,    -1,   334,
     630,  1175,   631,    -1,   335,   630,  1175,   631,    -1,   393,
     630,  1138,   632,  1138,   631,    -1,   394,   630,  1175,   631,
      -1,    -1,  1430,   630,  1154,  1158,   631,    -1,  1435,   638,
    1435,   630,  1174,   631,    -1,  1156,  1157,    -1,   238,    42,
     328,    -1,    -1,   238,   341,   252,   328,    -1,    -1,   608,
     411,   168,    -1,    -1,  1159,    -1,  1160,    -1,  1159,   632,
    1160,    -1,  1134,  1138,  1135,  1136,    -1,    27,   630,  1171,
     631,    -1,    27,   630,   135,  1171,   631,    -1,    36,   630,
    1171,   631,    -1,    37,   630,  1171,   631,    -1,    39,   630,
    1171,   631,    -1,    92,   630,  1232,   625,   631,    -1,    92,
     630,  1171,   631,    -1,    -1,    -1,    92,   630,   135,  1162,
    1175,  1163,   631,    -1,   327,   630,  1171,   631,    -1,   327,
     630,   135,  1171,   631,    -1,   310,   630,  1171,   631,    -1,
     310,   630,   135,  1171,   631,    -1,   519,   630,  1171,   631,
      -1,   597,   630,  1171,   631,    -1,   518,   630,  1171,   631,
      -1,   599,   630,  1171,   631,    -1,   530,   630,  1171,   631,
      -1,   530,   630,   135,  1171,   631,    -1,    -1,   203,   630,
    1168,  1164,  1175,  1170,  1169,   631,    -1,    -1,   637,  1166,
    1167,    -1,  1437,   477,  1138,    -1,  1437,    -1,   637,  1457,
    1437,  1014,    -1,    -1,   135,    -1,    -1,   470,  1414,    -1,
      -1,  1245,    -1,    -1,  1232,  1172,  1138,    -1,    33,   949,
      -1,    59,   949,   969,    -1,   343,   949,    -1,   484,    -1,
     484,   236,    -1,   580,    -1,   580,   236,    -1,   110,    -1,
     552,   943,    -1,   107,   943,    -1,   118,   941,    -1,    -1,
    1175,    -1,  1138,    -1,  1175,   632,  1138,    -1,  1177,    -1,
     630,  1177,   631,    -1,  1423,    -1,  1177,   632,  1423,    -1,
      -1,  1138,    -1,    -1,   145,  1138,    -1,   605,  1138,   548,
    1138,    -1,  1180,   605,  1138,   548,  1138,    -1,  1196,    -1,
    1185,    -1,  1184,    -1,  1181,    -1,   634,  1435,  1181,   635,
      -1,  1183,    -1,  1184,   632,  1183,    -1,  1181,  1193,  1181,
      -1,  1181,   522,  1196,    -1,    -1,  1181,  1193,  1181,   364,
    1186,  1138,    -1,    -1,  1181,   522,  1196,   364,  1187,  1138,
      -1,    -1,  1181,  1193,  1181,   588,  1188,   630,  1226,   631,
      -1,  1181,   341,   247,  1196,    -1,    -1,  1181,   258,  1212,
     247,  1181,   364,  1189,  1138,    -1,    -1,  1181,   258,  1212,
     247,  1196,  1190,   588,   630,  1226,   631,    -1,  1181,   341,
     258,  1212,   247,  1196,    -1,    -1,  1181,   453,  1212,   247,
    1181,   364,  1191,  1138,    -1,    -1,  1181,   453,  1212,   247,
    1196,  1192,   588,   630,  1226,   631,    -1,  1181,   341,   453,
    1212,   247,  1196,    -1,   247,    -1,   228,   247,    -1,    95,
     247,    -1,    -1,  1195,    -1,   385,   630,  1226,   631,   850,
      -1,    -1,  1197,  1427,  1194,  1231,  1221,    -1,  1211,  1210,
    1207,    -1,   630,  1210,  1198,   631,  1231,    -1,  1205,  1526,
      -1,    -1,    -1,  1198,   576,  1530,  1199,  1531,  1200,  1526,
      -1,  1202,    -1,    -1,    -1,  1203,  1537,  1132,  1204,   918,
    1131,    -1,    -1,  1210,  1206,  1184,    -1,    -1,    -1,  1208,
    1128,  1132,  1209,   918,    -1,    -1,   468,    -1,    -1,   376,
      -1,    -1,   186,   247,    -1,   186,   373,    46,    -1,   186,
     202,    46,    -1,   184,    -1,   221,    -1,    -1,  1214,   991,
    1213,  1216,   630,  1225,   631,    -1,    -1,   587,   991,  1213,
    1217,   630,  1223,   631,    -1,  1215,    -1,  1218,  1215,    -1,
      -1,    -1,  1220,  1218,    -1,    -1,  1222,  1219,    -1,    -1,
    1225,    -1,  1435,    -1,   401,    -1,  1224,    -1,  1225,   632,
    1224,    -1,  1435,    -1,  1226,   632,  1435,    -1,  1228,    -1,
     111,    -1,   112,    -1,   113,    -1,   114,    -1,   213,    -1,
     214,    -1,   215,    -1,   323,    -1,   324,    -1,   465,    -1,
     618,    -1,   115,    -1,   603,    -1,   216,    -1,   325,    -1,
     332,    -1,   410,    -1,   466,    -1,   321,    -1,   619,    -1,
     110,    -1,   552,    -1,   549,    -1,   107,    -1,    -1,    19,
      -1,   155,    -1,    -1,  1230,  1435,    -1,    -1,    12,    -1,
      -1,    -1,   606,  1234,  1138,    -1,    -1,    -1,   207,  1236,
    1138,    -1,   160,  1148,    -1,    -1,    -1,   202,    46,  1239,
    1240,    -1,  1239,   632,  1422,  1248,    -1,  1422,  1248,    -1,
      -1,   609,    -1,   610,    -1,   373,    46,  1242,    -1,  1242,
     632,  1243,    -1,  1243,    -1,  1424,  1248,    -1,    -1,  1245,
      -1,    -1,   373,    46,  1246,  1247,    -1,  1247,   632,  1422,
    1248,    -1,  1422,  1248,    -1,    -1,    20,    -1,   126,    -1,
      -1,  1251,    -1,    -1,  1251,    -1,   263,  1252,    -1,  1253,
      -1,  1253,   632,  1253,    -1,  1253,   362,  1253,    -1,  1435,
      -1,  1415,    -1,   567,    -1,   277,    -1,   358,    -1,    -1,
     263,  1253,    -1,   358,    -1,   209,    -1,   277,    -1,   567,
      -1,   117,    -1,   181,    -1,   358,    -1,   209,    -1,   277,
      -1,   567,    -1,  1259,    -1,   358,    -1,   567,    -1,   277,
      -1,   117,    -1,   181,    -1,   358,    -1,   567,    -1,   277,
      -1,  1259,    -1,  1260,    -1,   117,    -1,   181,    -1,    -1,
      -1,   403,    14,  1262,   630,  1263,   631,    -1,    -1,  1264,
      -1,  1264,   632,  1264,    -1,   358,    -1,    -1,  1266,  1267,
      -1,  1267,   632,  1268,    -1,  1268,    -1,   637,  1437,    -1,
    1437,    -1,    -1,   235,  1270,  1271,    -1,    -1,    -1,   377,
    1434,  1272,   960,  1273,  1398,  1401,    -1,   141,  1434,    -1,
    1265,    -1,    -1,   138,  1275,  1175,    -1,    -1,   139,  1287,
    1471,  1286,  1277,  1281,  1055,    -1,    -1,    -1,   139,   225,
    1435,   364,  1427,  1278,  1279,  1050,    -1,   139,   103,  1286,
    1435,    -1,   139,   192,  1286,  1435,   638,  1435,    -1,   139,
     192,  1286,  1435,    -1,   139,   403,  1286,   691,    -1,   139,
     585,   690,  1501,    -1,    -1,   139,   600,  1286,  1280,  1281,
    1055,    -1,   139,   162,  1286,   691,    -1,   139,   560,  1286,
     691,    -1,   139,   537,   826,  1288,    -1,   139,   273,   202,
     827,  1288,    -1,   139,   474,  1286,  1437,    -1,  1282,    -1,
    1281,   632,  1282,    -1,  1427,    -1,  1427,  1194,    -1,  1285,
      -1,  1284,   632,  1285,    -1,  1428,    -1,    -1,   220,   166,
      -1,    -1,   542,    -1,    -1,  1289,    -1,  1290,    -1,  1289,
    1290,    -1,  1288,   632,  1290,    -1,   837,    -1,   838,    -1,
      -1,    -1,   231,  1292,  1297,  1054,  1299,  1293,  1301,  1317,
      -1,    -1,    -1,   439,  1295,  1298,  1299,  1296,  1301,    -1,
      -1,   280,    -1,   123,    -1,   210,    -1,  1326,    -1,   123,
      -1,   235,  1300,    -1,  1300,    -1,  1283,    -1,  1304,    -1,
     630,   631,  1304,    -1,   630,  1303,   631,  1304,    -1,    -1,
     476,  1302,  1308,    -1,  1303,   632,  1420,    -1,  1420,    -1,
     592,  1307,    -1,   593,  1307,    -1,    -1,   896,  1305,  1522,
      -1,    -1,   630,   896,   631,  1306,  1525,    -1,  1307,   632,
    1312,    -1,  1312,    -1,  1308,   632,  1309,    -1,  1309,    -1,
    1424,  1310,  1316,    -1,   155,    -1,   477,    -1,    -1,  1310,
      -1,    -1,   630,  1313,  1314,   631,    -1,    -1,  1315,    -1,
    1315,   632,  1316,    -1,  1316,    -1,  1138,    -1,   120,    -1,
      -1,    -1,   364,   142,  1318,   250,   582,  1324,    -1,    -1,
      -1,   582,  1320,  1326,  1054,  1182,   476,  1322,  1321,  1233,
    1244,  1254,    -1,  1322,   632,  1323,    -1,  1323,    -1,  1424,
    1310,  1316,    -1,  1324,   632,  1325,    -1,  1325,    -1,  1424,
    1310,  1316,    -1,    -1,   280,    -1,    -1,   125,  1328,  1336,
    1329,    -1,    -1,   189,  1427,  1194,  1330,  1233,  1244,  1254,
      -1,    -1,  1333,  1331,   189,  1182,  1233,    -1,    -1,   189,
    1284,  1332,   588,  1182,  1233,    -1,  1334,    -1,  1333,   632,
    1334,    -1,  1435,  1335,    -1,  1435,   638,  1435,  1335,    -1,
      -1,   638,   625,    -1,    -1,  1337,  1336,    -1,   412,    -1,
     280,    -1,   221,    -1,    -1,   563,  1340,  1339,  1282,    -1,
      -1,   539,    -1,    -1,  1342,    -1,  1343,    -1,  1342,   632,
    1343,    -1,    93,    -1,   318,    -1,    41,   241,    -1,    89,
     534,    -1,   381,   176,    -1,   242,    -1,   533,    -1,   493,
      -1,    12,    -1,    -1,   186,   411,   358,    -1,    -1,   481,
    1346,  1347,    -1,   104,  1358,    -1,  1354,   536,  1353,  1358,
      -1,  1354,   559,  1353,  1358,    -1,   161,  1353,  1358,    -1,
     539,   517,  1353,  1358,    -1,   367,   536,  1353,  1358,    -1,
     392,    -1,   153,   915,  1350,    -1,   153,    12,  1350,    -1,
    1354,    70,  1355,  1427,  1353,  1358,    -1,  1351,   274,    -1,
     486,   212,    -1,    -1,    34,   161,  1356,  1357,  1348,  1249,
      -1,    -1,   427,   161,  1356,  1357,  1349,  1249,    -1,   993,
    1355,  1427,  1353,  1233,    -1,  1352,   152,    -1,   402,    -1,
      92,   630,   625,   631,   602,    -1,    92,   630,   625,   631,
     158,    -1,   602,  1249,    -1,   158,  1249,    -1,   407,    -1,
     406,  1341,  1344,  1249,    -1,  1456,   517,  1358,    -1,  1354,
     405,    -1,  1456,   596,  1358,    -1,   957,  1358,    -1,    69,
    1358,    -1,   201,    -1,   201,   186,  1438,    -1,    94,   103,
     906,  1435,    -1,    94,   539,  1427,    -1,    94,   600,  1427,
      -1,   302,   517,    -1,   486,   517,    -1,    94,   403,   691,
      -1,    94,   192,   691,    -1,    94,   560,   691,    -1,   403,
     517,  1358,    -1,   192,   517,  1358,    -1,   403,    67,   691,
      -1,   192,    67,   691,    -1,    94,   162,   691,    -1,   517,
      -1,   336,    -1,   274,    -1,   302,    -1,    33,    -1,    -1,
     521,    -1,    -1,  1355,  1435,    -1,    -1,   190,    -1,   189,
      -1,   238,    -1,    -1,   238,  1432,    -1,    -1,   189,  1257,
      -1,    -1,   262,  1432,    -1,   606,  1138,    -1,    -1,  1363,
    1427,  1360,  1365,    -1,    -1,  1363,  1364,  1361,  1362,    -1,
    1117,    -1,  1291,    -1,  1294,    -1,  1319,    -1,  1327,    -1,
     126,    -1,   127,    -1,    -1,   171,    -1,   386,    -1,   187,
     155,  1437,    -1,    -1,  1414,    -1,  1435,    -1,    -1,   183,
    1092,  1367,  1368,    -1,    -1,    -1,  1471,  1369,  1375,  1370,
    1371,    -1,  1373,    -1,    -1,   608,   416,   272,    -1,    -1,
     186,  1372,   170,    -1,  1373,   632,  1374,    -1,  1374,    -1,
     157,   274,    -1,   153,   274,    -1,   194,   274,    -1,   487,
     274,    -1,    33,   274,    -1,   426,   274,    -1,   411,    48,
      -1,   212,    -1,   402,    -1,   274,    -1,   517,    -1,   128,
      -1,   444,    -1,    -1,  1281,    -1,    -1,   442,  1377,  1378,
      -1,  1378,   632,  1379,    -1,  1379,    -1,    -1,   486,  1380,
    1381,    -1,   302,    -1,   411,    48,    -1,    -1,    12,    -1,
      -1,   409,  1383,  1384,    -1,  1351,   274,  1385,    -1,   556,
    1432,    -1,    29,  1138,    -1,   251,  1387,  1138,    -1,    -1,
      82,    -1,   411,    -1,   587,  1435,    -1,    -1,    -1,    -1,
      -1,   268,  1394,  1390,  1396,  1395,   226,  1434,  1391,  1397,
     235,   539,  1427,  1194,  1392,   960,  1393,  1404,  1398,  1401,
    1405,  1407,  1410,    -1,   106,    -1,   616,    -1,    -1,   269,
      -1,    -1,    80,    -1,   280,    -1,    -1,   439,    -1,   221,
      -1,    -1,    70,  1399,    -1,  1399,  1400,    -1,  1400,    -1,
     544,    46,  1414,    -1,   371,   148,    46,  1414,    -1,   148,
      46,  1414,    -1,   159,    46,  1414,    -1,    -1,   265,  1402,
      -1,  1402,  1403,    -1,  1403,    -1,   544,    46,  1414,    -1,
     511,    46,  1414,    -1,    -1,   457,   218,    46,  1414,    -1,
      -1,   221,   358,  1406,    -1,   265,    -1,   457,    -1,    -1,
     630,  1408,   631,    -1,   630,   631,    -1,  1408,   632,  1409,
      -1,  1409,    -1,  1424,    -1,   637,  1437,    -1,    -1,   476,
    1411,    -1,  1411,   632,  1412,    -1,  1412,    -1,  1424,  1310,
    1134,  1316,  1135,    -1,   545,    -1,   342,    -1,   570,   545,
      -1,  1413,  1433,    -1,  1433,    -1,   209,    -1,    35,    -1,
     382,    -1,  1417,    -1,   624,  1418,    -1,   623,  1418,    -1,
    1413,    -1,  1418,    -1,  1419,    -1,   357,    -1,   174,    -1,
     562,    -1,   209,    -1,    35,    -1,   570,   209,    -1,   570,
      35,    -1,   358,    -1,   277,    -1,   567,    -1,   117,    -1,
     181,    -1,   110,   545,    -1,   552,   545,    -1,   549,   545,
      -1,  1424,    -1,  1421,    -1,  1435,   638,   625,    -1,  1435,
     638,  1435,   638,   625,    -1,  1138,    -1,  1435,    -1,  1425,
      -1,  1435,    -1,  1425,    -1,  1435,   638,  1435,    -1,   638,
    1435,   638,  1435,    -1,  1435,   638,  1435,   638,  1435,    -1,
    1435,    -1,  1435,   638,  1435,   638,  1435,    -1,  1435,   638,
    1435,    -1,   638,  1435,    -1,  1435,    -1,  1435,   638,  1435,
      -1,   638,  1435,    -1,  1435,  1335,    -1,  1435,   638,  1435,
    1335,    -1,  1435,    -1,   217,    -1,   219,    -1,  1432,    -1,
     545,    -1,   545,    -1,   545,    -1,  1430,    -1,  1439,    -1,
    1430,    -1,  1440,    -1,  1435,    -1,  1432,    -1,   261,    -1,
    1437,    -1,  1437,   637,  1437,    -1,    99,  1137,    -1,  1440,
      -1,    21,    -1,    28,    -1,    30,    -1,    47,    -1,    48,
      -1,    58,    -1,    60,    -1,    65,    -1,    74,    -1,    76,
      -1,    88,    -1,   116,    -1,   138,    -1,   149,    -1,   165,
      -1,   183,    -1,   187,    -1,   205,    -1,   208,    -1,   211,
      -1,   233,    -1,   252,    -1,   354,    -1,   367,    -1,   369,
      -1,   379,    -1,   383,    -1,   395,    -1,   398,    -1,   433,
      -1,   436,    -1,   442,    -1,   445,    -1,   454,    -1,   462,
      -1,   467,    -1,   474,    -1,   484,    -1,   490,    -1,   486,
      -1,   491,    -1,   513,    -1,   520,    -1,   563,    -1,   574,
      -1,   575,    -1,   612,    -1,   615,    -1,   583,    -1,     5,
      -1,     7,    -1,     8,    -1,     9,    -1,    10,    -1,    11,
      -1,    14,    -1,    18,    -1,    23,    -1,    25,    -1,    24,
      -1,    26,    -1,    27,    -1,    34,    -1,    38,    -1,    41,
      -1,    43,    -1,    42,    -1,    45,    -1,    51,    -1,    54,
      -1,    55,    -1,    57,    -1,    62,    -1,    64,    -1,    63,
      -1,    66,    -1,    67,    -1,    69,    -1,    73,    -1,    72,
      -1,    70,    -1,    75,    -1,    77,    -1,    78,    -1,    79,
      -1,    80,    -1,    82,    -1,    83,    -1,    85,    -1,    87,
      -1,    86,    -1,    89,    -1,    93,    -1,    96,    -1,    98,
      -1,   101,    -1,   106,    -1,   105,    -1,   107,    -1,   110,
      -1,   115,    -1,   121,    -1,   122,    -1,   124,    -1,   128,
      -1,   130,    -1,   131,    -1,   132,    -1,   133,    -1,   134,
      -1,   141,    -1,   142,    -1,   143,    -1,   150,    -1,   154,
      -1,   153,    -1,   152,    -1,   157,    -1,   158,    -1,   160,
      -1,   162,    -1,   161,    -1,   163,    -1,   164,    -1,   168,
      -1,   169,    -1,   170,    -1,   171,    -1,   172,    -1,   176,
      -1,   175,    -1,   188,    -1,   147,    -1,   190,    -1,   178,
      -1,   179,    -1,   180,    -1,   194,    -1,   196,    -1,   195,
      -1,   197,    -1,   201,    -1,   199,    -1,   206,    -1,   212,
      -1,   216,    -1,   218,    -1,   222,    -1,   237,    -1,   223,
      -1,   224,    -1,   227,    -1,   241,    -1,   242,    -1,   244,
      -1,   245,    -1,   232,    -1,   249,    -1,   253,    -1,   256,
      -1,   259,    -1,   260,    -1,   266,    -1,   267,    -1,   269,
      -1,   271,    -1,   273,    -1,   274,    -1,   308,    -1,   302,
      -1,   304,    -1,   286,    -1,   290,    -1,   287,    -1,   288,
      -1,   303,    -1,   289,    -1,   292,    -1,   284,    -1,   291,
      -1,   285,    -1,   300,    -1,   294,    -1,   293,    -1,   295,
      -1,   296,    -1,   297,    -1,   298,    -1,   299,    -1,   282,
      -1,   306,    -1,   307,    -1,   309,    -1,   311,    -1,   312,
      -1,   317,    -1,   318,    -1,   319,    -1,   320,    -1,   321,
      -1,   322,    -1,   325,    -1,   326,    -1,   330,    -1,   328,
      -1,   332,    -1,   333,    -1,   334,    -1,   335,    -1,   336,
      -1,   337,    -1,   339,    -1,   338,    -1,   340,    -1,   343,
      -1,   344,    -1,   348,    -1,   347,    -1,   355,    -1,   349,
      -1,   350,    -1,   359,    -1,   361,    -1,   362,    -1,   363,
      -1,   365,    -1,   366,    -1,   380,    -1,   381,    -1,   384,
      -1,   387,    -1,   386,    -1,   388,    -1,   389,    -1,   390,
      -1,   391,    -1,   392,    -1,   393,    -1,   394,    -1,   399,
      -1,   400,    -1,   402,    -1,   404,    -1,   405,    -1,   406,
      -1,   407,    -1,   408,    -1,   410,    -1,   411,    -1,   412,
      -1,   415,    -1,   419,    -1,   420,    -1,   422,    -1,   421,
      -1,   423,    -1,   426,    -1,   427,    -1,   428,    -1,   429,
      -1,   430,    -1,   432,    -1,   435,    -1,   437,    -1,   440,
      -1,   444,    -1,   447,    -1,   448,    -1,   449,    -1,   451,
      -1,   455,    -1,   456,    -1,   457,    -1,   460,    -1,   458,
      -1,   459,    -1,   461,    -1,   463,    -1,   464,    -1,   466,
      -1,   472,    -1,   471,    -1,   473,    -1,   485,    -1,   478,
      -1,   482,    -1,   487,    -1,   489,    -1,   492,    -1,   493,
      -1,   499,    -1,   500,    -1,   501,    -1,   504,    -1,   503,
      -1,   506,    -1,   509,    -1,   512,    -1,   514,    -1,   515,
      -1,   516,    -1,   517,    -1,   521,    -1,   523,    -1,   524,
      -1,   525,    -1,   526,    -1,   528,    -1,   527,    -1,   531,
      -1,   532,    -1,   533,    -1,   534,    -1,   541,    -1,   536,
      -1,   540,    -1,   537,    -1,   542,    -1,   543,    -1,   546,
      -1,   547,    -1,   558,    -1,   559,    -1,   549,    -1,   550,
      -1,   551,    -1,   552,    -1,   564,    -1,   565,    -1,   566,
      -1,   192,    -1,   568,    -1,   569,    -1,   572,    -1,   571,
      -1,   578,    -1,   581,    -1,   585,    -1,   586,    -1,   596,
      -1,   600,    -1,   593,    -1,   602,    -1,   601,    -1,   603,
      -1,   611,    -1,   604,    -1,   614,    -1,   616,    -1,   619,
      -1,    -1,   476,  1442,  1443,    -1,    -1,  1459,  1444,  1449,
      -1,    -1,   558,  1445,  1462,    -1,    -1,  1455,  1446,  1447,
      -1,    -1,  1458,  1448,  1449,    -1,   558,  1462,    -1,    -1,
     632,  1450,    -1,    -1,  1451,  1453,    -1,    -1,  1450,   632,
    1452,  1453,    -1,    -1,  1455,  1454,  1458,    -1,  1459,    -1,
     199,    -1,   269,    -1,   473,    -1,    -1,   199,    -1,   269,
      -1,   473,    -1,    -1,   199,   638,    -1,   269,   638,    -1,
     473,   638,    -1,  1461,  1310,  1468,    -1,    -1,  1461,  1310,
    1460,  1468,    -1,   637,  1437,  1310,  1138,    -1,   637,   637,
    1457,  1461,  1310,  1468,    -1,   957,   962,    -1,   338,  1310,
    1138,    -1,   338,   959,   964,    -1,   388,  1310,  1467,    -1,
     388,   186,  1438,  1310,  1467,    -1,  1435,    -1,  1435,   638,
    1435,    -1,   120,   638,  1435,    -1,  1463,    -1,  1464,    -1,
    1463,   632,  1464,    -1,  1464,   632,  1463,    -1,  1465,    -1,
     244,   260,  1466,    -1,   416,   366,    -1,   416,   613,    -1,
     416,   568,    -1,   416,    75,    -1,   437,   416,    -1,   471,
      -1,   545,    -1,   388,   630,   545,   631,    -1,   363,   630,
     545,   631,    -1,  1138,    -1,   120,    -1,   364,    -1,    12,
      -1,    33,    -1,    -1,   272,  1471,  1470,  1472,    -1,   539,
      -1,   536,    -1,  1473,    -1,  1472,   632,  1473,    -1,  1427,
    1231,  1474,    -1,   416,    -1,   613,    -1,   280,   613,    -1,
     416,   269,    -1,    -1,   579,  1476,  1471,    -1,   205,  1427,
     367,  1231,    -1,   205,  1429,    65,    -1,    -1,   205,  1429,
     416,  1478,  1479,  1233,  1250,    -1,  1480,    -1,  1435,  1481,
      -1,   179,    -1,   348,    -1,   179,    -1,   348,    -1,   400,
      -1,   253,    -1,    -1,  1483,  1482,   630,  1315,   631,    -1,
     155,    -1,   193,    -1,   254,    -1,   204,    -1,   281,    -1,
     452,   690,  1485,    -1,  1489,   364,  1488,  1500,   189,  1502,
      -1,  1489,   364,   192,  1500,   189,  1502,    -1,  1489,   364,
     403,  1500,   189,  1502,    -1,    12,  1490,   632,   200,   370,
     189,  1502,    -1,   408,   364,  1438,   189,  1502,    -1,   200,
     690,  1487,    -1,  1489,   364,  1488,  1500,   556,  1502,  1507,
    1508,    -1,  1489,   364,   192,  1500,   556,  1502,  1507,  1508,
      -1,  1489,   364,   403,  1500,   556,  1502,  1507,  1508,    -1,
     408,   364,  1438,   556,  1502,  1509,    -1,    -1,   539,    -1,
    1491,    -1,    12,  1490,    -1,    -1,   402,    -1,  1492,    -1,
    1491,   632,  1492,    -1,    -1,   468,  1493,  1504,    -1,    -1,
     231,  1494,  1504,    -1,    -1,   582,  1495,  1504,    -1,    -1,
     424,  1496,  1504,    -1,   125,    -1,   584,    -1,   225,    -1,
      13,    -1,    94,    -1,   139,    -1,   165,    -1,   432,    -1,
     482,    -1,   404,    -1,   178,    -1,   200,   370,    -1,   481,
     104,    -1,   531,    -1,    94,   542,   536,    -1,   272,   536,
      -1,   440,   486,    -1,   440,    64,    -1,    94,   600,    -1,
     481,   600,    -1,    94,   456,    -1,    13,   456,    -1,    94,
     585,    -1,   162,    -1,   560,    -1,    94,   537,    -1,    -1,
      17,    -1,  1499,  1497,  1498,    -1,  1499,    -1,   526,   545,
      -1,   245,   545,    -1,    62,   545,    -1,   625,    -1,  1435,
     638,   625,    -1,   625,   638,   625,    -1,  1427,    -1,  1438,
      -1,  1501,   632,  1438,    -1,  1503,    -1,  1502,   632,  1503,
      -1,  1438,   218,    46,   545,    -1,  1438,   218,    46,   388,
     545,    -1,  1438,   218,   608,  1437,    -1,  1438,   218,   608,
    1437,    19,  1432,    -1,  1438,    -1,    -1,   630,  1505,   631,
      -1,  1505,   632,  1506,    -1,  1506,    -1,  1435,    -1,    -1,
     441,  1498,    -1,   441,   510,    -1,   441,   614,    -1,   441,
     350,    -1,    -1,   608,  1510,    -1,    -1,   608,   200,   370,
      -1,  1510,  1511,    -1,  1511,    -1,   200,   370,    -1,   307,
    1255,    -1,   311,  1255,    -1,   306,  1255,    -1,   312,  1255,
      -1,    -1,    30,  1513,  1514,    -1,    -1,   611,    -1,    -1,
      17,   354,    55,    -1,    17,    55,    -1,    -1,   431,    -1,
     354,   431,    -1,    -1,   462,    -1,    76,  1514,  1515,  1516,
      -1,   454,  1514,  1515,  1516,    -1,   454,  1514,   556,  1517,
    1435,    -1,   462,  1435,    -1,   431,   462,  1435,    -1,    -1,
    1523,    -1,    -1,   576,  1530,  1524,  1118,    -1,    -1,  1523,
      -1,  1527,    -1,    -1,  1527,    -1,    -1,  1528,  1529,    -1,
    1245,  1249,    -1,  1251,    -1,    -1,   135,    -1,    12,    -1,
     468,  1201,    -1,   630,  1120,   631,    -1,  1531,  1526,    -1,
      -1,  1532,   576,  1530,  1533,  1531,  1526,    -1,  1535,  1532,
    1536,    -1,    -1,    -1,    -1,  1538,    -1,  1538,  1539,    -1,
    1539,    -1,   522,    -1,   210,    -1,   135,    -1,   507,    -1,
     502,    -1,   503,    -1,   505,    -1,    12,    -1,  1545,  1541,
      -1,  1544,  1542,    -1,  1546,  1543,  1550,    -1,  1550,    -1,
    1562,    -1,  1573,    -1,  1567,    -1,   677,    -1,  1550,    -1,
    1562,    -1,  1573,    -1,  1567,    -1,  1566,    -1,   677,    -1,
    1544,    -1,  1545,    -1,    -1,   122,   155,  1438,    -1,  1547,
      -1,  1547,  1548,    -1,  1548,    -1,   375,   439,    -1,    11,
     155,   569,    -1,    11,   155,   319,    -1,    11,   155,   543,
      -1,    -1,   508,   467,   122,    -1,   508,   467,   237,    -1,
      -1,  1549,   600,  1427,  1551,  1552,    19,  1554,    -1,    -1,
     630,  1553,   631,    -1,  1435,    -1,  1553,   632,  1435,    -1,
      -1,  1555,  1556,  1561,    -1,    -1,  1559,  1557,  1522,    -1,
     630,  1558,   631,  1525,    -1,  1559,    -1,   630,  1558,   631,
      -1,    -1,   468,  1560,  1123,    -1,    -1,   608,    61,   370,
      -1,   608,    51,    61,   370,    -1,   608,   269,    61,   370,
      -1,    -1,    -1,    -1,   560,  1134,   691,   797,   798,   364,
    1134,  1563,  1427,   186,  1134,  1564,   144,   459,  1565,   746,
      -1,    10,  1134,   192,  1435,   449,   919,   491,  1432,    -1,
    1134,   192,  1435,   449,   919,   491,  1432,    -1,    -1,    -1,
      -1,    -1,    -1,  1134,   192,   691,   630,  1568,   702,   631,
    1569,   449,  1570,   954,  1571,   693,  1572,   746,    -1,    -1,
      -1,    -1,    -1,   403,  1134,   691,  1574,   630,  1575,   706,
     631,  1576,   693,  1577,   746,    -1,   615,  1580,  1579,  1581,
      -1,   615,   149,  1579,  1583,    -1,   615,   398,  1579,    -1,
     615,    76,  1579,  1582,    -1,   615,   454,  1579,    -1,   615,
     420,    -1,  1414,    -1,  1414,   632,  1414,    -1,  1414,   632,
    1414,   632,  1255,    -1,    30,    -1,   513,    -1,    -1,   247,
      -1,   447,    -1,    -1,   365,   389,    -1,    -1,    -1,   532,
    1584,  1585,    -1,    -1,   186,   322,    -1,   233,   391,  1435,
     491,  1432,    -1,   575,   391,  1435,    -1
};

/* YYRLINE[YYN] -- source line where rule number YYN was defined.  */
static const yytype_uint16 yyrline[] =
{
       0,  1964,  1964,  1977,  1976,  2001,  2008,  2010,  2014,  2015,
    2020,  2021,  2022,  2023,  2024,  2025,  2026,  2027,  2028,  2029,
    2030,  2031,  2032,  2033,  2034,  2035,  2036,  2037,  2038,  2039,
    2040,  2041,  2042,  2043,  2044,  2045,  2046,  2047,  2048,  2049,
    2050,  2051,  2052,  2053,  2054,  2055,  2056,  2057,  2058,  2059,
    2060,  2061,  2062,  2063,  2064,  2065,  2066,  2067,  2068,  2069,
    2070,  2071,  2075,  2085,  2086,  2090,  2100,  2107,  2118,  2117,
    2128,  2130,  2134,  2135,  2139,  2152,  2151,  2171,  2170,  2188,
    2189,  2193,  2197,  2201,  2205,  2210,  2214,  2218,  2223,  2233,
    2238,  2242,  2246,  2250,  2254,  2258,  2263,  2267,  2272,  2303,
    2308,  2315,  2318,  2320,  2321,  2325,  2339,  2343,  2359,  2363,
    2376,  2375,  2420,  2425,  2419,  2432,  2437,  2430,  2444,  2449,
    2442,  2455,  2454,  2467,  2466,  2474,  2478,  2482,  2486,  2493,
    2506,  2507,  2511,  2515,  2519,  2523,  2527,  2532,  2536,  2544,
    2543,  2575,  2574,  2581,  2588,  2589,  2595,  2601,  2611,  2617,
    2623,  2625,  2632,  2633,  2637,  2643,  2652,  2653,  2661,  2661,
    2716,  2717,  2718,  2719,  2720,  2721,  2722,  2723,  2724,  2725,
    2726,  2727,  2728,  2733,  2747,  2761,  2780,  2781,  2785,  2786,
    2791,  2793,  2795,  2797,  2799,  2801,  2803,  2809,  2810,  2811,
    2815,  2819,  2827,  2826,  2839,  2841,  2844,  2846,  2850,  2854,
    2861,  2863,  2867,  2868,  2873,  2892,  2922,  2924,  2928,  2929,
    2933,  2962,  2963,  2964,  2965,  2969,  2970,  2974,  2975,  2980,
    2983,  3010,  3009,  3093,  3110,  3109,  3184,  3183,  3256,  3257,
    3262,  3264,  3269,  3292,  3303,  3307,  3329,  3330,  3334,  3338,
    3351,  3357,  3363,  3372,  3387,  3413,  3419,  3420,  3426,  3429,
    3433,  3441,  3461,  3463,  3481,  3487,  3489,  3491,  3493,  3495,
    3497,  3499,  3501,  3503,  3505,  3507,  3509,  3514,  3530,  3546,
    3547,  3552,  3558,  3567,  3573,  3582,  3590,  3619,  3628,  3630,
    3639,  3644,  3650,  3659,  3667,  3669,  3671,  3673,  3675,  3677,
    3679,  3681,  3683,  3685,  3687,  3689,  3691,  3696,  3716,  3740,
    3742,  3741,  3748,  3749,  3750,  3751,  3752,  3753,  3754,  3755,
    3756,  3757,  3758,  3759,  3760,  3765,  3764,  3775,  3775,  3832,
    3831,  3888,  3888,  3910,  3969,  4019,  4044,  4043,  4069,  4092,
    4094,  4095,  4099,  4117,  4138,  4147,  4183,  4138,  4212,  4214,
    4215,  4219,  4220,  4225,  4236,  4224,  4287,  4286,  4300,  4301,
    4305,  4306,  4311,  4320,  4310,  4369,  4378,  4368,  4422,  4435,
    4440,  4439,  4477,  4478,  4483,  4482,  4516,  4516,  4535,  4534,
    4584,  4601,  4610,  4600,  4664,  4673,  4663,  4713,  4715,  4720,
    4722,  4724,  4741,  4746,  4752,  4759,  4760,  4768,  4774,  4783,
    4789,  4795,  4796,  4800,  4800,  4805,  4806,  4807,  4811,  4812,
    4813,  4816,  4818,  4822,  4823,  4824,  4828,  4829,  4830,  4831,
    4832,  4833,  4834,  4835,  4838,  4840,  4844,  4845,  4846,  4850,
    4851,  4852,  4853,  4854,  4857,  4859,  4863,  4864,  4865,  4869,
    4870,  4871,  4872,  4873,  4874,  4875,  4878,  4880,  4884,  4885,
    4886,  4890,  4891,  4892,  4897,  4905,  4913,  4921,  4933,  4945,
    4950,  4955,  4963,  4971,  4979,  4987,  4995,  5003,  5011,  5024,
    5037,  5051,  5056,  5069,  5070,  5121,  5122,  5125,  5140,  5158,
    5163,  5161,  5168,  5170,  5169,  5173,  5172,  5178,  5215,  5216,
    5221,  5220,  5239,  5258,  5257,  5274,  5278,  5286,  5285,  5288,
    5290,  5292,  5294,  5299,  5300,  5306,  5307,  5324,  5325,  5329,
    5330,  5334,  5353,  5363,  5374,  5383,  5384,  5400,  5402,  5401,
    5406,  5404,  5415,  5416,  5420,  5438,  5454,  5455,  5471,  5486,
    5508,  5509,  5514,  5513,  5537,  5547,  5569,  5568,  5586,  5585,
    5605,  5627,  5631,  5660,  5672,  5673,  5678,  5689,  5677,  5714,
    5715,  5719,  5732,  5753,  5766,  5792,  5793,  5798,  5797,  5834,
    5839,  5840,  5844,  5845,  5849,  5851,  5857,  5859,  5861,  5863,
    5865,  5867,  5877,  5892,  5876,  5906,  5907,  5911,  5912,  5916,
    5917,  5921,  5922,  5926,  5927,  5931,  5932,  5936,  5940,  5941,
    5944,  5946,  5950,  5951,  5955,  5956,  5957,  5961,  5966,  5971,
    5976,  5981,  5986,  5991,  5996,  6011,  6017,  6032,  6037,  6052,
    6058,  6076,  6081,  6086,  6091,  6096,  6102,  6101,  6127,  6128,
    6129,  6134,  6139,  6144,  6146,  6148,  6150,  6156,  6164,  6182,
    6199,  6225,  6243,  6244,  6245,  6246,  6247,  6248,  6252,  6253,
    6254,  6258,  6259,  6263,  6264,  6265,  6266,  6271,  6278,  6279,
    6283,  6284,  6288,  6289,  6296,  6301,  6307,  6313,  6319,  6338,
    6344,  6346,  6350,  6354,  6355,  6359,  6364,  6363,  6386,  6387,
    6388,  6389,  6394,  6398,  6403,  6408,  6412,  6417,  6422,  6428,
    6433,  6439,  6443,  6448,  6453,  6471,  6473,  6475,  6491,  6493,
    6498,  6503,  6515,  6520,  6525,  6530,  6532,  6534,  6536,  6538,
    6540,  6542,  6544,  6547,  6546,  6551,  6550,  6554,  6556,  6565,
    6566,  6567,  6572,  6573,  6574,  6575,  6576,  6580,  6584,  6585,
    6589,  6590,  6594,  6595,  6596,  6597,  6598,  6602,  6603,  6604,
    6605,  6606,  6610,  6615,  6617,  6623,  6624,  6626,  6631,  6641,
    6642,  6646,  6647,  6648,  6656,  6657,  6661,  6662,  6666,  6667,
    6668,  6672,  6673,  6674,  6675,  6678,  6679,  6683,  6684,  6688,
    6689,  6693,  6694,  6698,  6699,  6700,  6701,  6702,  6703,  6709,
    6715,  6721,  6727,  6728,  6741,  6747,  6753,  6759,  6764,  6769,
    6778,  6799,  6807,  6808,  6813,  6814,  6818,  6826,  6830,  6831,
    6835,  6836,  6840,  6849,  6853,  6854,  6858,  6866,  6867,  6871,
    6872,  6876,  6877,  6882,  6883,  6887,  6894,  6903,  6908,  6916,
    6917,  6918,  6919,  6920,  6921,  6926,  6934,  6935,  6940,  6939,
    6952,  6953,  6957,  6960,  6961,  6962,  6963,  6967,  6975,  6982,
    6983,  6987,  6997,  6998,  7002,  7003,  7006,  7008,  7012,  7024,
    7025,  7029,  7036,  7049,  7050,  7052,  7054,  7060,  7065,  7071,
    7077,  7084,  7094,  7095,  7096,  7097,  7098,  7102,  7106,  7107,
    7111,  7112,  7116,  7117,  7121,  7122,  7123,  7127,  7128,  7132,
    7136,  7149,  7161,  7162,  7166,  7167,  7171,  7172,  7176,  7177,
    7181,  7182,  7186,  7187,  7191,  7192,  7196,  7197,  7201,  7203,
    7207,  7208,  7212,  7216,  7217,  7230,  7231,  7232,  7236,  7237,
    7241,  7247,  7261,  7262,  7266,  7267,  7271,  7272,  7280,  7279,
    7318,  7317,  7331,  7343,  7342,  7361,  7360,  7379,  7378,  7397,
    7391,  7411,  7410,  7443,  7448,  7453,  7458,  7463,  7470,  7477,
    7482,  7490,  7491,  7492,  7493,  7497,  7498,  7510,  7511,  7515,
    7516,  7519,  7521,  7529,  7537,  7539,  7541,  7542,  7550,  7551,
    7555,  7564,  7562,  7576,  7590,  7589,  7603,  7601,  7615,  7622,
    7633,  7634,  7662,  7669,  7673,  7678,  7677,  7693,  7695,  7700,
    7708,  7707,  7723,  7727,  7726,  7738,  7739,  7743,  7758,  7759,
    7763,  7772,  7776,  7781,  7787,  7786,  7797,  7806,  7796,  7821,
    7830,  7839,  7848,  7857,  7863,  7869,  7878,  7887,  7915,  7936,
    7946,  7950,  7955,  7956,  7959,  7961,  7962,  7963,  7964,  7967,
    7972,  7983,  7988,  7999,  8000,  8004,  8005,  8009,  8010,  8011,
    8015,  8016,  8021,  8029,  8030,  8031,  8032,  8037,  8036,  8065,
    8075,  8092,  8095,  8102,  8106,  8113,  8117,  8121,  8128,  8133,
    8136,  8143,  8146,  8153,  8156,  8163,  8166,  8174,  8177,  8184,
    8188,  8195,  8199,  8206,  8207,  8232,  8233,  8234,  8239,  8244,
    8252,  8251,  8263,  8264,  8265,  8270,  8269,  8291,  8292,  8296,
    8297,  8301,  8302,  8303,  8308,  8307,  8329,  8338,  8337,  8364,
    8365,  8369,  8370,  8374,  8375,  8376,  8377,  8378,  8379,  8384,
    8383,  8405,  8406,  8407,  8412,  8411,  8417,  8424,  8429,  8437,
    8438,  8442,  8456,  8455,  8468,  8469,  8473,  8474,  8478,  8488,
    8498,  8499,  8504,  8503,  8514,  8515,  8519,  8520,  8524,  8534,
    8545,  8544,  8552,  8552,  8563,  8564,  8569,  8570,  8579,  8588,
    8589,  8593,  8598,  8603,  8608,  8613,  8612,  8632,  8640,  8632,
    8647,  8648,  8649,  8650,  8651,  8655,  8662,  8669,  8671,  8682,
    8683,  8687,  8688,  8716,  8746,  8748,  8754,  8764,  8765,  8766,
    8781,  8788,  8813,  8819,  8825,  8826,  8827,  8828,  8829,  8833,
    8834,  8839,  8890,  8897,  8940,  8946,  8952,  8958,  8964,  8970,
    8976,  8982,  8986,  8992,  8998,  9004,  9010,  9016,  9020,  9026,
    9036,  9042,  9050,  9056,  9066,  9072,  9081,  9091,  9097,  9107,
    9113,  9122,  9126,  9132,  9138,  9144,  9150,  9156,  9162,  9168,
    9174,  9180,  9186,  9192,  9198,  9204,  9210,  9214,  9215,  9219,
    9220,  9224,  9225,  9229,  9230,  9234,  9235,  9236,  9237,  9238,
    9239,  9243,  9244,  9248,  9249,  9250,  9251,  9252,  9253,  9265,
    9266,  9267,  9268,  9269,  9275,  9279,  9285,  9291,  9297,  9303,
    9305,  9312,  9319,  9325,  9366,  9375,  9382,  9390,  9396,  9403,
    9409,  9423,  9430,  9446,  9452,  9458,  9466,  9472,  9478,  9484,
    9490,  9505,  9517,  9523,  9529,  9535,  9541,  9547,  9553,  9559,
    9565,  9571,  9577,  9583,  9589,  9595,  9601,  9607,  9613,  9621,
    9642,  9649,  9655,  9662,  9669,  9676,  9683,  9689,  9695,  9700,
    9706,  9713,  9719,  9725,  9731,  9737,  9743,  9761,  9767,  9773,
    9780,  9787,  9802,  9808,  9814,  9820,  9826,  9833,  9839,  9845,
    9851,  9857,  9863,  9870,  9883,  9889,  9895,  9901,  9907,  9915,
    9921,  9933,  9939,  9945,  9953,  9963,  9969,  9985,  9991,  9998,
   10005, 10012, 10019, 10026, 10030, 10050, 10049, 10122, 10162, 10164,
   10169, 10170, 10174, 10175, 10179, 10180, 10184, 10191, 10199, 10225,
   10231, 10237, 10243, 10249, 10255, 10264, 10271, 10273, 10270, 10280,
   10291, 10297, 10303, 10309, 10315, 10321, 10327, 10333, 10339, 10346,
   10345, 10364, 10363, 10378, 10389, 10397, 10413, 10414, 10419, 10424,
   10429, 10432, 10445, 10444, 10461, 10463, 10465, 10467, 10469, 10471,
   10473, 10475, 10477, 10479, 10481, 10486, 10487, 10491, 10498, 10506,
   10507, 10511, 10518, 10526, 10527, 10531, 10532, 10536, 10544, 10555,
   10556, 10565, 10576, 10577, 10583, 10584, 10604, 10606, 10610, 10608,
   10625, 10623, 10641, 10639, 10646, 10655, 10653, 10671, 10670, 10680,
   10691, 10689, 10708, 10707, 10718, 10729, 10730, 10731, 10739, 10740,
   10744, 10759, 10759, 10774, 10814, 10887, 10898, 10903, 10895, 10922,
   10942, 10950, 10942, 10959, 10958, 10981, 10998, 10981, 11005, 11009,
   11035, 11036, 11041, 11044, 11045, 11046, 11050, 11051, 11056, 11055,
   11061, 11060, 11068, 11069, 11072, 11074, 11074, 11078, 11078, 11083,
   11084, 11088, 11090, 11095, 11096, 11100, 11111, 11124, 11125, 11126,
   11127, 11128, 11129, 11130, 11131, 11132, 11133, 11134, 11135, 11139,
   11140, 11141, 11142, 11143, 11144, 11145, 11146, 11147, 11151, 11152,
   11153, 11154, 11157, 11159, 11160, 11164, 11165, 11173, 11175, 11179,
   11181, 11180, 11194, 11197, 11196, 11211, 11217, 11232, 11234, 11238,
   11240, 11245, 11246, 11266, 11291, 11295, 11296, 11300, 11313, 11315,
   11320, 11319, 11354, 11356, 11361, 11362, 11363, 11368, 11374, 11378,
   11379, 11383, 11390, 11397, 11404, 11414, 11441, 11445, 11451, 11457,
   11467, 11471, 11481, 11482, 11483, 11484, 11485, 11486, 11490, 11491,
   11492, 11493, 11494, 11498, 11499, 11500, 11501, 11502, 11506, 11507,
   11508, 11509, 11513, 11518, 11519, 11522, 11525, 11524, 11558, 11559,
   11563, 11571, 11584, 11584, 11594, 11595, 11599, 11618, 11658, 11657,
   11670, 11678, 11669, 11680, 11692, 11704, 11703, 11721, 11720, 11731,
   11732, 11731, 11748, 11755, 11776, 11797, 11809, 11814, 11813, 11823,
   11829, 11836, 11841, 11846, 11856, 11857, 11861, 11872, 11885, 11886,
   11890, 11901, 11902, 11906, 11907, 11910, 11912, 11915, 11916, 11917,
   11921, 11922, 11930, 11938, 11929, 11948, 11955, 11947, 11965, 11977,
   11978, 11991, 11995, 11996, 12012, 12013, 12017, 12026, 12027, 12028,
   12030, 12029, 12040, 12041, 12045, 12046, 12048, 12047, 12051, 12050,
   12056, 12057, 12061, 12062, 12066, 12076, 12077, 12081, 12082, 12087,
   12086, 12100, 12101, 12105, 12110, 12118, 12119, 12127, 12129, 12129,
   12137, 12145, 12136, 12167, 12168, 12172, 12180, 12181, 12185, 12195,
   12196, 12203, 12202, 12218, 12217, 12231, 12230, 12242, 12241, 12255,
   12256, 12260, 12273, 12289, 12290, 12294, 12295, 12299, 12300, 12301,
   12306, 12305, 12327, 12329, 12332, 12334, 12337, 12338, 12341, 12345,
   12349, 12353, 12357, 12361, 12365, 12369, 12373, 12381, 12384, 12394,
   12393, 12408, 12415, 12423, 12431, 12439, 12447, 12455, 12462, 12464,
   12466, 12475, 12479, 12484, 12483, 12489, 12488, 12493, 12502, 12509,
   12514, 12516, 12518, 12520, 12522, 12530, 12541, 12549, 12551, 12559,
   12566, 12573, 12583, 12590, 12596, 12605, 12613, 12617, 12621, 12628,
   12635, 12641, 12648, 12655, 12660, 12665, 12673, 12675, 12677, 12682,
   12683, 12686, 12688, 12692, 12693, 12697, 12698, 12702, 12703, 12707,
   12708, 12712, 12713, 12716, 12718, 12725, 12736, 12735, 12751, 12750,
   12757, 12758, 12759, 12760, 12761, 12765, 12766, 12771, 12775, 12781,
   12787, 12809, 12810, 12811, 12826, 12825, 12838, 12847, 12837, 12849,
   12853, 12854, 12866, 12865, 12887, 12888, 12893, 12895, 12897, 12899,
   12901, 12903, 12905, 12907, 12909, 12911, 12913, 12915, 12917, 12922,
   12923, 12928, 12927, 12937, 12938, 12942, 12942, 12944, 12945, 12949,
   12950, 12955, 12954, 12965, 12969, 12973, 12985, 12995, 12996, 12997,
   13003, 13015, 13027, 13037, 13047, 13014, 13055, 13056, 13060, 13061,
   13065, 13066, 13078, 13082, 13083, 13084, 13087, 13089, 13093, 13094,
   13098, 13103, 13110, 13115, 13122, 13124, 13128, 13129, 13133, 13138,
   13146, 13147, 13150, 13152, 13160, 13162, 13166, 13167, 13168, 13172,
   13174, 13179, 13180, 13189, 13190, 13194, 13195, 13199, 13212, 13236,
   13248, 13259, 13278, 13286, 13298, 13313, 13334, 13335, 13336, 13345,
   13346, 13347, 13348, 13355, 13361, 13367, 13373, 13379, 13408, 13439,
   13449, 13459, 13465, 13474, 13486, 13492, 13498, 13514, 13515, 13519,
   13528, 13544, 13548, 13599, 13603, 13621, 13625, 13705, 13730, 13761,
   13762, 13778, 13788, 13792, 13798, 13804, 13814, 13820, 13829, 13839,
   13840, 13870, 13883, 13899, 13915, 13932, 13933, 13944, 13945, 13956,
   13957, 13958, 13962, 13989, 14022, 14037, 14038, 14039, 14040, 14041,
   14042, 14043, 14044, 14045, 14046, 14047, 14048, 14049, 14050, 14051,
   14052, 14053, 14054, 14055, 14056, 14057, 14058, 14059, 14060, 14061,
   14062, 14063, 14064, 14065, 14066, 14067, 14068, 14069, 14070, 14071,
   14072, 14073, 14074, 14075, 14076, 14077, 14078, 14079, 14080, 14081,
   14082, 14083, 14084, 14085, 14086, 14096, 14097, 14098, 14099, 14100,
   14101, 14102, 14103, 14104, 14105, 14106, 14107, 14108, 14109, 14110,
   14111, 14112, 14113, 14114, 14115, 14116, 14117, 14118, 14119, 14120,
   14121, 14122, 14123, 14124, 14125, 14126, 14127, 14128, 14129, 14130,
   14131, 14132, 14133, 14134, 14135, 14136, 14137, 14138, 14139, 14140,
   14145, 14146, 14147, 14148, 14149, 14150, 14151, 14152, 14153, 14154,
   14155, 14156, 14157, 14158, 14159, 14160, 14161, 14162, 14163, 14164,
   14165, 14166, 14167, 14168, 14169, 14170, 14171, 14172, 14173, 14174,
   14175, 14176, 14177, 14178, 14179, 14180, 14181, 14182, 14183, 14184,
   14185, 14186, 14187, 14188, 14189, 14190, 14191, 14192, 14193, 14194,
   14195, 14196, 14197, 14198, 14199, 14200, 14201, 14202, 14203, 14204,
   14205, 14206, 14207, 14208, 14209, 14210, 14211, 14212, 14213, 14214,
   14215, 14216, 14217, 14218, 14219, 14220, 14221, 14222, 14223, 14224,
   14225, 14226, 14227, 14228, 14229, 14230, 14231, 14232, 14233, 14234,
   14235, 14236, 14237, 14238, 14239, 14240, 14241, 14242, 14243, 14244,
   14245, 14246, 14247, 14248, 14249, 14250, 14251, 14252, 14253, 14254,
   14255, 14256, 14257, 14258, 14259, 14260, 14261, 14262, 14263, 14264,
   14265, 14266, 14267, 14268, 14269, 14270, 14271, 14272, 14273, 14274,
   14275, 14276, 14277, 14278, 14279, 14280, 14281, 14282, 14283, 14284,
   14285, 14286, 14287, 14288, 14289, 14290, 14291, 14292, 14293, 14294,
   14295, 14296, 14297, 14298, 14299, 14300, 14301, 14302, 14303, 14304,
   14305, 14306, 14307, 14308, 14309, 14310, 14311, 14312, 14313, 14314,
   14315, 14316, 14317, 14318, 14319, 14320, 14321, 14322, 14323, 14324,
   14325, 14326, 14327, 14328, 14329, 14330, 14331, 14332, 14333, 14334,
   14335, 14336, 14337, 14338, 14339, 14340, 14341, 14342, 14343, 14344,
   14345, 14346, 14347, 14348, 14349, 14350, 14351, 14352, 14353, 14354,
   14355, 14356, 14357, 14358, 14359, 14360, 14361, 14362, 14363, 14364,
   14365, 14366, 14367, 14368, 14369, 14370, 14371, 14372, 14373, 14374,
   14375, 14376, 14377, 14378, 14379, 14380, 14381, 14382, 14383, 14384,
   14385, 14386, 14387, 14388, 14389, 14390, 14391, 14392, 14393, 14394,
   14395, 14396, 14397, 14398, 14399, 14400, 14412, 14411, 14431, 14430,
   14437, 14436, 14446, 14445, 14456, 14455, 14461, 14469, 14471, 14476,
   14476, 14485, 14484, 14498, 14497, 14502, 14506, 14507, 14508, 14512,
   14513, 14514, 14515, 14519, 14520, 14521, 14522, 14527, 14553, 14552,
   14652, 14663, 14676, 14692, 14705, 14727, 14762, 14804, 14832, 14878,
   14892, 14893, 14894, 14895, 14899, 14917, 14935, 14936, 14940, 14941,
   14942, 14943, 14947, 14948, 14966, 14979, 14980, 14981, 14987, 14993,
   15005, 15004, 15020, 15021, 15025, 15026, 15030, 15043, 15044, 15045,
   15050, 15055, 15054, 15074, 15090, 15107, 15106, 15145, 15146, 15150,
   15151, 15155, 15156, 15157, 15158, 15160, 15159, 15173, 15174, 15175,
   15176, 15177, 15183, 15188, 15194, 15205, 15216, 15220, 15230, 15235,
   15242, 15254, 15266, 15275, 15277, 15281, 15282, 15289, 15291, 15295,
   15296, 15301, 15300, 15304, 15303, 15307, 15306, 15310, 15309, 15312,
   15313, 15314, 15315, 15316, 15317, 15318, 15319, 15320, 15321, 15322,
   15323, 15324, 15325, 15326, 15327, 15328, 15329, 15330, 15331, 15332,
   15333, 15334, 15335, 15336, 15337, 15341, 15342, 15346, 15347, 15351,
   15361, 15371, 15384, 15399, 15412, 15425, 15437, 15442, 15450, 15455,
   15463, 15478, 15489, 15498, 15508, 15517, 15521, 15525, 15526, 15530,
   15557, 15559, 15563, 15567, 15571, 15578, 15579, 15583, 15584, 15588,
   15589, 15593, 15594, 15600, 15606, 15612, 15622, 15621, 15631, 15632,
   15637, 15638, 15639, 15644, 15645, 15646, 15650, 15651, 15655, 15667,
   15676, 15686, 15695, 15709, 15710, 15715, 15714, 15730, 15731, 15732,
   15736, 15737, 15741, 15741, 15765, 15766, 15770, 15771, 15772, 15776,
   15780, 15787, 15790, 15788, 15804, 15811, 15832, 15849, 15851, 15855,
   15856, 15860, 15861, 15869, 15870, 15871, 15872, 15878, 15884, 15894,
   15896, 15898, 15903, 15904, 15905, 15906, 15907, 15911, 15912, 15913,
   15914, 15915, 15916, 15926, 15927, 15932, 15945, 15958, 15960, 15962,
   15967, 15972, 15974, 15976, 15982, 15983, 15985, 15991, 15990, 16008,
   16009, 16013, 16018, 16026, 16026, 16052, 16051, 16068, 16072, 16077,
   16082, 16081, 16093, 16094, 16096, 16098, 16116, 16122, 16127, 16109,
   16190, 16208, 16233, 16265, 16270, 16278, 16301, 16229, 16367, 16387,
   16400, 16410, 16366, 16431, 16435, 16439, 16443, 16447, 16451, 16458,
   16465, 16472, 16482, 16483, 16487, 16488, 16489, 16493, 16494, 16499,
   16501, 16500, 16506, 16507, 16511, 16521
};
#endif

#if YYDEBUG || YYERROR_VERBOSE || YYTOKEN_TABLE
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "ABORT_SYM", "ACCESSIBLE_SYM", "ACTION",
  "ADD", "ADDDATE_SYM", "AFTER_SYM", "AGAINST", "AGGREGATE_SYM",
  "ALGORITHM_SYM", "ALL", "ALTER", "ANALYSE_SYM", "ANALYZE_SYM",
  "AND_AND_SYM", "AND_SYM", "ANY_SYM", "AS", "ASC", "ASCII_SYM",
  "ASENSITIVE_SYM", "AT_SYM", "AUTOEXTEND_SIZE_SYM", "AUTO_INC",
  "AVG_ROW_LENGTH", "AVG_SYM", "BACKUP_SYM", "BEFORE_SYM", "BEGIN_SYM",
  "BETWEEN_SYM", "BIGINT", "BINARY", "BINLOG_SYM", "BIN_NUM", "BIT_AND",
  "BIT_OR", "BIT_SYM", "BIT_XOR", "BLOB_SYM", "BLOCK_SYM", "BOOLEAN_SYM",
  "BOOL_SYM", "BOTH", "BTREE_SYM", "BY", "BYTE_SYM", "CACHE_SYM",
  "CALL_SYM", "CASCADE", "CASCADED", "CASE_SYM", "CAST_SYM",
  "CATALOG_NAME_SYM", "CHAIN_SYM", "CHANGE", "CHANGED", "CHARSET",
  "CHAR_SYM", "CHECKSUM_SYM", "CHECK_SYM", "CIPHER_SYM",
  "CLASS_ORIGIN_SYM", "CLIENT_SYM", "CLOSE_SYM", "COALESCE", "CODE_SYM",
  "COLLATE_SYM", "COLLATION_SYM", "COLUMNS", "COLUMN_SYM",
  "COLUMN_FORMAT_SYM", "COLUMN_NAME_SYM", "COMMENT_SYM", "COMMITTED_SYM",
  "COMMIT_SYM", "COMPACT_SYM", "COMPLETION_SYM", "COMPRESSED_SYM",
  "CONCURRENT", "CONDITION_SYM", "CONNECTION_SYM", "CONSISTENT_SYM",
  "CONSTRAINT", "CONSTRAINT_CATALOG_SYM", "CONSTRAINT_NAME_SYM",
  "CONSTRAINT_SCHEMA_SYM", "CONTAINS_SYM", "CONTEXT_SYM", "CONTINUE_SYM",
  "CONVERT_SYM", "COUNT_SYM", "CPU_SYM", "CREATE", "CROSS", "CUBE_SYM",
  "CURDATE", "CURRENT_SYM", "CURRENT_USER", "CURSOR_SYM",
  "CURSOR_NAME_SYM", "CURTIME", "DATABASE", "DATABASES", "DATAFILE_SYM",
  "DATA_SYM", "DATETIME", "DATE_ADD_INTERVAL", "DATE_SUB_INTERVAL",
  "DATE_SYM", "DAY_HOUR_SYM", "DAY_MICROSECOND_SYM", "DAY_MINUTE_SYM",
  "DAY_SECOND_SYM", "DAY_SYM", "DEALLOCATE_SYM", "DECIMAL_NUM",
  "DECIMAL_SYM", "DECLARE_SYM", "DEFAULT", "DEFAULT_AUTH_SYM",
  "DEFINER_SYM", "DELAYED_SYM", "DELAY_KEY_WRITE_SYM", "DELETE_SYM",
  "DESC", "DESCRIBE", "DES_KEY_FILE", "DETERMINISTIC_SYM",
  "DIAGNOSTICS_SYM", "DIRECTORY_SYM", "DISABLE_SYM", "DISCARD", "DISK_SYM",
  "DISTINCT", "DIV_SYM", "DOUBLE_SYM", "DO_SYM", "DROP", "DUAL_SYM",
  "DUMPFILE", "DUPLICATE_SYM", "DYNAMIC_SYM", "EACH_SYM", "ELSE",
  "ELSEIF_SYM", "ENABLE_SYM", "ENCLOSED", "END", "ENDS_SYM",
  "END_OF_INPUT", "ENGINES_SYM", "ENGINE_SYM", "ENUM", "EQ", "EQUAL_SYM",
  "ERROR_SYM", "ERRORS", "ESCAPED", "ESCAPE_SYM", "EVENTS_SYM",
  "EVENT_SYM", "EVERY_SYM", "EXCHANGE_SYM", "EXECUTE_SYM", "EXISTS",
  "EXIT_SYM", "EXPANSION_SYM", "EXPIRE_SYM", "EXPORT_SYM", "EXTENDED_SYM",
  "EXTENT_SIZE_SYM", "EXTRACT_SYM", "FALSE_SYM", "FAST_SYM", "FAULTS_SYM",
  "FETCH_SYM", "FILE_SYM", "FIRST_SYM", "FIXED_SYM", "FLOAT_NUM",
  "FLOAT_SYM", "FLUSH_SYM", "FORCE_SYM", "FOREIGN", "FOR_SYM",
  "FORMAT_SYM", "FOUND_SYM", "FROM", "FULL", "FULLTEXT_SYM",
  "FUNCTION_SYM", "GE", "GENERAL", "GEOMETRYCOLLECTION", "GEOMETRY_SYM",
  "GET_FORMAT", "GET_SYM", "GLOBAL_SYM", "GRANT", "GRANTS", "GROUP_SYM",
  "GROUP_CONCAT_SYM", "GT_SYM", "HANDLER_SYM", "HASH_SYM", "HAVING",
  "HELP_SYM", "HEX_NUM", "HIGH_PRIORITY", "HOST_SYM", "HOSTS_SYM",
  "HOUR_MICROSECOND_SYM", "HOUR_MINUTE_SYM", "HOUR_SECOND_SYM", "HOUR_SYM",
  "IDENT", "IDENTIFIED_SYM", "IDENT_QUOTED", "IF", "IGNORE_SYM",
  "IGNORE_SERVER_IDS_SYM", "IMPORT", "INDEXES", "INDEX_SYM", "INFILE",
  "INITIAL_SIZE_SYM", "INNER_SYM", "INOUT_SYM", "INSENSITIVE_SYM",
  "INSERT", "INSERT_METHOD", "INSTALL_SYM", "INTERVAL_SYM", "INTO",
  "INT_SYM", "INVOKER_SYM", "IN_SYM", "IO_AFTER_GTIDS", "IO_BEFORE_GTIDS",
  "IO_SYM", "IPC_SYM", "IS", "ISOLATION", "ISSUER_SYM", "ITERATE_SYM",
  "JOIN_SYM", "KEYS", "KEY_BLOCK_SIZE", "KEY_SYM", "KILL_SYM",
  "LANGUAGE_SYM", "LAST_SYM", "LE", "LEADING", "LEAVES", "LEAVE_SYM",
  "LEFT", "LESS_SYM", "LEVEL_SYM", "LEX_HOSTNAME", "LIKE", "LIMIT",
  "LINEAR_SYM", "LINES", "LINESTRING", "LIST_SYM", "LOAD", "LOCAL_SYM",
  "LOCATOR_SYM", "LOCKS_SYM", "LOCK_SYM", "LOGFILE_SYM", "LOGS_SYM",
  "LONGBLOB", "LONGTEXT", "LONG_NUM", "LONG_SYM", "LOOP_SYM",
  "LOW_PRIORITY", "LT", "MASTER_AUTO_POSITION_SYM", "MASTER_BIND_SYM",
  "MASTER_CONNECT_RETRY_SYM", "MASTER_DELAY_SYM", "MASTER_HOST_SYM",
  "MASTER_LOG_FILE_SYM", "MASTER_LOG_POS_SYM", "MASTER_PASSWORD_SYM",
  "MASTER_PORT_SYM", "MASTER_RETRY_COUNT_SYM", "MASTER_SERVER_ID_SYM",
  "MASTER_SSL_CAPATH_SYM", "MASTER_SSL_CA_SYM", "MASTER_SSL_CERT_SYM",
  "MASTER_SSL_CIPHER_SYM", "MASTER_SSL_CRL_SYM", "MASTER_SSL_CRLPATH_SYM",
  "MASTER_SSL_KEY_SYM", "MASTER_SSL_SYM",
  "MASTER_SSL_VERIFY_SERVER_CERT_SYM", "MASTER_SYM", "MASTER_USER_SYM",
  "MASTER_HEARTBEAT_PERIOD_SYM", "MATCH", "MAX_CONNECTIONS_PER_HOUR",
  "MAX_QUERIES_PER_HOUR", "MAX_ROWS", "MAX_SIZE_SYM", "MAX_SYM",
  "MAX_UPDATES_PER_HOUR", "MAX_USER_CONNECTIONS_SYM", "MAX_VALUE_SYM",
  "MEDIUMBLOB", "MEDIUMINT", "MEDIUMTEXT", "MEDIUM_SYM", "MEMORY_SYM",
  "MERGE_SYM", "MESSAGE_TEXT_SYM", "MICROSECOND_SYM", "MIGRATE_SYM",
  "MINUTE_MICROSECOND_SYM", "MINUTE_SECOND_SYM", "MINUTE_SYM", "MIN_ROWS",
  "MIN_SYM", "MODE_SYM", "MODIFIES_SYM", "MODIFY_SYM", "MOD_SYM",
  "MONTH_SYM", "MULTILINESTRING", "MULTIPOINT", "MULTIPOLYGON",
  "MUTEX_SYM", "MYSQL_ERRNO_SYM", "NAMES_SYM", "NAME_SYM", "NATIONAL_SYM",
  "NATURAL", "NCHAR_STRING", "NCHAR_SYM", "NDBCLUSTER_SYM", "NE", "NEG",
  "NEW_SYM", "NEXT_SYM", "NODEGROUP_SYM", "NONE_SYM", "NOT2_SYM",
  "NOT_SYM", "NOW_SYM", "NO_SYM", "NO_WAIT_SYM", "NO_WRITE_TO_BINLOG",
  "NULL_SYM", "NUM", "NUMBER_SYM", "NUMERIC_SYM", "NVARCHAR_SYM",
  "OFFSET_SYM", "OLD_PASSWORD", "ON", "ONE_SYM", "ONLY_SYM", "OPEN_SYM",
  "OPTIMIZE", "OPTIONS_SYM", "OPTION", "OPTIONALLY", "OR2_SYM",
  "ORDER_SYM", "OR_OR_SYM", "OR_SYM", "OUTER", "OUTFILE", "OUT_SYM",
  "OWNER_SYM", "PACK_KEYS_SYM", "PAGE_SYM", "PARAM_MARKER", "PARSER_SYM",
  "PARTIAL", "PARTITION_SYM", "PARTITIONS_SYM", "PARTITIONING_SYM",
  "PASSWORD", "PHASE_SYM", "PLUGIN_DIR_SYM", "PLUGIN_SYM", "PLUGINS_SYM",
  "POINT_SYM", "POLYGON", "PORT_SYM", "POSITION_SYM", "PRECISION",
  "PREPARE_SYM", "PRESERVE_SYM", "PREV_SYM", "PRIMARY_SYM", "PRIVILEGES",
  "PROCEDURE_SYM", "PROCESS", "PROCESSLIST_SYM", "PROFILE_SYM",
  "PROFILES_SYM", "PROXY_SYM", "PURGE", "QUARTER_SYM", "QUERY_SYM",
  "QUICK", "RANGE_SYM", "READS_SYM", "READ_ONLY_SYM", "READ_SYM",
  "READ_WRITE_SYM", "REAL", "REBUILD_SYM", "RECOVER_SYM", "REDOFILE_SYM",
  "REDO_BUFFER_SIZE_SYM", "REDUNDANT_SYM", "REFERENCES", "REGEXP", "RELAY",
  "RELAYLOG_SYM", "RELAY_LOG_FILE_SYM", "RELAY_LOG_POS_SYM",
  "RELAY_THREAD", "RELEASE_SYM", "RELOAD", "REMOVE_SYM", "RENAME",
  "REORGANIZE_SYM", "REPAIR", "REPEATABLE_SYM", "REPEAT_SYM", "REPLACE",
  "REPLICATION", "REQUIRE_SYM", "RESET_SYM", "RESIGNAL_SYM", "RESOURCES",
  "RESTORE_SYM", "RESTRICT", "RESUME_SYM", "RETURNED_SQLSTATE_SYM",
  "RETURNS_SYM", "RETURN_SYM", "REVERSE_SYM", "REVOKE", "RIGHT",
  "ROLLBACK_SYM", "ROLLUP_SYM", "ROUTINE_SYM", "ROWS_SYM",
  "ROW_FORMAT_SYM", "ROW_SYM", "ROW_COUNT_SYM", "RTREE_SYM",
  "SAVEPOINT_SYM", "SCHEDULE_SYM", "SCHEMA_NAME_SYM",
  "SECOND_MICROSECOND_SYM", "SECOND_SYM", "SECURITY_SYM", "SELECT_SYM",
  "SENSITIVE_SYM", "SEPARATOR_SYM", "SERIALIZABLE_SYM", "SERIAL_SYM",
  "SESSION_SYM", "SERVER_SYM", "SERVER_OPTIONS", "SET", "SET_VAR",
  "SHARE_SYM", "SHIFT_LEFT", "SHIFT_RIGHT", "SHOW", "SHUTDOWN",
  "SIGNAL_SYM", "SIGNED_SYM", "SIMPLE_SYM", "SLAVE", "SLOW", "SMALLINT",
  "SNAPSHOT_SYM", "SOCKET_SYM", "SONAME_SYM", "SOUNDS_SYM", "SOURCE_SYM",
  "SPATIAL_SYM", "SPECIFIC_SYM", "SQLEXCEPTION_SYM", "SQLSTATE_SYM",
  "SQLWARNING_SYM", "SQL_AFTER_GTIDS", "SQL_AFTER_MTS_GAPS",
  "SQL_BEFORE_GTIDS", "SQL_BIG_RESULT", "SQL_BUFFER_RESULT",
  "SQL_CACHE_SYM", "SQL_CALC_FOUND_ROWS", "SQL_NO_CACHE_SYM",
  "SQL_SMALL_RESULT", "SQL_SYM", "SQL_THREAD", "SSL_SYM", "STARTING",
  "STARTS_SYM", "START_SYM", "STATS_AUTO_RECALC_SYM",
  "STATS_PERSISTENT_SYM", "STATS_SAMPLE_PAGES_SYM", "STATUS_SYM",
  "STDDEV_SAMP_SYM", "STD_SYM", "STOP_SYM", "STORAGE_SYM", "STRAIGHT_JOIN",
  "STRING_SYM", "SUBCLASS_ORIGIN_SYM", "SUBDATE_SYM", "SUBJECT_SYM",
  "SUBPARTITIONS_SYM", "SUBPARTITION_SYM", "SUBSTRING", "SUM_SYM",
  "SUPER_SYM", "SUSPEND_SYM", "SWAPS_SYM", "SWITCHES_SYM", "SYSDATE",
  "TABLES", "TABLESPACE", "TABLE_REF_PRIORITY", "TABLE_SYM",
  "TABLE_CHECKSUM_SYM", "TABLE_NAME_SYM", "TEMPORARY", "TEMPTABLE_SYM",
  "TERMINATED", "TEXT_STRING", "TEXT_SYM", "THAN_SYM", "THEN_SYM",
  "TIMESTAMP", "TIMESTAMP_ADD", "TIMESTAMP_DIFF", "TIME_SYM", "TINYBLOB",
  "TINYINT", "TINYTEXT", "TO_SYM", "TRAILING", "TRANSACTION_SYM",
  "TRIGGERS_SYM", "TRIGGER_SYM", "TRIM", "TRUE_SYM", "TRUNCATE_SYM",
  "TYPES_SYM", "TYPE_SYM", "UDF_RETURNS_SYM", "ULONGLONG_NUM",
  "UNCOMMITTED_SYM", "UNDEFINED_SYM", "UNDERSCORE_CHARSET", "UNDOFILE_SYM",
  "UNDO_BUFFER_SIZE_SYM", "UNDO_SYM", "UNICODE_SYM", "UNINSTALL_SYM",
  "UNION_SYM", "UNIQUE_SYM", "UNKNOWN_SYM", "UNLOCK_SYM", "UNSIGNED",
  "UNTIL_SYM", "UPDATE_SYM", "UPGRADE_SYM", "USAGE", "USER", "USE_FRM",
  "USE_SYM", "USING", "UTC_DATE_SYM", "UTC_TIMESTAMP_SYM", "UTC_TIME_SYM",
  "VALUES", "VALUE_SYM", "VARBINARY", "VARCHAR", "VARIABLES",
  "VARIANCE_SYM", "VARYING", "VAR_SAMP_SYM", "VIEW_SYM", "WAIT_SYM",
  "WARNINGS", "WEEK_SYM", "WEIGHT_STRING_SYM", "WHEN_SYM", "WHERE",
  "WHILE_SYM", "WITH", "WITH_CUBE_SYM", "WITH_ROLLUP_SYM", "WORK_SYM",
  "WRAPPER_SYM", "WRITE_SYM", "X509_SYM", "XA_SYM", "XML_SYM", "XOR",
  "YEAR_MONTH_SYM", "YEAR_SYM", "ZEROFILL", "'|'", "'&'", "'-'", "'+'",
  "'*'", "'/'", "'%'", "'^'", "'~'", "'('", "')'", "','", "'!'", "'{'",
  "'}'", "';'", "'@'", "'.'", "':'", "$accept", "query", "$@1",
  "opt_end_of_input", "verb_clause", "statement", "deallocate",
  "deallocate_or_drop", "prepare", "prepare_src", "execute", "$@2",
  "execute_using", "execute_var_list", "execute_var_ident", "help", "$@3",
  "change", "$@4", "master_defs", "master_def", "ignore_server_id_list",
  "ignore_server_id", "master_file_def", "create", "$@5", "$@6", "$@7",
  "$@8", "$@9", "$@10", "$@11", "$@12", "$@13", "server_def",
  "server_options_list", "server_option", "event_tail", "$@14",
  "ev_schedule_time", "$@15", "opt_ev_status", "ev_starts", "ev_ends",
  "opt_ev_on_completion", "ev_on_completion", "opt_ev_comment",
  "ev_sql_stmt", "$@16", "ev_sql_stmt_inner", "clear_privileges",
  "sp_name", "sp_a_chistics", "sp_c_chistics", "sp_chistic",
  "sp_c_chistic", "sp_suid", "call", "$@17", "opt_sp_cparam_list",
  "opt_sp_cparams", "sp_cparams", "sp_fdparam_list", "sp_fdparams",
  "sp_init_param", "sp_fdparam", "sp_pdparam_list", "sp_pdparams",
  "sp_pdparam", "sp_opt_inout", "sp_proc_stmts", "sp_proc_stmts1",
  "sp_decls", "sp_decl", "$@18", "$@19", "$@20", "sp_handler_type",
  "sp_hcond_list", "sp_hcond_element", "sp_cond", "sqlstate", "opt_value",
  "sp_hcond", "signal_stmt", "signal_value", "opt_signal_value",
  "opt_set_signal_information", "signal_information_item_list",
  "signal_allowed_expr", "signal_condition_information_item_name",
  "resignal_stmt", "get_diagnostics", "which_area",
  "diagnostics_information", "statement_information",
  "statement_information_item", "simple_target_specification",
  "statement_information_item_name", "condition_number",
  "condition_information", "condition_information_item",
  "condition_information_item_name", "sp_decl_idents", "sp_opt_default",
  "$@21", "sp_proc_stmt", "sp_proc_stmt_if", "$@22",
  "sp_proc_stmt_statement", "$@23", "sp_proc_stmt_return", "$@24",
  "sp_proc_stmt_unlabeled", "$@25", "sp_proc_stmt_leave",
  "sp_proc_stmt_iterate", "sp_proc_stmt_open", "sp_proc_stmt_fetch",
  "$@26", "sp_proc_stmt_close", "sp_opt_fetch_noise", "sp_fetch_list",
  "sp_if", "$@27", "$@28", "$@29", "sp_elseifs", "case_stmt_specification",
  "simple_case_stmt", "$@30", "$@31", "searched_case_stmt", "$@32",
  "simple_when_clause_list", "searched_when_clause_list",
  "simple_when_clause", "$@33", "$@34", "searched_when_clause", "$@35",
  "$@36", "else_clause_opt", "sp_labeled_control", "$@37", "sp_opt_label",
  "sp_labeled_block", "$@38", "sp_unlabeled_block", "$@39",
  "sp_block_content", "$@40", "sp_unlabeled_control", "$@41", "$@42",
  "$@43", "$@44", "trg_action_time", "trg_event",
  "change_tablespace_access", "change_tablespace_info", "tablespace_info",
  "opt_logfile_group_name", "alter_tablespace_info", "logfile_group_info",
  "alter_logfile_group_info", "add_log_file", "change_ts_option_list",
  "$@45", "change_ts_options", "change_ts_option",
  "tablespace_option_list", "tablespace_options", "tablespace_option",
  "alter_tablespace_option_list", "alter_tablespace_options",
  "alter_tablespace_option", "logfile_group_option_list",
  "logfile_group_options", "logfile_group_option",
  "alter_logfile_group_option_list", "alter_logfile_group_options",
  "alter_logfile_group_option", "ts_datafile", "lg_undofile",
  "lg_redofile", "tablespace_name", "logfile_group_name", "ts_access_mode",
  "opt_ts_initial_size", "opt_ts_autoextend_size", "opt_ts_max_size",
  "opt_ts_extent_size", "opt_ts_undo_buffer_size",
  "opt_ts_redo_buffer_size", "opt_ts_nodegroup", "opt_ts_comment",
  "opt_ts_engine", "ts_wait", "size_number", "create2", "create2a", "$@46",
  "create3", "$@47", "$@48", "opt_create_partitioning", "opt_partitioning",
  "partitioning", "$@49", "have_partitioning", "partition_entry", "$@50",
  "partition", "part_type_def", "$@51", "opt_linear", "opt_key_algo",
  "part_field_list", "part_field_item_list", "part_field_item",
  "part_column_list", "part_func", "sub_part_func", "opt_num_parts",
  "opt_sub_part", "$@52", "$@53", "sub_part_field_list",
  "sub_part_field_item", "part_func_expr", "opt_num_subparts", "part_defs",
  "part_def_list", "part_definition", "$@54", "part_name",
  "opt_part_values", "$@55", "$@56", "part_func_max", "part_values_in",
  "part_value_list", "part_value_item", "$@57", "$@58",
  "part_value_item_list", "part_value_expr_item", "opt_sub_partition",
  "sub_part_list", "sub_part_definition", "$@59", "sub_name",
  "opt_part_options", "opt_part_option_list", "opt_part_option",
  "create_select", "$@60", "$@61", "opt_as", "opt_create_database_options",
  "create_database_options", "create_database_option", "opt_table_options",
  "table_options", "table_option", "opt_if_not_exists",
  "opt_create_table_options", "create_table_options_space_separated",
  "create_table_options", "create_table_option", "$@62", "default_charset",
  "default_collation", "storage_engines", "known_storage_engines",
  "row_types", "merge_insert_types", "opt_select_from", "udf_type",
  "create_field_list", "field_list", "field_list_item", "column_def",
  "key_def", "opt_check_constraint", "check_constraint", "opt_constraint",
  "constraint", "field_spec", "$@63", "type", "$@64", "$@65",
  "spatial_type", "char", "nchar", "varchar", "nvarchar", "int_type",
  "real_type", "float_options", "precision", "type_datetime_precision",
  "func_datetime_precision", "field_options", "field_opt_list",
  "field_option", "field_length", "opt_field_length", "opt_precision",
  "opt_attribute", "opt_attribute_list", "attribute",
  "type_with_opt_collate", "now", "now_or_signed_literal", "charset",
  "charset_name", "charset_name_or_default", "opt_load_data_charset",
  "old_or_new_charset_name", "old_or_new_charset_name_or_default",
  "collation_name", "opt_collate", "collation_name_or_default",
  "opt_default", "ascii", "unicode", "opt_binary", "opt_bin_mod",
  "ws_nweights", "$@66", "ws_level_flag_desc", "ws_level_flag_reverse",
  "ws_level_flags", "ws_level_number", "ws_level_list_item",
  "ws_level_list", "ws_level_range", "ws_level_list_or_range",
  "opt_ws_levels", "opt_primary", "references", "opt_ref_list", "ref_list",
  "opt_match_clause", "opt_on_update_delete", "delete_option",
  "normal_key_type", "constraint_key_type", "key_or_index",
  "opt_key_or_index", "keys_or_index", "opt_unique", "fulltext", "spatial",
  "init_key_options", "key_alg", "normal_key_options",
  "fulltext_key_options", "spatial_key_options", "normal_key_opts",
  "spatial_key_opts", "fulltext_key_opts", "key_using_alg", "all_key_opt",
  "normal_key_opt", "spatial_key_opt", "fulltext_key_opt",
  "btree_or_rtree", "key_list", "key_part", "opt_ident", "opt_component",
  "string_list", "alter", "$@67", "$@68", "$@69", "$@70", "$@71", "$@72",
  "$@73", "alter_user_list", "ev_alter_on_schedule_completion",
  "opt_ev_rename_to", "opt_ev_sql_stmt", "ident_or_empty",
  "alter_commands", "$@74", "$@75", "$@76", "remove_partitioning",
  "all_or_alt_part_name_list", "add_partition_rule", "$@77",
  "add_part_extra", "reorg_partition_rule", "$@78", "reorg_parts_rule",
  "$@79", "alt_part_name_list", "alt_part_name_item", "alter_list",
  "add_column", "alter_list_item", "$@80", "$@81", "$@82",
  "opt_index_lock_algorithm", "alter_algorithm_option",
  "alter_lock_option", "opt_column", "opt_ignore", "opt_restrict",
  "opt_place", "opt_to", "slave", "$@83", "start",
  "opt_start_transaction_option_list", "start_transaction_option_list",
  "start_transaction_option", "slave_connection_opts",
  "slave_user_name_opt", "slave_user_pass_opt", "slave_plugin_auth_opt",
  "slave_plugin_dir_opt", "opt_slave_thread_option_list",
  "slave_thread_option_list", "slave_thread_option", "slave_until",
  "slave_until_opts", "checksum", "$@84", "opt_checksum_type", "repair",
  "$@85", "opt_mi_repair_type", "mi_repair_types", "mi_repair_type",
  "analyze", "$@86", "binlog_base64_event", "check", "$@87",
  "opt_mi_check_type", "mi_check_types", "mi_check_type", "optimize",
  "$@88", "opt_no_write_to_binlog", "rename", "$@89", "rename_list",
  "table_to_table_list", "table_to_table", "keycache", "$@90",
  "keycache_list_or_parts", "keycache_list", "assign_to_keycache",
  "assign_to_keycache_parts", "key_cache_name", "preload", "$@91",
  "preload_list_or_parts", "preload_list", "preload_keys",
  "preload_keys_parts", "adm_partition", "$@92", "cache_keys_spec", "$@93",
  "cache_key_list_or_empty", "opt_ignore_leaves", "select", "select_init",
  "select_paren", "select_paren_derived", "select_init2", "$@94",
  "select_part2", "$@95", "$@96", "select_into", "select_from",
  "select_options", "select_option_list", "select_option",
  "select_lock_type", "select_item_list", "select_item", "remember_name",
  "remember_end", "select_alias", "optional_braces", "expr", "bool_pri",
  "predicate", "bit_expr", "or", "and", "not", "not2", "comp_op",
  "all_or_any", "simple_expr", "function_call_keyword",
  "function_call_nonkeyword", "function_call_conflict",
  "geometry_function", "function_call_generic", "@97", "fulltext_options",
  "opt_natural_language_mode", "opt_query_expansion", "opt_udf_expr_list",
  "udf_expr_list", "udf_expr", "sum_expr", "$@98", "$@99", "$@100",
  "variable", "$@101", "variable_aux", "opt_distinct",
  "opt_gconcat_separator", "opt_gorder_clause", "in_sum_expr", "$@102",
  "cast_type", "opt_expr_list", "expr_list", "ident_list_arg",
  "ident_list", "opt_expr", "opt_else", "when_list", "table_ref",
  "join_table_list", "esc_table_ref", "derived_table_list", "join_table",
  "$@103", "$@104", "$@105", "$@106", "$@107", "$@108", "$@109",
  "normal_join", "opt_use_partition", "use_partition", "table_factor",
  "$@110", "select_derived_union", "$@111", "$@112",
  "select_init2_derived", "select_part2_derived", "$@113", "$@114",
  "select_derived", "$@115", "select_derived2", "$@116", "$@117",
  "get_select_lex", "select_derived_init", "opt_outer",
  "index_hint_clause", "index_hint_type", "index_hint_definition", "$@118",
  "$@119", "index_hints_list", "opt_index_hints_list", "$@120",
  "opt_key_definition", "$@121", "opt_key_usage_list", "key_usage_element",
  "key_usage_list", "using_list", "interval", "interval_time_stamp",
  "date_time_type", "table_alias", "opt_table_alias", "opt_all",
  "where_clause", "$@122", "having_clause", "$@123", "opt_escape",
  "group_clause", "group_list", "olap_opt", "alter_order_clause",
  "alter_order_list", "alter_order_item", "opt_order_clause",
  "order_clause", "$@124", "order_list", "order_dir",
  "opt_limit_clause_init", "opt_limit_clause", "limit_clause",
  "limit_options", "limit_option", "delete_limit_clause", "ulong_num",
  "real_ulong_num", "ulonglong_num", "real_ulonglong_num", "dec_num_error",
  "dec_num", "procedure_analyse_clause", "$@125",
  "opt_procedure_analyse_params", "procedure_analyse_param",
  "select_var_list_init", "$@126", "select_var_list", "select_var_ident",
  "into", "$@127", "into_destination", "$@128", "$@129", "do", "$@130",
  "drop", "$@131", "$@132", "$@133", "$@134", "table_list", "table_name",
  "table_name_with_opt_use_partition", "table_alias_ref_list",
  "table_alias_ref", "if_exists", "opt_temporary", "drop_ts_options_list",
  "drop_ts_options", "drop_ts_option", "insert", "$@135", "$@136",
  "replace", "$@137", "$@138", "insert_lock_option", "replace_lock_option",
  "insert2", "insert_table", "insert_field_spec", "$@139", "fields",
  "insert_values", "$@140", "$@141", "values_list", "ident_eq_list",
  "ident_eq_value", "equal", "opt_equal", "no_braces", "$@142",
  "opt_values", "values", "expr_or_default", "opt_insert_update", "$@143",
  "update", "$@144", "$@145", "update_list", "update_elem",
  "insert_update_list", "insert_update_elem", "opt_low_priority", "delete",
  "$@146", "single_multi", "$@147", "$@148", "$@149", "table_wild_list",
  "table_wild_one", "opt_wild", "opt_delete_options", "opt_delete_option",
  "truncate", "$@150", "opt_table_sym", "opt_profile_defs", "profile_defs",
  "profile_def", "opt_profile_args", "show", "$@151", "show_param",
  "$@152", "$@153", "show_engine_param", "master_or_binary", "opt_storage",
  "opt_db", "opt_full", "from_or_in", "binlog_in", "binlog_from",
  "wild_and_where", "describe", "$@154", "$@155", "explanable_command",
  "describe_command", "opt_extended_describe", "opt_describe_column",
  "flush", "$@156", "flush_options", "$@157", "$@158", "opt_flush_lock",
  "$@159", "flush_options_list", "flush_option", "opt_table_list", "reset",
  "$@160", "reset_options", "reset_option", "$@161", "slave_reset_options",
  "purge", "$@162", "purge_options", "purge_option", "kill", "kill_option",
  "use", "load", "$@163", "$@164", "$@165", "$@166", "data_or_xml",
  "opt_local", "load_data_lock", "opt_duplicate", "opt_field_term",
  "field_term_list", "field_term", "opt_line_term", "line_term_list",
  "line_term", "opt_xml_rows_identified_by", "opt_ignore_lines",
  "lines_or_rows", "opt_field_or_var_spec", "fields_or_vars",
  "field_or_var", "opt_load_data_set_spec", "load_data_set_list",
  "load_data_set_elem", "text_literal", "text_string", "param_marker",
  "signed_literal", "literal", "NUM_literal", "temporal_literal",
  "insert_ident", "table_wild", "order_ident", "simple_ident",
  "simple_ident_nospvar", "simple_ident_q", "field_ident", "table_ident",
  "table_ident_opt_wild", "table_ident_nodb", "IDENT_sys",
  "TEXT_STRING_sys_nonewline", "TEXT_STRING_sys", "TEXT_STRING_literal",
  "TEXT_STRING_filesystem", "ident", "label_ident", "ident_or_text",
  "user", "keyword", "keyword_sp", "set", "$@167",
  "start_option_value_list", "$@168", "$@169", "$@170",
  "start_option_value_list_following_option_type", "$@171",
  "option_value_list_continued", "option_value_list", "$@172", "$@173",
  "option_value", "$@174", "option_type", "opt_var_type",
  "opt_var_ident_type", "option_value_following_option_type",
  "option_value_no_option_type", "$@175", "internal_variable_name",
  "transaction_characteristics", "transaction_access_mode",
  "isolation_level", "transaction_access_mode_types", "isolation_types",
  "text_or_password", "set_expr_or_default", "lock", "$@176",
  "table_or_tables", "table_lock_list", "table_lock", "lock_option",
  "unlock", "$@177", "handler", "$@178", "handler_read_or_scan",
  "handler_scan_function", "handler_rkey_function", "$@179",
  "handler_rkey_mode", "revoke", "revoke_command", "grant",
  "grant_command", "opt_table", "grant_privileges", "opt_privileges",
  "object_privilege_list", "object_privilege", "$@180", "$@181", "$@182",
  "$@183", "opt_and", "require_list", "require_list_element",
  "grant_ident", "user_list", "grant_list", "grant_user",
  "opt_column_list", "column_list", "column_list_id", "require_clause",
  "grant_options", "opt_grant_option", "grant_option_list", "grant_option",
  "begin", "$@184", "opt_work", "opt_chain", "opt_release",
  "opt_savepoint", "commit", "rollback", "savepoint", "release",
  "union_clause", "union_list", "$@185", "union_opt",
  "opt_union_order_or_limit", "union_order_or_limit", "$@186",
  "order_or_limit", "union_option", "query_specification",
  "query_expression_body", "$@187", "subselect", "subselect_start",
  "subselect_end", "opt_query_expression_options",
  "query_expression_option_list", "query_expression_option",
  "view_or_trigger_or_sp_or_event", "definer_tail", "no_definer_tail",
  "definer_opt", "no_definer", "definer", "view_replace_or_algorithm",
  "view_replace", "view_algorithm", "view_suid", "view_tail", "$@188",
  "view_list_opt", "view_list", "view_select", "$@189", "view_select_aux",
  "$@190", "create_view_select_paren", "create_view_select", "$@191",
  "view_check_option", "trigger_tail", "$@192", "$@193", "$@194",
  "udf_tail", "sf_tail", "$@195", "$@196", "$@197", "$@198", "$@199",
  "sp_tail", "$@200", "$@201", "$@202", "$@203", "xa", "xid",
  "begin_or_start", "opt_join_or_resume", "opt_one_phase", "opt_suspend",
  "$@204", "opt_migrate", "install", "uninstall", 0
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[YYLEX-NUM] -- Internal token number corresponding to
   token YYLEX-NUM.  */
static const yytype_uint16 yytoknum[] =
{
       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,   794,
     795,   796,   797,   798,   799,   800,   801,   802,   803,   804,
     805,   806,   807,   808,   809,   810,   811,   812,   813,   814,
     815,   816,   817,   818,   819,   820,   821,   822,   823,   824,
     825,   826,   827,   828,   829,   830,   831,   832,   833,   834,
     835,   836,   837,   838,   839,   840,   841,   842,   843,   844,
     845,   846,   847,   848,   849,   850,   851,   852,   853,   854,
     855,   856,   857,   858,   859,   860,   861,   862,   863,   864,
     865,   866,   867,   868,   869,   870,   871,   872,   873,   874,
     875,   124,    38,    45,    43,    42,    47,    37,    94,   126,
      40,    41,    44,    33,   123,   125,    59,    64,    46,    58
};
# endif

/* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_uint16 yyr1[] =
{
       0,   640,   641,   642,   641,   641,   643,   643,   644,   644,
     645,   645,   645,   645,   645,   645,   645,   645,   645,   645,
     645,   645,   645,   645,   645,   645,   645,   645,   645,   645,
     645,   645,   645,   645,   645,   645,   645,   645,   645,   645,
     645,   645,   645,   645,   645,   645,   645,   645,   645,   645,
     645,   645,   645,   645,   645,   645,   645,   645,   645,   645,
     645,   645,   646,   647,   647,   648,   649,   649,   651,   650,
     652,   652,   653,   653,   654,   656,   655,   658,   657,   659,
     659,   660,   660,   660,   660,   660,   660,   660,   660,   660,
     660,   660,   660,   660,   660,   660,   660,   660,   660,   660,
     660,   660,   661,   661,   661,   662,   663,   663,   663,   663,
     665,   664,   666,   667,   664,   668,   669,   664,   670,   671,
     664,   672,   664,   673,   664,   664,   664,   664,   664,   674,
     675,   675,   676,   676,   676,   676,   676,   676,   676,   678,
     677,   680,   679,   679,   681,   681,   681,   681,   682,   682,
     683,   683,   684,   684,   685,   685,   686,   686,   688,   687,
     689,   689,   689,   689,   689,   689,   689,   689,   689,   689,
     689,   689,   689,   690,   691,   691,   692,   692,   693,   693,
     694,   694,   694,   694,   694,   694,   694,   695,   695,   695,
     696,   696,   698,   697,   699,   699,   700,   700,   701,   701,
     702,   702,   703,   703,   704,   705,   706,   706,   707,   707,
     708,   709,   709,   709,   709,   710,   710,   711,   711,   712,
     712,   714,   713,   713,   715,   713,   716,   713,   717,   717,
     718,   718,   719,   720,   720,   721,   722,   722,   723,   723,
     723,   723,   723,   724,   725,   725,   726,   726,   727,   727,
     728,   728,   729,   729,   729,   730,   730,   730,   730,   730,
     730,   730,   730,   730,   730,   730,   730,   731,   732,   733,
     733,   734,   734,   735,   735,   736,   737,   737,   738,   738,
     739,   740,   740,   741,   742,   742,   742,   742,   742,   742,
     742,   742,   742,   742,   742,   742,   742,   743,   743,   744,
     745,   744,   746,   746,   746,   746,   746,   746,   746,   746,
     746,   746,   746,   746,   746,   748,   747,   750,   749,   752,
     751,   754,   753,   755,   756,   757,   759,   758,   760,   761,
     761,   761,   762,   762,   764,   765,   766,   763,   767,   767,
     767,   768,   768,   770,   771,   769,   773,   772,   774,   774,
     775,   775,   777,   778,   776,   780,   781,   779,   782,   782,
     784,   783,   785,   785,   787,   786,   789,   788,   791,   790,
     792,   793,   794,   792,   795,   796,   792,   797,   797,   798,
     798,   798,   799,   800,   801,   802,   802,   803,   803,   804,
     805,   806,   806,   808,   807,   809,   809,   809,   810,   810,
     810,   811,   811,   812,   812,   812,   813,   813,   813,   813,
     813,   813,   813,   813,   814,   814,   815,   815,   815,   816,
     816,   816,   816,   816,   817,   817,   818,   818,   818,   819,
     819,   819,   819,   819,   819,   819,   820,   820,   821,   821,
     821,   822,   822,   822,   823,   824,   825,   826,   827,   828,
     828,   828,   829,   830,   831,   832,   833,   834,   835,   836,
     837,   838,   838,   839,   839,   840,   840,   840,   840,   841,
     842,   841,   843,   844,   843,   845,   843,   846,   847,   847,
     849,   848,   850,   852,   851,   853,   854,   855,   854,   854,
     854,   854,   854,   856,   856,   857,   857,   858,   858,   859,
     859,   860,   861,   862,   863,   864,   864,   865,   866,   865,
     867,   865,   868,   868,   869,   870,   871,   871,   872,   872,
     873,   873,   875,   874,   876,   877,   878,   877,   879,   877,
     880,   880,   881,   881,   882,   882,   884,   885,   883,   886,
     886,   887,   887,   888,   888,   889,   889,   891,   890,   892,
     893,   893,   894,   894,   895,   895,   895,   895,   895,   895,
     895,   895,   897,   898,   896,   899,   899,   900,   900,   901,
     901,   902,   902,   903,   903,   904,   904,   905,   906,   906,
     907,   907,   908,   908,   909,   909,   909,   910,   910,   910,
     910,   910,   910,   910,   910,   910,   910,   910,   910,   910,
     910,   910,   910,   910,   910,   910,   911,   910,   910,   910,
     910,   910,   910,   910,   910,   910,   910,   910,   912,   913,
     914,   915,   916,   916,   916,   916,   916,   916,   917,   917,
     917,   918,   918,   919,   919,   919,   919,   920,   921,   921,
     922,   922,   923,   923,   924,   924,   924,   924,   924,   924,
     925,   925,   926,   927,   927,   928,   930,   929,   931,   931,
     931,   931,   931,   931,   931,   931,   931,   931,   931,   931,
     931,   931,   931,   931,   931,   931,   931,   931,   931,   931,
     931,   931,   931,   931,   931,   931,   931,   931,   931,   931,
     931,   931,   931,   932,   931,   933,   931,   931,   931,   934,
     934,   934,   934,   934,   934,   934,   934,   935,   936,   936,
     937,   937,   938,   938,   938,   938,   938,   939,   939,   939,
     939,   939,   940,   940,   940,   941,   941,   941,   942,   943,
     943,   944,   944,   944,   945,   945,   946,   946,   947,   947,
     947,   948,   948,   948,   948,   949,   949,   950,   950,   951,
     951,   952,   952,   953,   953,   953,   953,   953,   953,   953,
     953,   953,   953,   953,   953,   953,   953,   953,   953,   953,
     954,   955,   956,   956,   957,   957,   958,   958,   959,   959,
     960,   960,   961,   961,   962,   962,   963,   964,   964,   965,
     965,   966,   966,   967,   967,   967,   968,   968,   968,   969,
     969,   969,   969,   969,   969,   969,   970,   970,   972,   971,
     973,   973,   974,   975,   975,   975,   975,   976,   977,   978,
     978,   979,   980,   980,   981,   981,   982,   982,   983,   984,
     984,   985,   985,   986,   986,   986,   986,   987,   987,   987,
     987,   987,   988,   988,   988,   988,   988,   989,   990,   990,
     991,   991,   992,   992,   993,   993,   993,   994,   994,   995,
     996,   997,   998,   998,   999,   999,  1000,  1000,  1001,  1001,
    1002,  1002,  1003,  1003,  1004,  1004,  1005,  1005,  1006,  1006,
    1007,  1007,  1008,  1009,  1009,  1010,  1010,  1010,  1011,  1011,
    1012,  1012,  1013,  1013,  1014,  1014,  1015,  1015,  1017,  1016,
    1018,  1016,  1016,  1019,  1016,  1020,  1016,  1021,  1016,  1022,
    1016,  1023,  1016,  1016,  1016,  1016,  1016,  1016,  1016,  1024,
    1024,  1025,  1025,  1025,  1025,  1026,  1026,  1027,  1027,  1028,
    1028,  1029,  1029,  1029,  1029,  1029,  1029,  1029,  1029,  1029,
    1029,  1030,  1029,  1029,  1031,  1029,  1032,  1029,  1029,  1029,
    1029,  1029,  1033,  1034,  1034,  1036,  1035,  1037,  1037,  1037,
    1039,  1038,  1040,  1041,  1040,  1042,  1042,  1043,  1044,  1044,
    1045,  1046,  1046,  1046,  1047,  1046,  1048,  1049,  1046,  1046,
    1046,  1046,  1046,  1046,  1046,  1046,  1046,  1046,  1046,  1046,
    1046,  1046,  1046,  1046,  1050,  1050,  1050,  1050,  1050,  1051,
    1051,  1052,  1052,  1053,  1053,  1054,  1054,  1055,  1055,  1055,
    1056,  1056,  1056,  1057,  1057,  1057,  1057,  1059,  1058,  1058,
    1060,  1061,  1061,  1062,  1062,  1063,  1063,  1063,  1064,  1065,
    1065,  1066,  1066,  1067,  1067,  1068,  1068,  1069,  1069,  1070,
    1070,  1071,  1071,  1072,  1072,  1073,  1073,  1073,  1073,  1073,
    1075,  1074,  1076,  1076,  1076,  1078,  1077,  1079,  1079,  1080,
    1080,  1081,  1081,  1081,  1083,  1082,  1084,  1086,  1085,  1087,
    1087,  1088,  1088,  1089,  1089,  1089,  1089,  1089,  1089,  1091,
    1090,  1092,  1092,  1092,  1094,  1093,  1093,  1095,  1095,  1096,
    1096,  1097,  1099,  1098,  1100,  1100,  1101,  1101,  1102,  1103,
    1104,  1104,  1106,  1105,  1107,  1107,  1108,  1108,  1109,  1110,
    1112,  1111,  1114,  1113,  1115,  1115,  1116,  1116,  1117,  1118,
    1118,  1119,  1119,  1120,  1120,  1122,  1121,  1124,  1125,  1123,
    1126,  1126,  1126,  1126,  1126,  1127,  1127,  1128,  1128,  1129,
    1129,  1130,  1130,  1130,  1131,  1131,  1131,  1132,  1132,  1132,
    1133,  1133,  1134,  1135,  1136,  1136,  1136,  1136,  1136,  1137,
    1137,  1138,  1138,  1138,  1138,  1138,  1138,  1138,  1138,  1138,
    1138,  1138,  1139,  1139,  1139,  1139,  1139,  1139,  1140,  1140,
    1140,  1140,  1140,  1140,  1140,  1140,  1140,  1140,  1140,  1140,
    1140,  1140,  1141,  1141,  1141,  1141,  1141,  1141,  1141,  1141,
    1141,  1141,  1141,  1141,  1141,  1141,  1141,  1142,  1142,  1143,
    1143,  1144,  1144,  1145,  1145,  1146,  1146,  1146,  1146,  1146,
    1146,  1147,  1147,  1148,  1148,  1148,  1148,  1148,  1148,  1148,
    1148,  1148,  1148,  1148,  1148,  1148,  1148,  1148,  1148,  1148,
    1148,  1148,  1148,  1148,  1148,  1148,  1148,  1148,  1148,  1148,
    1148,  1148,  1148,  1149,  1149,  1149,  1149,  1149,  1149,  1149,
    1149,  1149,  1149,  1149,  1149,  1149,  1149,  1149,  1149,  1149,
    1149,  1149,  1149,  1149,  1149,  1149,  1149,  1149,  1149,  1149,
    1150,  1150,  1150,  1150,  1150,  1150,  1150,  1150,  1150,  1150,
    1150,  1150,  1150,  1150,  1150,  1150,  1150,  1150,  1150,  1150,
    1150,  1150,  1151,  1151,  1151,  1151,  1151,  1151,  1151,  1151,
    1151,  1151,  1151,  1151,  1151,  1151,  1151,  1151,  1151,  1151,
    1151,  1151,  1151,  1151,  1151,  1151,  1151,  1152,  1152,  1152,
    1152,  1152,  1152,  1152,  1152,  1154,  1153,  1153,  1155,  1155,
    1156,  1156,  1157,  1157,  1158,  1158,  1159,  1159,  1160,  1161,
    1161,  1161,  1161,  1161,  1161,  1161,  1162,  1163,  1161,  1161,
    1161,  1161,  1161,  1161,  1161,  1161,  1161,  1161,  1161,  1164,
    1161,  1166,  1165,  1167,  1167,  1167,  1168,  1168,  1169,  1169,
    1170,  1170,  1172,  1171,  1173,  1173,  1173,  1173,  1173,  1173,
    1173,  1173,  1173,  1173,  1173,  1174,  1174,  1175,  1175,  1176,
    1176,  1177,  1177,  1178,  1178,  1179,  1179,  1180,  1180,  1181,
    1181,  1182,  1183,  1183,  1184,  1184,  1185,  1185,  1186,  1185,
    1187,  1185,  1188,  1185,  1185,  1189,  1185,  1190,  1185,  1185,
    1191,  1185,  1192,  1185,  1185,  1193,  1193,  1193,  1194,  1194,
    1195,  1197,  1196,  1196,  1196,  1198,  1199,  1200,  1198,  1201,
    1203,  1204,  1202,  1206,  1205,  1208,  1209,  1207,  1210,  1211,
    1212,  1212,  1213,  1213,  1213,  1213,  1214,  1214,  1216,  1215,
    1217,  1215,  1218,  1218,  1219,  1220,  1219,  1222,  1221,  1223,
    1223,  1224,  1224,  1225,  1225,  1226,  1226,  1227,  1227,  1227,
    1227,  1227,  1227,  1227,  1227,  1227,  1227,  1227,  1227,  1228,
    1228,  1228,  1228,  1228,  1228,  1228,  1228,  1228,  1229,  1229,
    1229,  1229,  1230,  1230,  1230,  1231,  1231,  1232,  1232,  1233,
    1234,  1233,  1235,  1236,  1235,  1237,  1237,  1238,  1238,  1239,
    1239,  1240,  1240,  1240,  1241,  1242,  1242,  1243,  1244,  1244,
    1246,  1245,  1247,  1247,  1248,  1248,  1248,  1249,  1249,  1250,
    1250,  1251,  1252,  1252,  1252,  1253,  1253,  1253,  1253,  1253,
    1254,  1254,  1255,  1255,  1255,  1255,  1255,  1255,  1256,  1256,
    1256,  1256,  1256,  1257,  1257,  1257,  1257,  1257,  1258,  1258,
    1258,  1258,  1259,  1260,  1260,  1261,  1262,  1261,  1263,  1263,
    1263,  1264,  1266,  1265,  1267,  1267,  1268,  1268,  1270,  1269,
    1272,  1273,  1271,  1271,  1271,  1275,  1274,  1277,  1276,  1278,
    1279,  1276,  1276,  1276,  1276,  1276,  1276,  1280,  1276,  1276,
    1276,  1276,  1276,  1276,  1281,  1281,  1282,  1283,  1284,  1284,
    1285,  1286,  1286,  1287,  1287,  1288,  1288,  1289,  1289,  1289,
    1290,  1290,  1292,  1293,  1291,  1295,  1296,  1294,  1297,  1297,
    1297,  1297,  1298,  1298,  1299,  1299,  1300,  1301,  1301,  1301,
    1302,  1301,  1303,  1303,  1304,  1304,  1305,  1304,  1306,  1304,
    1307,  1307,  1308,  1308,  1309,  1310,  1310,  1311,  1311,  1313,
    1312,  1314,  1314,  1315,  1315,  1316,  1316,  1317,  1318,  1317,
    1320,  1321,  1319,  1322,  1322,  1323,  1324,  1324,  1325,  1326,
    1326,  1328,  1327,  1330,  1329,  1331,  1329,  1332,  1329,  1333,
    1333,  1334,  1334,  1335,  1335,  1336,  1336,  1337,  1337,  1337,
    1339,  1338,  1340,  1340,  1341,  1341,  1342,  1342,  1343,  1343,
    1343,  1343,  1343,  1343,  1343,  1343,  1343,  1344,  1344,  1346,
    1345,  1347,  1347,  1347,  1347,  1347,  1347,  1347,  1347,  1347,
    1347,  1347,  1347,  1348,  1347,  1349,  1347,  1347,  1347,  1347,
    1347,  1347,  1347,  1347,  1347,  1347,  1347,  1347,  1347,  1347,
    1347,  1347,  1347,  1347,  1347,  1347,  1347,  1347,  1347,  1347,
    1347,  1347,  1347,  1347,  1347,  1347,  1350,  1350,  1350,  1351,
    1351,  1352,  1352,  1353,  1353,  1354,  1354,  1355,  1355,  1356,
    1356,  1357,  1357,  1358,  1358,  1358,  1360,  1359,  1361,  1359,
    1362,  1362,  1362,  1362,  1362,  1363,  1363,  1364,  1364,  1364,
    1364,  1365,  1365,  1365,  1367,  1366,  1369,  1370,  1368,  1368,
    1371,  1371,  1372,  1371,  1373,  1373,  1374,  1374,  1374,  1374,
    1374,  1374,  1374,  1374,  1374,  1374,  1374,  1374,  1374,  1375,
    1375,  1377,  1376,  1378,  1378,  1380,  1379,  1379,  1379,  1381,
    1381,  1383,  1382,  1384,  1385,  1385,  1386,  1387,  1387,  1387,
    1388,  1390,  1391,  1392,  1393,  1389,  1394,  1394,  1395,  1395,
    1396,  1396,  1396,  1397,  1397,  1397,  1398,  1398,  1399,  1399,
    1400,  1400,  1400,  1400,  1401,  1401,  1402,  1402,  1403,  1403,
    1404,  1404,  1405,  1405,  1406,  1406,  1407,  1407,  1407,  1408,
    1408,  1409,  1409,  1410,  1410,  1411,  1411,  1412,  1413,  1413,
    1413,  1413,  1414,  1414,  1414,  1415,  1416,  1416,  1416,  1417,
    1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,  1417,  1418,
    1418,  1418,  1418,  1418,  1419,  1419,  1419,  1420,  1420,  1421,
    1421,  1422,  1423,  1423,  1424,  1424,  1425,  1425,  1425,  1426,
    1426,  1426,  1426,  1427,  1427,  1427,  1428,  1428,  1429,  1430,
    1430,  1431,  1432,  1433,  1434,  1435,  1435,  1436,  1436,  1437,
    1437,  1437,  1438,  1438,  1438,  1439,  1439,  1439,  1439,  1439,
    1439,  1439,  1439,  1439,  1439,  1439,  1439,  1439,  1439,  1439,
    1439,  1439,  1439,  1439,  1439,  1439,  1439,  1439,  1439,  1439,
    1439,  1439,  1439,  1439,  1439,  1439,  1439,  1439,  1439,  1439,
    1439,  1439,  1439,  1439,  1439,  1439,  1439,  1439,  1439,  1439,
    1439,  1439,  1439,  1439,  1439,  1440,  1440,  1440,  1440,  1440,
    1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,
    1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,
    1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,
    1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,
    1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,
    1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,
    1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,
    1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,
    1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,
    1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,
    1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,
    1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,
    1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,
    1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,
    1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,
    1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,
    1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,
    1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,
    1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,
    1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,
    1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,
    1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,
    1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,
    1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,
    1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,
    1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,
    1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,
    1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,
    1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,  1440,
    1440,  1440,  1440,  1440,  1440,  1440,  1442,  1441,  1444,  1443,
    1445,  1443,  1446,  1443,  1448,  1447,  1447,  1449,  1449,  1451,
    1450,  1452,  1450,  1454,  1453,  1453,  1455,  1455,  1455,  1456,
    1456,  1456,  1456,  1457,  1457,  1457,  1457,  1458,  1460,  1459,
    1459,  1459,  1459,  1459,  1459,  1459,  1459,  1461,  1461,  1461,
    1462,  1462,  1462,  1462,  1463,  1464,  1465,  1465,  1466,  1466,
    1466,  1466,  1467,  1467,  1467,  1468,  1468,  1468,  1468,  1468,
    1470,  1469,  1471,  1471,  1472,  1472,  1473,  1474,  1474,  1474,
    1474,  1476,  1475,  1477,  1477,  1478,  1477,  1479,  1479,  1480,
    1480,  1481,  1481,  1481,  1481,  1482,  1481,  1483,  1483,  1483,
    1483,  1483,  1484,  1485,  1485,  1485,  1485,  1485,  1486,  1487,
    1487,  1487,  1487,  1488,  1488,  1489,  1489,  1490,  1490,  1491,
    1491,  1493,  1492,  1494,  1492,  1495,  1492,  1496,  1492,  1492,
    1492,  1492,  1492,  1492,  1492,  1492,  1492,  1492,  1492,  1492,
    1492,  1492,  1492,  1492,  1492,  1492,  1492,  1492,  1492,  1492,
    1492,  1492,  1492,  1492,  1492,  1497,  1497,  1498,  1498,  1499,
    1499,  1499,  1500,  1500,  1500,  1500,  1501,  1501,  1502,  1502,
    1503,  1503,  1503,  1503,  1503,  1504,  1504,  1505,  1505,  1506,
    1507,  1507,  1507,  1507,  1507,  1508,  1508,  1509,  1509,  1510,
    1510,  1511,  1511,  1511,  1511,  1511,  1513,  1512,  1514,  1514,
    1515,  1515,  1515,  1516,  1516,  1516,  1517,  1517,  1518,  1519,
    1519,  1520,  1521,  1522,  1522,  1524,  1523,  1525,  1525,  1525,
    1526,  1526,  1528,  1527,  1529,  1529,  1530,  1530,  1530,  1531,
    1531,  1532,  1533,  1532,  1534,  1535,  1536,  1537,  1537,  1538,
    1538,  1539,  1539,  1539,  1539,  1539,  1539,  1539,  1539,  1540,
    1540,  1540,  1541,  1541,  1541,  1541,  1541,  1542,  1542,  1542,
    1542,  1542,  1542,  1543,  1543,  1544,  1545,  1546,  1546,  1546,
    1547,  1548,  1548,  1548,  1549,  1549,  1549,  1551,  1550,  1552,
    1552,  1553,  1553,  1555,  1554,  1557,  1556,  1556,  1558,  1558,
    1560,  1559,  1561,  1561,  1561,  1561,  1563,  1564,  1565,  1562,
    1566,  1566,  1568,  1569,  1570,  1571,  1572,  1567,  1574,  1575,
    1576,  1577,  1573,  1578,  1578,  1578,  1578,  1578,  1578,  1579,
    1579,  1579,  1580,  1580,  1581,  1581,  1581,  1582,  1582,  1583,
    1584,  1583,  1585,  1585,  1586,  1587
};

/* YYR2[YYN] -- Number of symbols composing right hand side of rule YYN.  */
static const yytype_uint8 yyr2[] =
{
       0,     2,     1,     0,     4,     2,     0,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     3,     1,     1,     4,     1,     2,     0,     4,
       0,     2,     3,     1,     2,     0,     3,     0,     5,     1,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     5,
       3,     1,     0,     1,     3,     1,     3,     3,     3,     3,
       0,     7,     0,     0,    14,     0,     0,    14,     0,     0,
      14,     0,     6,     0,     3,     4,     4,     3,     2,    10,
       1,     3,     2,     2,     2,     2,     2,     2,     2,     0,
      13,     0,     6,     2,     0,     1,     3,     1,     0,     2,
       0,     2,     0,     1,     3,     4,     0,     2,     0,     2,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     0,     3,     1,     0,     2,     0,     2,
       2,     2,     2,     2,     3,     3,     1,     1,     1,     2,
       3,     3,     0,     4,     0,     3,     0,     1,     3,     1,
       0,     1,     3,     1,     0,     3,     0,     1,     3,     1,
       4,     0,     1,     1,     1,     0,     3,     2,     3,     0,
       3,     0,     5,     5,     0,     7,     0,     6,     1,     1,
       1,     3,     1,     1,     1,     3,     0,     1,     1,     1,
       1,     2,     1,     3,     1,     1,     0,     1,     0,     2,
       3,     5,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     3,     4,     0,
       1,     1,     3,     1,     3,     3,     1,     2,     1,     1,
       1,     1,     3,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     3,     0,
       0,     3,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     0,     5,     0,     2,     0,
       3,     0,     2,     2,     2,     2,     0,     6,     2,     0,
       2,     1,     1,     3,     0,     0,     0,     7,     0,     2,
       2,     1,     1,     0,     0,     8,     0,     6,     1,     2,
       1,     2,     0,     0,     6,     0,     0,     6,     0,     2,
       0,     5,     0,     1,     0,     5,     0,     2,     0,     5,
       4,     0,     0,     8,     0,     0,     8,     1,     1,     1,
       1,     1,     2,     4,     5,     0,     4,     4,     4,     3,
       3,     2,     2,     0,     2,     1,     2,     3,     1,     1,
       1,     0,     1,     1,     2,     3,     1,     1,     1,     1,
       1,     1,     1,     1,     0,     1,     1,     2,     3,     1,
       1,     1,     1,     1,     0,     1,     1,     2,     3,     1,
       1,     1,     1,     1,     1,     1,     0,     1,     1,     2,
       3,     1,     1,     1,     2,     2,     2,     1,     1,     1,
       1,     2,     3,     3,     3,     3,     3,     3,     3,     3,
       4,     1,     1,     1,     1,     2,     3,     2,     4,     5,
       0,     5,     0,     0,     5,     0,     7,     1,     0,     1,
       0,     4,     0,     0,     3,     5,     6,     0,     4,     2,
       2,     2,     2,     0,     1,     0,     3,     0,     1,     1,
       3,     1,     4,     5,     5,     0,     2,     0,     0,     7,
       0,    10,     1,     3,     1,     1,     0,     2,     0,     3,
       1,     3,     0,     6,     1,     0,     0,     5,     0,     4,
       1,     1,     1,     3,     1,     3,     0,     0,     5,     1,
       3,     1,     1,     0,     3,     1,     3,     0,     4,     1,
       0,     1,     2,     1,     3,     4,     3,     3,     3,     4,
       4,     3,     0,     0,     6,     0,     1,     0,     1,     1,
       2,     1,     1,     0,     1,     1,     2,     1,     0,     3,
       0,     1,     1,     2,     1,     2,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     0,     6,     1,     1,
       3,     4,     4,     2,     2,     2,     3,     3,     4,     4,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     2,     1,     1,     1,     1,     1,     1,     3,
       1,     1,     2,     2,     7,     8,     8,     8,     8,     2,
       0,     1,     4,     0,     1,     2,     0,     4,     3,     3,
       3,     1,     2,     1,     1,     3,     2,     3,     2,     2,
       1,     3,     3,     2,     3,     1,     2,     2,     2,     1,
       2,     1,     1,     1,     2,     3,     2,     3,     2,     2,
       3,     3,     3,     0,     6,     0,     6,     2,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     2,
       2,     1,     2,     1,     2,     3,     2,     1,     1,     1,
       1,     1,     1,     1,     2,     0,     1,     1,     5,     0,
       3,     0,     2,     3,     0,     1,     2,     1,     1,     1,
       1,     3,     3,     3,     3,     0,     1,     0,     1,     0,
       1,     2,     1,     1,     2,     2,     3,     1,     3,     2,
       1,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     1,     1,     2,     1,     1,     1,     1,     1,
       0,     2,     1,     1,     1,     1,     1,     0,     2,     1,
       1,     0,     1,     1,     2,     2,     1,     2,     2,     0,
       1,     1,     1,     3,     1,     3,     0,     1,     0,     4,
       1,     1,     1,     0,     1,     2,     1,     1,     2,     1,
       3,     3,     1,     1,     0,     2,     0,     1,     5,     0,
       3,     3,     1,     0,     2,     2,     2,     0,     3,     3,
       6,     6,     1,     1,     2,     2,     2,     1,     2,     2,
       1,     1,     0,     1,     1,     1,     1,     0,     1,     1,
       1,     0,     1,     2,     0,     1,     0,     1,     0,     1,
       1,     2,     1,     2,     1,     2,     2,     2,     3,     2,
       1,     1,     1,     1,     3,     1,     1,     1,     4,     2,
       1,     4,     0,     1,     0,     2,     1,     3,     0,     6,
       0,     5,     7,     0,     5,     0,     5,     0,     5,     0,
       4,     0,    10,     3,     4,     3,     3,     7,     4,     3,
       5,     0,     3,     1,     4,     0,     3,     0,     2,     0,
       1,     0,     2,     2,     2,     2,     1,     1,     1,     3,
       4,     0,     6,     4,     0,     5,     0,     6,     4,     3,
       1,     7,     3,     1,     1,     0,     5,     0,     3,     2,
       0,     5,     0,     0,     6,     1,     3,     1,     1,     3,
       2,     3,     2,     4,     0,     6,     0,     0,     8,     4,
       4,     3,     3,     2,     2,     6,     5,     3,     5,     1,
       1,     1,     1,     1,     0,     1,     1,     2,     2,     3,
       3,     3,     3,     0,     1,     0,     1,     0,     1,     1,
       0,     2,     1,     0,     1,     1,     1,     0,     6,     3,
       3,     0,     1,     1,     3,     3,     2,     2,     4,     0,
       3,     0,     3,     0,     3,     0,     3,     0,     1,     1,
       3,     1,     1,     0,     2,     1,     3,     3,     3,     1,
       0,     5,     0,     1,     1,     0,     6,     0,     1,     1,
       2,     1,     1,     1,     0,     5,     2,     0,     5,     0,
       1,     1,     2,     1,     1,     1,     1,     1,     2,     0,
       5,     0,     1,     1,     0,     4,     4,     3,     5,     1,
       3,     3,     0,     6,     1,     1,     1,     3,     2,     3,
       1,     1,     0,     6,     1,     1,     1,     3,     3,     4,
       0,     6,     0,     2,     0,     4,     0,     2,     1,     2,
       4,     2,     3,     2,     3,     0,     3,     0,     0,     6,
       2,     1,     1,     2,     2,     8,     4,     0,     1,     2,
       1,     1,     1,     1,     0,     2,     4,     3,     1,     1,
       3,     4,     0,     0,     0,     2,     2,     1,     1,     0,
       2,     3,     3,     3,     2,     3,     4,     3,     4,     3,
       4,     1,     3,     4,     3,     3,     6,     1,     5,     6,
       5,     7,     6,     8,     5,     6,     4,     4,     5,     3,
       4,     1,     3,     3,     3,     3,     3,     3,     5,     5,
       3,     3,     3,     3,     3,     3,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     3,     1,
       1,     1,     1,     3,     2,     2,     2,     2,     3,     3,
       5,     6,     4,     4,     7,     2,     6,     5,     6,     6,
       4,     4,     5,     4,     6,     2,     4,     4,     4,    10,
       6,     8,     6,     4,     4,     6,     4,     4,     4,     6,
       4,     7,     7,     7,     6,     6,     6,     6,     3,     4,
       6,     8,     2,     2,     8,     8,     6,     6,     1,     6,
       6,     8,     8,     6,     8,     6,     2,     8,     8,     2,
       2,     2,     4,     4,     4,     4,     3,     8,     6,     8,
       4,     6,     4,     4,     4,     6,     8,     4,     3,     6,
       4,     6,     5,     8,     7,    10,     1,     6,     4,     4,
       4,     4,     4,     6,     4,     0,     5,     6,     2,     3,
       0,     4,     0,     3,     0,     1,     1,     3,     4,     4,
       5,     4,     4,     4,     5,     4,     0,     0,     7,     4,
       5,     4,     5,     4,     4,     4,     4,     4,     5,     0,
       8,     0,     3,     3,     1,     4,     0,     1,     0,     2,
       0,     1,     0,     3,     2,     3,     2,     1,     2,     1,
       2,     1,     2,     2,     2,     0,     1,     1,     3,     1,
       3,     1,     3,     0,     1,     0,     2,     4,     5,     1,
       1,     1,     1,     4,     1,     3,     3,     3,     0,     6,
       0,     6,     0,     8,     4,     0,     8,     0,    10,     6,
       0,     8,     0,    10,     6,     1,     2,     2,     0,     1,
       5,     0,     5,     3,     5,     2,     0,     0,     7,     1,
       0,     0,     6,     0,     3,     0,     0,     5,     0,     1,
       0,     1,     0,     2,     3,     3,     1,     1,     0,     7,
       0,     7,     1,     2,     0,     0,     2,     0,     2,     0,
       1,     1,     1,     1,     3,     1,     3,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     0,     1,     1,     0,     2,     0,     1,     0,
       0,     3,     0,     0,     3,     2,     0,     0,     4,     4,
       2,     0,     1,     1,     3,     3,     1,     2,     0,     1,
       0,     4,     4,     2,     0,     1,     1,     0,     1,     0,
       1,     2,     1,     3,     3,     1,     1,     1,     1,     1,
       0,     2,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     0,     0,     6,     0,     1,
       3,     1,     0,     2,     3,     1,     2,     1,     0,     3,
       0,     0,     7,     2,     1,     0,     3,     0,     7,     0,
       0,     8,     4,     6,     4,     4,     4,     0,     6,     4,
       4,     4,     5,     4,     1,     3,     1,     2,     1,     3,
       1,     0,     2,     0,     1,     0,     1,     1,     2,     3,
       1,     1,     0,     0,     8,     0,     0,     6,     0,     1,
       1,     1,     1,     1,     2,     1,     1,     1,     3,     4,
       0,     3,     3,     1,     2,     2,     0,     3,     0,     5,
       3,     1,     3,     1,     3,     1,     1,     0,     1,     0,
       4,     0,     1,     3,     1,     1,     1,     0,     0,     6,
       0,     0,    11,     3,     1,     3,     3,     1,     3,     0,
       1,     0,     4,     0,     7,     0,     5,     0,     6,     1,
       3,     2,     4,     0,     2,     0,     2,     1,     1,     1,
       0,     4,     0,     1,     0,     1,     1,     3,     1,     1,
       2,     2,     2,     1,     1,     1,     1,     0,     3,     0,
       3,     2,     4,     4,     3,     4,     4,     1,     3,     3,
       6,     2,     2,     0,     6,     0,     6,     5,     2,     1,
       5,     5,     2,     2,     1,     4,     3,     2,     3,     2,
       2,     1,     3,     4,     3,     3,     2,     2,     3,     3,
       3,     3,     3,     3,     3,     3,     1,     1,     1,     1,
       1,     0,     1,     0,     2,     0,     1,     1,     1,     0,
       2,     0,     2,     0,     2,     2,     0,     4,     0,     4,
       1,     1,     1,     1,     1,     1,     1,     0,     1,     1,
       3,     0,     1,     1,     0,     4,     0,     0,     5,     1,
       0,     3,     0,     3,     3,     1,     2,     2,     2,     2,
       2,     2,     2,     1,     1,     1,     1,     1,     1,     0,
       1,     0,     3,     3,     1,     0,     3,     1,     2,     0,
       1,     0,     3,     3,     2,     2,     3,     0,     1,     1,
       2,     0,     0,     0,     0,    22,     1,     1,     0,     1,
       0,     1,     1,     0,     1,     1,     0,     2,     2,     1,
       3,     4,     3,     3,     0,     2,     2,     1,     3,     3,
       0,     4,     0,     3,     1,     1,     0,     3,     2,     3,
       1,     1,     2,     0,     2,     3,     1,     5,     1,     1,
       2,     2,     1,     1,     1,     1,     1,     2,     2,     1,
       1,     1,     1,     1,     1,     1,     1,     2,     2,     1,
       1,     1,     1,     1,     2,     2,     2,     1,     1,     3,
       5,     1,     1,     1,     1,     1,     3,     4,     5,     1,
       5,     3,     2,     1,     3,     2,     2,     4,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     3,     2,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     0,     3,     0,     3,
       0,     3,     0,     3,     0,     3,     2,     0,     2,     0,
       2,     0,     4,     0,     3,     1,     1,     1,     1,     0,
       1,     1,     1,     0,     2,     2,     2,     3,     0,     4,
       4,     6,     2,     3,     3,     3,     5,     1,     3,     3,
       1,     1,     3,     3,     1,     3,     2,     2,     2,     2,
       2,     1,     1,     4,     4,     1,     1,     1,     1,     1,
       0,     4,     1,     1,     1,     3,     3,     1,     1,     2,
       2,     0,     3,     4,     3,     0,     7,     1,     2,     1,
       1,     1,     1,     1,     1,     0,     5,     1,     1,     1,
       1,     1,     3,     6,     6,     6,     7,     5,     3,     8,
       8,     8,     6,     0,     1,     1,     2,     0,     1,     1,
       3,     0,     3,     0,     3,     0,     3,     0,     3,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       2,     2,     1,     3,     2,     2,     2,     2,     2,     2,
       2,     2,     1,     1,     2,     0,     1,     3,     1,     2,
       2,     2,     1,     3,     3,     1,     1,     3,     1,     3,
       4,     5,     4,     6,     1,     0,     3,     3,     1,     1,
       0,     2,     2,     2,     2,     0,     2,     0,     3,     2,
       1,     2,     2,     2,     2,     2,     0,     3,     0,     1,
       0,     3,     2,     0,     1,     2,     0,     1,     4,     4,
       5,     2,     3,     0,     1,     0,     4,     0,     1,     1,
       0,     1,     0,     2,     2,     1,     0,     1,     1,     2,
       3,     2,     0,     6,     3,     0,     0,     0,     1,     2,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     2,
       2,     3,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     0,     3,     1,     2,     1,
       2,     3,     3,     3,     0,     3,     3,     0,     7,     0,
       3,     1,     3,     0,     3,     0,     3,     4,     1,     3,
       0,     3,     0,     3,     4,     4,     0,     0,     0,    16,
       8,     7,     0,     0,     0,     0,     0,    15,     0,     0,
       0,     0,    12,     4,     4,     3,     4,     3,     2,     1,
       3,     5,     1,     1,     0,     1,     1,     0,     2,     0,
       0,     3,     0,     2,     5,     3
};

/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
   means the default is an error.  */
static const yytype_uint16 yydefact[] =
{
       0,  2595,  1081,  2526,     0,     0,     0,     0,     0,     0,
    2528,   123,    63,  1701,  1815,  1816,  1605,  1633,     2,     0,
    1081,   269,   173,     0,    75,  1642,     0,  1867,     0,     0,
    1081,   483,     0,  1861,     0,     0,  1081,  1645,  1851,   246,
     173,  2528,     0,  1127,  2336,  1739,     0,     0,     0,  1722,
       0,  2411,  1690,     0,     0,     0,     0,     3,     8,    19,
       0,    39,    24,    29,    14,    18,    13,    52,    46,    26,
      37,    10,    54,    55,    16,    43,    11,    12,    15,    35,
      42,    36,    38,    50,  1118,    22,    23,    30,    44,    59,
      20,    56,    53,    21,  1817,    25,    45,    40,    32,    60,
      33,    51,    34,    58,    28,    47,    27,     9,    17,    48,
      49,    41,    61,    31,    57,     0,   929,     0,     0,  1006,
       0,     0,     0,     0,   173,     0,   909,  2593,  2594,  2595,
    1083,  1082,     0,  2528,  1972,  1066,  1092,  2035,  2036,  2037,
    2038,  2039,  2040,  2041,  2042,  1986,  2043,  2045,  2044,  2046,
    2047,  1987,  1988,  2048,  2049,  2050,  2052,  2051,  2053,  1989,
    1990,  2054,  2055,  2056,  2057,  1991,  1992,  2058,  2060,  2059,
    1993,  2061,  2062,  2063,  2066,  2065,  2064,  1994,  2067,  1995,
    2068,  2069,  2070,  2071,  2072,  2073,  2074,  2076,  2075,  1996,
    2077,  2078,  2079,  2080,  2081,  2083,  2082,  2084,  2085,  2086,
    1997,  2087,  2088,  2089,  2090,  2091,  2092,  2093,  2094,  2095,
    1998,  2096,  2097,  2098,  2118,  1999,  2099,  2102,  2101,  2100,
    2103,  2104,  2105,  2107,  2106,  2108,  2109,  2000,  2110,  2111,
    2112,  2113,  2114,  2116,  2115,  2120,  2121,  2122,  2001,  2002,
    2117,  2119,  2316,  2123,  2125,  2124,  2126,  2128,  2127,  2003,
    2129,  2004,  2005,  2130,  2131,  1969,  2132,  1970,  2133,  2135,
    2136,  2137,  2142,  2006,  2134,  2138,  2139,  2140,  2141,  2143,
    2007,  2144,  2145,  2146,  2147,  2148,  2149,  2150,  2151,  2152,
    2153,  2175,  2164,  2166,  2157,  2159,  2160,  2162,  2158,  2165,
    2163,  2169,  2168,  2170,  2171,  2172,  2173,  2174,  2167,  2155,
    2161,  2156,  2176,  2177,  2154,  2178,  2179,  2180,  2181,  2182,
    2183,  2184,  2185,  2186,  2187,  2188,  2190,  2189,  2191,  2192,
    2193,  2194,  2195,  2196,  2198,  2197,  2199,  2200,  2201,  2203,
    2202,  2205,  2206,  2008,  2204,  2207,  2208,  2209,  2210,  2211,
    2212,  2009,  2010,  2011,  2213,  2214,  2012,  2215,  2217,  2216,
    2218,  2219,  2220,  2221,  2222,  2223,  2224,  2013,  2014,  2225,
    2226,  2227,  2228,  2229,  2230,  2231,  2232,  2233,  2234,  2235,
    2236,  2237,  2238,  2240,  2239,  2241,  2242,  2243,  2244,  2245,
    2246,  2247,  2015,  2248,  2016,  2249,  2250,  2017,  2251,  2018,
    2252,  2253,  2254,  2255,  2019,  2256,  2257,  2258,  2260,  2261,
    2259,  2262,  2020,  2263,  2264,  2265,  2021,  2267,  2266,  2268,
    2022,  2270,  2271,  2023,  2269,  2025,  2272,  2273,  2024,  2026,
    2274,  2275,  2276,  2277,  2278,  2280,  2279,  2281,  2282,  2283,
    2027,  2284,  2285,  2286,  2287,  2028,  2288,  2289,  2290,  2291,
    2292,  2294,  2293,  2295,  2296,  2297,  2298,  2300,  2302,  2301,
    2299,  2303,  2304,  2305,  2306,  2309,  2310,  2311,  2312,  2307,
    2308,  2029,  2313,  2314,  2315,  2317,  2318,  2320,  2319,  2030,
    2031,  2321,  2322,  2034,  2323,  2324,  2327,  2325,  2326,  2329,
    2328,  2330,  2332,  2331,  2032,  2333,  2033,  2334,  2335,   192,
    1975,   175,  1976,  1985,     0,  2403,  2402,  1050,  1067,  2529,
    2530,   578,   859,     0,     0,   860,     0,   577,   858,   173,
    2595,   128,     0,   574,   575,     0,     0,     0,  1715,     0,
    1631,  1631,  1631,     0,     0,  1631,  1631,     0,  1634,  1631,
     173,  1631,     0,    68,  1824,   270,     0,     0,     0,     0,
       0,  1968,     0,  1648,     0,  1868,  1869,     0,  1876,     0,
    1877,  1871,  2400,     0,     0,     0,     0,     0,   173,  1084,
       0,  1699,     0,   236,   245,   247,   248,   244,     0,  2530,
    2541,  1119,  1125,  1137,     0,  1795,   248,  1037,  1021,  1037,
    1723,  1720,     0,     0,  1699,  1870,  2652,     0,     0,     0,
    2648,     0,  2653,     0,  1127,     0,     0,     1,     5,     0,
       0,  2113,  2002,  2217,  1808,  1806,  1963,     0,   900,   930,
       0,   905,     0,   903,  1981,  1980,  1979,     0,   916,   915,
     913,     0,   447,     0,     0,     0,  2604,   907,  1064,  2527,
       0,   194,     0,    77,     0,     0,     0,  2533,     0,     0,
       0,     0,   127,     0,     0,     0,   124,  1152,  1152,  2595,
    2597,  2599,   578,   576,     0,     0,     0,  1719,  1718,  1717,
       0,  1715,  2036,  1986,  2047,     0,  1936,     0,     0,     0,
    1403,     0,  1991,     0,  2061,  2063,  1996,     0,     0,  1159,
    1159,   731,     0,     0,     0,  2085,  2086,  1942,     0,     0,
       0,  1933,  1943,  2002,  2125,  2126,     0,  1935,  2131,     0,
       0,     0,     0,  2148,  1940,     0,     0,  2185,  2187,     0,
       0,  2191,  2192,  2193,  2194,  1919,  1214,     0,   731,  1932,
    1939,  2210,  1925,  2218,  2223,  2224,     0,  2233,     0,     0,
    2255,     0,  2261,  2259,  2265,     0,     0,  2291,     0,     0,
     731,  1918,  2309,  2310,  2311,  2312,     0,  1934,  2029,  1941,
       0,  2323,  1159,   731,   731,     0,     0,     0,  2330,  2332,
    2335,     0,     0,     0,  2565,  1213,     0,  1371,     0,  1288,
    1397,  1171,  1177,  1191,     0,  1206,  1224,  1225,  1227,  1326,
    1226,  1232,  1231,  1606,  1929,  1230,  1229,  1930,  1931,  1223,
    1953,  1975,  1952,     0,     0,     0,     0,     0,     0,     0,
       0,  1635,     0,     0,  1617,  1631,    70,     0,     0,  2447,
    2462,  2463,  2459,  2464,  2482,  2465,  2469,     0,  2461,  2453,
       0,  2468,     0,  2457,  2466,     0,  2451,     0,  2467,  2472,
    2483,  2455,  2460,  2438,     0,  2445,  2449,  1965,  1512,  2414,
    2415,     0,    76,  1650,  1651,  1649,  1005,     0,  1866,     0,
    1880,     0,  1079,   493,   484,     0,  1790,  1789,     0,  1862,
    2542,     0,     0,  1055,  1653,  1700,     0,  1652,  1857,     0,
    1855,  1852,  1854,   237,     0,     0,   267,  2447,     0,  2432,
       0,  2536,  2533,  2543,  2578,  2573,  2572,  2575,  2576,  1143,
    2577,  1142,  2574,  2571,  1152,  1138,  1140,  1141,   775,     0,
       0,  2356,  2357,  2198,  2218,  2358,  2307,     0,     0,  2377,
    2337,  2342,  2338,     0,     0,   775,  1803,     0,     0,  1803,
       0,  1547,  1793,  1796,     0,  2360,  1771,   856,   855,   854,
    2361,  1789,     0,  1747,  1759,     0,  1724,  1764,     0,  2362,
       0,  1792,     0,  1547,  1803,     0,  1740,     0,     0,     0,
       0,   243,  1042,  1041,  1017,  1038,  1039,     0,     0,  1020,
    1022,  1023,  1019,     0,  2665,  2412,  1005,  1924,  1923,  1973,
    2649,  1922,  2657,  2659,  2645,  2647,  2654,  1121,     0,  2547,
       6,    62,     0,     0,  1821,  2602,  2603,  2601,   791,     0,
    1159,  1982,  2596,   176,   914,     0,   448,   176,     0,     0,
       0,     0,     0,   449,   450,   382,   918,     0,   898,   911,
       0,     0,   910,  2604,     0,     0,  1094,  1096,  1095,  1112,
     196,   193,   174,     0,  1052,  1624,  1626,  1069,  2532,     0,
       0,  2534,  2538,  1212,  1211,     0,   121,   126,     0,     0,
       0,  2504,   125,  2498,  2600,  1152,  1152,  1152,  2592,     0,
    2580,  2587,  2588,  2591,  2590,  2589,  2586,     0,  2579,  2582,
    2583,  2585,  2584,  2604,  2598,     0,   861,   861,   861,     0,
    1702,  1705,  1709,  1713,  1716,     0,     0,  1517,  1245,  1517,
    1517,  1517,  1404,     0,     0,     0,     0,     0,     0,     0,
       0,  1517,     0,  1282,  1255,     0,  1283,     0,     0,     0,
    1944,     0,     0,     0,  2565,     0,     0,     0,     0,  1376,
       0,     0,     0,  2565,     0,     0,     0,     0,     0,  1399,
    1401,  1952,  1517,     0,     0,  1517,     0,     0,     0,     0,
       0,  1164,   771,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1517,  1517,     0,     0,
    1517,  1296,  1946,     0,     0,     0,  1945,     0,     0,     0,
    1938,  1937,  1920,     0,  1299,  1301,  1300,     0,  1517,  1517,
       0,     0,     0,  1235,  1234,  1236,     0,     0,     0,     0,
       0,     0,  1210,  1209,  1208,  1207,     0,     0,     0,  1215,
       0,  1216,  1217,     0,  1218,  1219,  1220,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1237,     0,     0,     0,
    1921,  1335,     0,  1632,  1612,  1619,  1614,     0,  1635,  1615,
    1623,   462,   461,  1640,  1641,  1621,  1636,  1637,     0,  1620,
    2496,  1616,     0,  1607,     0,    69,     0,  1847,     0,     0,
       0,  1843,  1845,  1844,     0,     0,  1848,     0,  1846,  1825,
    1829,  1835,  1826,     0,     0,   268,   271,   273,     0,   276,
    2448,  2446,  2480,  2479,  2484,     0,  2481,  2477,  2470,  2505,
    2474,     0,  2505,  2476,  2475,  2505,  2471,  2478,  2505,  2443,
       0,  1513,  1514,     0,  2413,     0,  1964,     0,     0,  1102,
    1881,  1882,  1878,  1512,  2401,  2404,     0,   494,     0,     0,
     505,     0,     0,    65,    66,     0,  1086,     0,  1085,  1089,
       0,     0,     0,  1656,  1646,  1655,  1438,  1858,  1859,     0,
     235,   260,   255,   263,   257,   259,   258,   264,   265,   266,
     261,   256,   262,   249,     0,  2446,     0,  2443,  2537,     0,
    2539,  2556,  1126,  2544,  1149,  1128,  1148,     0,  1139,   774,
       0,   777,   779,  1675,  1676,   778,   787,     0,   776,     0,
       0,     0,  2363,     0,   783,   785,   784,  2372,   782,     0,
       0,  2347,  2368,  1799,     0,     0,  1770,     0,   578,     0,
       0,     0,     0,     0,     0,  1741,     0,     0,   621,     0,
    1763,  1548,  1797,  1798,  1803,     0,     0,  1803,     0,  1776,
    1793,     0,  1803,  1736,     0,     0,  1728,  1733,  1729,     0,
    1735,  1734,  1737,  1725,  1726,  1799,  1752,  1777,  1793,  1762,
    1769,     0,  1751,  1758,     0,  1767,  1793,  1793,  1803,  1803,
    1043,     0,  1026,  1027,     0,     0,  1721,  1441,     0,     0,
    2646,  2660,  2644,  2655,  2656,  2643,  1122,  2548,  1120,  2549,
       0,     7,     4,  1820,  1810,  1811,  1812,  1813,  1814,  1809,
    1807,  1822,  1823,   792,   791,   569,   572,   571,     0,     0,
    1984,     0,   906,     0,   436,   904,     0,     0,   414,   393,
     414,   451,     0,     0,   791,   921,     0,     0,   908,  1065,
       0,     0,   482,  1112,  1098,  1114,     0,   197,   199,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    78,    79,   101,  1054,  1053,     0,  1051,
    1077,  1076,  1074,     0,  1075,  1073,  1068,  1070,  1071,  2531,
    2535,   579,   791,   424,     0,   385,     0,     0,     0,     0,
       0,   578,     0,     0,  2581,   110,   862,     0,     0,     0,
    1707,  1628,  1438,  1630,  1963,     0,     0,     0,  1711,     0,
       0,  1518,  1517,     0,  1382,     0,     0,     0,     0,  1405,
       0,     0,     0,     0,     0,     0,     0,  1356,     0,  1382,
    1160,     0,   732,  1306,     0,     0,     0,     0,     0,     0,
    1488,  1489,  1490,  1491,  1499,  1492,  1493,  1494,  1501,  1506,
    1495,  1496,  1502,  1503,  1504,  1497,  1505,  1500,  1498,  1507,
       0,  1487,     0,     0,  1511,  1508,  1510,  1509,     0,  1377,
    1369,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1517,     0,     0,     0,  1517,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1318,     0,     0,     0,     0,     0,
    1517,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1278,     0,  1955,  1954,     0,     0,     0,   824,     0,
    1239,     0,  1238,  1450,     0,  2550,  2566,     0,  2363,  1372,
    1374,     0,  1162,  1161,  1163,  1174,  1167,  1172,  1165,  1169,
       0,  1221,  2042,  1175,     0,     0,  1203,  2565,  1526,  1204,
    1189,  1194,  1195,     0,  1192,  1193,     0,  1197,     0,  1196,
    1200,  1201,  1202,  1205,     0,     0,     0,     0,  1228,  1233,
    1398,  1152,  1956,     0,  1609,  1622,  1791,  1638,  1677,     0,
    1007,     0,     0,    71,    73,  1840,  1837,  1836,  1838,  1842,
    1841,  1839,     0,  1849,  2085,  2309,  2312,   280,     0,   253,
     252,   254,   277,     0,     0,  2473,     0,  2454,     0,  2458,
    2452,  2456,     0,     0,  2444,     0,  2450,  1516,  2121,  2202,
       0,  1519,  2417,  1643,  2664,     0,  1879,     0,     0,     0,
    1080,     0,  1152,   492,   491,   490,   489,     0,   507,   487,
     495,    67,     0,     0,  1863,     0,     0,     0,     0,  1057,
    1654,     0,     0,  1627,  1439,  1860,  1856,  1853,     0,     0,
       0,     0,     0,     0,     0,  2540,  2558,  2557,  2545,  1152,
    1538,  1153,  1153,  1952,  2379,     0,  2374,  2373,     0,     0,
       0,  2392,  2375,     0,     0,  2341,  2380,  2381,  2384,     0,
       0,     0,     0,     0,  2378,  2307,  2343,  2344,     0,  2349,
    2339,     0,     0,  1801,  1804,  1805,     0,     0,  1785,  1779,
    1778,  1774,  1780,  1775,  1788,  1787,  1786,  1749,  1748,  1558,
    1559,  1557,  1551,  1552,  1556,  1555,  1744,  1794,  1784,  1782,
    1772,  1803,  1783,  1781,  1730,  1731,  1732,     0,  1547,     0,
    1801,  1803,  1793,     0,  1803,  1803,  1766,  1768,     0,  1029,
    1040,  1025,  1024,  1459,  1458,     0,  1412,     0,  1414,  1411,
    1410,  1409,     0,  1458,  2650,  2658,  2662,     0,  1547,  2555,
    2553,   570,  1677,  1677,     0,  1983,     0,     0,     0,     0,
       0,     0,     0,   177,   186,     0,     0,   391,   392,  1677,
     390,   437,   438,   441,   442,   443,     0,     0,     0,     0,
       0,     0,     0,     0,   130,   444,  1677,  1677,   387,   415,
     416,   419,   420,   421,   422,   423,   383,     0,   388,     0,
     919,  1003,  1677,  1003,     0,  1677,  1677,  1003,  1677,     0,
       0,  1677,  1677,     0,     0,  1677,     0,     0,  1003,     0,
    1677,     0,   990,     0,     0,  1677,  1677,  1677,  1677,  1677,
    1003,     0,     0,  1677,   482,  1677,     0,     0,  1013,     0,
       0,  1677,  1677,  1677,  1677,     0,     0,  1677,     0,  1677,
     937,   989,   582,   608,   609,   899,   936,   938,   950,   478,
       0,   968,   992,   993,   991,     0,   923,   925,  2605,  2606,
    2607,  1101,  1093,  1100,  1097,  1112,  1110,  1099,   851,   850,
       0,  1113,   195,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1625,
    1078,  1072,   122,   791,  1677,  1677,  1677,  1677,   389,   425,
     426,   429,   430,   431,   432,   435,   433,   434,     0,     0,
     401,     0,     0,  2499,     0,  2638,     0,     0,     0,   175,
     580,     0,     0,   863,     0,     0,     0,     0,     0,  1703,
       0,  1966,  1710,  1441,  1714,  1713,     0,  1302,     0,  1349,
       0,  1351,  1352,  1353,     0,     0,     0,     0,     0,  1303,
       0,  1253,  1304,  1305,     0,     0,     0,     0,  1355,     0,
     733,     0,     0,  1256,  1257,  1250,  1242,     0,     0,  1328,
       0,     0,  1258,     0,     0,     0,     0,     0,  1329,  1400,
       0,  1402,  1956,     0,  1361,  1310,  1263,     0,  1359,     0,
    1264,  1330,  1331,  1332,  1312,  1313,     0,  1334,     0,  1314,
       0,     0,  1317,     0,     0,  1266,  1365,  1363,     0,     0,
       0,     0,  1367,  1268,     0,     0,     0,  1267,     0,     0,
       0,     0,     0,     0,     0,  1270,     0,  1251,  1364,  1366,
    1320,     0,     0,     0,     0,     0,  1279,     0,  2559,  1449,
    2567,  1450,     0,     0,  2561,  2551,  2556,  2564,  1243,     0,
       0,  1957,  1168,  1173,  1166,  1170,  2565,     0,     0,     0,
       0,  1187,  1186,     0,     0,     0,  2565,  1526,  1190,     0,
       0,  1345,  1346,  1395,     0,  1613,  1610,  1639,  1678,     0,
    2497,  1009,  1008,  1618,  1007,    74,     0,  1834,  1850,  1827,
       0,   272,   281,   274,   278,   279,   275,  2509,     0,  2508,
       0,  2492,  2495,  1963,     0,     0,     0,  2427,  2421,  2428,
    2430,  2424,  2429,  2431,  2422,  2423,  2418,  2425,  1520,  1549,
       0,  1103,  1105,  1106,  1104,  1112,     0,     0,  2407,  2408,
    2406,  2405,   497,     0,  1583,  1584,  1569,  1570,  1568,  1571,
     506,  1572,  1582,     0,   518,     0,     0,     0,  1865,  1864,
       0,  1087,  1090,  1091,  1062,  1061,  1063,  1056,  1058,  1059,
     562,  1660,     0,     0,     0,  1666,  1647,  1657,     0,     0,
     250,     0,     0,     0,     0,     0,     0,  1147,  1441,  1598,
    1144,  1132,  1549,  1539,  1131,  1154,  1150,     0,   790,   789,
     788,   786,     0,     0,     0,     0,  2386,  2387,     0,     0,
    2364,  2365,  2366,     0,  2370,  2346,  2347,     0,  2348,     0,
    2398,  2399,  2396,  2397,  2395,  2369,  1800,     0,  1753,     0,
    1773,     0,     0,  1746,     0,  1765,  1727,  1755,  1745,  1519,
    1793,  1742,  1743,     0,  1049,     0,  1045,  1044,     0,  1018,
    1031,  1458,  1441,     0,     0,  1435,  1460,     0,  1460,  1441,
    1441,     0,  1441,  1438,  1455,     0,     0,  2661,  1540,  2554,
       0,     0,   902,   180,   183,   181,     0,   182,     0,     0,
     446,   445,     0,  1791,   439,   134,   133,   135,   136,  1566,
    1567,  1563,  1564,  1562,  1565,   138,   137,   132,   917,     0,
       0,     0,  1791,   417,   394,   395,   398,   399,   400,     0,
    1004,   892,  1081,   972,     0,   654,   892,   847,   852,   852,
     970,     0,     0,  1081,     0,     0,     0,     0,     0,  1081,
       0,     0,     0,  1677,     0,   983,   932,     0,     0,     0,
       0,     0,   984,     0,     0,   933,  1677,     0,     0,     0,
       0,     0,     0,  1081,     0,     0,   480,     0,  1081,   482,
    1016,  1015,  1014,     0,  1081,  1081,     0,     0,     0,     0,
     614,   615,   613,     0,     0,   606,   583,   791,   934,   479,
     935,   653,     0,  1010,   650,   656,  1959,     0,     0,     0,
     144,  2609,     0,  1479,   198,   102,   100,    82,  1971,    86,
      88,    81,   106,  1576,  1577,  1575,  1573,  1574,   107,    84,
      85,    87,    91,    90,    92,    93,    96,    97,    94,    89,
      95,    83,    98,   108,   109,    80,     0,     0,     0,     0,
    1791,   427,     0,     0,  1677,   384,   402,   403,   406,   407,
     408,   409,   410,   413,   411,   412,     0,  2500,  2502,     0,
       0,   378,   377,     0,   139,  2632,     0,     0,   653,   111,
     478,   581,   584,   885,   887,   886,   877,   876,   112,   115,
     118,  1629,  1713,  1441,  1519,  1964,  1519,     0,  1712,     0,
       0,  1350,  1383,     0,  1406,     0,  1247,   745,   745,   729,
    1391,   725,   745,  1387,   729,  1389,     0,     0,     0,     0,
       0,  1357,  1354,     0,     0,     0,     0,     0,  1380,     0,
       0,     0,  1252,     0,  1340,  1362,  1360,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1368,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   813,   819,   822,   823,   825,   817,     0,
    1322,  1240,  1152,  2568,  2570,  1123,     0,  2560,  2562,   894,
    1373,     0,  1184,  1180,     0,  1178,  1525,  1199,  1198,     0,
       0,     0,  1188,  1153,  1336,  1152,     0,  1396,  1958,   994,
     460,   620,  1608,    72,  1830,     0,     0,  2506,     0,  2517,
       0,     0,     0,     0,     0,     0,     0,  2416,  1550,  1687,
       0,  1112,  1116,  1974,  1872,  2409,  2410,     0,   498,   499,
     501,  1153,   515,   493,     0,   485,   488,     0,   497,     0,
    1060,  1137,     0,  1679,  1664,  1671,  1665,     0,     0,     0,
    1663,  1948,  1947,  1954,  2543,     0,  1485,     0,     0,  2437,
       0,     0,     0,  2546,  1519,  1519,  1592,     0,     0,  1129,
    1134,  1130,  1133,     0,  1151,  1158,  1157,  1949,  1956,  2376,
       0,     0,     0,     0,  2391,  2385,  2382,  2383,     0,  2345,
    2367,  2351,  2350,  2353,  2355,  1802,  1547,  1761,  1760,  1554,
    1553,  1738,  1547,  1757,  1803,     0,     0,     0,     0,     0,
    1033,     0,  2550,  1453,     0,  1437,  1436,  1461,     0,  1441,
    1460,  1460,     0,  1417,  1416,  1691,  1694,     0,  1415,  1512,
    1443,  1137,  2651,  2663,     0,   619,   618,   185,   184,   190,
     191,   464,   452,   463,   440,   131,   453,   454,   418,     0,
     396,   920,   655,   893,   955,     0,     0,     0,   852,   649,
     892,   861,   853,   892,   892,   999,  1000,     0,     0,   593,
     590,   974,   602,   953,   944,   954,   965,   967,     0,   592,
     616,     0,     0,   604,     0,   939,   981,   982,  1007,   587,
       0,     0,   629,   630,   628,   610,   617,  1001,  1002,   588,
     589,   976,     0,  1534,  1536,  1544,   595,   594,     0,   591,
       0,   952,   987,   960,     0,   627,   625,   622,   624,   623,
     626,   605,   597,   596,   599,   598,   601,   600,   603,   949,
       0,  1003,  1003,   969,     0,   637,   638,   640,   641,  1962,
       0,  1012,   971,     0,   642,   651,   643,     0,     0,     0,
     154,     0,     0,   922,     0,   147,   145,   156,     0,     0,
       0,  1482,     0,  1483,  1480,  1481,     0,   103,   105,   459,
     458,   457,   456,   428,     0,     0,     0,  1791,   404,  2501,
       0,     0,  2639,   381,   379,   380,     0,     0,   200,   635,
     636,   634,   633,     0,   467,     0,   465,     0,   477,     0,
    1883,   791,   585,     0,     0,     0,     0,  1519,  1538,  1967,
    1706,     0,  1280,  1407,     0,     0,   746,  1384,   799,     0,
    1393,     0,  1394,   727,   726,  1386,  1388,  1392,  1390,  1246,
    1254,  1327,  1249,  1248,     0,     0,     0,  1286,  1308,     0,
    1287,  1378,  1381,     0,     0,  1260,     0,  1262,     0,     0,
    1342,  1311,  1333,  1289,  1315,     0,  1265,  1241,     0,  1290,
       0,  1295,  1293,     0,  1269,     0,     0,  1276,     0,  1274,
       0,  1275,     0,  1277,  1319,  1321,     0,     0,   824,   810,
     811,   812,     0,   814,   816,   818,     0,     0,  1451,  2569,
    1124,     0,     0,  1375,  1176,     0,  1185,  1182,     0,  1179,
    1154,  1347,  1337,  1611,   996,   995,  1832,     0,  1828,   289,
     284,   292,   286,   288,   287,   293,   294,   295,   296,   290,
     285,   291,   283,   282,  2507,     0,  2442,  2494,  2493,  2510,
    2510,  2510,     0,  1521,     0,  1644,  1107,  1112,  1116,     0,
    1108,  1883,   502,     0,     0,     0,   522,     0,   520,   496,
       0,  1088,  1152,  1661,  1673,     0,  1681,     0,     0,  1658,
    1668,     0,     0,     0,  1667,   482,     0,   251,     0,  2434,
    2435,  2433,  1549,  1527,     0,     0,  1604,     0,  1599,  1145,
       0,  1156,  1155,     0,  2394,  2393,  2389,  2388,  2390,  2371,
       0,     0,  1754,  1756,  1750,  1048,  1047,  1046,  1030,     0,
       0,  1035,  2556,  1512,  1445,  1441,  1413,  1441,  1424,     0,
       0,  1441,  1420,  1418,  1422,     0,  1519,     0,  1477,  1152,
    1951,  1541,  1544,   397,   957,     0,   892,   848,   849,   861,
       0,   861,   861,     0,     0,   943,     0,  1069,     0,   948,
     787,   611,   980,   979,     0,   612,     0,   941,     0,  1545,
    1546,  1537,   481,   940,   962,   946,  1849,   973,   653,  1011,
     829,   721,   670,   661,   745,   664,   663,   707,   729,   675,
     725,   723,   693,   725,   725,   700,   699,   717,   703,   683,
     799,   799,   682,   720,   799,   704,   702,   706,     0,   708,
     725,   713,   701,   705,   722,   698,   695,   719,   745,   729,
     729,   679,   718,   799,     0,   711,   745,   749,   681,   799,
     806,     0,     0,   745,   747,  1961,   155,   143,     0,     0,
     924,   926,     0,     0,   927,  2611,     0,  2613,     0,  1115,
       0,    99,     0,     0,   386,   455,   405,  2503,     0,   211,
    1152,     0,     0,   201,   203,   204,     0,     0,     0,   580,
    1885,  1884,   466,   565,   586,     0,     0,     0,  1713,  1708,
    1560,     0,  1408,     0,     0,     0,     0,   793,   804,   802,
     796,     0,   800,   801,  1385,     0,     0,  1358,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1244,     0,
    1338,     0,     0,     0,     0,     0,     0,  1273,  1271,  1272,
     808,  1324,     0,   821,   815,   813,   820,     0,  1549,  2550,
     895,  1181,     0,  1348,   998,   997,     0,     0,     0,     0,
    2515,  2515,  2515,  1686,  1685,     0,  1684,  1688,  1109,  1117,
       0,   500,   503,     0,   495,     0,   519,     0,   486,   563,
       0,     0,     0,  1682,  1670,  2547,  1659,  1662,  1956,  1440,
    1486,  2436,  1136,     0,  1522,  1603,  1600,     0,  1593,  1595,
    1597,     0,  1950,  2352,  2354,  1032,     0,     0,  1028,  1446,
    1444,  1454,     0,  1409,  1441,  1441,     0,  1409,     0,     0,
       0,  1693,  1538,  1695,  1442,  1474,  1456,     0,  1543,     0,
       0,   956,     0,     0,     0,     0,     0,     0,   986,     0,
    1010,   945,   966,   988,     0,   749,  1081,  1535,   961,   963,
    1057,     0,   639,     0,   833,   669,   662,   680,   678,   734,
     724,     0,   734,   734,   689,   707,   684,     0,   799,   697,
     688,   709,   712,   714,   716,   734,     0,   799,   677,   676,
     686,   673,   734,   757,     0,     0,     0,     0,   753,     0,
     827,     0,     0,   760,   657,   750,   752,     0,     0,   710,
     799,   666,   807,   806,   668,   799,   806,   734,     0,   748,
     734,     0,   141,   146,   157,   158,   912,  2610,     0,  2608,
       0,  1111,  1484,   104,     0,     0,   214,   212,   213,     0,
     207,   209,   204,  2626,     0,  2633,     0,     0,  2631,   468,
     470,   478,   566,     0,     0,  1544,   890,     0,     0,     0,
    1704,  1281,   743,   741,   744,   742,   795,   794,   798,     0,
     797,   806,   730,     0,  1284,  1285,  1309,  1379,  1370,  1307,
       0,  1261,  1339,     0,     0,  1316,  1291,  1294,  1292,  1297,
    1298,     0,  1323,     0,  1144,  1144,   631,  2563,  1183,  1833,
    1831,  2518,     0,     0,  2514,  2512,     0,  2513,  2511,  2485,
       0,  2440,  2441,  2439,  2426,     0,     0,     0,  1152,   508,
       0,   525,   524,   521,  1549,  1672,  1674,  1680,  1669,     0,
    1523,  1538,   780,  1596,     0,  1146,  1034,     0,     0,  1425,
       0,  1429,  1434,  1430,     0,  1421,  1419,     0,  1560,  1478,
       0,  1549,  1544,   959,     0,   652,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   985,  1926,   975,   482,
     977,   942,     0,   947,   607,     0,   832,     0,   837,   738,
     739,   740,   690,   735,   737,     0,   692,   660,   685,   715,
     691,     0,   687,   674,   763,   764,   766,   765,   762,   772,
     755,   773,     0,     0,   767,   768,   769,   761,   751,   759,
     754,   665,   667,   671,   672,   658,     0,   659,  1960,   148,
     928,   317,  2612,  2620,     0,  2622,  2615,   129,  2630,  2640,
     211,     0,     0,   152,     0,   202,   787,   205,  2547,  1883,
       0,   473,   864,     0,   889,     0,   866,   868,  1561,   805,
     803,     0,     0,  1341,  1343,   809,     0,  1452,   632,  2491,
    2490,  2489,  2486,     0,     0,     0,     0,     0,     0,  2516,
    2520,  1683,     0,     0,     0,   516,     0,     0,   550,   564,
    1531,  1544,     0,  1549,     0,  1601,  1594,  1036,  1447,     0,
       0,     0,     0,     0,  1692,  1466,  1467,     0,     0,  1472,
    1476,  1457,  1542,   958,     0,     0,   864,     0,     0,  1928,
    1927,   951,  1010,     0,   830,     0,   834,   835,   836,     0,
     828,   736,     0,   896,     0,   756,   758,     0,   150,   343,
       0,   329,   315,     0,     0,     0,   319,   159,   162,   160,
       0,   161,   167,     0,   168,   169,   170,   171,   172,   163,
     341,   342,   166,   164,   165,     0,  1977,     0,  1978,  1127,
       0,     0,  2618,     0,  2614,  2543,   178,   208,     0,     0,
     144,   153,  2634,   770,   471,   469,     0,  2543,     0,  1677,
     113,   865,   881,   880,   870,  1544,     0,     0,   116,   867,
     883,   874,   119,   869,   882,   872,   728,  1259,  1325,  2487,
    2521,  2524,  2522,  2523,  2525,  2519,     0,  1438,  1153,     0,
     509,     0,   512,   514,   528,     0,  1677,     0,     0,  1677,
    1677,  1677,  1677,   543,   551,   553,     0,  1532,  1533,     0,
    1528,  1530,  1524,  1585,   781,  1886,  2550,  1426,     0,  1431,
       0,  1423,  1462,  1462,  1473,     0,   864,   644,   866,   868,
     978,     0,   831,     0,     0,   799,     0,   799,   149,     0,
     142,     0,     0,   328,   331,     0,     0,   334,   324,   323,
     325,     0,   318,   317,   317,   371,   322,   368,   367,   360,
    2621,     0,  2547,     0,     0,     0,  2616,  2641,   210,  1152,
     156,     0,   475,   474,   879,     0,   994,   871,   888,   891,
       0,   994,   875,   994,   873,  1689,  1697,     0,  1873,     0,
     517,   510,     0,     0,   526,     0,  1677,  1677,     0,     0,
       0,     0,     0,   523,   552,  1677,  1544,     0,  1135,     0,
    1894,  1448,     0,     0,     0,  1470,  1468,   648,   647,   645,
     646,     0,   843,     0,   842,     0,   839,   838,   694,   897,
     696,   151,   344,   355,   358,   350,   330,     0,     0,     0,
     320,   317,     0,   304,   302,   303,   309,   310,   311,   312,
     313,   314,   305,   308,   306,   307,   317,     0,   219,     0,
       0,  2619,  2617,     0,  2623,     0,   188,   187,   179,     0,
     317,  2627,     0,  2635,  2547,   878,   114,   884,   117,   120,
       0,     0,   780,   504,   516,   513,   536,   529,   532,     0,
     561,     0,     0,  1580,  1578,  1579,   557,  1581,   558,   556,
     554,   547,     0,   545,     0,  1529,  1586,     0,     0,     0,
       0,  1887,  1889,     0,  1602,  1428,  1433,     0,  1463,     0,
       0,     0,   964,   845,   846,   844,     0,     0,     0,     0,
     317,   351,     0,   326,     0,   335,     0,     0,   217,   374,
     372,   215,   362,   362,  2624,  2625,   189,  2642,     0,   158,
     178,   476,  1696,  1698,  1874,   511,   536,     0,   534,     0,
     530,   527,   531,   559,   560,     0,   544,     0,   555,     0,
       0,     0,     0,     0,  1888,     0,     0,  1895,  1897,  1465,
    1464,  1479,     0,     0,     0,   352,   358,   348,   356,   317,
       0,     0,   316,     0,   370,   218,     0,     0,     0,   317,
       0,   361,   363,   365,     0,   140,  2636,  1900,   533,     0,
     541,   537,   539,   542,   550,   549,   546,  1588,  1892,  1893,
       0,  1890,     0,     0,  1896,     0,     0,   841,   840,     0,
     349,     0,     0,   347,   327,   332,   317,   375,   317,   229,
     228,     0,   221,   297,   369,     0,   220,  2628,   317,     0,
    1886,   535,     0,     0,   548,  1591,     0,  1589,  1891,  1899,
    1898,  1471,  1469,   353,     0,   317,     0,   317,     0,   317,
       0,     0,     0,     0,     0,   216,   317,  2637,     0,  1894,
     540,   538,  1587,     0,     0,   345,   317,   333,   338,     0,
       0,   224,   298,   299,     0,   226,  2629,     0,  1902,  1590,
     317,   317,   334,   337,   376,   373,     0,   300,   222,   223,
     234,   233,     0,  1901,     0,  1906,   317,   317,   339,   242,
     240,   317,   230,   238,   232,     0,   239,     0,   227,     0,
       0,  1913,     0,   225,   241,   301,  1904,  1905,  1903,  1908,
       0,     0,  1910,  1911,     0,  1875,   231,  1912,  1907,     0,
    1914,  1916,     0,  1909,     0,  1152,  1915,     0,  1153,  1917
};

/* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
      -1,    56,   599,  1462,    57,    58,    59,    60,    61,  1313,
      62,   806,  1245,  1763,  1764,    63,   542,    64,  1023,  1533,
    1534,  3056,  3057,  1535,    65,  2140,  3093,  4136,  3094,  4141,
    3095,  4143,  1552,   510,   511,  1983,  1984,  1048,  3077,  3043,
    3859,  3047,  3968,  4100,  4010,  2066,  3414,  3860,  3861,  3977,
     537,  2138,  1482,  4127,  1963,  4228,  1964,    66,   631,  1021,
    1506,  1507,  3432,  3433,  3687,  3434,  3679,  3680,  3681,  3682,
    4359,  4201,  4301,  4360,  4432,  4466,  4472,  4401,  4481,  4482,
    4483,  4470,   874,  4484,    67,   565,   566,   876,  1343,  1777,
    1344,    68,    69,   536,  1265,  1266,  1267,  1268,  2316,  1778,
    2311,  2312,  3212,  4402,  4468,  4487,  4202,  4203,  4107,  4204,
    3980,  4205,  4111,  4206,  3983,  4207,  4208,  4209,  4210,  4351,
    4211,  4106,  4394,  4198,  4199,  4353,  4448,  4463,  4212,  3990,
    4101,  4288,  3991,  4102,  4346,  4194,  4347,  4389,  4444,  4195,
    4289,  4392,  4292,  4213,  4219,  4361,  4214,  4220,  4215,  3995,
    4118,  4218,  4116,  4217,  4357,  4356,  4428,  2663,  3076,   618,
     619,   642,  2130,   620,  1037,   994,  1484,  1996,  1997,  2514,
    2515,  2645,  2646,  2647,  1988,  1989,  1990,  2118,  2119,  2120,
    1970,  1971,  1972,  1488,  1967,  1968,   621,   995,  1005,  1991,
    1992,  1993,  2651,  2122,  2123,  2124,  2125,  1233,  1234,  2932,
    2669,  3086,  3878,  3442,  4017,  4234,  3087,  3088,  2589,  2998,
    2076,    70,   554,   854,  1310,  2365,  1311,  2367,  2817,  2818,
    2819,  1813,  1814,  3759,  1818,  2364,  3915,  4244,  4051,  4052,
    2821,  4050,  2825,  3237,  3238,  3525,  3761,  3918,  4249,  4153,
    4321,  4247,  4317,  4248,  4319,  4413,  4371,  4372,  4163,  4262,
    4263,  4325,  4374,  4063,  4064,  4065,  2385,  2831,  3764,  3693,
    2112,  1474,  1475,   512,   513,   514,   639,  2670,  2051,  2671,
    2672,  3020,  2053,  2054,  2790,  1397,  3011,  2985,  3734,  3083,
    3024,  3025,  3026,  3027,  3028,  3034,  2949,  2524,  2525,  2594,
    3037,  3876,  3611,  3626,  3398,  3399,  3400,  3401,  3402,  3403,
    3404,  3112,  3113,  3110,  1096,  3822,  3823,  3824,  3106,  3107,
    3660,  3644,  3645,  3646,  3877,   769,  3840,  3461,  1365,  1366,
    3925,  1376,  1377,  2409,  1856,  2410,  1478,  3462,  3463,  3464,
    3654,  3167,  3731,  3173,  3174,  3175,  2753,  2754,  2755,  2756,
    2757,  2255,  3647,  3036,  3604,  3815,  3818,  3960,  4186,  2526,
    2950,  2527,  2953,   945,   515,  2528,  2529,  1566,  1567,  4020,
    4028,  4032,  4021,  4033,  4029,  4022,  4023,  4024,  4035,  4031,
    2676,  3694,  3695,  2942,  3183,  3962,    71,  1494,   988,   997,
     993,  1013,   626,  1495,  1006,  2067,  2600,  3666,   608,  2055,
    3596,  3327,  3600,  2056,  2964,  2057,  3314,  3581,  2058,  3344,
    3598,  3812,  2965,  2966,  2059,  2060,  2061,  3326,  3336,  3952,
    3193,  3194,  3195,  2530,   125,  2303,  3032,  2573,    72,  1440,
      73,   959,   960,   961,  2459,  2460,  2900,  3291,  3558,   954,
     955,   956,  1929,  2457,    74,   634,  1539,    75,  1321,  2377,
    2378,  2379,    76,  1014,    77,    78,   635,  1546,  1547,  1548,
      79,  1306,   132,    80,   862,  1316,  1318,  1319,    81,   630,
    1015,  1016,  1017,  1018,  2072,    82,  1805,  2341,  2342,  2343,
    2344,  1503,  2602,  1504,  1505,  2081,  3230,    83,    84,   596,
    2263,   571,   883,   572,   573,  1850,  2400,  3735,   894,   895,
     896,  2859,  1355,  1356,  1357,  2405,  2864,  1093,   770,   771,
     772,   773,  1187,  1188,  3648,   774,  1197,  1724,   775,   776,
     777,   778,   779,   780,  1751,  3139,  3140,  3480,  2290,  2291,
    2292,   781,  2177,  3124,  2191,   782,  1180,  1709,  1640,  3472,
    3131,  1583,  2160,  2706,  2786,  2257,  1118,  1119,  1083,  2167,
    1589,  1936,  1937,  1938,  1939,  1940,  3569,  3568,  3570,  3929,
    3780,  3931,  3784,  2470,  1833,  1834,  1941,  1942,  2901,  3778,
    4076,  2258,  2259,  2260,  3498,  2902,  3295,  2920,  2921,  3791,
    2461,  1943,  2908,  4175,  3938,  3939,  4281,  4280,  3940,  3789,
    3790,  3574,  3575,  3052,  3053,  3054,  2845,  1630,  1631,  1638,
    1293,  1294,  1584,  2339,  2806,  3771,  3922,  2281,  3544,  3920,
    4070,  2064,  2993,  2994,  2402,  2403,  2924,  3311,  3341,  1400,
    3736,  2808,  1902,  1903,  3700,  4471,  2933,  2618,  4256,  2361,
    2362,  4168,  4329,  4416,  4417,  3266,  3267,  3548,  3549,  2404,
    2856,  3268,  3772,  4075,    85,   519,    86,  1761,  2296,  2789,
    1242,  2308,  1025,  1323,  1570,  1571,   794,   532,  1235,  1236,
    1237,    87,   543,  2340,    88,   561,  1831,   846,   866,  1324,
    1325,  2386,  2832,  2839,  2387,  2844,  3535,  2834,  3243,  3244,
    2298,  2299,  2835,  3246,  3532,  3515,  3516,  3225,  3756,    89,
     584,  3306,  2915,  2916,  4145,  4146,   867,    90,   518,  1070,
    2684,  1576,  2148,  1071,  1072,  2151,   660,   661,    91,   963,
     581,  1422,  1423,  1424,  1918,    92,   575,   946,  2886,  2892,
    1897,   858,  1238,  1404,   949,  1405,  1883,  2438,  1386,    93,
     984,   983,  1469,    94,   604,  1470,    95,   807,  1259,  1773,
    2794,  3198,  3506,  1260,  1261,  2309,    96,   562,   871,   872,
    1328,  1836,    97,   556,   859,  1824,    98,   547,    99,   100,
     850,  3231,  4242,  4367,   551,  1807,  1302,  3443,  4170,  4271,
    4272,  4274,  4337,  4338,  4410,  4475,  4498,  4491,  4501,  4502,
    4505,  4510,  4511,   784,   970,   785,  3806,   786,   787,   788,
    2840,  2841,  3312,   789,  2842,   790,  2943,  1026,  1573,   540,
     490,  2607,   615,   971,  2814,   792,  3997,   991,  1041,   492,
     493,   101,   574,   910,  1381,  1371,  1380,  1876,  2426,  1880,
    2428,  2429,  3280,  2882,  3281,  2883,   950,  1872,  1877,  2884,
    1881,   913,  1865,  1866,  1867,  1868,  2875,  1862,  2435,   102,
     851,   497,  1304,  1305,  2350,   103,   583,   104,  1295,  1801,
    1802,  2336,  2805,  2337,   105,   879,   106,   833,  1795,   834,
    1271,   835,   836,  1285,  1279,  1288,  1282,  3903,  3748,  3749,
    2324,  1241,  1042,  1043,  1787,  2318,  2319,  3510,  3751,  3216,
    3909,  3910,   107,   133,   500,   637,  1032,  1349,   108,   109,
     110,   111,  1352,  1457,  2396,  1458,  2264,  1459,  1460,  1950,
    1848,  1705,  1706,  3181,  1177,  1178,  2267,  2762,  2763,   897,
     646,  1058,  1050,   126,   127,   128,   649,   650,   129,  1011,
    1012,  2601,  3049,  3416,  3669,  3670,  3865,  4005,  4001,  4002,
    3999,  4004,  1052,  3872,  4308,  4436,  1053,  1054,  3078,  3874,
    4131,  4310,  4408,  1055,  2660,  3429,  4006,  4230,   112,   972,
     593,  1455,  1450,  1452,  1946,  2477,   113,   114
};

/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
   STATE-NUM.  */
#define YYPACT_NINF -3853
static const int yypact[] =
{
    5290,  2245,   114, -3853,  -160,   712, 47629,   767,   961,   961,
     467,  3179, -3853, -3853, -3853, -3853, -3853,  2857, -3853, 47629,
     114,  1064, -3853, 23696, -3853, -3853,   808,   135,    73,   961,
     114, -3853, 47629, -3853,   934,  1369,   114, -3853, -3853, 41499,
   -3853,   467, 47629, -3853, -3853, -3853, 41499,  1028,   828,   806,
    1019, -3853, -3853, 47629,  2619,   520,  1441,  1318, -3853, -3853,
    1118, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853,
   -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853,
   -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853,
   -3853, -3853, -3853, -3853, 24312, -3853, -3853, -3853, -3853, -3853,
   -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853,
   -3853, -3853, -3853, -3853, -3853,  1333, 47629,  1385, 47629, -3853,
    1422, 47629, 39660, 47629, -3853,  1076,  1499, -3853, -3853,  1563,
   -3853, -3853,   961,   467, -3853, -3853, -3853, -3853, -3853, -3853,
   -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853,
   -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853,
   -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853,
   -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853,
   -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853,
   -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853,
   -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853,
   -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853,
   -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853,
   -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853,
   -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853,
   -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853,
   -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853,
   -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853,
   -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853,
   -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853,
   -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853,
   -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853,
   -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853,
   -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853,
   -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853,
   -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853,
   -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853,
   -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853,
   -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853,
   -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853,
   -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853,
   -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853,
   -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853,
   -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853,
   -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853,
   -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853,
   -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853,
   -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853,
   -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853,
   -3853,  1041, -3853, -3853,  1174, -3853, -3853, -3853, -3853, -3853,
    1716,  1585, -3853,  1628, 39660, -3853, 47629, -3853, -3853, -3853,
     213, -3853,  1345, -3853,  1346,  1674,  1697,  1717,   852, 11183,
    1730,  1730,  1730, 47629,  1768,  1730,  1730, 47629, -3853,  1730,
   -3853,  1730,   961, -3853, -3853, -3853,  1843,  3827, 47629,  1610,
     151,   -80, 39660,   174, 47629, -3853, -3853, 11183, -3853,  1750,
   -3853, -3853, -3853,   961,  1957,  1822,   999, 47629, -3853, -3853,
     961,   899,  1246,  1428, -3853, -3853,  1550, -3853,  4151,   136,
   -3853, -3853, -3853,  2500, 26160,  6219,  1550,   542,  -109,   542,
   -3853, -3853, 47629,   961,  1749, -3853, -3853,   266,   266,   266,
   -3853,   266, -3853,   266, -3853,   520,  1406, -3853, -3853,  1405,
   47629,   827,  1894,   885, -3853, -3853,  1414,   736, -3853,  1485,
   36595, -3853, 47629, -3853, -3853, -3853, -3853,  1705, -3853, -3853,
   -3853,  1675, -3853, 36595, 23696, 47629,  1590, -3853, -3853, -3853,
   23696,  1459, 47629, -3853, 23696, 23696,   215,  1081,    71, 47629,
   47629,  1924, -3853,  2105, 36595,  1704, -3853,   127,  1142,  1563,
    2134, -3853,  1585, -3853, 47629, 47629, 47629, -3853, -3853, -3853,
   42112,   852,  1523,  1528,  1532, 15621, -3853,  1540,  1558,  1562,
   11183,  1564,  1567,  1575,  1602,  1622,  1629,  1634,  1647,  1664,
    1664,  1667,  1669,  1678,  1682,  -128,  1689, -3853,  1707,  1713,
    1715, -3853, -3853,  1725,  1743,  1751,  1760, -3853,  1763,  1770,
    1773, 11817,  1792,  1797, -3853, 20607,  1799,  1808,  1815,  1817,
    1834,  1840,  1842,  1846,  1870, -3853, -3853, 11183,  1667, -3853,
   -3853,  1881, -3853,  1884,  1889,  1899,  1903,  1906,  1908,  1922,
    1927,  1931,  1939,  1942,  1945,  1949,  1959,  1962,  1966,  1971,
    1667, -3853,   863,  1997,  2000,   900,  2006, -3853,  2008, -3853,
     273,  2024,  1664,  1667,  1667,  2026,  2039,  2047,  2068,  2078,
    2083, 15621, 15621, 15621, 11183, -3853, 47629, -3853, 47629, -3853,
    1255,  2466, -3853,  2669, 15621,   185, -3853, -3853, -3853, -3853,
   -3853, -3853, -3853,  1515,  1645, -3853, -3853, -3853, -3853, -3853,
   -3853,  2094,  1653,  2102, 47629, 47629, 47629,  1958, 47629, 47629,
   39660,   765, 47629, 36595, -3853,  1730,  1728,  3170, 29235,  1925,
    1883,  1614, -3853, -3853, -3853, -3853, -3853,  1991, -3853, -3853,
    1905, -3853,  2015, -3853, -3853,   172, -3853,    93, -3853, -3853,
   -3853, -3853, -3853, -3853,  2120,  2096, -3853, -3853,   105, -3853,
   -3853, 47629, -3853, -3853, -3853, -3853,  2509,  2246,  1255,  2692,
     188, 23696, -3853,  1542, -3853,  -192, -3853, -3853,  2478, -3853,
   -3853, 36595, 23696, -3853, -3853, -3853, 21225, -3853, -3853,  2719,
   -3853,  2139, -3853, -3853,  1645,  3435, -3853,  1925,  2411, -3853,
    2419,  2324,  1081,  2213, -3853, -3853, -3853, -3853, -3853, -3853,
   -3853, -3853, -3853, -3853,  2176,  2500, -3853, -3853,   389,  2332,
    2175,   415,   418, 34143,   100,   448,    77, 26775, 34756,  2183,
   -3853, -3853, -3853,   108,  2664, -3853,    -1,  2202,  1771,    -1,
   37208,  2571,   203, -3853,   144, -3853,  2650, -3853, -3853, -3853,
   -3853,  2326,  2316, -3853, -3853,   292,  2384, -3853,  2693, -3853,
     727, -3853,  2344,  2571,    -1,   203, -3853,  2584,  2708,   396,
    1115, -3853, -3853, -3853, -3853,  2234, -3853,   -87,  2786, -3853,
    2238, -3853, -3853, 23696, -3853, -3853,  2509, -3853, -3853, -3853,
    2241, -3853,  2511,  2342, -3853, -3853,    30, -3853,  2247,   799,
    2728, -3853, 39660,   891, 37821, -3853, -3853, -3853,  2762,  2778,
    1664,  2248, -3853, -3853, -3853,  2880, -3853, -3853,  2259,  2805,
    2805,  2805,  2887, -3853, -3853, -3853,  2280,  2525, -3853, -3853,
    2448,  2318, -3853,  1590, 23696,  2678,  2287, -3853, -3853,  2535,
   11183, -3853, -3853,  4248,    28, -3853, -3853,   262, -3853,  2866,
    2494, -3853, -3853, -3853, -3853,  2761, -3853, -3853,  2880,  2822,
    2805,  2717,  2304, -3853, -3853, -3853, -3853, -3853, -3853,  1632,
   -3853, -3853, -3853, -3853, -3853, -3853, -3853,  1686, -3853, -3853,
   -3853, -3853, -3853,  1590, -3853, 23696, -3853, -3853, -3853, 23696,
   -3853,  2307, -3853,  2305, -3853, 11183, 11183,  1077,  2881,  2938,
    2938,  2938,  1255,  2349, 11183, 11183, 11183, 11183, 11183, 11183,
   11183,  1407,  2325, -3853, -3853,   -96, -3853,  2333, 11183, 11183,
   -3853, 11183, 11183, 24928, -3853,  4861, 11183, 11183,   300,  2820,
   11183, 11183, 11183, 11183,  2941, 11183, 11183, 24928,  2957,  2340,
   -3853,  2331,  1409, 11183, 11183,  1466, 11183, 11183, 11183, 11183,
   11183, -3853, -3853, 11183, 11183, 11183, 11183, 15621, 11183, 11183,
   11183, 11183, 11183, 11183,  2345, 11183,  2938,  2938, 11183, 11183,
    1578, -3853, -3853, 11183,  2343,  2343, -3853, 11183,  8013, 11183,
   -3853, -3853, -3853,  2348, -3853, -3853, -3853, 24928,  2938,  2938,
   11183, 11183, 11183,  2881,  2881,  2881,   349,  2351,   673, 11183,
   27390,  2336, -3853, -3853, -3853, -3853, 11183, 11183, 11183, -3853,
   15621, -3853, -3853,  1413, -3853, -3853, -3853, 12451, 15621, 15621,
    2350, 15621, 15621, 15621, 15621, 15621,  2725, 15621, 15621, 16255,
   16889, 15621, 15621, 15621, 15621,   198,  2881, 39660, 15621, 11183,
   -3853, -3853, 47629, -3853, -3853, -3853,  2357, 23696,   765, -3853,
   -3853, -3853, -3853, -3853, -3853,  2360,   765, -3853,  2844, -3853,
   -3853,  2376, 23696, -3853,  2372, -3853,  2736, -3853,  2737,  2738,
    2742, -3853, -3853, -3853,  2977,  2752, -3853,  2754, -3853, -3853,
    2397, -3853, -3853, 17523, 39660, -3853,  2398, -3853,  2876, -3853,
   -3853, -3853, -3853, -3853, -3853,  2499, -3853, -3853, -3853,  2407,
   -3853, 36595,  2407, -3853, -3853,  2407, -3853, -3853,  2407,    26,
    4268, -3853, -3853, 47629, -3853, 48242, -3853, 21225,  -160, -3853,
   -3853, -3853,  2772,   193,  2416, -3853, 23696, -3853,   120,   120,
    2660,   200, 39660, -3853, -3853,   125,  2428,  2487,  2429, -3853,
    2495, 23696, 23696, -3853, -3853, -3853,  2679, -3853,  3055,  1246,
   -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853,
   -3853, -3853, -3853,  2436,  2914,  2438, 36595,    52, -3853, 47629,
   -3853,  1583, -3853, -3853, -3853,  2442, -3853, 11183, -3853, -3853,
   47629, -3853, -3853, -3853, -3853, -3853,  3012, 11183, -3853, 36595,
     -71,    94,  1327,   108, -3853, -3853, -3853, -3853, -3853, 47629,
   42725,  2449, -3853,  2845,  -160, 11183, -3853,  2459,  1585, 47629,
   47629, 47629, 23696, 47629, 23696, -3853,  1062,  1062, -3853, 35369,
   -3853, -3853, -3853, -3853,    -1, 47629, 47629,    -1, 36595, -3853,
     203, 47629,    -1, -3853,  2846,  2555, -3853, -3853, -3853,  2916,
   -3853, -3853,  2907,  2464, -3853,  2845, -3853, -3853,   203, -3853,
   -3853, 23696, -3853, -3853,   203, -3853,   203,   203,    -1,    -1,
    2522,   542, -3853, -3853,  2617,  -109, -3853,  -173,   266,  2718,
   -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853,
      74, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853,
   -3853, -3853, -3853, -3853,   212, -3853, -3853, -3853,  1929,  2978,
   -3853, 39660,  2925,  -106,   759,  2925,  1205,  -160,   207, -3853,
     207, -3853, 36595,  2944,  4857,  2757,   927, 23696, -3853,  2482,
   43338, 23696, -3853, -3853, -3853,  1388,  2485,  2490,  1255,  2968,
    2972,  2973,  2976,  2981,  2983,  2985,  2986,  2989,  2991,  2992,
    3003,  3004,  3007,  3009,  3010,  3013,  3014,  3016,  3017,  3018,
    3020,  3023,  3024,  2521, -3853, -3853, -3853, -3853, 23696, -3853,
   -3853, -3853, -3853,  2597, -3853, -3853, -3853, -3853,  1759, -3853,
   -3853, -3853,   244,  2279,  2569,  2580,    95, 36595,  2990, 47629,
   47629,  1585, 47629, 47629, -3853, -3853,  1134,  2819,  2829,  2831,
    2564, -3853,  2679, -3853,  1227, 47629,  3008, 31078, -3853,   134,
    1084, -3853,  2938,  2568, -3853,  2570,  2574,  2575, 11183,    47,
     159,  1086,  1038,  1326,  1093,   536,   362, -3853,  2582,  2577,
   -3853,  2586, -3853, -3853,   596,   656,  1112,  1129,  2589,  2590,
   -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853,
   -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853,
    3011, -3853,   830,  1362, -3853, -3853, -3853, -3853,  2579, -3853,
   -3853,  1135,   834,   847,   380,  2600,   873,  1426,  1431,  2595,
   24928, 47629,  2938,  2604,  1164,  1208,  2938,  2608,   906,  1281,
    1609,  1635,  1639,  1296,  1321,   918,  1651,  2271,  1365,   932,
     946,  1373,   953,   974, -3853,  1401,  2609,  2610,   986,   392,
    2938,  2611,   402,  2594,  2605,  1438,  9281,  9915, 10549,  1067,
     990, -3853,  2618, -3853,  2331,  2620,  2625,   502,   221,  1460,
   -3853, 11183, -3853, -3853,   705,    83,  2672,   122,  1327, -3853,
    2780, 47629,  2313,   178, -3853, -3853, -3853, -3853, -3853, -3853,
     764, -3853,  2628, -3853,  2633,  1982,  2640, 11183,   957,  2640,
    2764,  2136,  2136, 15621,  2606,  2798, 11817,  1480, 11817,  1480,
    2640,  2640,  2640, -3853, 15621,  2639, 15621, 15621, -3853,  2881,
    1255,  2641,   565, 47629, -3853,  2360,  1162, -3853,   108, 36595,
     141, 23696, 39660,  2638, -3853, -3853, -3853, -3853, -3853, -3853,
   -3853, -3853,  3275, 23696,  2735,  2739,  2740, -3853, 29850, -3853,
   -3853, -3853, -3853, 29850,    -8, -3853, 47629, -3853,  2727, -3853,
   -3853, -3853, 21841, 21841, -3853, 21841, -3853, -3853,   394,   742,
    2933,  2680, -3853, -3853, -3853, 23696, -3853,  3063,   671, 23696,
    2482,  2670, -3853, -3853, -3853, -3853, -3853,  2224,  2774, -3853,
    3293, -3853, 11183,  -160, -3853, 36595, 36595, 23696, 23696,   782,
   -3853,  1740,  2675, -3853, -3853, -3853, -3853, -3853,  3435, 17523,
    3106,  3118, 21841, 21841, 21841, -3853, -3853, -3853, -3853, -3853,
    1339,  1255, -3853,  2671, -3853, 38434, -3853,  1255,   108,  2681,
    2682, -3853, -3853,  3061,   714, -3853,  2683,  2702, -3853,  2697,
    2698,  2699, 43951, 11183, -3853,    94, -3853, -3853,   108, -3853,
   -3853,  8647,  -160,  3154, -3853,  1255,  2713, 47629, -3853, -3853,
   -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853,
   -3853, -3853, -3853,   -60, -3853, -3853, -3853, -3853, -3853, -3853,
   -3853,    -1, -3853, -3853, -3853, -3853, -3853,  2935,  2571,  2384,
    3154,    -1,   203, 23696,    -1,    -1, -3853, -3853,  3038,  2765,
   -3853, -3853, -3853, -3853, -3853, 47629,  1865,  2871, -3853,  2721,
   -3853, -3853, 23696, -3853,  2722, -3853,  3163,  3309,  2571, -3853,
   -3853, -3853,   108,   108,  3021, -3853,  -160,  2848,  2855,  2860,
    2865,  2867,  2910, -3853, -3853,  -160,  -160, -3853, -3853,   108,
   -3853,  1616, -3853, -3853, -3853, -3853,  -160,  -160,  -160,  -160,
    2530,  -160,  -160,  1732, -3853, -3853,   108,   108, -3853,   199,
   -3853, -3853, -3853, -3853, -3853, -3853, -3853,   240, -3853,  2993,
   -3853,  2337,   108,  3307,  2995,   108,   108,  3307,   108,  3030,
    3031,   108,   108,  2827,  3262,   108,  3147,  2864,  1951,  3157,
     108,  3034, -3853,  2872,  3271,   108,   108,   108,   108,   108,
    3307,  3035,  3383,   108, -3853,   108,  3046,  3049,   216,  3052,
    3053,   108,   108,   108,   108,   883, 47629,   108,  3060,   108,
   -3853, -3853,  5514, -3853, -3853, -3853, -3853, -3853, -3853,   771,
   22460, -3853, -3853, -3853, -3853,   412, -3853,  3015, -3853, -3853,
   -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853,
    2816, -3853, -3853, 11183,  2817,  2530,  -160,  2530,  2530,  -160,
    -160,  1557,  -160,  2530,  2530,  -160,  -160,  -160,  -160,  -160,
    -160,  -160,  2530,  2530,  -160,  1739,  -160,  2530,  4248, -3853,
   -3853, -3853, -3853,   248,   108,   108,   108,   108, -3853,  1724,
   -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, 39660,  3175,
    1823,   819, 39660, -3853, 47629, -3853,  1754, 47629,  2821,  -150,
    3458,   886,   886, -3853, 23696, 23696, 23696, 47629,  2862, -3853,
   31078, -3853, -3853,  -173, -3853,  2818, 13085, -3853,  2823, -3853,
   11183, -3853, -3853, -3853,   924, 11183, 11183,  3310,  2371, -3853,
   39047, -3853, -3853, -3853, 11183, 39047,  2371, 11183, -3853,  2830,
   -3853,  3224,  3226, -3853, -3853, -3853, -3853, 11183, 11183, -3853,
   11183, 11183, -3853, 11183, 11183, 11183, 11183, 11183, -3853, -3853,
   15621, -3853,  2824,  2832, -3853, -3853, -3853,  2834, -3853, 11183,
   -3853, -3853, -3853, -3853, -3853, -3853, 11183, -3853, 11183, -3853,
   11183, 11183, -3853, 11183, 11183, -3853, -3853, -3853, 13719, 11183,
   11183,  2837, -3853, -3853, 11183, 11183, 11183, -3853, 11183,   167,
   11183,   255, 11183,  1572, 11183, -3853, 11183, -3853, -3853, -3853,
   -3853, 11183,   368,  2224,  2530,  2839, -3853,  1737, -3853, -3853,
     337, -3853,   705,  2840, -3853, -3853,  1583, -3853, -3853, 39660,
   11183, -3853, -3853, -3853, -3853, -3853, -3853, 15621,   507,  2842,
   15621, -3853,  2764,  2941,  2941,  2018, 11183,   957,  2764, 11183,
    2843,  2847, -3853, 11183, 47629, -3853, -3853, -3853, -3853, 39660,
   -3853, -3853, -3853, -3853,   141, -3853,  2372, -3853,  2482, -3853,
    3320,  2849, -3853, -3853, -3853, -3853, -3853, -3853,  1752, -3853,
   36595,  2838, -3853,  2850,  2926,  2937,  2939, -3853, -3853, -3853,
   -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853,  2571,
    1740, -3853,  2868, -3853, -3853,  2535,  2949,  2883,  3232, -3853,
   -3853, -3853, 47629, 15621, -3853, -3853, -3853, -3853, -3853, -3853,
   -3853, -3853, -3853,  3456,  2873,  2874,  3352,  2879,  1255, -3853,
    2955, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853,   818,
   -3853, -3853,  2884,  2884, 19373, -3853, -3853, -3853, 47629,  3360,
   -3853,  3155, 36595,  3340,  3344,  3345,   888, -3853,   420, -3853,
     171,  3300,  2571, -3853,  3353, 40273, -3853, 31691, -3853, -3853,
   -3853, -3853,   -71,  3000,  3001,   -46, -3853, -3853,  3299,  3132,
   -3853, -3853, -3853,   108,  1255, -3853,  2449,  8647,  2920, 28005,
   -3853, 15621,  1707, -3853,  1255, -3853, -3853,  1557, -3853,    61,
   -3853, 35369, 35369, -3853,  3195, -3853, -3853, -3853, -3853,  2680,
     203, -3853, -3853,  3399, -3853,  3400, -3853,  2924,  3402, -3853,
    3173, -3853,   964,  3315,  3316, -3853,  3189,   897,  3189,   964,
     964, 24928,  -173,  2679, -3853,  2530,  3244, -3853, -3853, -3853,
   38434, 35982, -3853, -3853, -3853, -3853,  3461, -3853,  3462,  1201,
   -3853, -3853,  2004,  1286, -3853, -3853, -3853, -3853, -3853, -3853,
   -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853,  1205,
    2004,  2004,   558, -3853,    84, -3853, -3853, -3853, -3853,  3404,
   -3853, 25544,   114, -3853,   306, -3853, 25544, -3853,  1388,  1388,
   -3853, 44564, 25544,   114,  1557,  2530, 25544,  2530, 45177,   114,
    -160,  -160,  2354,   108,  2530, -3853, -3853,  3321, 47629,  3325,
   25544, 25544, -3853, 39660, 47629, -3853,   108,   895,  2530, 45790,
    1557,  1557, 25544,   114, 24928,  2314, -3853,  -160,   114, -3853,
   -3853, -3853, -3853, 23696,   114,   114,  1864,  2414,  2656,  2930,
   -3853, -3853, -3853,  2530, 45177, -3853, -3853,  6066, -3853, -3853,
   -3853, 18757, 47629,  1082,   537, -3853,  2942,   910,   299,  3027,
    1541,  2947,  2956, 46403,  1255,  2530, -3853, -3853, -3853, -3853,
   -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853,
   -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853,
   -3853, -3853, -3853, -3853, -3853, -3853,  -160,  2224,  2004,  2004,
    2366, -3853,  3218,  3387,   108, -3853,  2341, -3853, -3853, -3853,
   -3853, -3853, -3853, -3853, -3853, -3853,  3045, -3853,  3572,  3143,
    2963, -3853, -3853,   261, -3853, -3853,   139, 23696, 18141, -3853,
    3209, -3853,  3092, -3853, -3853, -3853, -3853, -3853, -3853, -3853,
   -3853, -3853,  2962,  -173,  2680,  1497,  2680,  2970, -3853, 11817,
    1482, -3853,  1255, 11183,  1255,  1508, -3853,  2969,  2969,  2971,
   -3853,  2979,  2969,  3366,  2971,  3367,  2984,  2996,  1517,  2999,
    3002,  1515, -3853, 11183, 11183,  1544,   620,  1549,  -119,   997,
    1004,   651, -3853,  1551,  2998, -3853, -3853,  1556,  1560,  1581,
    1592,  1020,  1594,  1786, 11817,  1626,   854,   812, -3853,  1630,
    1048,  1055,  1638, 11183,  1659, 11183,  1661, 11183,  1692,  1703,
    1709,  2982,  2982,   113, -3853,  3005, -3853, -3853, -3853,  3006,
   -3853, -3853,  2176,   337, -3853, -3853,  3029, -3853, -3853,  2997,
    1255,  3032, -3853, -3853, 11183, -3853,   185, -3853, -3853, 15621,
     817,  3033, -3853,  1255, -3853, -3853,  3036,  1515, -3853,   235,
   -3853, -3853, -3853, -3853,   219,  3311, 29850, -3853, 47629,   874,
    3019, 32304, 36595, 36595, 36595,  2987, 11183, -3853, -3853,  3246,
   23696, -3853,  3413, -3853, -3853, -3853, -3853,  3044,  3022, -3853,
   -3853, -3853,  2764,  3372,  3231, -3853, -3853,  2224, 47629, 36595,
   -3853,  2500, 24928, -3853,  3026, -3853,  3026,  1450,  3047,  1788,
   -3853, -3853, -3853,  3028,  2213,  1812, -3853, 17523,  3450,  2304,
   36595, 36595, 36595, -3853,  2680,  2680,   164,  3058,  3403, -3853,
   -3853, -3853, -3853, 47016, -3853, -3853, -3853, -3853,  1273, -3853,
    3048,  3051,   239,  3227, -3853, -3853, -3853, -3853,  8647, -3853,
   -3853, -3853, -3853, -3853, -3853, -3853,  2571, -3853, -3853, -3853,
   -3853, -3853,  2571, -3853,    -1,  -160,  -160,  1721,  -160,  3487,
    3525,  -215,    83, -3853,  1731, -3853, -3853, -3853,  3414,   964,
    3189,  3189,  3418,  3283,   -76,  3037, -3853,   108, -3853,  2353,
   -3853,  2500, -3853, -3853, 11183, -3853, -3853, -3853, -3853, -3853,
   -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853,   240,
   -3853, -3853, -3853, -3853, -3853,  3054,  3401,  3426,  1388, -3853,
   25544, -3853, -3853, 25544, 25544, -3853, -3853,   794, 45177, -3853,
   -3853, -3853, -3853, -3853, -3853,  3056, -3853, -3853,  2224, -3853,
   -3853, 35982,  -160, -3853, 25544,  3056, -3853, -3853,   170, -3853,
    3041,  -160, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853,
   -3853, -3853, 45177,  3057, -3853,   338, -3853, -3853,  1957, -3853,
   45177, -3853, -3853, -3853, 45177, -3853, -3853, -3853, -3853, -3853,
   -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853,
    3062,  2189,  1107, -3853,  3064,  3059, -3853, -3853, -3853, -3853,
   47629, -3853, -3853, 23696, -3853, -3853, -3853,  4102, 47629,  3297,
   -3853, 11183, 11183,  3334, 47629,  3335, -3853,  3626, 47629,  3683,
   45177, -3853,  3073, -3853,  3076, -3853,  1819, -3853, -3853, -3853,
   -3853, -3853, -3853, -3853,  3075, 47629,  2004,  1710, -3853, -3853,
    -160,   139, -3853, -3853, -3853, -3853,  3346,  3347, 47629, -3853,
   -3853, -3853, -3853,  3221, -3853, 23696, -3853,  3245, -3853,  3083,
     824,  4909, -3853,  3085,  3087,  3093, 31078,  2680,  3349, -3853,
   -3853,  2941, -3853,  1255, 11183,   800, -3853, -3853,   322,  3368,
   -3853,   976, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853,
   -3853, -3853, -3853, -3853,  3094,  2941,  2941, -3853, -3853, 11183,
   -3853,  3257, -3853, 11183, 11183, -3853, 11183, -3853,   905,  3099,
    3123, -3853, -3853, -3853, -3853, 11183, -3853, -3853,  2941, -3853,
   11183, -3853, -3853, 11183, -3853, 11183, 11183, -3853,  1711, -3853,
    1758, -3853,  1780, -3853, -3853, -3853,  2224,  3101,  3473, -3853,
   -3853, -3853,  2224,  3284, -3853, -3853,  2224,  2530,  2442, -3853,
   -3853,   673, 47629, -3853, -3853,  1825, -3853, -3853, 11183, -3853,
   40273, -3853, -3853, -3853,  3464,  3723, -3853,  3322, -3853, -3853,
   -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853,
   -3853, -3853, -3853, -3853, -3853,  3539, -3853, -3853, -3853,  -152,
    -152,  -152, 14353,  1255,  3598, -3853, -3853, -3853,  3413,  3489,
   -3853,    57, -3853, 47629,  3115,  1543, -3853,  1828, -3853, -3853,
    3116, -3853,  2176,  3117, -3853,   108, 14353,  2884,  3245, -3853,
   -3853,  1450, 24928, 31691, -3853, -3853, 47629, -3853, 36595,  2304,
    2304,  2304,  2571,  3546,  2949,  2949, -3853, 28620, -3853, -3853,
    3272, -3853, -3853, 32917, -3853, -3853, -3853, -3853, -3853, -3853,
   28005, 43951, -3853, -3853, -3853, -3853, -3853, -3853, -3853,  -160,
    3596,  3370,  1583,  2469, -3853,  -173, -3853,   964, -3853,  3510,
    3511,   964, -3853, -3853, -3853, 24928,  2680, 14353, -3853,  2176,
    1255,  3129,   338, -3853,  -110, 11183, 25544, -3853, -3853, -3853,
    3133, -3853, -3853,  3645,  3647, -3853, 25544,  1759, 47629, -3853,
    3012, -3853, -3853, -3853,  3230, -3853,  4102, -3853, 24928, -3853,
   -3853, -3853, -3853, -3853, 47629, -3853, 23696, -3853, 18757, -3853,
    3140, -3853,  2969,  2969,  2969, -3853, -3853, -3853,  2971, -3853,
    2979,  3374, -3853,  2979,  2979, -3853, -3853, -3853, -3853, -3853,
     322,  2160, -3853, -3853,   322, -3853, -3853, -3853,    90,  1370,
    2979, -3853, -3853, -3853, -3853, -3853, -3853, -3853,  2969,  2971,
    2971, -3853, -3853,   322,  2969, -3853,  2969,  2858, -3853,   329,
      99,  2969,  2969,  2969,  3146,  3135, -3853,  1255,  2941,  3699,
   -3853, -3853,  3292,  -160,  3641, -3853,  1837, -3853,  3149, -3853,
   46403, -3853,  2530,  1205, -3853, -3853, -3853, -3853,  3291,  1245,
   -3853,  3323,  3152,  3153, -3853, -3853,  -160,  3156,  3158,  5514,
   -3853, -3853, -3853,  3769, -3853, 47629, 47629, 47629,  2818, -3853,
    3532,  1083,  1255,  3165,  3166,  3167,  3168,  3767,   123, -3853,
    3770, 39047, -3853, -3853, -3853,  3171,  1848, -3853,  3174,  3176,
    1785,   266,  3177,  1811,  1065,  1851,  3478,  3557, -3853,  3406,
   -3853,  1854,  1147,  1874,  1879,  1890,  1923, -3853, -3853, -3853,
   -3853, -3853,  3180, -3853, -3853,   190, -3853,  3178,   902,    83,
   -3853, -3853,  1855, -3853, -3853, -3853,  3642,  3547,  3463,   145,
    3220,  3220,  3220,  1707,  1255,  1861, -3853, -3853, -3853, -3853,
    3599, -3853, -3853,  3201,  3293, 47629, -3853,  3231, -3853,  2442,
   24928, 14353,  3205,  3210, -3853,   799, -3853, -3853,  3199, -3853,
   -3853,  2304, -3853,  3795,  3636, -3853, -3853, 39660,  3212, -3853,
   -3853,  3517, -3853, -3853, -3853, -3853,  -160,  3692, -3853, -3853,
   -3853,  2721,  2471,  3260,   964,   964,  3206,  3261, 11183, 11183,
    3223, -3853,  3349, -3853, -3853,   752,  2442, 11183, -3853,  2224,
    3231, -3853,  1932,  3228,  3229, 47629,  3234,  3237, -3853,  3395,
    1082, -3853, -3853, -3853, 23696,  2858,   114, -3853, -3853,  3056,
     818,  3219, -3853, 47629,  3549, -3853, -3853, -3853, -3853,  1232,
   -3853,  3238,  1232,  1232, -3853,  2332, -3853,  3253,   322, -3853,
   -3853,  3258, -3853, -3853, -3853,  1232,  3239,   322, -3853, -3853,
   -3853, -3853,  1232, -3853, 39660,  1432,  -160,  2961, -3853,  3278,
   -3853,  3737,  1113,  3611, -3853,  2858, -3853,  3612,  3513, -3853,
     322, -3853, -3853,  3838, -3853,   322,  3838,  1232,  3515, -3853,
    1232, 47629, -3853, -3853, -3853, -3853, -3853, -3853, 47629, -3853,
    1034, -3853, -3853, -3853,  1871,  -160, -3853, -3853, -3853,  3243,
    3247, -3853, -3853, -3853,   299, -3853, 47629,  4102, -3853, -3853,
   -3853,  3209, -3853,  1059,  1885,   338,  3248,  1919,  1952, 35369,
   -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, 39047,
   -3853,  3838, -3853,  3518, -3853, -3853, -3853, -3853, -3853, -3853,
   11183, -3853, -3853,  3552,  3707, -3853, -3853, -3853, -3853, -3853,
   -3853,  3250, -3853,  2530,   171,   171, -3853, -3853, -3853, -3853,
   -3853, -3853,  3338,  3341, -3853, -3853,  3342, -3853, -3853,   118,
    2346, -3853, -3853, -3853, -3853, 14353,  3635,  3350, -3853, -3853,
    3263,  3296, -3853, -3853,   902, -3853, -3853, -3853, -3853, 11183,
   -3853,  3349,  2354, -3853, 28620, -3853, -3853,  -160,   673, -3853,
    3302, -3853, -3853, -3853,  3304,  1255,  1255, 47629,  3532, -3853,
     783,   902,   338, -3853,  1967, -3853, 47629, 47629,  1981, 47629,
   47629,  2735,  2739,  2740,  1739,  1739, -3853, -3853, -3853, -3853,
   -3853, -3853,  3659, -3853, -3853,  1983, -3853,   691,  3531, -3853,
   -3853, -3853, -3853,  1232, -3853,   266, -3853, -3853, -3853, -3853,
   -3853,   266, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853,
   -3853, -3853,  3543,  3305, -3853, -3853, -3853, -3853, -3853, -3853,
   -3853, -3853, -3853, -3853, -3853, -3853,  3265, -3853, -3853,  3388,
   -3853, 53759, -3853, -3853,  1149,  3294, -3853, -3853, -3853, -3853,
    1462, 47629, 23696,  3334,  3454, -3853,  3012, -3853,   799,   824,
    3245, -3853,   222, 47629, -3853,  3548,   140,  1092, -3853, -3853,
   -3853,  3273,  1963, -3853, -3853, -3853,  3274, -3853, -3853, -3853,
   -3853, -3853, -3853,   310,  3538,  2530,  2530,  2530,  2530,  2346,
   -3853, -3853,  3327, 23696, 15621,  3384, 47629,  1666,  2750, -3853,
    1670,   338, 11183,  2571, 35982, -3853, -3853, -3853, -3853, 11183,
    3282, 11183,  3287,  2001, -3853, -3853, -3853,  1388,  1388, -3853,
     783, -3853, -3853, -3853,  2035,  2042,   222,  2050,  2055, -3853,
   -3853, -3853,  1082,  3289, -3853, 47629, -3853, -3853, -3853,    88,
   -3853, -3853,  2061, -3853,  2112, -3853, -3853, 11183,  3763,  3317,
   47629,   155, -3853, 54985, 54985, 47629, -3853, -3853, -3853, -3853,
    5866, -3853, -3853,   667, -3853, -3853, -3853, -3853, -3853, -3853,
   -3853, -3853, -3853, -3853, -3853,  3884, -3853,  3281, -3853, -3853,
    1149,  3295, -3853,   232, -3853,  2213, -3853, -3853,  4102,  3738,
    1541, -3853, -3853, -3853, -3853, -3853,  3298,  2213,  -160,   108,
   -3853,   222, -3853, -3853, -3853,   338,  3303,  3540, -3853,   140,
   -3853, -3853, -3853,  1092, -3853, -3853, -3853, -3853, -3853, -3853,
   -3853, -3853, -3853, -3853, -3853, -3853, 24928,  2679, -3853,  2224,
   -3853,  2114, -3853, -3853, -3853,  3378,   108,  3796,  3797,   108,
     108,   108,   108,  3308,  2750, -3853,  3780, -3853, -3853, 11183,
   -3853, -3853,  1255,  3534, -3853,  3865,    83,  1255, 47629,  1255,
   47629, -3853,  3753,  3753, -3853,  3519,   222, -3853,   140,  1092,
   -3853,  3231, -3853,   948,   948,   322,   266,   322,  1255, 11183,
   -3853, 11183,  3336, -3853, -3853,  3756, 47629, -3853, -3853, -3853,
   -3853, 11183, -3853, 53759, 53759, -3853, -3853, -3853, -3853,  3912,
   -3853,  3319,   799,  3885,  3578,  3890, -3853,  2711, -3853, -3853,
    3626,  4102, -3853, -3853, -3853,  2530,   235, -3853, -3853, -3853,
    1798,   235, -3853,   235, -3853,  3324, -3853,   108, -3853,  3329,
   -3853, -3853, 47629,  3328, -3853,  -160,   108,   108,  2169,  2169,
    2224, 39660,  3425, -3853, -3853,   108,   338,  3940, -3853,  1075,
    3690, -3853,  2117,  2126,   938, -3853, -3853, -3853, -3853, -3853,
   -3853,  2138, -3853,  3956, -3853,   154,  3603,  3604, -3853, -3853,
   -3853,  1255,  1255, -3853,    48, -3853, -3853,  3728,  3821, 11183,
    1255, 50694,  3339, -3853, -3853, -3853, -3853, -3853, -3853, -3853,
   -3853, -3853, -3853, -3853, -3853, -3853, 54372, 11183, -3853,   667,
    3884, -3853, -3853,  3607, -3853,  3608, -3853, -3853, -3853,  3851,
   53759, -3853,  3843, -3853,   799, -3853, -3853, -3853, -3853, -3853,
   24928, 14353,  2354, -3853,  3384, -3853,  3354, -3853, -3853,   630,
   -3853,  -160,  -160, -3853, -3853, -3853, -3853, -3853, -3853, -3853,
   -3853, -3853,  2146, -3853, 39660, -3853, -3853,  3936,  3937,  3837,
    3941,  1075, -3853,  -113, -3853, -3853, -3853,  3942, -3853,  3944,
    3356,  3361, -3853, -3853, -3853, -3853,  3411,  3869,  3391, 11183,
   53759, -3853,  3848, -3853,  3779,  1255,  3722,  3371, -3853,  3363,
    1255,  3887, 54985, 54985, -3853, -3853, -3853, -3853,  3859, -3853,
   -3853, -3853, -3853, -3853, -3853, -3853, -3853,  2148, -3853, 14987,
   -3853, -3853, -3853, -3853, -3853, 39660, -3853,  3425, -3853,  3379,
     266,   266,  3958,   266, -3853,  3962,  3964,  -113, -3853, -3853,
   -3853, 46403, 46403,   948,   948, -3853,    60, -3853,  1255, 51307,
    3959, 47629, -3853,  3465, -3853, -3853, 11183,  3874, 40886, 51920,
    3380, -3853, -3853, -3853,  3555, -3853,  2711,  3558, -3853,  3354,
   -3853,  3385, -3853,  2764,  2750, -3853, -3853,  3662, -3853, -3853,
     266, -3853,   266,   266, -3853,  3390,  2162, -3853, -3853, 11183,
   -3853,  3873,  3475, -3853,  3392, -3853, 53759,  1255, 53759, -3853,
   -3853,  3820,  3394,   339, -3853,  3393, -3853, -3853, 53759,  3810,
    3865, -3853, 14987,  3405, -3853, -3853,  3407,  3398, -3853, -3853,
   -3853, -3853, -3853,  1255,  3979, 53759, 47629, 48855,  3883, 52533,
    3847, 47629,  4102,  3849,  3853, -3853, 53759, -3853,  3991,  3690,
   -3853, -3853, -3853,  3662,  3493, -3853, 49468, -3853,  2657,  3605,
    3437, -3853, -3853,  3922,  2456, -3853, -3853,   266,  3824, -3853,
   53759, 53759, -3853, -3853, -3853, -3853, 33530, -3853, -3853, -3853,
   -3853, -3853,   888, -3853,  3688,  3417, 50081, 53146, -3853, -3853,
   -3853, 30465, -3853, -3853, -3853,  3860, -3853, 11183, -3853,   679,
   19989,  3573, 33530, -3853, -3853,  1255, -3853, -3853, -3853, -3853,
   39660,  2184, -3853, -3853, 24928, -3853, -3853, -3853, -3853, 23078,
    3419, -3853,   108, -3853, 24928, -3853, -3853, 14353, -3853, -3853
};

/* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -3853, -3853, -3853, -3853, -3853,    70, -3853, -3853, -3853, -3853,
   -3853, -3853, -3853, -3853,  1747, -3853, -3853, -3853, -3853, -3853,
    1946, -3853,   637, -1851, -3853, -3853, -3853, -3853, -3853, -3853,
   -3853, -3853, -3853, -3853, -3853,   638,  1553,  3412, -3853,   379,
   -3853,    63, -3853, -3853, -3853, -2945,   -59,  -234, -3853, -3853,
    1090,    22,  3079,  -233, -3852, -3853, -3853, -3853, -3853, -3853,
   -3853, -3853, -3853, -3853,   398,   397, -3853, -3853,   214, -3853,
   -3853, -2794, -3853, -3853, -3853, -3853, -3853, -3853, -3853,  -407,
    -365,  1829, -3853, -3853, -3853,  4048, -3853,  3521, -3853, -1753,
    2260, -3853, -3853, -3853, -3853, -3853,  2319, -1700, -3853, -3853,
   -3853,  1305, -3853, -3853, -3853, -3853,  -545,   250, -3853,   251,
   -3853,   263, -3853,   265, -3853,   269,   270,   271,   275, -3853,
     280, -3853, -3853,  -357, -3853, -3853, -3853, -3853,   282, -3853,
   -3853, -3853, -3853, -3853, -3853, -3853,  -219, -3853, -3853,   -47,
   -3853, -3853,  -198,   288, -3853,  -149,   296, -3853,   297, -3853,
     -67, -3853,   -57, -3853, -3853, -3853, -3853, -3853, -3853, -3853,
   -3853, -3853, -3853, -3853, -3853, -3853,  3127, -3853, -3853, -3853,
   -2293, -3853, -3853, -2235,  2684, -3853, -1826, -3853, -3853, -1962,
   -3853, -3853, -1791,  1087, -3853, -3853,  1456,   356, -3853, -1408,
   -1904, -1900, -3853, -3853, -3853, -2026, -2025, -1405, -1381, -2310,
   -3853, -3853, -3853,   290, -3853, -3853, -2596,  2113,  2677, -3853,
   -1986, -3853, -3853,  1175, -3853, -3853,  1352,   652,  1358, -3853,
     947,  2886, -1239, -3853, -3853, -3853, -3853, -3853, -3853,    44,
     283,   -44, -3853, -3422,   674, -3853, -3853, -3853, -3853, -3853,
   -3853, -3853, -3853, -2505, -3853, -3853, -3853,  -209, -3853, -3853,
    -123, -3853, -3853,  -169, -3853,   142, -2322, -3853, -3853, -3853,
   -3853,  2655, -1344, -3853,  3694, -3853,  -562,   772,  2158, -2427,
   -1412, -3853,  -913,  -896, -2507, -3853, -3853, -3853, -2131,  1143,
    1545, -3853,   867,  2156, -1917, -3853,  1623, -3853, -3853,   892,
   -3853, -2060, -3853, -3853, -3853,   848, -3853,   851, -3853, -3853,
   -3853,  -954,   820, -2576,  1342,  -642, -3853,   400, -2495, -2573,
   -3853,   631, -3853,   580, -3749, -3357, -3853,  -568, -2117, -2421,
     -15, -3853, -3853,   594, -3108,  1753, -3853, -3853, -3853, -3197,
   -3279,  1477, -3853, -3853,  1057, -3853, -1330,  1056, -3853, -3853,
   -3853,  1068, -3853,   152, -3853, -3853, -3853, -3853, -2863, -3853,
   -3853, -1485, -2087, -3853, -3853,  4227,  4229, -1037, -2748, -2961,
     153,   157, -3853, -3853, -3853,  2676, -3605,   223,   210,   218,
    2106,  -608,   366, -2425, -3853,   419, -3853, -3853, -3853, -3853,
   -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853,
   -3853, -3853, -3853,  2193,  -269, -3853, -3853, -3853, -3853, -3853,
   -3853, -3853, -2457, -2452, -3853, -3853,  1668, -3853, -3853, -3853,
   -1921, -1445, -1440, -1907,   183, -2173, -3341, -3853, -3853, -3853,
   -3853, -3853, -3853,  2808, -3853, -3853, -3853, -3853, -3853,  3675,
   -3853,  2825, -3853, -3853, -3853, -3853, -3853, -3853, -3853,   657,
    1882, -3853, -3853, -3853, -3853, -3853, -3853,   933,  2714, -3853,
   -3853, -3853,     2, -3853, -3853, -3853, -3853,  2437, -3853, -3853,
   -3853, -3853,  2767, -3853, -3853, -3853, -3853, -3853, -3853,  1453,
   -3853,  1920, -3853, -1459, -3853, -3853,  1042,  -980,  1873,  3676,
    2010, -3853, -3853,  -586, -3853, -3853, -3853, -1704, -2458, -3853,
    3382,  -917, -2489,  2424,  -643, -1838,  1085,   463,  3655, -3853,
   -1140, -1043, -3853, -3853,  -637, -3853, -3853, -3853,  -576, -3853,
   -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853,
    1489, -3853, -3853, -3853, -3853, -1207, -3853, -3853, -3853, -3853,
   -3853,  1538, -3853,  2103, -3853,  -485, -3853,  3161, -3853, -3853,
   -3853, -2343, -1912,  1813,   985, -3853, -3853, -3853, -3853, -3853,
   -3853, -3853, -3853, -3853, -1557, -3853, -2382, -3853, -3853, -3853,
   -3853, -3853,  2022, -3853, -3853, -3853, -3853, -3853, -3853, -3853,
   -1691, -3853, -1981,   204, -3853,   346, -3853, -3853, -3853, -3853,
   -3853, -3853, -3853,   -53,   869,   -51, -2569, -1087,  1665, -3853,
   -3853, -1268,  3203, -2350, -3853, -3853, -3853,  2005, -3853, -3853,
   -3853, -3853, -3853,   958, -2980, -1399, -3853, -3853, -3206,  -900,
   -2288,  -880, -3853, -2377,   511, -1860, -1775,  -716,   143, -1331,
   -3853, -3853, -3853, -3853,  -143, -3853, -3853, -3853,   527,  1902,
   -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853,
   -3853,  -563,  -829, -3853, -3853,  2157,  2380, -3853,  3077, -3853,
   -1048,  3331, -3853, -3853,  3332, -3853, -3853, -3853, -3853,  3025,
    2988,  1972, -3853, -3853, -2378, -3853, -3853,  1928, -3853,   776,
    -894, -1702,  1060, -3853, -3853,  1071, -3240, -3853, -3853,  3337,
   -3853, -3853, -3853,  1013, -3853,    81,  3739,  3343, -3853, -3853,
   -3853, -3853, -3853, -3853,  2749, -1057,  3666, -3853, -3853, -3853,
   -3853, -3853, -3853,  2409, -3853, -3853, -3853, -3853, -3853, -3853,
    2934,  3755,  -573, -1315, -3853,  -651,  2908,  2412,  -864, -3853,
   -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853,
   -3853, -3853, -3853, -3853,  2562,   993, -3853, -3853, -3853,  3040,
   -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853,
   -3853, -3853, -3853, -3853, -3853, -3853, -3853,  1109,   -69, -3853,
      72,   -97, -3853,     7, -3853, -3853, -3853, -3853, -3853,  -163,
   -3853, -3853,  -166, -3853,  -972, -1375,   713, -1242, -2046, -3853,
    1097,  3042, -3247,  -668, -1138, -1142, -1856,    58, -3853, -3853,
    2980,  1726,   138,   393,  -417,    -6, -2783,  -104,  -571, -3853,
   -2567, -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853,  1933,
   -3853, -3853, -3853,  1073, -3853,  3781, -3853,  2646,  1079,  3783,
   -3853, -1335,  2486,  1944,  1948, -3853, -3853,  1955, -2219, -3853,
   -3853,   180, -3853,  2561, -3853, -3853, -3853, -3853, -3853, -3853,
   -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853,  3039,  3803,
    3496, -3853,  3074, -3853, -3853, -3853, -3853, -3853,   471, -3853,
     258, -3853, -2072,  2826,   503, -3853,  1577,  -371,  -648, -3853,
   -3853,   470, -3853, -3853,   313,  3812,  3502, -3853, -3853, -3853,
   -3853, -3853, -2778,  -872, -3853, -3409, -2833, -1682, -3853, -3853,
   -2193, -3034, -3853, -3853, -1036, -3853, -3853, -3853, -3853, -2002,
   -3853, -3853, -3853,   137,  3875,  3878, -3853, -3853,   560, -3853,
     -48, -3853, -3853, -3853, -3853, -3853, -3853, -3853,   391,   722,
   -3853, -3853,  3746, -3853, -3853, -3853, -3853,  3747, -3853, -3853,
   -3853, -3853, -3853,  3749, -3853, -3853, -3853, -3853, -3853,  1712,
   -3853, -3853, -3853, -3853, -3853, -3853, -3853, -3853
};

/* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
   positive, shift that token.  If negative, reduce the rule which
   number is the opposite.  If zero, do what YYDEFACT says.
   If YYTABLE_NINF, syntax error.  */
#define YYTABLE_NINF -2605
static const yytype_int16 yytable[] =
{
     491,  1035,   948,  1464,  1049,  1057,   908,   944,   977,  1367,
    1370,  1353,  1471,   533,  2406,  2149,  1578,   541,   617,  1382,
    2080,  1780,   534,  2265,  1904,  1693,   555,  1645,   489,  1692,
    1568,  1569,   553,   567,   783,  1808,   570,  1120,   560,   992,
     567,  1401,  2360,  1429,  2077,  1878,  2979,   585,  2566,  2062,
    1715,  2807,  1007,  2707,  2063,  1395,  1779,  1723,  2709,  2632,
    2926,  1948,  2838,  1401,  2889,  2890,  3254,  3573,  1609,  3294,
    1816,  1024,  1027,  2768,  3090,  1476,  1973,  2456,  2310,  1974,
    1430,   539,  2052,  1994,  2523,  1994,  2390,  2913,   606,  1078,
    1065,  2975,  1477,  2517,  1667,  1911,  2532,  2518,  3410,  2893,
    2536,  2951,  2980,  1975,  2652,  2653,  3578,  1995,  1986,  1995,
     609,  2551,   491,  1921,  2861,   491,   616,   622,  3450,  2904,
    2505,  1924,  1925,  2562,  1291,  3108,  3768,  2914,  3117,  3115,
    1951,  2792,  3652,  3169,  1446,  3902,  1215,  1045,  1182,  1183,
     611,  2131,   135,   613,  3707,  2121,  2401,  3499,  2126,  3621,
    1182,  1183,   605,   636,  1822,  1725,  1726,  2641,  3794,  1729,
    1730,  1731,  1732,  2513,  1734,  1735,  1737,  1739,  1740,  1741,
    1742,  1743,  2127,  3614,  3619,  1182,  1183,  3620,  2168,   548,
    2494,   915,   899,  1182,  1183,  1173,  1174,  1175,  1757,   498,
    1811,  2301,  2165,  4290,  1182,  1183,  3630,  1286,  1216,  1536,
    2936,  2937,  3651,  3320,  2595,  4290,  3114,  3742,  2880,   552,
    3169,  1406,  1291,  4093,  4018,   559,   839,   545,  1792,  2887,
    2301,  2940,  3593,  1986,   115,  2606,  2649,  2609,  2610,  1744,
    2650,  1986,  1240,  2620,  2621,  2570,  1283,  1182,  1183,  3170,
    2252,  2686,  2629,  2630,  1842,  3092,  2002,  2634,  2799,  3808,
    2480,  2481,  2474,  1217,  1947,  1363, -1515,  3079,  2764,  4128,
    1292,  1384,  1601,  1363,  1986,  2467,   627,  2492,  1300, -2488,
    1028,  1182,  1183,  3178,  4284,  4227,  3579,  1453,  3440,  1442,
    3839,  4030,  4034,  4123,  2510,  2511,  1369, -1963,  3303,  3509,
    1317,  3766,  1859,  4124,  1431,  1933,  4018,   843,   549,  2666,
    2531,   967,  2441,  2534,  2535,  3264,  2537,   957,  1160,  2540,
    2541,  1969,   628,  2544,  3276,  1965,  3170,  1860,  2553,  1540,
    2849, -2340,  3041,  2557,  2558,  2559,  2560,  2561,  3061,  3062,
    3792,  2565,  1473,  2567,  3098,   117,  3100,  1399,  1863,  2576,
    2577,  2578,  2579,  3457,  4104,  2583, -2552,  2585,  1292,   884,
    3457,  2314, -1791,   134,   569,  3458,  2743,  2857,  3339,  1411,
   -1791,  3292,  3458,  -901,  1473,  1182,  1183,  2945,  1473,  3459,
    2872,  2571,  3742,  3242,  3852,  3080,  3459,  3854,  1182,  1183,
     915,   899,  4233,   130,   844,   134,  3073,   915,   899,  4019,
    3743,  2873,  1402,  1987,  2759,  -567,  1182,  1183,  4335,  -568,
     641,  2751,  1558,  1559,  1560,  3196,  1819,  1634,  1182,  1183,
    1635,  3068,  2636,  2637,  2638,  2639,  3293,  1100,  1182,  1183,
    4433,  3828,  1033,  1034,  4030,  2874,  1969,  2752,  4034,  1793,
    3832,  4336,  3890,  1541,  1969,  1608,  1745,  1542,   842,  4434,
    1537,  1403,  2954,  2858,  2745,  1312,   629,  1947,  1543,  1120,
    1820,  1499,  2315,  3851,   845,  1843, -2552,  1934,  3853,  3249,
    1746,  1935,  3042,  3309,  3340,  1966,  1434,  1969,  1301,  4014,
     131,  4019,   885, -1515,  1861,   968,  1944,  1454,  2758,  1873,
    1557,  2253,  1161,  4030,  4034,  3965,  2855,  2912,   632,  3884,
    2597,  2946,  3074, -2340,  1184,  3744,  3441,  1185,   616,   958,
     622,  4125,  1101,  4105,  3262,  3263,  1184,  2027,  1987,  1185,
    1864,  4285,  3304,  1219,  4227,  3911,  1987,   797,  1182,  1183,
    3580,   622,  3921,  1182,  1183,  3319,  1443,  3298,  3321,  3322,
    1046,  1184,   837,  2550,  1185,  1602,   616,  2423,   847,  1184,
    1906,  3265,  1185,  1909, -1991, -2419,   546,   886,  1913,  1987,
    3330,   860,  1182,  1183,  1231,  3743,  1720,  3081,   841,  1218,
    2854,  1476,  1231,  1973,  3171,  1794,  1974,   840,   909,  1029,
   -2128,  3584,  2442, -2150,  1926,  1927,   964,  1364,  1477,  1544,
    1949,  2229,  1986,  3001,  1994,  1364,  3942,  2302,   645,  2516,
    1975,  1794,  3788,  1184,   981,  1781,  1185,  1780,  2945,  1051,
    1059,  1592,  1593, -2268,   616,  1385,   996,  2449,  1995, -1515,
    2517,  4090,  1182,  1183,  2518,  2922,  2302,   616,   606,   491,
    2652,  2653,  1633,  1747,   606,  1728,  1022,  1184,   606,   606,
    1185,  1647,  1779,  1036,   996,  1010,  1182,  1183,   616,  1476,
    2052,  3171,  1749,  1660,  1661,  1662,  3313,  1009,  1066,  1067,
    1068,  1666,  2166,  4193,  1073,  3745,  1477, -2419,  1284,  3279,
    1538,  1407,  3082,  2888,  3444,  4345,  3737,  1182,  1183,  4181,
    4094,  3746,  1182,  1183,  1545,  2960,  2957,  2962,  3063,  1760,
    2961,  1823,  1008,  4453,  2973,  3622,  2938,  1047,  1019,   550,
    2282,  2279,   881,  1287,  2977,  2978,  1230,  3708,  2986,  1121,
    2862,  2285,  2934,  2132,  2288,  2997,  2991,  2947,  2297,  2109,
    1788,  2121,   805,  4222,  2126,  4071,  2939,  3013,  3015,  3017,
     941,  1184,  2648,  3018,  1185,  2654, -2488, -2604,   941,  3105,
    3219,  3220,  3221,   852,  1184,  2595,  3172,  1185,  2127,  1186,
     863, -1515,  2649,  1810,  3928,  3058,  2650,  3449,  4027,  2655,
    1812,  1186,  1184,  3529, -2488,  1185,  3425,  2268,  1829,  3747,
    1179,  3179,  1181,   965,  1184,  3438,  2156,  1185,  4013,  1951,
    2903,  3097,  2572,  1538,  1184,  1841,  1186,  1185,  3259,  3260,
    3261,  3607,  3608,  1923,  1186,  1969,  1063,  2141,  1224,   491,
    1226,  3923,   996,   491,   616,  1186,   491,   616,  1858,  1368,
    1232,  1435,  1269,  1373,  1378,  3333, -1515,  3277,  1232,  1412,
    2142,   969,  2595,  3628,  3629,  3627,  1398,  1225,  1162,  4138,
    3576,  1229,  4166,  3632,  1239,  4311,  1887,  3197,  1182,  1183,
    3657,  2512,  3426,  1182,  1183,  1296,  3746,  1910,  1186,   887,
     888,  2972,   890,  3075,   892,   606,  1182,  1183,  -901,  1636,
    1182,  1183,  1637,  2254,  2981,   616,   606,  3605,  3606,   893,
     606,  3318,  3060,  1182,  1183,  3114, -1991,  1987,  3114,  3114,
    1182,  1183,  1186,  3536,  1184,  2598,  3592,  1185,  1463,  1184,
    -567,  3956,  1185,  2948,  -568,  3114,  2812,  3599,  1933,  1182,
    1183,  3583, -2128, -2420,  1538, -2150,  3460,   616,  4188,  3631,
    4190,   616,   616,  3460,  3650,  3653,  3655,  3656,  1184,  1303,
    1953,  1185, -1791,  1231,   616,  3563,  2919,  3453, -1791,  3567,
    1320,  1999,  1182,  1183,  1326, -2268,  2838,  3649,  4011,  3299,
    3300,  2673,  1436,  3323,  1182,  1183, -1475,   136,  2272,  1426,
    1182,  1183,  3066,  4320,  4496,  3190,  4113,  3476,  1182,  1183,
    2175,  2347, -1818,  2374,  3562,  1437,  3572,   606,  3566,  3105,
    4265,  3033,  1182,  1183,  2412,  1498,  1186,  3935,  1184,  1182,
    1183,  1185,   952, -1475,  3542,  -472,   616,  3397,  1472,  1186,
    1700,  1701,  2201,  3234,  2427,  4087,  1969,  1262,   594,  2374,
    1182,  1183,  1184,  1314,  2176,  1185,  1038,  1186,  4182,  2137,
   -2419,  4313,  1182,  1183,  3936, -2420,  1182,  1183,   606,  1186,
   -1819,  1700,  2195,  1182,  1183,  1564,    13,  2580,  2445,  1186,
    1182,  1183,   864,  1184,  2230,  1217,  1185, -1991,  1184,  1297,
   -2419,  1185,   856,  2233,  2234,  2517,  1182,  1183,  1401,  2518,
    3150,  2652,  2653,  2952,  2952,  3440,  3287,  2443,  2479,  2068,
    1934,   953,  3239, -2128,  1935,   985, -2150,  2448, -1818,   606,
    2451,  2452, -2552,  1574,  1182,  1183,  1904,  1904,  1401,   494,
     651,  1182,  1183,   657,  2982,  3957,  1710,  3454,   499,   941,
    2416,  1182,  1183,  1182,  1183,  1973, -2268,  2348,  1974,  1581,
    3030,  2398,  2674,  3453,  3257,  3879,  2310,  1121,  2688,  3559,
    1182,  1183,  1182,  1183,  2523,  4114,  2516,  1994,  2289,  1182,
    1183,  1121,  1975,  1748,  1231,  2551, -1819,  2280,  3332,  1186,
    1231,  2273,    25,  1565,  1186,  4178,  2826,  1572,  1182,  1183,
     568,  1995,   658,  2250,  2251,  2894,  4497,  2772,  2773,  2774,
    4277,  1703,  2062,  1094,  2909,  1182,  1183,  2063,  2983,  1447,
     595,  1182,  1183,  1186,  1228,  2910,  2034,  2724,  3455,  1232,
    1782,  1694,   535,  2649,  2069,  1399,  4018,  2650,  2174,  2353,
    2287,  1781, -2552,  2261,   616,  2052,  3958,  1220,  2520,   865,
    1182,  1183,  3781,  3782,  1184,  4278,  3541,  1185,  2300,  1184,
    4108,  4109,  1185,  3329,  2375,  2293,  2777,  2778,  2304,   544,
    1476,  2581,  1184,  2294,  2037,  1185,  1184,  2656,  1821,  1185,
    1064,   616,  1582,  1186,   623,  1164,  1752,  1477,  3933,  1184,
    2265,   606,  1185,  4267,  1182,  1183,  1184,  4126,  2181,  1185,
    2375,  4187,  2121,  3844,  4268,  2126,   606,  1186,  2648,  4133,
    2771,  2654,  1693,  4171,  1427,  1184,  3477,  3845,  1185,  2984,
    2781,  3128,  3129,  3454,  2370,  2371,  2244,  1121,   616,  2127,
    4316,  3031,  3039,  3441,   659,  2655, -1818,  1330,  1186,  3539,
    3324,  1182,  1183,  1186,  4115,   616,  3595,  4518,  1184,   986,
     941,  1185,  3135,  3136,  2349,  1754,   941,  1797,  2182,  1800,
    1184,   606,  2547,  1185,  3998, -1818,  1184,  1182,  1183,  1185,
     606,   857,  4183,  1704,  1184,   987,   616,  1185,  1976,  3040,
    2822,  4279,  1182,  1183,   579,   606,   606,  3497,  1184,  3132,
    4216,  1185,  3888,  2929, -1819,  1184,  2274,  2417,  1185,  1693,
      37,  1218,  2078,  2917,  3466,  2262,  1894,  1182,  1183, -1475,
     616,  4019,  2275,  1845,  3711,   580,  1184,  2675, -2420,  1185,
    2911,  1853,  3228, -1819,  1854,  1326,    43,  2079,  1184,    43,
    1232,  1185,  1184,   616,  2657,  1185,  1232,  3456,  2376,  1184,
    3937,  3881,  1185,  1874,   909,  1351,  1184,  1955, -2420,  1185,
    1326,  1182,  1183,   491,   491,   491,   606,   491,   606,  1182,
    1183,  3490,  1184,  1905,  4184,  1185,   557,  2758,  1895,  1907,
     491,  2758,   616,  2587,  2376,   491,  3998,  3998,  1152, -1818,
     582,  1888,  1889,  1890,  1538,  1892,  1977,  1182,  1183,  1581,
    1184,  1581,  1693,  1185,  4185,   606,  2995,  1184,  1908,  1186,
    1185,  3846,  1933,  1912,  1186,  1030,  1804,  1184,  2930,  1184,
    1185,   597,  1185,  3152,  3153,  1156,  4269,  1186,  3187,  3188,
    1891,  1186,  1893,  1480,  1182,  1183,  1184, -1818,  1184,  1185,
    -472,  1185,  2188,  2952,  1186,  1184,  2193, -1819,  1185,   598,
    2595,  1186,  2693,    52,  3676,   616,  1182,  1183,  1581,  2194,
    4387,  4388,  3215,  3677,  1184,  3151,   616,  1185,   607,  1922,
    1186,   606,  2595,  1153,  2073,   606,  4349,   495,  1182,  1183,
     496,  1184,  3863,  4074,  1185,  2197,  1557,  1184,  2549,  4172,
    1185,  4173,  1031,  1969,   577, -1819,   600,  1231,    55,  4362,
    4362,    55,  1884,  1186,  1182,  1183,  1869,  2380,  2398,  2878,
    1157,  2516,   606,  1182,  1183,  1186,  1184,  2550,  2209,  1185,
     610,  1186,  1597,  3456,  1652,  1046,  3998,  3998,   868,  1186,
    2216,   616,  3835,   491,   491,  2070,  2139,   491,  4016,  2075,
    1182,  1183,  3058,  1186,  2220,  1182,  1183,  1182,  1183,  1073,
    1186,  2155,  1182,  1183,  2399,  3836,  1182,  1183,  2221,  1896,
    1184,  2135,  2136,  1185,  1978,  2223,   578,  1716,  1182,  1183,
    1581,  1186,  3889,  1979,  1934,  1846,  1870,  1182,  1183,   644,
    1980,  1656,  4427,  1186,  4429,  1780,  2224,  1186,  1182,  1183,
    1182,  1183,  3837,  2078,  1186,   624,  1199,  3863,  2228,  4270,
     803,  1186,  2246,  3678,   612,  1985,  2170,  1184,  3099,  3133,
    1185,  4446,  1438,  3919,  3998,  4073,  3134,  1186,  2079,  3186,
    1779,  1231,  1182,  1183,  1121,  2202,  1182,  1183,   861,  3998,
    1010,  3308,  3145,  1184,  1182,  1183,  1185,   869,  2305,  2648,
    3941,   625,  2654,  3998,  3864,  1186,  4476,  4477,  1184,  2171,
    1219,  1185,  1186,  3045,  2613,  1182,  1183,  1182,  1183,   632,
    3155,   999,  1186,   941,  1186,   117,  2655,  3156,  3046,  3880,
    1693,  3676,  2711,  1184,  3245,  1981,  1185,  3720,  2245,  2141,
    3677,  1186,  1047,  1186,  2776,  2271,  2718,  2196,  1182,  1183,
    1186,  1439,  1947,  1680,  3701,  2157,  3819,  2169,  1847,  1182,
    1183,  2885,  2142,  3998,  2173,  1182,  1183,  1182,  1183,  1186,
     633,  1000,   870,   636,  1986,  3998,  3998,  1184,  2614,  2733,
    1185,  4318, -2604,  2183,  4322,  1184,  1186,  2295,  1185,  3523,
    3505,  2411,  1186,   616,  3504,   606,   616,  4328,  3949,  3950,
    2184,  2747,  2661,  1232,  1033,  1034,  2192,   606,  2812, -1791,
    1717,  2196,  1269,  1184,  1182,  1183,  1185,  1269,  3726,  4000,
    2317,  1186,  3998,  2662,  2114,  1789,  2323,  2323,  1790,  2323,
    1982,  1791,  3998,  3524,  1561,  2205,  1182,  1183,  2114,   606,
    1871,  1182,  1183,   606,  3793,   638,  1307,   941,  2787,  1308,
    1184,  1202,  3820,  1185,  1001, -1713,  1540,  2265,  2959,   616,
     616,   606,   606,  3951,  1562,  1186,  2463,  1182,  1183,  3998,
     640,  3998,  1184,  1121,  2615,  1185,  2323,  2323,  2323,  2206,
    3678,  3998,  3493,  1969,  2989,  2990,  3495,  1986,  1561,   616,
    2322,  2322,  3821,  2322,  1184,  1078,   687,  1185,  3998, -1713,
    3998,   908,  3998,  2345,  4411,  2150,   909,  1303,   564,  3998,
    1182,  1183,  1186,  3896,  1388,   564,  -206, -1791,  1563,  3998,
    1184,  2440,  2644,  1185,   652,  1320,  2373,  1232,   507,  1184,
    1182,  1183,  1185,  3998,  3998,  1182,  1183,  2114,  1186,   654,
    2322,  2322,  2322,  2293,  4054,   495,  1182,  1183,   496,  3998,
    3998,  3273,  2210,  1186,  3998,  2616,  1184,   606,  2380,  1185,
     692,  1184,   655,  1184,  1185,  4055,  1185,  2214,  1184,  2462,
    1541,  1185,  1184,  1389,  1542,  1185,   606,  1969,  1186,  1182,
    1183,  3005,   656,  3006,  1184,  1543,  1878,  1185,  1182,  1183,
     793,  1969,  2215,  1184,   558,  1309,  1185,  2172,  1219,  2464,
    2463,  2369,   643,  1390,  1184,  3623,  1184,  1185,  3624,  1185,
     798,  1231,  1353,   808,  2971,  1718, -1791,   838,  2465,  1182,
    1183,  2450,  1186,   801,  3007,   849,  3282,   915,   899,  2466,
    1186,  1719,  3283,  2189,  1219,  2644,  2219,  1952,  1184,  2277,
    2473,  1185,  1184,   853,  2222,  1185,  1401,  3008,  1515,  1516,
    1184,   855,  1401,  1185,  3451,   255,   704,   257,  1186,  1987,
    2436,   873,  2520,  3307,  2642,  3560,   875,  1002,  2658,   865,
    3284,  1184,  2225,  1184,  1185,  2779,  1185,   979,  3468,  3469,
    2582,   980,  2382,  2383,  3009,  4041,  4042,  4043,  4044,   982,
    1969,  2325,   841,  2326,  2596,  1186,  3104,  2198,  1219,  2115,
    1132,  3482,  2199,  1650,  1184,  1231,  1368,  1185,   989,  2237,
    1273,  1368,  2467,  2115,   998,  1184,  1544,  1186,  1185,  1231,
    3248,  1184,  1151,  1184,  1185, -1713,  1185,  1489,  1490,  1020,
    1003,  2256,  1004,  2464,  2483,  1165,  1166,   720,  1010,  1186,
    2393,  2394,  2395,  2490,  2491,  1211,  1212,  1213,  1214,  1039,
    1693,  1040,  2465,  3102,  2495,  2496,  2497,  2498,  1199,  2506,
    2507,  2354,   616,  2466,  2617,  1186,   616,  1555,  2659, -1713,
    1184,   491,  1987,  1185,  1186,  2687,  2547,   941,   606,   606,
     606,  2682,  2289,  1044,  2685,   115,  2116,  1219,  3121,  1531,
    1532,  1274,  1184,  1075,  1199,  1185,  1275,  1184,  1076,  2664,
    1185,  1186,  1077,  1693,   616,  2769,  1186,  2917,  1186,   616,
    1079,  1545,  2115,  1186,  1391,  3127,  2078,  1186,  1231,  1781,
    3130,  3457,  3137,  1184,  2468,  2355,  1185,  3141,  1080,  1186,
     969,  3142,  1081,  3458,  1084,  2791,  1693,  1085,  1186,  1276,
    2995,  2079,  2678,  2679,  2680,  1086,  2467,  3459,  2380,  1186,
    4149,  1186,  3143,  2356,  1277,  4236,  2381,  1232,   915,  3615,
    4238,  2931,  4239,  3144,  2608,  3146,  1184,  2608,  2608,  1185,
    2608,   941,  1087,  2608,  2608,  2608,  2608,  2608,  2608,  2608,
    2211,  1219,  2608,  1186,  2608,   941,  1184,  1186,  2493,  1185,
    -653,  1184,  1088,  2469,  1185,  1186,   115,  3149,  3241,  1089,
    2520,  3154,  1184,   616,  1090,  1185,  2212,  1219,  1223,  3157,
    2213,  1219,  1199,  2521,  4150,  4235,  1186,  1091,  1186,  4067,
    4068,  2357,  2217,  1219,  3586,  3587,  2354,  3010,  2788,  3185,
    3159,  1222,  3161,   616,  1092,  1184,  2117,  1095,  1185,  1097,
     973,   974,  4069,   975,  1184,   976,   749,  1185,  1098,  1186,
    1392,  1232,  1099,  1202,   616,  3019,  1244,  4135,  2468,  1102,
    1186,  3662,  1227,  3163,  1904,  1232,  1186,  1270,  1186,  1182,
    1183,  1393,  2382,  2383,  3164,  1184,  2548,  1103,  1185,  1272,
    3165,  2354,  3487,  1104,   941,  1105,  2820,  3807,   116,  1202,
    2355,  3531,  2549,  2114,  4155,  1106,  2640,  4158,  4159,  4160,
    4161,  1278,  2358,  2508,  2509,  1986,  3296,   117,  2761,  1219,
    2384,  1394,  1291,  1107,  -653,  1186,  2411,  1368,  2843,  1281,
     502,  1108,  2846,  2797,  2798,  4259,   616,  2469,  1693,  3488,
    1109,  3099,  3245,  1110,  2265,  3807,  1413,  1186,  -653,  2866,
    1111,  2868,  1186,  1112,  2697,  2355,  3609,  1199,  2520,  3612,
    3613,  3489,   915,   899,  2078,  2114,  3716,  3147,  1219,  3251,
    3252,  2521,  1115,   909,  1232,  1414,  3625,  1116,  1186,  1122,
    2698,  2499, -1791,  2356,  2996,  1905,  1905,   118,  1123,  2079,
    2114,  1280,  3719,  3255,  3256,  1124,  4253,  1125, -1515,  2791,
    3421,  3422,  4082,  4083,  4251,  4252,  3501,  1219,  1614,  3526,
    3527,  1204,  1205,  4264,  1126,  1694,   119,  1202,  3667,  3668,
    1127,  1186,  1128,  1415,   616,   616,  1129,  1416,  2699,  3704,
    3713,  2700,  3721,  1219,  1289,  3725,  3738,  1219,  1291,  2701,
    4148,  1186,  3754,  3755, -1791,  2500,  1186,  1204,  1205,  3717,
    1130,  2357,  3867,  2509, -1515,  3727,  1969,  1186,  1292,  2218,
    3728,  1133,   884,  2644,  1134,  2596,  3882,  3883,   120,  1135,
    2596,  3729,  -653,  2501,  2944,  2956,  2596,  4254,   502,  1136,
    2596,  2499,  2967,  1137,  3012,  2958,  1138, -1515,  1139, -1515,
    1186,  2968,  2967,  2865,  2596,  2596,  3904,   616,  2967,  1186,
    3886,  3883,  1140,  2988,  3730, -1515,  2596,  1141,  1694,  1618,
   -1515,  1142,  2078,  3795, -1515,  2992,  2463,   606,  1969,  1143,
    3000,  2359,  1144,  2499, -1515,  1145,  3003,  3004,  2967,  1146,
    1186, -1515,  2358,  3887,  3883,  2596,  3029,  2079, -1515,  1147,
    -653,  2502,  1148,  1969,  4037,  2500,  1149,  3055,  3943,  3527,
   -1515,  1150,  1202,  1207,  1208,  1209,  1210,  1211,  1212,  1213,
    1214, -1515,  3946,  3883,  3954,  3955, -1515,  1585,  1586,  1587,
   -1515,  1189,  1190,  2501,  1292, -1515,  1417,  1154,  2115,  1598,
    1155,  3002,  4081,  3256,  1231,   885,  1158,  2500,  1159,  1207,
    1208,  1209,  1210,  1211,  1212,  1213,  1214,  2499,   121,   586,
    1987,  3475,  3905,  3906,  1163, -1515,  1167,  3907,  3908,  1191,
    1653,   606,  2596,  1657,  1619,  2501,  4085,  3883,  1622,  1168,
    1192, -1515,  2503,  4086,  3883,  1623, -1515,  1169,  2969,  2970,
    4519,  4088,  3883,   505,  1676,  1677,  4089,  3883,  1681,  3325,
    2115,  2502,  4095,  4096, -1515,   587,  1231, -1515,  1170,  2464,
    1198,  2116,  1418,  3502, -1515,  2999,  1695,  1696,  1171,  1193,
     886,  2500,   908,  1172,  2702,  2115, -1515, -1515,  2465,   122,
    1194,  1231,  2522,  3337,  1221,  3084, -1515, -1515,  1290,  2466,
     119,  3343, -1515,  2502,  3460,  3345,  4255,  1298,  -653,  2501,
    1299, -1515,  1199,  4097,  4096,  4151,  4152,  1195,  4275,  3256,
    1204,  1205,  1315,  1624,  3616,  3395, -1515,  4276,  3256,  1209,
    1210,  1211,  1212,  1213,  1214,  1419,  -653,  1327,   588,  4282,
    3527,  1329,  2503,  2499,  3059,  1346,  3014,  4326,  4327,  4368,
    4369,  3418,   123,  1347, -1005,  1956,  1348,  3683,  2116,  1351,
    1269,  2359,  2317,  4422,  3420,  1296,   616,   616,   616,  1957,
     941,  1354,  4461,  4462,   606,  1199, -1515,  2502,  1359,  1626,
   -1515,  1196,  2467,  1360,  2503,  4508,  4509,  3897,  3898,  1683,
    1684,  1379,  2820,   616,  4056,  1383,  1694,  4257,  4257, -1515,
     124,   505,  1387, -1515,  1399,  3779,  1408,  2500,  3697,  3698,
    4226,  1121, -1515,  1409,   616,   616,   616,  3545,  3546,  3511,
    3512,  2117,  1410,  3963,  1425,  2703,  4057,  3272,  1432,  3963,
    1433,  1428,   941,  3752,  3753,  2501,  1441,  1368,  3227,  1444,
    1445,  2822, -1515,  1448,  1451, -1515,  1449,  1420,  1456,  1461,
    1232,  2504,  1473,  3633,  1479,  1481,  1483,   941,  2503,  1486,
    3709,  1491,  1207,  1208,  1209,  1210,  1211,  1212,  1213,  1214,
    1199,   795,   796, -1791,  1693,   799,   800,  1200,  4147,   802,
    1487,   804,  1492,  1493,  -653,  1496,  1500,  1421,  1497,  1501,
    1502,  1549, -1515,  2704,  2468,  1550,  3634,  1551,  1554, -1515,
    3635,  1201,  3636,  2502,  1199,  1556,  1557,  1202,  2117,  1575,
   -1515, -1515,  1232,  1577,  2596, -1515,  1627,  2596,  2596,  1217,
    1581,  2705,  2967,   563,  1588,  1639,  1600,  1182,  1183, -1515,
     520, -1515,  1629,  1958,  1603,   616,  1649,  1232,  2596,  1651,
    3826,  3827,  1650,  3067,  1711,  4058,  1674,  3798,  3637,  1691,
    1727,  2504,  1702,  3830, -1515, -1515,  2967,  1733, -1515, -1515,
    3833, -1515,  1756,  2469,  2967,  1753,   666,  1758,  2967,  1956,
    1202,  3271,   887,   888,   889,   890,   891,   892,  1759,  1762,
    1765,  1766,  1767,  1957,  2503,  3855,  1768,   589,  3857,   521,
    1033,  1034,   893,  2504,  3349,  1769,  1770,   606,  1771,  1772,
    1783,  1784,  3405,  3285,  3286,  1785,  3288,  1786,   491,   590,
    1959,  1806,  3415,  1826,  2967, -1515,  1817,  2499,  1809,   522,
    3016,  1828,  1610,  1611,  1612,  1613,  1614, -1515,  4059,  3424,
    1825,  1827,  1033,  1034,  1832,  1960,  3411,  1835,  1838,  1839,
    1840,  3801,  3435,   591,  1849, -1515,  4060, -1515,   687,   606,
    1855,  1879,   523,  1882,  1886,  1204,  1205,  1914,  2327,  1915,
    3448,  3350,  1916,  1917,  1203,  1202,  1919,  2504,  1693,  4061,
   -1515, -1515,  4147,  1928, -1515, -1515,  1931,  1945,  -826,  1954,
    3331,  2500,  2328,  2000,  1538,  3914,  2082,  2005,  2006,  3335,
    2158,  2065,  2083,  2084,  4189,  1961,  2329,  2085,  2086,  1202,
     524,  2087,   592,  1353,  1199,   691,  2088,  2330,  2089,  2501,
    2090,  2091,   692,  3437,  2092,  1353,  2093,  2094,  1204,  1205,
    -791,  -791,  2008,  2108,  1615,  1616,  1617,  1618,  2095,  2096,
    -791,  1206,  2097,  3550,  2098,  2099,  2011,  2129,  2100,  2101,
     697,  2102,  2103,  2104,  2012,  2105,  3500,  1958,  2106,  2107,
    2110,  2128,  2134,  2144,  2866,  1243,  2331,  2332,  3944,  3945,
    2203,  3947,  3948,  2145,  2207,  2146,  2147,  2153,  2014,  2159,
    2187,  2161,  2179,  1246,  3924,  2162,  2163,  2502,  3427,  1033,
    1034,  2190,  1473,  2178,  2333,  3638,  2015,  2180,  2231,  1962,
    2185,  2186,  3639,  2504,  2196,  2200,  2235,  2820,  1208,  1209,
    1210,  1211,  1212,  1213,  1214,  2204,  3138,  2236,   704,  2208,
    2226,  2227,  2232,  1204,  1205,  2020,  2843,  3538,  2266,  2247,
    3540,  2248,   616,  4241,  1959,   -64,  2249,  2270, -1222,  3640,
     525,   616,  1619,  2276,  1620,  1621,  1622,  2788,  1214,  2286,
    2306,   941, -1344,  1623,   909,   909,  4373,  1204,  1205,  1960,
    1100,  2334,   501,  2320,  1152,  1156,  2338,  4062,  2503,  2346,
    1207,  1208,  1209,  1210,  1211,  1212,  1213,  1214,  1247,  1694,
    2352,  2463,  2363,   715,  2366,  2388,  2391,  2392,  1246,  2407,
    2596,  2413,  2414,  1184,   718,  2418,  1185,  2024,   719,   720,
    2596,  2415,  2967,  1248,  2025,  1515,  1516,  1249,  2865,  1202,
    3641,   526,  1694,  2335,  2419,  2420,  2421,  2422,  2967,  1961,
     606,  2026,  2596,  2437,  2439,  4066,  2444,  2471,  1693,  2476,
    2458,  1624,  4503,  2472,  2475,  2478,  2484,  1368,  4378,  4379,
    2482,  4381,  1693,  2485,  1250,  3199,  4512,  1693,  2486,  4373,
     502,  4503,  1693,  2487,  3200,  2488,  4512,  2489,  2520,  3642,
    2533,  2519,  1251,  2542,  3201,  1207,  1208,  1209,  1210,  1211,
    1212,  1213,  1214,  2543,   527,  2545,  3202,  3203,  3204,   528,
    2028,  2546,  2556,  1247,  -857,  2552,  1625,  1626,  4418,  2555,
    4419,  4420,  3205,  4120,  3055,  2538,  2539,   529,  2029,  2554,
    2563,  1209,  1210,  1211,  1212,  1213,  1214,  3555,  1248,  2564,
     666,  2568,  1249,  1962,  2464,  3643,  2569,  2574,  2575,  3696,
    3696,  3696,   530,  3773,  1252,  2584,  2603,  2605,  2643,  2599,
    2683,  2665,   503,  2465,  2691,   616,  2687,   531,  2713,  2696,
    2714,  2712,  2294,  2725,  2466,  2726,  1531,  1532,  2738,  1250,
    2760,  2767,  2033,  2775,  2784,  2795,  2800,  1204,  1205,  2785,
    2035,  2796,  2802,  2005,  2006,  4473,  4231,  1251,  2801,  1331,
    4229,  4066,  4488,  2803,  2813,  2804,  2815,  2504,  1332,   791,
    2810,  2816,  2823,  2824,  1812,  3801,   741,  2827,  1333,  2828,
    3802,  2829,   687,  3803,  2833,  2847,  -791,  -791,  2008,  3762,
    1334,  1335,  1336,   747,  1694,  2848,  -791,   791,   749,  2850,
    2411,   750,  2011,  2851,  2852,  2399,  1337,  2453,  2454,  2455,
    2012,   616,  2398,  1863,  1627,  2870,  2871,  2467,  1864,  1252,
    2041,  3664,  2881,  2891,  2895,  2896,  2897,  2898,  1186,  1628,
    1629,  2899,  2905,  2906,  2014,  2907,  2923,  2927,  2928,   691,
    3783,  2974,  1253,  2941,  3688,  2976,   692,  3048,  1473,  3696,
    3038,  1254,  2015,  3044,  3804,  3805,  3050,  3064,   606,  3065,
    3069,  3070,  3071,  3072,  2034,  2154,  1255,  3816,  3811,  3105,
    3096,  3109,  3116,  3118,   697,  1368,  2042,  2043,  2044,  3111,
    3224,  2020,  3166,  2045,  1256,  3119,  3236,  3222,  4515,  1207,
    1208,  1209,  1210,  1211,  1212,  1213,  1214,  3120,   616,  2046,
    3122,  3206,  2047,  3123,  3229,  3182,  1307,  3176,  3177,  3258,
    3269,  3270,  3289,  3278,  3217,   791,  3290,  3302,  3207,  3334,
     791,  3316,  3809,   504,  3233,  3858,  4297,  1257,  3247,  2468,
    3180,  3297,  3862,  3184,  3189,  3301,  3253,  3192,  2049,  3305,
    3550,  4297,   704,   505,  3924,  3232,  3317,  1253,  3250,  3274,
    3435,   791,  3275,  2024,  3315,  4307,  1254,  1258,  3328,  3338,
    2025,  3348,  3346,  1905,  3776,  3347,  3406,   791,  3409,  3412,
    3413,  1255,  3417,   616,  3419,  3423,   495,  2026,  3420,   496,
    3430,  3431,  3436,  2380,  3439,  3445,   506,  3446,  -573,  1256,
    2667,   507,  1947,  3447,  3091,  3467,  3465,  3471,  2469,  4229,
    3478,  3479,  3491,  2253,  2002,  3171,  2027,   715,  3507,  3508,
    3517,   791,   791,   791,   791,  3519,  3522,  3528,  3543,  3530,
    3551,  3556,   719,   720,   791,  1338,   508,  3564,  3565,  3208,
    3557,  3577,  1257,  3585,   509,  3588,  2028,  3589,   616,  3594,
    3603,  3610,  1339,  3661,  3838,  3209,  3658,  2597,  3663,  3665,
    3671,  2846,  3675,  3685,  2029,  3686,  3684,  3689,  3692,  3690,
    3696,  3696,  1258,  3696,  3696,  3699,  3702,  3703,  3704,  3705,
    3706,  4066,  3712,  3710,  4297,  3714,  3722,  3715,  3718,  3723,
    3733,  3732,  3739,  3868,  4405,  2611,  2612,  3724,  2619,  3740,
    1368,  2622,  2623,  2624,  2625,  2626,  2627,  2628,  3750,  4485,
    2631,  3758,  2633,  3741,  3757,  3210,  3767,  3273,  2033,   809,
     810,  3769,  3755,  3770,  3774,  3775,  2035,  3777, -1427, -1432,
    3814,  3649,  3211,  3787,  3817,  4485,  3829,  3843,  3796,  3797,
    3842,  3847,  3849,  4437,  3799,  4008,   606,  3800,  3825,  3831,
    3850,  3652,  4517,  3856,  3869,  3894,  3891,  3696,  3885,  3870,
    3893,  3895,  4297,  3899,  4297,  3912,  3900,  3901,  3917,  3913,
    3930,  4456,  3932,  3916,  3953,  3959,   718,  3713,  3966,  1340,
    3967,  4297,  4003,  4012,  4036,  4038,  4026,   606,  4040,  4046,
    4053,  4049,  4078,  4099,  4117,  3927,  2041,  4080,   616,  4091,
    4119,   811,  -346,  4140,  4129,  4154,  4122,  4156,  4157,  4132,
    4009,  4297,  4297,  4165,  4139,  4169,  4493,  4167,  4162,  4174,
     741,  4193,  -364,  3033,  3802,  4196,  4223,  3803,  4224,  4092,
    4221,  4225,   812,  4261,  4266,  4273,  4240,   747,  4246,  1341,
    4243,  4283,   749,  4293,  4103,   750,   813,  4286,  4287,  4110,
    4294,  4047,  2042,  2043,  2044,  4298,  1342,  4304,  4305,  2045,
    4306,  4309,  4330,  4331,  4316,  4332,  4341,  4333,  4339,   814,
    4340,  4342,   815,  4343,  4344,  2046,  4345,  4350,  2047,  4352,
     791,  4354, -2322,  4364,  4380,   816,  4358,  4355,  4382,  4377,
    4383,  4393,  4398,  4396,  4407,  4409,  4406,  4412,  3804,  3805,
    4415,  4421,  4424,  4425,  4426,  4430,  4431,   817,  4438,  4435,
    4443,  4445,  4449,  4451,  2049,  4454,  4441,  4457,  4442,  4455,
    1694,  4460,  4467,  4464,  4465,  4474,  4489,  4490,  4494,  4504,
    4112,  4514,   818,  2793,  2635,   791,   791,  4260,   819,  3673,
    1056,  3674,  2935,  3873,   791,   791,   791,   791,   791,   791,
     791,  4232,  2846,  4130,  2846,  4365,  1485,  4366,   791,   791,
    3871,   791,   791,  3875,  4007,  4506,   791,   791,  2668,  4469,
     791,   791,   791,   791,   576,   791,   791,   951,  2389,   820,
    4197,  3213,  2313,   791,   791,  4478,   791,   791,   791,   791,
     791,  3978,  3979,   791,   791,   791,   791,   791,   791,   791,
     791,   791,   791,   791,  3981,   791,  3982,  4390,   791,   791,
    3984,  3985,  3986,   791,  3351,  3352,  3987,   791,   791,   791,
    3353,  3988,  3354,  3989,  3355,  3356,  4053,  4291,  4391,  3992,
     791,   791,   791,  4303,  4363,   616,  4134,  3993,  3994,   791,
    2791,  3357,  4302,   877,   810,  1553,   791,   791,   791,  4015,
     791,  2050,  2588,  3342,  1998,  3235,  3760,   791,   791,   791,
    3521,   791,   791,   791,   791,   791,  3240,   791,   791,   791,
     791,   791,   791,   791,   791,  1815,  4245,  4048,   791,   791,
    4315,  3763,   848,  4440,  4376,  4414,  4164,  2113,   653,  3358,
    2586,  3691,  3359,  3089,  3428,  3602,  2593,  3035,  3590,  3617,
    3360,  4375,  3618,  3961,  3659,  3848,  3810,  4314,  3834,  3168,
    3494,   821,  3496,  2925,  1694,   822,  3492,  4177,   516,  3361,
     517,  4179,  2143,  4144,  4137,   811,  4180,  4142,  2677,  4025,
    3964,   823,  2590,  1932,   962,  3023,  3362,  3813,   616,   824,
    3591,  2830,  2111,  3226,  2372,  2811,  1930,   825,  2074,  2853,
    3518,   978,  2766,  2397,  3191,  3503,   812,  1358,  1648,  2710,
    3561,   810,  3363,  2765,  3364,  2918,  4084,  4176,  4385,  3672,
     813,  4386,  2782,  4250,  1599,   826,  3597,  3365,  3366,  3934,
    4459,  3926,  4258,  2860,  2681,  1755,  3765,  3534,   827,   828,
    1830,  2836,  2809,   814,  1465,  1466,   815,  3533,  3571,   616,
    1467,  4312,  1803,   966,  2152,  1082,  1468,  1074,  2446,   816,
     947,  1898,  2447,  1920,  2307,  3055,  3055,   791,  3367,  3601,
    3520,  4439,  4458,  4334,  4384,  4395,  4513,   791,  4516,  3537,
    3841,   817,  4403,  3553,  2269,   911,  1114,   912,   829,  2879,
    3554,  2425,   811,  2877,  1796,   791,  2876,  2869,  3368,  1837,
    2351,   880,  1131,  1345,  4039,  3214,   818,  3369,  3370,  4045,
    3371,   882,   819,  2133,  1350,   647,  1844,   830,   648,  4323,
    4324,  4121,  3866,   812,  1060,  1061,  4507,  1062,     0,  1852,
       0,     0,     0,     0,     0,     0,     0,   813,     0,   831,
       0,   832,     0,     0,     0,     0,  3372,  3373,  3374,  1176,
    4447,     0,     0,   820,     0,  4452,     0,     0,     0,     0,
     814,     0,     0,   815,     0,  3375,  3376,  3377,     0,     0,
       0,     0,  3378,     0,     0,  3379,   816,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4486,     0,  3380,  3381,     0,     0,     0,     0,   817,     0,
    1509,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1694,     0,  4486,     0,     0,     0,
       0,     0,     0,   818,   616,  3382,  3383,     0,  1694,   819,
       0,     0,     0,  1694,     0,     0,     0,     0,  1694,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3384,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1510,  1511,  1512,  1513,  1514,  1515,  1516,  1517,  1518,  1519,
     820,  1520,  1521,  1522,  1523,  1524,  1525,  1526,  1527,  1528,
       0,  1529,  1530,     0,     0,   821,     0,     0,     0,   878,
       0,     0,     0,     0,     0,     0,     0,     0,   791,     0,
       0,     0,     0,     0,  3385,   823,     0,     0,  3386,     0,
       0,     0,     0,   824,     0,     0,     0,     0,     0,     0,
    3387,   825,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   826,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   827,   828,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3388,     0,
       0,  3389,     0,     0,  3390,  3391,  3392,  3393,     0,     0,
       0,     0,     0,     0,     0,     0,   791,   791,   791,     0,
       0,     0,   821,     0,     0,  1508,  1531,  1532,     0,     0,
       0,   791,   829,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   823,     0,     0,     0,  3394,  3395,     0,     0,
     824,     0,     0,     0,     0,     0,     0,   791,   825,     0,
       0,   830,     0,   791,     0,     0,   791,     0,   791,     0,
       0,  3396,     0,     0,   791,     0,   791,   791,     0,     0,
    1579,  1580,     0,   831,     0,   832,   826,     0,     0,  1590,
    1591,     0,     0,  1594,  1595,  1596,     0,     0,     0,   827,
     828,     0,     0,  1604,  1605,     0,  1606,  1607,     0,     0,
       0,  1632,     0,     0,     0,  1641,  1642,  1643,  1644,     0,
    1646,     0,     0,     0,     0,     0,     0,     0,  1654,  1655,
       0,  1658,  1659,     0,     0,     0,     0,     0,  1663,  1664,
    1665,     0,     0,  1668,  1669,  1670,  1671,  1672,  1673,   829,
    1675,     0,   791,  1678,  1679,     0,     0,     0,  1682,     0,
       0,     0,  1685,  1689,  1690,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1697,  1698,  1699,   830,     0,
       0,     0,     0,     0,  1707,     0,     0,     0,     0,     0,
       0,  1712,  1713,  1714,     0,     0,     0,     0,     0,     0,
     831,     0,   832,   791,     0,     0,     0,     0,     0,     0,
       0,   791,     0,  2001,     0,     0,     0,     0,  2002,     0,
    2003,     0,  2004,     0,  1750,     0,     0,     0,     0,     0,
       0,     0,  2005,  2006,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2007,     0,     0,     0,  2008,  2009,     0,
       0,     0,     0,  2010,     0,     0,     0,     0,     0,     0,
       0,  2011,     0,     0,  2005,  2006,     0,     0,     0,  2012,
       0,     0,     0,     0,     0,     0,     0,     0,  2013,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2014,     0,     0,     0,     0,     0,  2008,
       0,     0,  1610,  1611,  1612,  1613,  1614,  1473,     0,     0,
       0,  2015,     0,  2011,     0,     0,     0,     0,     0,  2016,
    2017,  2012,     0,     0,     0,     0,  2018,     0,     0,     0,
       0,     0,     0,     0,  2019,     0,     0,     0,  -931,     0,
    2020,     0,  1851,     0,     0,  2014,     0,     0,     0,     0,
       0,  2021,  1857,     0,     0,     0,     0,     0,     0,  1473,
       0,     0,     0,  2015,     0,     0,     0,     0,     0,     0,
    1885,  2022,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2020,   791,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1615,  1616,  1617,  1618,     0,     0,
    2023,     0,  2024,     0,     0,     0,     0,     0,     0,  2025,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2026,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2027,
       0,     0,     0,     0,  2024,     0,   791,     0,     0,     0,
     791,  2025,     0,     0,     0,   791,   791,     0,     0,     0,
       0,     0,     0,     0,   791,     0,     0,   791,  2026,     0,
       0,     0,     0,     0,     0,  2028,     0,   791,   791,     0,
     791,   791,     0,   791,   791,   791,   791,   791,     0,     0,
     791,     0,  1619,  2029,  1620,  1621,  1622,  2030,     0,   791,
       0,     0,     0,  1623,     0,     0,   791,     0,   791,     0,
     791,   791,     0,   791,   791,     0,     0,     0,   791,   791,
     791,     0,     0,     0,   791,   791,   791,  2028,   791,     0,
     791,     0,   791,     0,   791,  2031,   791,     0,     0,     0,
    2032,   791,     0,     0,     0,  2029,     0,  2033,     0,     0,
       0,     0,  2034,  2164,     0,  2035,     0,     0,     0,     0,
     791,     0,     0,     0,     0,     0,     0,   791,     0,     0,
     791,     0,     0,     0,     0,     0,   791,     0,     0,   791,
       0,  1624,     0,   791,     0,     0,  2036,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2033,
    2037,  2038,  2039,  2040,     0,     0,     0,  2035,     0,     0,
       0,     0,     0,     1,     0,     2,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2041,     0,     0,     0,     0,
       3,     0,     0,     0,     4,     0,  1625,  1626,     0,     0,
       0,     0,     0,   791,     0,     0,     0,     0,     5,     6,
       0,  2239,  2241,  2243,     0,     0,     7,     0,     0,     0,
       8,     9,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    10,  2041,     0,     0,
       0,  2042,  2043,  2044,     0,     0,     0,     0,  2045,     0,
       0,     0,  2278,     0,    11,     0,     0,     0,     0,     0,
       0,  2283,     0,  2284,  2046,     0,     0,  2047,     0,     0,
       0,     0,     0,     0,     0,     0,    12,   791,     0,     0,
       0,   791,     0,     0,     0,    13,    14,    15,     0,     0,
    2048,     0,     0,  2042,  2043,  2044,     0,     0,    16,    17,
    2045,     0,     0,  2049,     0,     0,     0,     0,     0,     0,
       0,    18,     0,     0,     0,     0,  2046,     0,     0,  2047,
       0,     0,     0,     0,     0,    19,     0,     0,     0,     0,
       0,     0,     0,     0,  1627,     0,     0,     0,     0,     0,
       0,     0,     0,    20,     0,     0,     0,  2368,     0,  1628,
    1629,     0,     0,     0,     0,  2049,     0,     0,    21,     0,
      22,     0,     0,  -931,     0,    23,     0,     0,    24,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    25,     0,    26,     0,     0,     0,     0,  2424,     0,
       0,     0,     0,     0,     0,     0,  2434,     0,     0,  2005,
    2006,    27,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    28,     0,
       0,     0,    29,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  -791,  -791,  2008,     0,     0,     0,     0,     0,
       0,     0,  -791,     0,     0,     0,     0,     0,  2011,     0,
       0,     0,     0,     0,     0,     0,  2012,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2014,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1473,     0,     0,     0,  2015,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    30,     0,
       0,     0,     0,     0,     0,     0,     0,  2020,     0,   791,
       0,     0,     0,   791,     0,    31,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    32,     0,
       0,     0,     0,   791,   791,     0,     0,     0,     0,    33,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   791,     0,     0,     0,     0,     0,
       0,    34,     0,   791,    35,   791,    36,   791,     0,    37,
       0,     0,    38,    39,     0,     0,     0,     0,  2604,  2024,
       0,     0,    40,     0,    41,     0,  2025,     0,     0,     0,
       0,     0,    42,     0,   791,     0,     0,     0,    43,   791,
       0,     0,     0,  2026,     0,     0,    44,     0,     0,     0,
       0,    45,     0,    46,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   791,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    47,     0,     0,     0,     0,     0,     0,
      48,  2690,     0,     0,     0,  2692,     0,     0,     0,     0,
    2694,  2695,  2028,     0,     0,     0,     0,     0,     0,  2708,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2029,     0,  2715,  2716,     0,  2717,     0,     0,  2719,  2720,
    2721,  2722,  2723,    49,     0,     0,     0,     0,   791,     0,
       0,     0,     0,     0,  2727,    50,     0,     0,     0,    51,
       0,  2728,    52,  2729,     0,  2730,  2731,    53,  2732,     1,
       0,     2,     0,  2735,  2736,  2737,     0,     0,     0,  2739,
    2740,  2741,     0,  2742,  2033,  2744,     0,  2746,     0,  2748,
       4,  2749,  2035,     0,   791,    54,  2750,     0,     0,     0,
       0,     0,     0,     0,     5,     6,     0,     0,     0,     0,
      55,     0,     7,     0,     0,  2770,     8,     9,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2780,    10,     0,  2783,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      11,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2041,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    12,     0,     0,     0,     0,     0,     0,     0,
       0,    13,    14,    15,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    16,    17,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   791,   791,     0,     0,     0,     0,     0,  2042,  2043,
    2044,    19,     0,     0,     0,  2045,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    20,
       0,  2046,     0,     0,  2047,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    21,     0,    22,     0,     0,     0,
       0,    23,  3021,     0,    24,     0,     0,  2002,     0,  2003,
       0,     0,  2434,     0,   791,     0,     0,     0,     0,     0,
    2049,  2005,  2006,     0,     0,     0,     0,    25,     0,    26,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   791,
       0,     0,     0,   791,   791,     0,   791,    27,     0,     0,
       0,     0,  2007,     0,     0,   791,  2008,     0,     0,     0,
     791,     0,     0,   791,    28,   791,   791,     0,    29,     0,
    2011,     0,     0,     0,     0,     0,     0,     0,  2012,     0,
       0,     0,     0,     0,     0,     0,     0,  2013,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   791,     0,
       0,     0,  2014,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1473,     0,     0,     0,
    2015,     0,     0,     0,     0,     0,     0,     0,  2016,     0,
       0,     0,   791,     0,     0,  3022,     0,     0,     0,     0,
       0,     0,     0,  2019,     0,     0,     0,     0,     0,  2020,
       0,     0,     0,     0,     0,     0,   791,     0,     0,     0,
       0,     0,     0,     0,    30,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2022,    31,   856,   914,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    32,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    33,     0,   915,   899,     0,
       0,     0,     0,     0,     0,     0,     0,   791,   916,     0,
       0,  2024,     0,     0,     0,   791,     0,    34,  2025,     0,
      35,     0,    36,     0,     0,    37,     0,     0,    38,    39,
       0,   917,     0,   918,     0,  2026,     0,     0,    40,     0,
      41,     0,     0,   919,     0,     0,     0,     0,    42,     0,
       0,     0,     0,     0,    43,     0,     0,     0,  2027,     0,
       0,     0,    44,     0,  3101,     0,     0,    45,  3103,    46,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3125,  3126,
       0, -1791,   920,     0,  2028,     0,     0,   921,     0,    47,
     922,     0,     0,     0,     0,     0,    48,     0,     0,  3148,
       0,     0,  2029,     0,     0,     0,  2030,     0,  3158,     0,
    3160,     0,  3162,     0,     0,     0,     0,     0,     0,   923,
       0,   924,     0,     0,     0,     0,     0,     0,   925,     0,
     926,     0,     0,     0,     0,     0,     0,     0,     0,    49,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2032,
       0,    50,     0,   927,   928,    51,  2033,     0,    52,     0,
       0,     0,     0,    53,  2035,     0,     0,     0,     0,     0,
       0,  3223,     0,     0,     0,     0,     0,   929,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    54,     0,     0,     0,     0,     0,     0,   930,     0,
       0,     0,     0,     0,     0,     0,    55,     0,     0,     0,
    2038,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   791,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   931,     0,     0,  2041,     0,     0,     0,     0,     0,
       0,     0,     0,  2434,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   791,   791,
       0,     0,     0,     0,     0,     0,     0,   791,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3310,
    2042,  2043,  2044,     0,     0,     0,   932,  2045,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2046,     0,     0,  2047,     0,     0,     0,
       0,   933,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   934,   935,     0,     0,   936,   937,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2049,     0,     0,     0,   938,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   939,     0,     0,     0,  3407,  3408,     0,     0,
     791,     0,     0,     0,     0,   940,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   791, -2359,     0,     0,     0,
     941,     0,     0,     0,     0,     0,     0,     0,     0,   791,
       0,     0,     0,     0,     0,     0,     0,     0,   942,  3452,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3470,     0,     0,     0,  3473,  3474,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3481,     0,     0,     0,     0,  3483,     0,     0,  3484,     0,
    3485,  3486,     0,     0,     0, -2359,     0,     0,     0,     0,
       0,   943,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3996,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3514,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   791,     0,     0,     0,     0,     0,
       0,  3514,   791,     0,     0,     0,     0,     0,     0,   791,
       0,   791,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   791,     0,     0,
       0,     0,     0,  3996,  3996,     0,     0,     0,     0,     0,
       0,     0,  3514,     0,     0,     0,     0,     0,     0,     0,
    3582,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   791,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   791,
       0,   791,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   791,     0,  3996,  3996,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4237,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   791,
       0,  3996,     0,     0,     0,     0,  3514,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3996,   791,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3996,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   791,     0,  3785,  3786,     0,     0,     0,     0,     0,
       0,     0,  3310,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   791,
    3996,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3996,  3996,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   791,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3996,
       0,     0,     0,     0,     0,     0,   791,     0,     0,  3996,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   791,
       0,     0,     0,     0,     0,  3892,  3996,     0,  3996,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3996,     0,
       0,     0,   791,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3996,     0,  3996,     0,  3996,
    3514,     0,     0,     0,     0,     0,  3996,     0,     0,     0,
       0,     0,     0,     0,  3310,     0,  3996,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3996,  3996,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3996,  3996,     0,     0,
       0,  3996,     0,     0,     0,     0,     0,   791,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   791,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4072,     0,     0,
       0,     0,     0,     0,  4077,     0,  4079,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4098,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3310,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4191,     0,  4192,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4200,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4295,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4300,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3514,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4348,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4397,     0,     0,     0,     0,     0,     0,   137,     0,
     662,   139,   140,   141,   142,     0,     0,   143,     0,     0,
       0,   144,     0,     0,   663,     0,   146,   147,   148,   149,
     664,   151,     0,   152,  4423,     0,   665,   153,   666,   667,
     668,   154,   669,     0,   155,   156,   157,  1686,   158,     0,
     159,   160,     0,     0,   161,   670,   671,   162,   163,     0,
     164,   672,   673,   166,     0,   167,   168,   169,   170,   674,
     172,     0,   675,   174,     0,   175,   176,   177,   178,   179,
     180,   181,   182,   183,     0,   184,   185,     0,   186,   187,
     188,   676,   190,     0,   677,   678,   191,     0,     0,   192,
     679,   193,   680,     0,   194,   681,   682,     0,   195,   196,
     197,   683,   684,   685,     0,     0,     0,     0,   686,   200,
     687,     0,     0,   688,   201,   202,     0,   203,     0,     0,
       0,   204,  4495,   205,   206,   207,   208,   209,     0,     0,
       0,   210,     0,     0,   211,   212,   213,     0,     0,     0,
     214,     0,   215,   216,     0,   217,   218,   219,     0,     0,
     220,   221,  3514,   222,   223,   224,   225,   226,   227,   689,
       0,   228,   229,   230,   231,   232,   690,   691,   233,   234,
       0,   235,   236,   237,   692,     0,   238,     0,     0,     0,
     693,   240,     0,   241,     0,   242,     0,   243,   694,   245,
     695,     0,   247,     0,   248,     0,   696,     0,   249,   250,
       0,   251,   697,     0,   252,   253,     0,     0,     0,   698,
     255,   256,   257,   699,     0,   258,   259,   260,     0,     0,
     261,     0,     0,     0,   700,   262,   263,   701,     0,     0,
     264,     0,     0,     0,   265,   266,     0,   267,   268,     0,
       0,     0,   269,     0,     0,   270,   271,     0,  1687,   272,
       0,   702,   273,   274,     0,     0,     0,     0,     0,   703,
     276,     0,   277,     0,   278,     0,   279,   280,     0,     0,
     704,     0,     0,     0,     0,   281,     0,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,     0,   299,   300,   301,   705,   302,
     303,   304,   305,   706,   306,   307,     0,     0,     0,     0,
     308,   309,   310,   311,   707,   313,     0,     0,   708,   315,
     709,   316,     0,   317,   710,   711,   712,   713,   714,   322,
     323,   324,   325,   326,     0,   715,   327,   328,     0,     0,
     329,   330,   331,   332,   716,   717,   718,   333,   334,     0,
     719,   720,   335,     0,   336,   337,   721,     0,   339,   340,
     341,     0,   342,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   343,   344,   345,   722,   346,   347,     0,   348,
     349,   723,   351,   352,   353,   354,   724,   725,   357,   726,
       0,   358,   359,   360,     0,   361,     0,   362,   363,   364,
     365,   366,     0,   727,   368,   369,     0,     0,   370,     0,
       0,     0,   371,   372,   373,   374,   375,     0,     0,   376,
     377,   378,   379,   380,     0,   381,   382,     0,   383,   384,
     385,   728,   729,   386,     0,   387,     0,   388,   389,     0,
     390,   391,   392,     0,   730,     0,   731,   394,   395,   396,
     397,   398,   732,   733,   401,   402,   403,   404,     0,   734,
     406,     0,     0,     0,   407,   408,   409,   410,     0,     0,
       0,   411,     0,     0,     0,   412,     0,   413,   414,   415,
     416,     0,   417,   418,   419,   420,   421,     0,     0,     0,
       0,     0,   422,   423,   424,     0,   425,   426,     0,   427,
       0,     0,   428,     0,     0,   429,   430,   431,   432,   433,
     434,   735,   736,   435,   436,     0,   437,   438,   737,   440,
     441,   442,   738,   739,   443,   444,   445,   446,   740,   447,
     448,     0,     0,   449,   450,   451,   452,     0,   741,   453,
     454,     0,   742,   743,   744,   745,     0,     0,     0,     0,
    1688,   459,   460,     0,   746,   747,   748,   462,   463,   464,
     749,   465,   466,   750,   467,   468,     0,   469,   470,     0,
       0,   471,     0,     0,   472,     0,   473,     0,   751,   475,
       0,     0,   752,   753,   754,   755,   476,     0,     0,   477,
     756,     0,   757,   478,   479,   480,   758,   759,     0,     0,
       0,     0,     0,     0,   483,   484,     0,   485,   486,   487,
       0,     0,   760,     0,     0,     0,   761,   762,     0,     0,
       0,     0,   763,   764,     0,     0,   765,   766,     0,     0,
     767,   768,   137,     0,   662,   139,   140,   141,   142,  2430,
       0,   143,     0,     0,     0,   144,     0,     0,   663,     0,
     146,   147,   148,   149,   664,   151,     0,   152,     0,     0,
    2431,   153,   666,   667,   668,   154,   669,     0,   155,   156,
     157,     0,   158,     0,   159,   160,     0,     0,   161,   670,
     671,   162,   163,     0,   164,   672,   673,   166,     0,   167,
     168,   169,   170,   674,   172,     0,   675,   174,     0,   175,
     176,   177,   178,   179,   180,   181,   182,   183,     0,   184,
     185,     0,   186,   187,   188,   676,   190,     0,   677,   678,
     191,     0,     0,   192,   679,   193,   680,     0,   194,   681,
     682,     0,   195,   196,   197,   683,   684,   685,     0,     0,
       0,     0,   686,   200,   687,     0,     0,  2432,   201,   202,
       0,   203,     0,     0,     0,   204,     0,   205,   206,   207,
     208,   209,     0,     0,     0,   210,     0,     0,   211,   212,
     213,     0,     0,     0,   214,     0,   215,   216,     0,   217,
     218,   219,     0,     0,   220,   221,     0,   222,   223,   224,
     225,   226,   227,   689,     0,   228,   229,   230,   231,   232,
     690,   691,   233,   234,     0,   235,   236,   237,   692,     0,
     238,     0,     0,     0,   693,   240,     0,   241,     0,   242,
       0,   243,   694,   245,   695,     0,   247,     0,   248,     0,
     696,     0,   249,   250,     0,   251,   697,     0,   252,   253,
       0,     0,     0,   698,   255,   256,   257,   699,     0,   258,
     259,   260,     0,     0,   261,     0,     0,     0,   700,   262,
     263,   701,     0,     0,   264,     0,     0,     0,   265,   266,
       0,   267,   268,     0,     0,     0,   269,     0,     0,   270,
     271,     0,     0,   272,     0,   702,   273,   274,     0,     0,
       0,     0,     0,   703,   276,     0,   277,     0,   278,     0,
     279,   280,     0,     0,   704,     0,     0,     0,     0,   281,
       0,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,     0,   299,
     300,   301,   705,   302,   303,   304,   305,   706,   306,   307,
       0,     0,     0,     0,   308,   309,   310,   311,   707,   313,
       0,     0,   708,   315,   709,   316,     0,   317,   710,   711,
     712,   713,   714,   322,   323,   324,   325,   326,     0,   715,
     327,   328,     0,     0,   329,   330,   331,   332,   716,   717,
     718,   333,   334,     0,   719,   720,   335,     0,   336,   337,
     721,  2433,   339,   340,   341,     0,   342,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   343,   344,   345,   722,
     346,   347,     0,   348,   349,   723,   351,   352,   353,   354,
     724,   725,   357,   726,     0,   358,   359,   360,     0,   361,
       0,   362,   363,   364,   365,   366,     0,   727,   368,   369,
       0,     0,   370,     0,     0,     0,   371,   372,   373,   374,
     375,     0,     0,   376,   377,   378,   379,   380,     0,   381,
     382,     0,   383,   384,   385,   728,   729,   386,     0,   387,
       0,   388,   389,     0,   390,   391,   392,     0,   730,     0,
     731,   394,   395,   396,   397,   398,   732,   733,   401,   402,
     403,   404,     0,   734,   406,     0,     0,     0,   407,   408,
     409,   410,     0,     0,     0,   411,     0,     0,     0,   412,
       0,   413,   414,   415,   416,     0,   417,   418,   419,   420,
     421,     0,     0,     0,     0,     0,   422,   423,   424,     0,
     425,   426,     0,   427,     0,     0,   428,     0,     0,   429,
     430,   431,   432,   433,   434,   735,   736,   435,   436,     0,
     437,   438,   737,   440,   441,   442,   738,   739,   443,   444,
     445,   446,   740,   447,   448,     0,     0,   449,   450,   451,
     452,     0,   741,   453,   454,     0,   742,   743,   744,   745,
       0,     0,     0,     0,     0,   459,   460,     0,   746,   747,
     748,   462,   463,   464,   749,   465,   466,   750,   467,   468,
       0,   469,   470,     0,     0,   471,     0,     0,   472,     0,
     473,     0,   751,   475,     0,     0,   752,   753,   754,   755,
     476,     0,     0,   477,   756,     0,   757,   478,   479,   480,
     758,   759,     0,     0,     0,     0,     0,     0,   483,   484,
       0,   485,   486,   487,     0,     0,   760,     0,     0,     0,
     761,   762,     0,     0,     0,     0,   763,   764,     0,     0,
     765,   766,     0,     0,   767,   768,   137,     0,   662,   139,
     140,   141,   142,     0,     0,   143,     0,     0,     0,   144,
       0,     0,   663,     0,   146,   147,   148,   149,   664,   151,
       0,   152,     0,     0,   665,   153,   666,   667,   668,   154,
     669,     0,   155,   156,   157,     0,   158,     0,   159,   160,
       0,     0,   161,   670,   671,   162,   163,     0,   164,   672,
     673,   166,     0,   167,   168,   169,   170,   674,   172,     0,
     675,   174,     0,   175,   176,   177,   178,   179,   180,   181,
     182,   183,     0,   184,   185,     0,   186,   187,   188,   676,
     190,     0,   677,   678,   191,     0,     0,   192,   679,   193,
     680,     0,   194,   681,   682,     0,   195,   196,   197,   683,
     684,   685,     0,     0,     0,     0,   686,   200,   687,     0,
       0,   688,   201,   202,     0,   203,     0,     0,     0,   204,
       0,   205,   206,   207,   208,   209,     0,     0,     0,   210,
       0,     0,   211,   212,   213,     0,     0,     0,   214,     0,
     215,   216,     0,   217,   218,   219,     0,     0,   220,   221,
       0,   222,   223,   224,   225,   226,   227,   689,     0,   228,
     229,   230,   231,   232,   690,   691,   233,   234,     0,   235,
     236,   237,   692,     0,   238,     0,     0,     0,   693,   240,
    2238,   241,     0,   242,     0,   243,   694,   245,   695,     0,
     247,     0,   248,     0,   696,     0,   249,   250,     0,   251,
     697,     0,   252,   253,     0,     0,     0,   698,   255,   256,
     257,   699,     0,   258,   259,   260,     0,     0,   261,     0,
       0,     0,   700,   262,   263,   701,     0,     0,   264,     0,
       0,     0,   265,   266,     0,   267,   268,     0,     0,     0,
     269,     0,     0,   270,   271,     0,     0,   272,     0,   702,
     273,   274,     0,     0,     0,     0,     0,   703,   276,     0,
     277,     0,   278,     0,   279,   280,     0,     0,   704,     0,
       0,     0,     0,   281,     0,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,     0,   299,   300,   301,   705,   302,   303,   304,
     305,   706,   306,   307,     0,     0,     0,     0,   308,   309,
     310,   311,   707,   313,     0,     0,   708,   315,   709,   316,
       0,   317,   710,   711,   712,   713,   714,   322,   323,   324,
     325,   326,     0,   715,   327,   328,     0,     0,   329,   330,
     331,   332,   716,   717,   718,   333,   334,     0,   719,   720,
     335,     0,   336,   337,   721,     0,   339,   340,   341,     0,
     342,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     343,   344,   345,   722,   346,   347,     0,   348,   349,   723,
     351,   352,   353,   354,   724,   725,   357,   726,     0,   358,
     359,   360,     0,   361,     0,   362,   363,   364,   365,   366,
       0,   727,   368,   369,     0,     0,   370,     0,     0,     0,
     371,   372,   373,   374,   375,     0,     0,   376,   377,   378,
     379,   380,     0,   381,   382,     0,   383,   384,   385,   728,
     729,   386,     0,   387,     0,   388,   389,     0,   390,   391,
     392,     0,   730,     0,   731,   394,   395,   396,   397,   398,
     732,   733,   401,   402,   403,   404,     0,   734,   406,     0,
       0,     0,   407,   408,   409,   410,     0,     0,     0,   411,
       0,     0,     0,   412,     0,   413,   414,   415,   416,     0,
     417,   418,   419,   420,   421,     0,     0,     0,     0,     0,
     422,   423,   424,     0,   425,   426,     0,   427,     0,     0,
     428,     0,     0,   429,   430,   431,   432,   433,   434,   735,
     736,   435,   436,     0,   437,   438,   737,   440,   441,   442,
     738,   739,   443,   444,   445,   446,   740,   447,   448,     0,
       0,   449,   450,   451,   452,     0,   741,   453,   454,     0,
     742,   743,   744,   745,     0,     0,     0,     0,     0,   459,
     460,     0,   746,   747,   748,   462,   463,   464,   749,   465,
     466,   750,   467,   468,     0,   469,   470,     0,     0,   471,
       0,     0,   472,     0,   473,     0,   751,   475,     0,     0,
     752,   753,   754,   755,   476,     0,     0,   477,   756,     0,
     757,   478,   479,   480,   758,   759,     0,     0,     0,     0,
       0,     0,   483,   484,     0,   485,   486,   487,     0,     0,
     760,     0,     0,     0,   761,   762,     0,     0,     0,     0,
     763,   764,     0,     0,   765,   766,     0,     0,   767,   768,
     137,     0,   662,   139,   140,   141,   142,     0,     0,   143,
       0,     0,     0,   144,     0,     0,   663,     0,   146,   147,
     148,   149,   664,   151,     0,   152,     0,     0,   665,   153,
     666,   667,   668,   154,   669,     0,   155,   156,   157,     0,
     158,     0,   159,   160,     0,     0,   161,   670,   671,   162,
     163,     0,   164,   672,   673,   166,     0,   167,   168,   169,
     170,   674,   172,     0,   675,   174,     0,   175,   176,   177,
     178,   179,   180,   181,   182,   183,     0,   184,   185,     0,
     186,   187,   188,   676,   190,     0,   677,   678,   191,     0,
       0,   192,   679,   193,   680,     0,   194,   681,   682,     0,
     195,   196,   197,   683,   684,   685,     0,     0,     0,     0,
     686,   200,   687,     0,     0,   688,   201,   202,     0,   203,
       0,     0,     0,   204,     0,   205,   206,   207,   208,   209,
       0,     0,     0,   210,     0,     0,   211,   212,   213,     0,
       0,     0,   214,     0,   215,   216,     0,   217,   218,   219,
       0,     0,   220,   221,     0,   222,   223,   224,   225,   226,
     227,   689,     0,   228,   229,   230,   231,   232,   690,   691,
     233,   234,     0,   235,   236,   237,   692,     0,   238,     0,
       0,     0,   693,   240,  2240,   241,     0,   242,     0,   243,
     694,   245,   695,     0,   247,     0,   248,     0,   696,     0,
     249,   250,     0,   251,   697,     0,   252,   253,     0,     0,
       0,   698,   255,   256,   257,   699,     0,   258,   259,   260,
       0,     0,   261,     0,     0,     0,   700,   262,   263,   701,
       0,     0,   264,     0,     0,     0,   265,   266,     0,   267,
     268,     0,     0,     0,   269,     0,     0,   270,   271,     0,
       0,   272,     0,   702,   273,   274,     0,     0,     0,     0,
       0,   703,   276,     0,   277,     0,   278,     0,   279,   280,
       0,     0,   704,     0,     0,     0,     0,   281,     0,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,     0,   299,   300,   301,
     705,   302,   303,   304,   305,   706,   306,   307,     0,     0,
       0,     0,   308,   309,   310,   311,   707,   313,     0,     0,
     708,   315,   709,   316,     0,   317,   710,   711,   712,   713,
     714,   322,   323,   324,   325,   326,     0,   715,   327,   328,
       0,     0,   329,   330,   331,   332,   716,   717,   718,   333,
     334,     0,   719,   720,   335,     0,   336,   337,   721,     0,
     339,   340,   341,     0,   342,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   343,   344,   345,   722,   346,   347,
       0,   348,   349,   723,   351,   352,   353,   354,   724,   725,
     357,   726,     0,   358,   359,   360,     0,   361,     0,   362,
     363,   364,   365,   366,     0,   727,   368,   369,     0,     0,
     370,     0,     0,     0,   371,   372,   373,   374,   375,     0,
       0,   376,   377,   378,   379,   380,     0,   381,   382,     0,
     383,   384,   385,   728,   729,   386,     0,   387,     0,   388,
     389,     0,   390,   391,   392,     0,   730,     0,   731,   394,
     395,   396,   397,   398,   732,   733,   401,   402,   403,   404,
       0,   734,   406,     0,     0,     0,   407,   408,   409,   410,
       0,     0,     0,   411,     0,     0,     0,   412,     0,   413,
     414,   415,   416,     0,   417,   418,   419,   420,   421,     0,
       0,     0,     0,     0,   422,   423,   424,     0,   425,   426,
       0,   427,     0,     0,   428,     0,     0,   429,   430,   431,
     432,   433,   434,   735,   736,   435,   436,     0,   437,   438,
     737,   440,   441,   442,   738,   739,   443,   444,   445,   446,
     740,   447,   448,     0,     0,   449,   450,   451,   452,     0,
     741,   453,   454,     0,   742,   743,   744,   745,     0,     0,
       0,     0,     0,   459,   460,     0,   746,   747,   748,   462,
     463,   464,   749,   465,   466,   750,   467,   468,     0,   469,
     470,     0,     0,   471,     0,     0,   472,     0,   473,     0,
     751,   475,     0,     0,   752,   753,   754,   755,   476,     0,
       0,   477,   756,     0,   757,   478,   479,   480,   758,   759,
       0,     0,     0,     0,     0,     0,   483,   484,     0,   485,
     486,   487,     0,     0,   760,     0,     0,     0,   761,   762,
       0,     0,     0,     0,   763,   764,     0,     0,   765,   766,
       0,     0,   767,   768,   137,     0,   662,   139,   140,   141,
     142,     0,     0,   143,     0,     0,     0,   144,     0,     0,
     663,     0,   146,   147,   148,   149,   664,   151,     0,   152,
       0,     0,   665,   153,   666,   667,   668,   154,   669,     0,
     155,   156,   157,     0,   158,     0,   159,   160,     0,     0,
     161,   670,   671,   162,   163,     0,   164,   672,   673,   166,
       0,   167,   168,   169,   170,   674,   172,     0,   675,   174,
       0,   175,   176,   177,   178,   179,   180,   181,   182,   183,
       0,   184,   185,     0,   186,   187,   188,   676,   190,     0,
     677,   678,   191,     0,     0,   192,   679,   193,   680,     0,
     194,   681,   682,     0,   195,   196,   197,   683,   684,   685,
       0,     0,     0,     0,   686,   200,   687,     0,     0,   688,
     201,   202,     0,   203,     0,     0,     0,   204,     0,   205,
     206,   207,   208,   209,     0,     0,     0,   210,     0,     0,
     211,   212,   213,     0,     0,     0,   214,     0,   215,   216,
       0,   217,   218,   219,     0,     0,   220,   221,     0,   222,
     223,   224,   225,   226,   227,   689,     0,   228,   229,   230,
     231,   232,   690,   691,   233,   234,     0,   235,   236,   237,
     692,     0,   238,     0,     0,     0,   693,   240,  2242,   241,
       0,   242,     0,   243,   694,   245,   695,     0,   247,     0,
     248,     0,   696,     0,   249,   250,     0,   251,   697,     0,
     252,   253,     0,     0,     0,   698,   255,   256,   257,   699,
       0,   258,   259,   260,     0,     0,   261,     0,     0,     0,
     700,   262,   263,   701,     0,     0,   264,     0,     0,     0,
     265,   266,     0,   267,   268,     0,     0,     0,   269,     0,
       0,   270,   271,     0,     0,   272,     0,   702,   273,   274,
       0,     0,     0,     0,     0,   703,   276,     0,   277,     0,
     278,     0,   279,   280,     0,     0,   704,     0,     0,     0,
       0,   281,     0,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
       0,   299,   300,   301,   705,   302,   303,   304,   305,   706,
     306,   307,     0,     0,     0,     0,   308,   309,   310,   311,
     707,   313,     0,     0,   708,   315,   709,   316,     0,   317,
     710,   711,   712,   713,   714,   322,   323,   324,   325,   326,
       0,   715,   327,   328,     0,     0,   329,   330,   331,   332,
     716,   717,   718,   333,   334,     0,   719,   720,   335,     0,
     336,   337,   721,     0,   339,   340,   341,     0,   342,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   343,   344,
     345,   722,   346,   347,     0,   348,   349,   723,   351,   352,
     353,   354,   724,   725,   357,   726,     0,   358,   359,   360,
       0,   361,     0,   362,   363,   364,   365,   366,     0,   727,
     368,   369,     0,     0,   370,     0,     0,     0,   371,   372,
     373,   374,   375,     0,     0,   376,   377,   378,   379,   380,
       0,   381,   382,     0,   383,   384,   385,   728,   729,   386,
       0,   387,     0,   388,   389,     0,   390,   391,   392,     0,
     730,     0,   731,   394,   395,   396,   397,   398,   732,   733,
     401,   402,   403,   404,     0,   734,   406,     0,     0,     0,
     407,   408,   409,   410,     0,     0,     0,   411,     0,     0,
       0,   412,     0,   413,   414,   415,   416,     0,   417,   418,
     419,   420,   421,     0,     0,     0,     0,     0,   422,   423,
     424,     0,   425,   426,     0,   427,     0,     0,   428,     0,
       0,   429,   430,   431,   432,   433,   434,   735,   736,   435,
     436,     0,   437,   438,   737,   440,   441,   442,   738,   739,
     443,   444,   445,   446,   740,   447,   448,     0,     0,   449,
     450,   451,   452,     0,   741,   453,   454,     0,   742,   743,
     744,   745,     0,     0,     0,     0,     0,   459,   460,     0,
     746,   747,   748,   462,   463,   464,   749,   465,   466,   750,
     467,   468,     0,   469,   470,     0,     0,   471,     0,     0,
     472,     0,   473,     0,   751,   475,     0,     0,   752,   753,
     754,   755,   476,     0,     0,   477,   756,     0,   757,   478,
     479,   480,   758,   759,     0,     0,     0,     0,     0,     0,
     483,   484,     0,   485,   486,   487,     0,     0,   760,     0,
       0,     0,   761,   762,     0,     0,     0,     0,   763,   764,
       0,     0,   765,   766,     0,     0,   767,   768,   137,     0,
     662,   139,   140,   141,   142,     0,     0,   143,     0,     0,
       0,   144,     0,     0,   663,     0,   146,   147,   148,   149,
     664,   151,     0,   152,     0,     0,   665,   153,   666,   667,
     668,   154,   669,     0,   155,   156,   157,     0,   158,     0,
     159,   160,     0,     0,   161,   670,   671,   162,   163,     0,
     164,   672,   673,   166,     0,   167,   168,   169,   170,   674,
     172,     0,   675,   174,     0,   175,   176,   177,   178,   179,
     180,   181,   182,   183,     0,   184,   185,     0,   186,   187,
     188,   676,   190,     0,   677,   678,   191,     0,     0,   192,
     679,   193,   680,     0,   194,   681,   682,     0,   195,   196,
     197,   683,   684,   685,     0,     0,     0,     0,   686,   200,
     687,     0,     0,   688,   201,   202,     0,   203,     0,     0,
       0,   204,     0,   205,   206,   207,   208,   209,     0,     0,
       0,   210,     0,     0,   211,   212,   213,     0,     0,     0,
     214,     0,   215,   216,     0,   217,   218,   219,     0,     0,
     220,   221,     0,   222,   223,   224,   225,   226,   227,   689,
       0,   228,   229,   230,   231,   232,   690,   691,   233,   234,
       0,   235,   236,   237,   692,     0,   238,     0,     0,     0,
     693,   240,     0,   241,     0,   242,     0,   243,   694,   245,
     695,     0,   247,     0,   248,     0,   696,     0,   249,   250,
       0,   251,   697,     0,   252,   253,     0,     0,     0,   698,
     255,   256,   257,   699,     0,   258,   259,   260,     0,     0,
     261,     0,     0,     0,   700,   262,   263,   701,     0,     0,
     264,     0,     0,     0,   265,   266,     0,   267,   268,     0,
       0,     0,   269,     0,     0,   270,   271,     0,     0,   272,
       0,   702,   273,   274,     0,     0,     0,     0,     0,   703,
     276,     0,   277,     0,   278,     0,   279,   280,     0,     0,
     704,     0,     0,     0,     0,   281,     0,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,     0,   299,   300,   301,   705,   302,
     303,   304,   305,   706,   306,   307,     0,     0,     0,     0,
     308,   309,   310,   311,   707,   313,     0,     0,   708,   315,
     709,   316,     0,   317,   710,   711,   712,   713,   714,   322,
     323,   324,   325,   326,     0,   715,   327,   328,     0,     0,
     329,   330,   331,   332,   716,   717,   718,   333,   334,     0,
     719,   720,   335,     0,   336,   337,   721,     0,   339,   340,
     341,     0,   342,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   343,   344,   345,   722,   346,   347,     0,   348,
     349,   723,   351,   352,   353,   354,   724,   725,   357,   726,
       0,   358,   359,   360,     0,   361,     0,   362,   363,   364,
     365,   366,     0,   727,   368,   369,     0,     0,   370,     0,
       0,     0,   371,   372,   373,   374,   375,     0,     0,   376,
     377,   378,   379,   380,     0,   381,   382,     0,   383,   384,
     385,   728,   729,   386,     0,   387,     0,   388,   389,     0,
     390,   391,   392,     0,   730,     0,   731,   394,   395,   396,
     397,   398,   732,   733,   401,   402,   403,   404,     0,   734,
     406,     0,     0,     0,   407,   408,   409,   410,     0,     0,
       0,   411,     0,     0,     0,   412,     0,   413,   414,   415,
     416,     0,   417,   418,   419,   420,   421,     0,     0,     0,
       0,     0,   422,   423,   424,     0,   425,   426,     0,   427,
       0,     0,   428,     0,     0,   429,   430,   431,   432,   433,
     434,   735,   736,   435,   436,     0,   437,   438,   737,   440,
     441,   442,   738,   739,   443,   444,   445,   446,   740,   447,
     448,     0,     0,   449,   450,   451,   452,     0,   741,   453,
     454,     0,   742,   743,   744,   745,     0,     0,     0,     0,
       0,   459,   460,     0,   746,   747,   748,   462,   463,   464,
     749,   465,   466,   750,   467,   468,     0,   469,   470,     0,
       0,   471,     0,     0,   472,     0,   473,     0,   751,   475,
       0,     0,   752,   753,   754,   755,   476,     0,     0,   477,
     756,     0,   757,   478,   479,   480,   758,   759,     0,     0,
       0,     0,     0,     0,   483,   484,     0,   485,   486,   487,
       0,     0,   760,     0,     0,     0,   761,   762,     0,     0,
       0,     0,   763,   764,     0,     0,   765,   766,     0,     0,
     767,   768,   137,     0,   662,   139,   140,   141,   142,     0,
       0,   143,     0,     0,     0,   144,     0,     0,   663,     0,
     146,   147,   148,   149,   664,   151,     0,   152,     0,     0,
     665,   153,   666,   667,   668,   154,   669,     0,   155,   156,
     157,     0,   158,     0,   159,   160,     0,     0,   161,   670,
     671,   162,   163,     0,   164,   672,   673,   166,     0,   167,
     168,   169,   170,   674,   172,     0,   675,   174,     0,   175,
     176,   177,   178,   179,   180,   181,   182,   183,     0,   184,
     185,     0,   186,   187,   188,   676,   190,     0,   677,   678,
     191,     0,     0,   192,   679,   193,   680,     0,   194,   681,
     682,     0,   195,   196,   197,   683,   684,   685,     0,     0,
       0,     0,   686,   200,   687,     0,     0,   688,   201,   202,
       0,   203,     0,     0,     0,   204,     0,   205,   206,   207,
     208,   209,     0,     0,     0,   210,     0,     0,   211,   212,
     213,     0,     0,     0,   214,     0,   215,   216,     0,   217,
     218,   219,     0,     0,   220,   221,     0,   222,   223,   224,
     225,   226,   227,   689,     0,   228,   229,   230,   231,   232,
     690,   691,   233,   234,     0,   235,   236,   237,   692,     0,
     238,     0,     0,     0,   693,   240,     0,   241,     0,   242,
       0,   243,   694,   245,   695,     0,   247,     0,   248,     0,
     696,     0,   249,   250,     0,   251,   697,     0,   252,   253,
       0,     0,     0,   698,   255,   256,   257,   699,     0,   258,
     259,   260,     0,     0,   261,     0,     0,     0,   700,   262,
     263,   701,     0,     0,   264,     0,     0,     0,   265,   266,
       0,   267,   268,     0,     0,     0,   269,     0,     0,   270,
     271,     0,     0,   272,     0,   702,   273,   274,     0,     0,
       0,     0,     0,   703,   276,     0,   277,     0,   278,     0,
     279,   280,     0,     0,   704,     0,     0,     0,     0,   281,
       0,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,     0,   299,
     300,   301,   705,   302,   303,   304,   305,   706,   306,   307,
       0,     0,     0,     0,   308,   309,   310,   311,   707,   313,
       0,     0,   708,   315,   709,   316,     0,   317,   710,   711,
     712,   713,   714,   322,   323,   324,   325,   326,     0,   715,
     327,   328,     0,     0,   329,   330,   331,   332,   716,   717,
     718,   333,   334,     0,   719,   720,   335,     0,   336,   337,
     721,     0,   339,   340,   341,     0,   342,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   343,   344,   345,   722,
     346,   347,     0,   348,   349,   723,   351,   352,   353,   354,
     724,   725,   357,   726,     0,   358,   359,   360,     0,   361,
       0,   362,   363,   364,   365,   366,     0,   727,   368,   369,
       0,     0,   370,     0,     0,     0,   371,   372,   373,   374,
     375,     0,     0,   376,   377,   378,   379,   380,     0,   381,
     382,     0,   383,   384,   385,   728,   729,   386,     0,   387,
       0,   388,   389,     0,   390,   391,   392,     0,   730,     0,
     731,   394,   395,   396,   397,   398,   732,   733,   401,   402,
     403,   404,     0,   734,   406,     0,     0,     0,   407,   408,
     409,   410,     0,     0,     0,   411,     0,     0,     0,   412,
       0,   413,   414,   415,   416,     0,   417,   418,   419,   420,
     421,     0,     0,     0,     0,     0,   422,   423,   424,     0,
     425,   426,     0,   427,     0,     0,   428,     0,     0,   429,
     430,   431,   432,   433,   434,   735,   736,   435,   436,     0,
     437,   438,   737,   440,   441,   442,   738,   739,   443,   444,
     445,   446,   740,   447,   448,     0,     0,   449,   450,   451,
     452,     0,   741,   453,   454,     0,   742,   743,   744,   745,
       0,     0,     0,     0,     0,   459,   460,     0,   746,   747,
     748,   462,   463,   464,   749,   465,   466,   750,   467,   468,
       0,   469,   470,     0,     0,   471,     0,     0,   472,     0,
     473,     0,   751,   475,     0,     0,   752,   753,   754,   755,
     476,     0,     0,   477,   756,     0,   757,   478,   479,   480,
     758,   759,     0,     0,     0,     0,     0,     0,   483,   484,
       0,   485,   486,   487,     0,     0,   760,     0,     0,     0,
     761,   762,     0,     0,     0,     0,   763,  1113,     0,     0,
     765,   766,     0,     0,   767,   768,   137,     0,   662,   139,
     140,   141,   142,  1721,     0,   143,     0,     0,     0,  1722,
       0,     0,   663,     0,   146,   147,   148,   149,   664,   151,
       0,   152,     0,     0,   665,   153,   666,   667,   668,   154,
     669,     0,   155,   156,   157,     0,   158,     0,   159,   160,
       0,     0,   161,   670,   671,   162,   163,     0,   164,   672,
     673,   166,     0,   167,   168,   169,   170,   674,   172,     0,
     675,   174,     0,   175,   176,   177,   178,   179,   180,   181,
     182,   183,     0,   184,   185,     0,   186,   187,   188,   676,
     190,     0,   677,   678,   191,     0,     0,   192,   679,   193,
     680,     0,   194,   681,   682,     0,   195,   196,   197,   683,
     684,   685,     0,     0,     0,     0,   686,   200,   687,     0,
       0,   688,   201,   202,     0,   203,     0,     0,     0,   204,
       0,   205,   206,   207,   208,   209,     0,     0,     0,   210,
       0,     0,   211,   212,   213,     0,     0,     0,   214,     0,
     215,   216,     0,   217,   218,   219,     0,     0,   220,   221,
       0,   222,   223,   224,   225,   226,   227,   689,     0,   228,
     229,   230,   231,   232,   690,   691,   233,   234,     0,   235,
     236,   237,   692,     0,   238,     0,     0,     0,   693,   240,
       0,   241,     0,   242,     0,   243,   694,   245,   695,     0,
     247,     0,   248,     0,   696,     0,   249,   250,     0,   251,
     697,     0,   252,   253,     0,     0,     0,   698,   255,   256,
     257,   699,     0,   258,   259,   260,     0,     0,   261,     0,
       0,     0,   700,   262,   263,   701,     0,     0,   264,     0,
       0,     0,   265,   266,     0,   267,   268,     0,     0,     0,
     269,     0,     0,   270,   271,     0,     0,   272,     0,   702,
     273,   274,     0,     0,     0,     0,     0,   703,   276,     0,
     277,     0,   278,     0,   279,   280,     0,     0,   704,     0,
       0,     0,     0,   281,     0,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,     0,   299,   300,   301,   705,   302,   303,   304,
     305,   706,   306,   307,     0,     0,     0,     0,   308,   309,
     310,   311,   707,   313,     0,     0,   708,   315,   709,   316,
       0,   317,   710,   711,   712,   713,   714,   322,   323,   324,
     325,   326,     0,   715,   327,   328,     0,     0,   329,   330,
     331,   332,   716,     0,   718,   333,   334,     0,   719,   720,
     335,     0,   336,   337,   721,     0,   339,   340,   341,     0,
     342,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     343,   344,   345,   722,   346,   347,     0,   348,   349,   723,
     351,   352,   353,   354,   724,   725,   357,   726,     0,   358,
     359,   360,     0,   361,     0,   362,   363,   364,   365,   366,
       0,   727,   368,   369,     0,     0,   370,     0,     0,     0,
     371,   372,   373,   374,   375,     0,     0,   376,   377,   378,
     379,   380,     0,   381,   382,     0,   383,   384,   385,   728,
     729,   386,     0,   387,     0,   388,   389,     0,   390,   391,
     392,     0,   730,     0,   731,   394,   395,   396,   397,   398,
     732,   733,   401,   402,   403,   404,     0,   734,   406,     0,
       0,     0,   407,   408,   409,   410,     0,     0,     0,   411,
       0,     0,     0,   412,     0,   413,   414,   415,   416,     0,
     417,   418,   419,   420,   421,     0,     0,     0,     0,     0,
     422,   423,   424,     0,   425,   426,     0,   427,     0,     0,
     428,     0,     0,   429,   430,   431,   432,   433,   434,   735,
     736,   435,   436,     0,   437,   438,   737,   440,   441,   442,
     738,   739,   443,   444,   445,   446,   740,   447,   448,     0,
       0,   449,   450,   451,   452,     0,   741,   453,   454,     0,
     742,   743,   744,   745,     0,     0,     0,     0,     0,   459,
     460,     0,   746,   747,   748,   462,   463,   464,   749,   465,
     466,   750,   467,   468,     0,   469,   470,     0,     0,   471,
       0,     0,   472,     0,   473,     0,   751,   475,     0,     0,
     752,   753,   754,   755,   476,     0,     0,   477,   756,     0,
     757,   478,   479,   480,   758,   759,     0,     0,     0,     0,
       0,     0,   483,   484,     0,   485,   486,   487,     0,     0,
     760,     0,     0,     0,   761,   762,     0,     0,     0,     0,
     763,   764,     0,     0,   765,   766,     0,     0,   767,   768,
     137,     0,   662,   139,   140,   141,   142,     0,     0,   143,
       0,     0,     0,   144,     0,     0,   663,     0,   146,   147,
     148,   149,   664,   151,     0,   152,     0,     0,   665,   153,
     666,   667,   668,   154,   669,     0,   155,   156,   157,     0,
     158,     0,   159,   160,     0,     0,   161,   670,   671,   162,
     163,     0,   164,   672,   673,   166,     0,   167,   168,   169,
     170,   674,   172,     0,   675,   174,     0,   175,   176,   177,
     178,   179,   180,   181,   182,   183,     0,   184,   185,     0,
     186,   187,   188,   676,   190,     0,   677,   678,   191,     0,
       0,   192,   679,   193,   680,     0,   194,   681,   682,     0,
     195,   196,   197,   683,   684,   685,     0,     0,     0,     0,
     686,   200,   687,     0,     0,   688,   201,   202,     0,   203,
       0,     0,     0,   204,     0,   205,   206,   207,   208,   209,
       0,     0,     0,   210,     0,     0,   211,   212,   213,     0,
       0,     0,   214,     0,   215,   216,     0,   217,   218,   219,
       0,     0,   220,   221,     0,   222,   223,   224,   225,   226,
     227,   689,     0,   228,   229,   230,   231,   232,   690,   691,
     233,   234,     0,   235,   236,   237,   692,     0,   238,     0,
       0,     0,   693,   240,     0,   241,     0,   242,     0,   243,
     694,   245,   695,     0,   247,     0,   248,     0,   696,     0,
     249,   250,     0,   251,   697,     0,   252,   253,     0,     0,
       0,   698,   255,   256,   257,   699,     0,   258,   259,   260,
       0,     0,   261,     0,     0,     0,   700,   262,   263,  2689,
       0,     0,   264,     0,     0,     0,   265,   266,     0,   267,
     268,     0,     0,     0,   269,     0,     0,   270,   271,     0,
       0,   272,     0,   702,   273,   274,     0,     0,     0,     0,
       0,   703,   276,     0,   277,     0,   278,     0,   279,   280,
       0,     0,   704,     0,     0,     0,     0,   281,     0,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,     0,   299,   300,   301,
     705,   302,   303,   304,   305,   706,   306,   307,     0,     0,
       0,     0,   308,   309,   310,   311,   707,   313,     0,     0,
     708,   315,   709,   316,     0,   317,   710,   711,   712,   713,
     714,   322,   323,   324,   325,   326,     0,   715,   327,   328,
       0,     0,   329,   330,   331,   332,   716,   717,   718,   333,
     334,     0,   719,   720,   335,     0,   336,   337,   721,     0,
     339,   340,   341,     0,   342,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   343,   344,   345,   722,   346,   347,
       0,   348,   349,   723,   351,   352,   353,   354,   724,   725,
     357,   726,     0,   358,   359,   360,     0,   361,     0,   362,
     363,   364,   365,   366,     0,   727,   368,   369,     0,     0,
     370,     0,     0,     0,   371,   372,   373,   374,   375,     0,
       0,   376,   377,   378,   379,   380,     0,   381,   382,     0,
     383,   384,   385,   728,   729,   386,     0,   387,     0,   388,
     389,     0,   390,   391,   392,     0,   730,     0,   731,   394,
     395,   396,   397,   398,   732,   733,   401,   402,   403,   404,
       0,   734,   406,     0,     0,     0,   407,   408,   409,   410,
       0,     0,     0,   411,     0,     0,     0,   412,     0,   413,
     414,   415,   416,     0,   417,   418,   419,   420,   421,     0,
       0,     0,     0,     0,   422,   423,   424,     0,   425,   426,
       0,   427,     0,     0,   428,     0,     0,   429,   430,   431,
     432,   433,   434,   735,   736,   435,   436,     0,   437,   438,
     737,   440,   441,   442,   738,   739,   443,   444,   445,   446,
     740,   447,   448,     0,     0,   449,   450,   451,   452,     0,
     741,   453,   454,     0,   742,   743,   744,   745,     0,     0,
       0,     0,     0,   459,   460,     0,   746,   747,   748,   462,
     463,   464,   749,   465,   466,   750,   467,   468,     0,   469,
     470,     0,     0,   471,     0,     0,   472,     0,   473,     0,
     751,   475,     0,     0,   752,   753,   754,   755,   476,     0,
       0,   477,   756,     0,   757,   478,   479,   480,   758,   759,
       0,     0,     0,     0,     0,     0,   483,   484,     0,   485,
     486,   487,     0,     0,   760,     0,     0,     0,   761,   762,
       0,     0,     0,     0,   763,   764,     0,     0,   765,   766,
       0,     0,   767,   768,   137,     0,   662,   139,   140,   141,
     142,     0,     0,   143,     0,     0,     0,   144,     0,     0,
     663,     0,   146,   147,   148,   149,   664,   151,     0,   152,
       0,     0,   665,   153,   666,   667,   668,   154,   669,     0,
     155,   156,   157,     0,   158,     0,   159,   160,     0,     0,
     161,   670,   671,   162,   163,     0,   164,   672,   673,   166,
       0,   167,   168,   169,   170,   674,   172,     0,   675,   174,
       0,   175,   176,   177,   178,   179,   180,   181,   182,   183,
       0,   184,   185,     0,   186,   187,   188,   676,   190,     0,
     677,   678,   191,     0,     0,   192,   679,   193,   680,     0,
     194,   681,   682,     0,   195,   196,   197,   683,   684,   685,
       0,     0,     0,     0,   686,   200,   687,     0,     0,   688,
     201,   202,     0,   203,     0,     0,     0,   204,     0,   205,
     206,   207,   208,   209,     0,     0,     0,   210,     0,     0,
     211,   212,   213,     0,     0,     0,   214,     0,   215,   216,
       0,   217,   218,   219,     0,     0,   220,   221,     0,   222,
     223,   224,   225,   226,   227,   689,     0,   228,   229,   230,
     231,   232,   690,   691,   233,   234,     0,   235,   236,   237,
     692,     0,   238,     0,     0,     0,   693,   240,     0,   241,
       0,   242,     0,   243,   694,   245,   695,     0,   247,     0,
     248,     0,   696,     0,   249,   250,     0,   251,   697,     0,
     252,   253,     0,     0,     0,   698,   255,   256,   257,   699,
       0,   258,   259,   260,     0,     0,   261,     0,     0,     0,
     700,   262,   263,  2734,     0,     0,   264,     0,     0,     0,
     265,   266,     0,   267,   268,     0,     0,     0,   269,     0,
       0,   270,   271,     0,     0,   272,     0,   702,   273,   274,
       0,     0,     0,     0,     0,   703,   276,     0,   277,     0,
     278,     0,   279,   280,     0,     0,   704,     0,     0,     0,
       0,   281,     0,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
       0,   299,   300,   301,   705,   302,   303,   304,   305,   706,
     306,   307,     0,     0,     0,     0,   308,   309,   310,   311,
     707,   313,     0,     0,   708,   315,   709,   316,     0,   317,
     710,   711,   712,   713,   714,   322,   323,   324,   325,   326,
       0,   715,   327,   328,     0,     0,   329,   330,   331,   332,
     716,   717,   718,   333,   334,     0,   719,   720,   335,     0,
     336,   337,   721,     0,   339,   340,   341,     0,   342,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   343,   344,
     345,   722,   346,   347,     0,   348,   349,   723,   351,   352,
     353,   354,   724,   725,   357,   726,     0,   358,   359,   360,
       0,   361,     0,   362,   363,   364,   365,   366,     0,   727,
     368,   369,     0,     0,   370,     0,     0,     0,   371,   372,
     373,   374,   375,     0,     0,   376,   377,   378,   379,   380,
       0,   381,   382,     0,   383,   384,   385,   728,   729,   386,
       0,   387,     0,   388,   389,     0,   390,   391,   392,     0,
     730,     0,   731,   394,   395,   396,   397,   398,   732,   733,
     401,   402,   403,   404,     0,   734,   406,     0,     0,     0,
     407,   408,   409,   410,     0,     0,     0,   411,     0,     0,
       0,   412,     0,   413,   414,   415,   416,     0,   417,   418,
     419,   420,   421,     0,     0,     0,     0,     0,   422,   423,
     424,     0,   425,   426,     0,   427,     0,     0,   428,     0,
       0,   429,   430,   431,   432,   433,   434,   735,   736,   435,
     436,     0,   437,   438,   737,   440,   441,   442,   738,   739,
     443,   444,   445,   446,   740,   447,   448,     0,     0,   449,
     450,   451,   452,     0,   741,   453,   454,     0,   742,   743,
     744,   745,     0,     0,     0,     0,     0,   459,   460,     0,
     746,   747,   748,   462,   463,   464,   749,   465,   466,   750,
     467,   468,     0,   469,   470,     0,     0,   471,     0,     0,
     472,     0,   473,     0,   751,   475,     0,     0,   752,   753,
     754,   755,   476,     0,     0,   477,   756,     0,   757,   478,
     479,   480,   758,   759,     0,     0,     0,     0,     0,     0,
     483,   484,     0,   485,   486,   487,     0,     0,   760,     0,
       0,     0,   761,   762,     0,     0,     0,     0,   763,   764,
       0,     0,   765,   766,     0,     0,   767,   768,   137,     0,
     662,   139,   140,   141,   142,     0,     0,   143,     0,     0,
       0,   144,     0,     0,   663,     0,   146,   147,   148,   149,
     664,   151,     0,   152,     0,     0,   665,   153,   666,   667,
     668,   154,   669,     0,   155,   156,   157,     0,   158,     0,
     159,   160,     0,     0,   161,   670,   671,   162,   163,     0,
     164,   672,   673,   166,     0,   167,   168,   169,   170,   674,
     172,     0,   675,   174,     0,   175,   176,   177,   178,   179,
     180,   181,   182,   183,     0,   184,   185,     0,   186,   187,
     188,   676,   190,     0,   677,   678,   191,     0,     0,   192,
     679,   193,   680,     0,   194,   681,   682,     0,   195,   196,
     197,   683,   684,   685,     0,     0,     0,     0,   686,   200,
     687,     0,     0,  3513,   201,   202,     0,   203,     0,     0,
       0,   204,     0,   205,   206,   207,   208,   209,     0,     0,
       0,   210,     0,     0,   211,   212,   213,     0,     0,     0,
     214,     0,   215,   216,     0,   217,   218,   219,     0,     0,
     220,   221,     0,   222,   223,   224,   225,   226,   227,   689,
       0,   228,   229,   230,   231,   232,   690,   691,   233,   234,
       0,   235,   236,   237,   692,     0,   238,     0,     0,     0,
     693,   240,     0,   241,     0,   242,     0,   243,   694,   245,
     695,     0,   247,     0,   248,     0,   696,     0,   249,   250,
       0,   251,   697,     0,   252,   253,     0,     0,     0,   698,
     255,   256,   257,   699,     0,   258,   259,   260,     0,     0,
     261,     0,     0,     0,   700,   262,   263,   701,     0,     0,
     264,     0,     0,     0,   265,   266,     0,   267,   268,     0,
       0,     0,   269,     0,     0,   270,   271,     0,     0,   272,
       0,   702,   273,   274,     0,     0,     0,     0,     0,   703,
     276,     0,   277,     0,   278,     0,   279,   280,     0,     0,
     704,     0,     0,     0,     0,   281,     0,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,     0,   299,   300,   301,   705,   302,
     303,   304,   305,   706,   306,   307,     0,     0,     0,     0,
     308,   309,   310,   311,   707,   313,     0,     0,   708,   315,
     709,   316,     0,   317,   710,   711,   712,   713,   714,   322,
     323,   324,   325,   326,     0,   715,   327,   328,     0,     0,
     329,   330,   331,   332,   716,   717,   718,   333,   334,     0,
     719,   720,   335,     0,   336,   337,   721,     0,   339,   340,
     341,     0,   342,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   343,   344,   345,   722,   346,   347,     0,   348,
     349,   723,   351,   352,   353,   354,   724,   725,   357,   726,
       0,   358,   359,   360,     0,   361,     0,   362,   363,   364,
     365,   366,     0,   727,   368,   369,     0,     0,   370,     0,
       0,     0,   371,   372,   373,   374,   375,     0,     0,   376,
     377,   378,   379,   380,     0,   381,   382,     0,   383,   384,
     385,   728,   729,   386,     0,   387,     0,   388,   389,     0,
     390,   391,   392,     0,   730,     0,   731,   394,   395,   396,
     397,   398,   732,   733,   401,   402,   403,   404,     0,   734,
     406,     0,     0,     0,   407,   408,   409,   410,     0,     0,
       0,   411,     0,     0,     0,   412,     0,   413,   414,   415,
     416,     0,   417,   418,   419,   420,   421,     0,     0,     0,
       0,     0,   422,   423,   424,     0,   425,   426,     0,   427,
       0,     0,   428,     0,     0,   429,   430,   431,   432,   433,
     434,   735,   736,   435,   436,     0,   437,   438,   737,   440,
     441,   442,   738,   739,   443,   444,   445,   446,   740,   447,
     448,     0,     0,   449,   450,   451,   452,     0,   741,   453,
     454,     0,   742,   743,   744,   745,     0,     0,     0,     0,
       0,   459,   460,     0,   746,   747,   748,   462,   463,   464,
     749,   465,   466,   750,   467,   468,     0,   469,   470,     0,
       0,   471,     0,     0,   472,     0,   473,     0,   751,   475,
       0,     0,   752,   753,   754,   755,   476,     0,     0,   477,
     756,     0,   757,   478,   479,   480,   758,   759,     0,     0,
       0,     0,     0,     0,   483,   484,     0,   485,   486,   487,
       0,     0,   760,     0,     0,     0,   761,   762,     0,     0,
       0,     0,   763,   764,     0,     0,   765,   766,     0,     0,
     767,   768,   137,     0,   662,   139,   140,   141,   142,     0,
       0,   143,     0,     0,     0,   144,     0,     0,   663,     0,
     146,   147,   148,   149,   664,   151,     0,   152,     0,     0,
     665,   153,   666,   667,   668,   154,   669,     0,   155,   156,
     157,     0,   158,     0,   159,   160,     0,     0,   161,   670,
     671,   162,   163,     0,   164,   672,   673,   166,     0,   167,
     168,   169,   170,   674,   172,     0,   675,   174,     0,   175,
     176,   177,   178,   179,   180,   181,   182,   183,     0,   184,
     185,     0,   186,   187,   188,   676,   190,     0,   677,   678,
     191,     0,     0,   192,   679,   193,   680,     0,   194,   681,
     682,     0,   195,   196,   197,   683,   684,   685,     0,     0,
       0,     0,   686,   200,   687,     0,     0,   688,   201,   202,
       0,   203,     0,     0,     0,   204,     0,   205,   206,   207,
     208,   209,     0,     0,     0,   210,     0,     0,   211,   212,
     213,     0,     0,     0,   214,     0,   215,   216,     0,   217,
     218,   219,     0,     0,   220,   221,     0,   222,   223,   224,
     225,   226,   227,   689,     0,   228,   229,   230,   231,   232,
     690,   691,   233,   234,     0,   235,   236,   237,   692,     0,
     238,     0,     0,     0,   693,   240,     0,   241,     0,   242,
       0,   243,   694,   245,   695,     0,   247,     0,   248,     0,
     696,     0,   249,   250,     0,   251,   697,     0,   252,   253,
       0,     0,     0,   698,   255,   256,   257,   699,     0,   258,
     259,   260,     0,     0,   261,     0,     0,     0,   700,   262,
     263,   701,     0,     0,   264,     0,     0,     0,   265,   266,
       0,   267,   268,     0,     0,     0,   269,     0,     0,   270,
     271,     0,     0,   272,     0,   702,   273,   274,     0,     0,
       0,     0,     0,   703,   276,     0,   277,     0,   278,     0,
     279,   280,     0,     0,   704,     0,     0,     0,     0,   281,
       0,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,     0,   299,
     300,   301,   705,   302,   303,   304,   305,   706,   306,   307,
    4370,     0,     0,     0,   308,   309,   310,   311,   707,   313,
       0,     0,   708,   315,   709,   316,     0,   317,   710,   711,
     712,   713,   714,   322,   323,   324,   325,   326,     0,   715,
     327,   328,     0,     0,   329,   330,   331,   332,   716,     0,
     718,   333,   334,     0,   719,   720,   335,     0,   336,   337,
     721,     0,   339,   340,   341,     0,   342,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   343,   344,   345,   722,
     346,   347,     0,   348,   349,   723,   351,   352,   353,   354,
     724,   725,   357,   726,     0,   358,   359,   360,     0,   361,
       0,   362,   363,   364,   365,   366,     0,   727,   368,   369,
       0,     0,   370,     0,     0,     0,   371,   372,   373,   374,
     375,     0,     0,   376,   377,   378,   379,   380,     0,   381,
     382,     0,   383,   384,   385,   728,   729,   386,     0,   387,
       0,   388,   389,     0,   390,   391,   392,     0,   730,     0,
     731,   394,   395,   396,   397,   398,   732,   733,   401,   402,
     403,   404,     0,   734,   406,     0,     0,     0,   407,   408,
     409,   410,     0,     0,     0,   411,     0,     0,     0,   412,
       0,   413,   414,   415,   416,     0,   417,   418,   419,   420,
     421,     0,     0,     0,     0,     0,   422,   423,   424,     0,
     425,   426,     0,   427,     0,     0,   428,     0,     0,   429,
     430,   431,   432,   433,   434,   735,   736,   435,   436,     0,
     437,   438,   737,   440,   441,   442,   738,   739,   443,   444,
     445,   446,   740,   447,   448,     0,     0,   449,   450,   451,
     452,     0,   741,   453,   454,     0,   742,   743,   744,   745,
       0,     0,     0,     0,     0,   459,   460,     0,   746,   747,
     748,   462,   463,   464,   749,   465,   466,   750,   467,   468,
       0,   469,   470,     0,     0,   471,     0,     0,   472,     0,
     473,     0,   751,   475,     0,     0,   752,   753,   754,   755,
     476,     0,     0,   477,   756,     0,   757,   478,   479,   480,
     758,   759,     0,     0,     0,     0,     0,     0,   483,   484,
       0,   485,   486,   487,     0,     0,   760,     0,     0,     0,
     761,   762,     0,     0,     0,     0,   763,   764,     0,     0,
     765,   766,     0,     0,   767,   768,   137,     0,   662,   139,
     140,   141,   142,     0,     0,   143,     0,     0,     0,   144,
       0,     0,   663,     0,   146,   147,   148,   149,   664,   151,
       0,   152,     0,     0,   665,   153,   666,   667,   668,   154,
     669,     0,   155,   156,   157,     0,   158,     0,   159,   160,
       0,     0,   161,   670,   671,   162,   163,     0,   164,   672,
     673,   166,     0,   167,   168,   169,   170,   674,   172,     0,
     675,   174,     0,   175,   176,   177,   178,   179,   180,   181,
     182,   183,     0,   184,   185,     0,   186,   187,   188,   676,
     190,     0,   677,   678,   191,     0,     0,   192,   679,   193,
     680,     0,   194,   681,   682,     0,   195,   196,   197,   683,
     684,   685,     0,     0,     0,     0,   686,   200,   687,     0,
       0,   688,   201,   202,     0,   203,     0,     0,     0,   204,
       0,   205,   206,   207,   208,   209,     0,     0,     0,   210,
       0,     0,   211,   212,   213,     0,     0,     0,   214,     0,
     215,   216,     0,   217,   218,   219,     0,     0,   220,   221,
       0,   222,   223,   224,   225,   226,   227,   689,     0,   228,
     229,   230,   231,   232,   690,   691,   233,   234,     0,   235,
     236,   237,   692,     0,   238,     0,     0,     0,   693,   240,
       0,   241,     0,   242,     0,   243,   694,   245,   695,     0,
     247,     0,   248,     0,   696,     0,   249,   250,     0,   251,
     697,     0,   252,   253,     0,     0,     0,   698,   255,   256,
     257,   699,     0,   258,   259,   260,     0,     0,   261,     0,
       0,     0,   700,   262,   263,   701,     0,     0,   264,     0,
       0,     0,   265,   266,     0,   267,   268,     0,     0,     0,
     269,     0,     0,   270,   271,     0,     0,   272,     0,   702,
     273,   274,     0,     0,     0,     0,     0,   703,   276,     0,
     277,     0,   278,     0,   279,   280,     0,     0,   704,     0,
       0,     0,     0,   281,     0,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,     0,   299,   300,   301,   705,   302,   303,   304,
     305,   706,   306,   307,     0,     0,     0,     0,   308,   309,
     310,   311,   707,   313,     0,     0,   708,   315,   709,   316,
       0,   317,   710,   711,   712,   713,   714,   322,   323,   324,
     325,   326,     0,   715,   327,   328,     0,     0,   329,   330,
     331,   332,   716,     0,   718,   333,   334,     0,   719,   720,
     335,     0,   336,   337,   721,     0,   339,   340,   341,     0,
     342,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     343,   344,   345,   722,   346,   347,     0,   348,   349,   723,
     351,   352,   353,   354,   724,   725,   357,   726,     0,   358,
     359,   360,     0,   361,     0,   362,   363,   364,   365,   366,
       0,   727,   368,   369,     0,     0,   370,     0,     0,     0,
     371,   372,   373,   374,   375,     0,     0,   376,   377,   378,
     379,   380,     0,   381,   382,     0,   383,   384,   385,   728,
     729,   386,     0,   387,     0,   388,   389,     0,   390,   391,
     392,     0,   730,     0,   731,   394,   395,   396,   397,   398,
     732,   733,   401,   402,   403,   404,     0,   734,   406,     0,
       0,     0,   407,   408,   409,   410,     0,     0,     0,   411,
       0,     0,     0,   412,     0,   413,   414,   415,   416,     0,
     417,   418,   419,   420,   421,     0,     0,     0,     0,     0,
     422,   423,   424,     0,   425,   426,     0,   427,     0,     0,
     428,     0,     0,   429,   430,   431,   432,   433,   434,   735,
     736,   435,   436,     0,   437,   438,   737,   440,   441,   442,
     738,   739,   443,   444,   445,   446,   740,   447,   448,     0,
       0,   449,   450,   451,   452,     0,   741,   453,   454,     0,
     742,   743,   744,   745,     0,     0,     0,     0,     0,   459,
     460,     0,   746,   747,   748,   462,   463,   464,   749,   465,
     466,   750,   467,   468,     0,   469,   470,     0,     0,   471,
       0,     0,   472,     0,   473,     0,   751,   475,     0,     0,
     752,   753,   754,   755,   476,     0,     0,   477,   756,     0,
     757,   478,   479,   480,   758,   759,     0,     0,     0,     0,
       0,     0,   483,   484,     0,   485,   486,   487,     0,     0,
     760,     0,     0,     0,   761,   762,     0,     0,     0,     0,
     763,   764,     0,     0,   765,   766,     0,     0,   767,   768,
     137,     0,   662,   139,   140,   141,   142,     0,     0,   143,
       0,     0,     0,   144,     0,     0,   663,     0,   146,   147,
     148,   149,   664,   151,     0,   152,     0,     0,   665,   153,
     666,   667,   668,   154,   669,     0,   155,   156,   157,     0,
     158,     0,   159,   160,     0,     0,   161,   670,   671,   162,
     163,     0,   164,   672,   673,   166,     0,   167,   168,   169,
     170,   674,   172,     0,   675,   174,     0,   175,   176,   177,
     178,   179,   180,   181,   182,   183,     0,   184,   185,     0,
     186,   187,   188,   676,   190,     0,   677,   678,   191,     0,
       0,   192,   679,   193,   680,     0,   194,   681,   682,     0,
     195,   196,   197,   683,   684,   685,     0,     0,     0,     0,
     686,   200,   687,     0,     0,   688,   201,   202,     0,   203,
       0,     0,     0,   204,     0,   205,   206,   207,   208,   209,
       0,     0,     0,   210,     0,     0,   211,   212,   213,     0,
       0,     0,   214,     0,   215,   216,     0,   217,   218,   219,
       0,     0,   220,   221,     0,   222,   223,   224,   225,   226,
     227,   689,     0,   228,   229,   230,   231,   232,   690,   691,
     233,   234,     0,   235,   236,   237,   692,     0,   238,     0,
       0,     0,   693,   240,     0,   241,     0,   242,     0,   243,
     694,   245,   695,     0,   247,     0,   248,     0,   696,     0,
     249,   250,     0,   251,   697,     0,   252,   253,     0,     0,
       0,   698,   255,   256,   257,   699,     0,   258,   259,   260,
       0,     0,   261,     0,     0,     0,   700,   262,   263,  1736,
       0,     0,   264,     0,     0,     0,   265,   266,     0,   267,
     268,     0,     0,     0,   269,     0,     0,   270,   271,     0,
       0,   272,     0,   702,   273,   274,     0,     0,     0,     0,
       0,   703,   276,     0,   277,     0,   278,     0,   279,   280,
       0,     0,   704,     0,     0,     0,     0,   281,     0,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,     0,   299,   300,   301,
     705,   302,   303,   304,   305,   706,   306,   307,     0,     0,
       0,     0,   308,   309,   310,   311,   707,   313,     0,     0,
     708,   315,   709,   316,     0,   317,   710,   711,   712,   713,
     714,   322,   323,   324,   325,   326,     0,   715,   327,   328,
       0,     0,   329,   330,   331,   332,   716,     0,   718,   333,
     334,     0,   719,   720,   335,     0,   336,   337,   721,     0,
     339,   340,   341,     0,   342,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   343,   344,   345,   722,   346,   347,
       0,   348,   349,   723,   351,   352,   353,   354,   724,   725,
     357,   726,     0,   358,   359,   360,     0,   361,     0,   362,
     363,   364,   365,   366,     0,   727,   368,   369,     0,     0,
     370,     0,     0,     0,   371,   372,   373,   374,   375,     0,
       0,   376,   377,   378,   379,   380,     0,   381,   382,     0,
     383,   384,   385,   728,   729,   386,     0,   387,     0,   388,
     389,     0,   390,   391,   392,     0,   730,     0,   731,   394,
     395,   396,   397,   398,   732,   733,   401,   402,   403,   404,
       0,   734,   406,     0,     0,     0,   407,   408,   409,   410,
       0,     0,     0,   411,     0,     0,     0,   412,     0,   413,
     414,   415,   416,     0,   417,   418,   419,   420,   421,     0,
       0,     0,     0,     0,   422,   423,   424,     0,   425,   426,
       0,   427,     0,     0,   428,     0,     0,   429,   430,   431,
     432,   433,   434,   735,   736,   435,   436,     0,   437,   438,
     737,   440,   441,   442,   738,   739,   443,   444,   445,   446,
     740,   447,   448,     0,     0,   449,   450,   451,   452,     0,
     741,   453,   454,     0,   742,   743,   744,   745,     0,     0,
       0,     0,     0,   459,   460,     0,   746,   747,   748,   462,
     463,   464,   749,   465,   466,   750,   467,   468,     0,   469,
     470,     0,     0,   471,     0,     0,   472,     0,   473,     0,
     751,   475,     0,     0,   752,   753,   754,   755,   476,     0,
       0,   477,   756,     0,   757,   478,   479,   480,   758,   759,
       0,     0,     0,     0,     0,     0,   483,   484,     0,   485,
     486,   487,     0,     0,   760,     0,     0,     0,   761,   762,
       0,     0,     0,     0,   763,   764,     0,     0,   765,   766,
       0,     0,   767,   768,   137,     0,   662,   139,   140,   141,
     142,     0,     0,   143,     0,     0,     0,   144,     0,     0,
     663,     0,   146,   147,   148,   149,   664,   151,     0,   152,
       0,     0,   665,   153,   666,   667,   668,   154,   669,     0,
     155,   156,   157,     0,   158,     0,   159,   160,     0,     0,
     161,   670,   671,   162,   163,     0,   164,   672,   673,   166,
       0,   167,   168,   169,   170,   674,   172,     0,   675,   174,
       0,   175,   176,   177,   178,   179,   180,   181,   182,   183,
       0,   184,   185,     0,   186,   187,   188,   676,   190,     0,
     677,   678,   191,     0,     0,   192,   679,   193,   680,     0,
     194,   681,   682,     0,   195,   196,   197,   683,   684,   685,
       0,     0,     0,     0,   686,   200,   687,     0,     0,   688,
     201,   202,     0,   203,     0,     0,     0,   204,     0,   205,
     206,   207,   208,   209,     0,     0,     0,   210,     0,     0,
     211,   212,   213,     0,     0,     0,   214,     0,   215,   216,
       0,   217,   218,   219,     0,     0,   220,   221,     0,   222,
     223,   224,   225,   226,   227,   689,     0,   228,   229,   230,
     231,   232,   690,   691,   233,   234,     0,   235,   236,   237,
     692,     0,   238,     0,     0,     0,   693,   240,     0,   241,
       0,   242,     0,   243,   694,   245,   695,     0,   247,     0,
     248,     0,   696,     0,   249,   250,     0,   251,   697,     0,
     252,   253,     0,     0,     0,   698,   255,   256,   257,   699,
       0,   258,   259,   260,     0,     0,   261,     0,     0,     0,
     700,   262,   263,  1738,     0,     0,   264,     0,     0,     0,
     265,   266,     0,   267,   268,     0,     0,     0,   269,     0,
       0,   270,   271,     0,     0,   272,     0,   702,   273,   274,
       0,     0,     0,     0,     0,   703,   276,     0,   277,     0,
     278,     0,   279,   280,     0,     0,   704,     0,     0,     0,
       0,   281,     0,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
       0,   299,   300,   301,   705,   302,   303,   304,   305,   706,
     306,   307,     0,     0,     0,     0,   308,   309,   310,   311,
     707,   313,     0,     0,   708,   315,   709,   316,     0,   317,
     710,   711,   712,   713,   714,   322,   323,   324,   325,   326,
       0,   715,   327,   328,     0,     0,   329,   330,   331,   332,
     716,     0,   718,   333,   334,     0,   719,   720,   335,     0,
     336,   337,   721,     0,   339,   340,   341,     0,   342,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   343,   344,
     345,   722,   346,   347,     0,   348,   349,   723,   351,   352,
     353,   354,   724,   725,   357,   726,     0,   358,   359,   360,
       0,   361,     0,   362,   363,   364,   365,   366,     0,   727,
     368,   369,     0,     0,   370,     0,     0,     0,   371,   372,
     373,   374,   375,     0,     0,   376,   377,   378,   379,   380,
       0,   381,   382,     0,   383,   384,   385,   728,   729,   386,
       0,   387,     0,   388,   389,     0,   390,   391,   392,     0,
     730,     0,   731,   394,   395,   396,   397,   398,   732,   733,
     401,   402,   403,   404,     0,   734,   406,     0,     0,     0,
     407,   408,   409,   410,     0,     0,     0,   411,     0,     0,
       0,   412,     0,   413,   414,   415,   416,     0,   417,   418,
     419,   420,   421,     0,     0,     0,     0,     0,   422,   423,
     424,     0,   425,   426,     0,   427,     0,     0,   428,     0,
       0,   429,   430,   431,   432,   433,   434,   735,   736,   435,
     436,     0,   437,   438,   737,   440,   441,   442,   738,   739,
     443,   444,   445,   446,   740,   447,   448,     0,     0,   449,
     450,   451,   452,     0,   741,   453,   454,     0,   742,   743,
     744,   745,     0,     0,     0,     0,     0,   459,   460,     0,
     746,   747,   748,   462,   463,   464,   749,   465,   466,   750,
     467,   468,     0,   469,   470,     0,     0,   471,     0,     0,
     472,     0,   473,     0,   751,   475,     0,     0,   752,   753,
     754,   755,   476,     0,     0,   477,   756,     0,   757,   478,
     479,   480,   758,   759,     0,     0,     0,     0,     0,     0,
     483,   484,     0,   485,   486,   487,     0,     0,   760,     0,
       0,     0,   761,   762,     0,     0,     0,     0,   763,   764,
       0,     0,   765,   766,     0,     0,   767,   768,   137,     0,
     138,   139,   140,   141,   142,     0,     0,   143,     0,     0,
       0,   144,     0,     0,   145,     0,   146,   147,   148,   149,
     150,   151,     0,   152,     0,     0,     0,   153,   666,     0,
       0,   154,     0,     0,   155,   156,   157,     0,   158,     0,
     159,   160,     0,     0,   161,     0,     0,   162,   163,     0,
     164,   165,     0,   166,     0,   167,   168,   169,   170,   171,
     172,     0,   173,   174,     0,   175,   176,   177,   178,   179,
     180,   181,   182,   183,     0,   184,   185,     0,   186,   187,
     188,   189,   190,     0,     0,     0,   191,     0,     0,   192,
       0,   193,     0,     0,   194,     0,     0,     0,   195,   196,
     197,     0,     0,  1774,     0,     0,     0,     0,   199,   200,
     687,     0,     0,     0,   201,   202,     0,   203,     0,     0,
       0,   204,     0,   205,   206,   207,   208,   209,     0,     0,
       0,   210,     0,     0,   211,   212,   213,     0,     0,     0,
     214,     0,   215,   216,     0,   217,   218,   219,     0,     0,
     220,   221,     0,   222,   223,   224,   225,   226,   227,     0,
       0,   228,   229,   230,   231,   232,     0,   691,   233,   234,
       0,   235,   236,   237,   692,     0,   238,     0,     0,     0,
     239,   240,     0,   241,     0,   242,     0,   243,   244,   245,
     246,     0,   247,     0,   248,     0,     0,     0,   249,   250,
       0,   251,   697,     0,   252,   253,     0,     0,     0,   254,
     255,   256,   257,     0,     0,   258,   259,   260,     0,     0,
     261,     0,     0,     0,     0,   262,   263,     0,     0,     0,
     264,     0,     0,     0,   265,   266,     0,   267,   268,     0,
       0,     0,   269,     0,     0,   270,   271,     0,     0,   272,
       0,     0,   273,   274,     0,     0,     0,     0,     0,   275,
     276,     0,   277,     0,   278,     0,   279,   280,     0,     0,
     704,     0,     0,     0,     0,   281,     0,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,     0,   299,   300,   301,     0,   302,
     303,   304,   305,     0,   306,   307,     0,     0,     0,     0,
     308,   309,   310,   311,   312,   313,     0,     0,   314,   315,
       0,   316,     0,   317,     0,   318,   319,   320,   321,   322,
     323,   324,   325,   326,     0,   715,   327,   328,     0,     0,
     329,   330,   331,   332,     0,     0,     0,   333,   334,     0,
     719,   720,   335,     0,   336,   337,   338,     0,   339,   340,
     341,     0,   342,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   343,   344,   345,     0,   346,   347,     0,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,     0,
       0,   358,   359,   360,     0,   361,     0,   362,   363,   364,
     365,   366,     0,   367,   368,   369,     0,     0,   370,     0,
       0,     0,   371,   372,   373,   374,   375,     0,     0,   376,
     377,   378,   379,   380,     0,   381,   382,     0,   383,   384,
     385,     0,     0,   386,     0,   387,     0,   388,   389,     0,
     390,   391,   392,     0,   393,     0,     0,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,     0,   405,
     406,     0,     0,     0,   407,   408,   409,   410,     0,     0,
       0,   411,     0,     0,     0,   412,     0,   413,   414,   415,
     416,     0,   417,   418,   419,   420,   421,     0,     0,     0,
       0,     0,   422,   423,   424,     0,   425,   426,     0,   427,
       0,     0,   428,     0,     0,   429,   430,   431,   432,   433,
     434,     0,     0,   435,   436,     0,   437,   438,   439,   440,
     441,   442,     0,     0,   443,   444,   445,   446,     0,   447,
     448,     0,     0,   449,   450,   451,   452,     0,   741,   453,
     454,     0,  1775,   456,   457,  1776,     0,     0,     0,     0,
       0,   459,   460,     0,     0,   747,   461,   462,   463,   464,
     749,   465,   466,   750,   467,   468,     0,   469,   470,     0,
       0,   471,     0,     0,   472,     0,   473,     0,   474,   475,
       0,     0,     0,     0,     0,     0,   476,     0,     0,   477,
       0,     0,     0,   478,   479,   480,   481,   482,     0,     0,
       0,     0,     0,     0,   483,   484,     0,   485,   486,   487,
       0,     0,   488,     0,     0,     0,   137,     0,   138,   139,
     140,   141,   142,     0,     0,   143,     0,     0,     0,   144,
     767,   768,   145,     0,   146,   147,   148,   149,   150,   151,
       0,   152,     0,     0,     0,   153,     0,     0,     0,   154,
       0,     0,   155,   156,   157,     0,   158,     0,   159,   160,
       0,     0,   161,     0,     0,   162,   163,     0,   164,   165,
       0,   166,     0,   167,   168,   169,   170,   171,   172,     0,
     173,   174,     0,   175,   176,   177,   178,   179,   180,   181,
     182,   183,     0,   184,   185,  2521,   186,   187,   188,   189,
     190,     0,     0,     0,   191,     0,     0,   192,     0,   193,
       0,     0,   194,     0,     0,     0,   195,   196,   197,     0,
       0,   198,     0,     0,     0,     0,   199,   200,     0,     0,
       0,     0,   201,   202,     0,   203,     0,     0,     0,   204,
       0,   205,   206,   207,   208,   209,     0,     0,     0,   210,
       0,     0,   211,   212,   213,     0,     0,     0,   214,     0,
     215,   216,     0,   217,   218,   219,     0,     0,   220,   221,
       0,   222,   223,   224,   225,   226,   227,     0,     0,   228,
     229,   230,   231,   232,     0,     0,   233,   234,     0,   235,
     236,   237,     0,     0,   238,     0,     0,     0,   239,   240,
       0,   241,   502,   242,     0,   243,   244,   245,   246,     0,
     247,     0,   248,     0,     0,     0,   249,   250,     0,   251,
       0,     0,   252,   253,     0,     0,     0,   254,   255,   256,
     257,     0,     0,   258,   259,   260,  2078,     0,   261,     0,
       0,     0,     0,   262,   263,     0,     0,     0,   264,     0,
       0,     0,   265,   266,     0,   267,   268,     0,     0,     0,
     269,  2079,     0,   270,   271,     0,     0,   272,     0,     0,
     273,   274,     0,  3085,     0,     0,     0,   275,   276,     0,
     277,     0,   278,     0,   279,   280,     0,     0,     0,     0,
       0,     0,     0,   281,     0,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,     0,   299,   300,   301,     0,   302,   303,   304,
     305,     0,   306,   307,     0,     0,     0,     0,   308,   309,
     310,   311,   312,   313,     0,     0,   314,   315,     0,   316,
       0,   317,     0,   318,   319,   320,   321,   322,   323,   324,
     325,   326,     0,     0,   327,   328,     0,     0,   329,   330,
     331,   332,     0,     0,     0,   333,   334,     0,     0,     0,
     335,     0,   336,   337,   338,     0,   339,   340,   341,     0,
     342,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     343,   344,   345,     0,   346,   347,  2034,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,     0,     0,   358,
     359,   360,     0,   361,     0,   362,   363,   364,   365,   366,
       0,   367,   368,   369,     0,     0,   370,     0,     0,     0,
     371,   372,   373,   374,   375,     0,     0,   376,   377,   378,
     379,   380,     0,   381,   382,     0,   383,   384,   385,     0,
       0,   386,     0,   387,     0,   388,   389,     0,   390,   391,
     392,     0,   393,     0,     0,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,     0,   405,   406,  -478,
       0,     0,   407,   408,   409,   410,     0,     0,     0,   411,
       0,     0,     0,   412,     0,   413,   414,   415,   416,     0,
     417,   418,   419,   420,   421,   505,     0,     0,     0,     0,
     422,   423,   424,     0,   425,   426,     0,   427,     0,     0,
     428,     0,     0,   429,   430,   431,   432,   433,   434,     0,
       0,   435,   436,     0,   437,   438,   439,   440,   441,   442,
       0,     0,   443,   444,   445,   446,     0,   447,   448,     0,
       0,   449,   450,   451,   452,     0,     0,   453,   454,     0,
     455,   456,   457,   458,     0,     0,     0,     0,     0,   459,
     460,     0,     0,     0,   461,   462,   463,   464,     0,   465,
     466,     0,   467,   468,     0,   469,   470,     0,     0,   471,
       0,     0,   472,     0,   473,     0,   474,   475,     0,     0,
       0,     0,     0,     0,   476,     0,     0,   477,     0,     0,
       0,   478,   479,   480,   481,   482,     0,     0,     0,     0,
       0,     0,   483,   484,     0,   485,   486,   487,     0,     0,
     488,     0,   137,     0,   138,   139,   140,   141,   142,     0,
       0,   143,     0,     0,     0,   144,     0,     0,   145,  2592,
     146,   147,   148,   149,   150,   151,     0,   152,     0,     0,
       0,   153,     0,     0,     0,   154,     0,     0,   155,   156,
     157,     0,   158,     0,   159,   160,     0,     0,   161,     0,
       0,   162,   163,     0,   164,   165,     0,   166,     0,   167,
     168,   169,   170,   171,   172,     0,   173,   174,     0,   175,
     176,   177,   178,   179,   180,   181,   182,   183,     0,   184,
     185,  2521,   186,   187,   188,   189,   190,     0,     0,     0,
     191,     0,     0,   192,     0,   193,     0,     0,   194,     0,
       0,     0,   195,   196,   197,     0,     0,   198,     0,     0,
       0,     0,   199,   200,     0,     0,     0,     0,   201,   202,
       0,   203,     0,     0,     0,   204,     0,   205,   206,   207,
     208,   209,     0,     0,     0,   210,     0,     0,   211,   212,
     213,     0,     0,     0,   214,     0,   215,   216,     0,   217,
     218,   219,     0,     0,   220,   221,     0,   222,   223,   224,
     225,   226,   227,     0,     0,   228,   229,   230,   231,   232,
       0,     0,   233,   234,     0,   235,   236,   237,     0,     0,
     238,     0,     0,     0,   239,   240,     0,   241,   502,   242,
       0,   243,   244,   245,   246,     0,   247,     0,   248,     0,
       0,     0,   249,   250,     0,   251,     0,     0,   252,   253,
       0,     0,     0,   254,   255,   256,   257,     0,     0,   258,
     259,   260,  2078,     0,   261,     0,     0,     0,     0,   262,
     263,     0,     0,     0,   264,     0,     0,     0,   265,   266,
       0,   267,   268,     0,     0,     0,   269,  2079,     0,   270,
     271,     0,     0,   272,     0,     0,   273,   274,     0,     0,
       0,     0,     0,   275,   276,     0,   277,     0,   278,     0,
     279,   280,     0,     0,     0,     0,     0,     0,     0,   281,
       0,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,     0,   299,
     300,   301,     0,   302,   303,   304,   305,     0,   306,   307,
       0,     0,     0,     0,   308,   309,   310,   311,   312,   313,
       0,     0,   314,   315,     0,   316,     0,   317,     0,   318,
     319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     327,   328,     0,     0,   329,   330,   331,   332,     0,     0,
       0,   333,   334,     0,     0,     0,   335,     0,   336,   337,
     338,     0,   339,   340,   341,     0,   342,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   343,   344,   345,     0,
     346,   347,     0,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,     0,     0,   358,   359,   360,     0,   361,
       0,   362,   363,   364,   365,   366,     0,   367,   368,   369,
       0,     0,   370,     0,     0,     0,   371,   372,   373,   374,
     375,     0,     0,   376,   377,   378,   379,   380,     0,   381,
     382,     0,   383,   384,   385,     0,     0,   386,     0,   387,
       0,   388,   389,     0,   390,   391,   392,     0,   393,     0,
       0,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,     0,   405,   406,     0,     0,     0,   407,   408,
     409,   410,     0,     0,     0,   411,     0,     0,     0,   412,
       0,   413,   414,   415,   416,     0,   417,   418,   419,   420,
     421,   505,     0,     0,     0,     0,   422,   423,   424,     0,
     425,   426,     0,   427,     0,     0,   428,     0,     0,   429,
     430,   431,   432,   433,   434,     0,     0,   435,   436,     0,
     437,   438,   439,   440,   441,   442,     0,     0,   443,   444,
     445,   446,     0,   447,   448,     0,     0,   449,   450,   451,
     452,     0,     0,   453,   454,     0,   455,   456,   457,   458,
       0,     0,     0,     0,     0,   459,   460,     0,     0,     0,
     461,   462,   463,   464,     0,   465,   466,     0,   467,   468,
       0,   469,   470,     0,     0,   471,     0,     0,   472,     0,
     473,     0,   474,   475,     0,     0,     0,     0,     0,     0,
     476,     0,     0,   477,     0,     0,     0,   478,   479,   480,
     481,   482,     0,     0,     0,     0,     0,     0,   483,   484,
       0,   485,   486,   487,     0,     0,   488,     0,   137,     0,
     138,   139,   140,   141,   142,     0,     0,   143,     0,     0,
       0,   144,     0,     0,   145,  2592,   146,   147,   148,   149,
     150,   151,     0,   152,     0,     0,     0,   153,     0,     0,
       0,   154,     0,     0,   155,   156,   157,     0,   158,     0,
     159,   160,     0,     0,   161,     0,     0,   162,   163,     0,
     164,   165,     0,   166,     0,   167,   168,   169,   170,   171,
     172,     0,   173,   174,     0,   175,   176,   177,   178,   179,
     180,   181,   182,   183,     0,   184,   185,     0,   186,   187,
     188,   189,   190,     0,     0,     0,   191,     0,     0,   192,
       0,   193,     0,     0,   194,     0,     0,     0,   195,   196,
     197,     0,     0,   198,     0,     0,     0,     0,   199,   200,
       0,     0,     0,     0,   201,   202,     0,   203,     0,     0,
       0,   204,     0,   205,   206,   207,   208,   209,     0,     0,
       0,   210,     0,     0,   211,   212,   213,     0,     0,     0,
     214,     0,   215,   216,     0,   217,   218,   219,     0,     0,
     220,   221,     0,   222,   223,   224,   225,   226,   227,     0,
       0,   228,   229,   230,   231,   232,     0,     0,   233,   234,
       0,   235,   236,   237,     0,     0,   238,     0,     0,     0,
     239,   240,     0,   241,     0,   242,     0,   243,   244,   245,
     246,     0,   247,     0,   248,     0,     0,     0,   249,   250,
       0,   251,     0,     0,   252,   253,     0,     0,     0,   254,
     255,   256,   257,     0,     0,   258,   259,   260,     0,     0,
     261,     0,     0,     0,     0,   262,   263,     0,     0,     0,
     264,     0,     0,     0,   265,   266,     0,   267,   268,     0,
       0,     0,   269,     0,     0,   270,   271,     0,     0,   272,
       0,     0,   273,   274,     0,     0,     0,     0,     0,   275,
     276,     0,   277,     0,   278,     0,   279,   280,     0,     0,
       0,     0,     0,     0,     0,   281,     0,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,     0,   299,   300,   301,     0,   302,
     303,   304,   305,     0,   306,   307,     0,     0,     0,     0,
     308,   309,   310,   311,   312,   313,     0,     0,   314,   315,
       0,   316,     0,   317,     0,   318,   319,   320,   321,   322,
     323,   324,   325,   326,     0,     0,   327,   328,     0,     0,
     329,   330,   331,   332,     0,     0,     0,   333,   334,     0,
       0,     0,   335,     0,   336,   337,   338,     0,   339,   340,
     341,     0,   342,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   343,   344,   345,     0,   346,   347,     0,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,     0,
       0,   358,   359,   360,     0,   361,     0,   362,   363,   364,
     365,   366,     0,   367,   368,   369,     0,     0,   370,     0,
       0,     0,   371,   372,   373,   374,   375,     0,     0,   376,
     377,   378,   379,   380,     0,   381,   382,     0,   383,   384,
     385,     0,     0,   386,     0,   387,     0,   388,   389,     0,
     390,   391,   392,     0,   393,     0,     0,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,     0,   405,
     406,  2380,     0,     0,   407,   408,   409,   410,     0,     0,
       0,   411,     0,     0,     0,   412,     0,   413,   414,   415,
     416,     0,   417,   418,   419,   420,   421,     0,     0,     0,
       0,     0,   422,   423,   424,     0,   425,   426,     0,   427,
       0,     0,   428,     0,     0,   429,   430,   431,   432,   433,
     434,     0,     0,   435,   436,     0,   437,   438,   439,   440,
     441,   442,     0,     0,   443,   444,   445,   446,     0,   447,
     448,     0,     0,   449,   450,   451,   452,     0,     0,   453,
     454,     0,   455,   456,   457,   458,     0,     0,     0,     0,
       0,   459,   460,     0,     0,     0,   461,   462,   463,   464,
       0,   465,   466,     0,   467,   468,     0,   469,   470,     0,
       0,   471,     0,     0,   472,     0,   473,     0,   474,   475,
       0,     0,     0,     0,     0,     0,   476,     0,     0,   477,
       0,     0,     0,   478,   479,   480,   481,   482,     0,     0,
       0,     0,     0,     0,   483,   484,     0,   485,   486,   487,
       0,     0,   488,     0,   137,     0,   138,   139,   140,   141,
     142,     0,     0,   143,  2837,     0,     0,   144,     0,     0,
     145,   768,   146,   147,   148,   149,   150,   151,     0,   152,
       0,     0,     0,   153,     0,     0,     0,   154,     0,     0,
     155,   156,   157,     0,   158,     0,   159,   160,     0,     0,
     161,     0,     0,   162,   163,     0,   164,   165,     0,   166,
       0,   167,   168,   169,   170,   171,   172,     0,   173,   174,
       0,   175,   176,   177,   178,   179,   180,   181,   182,   183,
       0,   184,   185,     0,   186,   187,   188,   189,   190,     0,
       0,     0,   191,     0,     0,   192,     0,   193,     0,     0,
     194,     0,     0,     0,   195,   196,   197,     0,     0,   198,
       0,     0,     0,     0,   199,   200,     0,     0,     0,     0,
     201,   202,     0,   203,     0,     0,     0,   204,     0,   205,
     206,   207,   208,   209,     0,     0,     0,   210,     0,     0,
     211,   212,   213,     0,     0,     0,   214,     0,   215,   216,
       0,   217,   218,   219,     0,     0,   220,   221,     0,   222,
     223,   224,   225,   226,   227,     0,     0,   228,   229,   230,
     231,   232,     0,     0,   233,   234,     0,   235,   236,   237,
       0,     0,   238,     0,     0,     0,   239,   240,     0,   241,
       0,   242,     0,   243,   244,   245,   246,     0,   247,     0,
     248,     0,     0,     0,   249,   250,     0,   251,     0,     0,
     252,   253,     0,     0,     0,   254,   255,   256,   257,     0,
       0,   258,   259,   260,     0,     0,   261,     0,     0,     0,
       0,   262,   263,     0,     0,     0,   264,     0,     0,     0,
     265,   266,     0,   267,   268,     0,     0,     0,   269,     0,
       0,   270,   271,     0,     0,   272,     0,     0,   273,   274,
       0,     0,     0,     0,     0,   275,   276,     0,   277,     0,
     278,     0,   279,   280,     0,     0,     0,     0,     0,     0,
       0,   281,     0,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
       0,   299,   300,   301,     0,   302,   303,   304,   305,     0,
     306,   307,     0,     0,     0,     0,   308,   309,   310,   311,
     312,   313,     0,     0,   314,   315,     0,   316,     0,   317,
       0,   318,   319,   320,   321,   322,   323,   324,   325,   326,
       0,     0,   327,   328,     0,     0,   329,   330,   331,   332,
       0,     0,     0,   333,   334,     0,     0,     0,   335,     0,
     336,   337,   338,     0,   339,   340,   341,     0,   342,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   343,   344,
     345,     0,   346,   347,     0,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,     0,     0,   358,   359,   360,
       0,   361,     0,   362,   363,   364,   365,   366,     0,   367,
     368,   369,     0,     0,   370,     0,     0,     0,   371,   372,
     373,   374,   375,     0,     0,   376,   377,   378,   379,   380,
       0,   381,   382,     0,   383,   384,   385,     0,     0,   386,
       0,   387,     0,   388,   389,     0,   390,   391,   392,     0,
     393,     0,     0,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,     0,   405,   406,     0,     0,     0,
     407,   408,   409,   410,     0,     0,     0,   411,     0,     0,
       0,   412,     0,   413,   414,   415,   416,     0,   417,   418,
     419,   420,   421,     0,     0,     0,     0,     0,   422,   423,
     424,     0,   425,   426,     0,   427,     0,     0,   428,     0,
       0,   429,   430,   431,   432,   433,   434,     0,     0,   435,
     436,     0,   437,   438,   439,   440,   441,   442,     0,     0,
     443,   444,   445,   446,     0,   447,   448,     0,     0,   449,
     450,   451,   452,     0,     0,   453,   454,     0,   455,   456,
     457,   458,     0,     0,     0,     0,     0,   459,   460,     0,
       0,     0,   461,   462,   463,   464,     0,   465,   466,     0,
     467,   468,     0,   469,   470,     0,     0,   471,     0,     0,
     472,     0,   473,     0,   474,   475,     0,     0,     0,     0,
       0,     0,   476,     0,     0,   477,     0,     0,     0,   478,
     479,   480,   481,   482,     0,     0,     0,     0,     0,     0,
     483,   484,     0,   485,   486,   487,     0,     0,   488,     0,
       0,     0,   137,     0,   138,   139,   140,   141,   142,     0,
    4499,   143,     0,     0,     0,   144,  4500,   768,   145,     0,
     146,   147,   148,   149,   150,   151,     0,   152,     0,     0,
       0,   153,     0,     0,     0,   154,     0,     0,   155,   156,
     157,     0,   158,     0,   159,   160,     0,     0,   161,     0,
       0,   162,   163,     0,   164,   165,     0,   166,     0,   167,
     168,   169,   170,   171,   172,     0,   173,   174,     0,   175,
     176,   177,   178,   179,   180,   181,   182,   183,     0,   184,
     185,     0,   186,   187,   188,   189,   190,     0,     0,     0,
     191,     0,     0,   192,     0,   193,     0,     0,   194,     0,
       0,     0,   195,   196,   197,     0,     0,   198,     0,     0,
       0,     0,   199,   200,     0,     0,     0,     0,   201,   202,
       0,   203,     0,     0,     0,   204,     0,   205,   206,   207,
     208,   209,     0,     0,     0,   210,     0,     0,   211,   212,
     213,     0,     0,     0,   214,     0,   215,   216,     0,   217,
     218,   219,     0,     0,   220,   221,     0,   222,   223,   224,
     225,   226,   227,     0,     0,   228,   229,   230,   231,   232,
       0,     0,   233,   234,     0,   235,   236,   237,     0,     0,
     238,     0,     0,     0,   239,   240,     0,   241,     0,   242,
       0,   243,   244,   245,   246,     0,   247,     0,   248,     0,
       0,     0,   249,   250,     0,   251,     0,     0,   252,   253,
       0,     0,     0,   254,   255,   256,   257,     0,     0,   258,
     259,   260,     0,     0,   261,     0,     0,     0,     0,   262,
     263,     0,     0,     0,   264,     0,     0,     0,   265,   266,
       0,   267,   268,     0,     0,     0,   269,     0,     0,   270,
     271,     0,     0,   272,     0,     0,   273,   274,     0,     0,
       0,     0,     0,   275,   276,     0,   277,     0,   278,     0,
     279,   280,     0,     0,     0,     0,     0,     0,     0,   281,
       0,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,     0,   299,
     300,   301,     0,   302,   303,   304,   305,     0,   306,   307,
       0,     0,     0,     0,   308,   309,   310,   311,   312,   313,
       0,     0,   314,   315,     0,   316,     0,   317,     0,   318,
     319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     327,   328,     0,     0,   329,   330,   331,   332,     0,     0,
       0,   333,   334,     0,     0,     0,   335,     0,   336,   337,
     338,     0,   339,   340,   341,     0,   342,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   343,   344,   345,     0,
     346,   347,     0,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,     0,     0,   358,   359,   360,     0,   361,
       0,   362,   363,   364,   365,   366,     0,   367,   368,   369,
       0,     0,   370,     0,     0,     0,   371,   372,   373,   374,
     375,     0,     0,   376,   377,   378,   379,   380,     0,   381,
     382,     0,   383,   384,   385,     0,     0,   386,     0,   387,
       0,   388,   389,     0,   390,   391,   392,     0,   393,     0,
       0,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,     0,   405,   406,     0,     0,     0,   407,   408,
     409,   410,     0,     0,     0,   411,     0,     0,     0,   412,
       0,   413,   414,   415,   416,     0,   417,   418,   419,   420,
     421,     0,     0,     0,     0,     0,   422,   423,   424,     0,
     425,   426,     0,   427,     0,     0,   428,     0,     0,   429,
     430,   431,   432,   433,   434,     0,     0,   435,   436,     0,
     437,   438,   439,   440,   441,   442,     0,     0,   443,   444,
     445,   446,     0,   447,   448,     0,     0,   449,   450,   451,
     452,     0,     0,   453,   454,     0,   455,   456,   457,   458,
       0,     0,     0,     0,     0,   459,   460,     0,     0,     0,
     461,   462,   463,   464,     0,   465,   466,     0,   467,   468,
       0,   469,   470,     0,     0,   471,     0,     0,   472,     0,
     473,     0,   474,   475,     0,     0,     0,     0,     0,     0,
     476,     0,     0,   477,     0,     0,     0,   478,   479,   480,
     481,   482,     0,     0,     0,     0,     0,     0,   483,   484,
       0,   485,   486,   487,     0,     0,   488,     0,     0,     0,
     137,     0,   138,   139,   140,   141,   142,  1117,     0,   143,
       0,     0,     0,   144,     0,   768,   145,     0,   146,   147,
     148,   149,   150,   151,     0,   152,     0,     0,     0,   153,
       0,     0,     0,   154,     0,     0,   155,   156,   157,     0,
     158,     0,   159,   160,     0,     0,   161,     0,     0,   162,
     163,     0,   164,   165,     0,   166,     0,   167,   168,   169,
     170,   171,   172,     0,   173,   174,     0,   175,   176,   177,
     178,   179,   180,   181,   182,   183,     0,   184,   185,     0,
     186,   187,   188,   189,   190,     0,     0,     0,   191,     0,
       0,   192,     0,   193,     0,     0,   194,     0,     0,     0,
     195,   196,   197,     0,     0,   198,     0,     0,     0,     0,
     199,   200,     0,     0,     0,     0,   201,   202,     0,   203,
       0,     0,     0,   204,     0,   205,   206,   207,   208,   209,
       0,     0,     0,   210,     0,     0,   211,   212,   213,     0,
       0,     0,   214,     0,   215,   216,     0,   217,   218,   219,
       0,     0,   220,   221,     0,   222,   223,   224,   225,   226,
     227,     0,     0,   228,   229,   230,   231,   232,     0,     0,
     233,   234,     0,   235,   236,   237,     0,     0,   238,     0,
       0,     0,   239,   240,     0,   241,     0,   242,     0,   243,
     244,   245,   246,     0,   247,     0,   248,     0,     0,     0,
     249,   250,     0,   251,     0,     0,   252,   253,     0,     0,
       0,   254,   255,   256,   257,     0,     0,   258,   259,   260,
       0,     0,   261,     0,     0,     0,     0,   262,   263,     0,
    1322,     0,   264,     0,     0,     0,   265,   266,     0,   267,
     268,     0,     0,     0,   269,     0,     0,   270,   271,     0,
       0,   272,     0,     0,   273,   274,     0,     0,     0,     0,
       0,   275,   276,     0,   277,     0,   278,     0,   279,   280,
       0,     0,     0,     0,     0,     0,     0,   281,     0,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,     0,   299,   300,   301,
       0,   302,   303,   304,   305,     0,   306,   307,     0,     0,
       0,     0,   308,   309,   310,   311,   312,   313,     0,     0,
     314,   315,     0,   316,     0,   317,     0,   318,   319,   320,
     321,   322,   323,   324,   325,   326,     0,     0,   327,   328,
       0,     0,   329,   330,   331,   332,     0,     0,     0,   333,
     334,     0,     0,     0,   335,     0,   336,   337,   338,     0,
     339,   340,   341,     0,   342,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   343,   344,   345,     0,   346,   347,
       0,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,     0,     0,   358,   359,   360,     0,   361,     0,   362,
     363,   364,   365,   366,     0,   367,   368,   369,     0,     0,
     370,     0,     0,     0,   371,   372,   373,   374,   375,     0,
       0,   376,   377,   378,   379,   380,     0,   381,   382,     0,
     383,   384,   385,     0,     0,   386,     0,   387,     0,   388,
     389,     0,   390,   391,   392,     0,   393,     0,     0,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
       0,   405,   406,     0,     0,     0,   407,   408,   409,   410,
       0,     0,     0,   411,     0,     0,     0,   412,     0,   413,
     414,   415,   416,     0,   417,   418,   419,   420,   421,     0,
       0,     0,     0,     0,   422,   423,   424,     0,   425,   426,
       0,   427,     0,     0,   428,     0,     0,   429,   430,   431,
     432,   433,   434,     0,     0,   435,   436,     0,   437,   438,
     439,   440,   441,   442,     0,     0,   443,   444,   445,   446,
       0,   447,   448,     0,     0,   449,   450,   451,   452,     0,
       0,   453,   454,     0,   455,   456,   457,   458,     0,     0,
       0,     0,     0,   459,   460,     0,     0,     0,   461,   462,
     463,   464,     0,   465,   466,     0,   467,   468,     0,   469,
     470,     0,     0,   471,     0,     0,   472,     0,   473,     0,
     474,   475,     0,     0,     0,     0,     0,     0,   476,     0,
       0,   477,     0,     0,     0,   478,   479,   480,   481,   482,
       0,     0,     0,     0,     0,     0,   483,   484,     0,   485,
     486,   487,     0,     0,   488,     0,   137,     0,   138,   139,
     140,   141,   142,     0,     0,   143,     0,     0,     0,   144,
       0,     0,   145,   538,   146,   147,   148,   149,   150,   151,
       0,   152,     0,     0,     0,   153,     0,     0,     0,   154,
       0,     0,   155,   156,   157,     0,   158,     0,   159,   160,
       0,     0,   161,     0,     0,   162,   163,     0,   164,   165,
       0,   166,     0,   167,   168,   169,   170,   171,   172,     0,
     173,   174,     0,   175,   176,   177,   178,   179,   180,   181,
     182,   183,     0,   184,   185,     0,   186,   187,   188,   189,
     190,     0,     0,     0,   191,     0,     0,   192,     0,   193,
       0,     0,   194,     0,     0,     0,   195,   196,   197,     0,
       0,   198,     0,     0,     0,     0,   199,   200,     0,     0,
       0,     0,   201,   202,     0,   203,     0,     0,     0,   204,
       0,   205,   206,   207,   208,   209,     0,     0,     0,   210,
       0,     0,   211,   212,   213,     0,     0,     0,   214,     0,
     215,   216,     0,   217,   218,   219,     0,     0,   220,   221,
       0,   222,   223,   224,   225,   226,   227,     0,     0,   228,
     229,   230,   231,   232,     0,     0,   233,   234,     0,   235,
     236,   237,     0,     0,   238,     0,     0,     0,   239,   240,
       0,   241,     0,   242,     0,   243,   244,   245,   246,     0,
     247,     0,   248,     0,     0,     0,   249,   250,     0,   251,
       0,     0,   252,   253,     0,     0,     0,   254,   255,   256,
     257,     0,     0,   258,   259,   260,     0,     0,   261,     0,
       0,     0,     0,   262,   263,     0,     0,     0,   264,     0,
       0,     0,   265,   266,     0,   267,   268,     0,     0,     0,
     269,     0,     0,   270,   271,     0,     0,   272,     0,     0,
     273,   274,     0,     0,     0,     0,     0,   275,   276,     0,
     277,     0,   278,     0,   279,   280,     0,     0,     0,     0,
       0,     0,     0,   281,     0,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,     0,   299,   300,   301,     0,   302,   303,   304,
     305,     0,   306,   307,     0,     0,     0,     0,   308,   309,
     310,   311,   312,   313,     0,     0,   314,   315,     0,   316,
       0,   317,     0,   318,   319,   320,   321,   322,   323,   324,
     325,   326,     0,     0,   327,   328,     0,     0,   329,   330,
     331,   332,     0,     0,     0,   333,   334,     0,     0,     0,
     335,     0,   336,   337,   338,     0,   339,   340,   341,     0,
     342,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     343,   344,   345,     0,   346,   347,     0,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,     0,     0,   358,
     359,   360,     0,   361,     0,   362,   363,   364,   365,   366,
       0,   367,   368,   369,     0,     0,   370,     0,     0,     0,
     371,   372,   373,   374,   375,     0,     0,   376,   377,   378,
     379,   380,     0,   381,   382,     0,   383,   384,   385,     0,
       0,   386,     0,   387,     0,   388,   389,     0,   390,   391,
     392,     0,   393,     0,     0,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,     0,   405,   406,     0,
       0,     0,   407,   408,   409,   410,     0,     0,     0,   411,
       0,     0,     0,   412,     0,   413,   414,   415,   416,     0,
     417,   418,   419,   420,   421,     0,     0,     0,     0,     0,
     422,   423,   424,     0,   425,   426,     0,   427,     0,     0,
     428,     0,     0,   429,   430,   431,   432,   433,   434,     0,
       0,   435,   436,     0,   437,   438,   439,   440,   441,   442,
       0,     0,   443,   444,   445,   446,     0,   447,   448,     0,
       0,   449,   450,   451,   452,     0,     0,   453,   454,     0,
     455,   456,   457,   458,     0,     0,     0,     0,     0,   459,
     460,     0,     0,     0,   461,   462,   463,   464,     0,   465,
     466,     0,   467,   468,     0,   469,   470,     0,     0,   471,
       0,     0,   472,     0,   473,     0,   474,   475,     0,     0,
       0,     0,     0,     0,   476,     0,     0,   477,     0,     0,
       0,   478,   479,   480,   481,   482,     0,     0,     0,     0,
       0,     0,   483,   484,     0,   485,   486,   487,     0,     0,
     488,     0,     0,     0,     0,   137,  2321,   138,   139,   140,
     141,   142,     0,     0,   143,     0,     0,     0,   144,   538,
       0,   145,     0,   146,   147,   148,   149,   150,   151,     0,
     152,     0,     0,     0,   153,     0,     0,     0,   154,     0,
       0,   155,   156,   157,     0,   158,     0,   159,   160,     0,
       0,   161,     0,     0,   162,   163,     0,   164,   165,     0,
     166,     0,   167,   168,   169,   170,   171,   172,     0,   173,
     174,     0,   175,   176,   177,   178,   179,   180,   181,   182,
     183,     0,   184,   185,     0,   186,   187,   188,   189,   190,
       0,     0,     0,   191,     0,     0,   192,     0,   193,     0,
       0,   194,     0,     0,     0,   195,   196,   197,     0,     0,
     198,     0,     0,     0,     0,   199,   200,     0,     0,     0,
       0,   201,   202,     0,   203,     0,     0,     0,   204,     0,
     205,   206,   207,   208,   209,     0,     0,     0,   210,     0,
       0,   211,   212,   213,     0,     0,     0,   214,     0,   215,
     216,     0,   217,   218,   219,     0,     0,   220,   221,     0,
     222,   223,   224,   225,   226,   227,     0,     0,   228,   229,
     230,   231,   232,     0,     0,   233,   234,     0,   235,   236,
     237,     0,     0,   238,     0,     0,     0,   239,   240,     0,
     241,     0,   242,     0,   243,   244,   245,   246,     0,   247,
       0,   248,     0,     0,     0,   249,   250,     0,   251,     0,
       0,   252,   253,     0,     0,     0,   254,   255,   256,   257,
       0,     0,   258,   259,   260,     0,     0,   261,     0,     0,
       0,     0,   262,   263,     0,     0,     0,   264,     0,     0,
       0,   265,   266,     0,   267,   268,     0,     0,     0,   269,
       0,     0,   270,   271,     0,     0,   272,     0,     0,   273,
     274,     0,     0,     0,     0,     0,   275,   276,     0,   277,
       0,   278,     0,   279,   280,     0,     0,     0,     0,     0,
       0,     0,   281,     0,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,     0,   299,   300,   301,     0,   302,   303,   304,   305,
       0,   306,   307,     0,     0,     0,     0,   308,   309,   310,
     311,   312,   313,     0,     0,   314,   315,     0,   316,     0,
     317,     0,   318,   319,   320,   321,   322,   323,   324,   325,
     326,     0,     0,   327,   328,     0,     0,   329,   330,   331,
     332,     0,     0,     0,   333,   334,     0,     0,     0,   335,
       0,   336,   337,   338,     0,   339,   340,   341,     0,   342,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   343,
     344,   345,     0,   346,   347,     0,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,     0,     0,   358,   359,
     360,     0,   361,     0,   362,   363,   364,   365,   366,     0,
     367,   368,   369,     0,     0,   370,     0,     0,     0,   371,
     372,   373,   374,   375,     0,     0,   376,   377,   378,   379,
     380,     0,   381,   382,     0,   383,   384,   385,     0,     0,
     386,     0,   387,     0,   388,   389,     0,   390,   391,   392,
       0,   393,     0,     0,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,     0,   405,   406,     0,     0,
       0,   407,   408,   409,   410,     0,     0,     0,   411,     0,
       0,     0,   412,     0,   413,   414,   415,   416,     0,   417,
     418,   419,   420,   421,     0,     0,     0,     0,     0,   422,
     423,   424,     0,   425,   426,     0,   427,     0,     0,   428,
       0,     0,   429,   430,   431,   432,   433,   434,     0,     0,
     435,   436,     0,   437,   438,   439,   440,   441,   442,     0,
       0,   443,   444,   445,   446,     0,   447,   448,     0,     0,
     449,   450,   451,   452,     0,     0,   453,   454,     0,   455,
     456,   457,   458,     0,     0,     0,     0,     0,   459,   460,
       0,     0,     0,   461,   462,   463,   464,     0,   465,   466,
       0,   467,   468,     0,   469,   470,     0,     0,   471,     0,
       0,   472,     0,   473,     0,   474,   475,     0,     0,     0,
       0,     0,     0,   476,     0,     0,   477,     0,     0,     0,
     478,   479,   480,   481,   482,     0,     0,     0,     0,     0,
       0,   483,   484,     0,   485,   486,   487,     0,     0,   488,
       0,     0,     0,   137,     0,   138,   139,   140,   141,   142,
    2591,     0,   143,     0,     0,     0,   144,     0,  2592,   145,
       0,   146,   147,   148,   149,   150,   151,     0,   152,     0,
       0,     0,   153,     0,     0,     0,   154,     0,     0,   155,
     156,   157,     0,   158,     0,   159,   160,     0,     0,   161,
       0,     0,   162,   163,     0,   164,   165,     0,   166,     0,
     167,   168,   169,   170,   171,   172,     0,   173,   174,     0,
     175,   176,   177,   178,   179,   180,   181,   182,   183,     0,
     184,   185,     0,   186,   187,   188,   189,   190,     0,     0,
       0,   191,     0,     0,   192,     0,   193,     0,     0,   194,
       0,     0,     0,   195,   196,   197,     0,     0,   198,     0,
       0,     0,     0,   199,   200,     0,     0,     0,     0,   201,
     202,     0,   203,     0,     0,     0,   204,     0,   205,   206,
     207,   208,   209,     0,     0,     0,   210,     0,     0,   211,
     212,   213,     0,     0,     0,   214,     0,   215,   216,     0,
     217,   218,   219,     0,     0,   220,   221,     0,   222,   223,
     224,   225,   226,   227,     0,     0,   228,   229,   230,   231,
     232,     0,     0,   233,   234,     0,   235,   236,   237,     0,
       0,   238,     0,     0,     0,   239,   240,     0,   241,     0,
     242,     0,   243,   244,   245,   246,     0,   247,     0,   248,
       0,     0,     0,   249,   250,     0,   251,     0,     0,   252,
     253,     0,     0,     0,   254,   255,   256,   257,     0,     0,
     258,   259,   260,     0,     0,   261,     0,     0,     0,     0,
     262,   263,     0,     0,     0,   264,     0,     0,     0,   265,
     266,     0,   267,   268,     0,     0,     0,   269,     0,     0,
     270,   271,     0,     0,   272,     0,     0,   273,   274,     0,
       0,     0,     0,     0,   275,   276,     0,   277,     0,   278,
       0,   279,   280,     0,     0,     0,     0,     0,     0,     0,
     281,     0,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,     0,
     299,   300,   301,     0,   302,   303,   304,   305,     0,   306,
     307,     0,     0,     0,     0,   308,   309,   310,   311,   312,
     313,     0,     0,   314,   315,     0,   316,     0,   317,     0,
     318,   319,   320,   321,   322,   323,   324,   325,   326,     0,
       0,   327,   328,     0,     0,   329,   330,   331,   332,     0,
       0,     0,   333,   334,     0,     0,     0,   335,     0,   336,
     337,   338,     0,   339,   340,   341,     0,   342,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   343,   344,   345,
       0,   346,   347,     0,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,     0,     0,   358,   359,   360,     0,
     361,     0,   362,   363,   364,   365,   366,     0,   367,   368,
     369,     0,     0,   370,     0,     0,     0,   371,   372,   373,
     374,   375,     0,     0,   376,   377,   378,   379,   380,     0,
     381,   382,     0,   383,   384,   385,     0,     0,   386,     0,
     387,     0,   388,   389,     0,   390,   391,   392,     0,   393,
       0,     0,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,     0,   405,   406,     0,     0,     0,   407,
     408,   409,   410,     0,     0,     0,   411,     0,     0,     0,
     412,     0,   413,   414,   415,   416,     0,   417,   418,   419,
     420,   421,     0,     0,     0,     0,     0,   422,   423,   424,
       0,   425,   426,     0,   427,     0,     0,   428,     0,     0,
     429,   430,   431,   432,   433,   434,     0,     0,   435,   436,
       0,   437,   438,   439,   440,   441,   442,     0,     0,   443,
     444,   445,   446,     0,   447,   448,     0,     0,   449,   450,
     451,   452,     0,     0,   453,   454,     0,   455,   456,   457,
     458,     0,     0,     0,     0,     0,   459,   460,     0,     0,
       0,   461,   462,   463,   464,     0,   465,   466,     0,   467,
     468,     0,   469,   470,     0,     0,   471,     0,     0,   472,
       0,   473,     0,   474,   475,     0,     0,     0,     0,     0,
       0,   476,     0,     0,   477,     0,     0,     0,   478,   479,
     480,   481,   482,     0,     0,     0,     0,     0,     0,   483,
     484,     0,   485,   486,   487,     0,     0,   488,     0,     0,
       0,   137,     0,   138,   139,   140,   141,   142,     0,     0,
     143,     0,     0,     0,   144,  4500,   768,   145,     0,   146,
     147,   148,   149,   150,   151,     0,   152,     0,     0,     0,
     153,     0,     0,     0,   154,     0,     0,   155,   156,   157,
       0,   158,     0,   159,   160,     0,     0,   161,     0,     0,
     162,   163,     0,   164,   165,     0,   166,     0,   167,   168,
     169,   170,   171,   172,     0,   173,   174,     0,   175,   176,
     177,   178,   179,   180,   181,   182,   183,     0,   184,   185,
       0,   186,   187,   188,   189,   190,     0,     0,     0,   191,
       0,     0,   192,     0,   193,     0,     0,   194,     0,     0,
       0,   195,   196,   197,     0,     0,   198,     0,     0,     0,
       0,   199,   200,     0,     0,     0,     0,   201,   202,     0,
     203,     0,     0,     0,   204,     0,   205,   206,   207,   208,
     209,     0,     0,     0,   210,     0,     0,   211,   212,   213,
       0,     0,     0,   214,     0,   215,   216,     0,   217,   218,
     219,     0,     0,   220,   221,     0,   222,   223,   224,   225,
     226,   227,     0,     0,   228,   229,   230,   231,   232,     0,
       0,   233,   234,     0,   235,   236,   237,     0,     0,   238,
       0,     0,     0,   239,   240,     0,   241,     0,   242,     0,
     243,   244,   245,   246,     0,   247,     0,   248,     0,     0,
       0,   249,   250,     0,   251,     0,     0,   252,   253,     0,
       0,     0,   254,   255,   256,   257,     0,     0,   258,   259,
     260,     0,     0,   261,     0,     0,     0,     0,   262,   263,
       0,     0,     0,   264,     0,     0,     0,   265,   266,     0,
     267,   268,     0,     0,     0,   269,     0,     0,   270,   271,
       0,     0,   272,     0,     0,   273,   274,     0,     0,     0,
       0,     0,   275,   276,     0,   277,     0,   278,     0,   279,
     280,     0,     0,     0,     0,     0,     0,     0,   281,     0,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,     0,   299,   300,
     301,     0,   302,   303,   304,   305,     0,   306,   307,     0,
       0,     0,     0,   308,   309,   310,   311,   312,   313,     0,
       0,   314,   315,     0,   316,     0,   317,     0,   318,   319,
     320,   321,   322,   323,   324,   325,   326,     0,     0,   327,
     328,     0,     0,   329,   330,   331,   332,     0,     0,     0,
     333,   334,     0,     0,     0,   335,     0,   336,   337,   338,
       0,   339,   340,   341,     0,   342,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   343,   344,   345,     0,   346,
     347,     0,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,     0,     0,   358,   359,   360,     0,   361,     0,
     362,   363,   364,   365,   366,     0,   367,   368,   369,     0,
       0,   370,     0,     0,     0,   371,   372,   373,   374,   375,
       0,     0,   376,   377,   378,   379,   380,     0,   381,   382,
       0,   383,   384,   385,     0,     0,   386,     0,   387,     0,
     388,   389,     0,   390,   391,   392,     0,   393,     0,     0,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,     0,   405,   406,     0,     0,     0,   407,   408,   409,
     410,     0,     0,     0,   411,     0,     0,     0,   412,     0,
     413,   414,   415,   416,     0,   417,   418,   419,   420,   421,
       0,     0,     0,     0,     0,   422,   423,   424,     0,   425,
     426,     0,   427,     0,     0,   428,     0,     0,   429,   430,
     431,   432,   433,   434,     0,     0,   435,   436,     0,   437,
     438,   439,   440,   441,   442,     0,     0,   443,   444,   445,
     446,     0,   447,   448,     0,     0,   449,   450,   451,   452,
       0,     0,   453,   454,     0,   455,   456,   457,   458,     0,
       0,     0,     0,     0,   459,   460,     0,     0,     0,   461,
     462,   463,   464,     0,   465,   466,     0,   467,   468,     0,
     469,   470,     0,     0,   471,     0,     0,   472,     0,   473,
       0,   474,   475,     0,     0,     0,     0,     0,     0,   476,
       0,     0,   477,     0,     0,     0,   478,   479,   480,   481,
     482,     0,     0,     0,     0,     0,     0,   483,   484,     0,
     485,   486,   487,     0,     0,   488,     0,   137,     0,   138,
     139,   140,   141,   142,     0,     0,   143,     0,     0,     0,
     144,     0,     0,   145,   538,   146,   147,   148,   149,   150,
     151,     0,   152,     0,     0,     0,   153,     0,     0,     0,
     154,     0,     0,   155,   156,   157,     0,   158,     0,   159,
     160,     0,     0,   161,     0,     0,   162,   163,     0,   164,
     165,     0,   166,     0,   167,   168,   169,   170,   171,   172,
       0,   173,   174,     0,   175,   176,   177,   178,   179,   180,
     181,   182,   183,     0,   184,   185,     0,   186,   187,   188,
     189,   190,     0,     0,     0,   191,     0,     0,   192,     0,
     193,     0,     0,   194,     0,     0,     0,   195,   196,   197,
       0,     0,   198,     0,     0,     0,     0,   199,   200,     0,
       0,     0,     0,   201,   202,     0,   203,     0,     0,     0,
     204,     0,   205,   206,   207,   208,   209,     0,     0,     0,
     210,     0,     0,   211,   212,   213,     0,     0,     0,   214,
       0,   215,   216,     0,   217,   218,   219,     0,     0,   220,
     221,     0,   222,   223,   224,   225,   226,   227,     0,     0,
     228,   229,   230,   601,   232,     0,     0,   233,   234,     0,
     235,   236,   237,     0,     0,   238,     0,     0,     0,   602,
     240,     0,   241,     0,   242,     0,   243,   244,   245,   246,
       0,   247,     0,   248,     0,     0,     0,   249,   250,     0,
     251,     0,     0,   252,   253,     0,     0,     0,   254,   255,
     256,   257,     0,     0,   258,   259,   260,     0,     0,   261,
       0,     0,     0,     0,   262,   263,     0,     0,     0,   264,
       0,     0,     0,   265,   266,     0,   267,   268,     0,     0,
       0,   269,     0,     0,   270,   271,     0,     0,   272,     0,
       0,   273,   274,     0,     0,     0,     0,     0,   275,   276,
       0,   277,     0,   278,     0,   279,   280,     0,     0,     0,
       0,     0,     0,     0,   281,     0,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,     0,   299,   300,   301,     0,   302,   303,
     304,   305,     0,   306,   307,     0,     0,     0,     0,   308,
     309,   310,   311,   312,   313,     0,     0,   314,   315,     0,
     316,     0,   317,     0,   318,   319,   320,   321,   322,   323,
     324,   325,   326,     0,     0,   327,   328,     0,     0,   329,
     330,   331,   332,     0,     0,     0,   333,   334,     0,     0,
       0,   335,     0,   336,   337,   338,     0,   339,   340,   341,
       0,   342,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   343,   344,   345,     0,   346,   347,     0,   603,   349,
     350,   351,   352,   353,   354,   355,   356,   357,     0,     0,
     358,   359,   360,     0,   361,     0,   362,   363,   364,   365,
     366,     0,   367,   368,   369,     0,     0,   370,     0,     0,
       0,   371,   372,   373,   374,   375,     0,     0,   376,   377,
     378,   379,   380,     0,   381,   382,     0,   383,   384,   385,
       0,     0,   386,     0,   387,     0,   388,   389,     0,   390,
     391,   392,     0,   393,     0,     0,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,     0,   405,   406,
       0,     0,     0,   407,   408,   409,   410,     0,     0,     0,
     411,     0,     0,     0,   412,     0,   413,   414,   415,   416,
       0,   417,   418,   419,   420,   421,     0,     0,     0,     0,
       0,   422,   423,   424,     0,   425,   426,     0,   427,     0,
       0,   428,     0,     0,   429,   430,   431,   432,   433,   434,
       0,     0,   435,   436,     0,   437,   438,   439,   440,   441,
     442,     0,     0,   443,   444,   445,   446,     0,   447,   448,
       0,     0,   449,   450,   451,   452,     0,     0,   453,   454,
       0,   455,   456,   457,   458,     0,     0,     0,     0,     0,
     459,   460,     0,     0,     0,   461,   462,   463,   464,     0,
     465,   466,     0,   467,   468,     0,   469,   470,     0,     0,
     471,     0,     0,   472,     0,   473,     0,   474,   475,     0,
       0,     0,     0,     0,     0,   476,     0,     0,   477,     0,
       0,     0,   478,   479,   480,   481,   482,     0,     0,     0,
       0,     0,     0,   483,   484,     0,   485,   486,   487,     0,
       0,   488,     0,   137,     0,   138,   139,   140,   141,   142,
       0,     0,   143,     0,     0,     0,   144,     0,     0,   145,
     538,   146,   147,   148,   149,   150,   151,     0,   152,     0,
       0,     0,   153,     0,     0,     0,   154,     0,     0,   155,
     156,   157,     0,   158,     0,   159,   160,     0,     0,   161,
       0,     0,   162,   163,     0,   164,   165,     0,   166,     0,
     167,   168,   169,   170,   171,   172,     0,   173,   174,     0,
     175,   176,   177,   178,   179,   180,   181,   182,   183,     0,
     184,   185,     0,   186,   187,   188,   189,   190,     0,     0,
       0,   191,     0,     0,   192,     0,   193,     0,     0,   194,
       0,     0,     0,   195,   196,   197,     0,     0,   198,     0,
       0,     0,     0,   199,   200,     0,     0,     0,     0,   201,
     202,     0,   203,     0,     0,     0,   204,     0,   205,   206,
     207,   208,   209,     0,     0,     0,   210,     0,     0,   211,
     212,   213,     0,     0,     0,   214,     0,   215,   216,     0,
     217,   218,   219,     0,     0,   220,   221,     0,   222,   223,
     224,   225,   226,   227,     0,     0,   228,   229,   230,   231,
     232,     0,     0,   233,   234,     0,   235,   236,   237,     0,
       0,   238,     0,     0,     0,   239,   240,     0,   241,     0,
     242,     0,   243,   244,   245,   246,     0,   247,     0,   248,
       0,     0,     0,   249,   250,     0,   251,     0,     0,   252,
     253,     0,     0,     0,   254,   255,   256,   257,     0,     0,
     258,   259,   260,     0,     0,   261,     0,     0,     0,     0,
     262,   263,     0,     0,     0,   264,     0,     0,     0,   265,
     266,     0,   267,   268,     0,     0,     0,   269,     0,     0,
     270,   271,     0,     0,   272,     0,     0,   273,   274,     0,
       0,     0,     0,     0,   275,   276,     0,   277,     0,   278,
       0,   279,   280,     0,     0,     0,     0,     0,     0,     0,
     281,     0,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,     0,
     299,   300,   301,     0,   302,   303,   304,   305,     0,   306,
     307,     0,     0,     0,     0,   308,   309,   310,   311,   312,
     313,     0,     0,   314,   315,     0,   316,     0,   317,     0,
     318,   319,   320,   321,   322,   323,   324,   325,   326,     0,
       0,   327,   328,     0,     0,   329,   330,   331,   332,     0,
       0,     0,   333,   334,     0,     0,     0,   335,     0,   336,
     337,   338,     0,   339,   340,   341,     0,   342,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   343,   344,   345,
       0,   346,   347,     0,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,     0,     0,   358,   359,   360,     0,
     361,     0,   362,   363,   364,   365,   366,     0,   367,   368,
     369,     0,     0,   370,     0,     0,     0,   371,   372,   373,
     374,   375,     0,     0,   376,   377,   378,   379,   380,     0,
     381,   382,     0,   383,   384,   385,     0,     0,   386,     0,
     387,     0,   388,   389,     0,   390,   391,   392,     0,   393,
       0,     0,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,     0,   405,   406,     0,     0,     0,   407,
     408,   409,   410,     0,     0,     0,   411,     0,     0,     0,
     412,     0,   413,   414,   415,   416,     0,   417,   418,   419,
     420,   421,     0,     0,     0,     0,     0,   422,   423,   424,
       0,   425,   426,     0,   427,     0,     0,   428,     0,     0,
     429,   430,   431,   432,   433,   434,     0,     0,   435,   436,
       0,   437,   438,   439,   440,   441,   442,     0,     0,   443,
     444,   445,   446,     0,   447,   448,     0,     0,   449,   450,
     451,   452,     0,     0,   453,   454,     0,   455,   456,   457,
     458,     0,     0,     0,     0,     0,   459,   460,     0,     0,
       0,   461,   462,   463,   464,     0,   465,   466,     0,   467,
     468,     0,   469,   470,     0,     0,   471,     0,     0,   472,
       0,   473,     0,   474,   475,     0,     0,     0,     0,     0,
       0,   476,     0,     0,   477,     0,     0,     0,   478,   479,
     480,   481,   482,     0,     0,     0,     0,     0,     0,   483,
     484,     0,   485,   486,   487,     0,     0,   488,     0,   137,
       0,   138,   139,   140,   141,   142,     0,     0,   143,     0,
       0,     0,   144,     0,     0,   145,   768,   146,   147,   148,
     149,   150,   151,     0,   152,     0,     0,     0,   153,     0,
       0,     0,   154,     0,     0,   155,   156,   157,     0,   158,
       0,   159,   160,     0,     0,   161,     0,     0,   162,   163,
       0,   164,   165,     0,   166,     0,   167,   168,   169,   170,
     171,   172,     0,   173,   174,     0,   175,   176,   177,   178,
     179,   180,   181,   182,   183,     0,   184,   185,     0,   186,
     187,   188,   189,   190,     0,     0,     0,   191,     0,     0,
     192,     0,   193,     0,     0,   194,     0,     0,     0,   195,
     196,   197,     0,     0,   198,     0,     0,     0,     0,   199,
     200,     0,     0,     0,     0,   201,   202,     0,   203,     0,
       0,     0,   204,     0,   205,   206,   207,   208,   209,     0,
       0,     0,   210,     0,     0,   211,   212,   213,     0,     0,
       0,   214,     0,   215,   216,     0,   217,   218,   219,     0,
       0,   220,   221,     0,   222,   223,   224,   225,   226,   227,
       0,     0,   228,   229,   230,   231,   232,     0,     0,   233,
     234,     0,   235,   236,   237,     0,     0,   238,     0,     0,
       0,   239,   240,     0,   241,     0,   242,     0,   243,   244,
     245,   246,     0,   247,     0,   248,     0,     0,     0,   249,
     250,     0,   251,     0,     0,   252,   253,     0,     0,     0,
     254,   255,   256,   257,     0,     0,   258,   259,   260,     0,
       0,   261,     0,     0,     0,     0,   262,   263,     0,     0,
       0,   264,     0,     0,     0,   265,   266,     0,   267,   268,
       0,     0,     0,   269,     0,     0,   270,   271,     0,     0,
     272,     0,     0,   273,   274,     0,     0,     0,     0,     0,
     275,   276,     0,   277,     0,   278,     0,   279,   280,     0,
       0,     0,     0,     0,     0,     0,   281,     0,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,     0,   299,   300,   301,     0,
     302,   303,   304,   305,     0,   306,   307,     0,     0,     0,
       0,   308,   309,   310,   311,   312,   313,     0,     0,   314,
     315,     0,   316,     0,   317,     0,   318,   319,   320,   321,
     322,   323,   324,   325,   326,     0,     0,   327,   328,     0,
       0,   329,   330,   331,   332,     0,     0,     0,   333,   334,
       0,     0,     0,   335,     0,   336,   337,   338,     0,   339,
     340,   341,     0,   342,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   343,   344,   345,     0,   346,   347,     0,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
       0,     0,   358,   359,   360,     0,   361,     0,   362,   363,
     364,   365,   366,     0,   367,   368,   369,     0,     0,   370,
       0,     0,     0,   371,   372,   373,   374,   375,     0,     0,
     376,   377,   378,   379,   380,     0,   381,   382,     0,   383,
     384,   385,     0,     0,   386,     0,   387,     0,   388,   389,
       0,   390,   391,   392,     0,   393,     0,     0,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,     0,
     405,   406,     0,     0,     0,   407,   408,   409,   410,     0,
       0,     0,   411,     0,     0,     0,   412,     0,   413,   414,
     415,   416,     0,   417,   418,   419,   420,   421,     0,     0,
       0,     0,     0,   422,   423,   424,     0,   425,   426,     0,
     427,     0,     0,   428,     0,     0,   429,   430,   431,   432,
     433,   434,     0,     0,   435,   436,     0,   437,   438,   439,
     440,   441,   442,     0,     0,   443,   444,   445,   446,     0,
     447,   448,     0,     0,   449,   450,   451,   452,     0,     0,
     453,   454,     0,   455,   456,   457,   458,     0,     0,     0,
       0,     0,   459,   460,     0,     0,     0,   461,   462,   463,
     464,     0,   465,   466,     0,   467,   468,     0,   469,   470,
       0,     0,   471,     0,     0,   472,     0,   473,     0,   474,
     475,     0,     0,     0,     0,     0,     0,   476,     0,     0,
     477,     0,     0,     0,   478,   479,   480,   481,   482,     0,
       0,     0,     0,     0,     0,   483,   484,     0,   485,   486,
     487,     0,     0,   488,     0,   137,     0,   138,   139,   140,
     141,   142,     0,     0,   143,     0,     0,     0,   144,     0,
       0,   145,  2592,   146,   147,   148,   149,   150,   151,     0,
     152,     0,     0,     0,   153,     0,     0,     0,   154,     0,
       0,   155,   156,   157,     0,   158,     0,   159,   160,     0,
       0,   161,     0,     0,   162,   163,     0,   164,   898,   899,
     166,     0,   167,   168,   169,   170,   171,   172,     0,   173,
     174,     0,   175,   176,   177,   178,   179,   180,   181,   182,
     183,     0,   184,   185,     0,   186,   187,   188,   189,   190,
       0,     0,     0,   191,     0,     0,   192,     0,   193,     0,
       0,   194,     0,     0,     0,   195,   196,   197,     0,     0,
     198,     0,     0,     0,     0,   199,   200,     0,     0,     0,
     900,   201,   202,     0,   203,     0,     0,     0,   204,     0,
     205,   206,   207,   208,   209,     0,     0,     0,   210,     0,
       0,   211,   212,   213,     0,     0,     0,   214,     0,   215,
     216,     0,   217,   218,   219,     0,     0,   220,   221,     0,
     222,   223,   224,   225,   226,   227,     0,     0,   228,   229,
     230,   231,   232,     0,     0,   233,   234,     0,   235,   236,
     237,     0,     0,   238,     0,     0,     0,   239,   240,     0,
     241,     0,   242,     0,   243,   244,   245,   246,     0,   901,
       0,   248,     0,     0,     0,   249,   250,     0,   251,     0,
       0,   252,   253,     0,     0,     0,   254,   255,   256,   257,
       0,     0,   258,   259,   260,     0,     0,   261,     0,     0,
       0,     0,   262,   263,     0,     0,     0,   264,     0,     0,
       0,   265,   266,     0,   267,   268,     0,     0,     0,   269,
       0,     0,   270,   271,     0,     0,   272,     0,     0,   273,
     274,     0,     0,     0,     0,     0,   275,   276,     0,   902,
       0,   278,     0,   279,   280,     0,     0,     0,     0,     0,
       0,     0,   281,     0,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,     0,   299,   300,   301,     0,   302,   303,   304,   305,
       0,   306,   307,     0,     0,     0,     0,   308,   309,   310,
     311,   312,   313,     0,     0,   314,   315,     0,   316,     0,
     317,     0,   318,   319,   320,   321,   322,   323,   903,   325,
     326,     0,     0,   327,   328,     0,     0,   329,   330,   331,
     332,     0,     0,     0,   333,   334,     0,     0,     0,   335,
       0,   336,   337,   338,     0,   339,   340,   341,     0,   342,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   343,
     344,   345,     0,   346,   347,     0,   348,   349,   904,   351,
     352,   353,   354,   355,   356,   357,     0,     0,   358,   359,
     360,     0,   361,     0,   362,   363,   364,   365,   366,     0,
     367,   368,   369,     0,     0,   370,     0,     0,     0,   371,
     372,   373,   374,   375,     0,     0,   376,   377,   378,   379,
     380,     0,   381,   382,     0,   383,   384,   385,     0,     0,
     386,     0,   387,     0,   388,   389,     0,   390,   391,   392,
       0,   393,     0,     0,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,     0,   405,   406,     0,     0,
       0,   407,   408,   905,   410,     0,     0,     0,   411,     0,
       0,     0,   412,     0,   413,   414,   415,   416,     0,   417,
     418,   419,   420,   421,     0,     0,     0,     0,     0,   422,
     423,   424,     0,   425,   426,     0,   427,     0,     0,   428,
       0,     0,   429,   430,   431,   432,   433,   434,     0,     0,
     435,   436,     0,   437,   438,   439,   440,   441,   442,     0,
       0,   443,   444,   445,   446,     0,   447,   448,     0,     0,
     449,   450,   451,   452,     0,     0,   453,   454,     0,   455,
     456,   457,   458,     0,     0,     0,     0,     0,   906,   460,
       0,     0,     0,   461,   462,   463,   464,     0,   465,   466,
       0,   467,   468,     0,   469,   470,     0,     0,   471,     0,
       0,   472,     0,   473,     0,   474,   475,     0,     0,     0,
       0,     0,     0,   476,     0,     0,   477,     0,     0,     0,
     478,   479,   480,   481,   482,     0,     0,     0,     0,     0,
       0,   483,   484,     0,   485,   486,   487,     0,     0,   488,
     137,     0,   138,   139,   140,   141,   142,     0,     0,   143,
       0,     0,     0,   144,     0,     0,   145,   907,   146,   147,
     148,   149,   150,   151,     0,   152,     0,     0,     0,   153,
       0,     0,     0,   154,     0,     0,   155,   156,   157,     0,
     158,     0,   159,   160,     0,     0,   161,     0,     0,   162,
     163,     0,   164,   165,     0,   166,     0,   167,   168,   169,
     170,   171,   172,     0,   173,   174,     0,   175,   176,   177,
     178,   179,   180,   181,   182,   183,     0,   184,   185,     0,
     186,   187,   188,   189,   190,     0,     0,     0,   191,     0,
       0,   192,     0,   193,     0,     0,   194,     0,     0,     0,
     195,   196,   197,     0,     0,   198,     0,     0,     0,     0,
     199,   200,     0,     0,     0,     0,   201,   202,     0,   203,
       0,     0,     0,   204,     0,   205,   206,   207,   208,   209,
       0,     0,     0,   210,     0,     0,   211,   212,   213,     0,
       0,     0,   214,     0,   215,   216,     0,   217,   218,   219,
       0,     0,   220,   221,     0,   222,   223,   224,   225,   226,
     227,     0,     0,   228,   229,   230,   231,   232,     0,     0,
     233,   234,     0,   235,   236,   237,     0,     0,   238,     0,
       0,     0,   239,   240,     0,   241,     0,   242,     0,   243,
     244,   245,   246,     0,   247,     0,   248,     0,     0,     0,
     249,   250,     0,   251,     0,     0,   252,   253,     0,     0,
       0,   254,   255,   256,   257,     0,     0,   258,   259,   260,
       0,     0,   261,     0,     0,     0,     0,   262,   263,     0,
       0,     0,   264,     0,     0,     0,   265,   266,     0,   267,
     268,     0,     0,     0,   269,     0,     0,   270,   271,     0,
       0,   272,     0,     0,   273,   274,   614,     0,     0,     0,
       0,   275,   276,     0,   277,     0,   278,     0,   279,   280,
       0,     0,     0,     0,     0,     0,     0,   281,     0,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,     0,   299,   300,   301,
       0,   302,   303,   304,   305,     0,   306,   307,     0,     0,
       0,     0,   308,   309,   310,   311,   312,   313,     0,     0,
     314,   315,     0,   316,     0,   317,     0,   318,   319,   320,
     321,   322,   323,   324,   325,   326,     0,     0,   327,   328,
       0,     0,   329,   330,   331,   332,     0,     0,     0,   333,
     334,     0,     0,     0,   335,     0,   336,   337,   338,     0,
     339,   340,   341,     0,   342,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   343,   344,   345,     0,   346,   347,
       0,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,     0,     0,   358,   359,   360,     0,   361,     0,   362,
     363,   364,   365,   366,     0,   367,   368,   369,     0,     0,
     370,     0,     0,     0,   371,   372,   373,   374,   375,     0,
       0,   376,   377,   378,   379,   380,     0,   381,   382,     0,
     383,   384,   385,     0,     0,   386,     0,   387,     0,   388,
     389,     0,   390,   391,   392,     0,   393,     0,     0,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
       0,   405,   406,     0,     0,     0,   407,   408,   409,   410,
       0,     0,     0,   411,     0,     0,     0,   412,     0,   413,
     414,   415,   416,     0,   417,   418,   419,   420,   421,     0,
       0,     0,     0,     0,   422,   423,   424,     0,   425,   426,
       0,   427,     0,     0,   428,     0,     0,   429,   430,   431,
     432,   433,   434,     0,     0,   435,   436,     0,   437,   438,
     439,   440,   441,   442,     0,     0,   443,   444,   445,   446,
       0,   447,   448,     0,     0,   449,   450,   451,   452,     0,
     134,   453,   454,     0,   455,   456,   457,   458,     0,     0,
       0,     0,     0,   459,   460,     0,     0,     0,   461,   462,
     463,   464,     0,   465,   466,     0,   467,   468,     0,   469,
     470,     0,     0,   471,     0,     0,   472,     0,   473,     0,
     474,   475,     0,     0,     0,     0,     0,     0,   476,     0,
       0,   477,     0,     0,     0,   478,   479,   480,   481,   482,
       0,     0,     0,     0,     0,     0,   483,   484,     0,   485,
     486,   487,     0,     0,   488,   137,     0,   138,   139,   140,
     141,   142,     0,     0,   143,     0,     0,     0,   144,     0,
       0,   145,  1372,   146,   147,   148,   149,   150,   151,     0,
     152,     0,     0,     0,   153,     0,     0,     0,   154,     0,
       0,   155,   156,   157,     0,   158,     0,   159,   160,     0,
       0,   161,     0,     0,   162,   163,     0,   164,   165,     0,
     166,     0,   167,   168,   169,   170,   171,   172,     0,   173,
     174,     0,   175,   176,   177,   178,   179,   180,   181,   182,
     183,     0,   184,   185,     0,   186,   187,   188,   189,   190,
       0,     0,     0,   191,     0,     0,   192,     0,   193,     0,
       0,   194,     0,     0,     0,   195,   196,   197,     0,     0,
     198,     0,     0,     0,     0,   199,   200,     0,     0,     0,
       0,   201,   202,     0,   203,     0,     0,     0,   204,     0,
     205,   206,   207,   208,   209,     0,     0,     0,   210,     0,
       0,   211,   212,   213,     0,     0,     0,   214,     0,   215,
     216,     0,   217,   218,   219,     0,     0,   220,   221,     0,
     222,   223,   224,   225,   226,   227,     0,     0,   228,   229,
     230,   231,   232,     0,     0,   233,   234,     0,   235,   236,
     237,     0,     0,   238,     0,     0,     0,   239,   240,     0,
     241,     0,   242,     0,   243,   244,   245,   246,     0,   247,
       0,   248,     0,     0,     0,   249,   250,     0,   251,     0,
       0,   252,   253,     0,     0,     0,   254,   255,   256,   257,
       0,     0,   258,   259,   260,     0,     0,   261,     0,     0,
       0,     0,   262,   263,     0,     0,     0,   264,     0,     0,
       0,   265,   266,     0,   267,   268,     0,     0,     0,   269,
       0,     0,   270,   271,     0,     0,   272,     0,     0,   273,
     274,   614,     0,     0,     0,     0,   275,   276,     0,   277,
       0,   278,     0,   279,   280,     0,     0,     0,     0,     0,
       0,     0,   281,     0,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,     0,   299,   300,   301,     0,   302,   303,   304,   305,
       0,   306,   307,     0,     0,     0,     0,   308,   309,   310,
     311,   312,   313,     0,     0,   314,   315,     0,   316,     0,
     317,     0,   318,   319,   320,   321,   322,   323,   324,   325,
     326,     0,     0,   327,   328,     0,     0,   329,   330,   331,
     332,     0,     0,     0,   333,   334,     0,     0,     0,   335,
       0,   336,   337,   338,     0,   339,   340,   341,     0,   342,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   343,
     344,   345,     0,   346,   347,     0,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,     0,     0,   358,   359,
     360,     0,   361,     0,   362,   363,   364,   365,   366,     0,
     367,   368,   369,     0,     0,   370,     0,     0,     0,   371,
     372,   373,   374,   375,     0,     0,   376,   377,   378,   379,
     380,     0,   381,   382,     0,   383,   384,   385,     0,     0,
     386,     0,   387,     0,   388,   389,     0,   390,   391,   392,
       0,   393,     0,     0,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,     0,   405,   406,     0,     0,
       0,   407,   408,   409,   410,     0,     0,     0,   411,     0,
       0,     0,   412,     0,   413,   414,   415,   416,     0,   417,
     418,   419,   420,   421,     0,     0,     0,     0,     0,   422,
     423,   424,     0,   425,   426,     0,   427,     0,     0,   428,
       0,     0,   429,   430,   431,   432,   433,   434,     0,     0,
     435,   436,     0,   437,   438,   439,   440,   441,   442,     0,
       0,   443,   444,   445,   446,     0,   447,   448,     0,     0,
     449,   450,   451,   452,     0,   134,   453,   454,     0,   455,
     456,   457,   458,     0,     0,     0,     0,     0,   459,   460,
       0,     0,     0,   461,   462,   463,   464,     0,   465,   466,
       0,   467,   468,     0,   469,   470,     0,     0,   471,     0,
       0,   472,     0,   473,     0,   474,   475,     0,     0,     0,
       0,     0,     0,   476,     0,     0,   477,     0,     0,     0,
     478,   479,   480,   481,   482,     0,     0,     0,     0,     0,
       0,   483,   484,     0,   485,   486,   487,     0,     0,   488,
     137,     0,   138,   139,   140,   141,   142,     0,     0,   143,
       0,     0,     0,   144,     0,     0,   145,  1708,   146,   147,
     148,   149,   150,   151,     0,   152,     0,     0,     0,   153,
       0,     0,     0,   154,     0,     0,   155,   156,   157,     0,
     158,     0,   159,   160,     0,     0,   161,     0,     0,   162,
     163,     0,   164,   898,   899,   166,     0,   167,   168,   169,
     170,   171,   172,     0,   173,   174,     0,   175,   176,   177,
     178,   179,   180,   181,   182,   183,     0,   184,   185,     0,
     186,   187,   188,   189,   190,     0,     0,     0,   191,     0,
       0,   192,     0,   193,     0,     0,   194,     0,     0,     0,
     195,   196,   197,     0,     0,   198,     0,     0,     0,     0,
     199,   200,     0,     0,     0,   900,   201,   202,     0,   203,
       0,     0,     0,   204,     0,   205,   206,   207,   208,   209,
       0,     0,     0,   210,     0,     0,   211,   212,   213,     0,
       0,     0,   214,     0,   215,   216,     0,   217,   218,   219,
       0,     0,   220,   221,     0,   222,   223,   224,   225,   226,
     227,     0,     0,   228,   229,   230,   231,   232,     0,     0,
     233,   234,     0,   235,   236,   237,     0,     0,   238,     0,
       0,     0,   239,   240,     0,   241,     0,   242,     0,   243,
     244,   245,   246,     0,   901,     0,   248,     0,     0,     0,
     249,   250,     0,   251,     0,     0,   252,   253,     0,     0,
       0,   254,   255,   256,   257,     0,     0,   258,   259,   260,
       0,     0,   261,     0,     0,     0,     0,   262,   263,     0,
       0,     0,   264,     0,     0,     0,   265,   266,     0,   267,
     268,     0,     0,     0,   269,     0,     0,   270,   271,     0,
       0,   272,     0,     0,   273,   274,     0,     0,     0,     0,
       0,   275,   276,     0,   902,     0,   278,     0,   279,   280,
       0,     0,     0,     0,     0,     0,     0,   281,     0,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,     0,   299,   300,   301,
       0,   302,   303,   304,   305,     0,   306,   307,     0,     0,
       0,     0,   308,   309,   310,   311,   312,   313,     0,     0,
     314,   315,     0,   316,     0,   317,     0,   318,   319,   320,
     321,   322,   323,   903,   325,   326,     0,     0,   327,   328,
       0,     0,   329,   330,   331,   332,     0,     0,     0,   333,
     334,     0,     0,     0,   335,     0,   336,   337,   338,     0,
     339,   340,   341,     0,   342,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   343,   344,   345,     0,   346,   347,
       0,   348,   349,   904,   351,   352,   353,   354,   355,   356,
     357,     0,     0,   358,   359,   360,     0,   361,     0,   362,
     363,   364,   365,   366,     0,   367,   368,   369,     0,     0,
     370,     0,     0,     0,   371,   372,   373,   374,   375,     0,
       0,   376,   377,   378,   379,   380,     0,   381,   382,     0,
     383,   384,   385,     0,     0,   386,     0,   387,     0,   388,
     389,     0,   390,   391,   392,     0,   393,     0,     0,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
       0,   405,   406,     0,     0,     0,   407,   408,   905,   410,
       0,     0,     0,   411,     0,     0,     0,   412,     0,   413,
     414,   415,   416,     0,   417,   418,   419,   420,   421,     0,
       0,     0,     0,     0,   422,   423,   424,     0,   425,   426,
       0,   427,     0,     0,   428,     0,     0,   429,   430,   431,
     432,   433,   434,     0,     0,   435,   436,     0,   437,   438,
     439,   440,   441,   442,     0,     0,   443,   444,   445,   446,
       0,   447,   448,     0,     0,   449,   450,   451,   452,     0,
       0,   453,   454,     0,   455,   456,   457,   458,     0,     0,
       0,     0,     0,   459,   460,     0,     0,     0,   461,   462,
     463,   464,     0,   465,   466,     0,   467,   468,     0,   469,
     470,     0,     0,   471,     0,     0,   472,     0,   473,     0,
     474,   475,     0,     0,     0,     0,     0,     0,   476,     0,
       0,   477,     0,     0,     0,   478,   479,   480,   481,   482,
       0,     0,     0,     0,     0,     0,   483,   484,     0,   485,
     486,   487,     0,     0,   488,   137,     0,   138,   139,   140,
     141,   142,     0,     0,   143,     0,     0,     0,   144,     0,
       0,   145,   907,   146,   147,   148,   149,   150,   151,     0,
     152,     0,     0,     0,   153,     0,     0,     0,   154,     0,
       0,   155,   156,   157,     0,   158,     0,   159,   160,     0,
       0,   161,     0,     0,   162,   163,     0,   164,   165,     0,
     166,     0,   167,   168,   169,   170,   171,   172,     0,   173,
     174,     0,   175,   176,   177,   178,   179,   180,   181,   182,
     183,     0,   184,   185,     0,   186,   187,   188,   189,   190,
       0,     0,     0,   191,     0,     0,   192,     0,   193,     0,
       0,   194,     0,     0,     0,   195,   196,   197,     0,     0,
     198,     0,     0,     0,     0,   199,   200,     0,     0,     0,
       0,   201,   202,     0,   203,     0,     0,     0,   204,     0,
     205,   206,   207,   208,   209,     0,     0,     0,   210,     0,
       0,   211,   212,   213,     0,     0,     0,   214,     0,   215,
     216,     0,   217,   218,   219,     0,     0,   220,   221,     0,
     222,   223,   224,   225,   226,   227,     0,     0,   228,   229,
     230,   231,   232,     0,     0,   233,   234,     0,   235,   236,
     237,     0,     0,   238,     0,     0,     0,   239,   240,     0,
     241,     0,   242,     0,   243,   244,   245,   246,     0,   247,
       0,   248,     0,     0,     0,   249,   250,     0,   251,     0,
       0,   252,   253,     0,     0,     0,   254,   255,   256,   257,
       0,     0,   258,   259,   260,     0,     0,   261,     0,     0,
       0,     0,   262,   263,     0,     0,     0,   264,     0,     0,
       0,   265,   266,     0,   267,   268,     0,     0,     0,   269,
       0,     0,   270,   271,     0,     0,   272,     0,     0,   273,
     274,   614,     0,     0,     0,     0,   275,   276,     0,   277,
       0,   278,     0,   279,   280,     0,     0,     0,     0,     0,
       0,     0,   281,     0,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,     0,   299,   300,   301,     0,   302,   303,   304,   305,
       0,   306,   307,     0,     0,     0,     0,   308,   309,   310,
     311,   312,   313,     0,     0,   314,   315,     0,   316,     0,
     317,     0,   318,   319,   320,   321,   322,   323,   324,   325,
     326,     0,     0,   327,   328,     0,     0,   329,   330,   331,
     332,     0,     0,     0,   333,   334,     0,     0,     0,   335,
       0,   336,   337,   338,     0,   339,   340,   341,     0,   342,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   343,
     344,   345,     0,   346,   347,     0,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,     0,     0,   358,   359,
     360,     0,   361,     0,   362,   363,   364,   365,   366,     0,
     367,   368,   369,     0,     0,   370,     0,     0,     0,   371,
     372,   373,   374,   375,     0,     0,   376,   377,   378,   379,
     380,     0,   381,   382,     0,   383,   384,   385,     0,     0,
     386,     0,   387,     0,   388,   389,     0,   390,   391,   392,
       0,   393,     0,     0,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,     0,   405,   406,     0,     0,
       0,   407,   408,   409,   410,     0,     0,     0,   411,     0,
       0,     0,   412,     0,   413,   414,   415,   416,     0,   417,
     418,   419,   420,   421,     0,     0,     0,     0,     0,   422,
     423,   424,     0,   425,   426,     0,   427,     0,     0,   428,
       0,     0,   429,   430,   431,   432,   433,   434,     0,     0,
     435,   436,     0,   437,   438,   439,   440,   441,   442,     0,
       0,   443,   444,   445,   446,     0,   447,   448,     0,     0,
     449,   450,   451,   452,     0,   134,   453,   454,     0,   455,
     456,   457,   458,     0,     0,     0,     0,     0,   459,   460,
       0,     0,     0,   461,   462,   463,   464,     0,   465,   466,
       0,   467,   468,     0,   469,   470,     0,     0,   471,     0,
       0,   472,     0,   473,     0,   474,   475,     0,     0,     0,
       0,     0,     0,   476,     0,     0,   477,     0,     0,     0,
     478,   479,   480,   481,   482,     0,     0,     0,     0,     0,
       0,   483,   484,     0,   485,   486,   487,     0,     0,   488,
     137,     0,   138,   139,   140,   141,   142,     0,     0,   143,
       0,     0,     0,   144,     0,     0,   145,  3547,   146,   147,
     148,   149,   150,   151,     0,   152,     0,     0,     0,   153,
       0,     0,     0,   154,     0,     0,   155,   156,   157,     0,
     158,     0,   159,   160,     0,     0,   161,     0,     0,   162,
     163,     0,   164,   165,     0,   166,     0,   167,   168,   169,
     170,   171,   172,     0,   173,   174,     0,   175,   176,   177,
     178,   179,   180,   181,   182,   183,  1263,   184,   185,     0,
     186,   187,   188,   189,   190,     0,     0,     0,   191,     0,
       0,   192,     0,   193,     0,     0,   194,     0,     0,     0,
     195,   196,   197,     0,     0,   198,     0,     0,     0,     0,
     199,   200,     0,     0,     0,     0,   201,   202,     0,   203,
       0,     0,     0,   204,     0,   205,   206,   207,   208,   209,
       0,     0,     0,   210,     0,     0,   211,   212,   213,     0,
       0,     0,   214,     0,   215,   216,     0,   217,   218,   219,
       0,     0,   220,   221,     0,   222,   223,   224,   225,   226,
     227,     0,     0,   228,   229,   230,   231,   232,     0,     0,
     233,   234,     0,   235,   236,   237,     0,     0,   238,     0,
       0,     0,   239,   240,     0,   241,     0,   242,     0,   243,
     244,   245,   246,     0,   247,     0,   248,     0,     0,     0,
     249,   250,     0,   251,     0,     0,   252,   253,     0,     0,
       0,   254,   255,   256,   257,     0,     0,   258,   259,   260,
       0,     0,   261,     0,     0,     0,     0,   262,   263,     0,
       0,     0,   264,     0,     0,     0,   265,   266,     0,   267,
     268,     0,     0,     0,   269,     0,     0,   270,   271,     0,
       0,   272,     0,     0,   273,   274,     0,     0,     0,     0,
       0,   275,   276,     0,   277,     0,   278,     0,   279,   280,
       0,     0,     0,     0,     0,     0,     0,   281,     0,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,     0,   299,   300,   301,
       0,   302,   303,   304,   305,     0,   306,   307,     0,     0,
       0,     0,   308,   309,   310,   311,   312,   313,     0,     0,
     314,   315,     0,   316,     0,   317,     0,   318,   319,   320,
     321,   322,   323,   324,   325,   326,     0,     0,   327,   328,
       0,     0,   329,   330,   331,   332,     0,     0,     0,   333,
     334,     0,     0,     0,   335,     0,   336,   337,   338,     0,
     339,   340,   341,     0,   342,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   343,   344,   345,     0,   346,   347,
       0,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,     0,     0,   358,   359,   360,     0,   361,     0,   362,
     363,   364,   365,   366,     0,   367,   368,   369,     0,     0,
     370,     0,     0,     0,   371,   372,   373,   374,   375,     0,
       0,   376,   377,   378,   379,   380,     0,   381,   382,     0,
     383,   384,   385,     0,     0,   386,     0,   387,     0,   388,
     389,     0,   390,   391,   392,     0,   393,     0,     0,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
       0,   405,   406,     0,     0,     0,   407,   408,   409,   410,
       0,     0,     0,   411,     0,     0,     0,   412,     0,   413,
     414,   415,   416,     0,   417,   418,   419,   420,   421,     0,
       0,     0,     0,     0,   422,   423,   424,     0,   425,   426,
       0,   427,     0,     0,   428,     0,     0,   429,   430,   431,
     432,   433,   434,     0,     0,   435,   436,     0,   437,   438,
     439,   440,   441,   442,     0,     0,   443,   444,   445,   446,
       0,   447,   448,     0,     0,   449,   450,   451,   452,     0,
       0,   453,   454,     0,   455,   456,   457,   458,     0,     0,
       0,     0,     0,   459,   460,     0,     0,     0,   461,   462,
     463,   464,     0,   465,   466,     0,   467,   468,     0,   469,
     470,     0,     0,   471,     0,     0,   472,     0,   473,     0,
     474,   475,     0,     0,     0,     0,     0,     0,   476,     0,
       0,   477,     0,     0,     0,   478,   479,   480,   481,   482,
       0,     0,     0,     0,     0,     0,   483,   484,     0,   485,
     486,   487,     0,     0,   488,   137,     0,   138,   139,   140,
     141,   142,     0,     0,   143,     0,     0,     0,   144,     0,
       0,   145,  1264,   146,   147,   148,   149,   150,   151,     0,
     152,     0,     0,     0,   153,     0,     0,     0,   154,     0,
       0,   155,   156,   157,     0,   158,     0,   159,   160,     0,
       0,   161,     0,     0,   162,   163,     0,   164,   165,     0,
     166,     0,   167,   168,   169,   170,   171,   172,     0,   173,
     174,     0,   175,   176,   177,   178,   179,   180,   181,   182,
     183,     0,   184,   185,     0,   186,   187,   188,   189,   190,
       0,     0,     0,   191,     0,     0,   192,     0,   193,     0,
       0,   194,     0,     0,     0,   195,   196,   197,     0,     0,
     198,     0,     0,     0,     0,   199,   200,     0,     0,     0,
       0,   201,   202,     0,   203,     0,     0,     0,   204,     0,
     205,   206,   207,   208,   209,     0,     0,     0,   210,     0,
       0,   211,   212,   213,     0,     0,     0,   214,     0,   215,
     216,     0,   217,   218,   219,     0,     0,   220,   221,     0,
     222,   223,   224,   225,   226,   227,     0,     0,   228,   229,
     230,   231,   232,     0,     0,   233,   234,     0,   235,   236,
     237,     0,     0,   238,     0,     0,     0,   239,   240,     0,
     241,     0,   242,     0,   243,   244,   245,   246,     0,   247,
       0,   248,     0,     0,     0,   249,   250,     0,   251,     0,
       0,   252,   253,     0,     0,     0,   254,   255,   256,   257,
       0,     0,   258,   259,   260,     0,     0,   261,     0,     0,
       0,     0,   262,   263,     0,     0,     0,   264,     0,     0,
       0,   265,   266,     0,   267,   268,     0,     0,     0,   269,
       0,     0,   270,   271,     0,     0,   272,     0,     0,   273,
     274,     0,     0,     0,     0,     0,   275,   276,     0,   277,
       0,   278,     0,   279,   280,     0,     0,     0,     0,     0,
       0,     0,   281,     0,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,     0,   299,   300,   301,     0,   302,   303,   304,   305,
       0,   306,   307,     0,     0,     0,     0,   308,   309,   310,
     311,   312,   313,     0,     0,   314,   315,     0,   316,     0,
     317,     0,   318,   319,   320,   321,   322,   323,   324,   325,
     326,     0,     0,   327,   328,     0,     0,   329,   330,   331,
     332,     0,     0,     0,   333,   334,     0,     0,     0,   335,
       0,   336,   337,   338,     0,   339,   340,   341,     0,   342,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   343,
     344,   345,     0,   346,   347,     0,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,     0,     0,   358,   359,
     360,     0,   361,     0,   362,   363,   364,   365,   366,     0,
     367,   368,   369,     0,     0,   370,     0,     0,     0,   371,
     372,   373,   374,   375,     0,     0,   376,   377,   378,   379,
     380,     0,   381,   382,     0,   383,   384,   385,     0,     0,
     386,     0,   387,     0,   388,   389,     0,   390,   391,   392,
       0,   393,     0,     0,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,     0,   405,   406,     0,     0,
       0,   407,   408,   409,   410,     0,     0,     0,   411,     0,
       0,     0,   412,     0,   413,   414,   415,   416,     0,   417,
     418,   419,   420,   421,     0,     0,     0,     0,     0,   422,
     423,   424,     0,   425,   426,     0,   427,     0,     0,   428,
       0,     0,   429,   430,   431,   432,   433,   434,     0,     0,
     435,   436,     0,   437,   438,   439,   440,   441,   442,     0,
       0,   443,   444,   445,   446,     0,   447,   448,     0,     0,
     449,   450,   451,   452,     0,     0,   453,   454,     0,   455,
     456,   457,   458,     0,     0,     0,     0,     0,   459,   460,
       0,     0,     0,   461,   462,   463,   464,     0,   465,   466,
       0,   467,   468,     0,   469,   470,     0,     0,   471,     0,
       0,   472,     0,   473,     0,   474,   475,     0,     0,     0,
       0,     0,     0,   476,     0,     0,   477,     0,     0,     0,
     478,   479,   480,   481,   482,     0,     0,     0,     0,     0,
       0,   483,   484,     0,   485,   486,   487,     0,     0,   488,
     137,     0,   138,   139,   140,   141,   142,     0,     0,   143,
       0,     0,     0,   144,     0,     0,     0,  1264,   146,   147,
     148,   149,   150,     0,     0,  -366,     0,     0,     0,   153,
       0,     0,     0,   154,     0,     0,   155,   156,   157,     0,
     158,     0,     0,     0,     0,     0,   161,  3969,     0,   162,
     163,     0,   164,     0,     0,     0,     0,   167,   168,   169,
    3970,   171,   172,     0,   173,   174,     0,   175,   176,     0,
     178,     0,   180,   181,   182,   183,     0,   184,   185,     0,
     186,   187,   188,     0,   190,     0,     0,     0,   191,     0,
       0,   192,     0,   193,     0,     0,   194,     0,     0,     0,
     195,   196,   197,     0,     0,   198,     0,     0,     0,     0,
     199,     0,     0,     0,     0,     0,   201,   202,     0,   203,
       0,     0,     0,   204,     0,   205,   206,   207,   208,   209,
       0,     0,     0,     0,     0,     0,   211,   212,   213,     0,
       0,     0,   214,     0,     0,   216,     0,   217,   218,   219,
       0,     0,   220,   221,     0,   222,   223,   224,   225,   226,
       0,     0,     0,   228,   229,   230,   231,   232,     0,     0,
     233,   234,  3971,   235,   236,   237,     0,     0,     0,     0,
       0,     0,     0,   240,     0,   241,     0,   242,     0,   243,
     244,   245,   246,     0,   247,     0,   248,     0,     0,     0,
       0,   250,     0,     0,     0,     0,     0,   253,     0,     0,
       0,   254,   255,   256,   257,  3972,     0,   258,   259,   260,
       0,     0,   261,     0,     0,     0,     0,   262,     0,     0,
       0,     0,   264,     0,     0,     0,   265,   266,     0,   267,
     268,  3973,     0,     0,   269,     0,     0,     0,   271,     0,
       0,   272,  3974,     0,   273,   274,     0,     0,     0,     0,
       0,   275,   276,     0,   277,     0,   278,     0,   279,   280,
       0,     0,     0,     0,  -321,     0,     0,   281,     0,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,     0,   299,   300,   301,
       0,   302,   303,   304,   305,     0,   306,   307,     0,     0,
       0,     0,   308,   309,   310,   311,   312,   313,     0,     0,
     314,   315,     0,   316,     0,   317,     0,   318,   319,   320,
     321,   322,   323,   324,   325,   326,     0,     0,   327,   328,
       0,     0,   329,   330,   331,   332,     0,     0,     0,     0,
     334,     0,     0,     0,   335,     0,   336,   337,   338,     0,
     339,   340,  3975,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   344,   345,     0,     0,   347,
       0,   348,   349,   350,   351,   352,   353,   354,   355,   356,
       0,     0,     0,     0,   359,   360,     0,   361,     0,   362,
     363,   364,   365,   366,     0,   367,   368,   369,     0,     0,
     370,     0,     0,     0,   371,   372,   373,   374,   375,     0,
       0,   376,   377,   378,   379,   380,     0,   381,     0,     0,
     383,     0,   385,  -321,     0,   386,     0,     0,     0,   388,
       0,     0,   390,   391,   392,  3976,   393,     0,     0,     0,
     395,   396,   397,   398,   399,   400,   401,     0,   403,   404,
       0,   405,     0,     0,     0,     0,   407,   408,   409,     0,
       0,     0,     0,   411,     0,     0,     0,   412,     0,     0,
     414,     0,   416,     0,   417,     0,     0,   420,   421,     0,
       0,     0,     0,     0,   422,   423,   424,     0,   425,   426,
       0,   427,     0,     0,   428,     0,     0,   429,     0,   431,
     432,   433,   434,     0,     0,     0,   436,     0,   437,   438,
     439,   440,   441,   442,     0,     0,   443,   444,   445,   446,
       0,   447,   448,     0,     0,   449,   450,   451,   452,     0,
       0,   453,   454,     0,   455,   456,   457,   458,     0,     0,
       0,     0,     0,   459,   460,     0,     0,     0,     0,   462,
     463,   464,     0,   465,   466,     0,   467,   468,     0,     0,
       0,     0,     0,   471,     0,     0,   472,     0,     0,     0,
     474,   475,     0,     0,     0,     0,     0,     0,   476,     0,
       0,   477,     0,     0,     0,   478,   479,   480,   481,   482,
       0,     0,  -321,     0,     0,     0,   483,     0,     0,   485,
       0,   487,     0,   137,   488,   138,   139,   140,   141,   142,
       0,     0,   143,     0,     0,     0,   144,  4492,     0,   145,
       0,   146,   147,   148,   149,   150,   151,     0,   152,     0,
       0,     0,   153,     0,     0,     0,   154,     0,     0,   155,
     156,   157,     0,   158,     0,   159,   160,     0,     0,   161,
       0,     0,   162,   163,     0,   164,   165,     0,   166,     0,
     167,   168,   169,   170,   171,   172,     0,   173,   174,     0,
     175,   176,   177,   178,   179,   180,   181,   182,   183,     0,
     184,   185,     0,   186,   187,   188,   189,   190,     0,     0,
       0,   191,     0,     0,   192,     0,   193,     0,     0,   194,
       0,     0,     0,   195,   196,   197,     0,     0,   198,     0,
       0,     0,     0,   199,   200,     0,     0,     0,     0,   201,
     202,     0,   203,     0,     0,     0,   204,     0,   205,   206,
     207,   208,   209,     0,     0,     0,   210,     0,     0,   211,
     212,   213,     0,     0,     0,   214,     0,   215,   216,     0,
     217,   218,   219,     0,     0,   220,   221,     0,   222,   223,
     224,   225,   226,   227,     0,     0,   228,   229,   230,   231,
     232,     0,     0,   233,   234,     0,   235,   236,   237,     0,
       0,   238,     0,     0,     0,   239,   240,     0,   241,     0,
     242,     0,   243,   244,   245,   246,     0,   247,     0,   248,
       0,     0,     0,   249,   250,     0,   251,     0,     0,   252,
     253,     0,     0,     0,   254,   255,   256,   257,     0,     0,
     258,   259,   260,     0,     0,   261,     0,     0,     0,     0,
     262,   263,     0,     0,     0,   264,     0,     0,     0,   265,
     266,     0,   267,   268,     0,     0,     0,   269,     0,     0,
     270,   271,     0,     0,   272,     0,     0,   273,   274,     0,
       0,     0,     0,     0,   275,   276,     0,   277,     0,   278,
       0,   279,   280,     0,     0,     0,     0,     0,     0,     0,
     281,     0,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,     0,
     299,   300,   301,     0,   302,   303,   304,   305,     0,   306,
     307,     0,     0,     0,     0,   308,   309,   310,   311,   312,
     313,     0,     0,   314,   315,     0,   316,     0,   317,     0,
     318,   319,   320,   321,   322,   323,   324,   325,   326,     0,
       0,   327,   328,     0,     0,   329,   330,   331,   332,     0,
       0,     0,   333,   334,     0,     0,     0,   335,     0,   336,
     337,   338,     0,   339,   340,   341,     0,   342,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   343,   344,   345,
       0,   346,   347,     0,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,     0,     0,   358,   359,   360,     0,
     361,     0,   362,   363,   364,   365,   366,     0,   367,   368,
     369,     0,     0,   370,     0,     0,     0,   371,   372,   373,
     374,   375,     0,     0,   376,   377,   378,   379,   380,     0,
     381,   382,     0,   383,   384,   385,     0,     0,   386,     0,
     387,     0,   388,   389,     0,   390,   391,   392,     0,   393,
       0,     0,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,     0,   405,   406,     0,     0,     0,   407,
     408,   409,   410,     0,     0,     0,   411,     0,     0,     0,
     412,     0,   413,   414,   415,   416,     0,   417,   418,   419,
     420,   421,     0,     0,     0,     0,     0,   422,   423,   424,
       0,   425,   426,     0,   427,     0,     0,   428,     0,     0,
     429,   430,   431,   432,   433,   434,     0,     0,   435,   436,
       0,   437,   438,   439,   440,   441,   442,     0,     0,   443,
     444,   445,   446,     0,   447,   448,     0,     0,   449,   450,
     451,   452,     0,     0,   453,   454,     0,   455,   456,   457,
     458,     0,     0,     0,     0,     0,   459,   460,     0,     0,
       0,   461,   462,   463,   464,     0,   465,   466,     0,   467,
     468,     0,   469,   470,     0,     0,   471,     0,     0,   472,
       0,   473,     0,   474,   475,     0,     0,     0,     0,     0,
       0,   476,     0,     0,   477,     0,     0,     0,   478,   479,
     480,   481,   482,     0,     0,     0,     0,     0,     0,   483,
     484,     0,   485,   486,   487,     0,   137,   488,   138,   139,
     140,   141,   142,  2154,     0,   143,     0,     0,     0,   144,
       0,     0,   145,     0,   146,   147,   148,   149,   150,   151,
       0,   152,     0,     0,     0,   153,     0,     0,     0,   154,
       0,     0,   155,   156,   157,     0,   158,     0,   159,   160,
       0,     0,   161,     0,     0,   162,   163,     0,   164,   165,
       0,   166,     0,   167,   168,   169,   170,   171,   172,     0,
     173,   174,     0,   175,   176,   177,   178,   179,   180,   181,
     182,   183,     0,   184,   185,     0,   186,   187,   188,   189,
     190,     0,     0,     0,   191,     0,     0,   192,     0,   193,
       0,     0,   194,     0,     0,     0,   195,   196,   197,     0,
       0,   198,     0,     0,     0,     0,   199,   200,     0,     0,
       0,     0,   201,   202,     0,   203,     0,     0,     0,   204,
       0,   205,   206,   207,   208,   209,     0,     0,     0,   210,
       0,     0,   211,   212,   213,     0,     0,     0,   214,     0,
     215,   216,     0,   217,   218,   219,     0,     0,   220,   221,
       0,   222,   223,   224,   225,   226,   227,     0,     0,   228,
     229,   230,   231,   232,     0,     0,   233,   234,     0,   235,
     236,   237,     0,     0,   238,     0,     0,     0,   239,   240,
       0,   241,     0,   242,     0,   243,   244,   245,   246,     0,
     247,     0,   248,     0,     0,     0,   249,   250,     0,   251,
       0,     0,   252,   253,     0,     0,     0,   254,   255,   256,
     257,     0,     0,   258,   259,   260,     0,     0,   261,     0,
       0,     0,     0,   262,   263,     0,     0,     0,   264,     0,
       0,     0,   265,   266,     0,   267,   268,     0,     0,     0,
     269,     0,     0,   270,   271,     0,     0,   272,     0,     0,
     273,   274,     0,     0,     0,     0,     0,   275,   276,     0,
     277,     0,   278,     0,   279,   280,     0,     0,     0,     0,
       0,     0,     0,   281,     0,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,     0,   299,   300,   301,     0,   302,   303,   304,
     305,     0,   306,   307,     0,     0,     0,     0,   308,   309,
     310,   311,   312,   313,     0,     0,   314,   315,     0,   316,
       0,   317,     0,   318,   319,   320,   321,   322,   323,   324,
     325,   326,     0,     0,   327,   328,     0,     0,   329,   330,
     331,   332,     0,     0,     0,   333,   334,     0,     0,     0,
     335,     0,   336,   337,   338,     0,   339,   340,   341,     0,
     342,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     343,   344,   345,     0,   346,   347,     0,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,     0,     0,   358,
     359,   360,     0,   361,     0,   362,   363,   364,   365,   366,
       0,   367,   368,   369,     0,     0,   370,     0,     0,     0,
     371,   372,   373,   374,   375,     0,     0,   376,   377,   378,
     379,   380,     0,   381,   382,     0,   383,   384,   385,     0,
       0,   386,     0,   387,     0,   388,   389,     0,   390,   391,
     392,     0,   393,     0,     0,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,     0,   405,   406,     0,
       0,     0,   407,   408,   409,   410,     0,     0,     0,   411,
       0,     0,     0,   412,     0,   413,   414,   415,   416,     0,
     417,   418,   419,   420,   421,     0,     0,     0,     0,     0,
     422,   423,   424,     0,   425,   426,     0,   427,     0,     0,
     428,     0,     0,   429,   430,   431,   432,   433,   434,     0,
       0,   435,   436,     0,   437,   438,   439,   440,   441,   442,
       0,     0,   443,   444,   445,   446,     0,   447,   448,     0,
       0,   449,   450,   451,   452,     0,     0,   453,   454,     0,
     455,   456,   457,   458,     0,     0,     0,     0,     0,   459,
     460,     0,     0,     0,   461,   462,   463,   464,     0,   465,
     466,     0,   467,   468,     0,   469,   470,     0,     0,   471,
       0,     0,   472,     0,   473,     0,   474,   475,     0,     0,
       0,     0,     0,     0,   476,     0,     0,   477,     0,     0,
       0,   478,   479,   480,   481,   482,     0,     0,     0,     0,
       0,     0,   483,   484,     0,   485,   486,   487,     0,   137,
     488,   138,   139,   140,   141,   142,  2867,     0,   143,     0,
       0,     0,   144,     0,     0,   145,     0,   146,   147,   148,
     149,   150,   151,     0,   152,     0,     0,     0,   153,     0,
       0,     0,   154,     0,     0,   155,   156,   157,     0,   158,
       0,   159,   160,     0,     0,   161,     0,     0,   162,   163,
       0,   164,   165,     0,   166,     0,   167,   168,   169,   170,
     171,   172,     0,   173,   174,     0,   175,   176,   177,   178,
     179,   180,   181,   182,   183,     0,   184,   185,     0,   186,
     187,   188,   189,   190,     0,     0,     0,   191,     0,     0,
     192,     0,   193,     0,     0,   194,     0,     0,     0,   195,
     196,   197,     0,     0,   198,     0,     0,     0,     0,   199,
     200,     0,     0,     0,     0,   201,   202,     0,   203,     0,
       0,     0,   204,     0,   205,   206,   207,   208,   209,     0,
       0,     0,   210,     0,     0,   211,   212,   213,     0,     0,
       0,   214,     0,   215,   216,     0,   217,   218,   219,     0,
       0,   220,   221,     0,   222,   223,   224,   225,   226,   227,
       0,     0,   228,   229,   230,   231,   232,     0,     0,   233,
     234,     0,   235,   236,   237,     0,     0,   238,     0,     0,
       0,   239,   240,     0,   241,     0,   242,     0,   243,   244,
     245,   246,     0,   247,     0,   248,     0,     0,     0,   249,
     250,     0,   251,     0,     0,   252,   253,     0,     0,     0,
     254,   255,   256,   257,     0,     0,   258,   259,   260,     0,
       0,   261,     0,     0,     0,     0,   262,   263,     0,     0,
       0,   264,     0,     0,     0,   265,   266,     0,   267,   268,
       0,     0,     0,   269,     0,     0,   270,   271,     0,     0,
     272,     0,     0,   273,   274,     0,     0,     0,     0,     0,
     275,   276,     0,   277,     0,   278,     0,   279,   280,     0,
       0,     0,     0,     0,     0,     0,   281,     0,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,     0,   299,   300,   301,     0,
     302,   303,   304,   305,     0,   306,   307,     0,     0,     0,
       0,   308,   309,   310,   311,   312,   313,     0,     0,   314,
     315,     0,   316,     0,   317,     0,   318,   319,   320,   321,
     322,   323,   324,   325,   326,     0,     0,   327,   328,     0,
       0,   329,   330,   331,   332,     0,     0,     0,   333,   334,
       0,     0,     0,   335,     0,   336,   337,   338,     0,   339,
     340,   341,     0,   342,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   343,   344,   345,     0,   346,   347,     0,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
       0,     0,   358,   359,   360,     0,   361,     0,   362,   363,
     364,   365,   366,     0,   367,   368,   369,     0,     0,   370,
       0,     0,     0,   371,   372,   373,   374,   375,     0,     0,
     376,   377,   378,   379,   380,     0,   381,   382,     0,   383,
     384,   385,     0,     0,   386,     0,   387,     0,   388,   389,
       0,   390,   391,   392,     0,   393,     0,     0,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,     0,
     405,   406,     0,     0,     0,   407,   408,   409,   410,     0,
       0,     0,   411,     0,     0,     0,   412,     0,   413,   414,
     415,   416,     0,   417,   418,   419,   420,   421,     0,     0,
       0,     0,     0,   422,   423,   424,     0,   425,   426,     0,
     427,     0,     0,   428,     0,     0,   429,   430,   431,   432,
     433,   434,     0,     0,   435,   436,     0,   437,   438,   439,
     440,   441,   442,     0,     0,   443,   444,   445,   446,     0,
     447,   448,     0,     0,   449,   450,   451,   452,     0,     0,
     453,   454,     0,   455,   456,   457,   458,     0,     0,     0,
       0,     0,   459,   460,     0,     0,     0,   461,   462,   463,
     464,     0,   465,   466,     0,   467,   468,     0,   469,   470,
       0,     0,   471,     0,     0,   472,     0,   473,     0,   474,
     475,     0,     0,     0,     0,     0,     0,   476,     0,     0,
     477,     0,     0,     0,   478,   479,   480,   481,   482,     0,
       0,     0,     0,     0,     0,   483,   484,     0,   485,   486,
     487,     0,   137,   488,   138,   139,   140,   141,   142,  3218,
       0,   143,     0,     0,     0,   144,     0,     0,   145,     0,
     146,   147,   148,   149,   150,   151,     0,   152,     0,     0,
       0,   153,     0,     0,     0,   154,     0,     0,   155,   156,
     157,     0,   158,     0,   159,   160,     0,     0,   161,     0,
       0,   162,   163,     0,   164,   165,     0,   166,     0,   167,
     168,   169,   170,   171,   172,     0,   173,   174,     0,   175,
     176,   177,   178,   179,   180,   181,   182,   183,     0,   184,
     185,     0,   186,   187,   188,   189,   190,     0,     0,     0,
     191,     0,     0,   192,     0,   193,     0,     0,   194,     0,
       0,     0,   195,   196,   197,     0,     0,   198,     0,     0,
       0,     0,   199,   200,     0,     0,     0,     0,   201,   202,
       0,   203,     0,     0,     0,   204,     0,   205,   206,   207,
     208,   209,     0,     0,     0,   210,     0,     0,   211,   212,
     213,     0,     0,     0,   214,     0,   215,   216,     0,   217,
     218,   219,     0,     0,   220,   221,     0,   222,   223,   224,
     225,   226,   227,     0,     0,   228,   229,   230,   231,   232,
       0,     0,   233,   234,     0,   235,   236,   237,     0,     0,
     238,     0,     0,     0,   239,   240,     0,   241,     0,   242,
       0,   243,   244,   245,   246,     0,   247,     0,   248,     0,
       0,     0,   249,   250,     0,   251,     0,     0,   252,   253,
       0,     0,     0,   254,   255,   256,   257,     0,     0,   258,
     259,   260,     0,     0,   261,     0,     0,     0,     0,   262,
     263,     0,     0,     0,   264,     0,     0,     0,   265,   266,
       0,   267,   268,     0,     0,     0,   269,     0,     0,   270,
     271,     0,     0,   272,     0,     0,   273,   274,     0,     0,
       0,     0,     0,   275,   276,     0,   277,     0,   278,     0,
     279,   280,     0,     0,     0,     0,     0,     0,     0,   281,
       0,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,     0,   299,
     300,   301,     0,   302,   303,   304,   305,     0,   306,   307,
       0,     0,     0,     0,   308,   309,   310,   311,   312,   313,
       0,     0,   314,   315,     0,   316,     0,   317,     0,   318,
     319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     327,   328,     0,     0,   329,   330,   331,   332,     0,     0,
       0,   333,   334,     0,     0,     0,   335,     0,   336,   337,
     338,     0,   339,   340,   341,     0,   342,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   343,   344,   345,     0,
     346,   347,     0,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,     0,     0,   358,   359,   360,     0,   361,
       0,   362,   363,   364,   365,   366,     0,   367,   368,   369,
       0,     0,   370,     0,     0,     0,   371,   372,   373,   374,
     375,     0,     0,   376,   377,   378,   379,   380,     0,   381,
     382,     0,   383,   384,   385,     0,     0,   386,     0,   387,
       0,   388,   389,     0,   390,   391,   392,     0,   393,     0,
       0,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,     0,   405,   406,     0,     0,     0,   407,   408,
     409,   410,     0,     0,     0,   411,     0,     0,     0,   412,
       0,   413,   414,   415,   416,     0,   417,   418,   419,   420,
     421,     0,     0,     0,     0,     0,   422,   423,   424,     0,
     425,   426,     0,   427,     0,     0,   428,     0,     0,   429,
     430,   431,   432,   433,   434,     0,     0,   435,   436,     0,
     437,   438,   439,   440,   441,   442,     0,     0,   443,   444,
     445,   446,     0,   447,   448,     0,     0,   449,   450,   451,
     452,     0,     0,   453,   454,     0,   455,   456,   457,   458,
       0,     0,     0,     0,     0,   459,   460,     0,     0,     0,
     461,   462,   463,   464,     0,   465,   466,     0,   467,   468,
       0,   469,   470,     0,     0,   471,     0,     0,   472,     0,
     473,     0,   474,   475,     0,     0,     0,     0,     0,     0,
     476,     0,     0,   477,     0,     0,     0,   478,   479,   480,
     481,   482,     0,     0,     0,     0,     0,     0,   483,   484,
       0,   485,   486,   487,     0,   137,   488,   138,   139,   140,
     141,   142,  3552,     0,   143,     0,     0,     0,   144,     0,
       0,   145,     0,   146,   147,   148,   149,   150,   151,     0,
     152,     0,     0,     0,   153,     0,     0,     0,   154,     0,
       0,   155,   156,   157,     0,   158,     0,   159,   160,     0,
       0,   161,     0,     0,   162,   163,     0,   164,   165,     0,
     166,     0,   167,   168,   169,   170,   171,   172,     0,   173,
     174,     0,   175,   176,   177,   178,   179,   180,   181,   182,
     183,     0,   184,   185,     0,   186,   187,   188,   189,   190,
       0,     0,     0,   191,     0,     0,   192,     0,   193,     0,
       0,   194,     0,     0,     0,   195,   196,   197,     0,     0,
     198,     0,     0,     0,     0,   199,   200,  2499,     0,     0,
       0,   201,   202,     0,   203,     0,     0,     0,   204,     0,
     205,   206,   207,   208,   209,     0,     0,     0,   210,     0,
       0,   211,   212,   213,     0,     0,     0,   214,     0,   215,
     216,     0,   217,   218,   219,     0,     0,   220,   221,     0,
     222,   223,   224,   225,   226,   227,     0,     0,   228,   229,
     230,   231,   232,     0,     0,   233,   234,     0,   235,   236,
     237,  2500,     0,   238,     0,     0,     0,   239,   240,     0,
     241,     0,   242,     0,   243,   244,   245,   246,     0,   247,
       0,   248,     0,     0,     0,   249,   250,     0,   251,  2501,
       0,   252,   253,     0,     0,     0,   254,   255,   256,   257,
       0,     0,   258,   259,   260,     0,     0,   261,     0,     0,
       0,     0,   262,   263,     0,     0,     0,   264,     0,     0,
       0,   265,   266,     0,   267,   268,     0,     0,     0,   269,
       0,     0,   270,   271,     0,     0,   272,     0,     0,   273,
     274,     0,     0,     0,     0,     0,   275,   276,     0,   277,
       0,   278,     0,   279,   280,     0,     0,  2502,     0,     0,
       0,     0,   281,     0,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,     0,   299,   300,   301,     0,   302,   303,   304,   305,
       0,   306,   307,     0,     0,     0,     0,   308,   309,   310,
     311,   312,   313,     0,     0,   314,   315,     0,   316,     0,
     317,     0,   318,   319,   320,   321,   322,   323,   324,   325,
     326,     0,     0,   327,   328,     0,     0,   329,   330,   331,
     332,  1033,  1034,     0,   333,   334,     0,     0,  2503,   335,
       0,   336,   337,   338,     0,   339,   340,   341,     0,   342,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   343,
     344,   345,     0,   346,   347,     0,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,     0,     0,   358,   359,
     360,     0,   361,     0,   362,   363,   364,   365,   366,     0,
     367,   368,   369,     0,     0,   370,     0,     0,     0,   371,
     372,   373,   374,   375,     0,     0,   376,   377,   378,   379,
     380,     0,   381,   382,     0,   383,   384,   385,     0,     0,
     386,     0,   387,     0,   388,   389,     0,   390,   391,   392,
       0,   393,     0,     0,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,     0,   405,   406,     0,     0,
       0,   407,   408,   409,   410,     0,     0,     0,   411,     0,
       0,     0,   412,     0,   413,   414,   415,   416,     0,   417,
     418,   419,   420,   421,     0,     0,  4479,   563,  4480,   422,
     423,   424,     0,   425,   426,     0,   427,     0,     0,   428,
       0,     0,   429,   430,   431,   432,   433,   434,     0,     0,
     435,   436,     0,   437,   438,   439,   440,   441,   442,     0,
       0,   443,   444,   445,   446,     0,   447,   448,     0,     0,
     449,   450,   451,   452,     0,     0,   453,   454,     0,   455,
     456,   457,   458,     0,     0,     0,     0,     0,   459,   460,
       0,     0,     0,   461,   462,   463,   464,  2504,   465,   466,
       0,   467,   468,     0,   469,   470,     0,     0,   471,     0,
       0,   472,     0,   473,     0,   474,   475,     0,     0,     0,
       0,     0,     0,   476,     0,     0,   477,     0,     0,     0,
     478,   479,   480,   481,   482,     0,     0,     0,     0,     0,
       0,   483,   484,     0,   485,   486,   487,     0,   137,   488,
     138,   139,   140,   141,   142,     0,     0,   143,     0,     0,
       0,   144,     0,     0,   145,     0,   146,   147,   148,   149,
     150,   151,     0,   152,     0,     0,  1361,   153,     0,     0,
       0,   154,     0,     0,   155,   156,   157,     0,   158,     0,
     159,   160,     0,     0,   161,     0,     0,   162,   163,     0,
     164,   165,     0,   166,     0,   167,   168,   169,   170,   171,
     172,     0,   173,   174,     0,   175,   176,   177,   178,   179,
     180,   181,   182,   183,     0,   184,   185,     0,   186,   187,
     188,   189,   190,     0,     0,     0,   191,     0,     0,   192,
       0,   193,     0,     0,   194,     0,     0,     0,   195,   196,
     197,     0,     0,   198,     0,     0,     0,     0,   199,   200,
       0,     0,     0,  1362,   201,   202,     0,   203,     0,     0,
       0,   204,     0,   205,   206,   207,   208,   209,     0,     0,
       0,   210,     0,     0,   211,   212,   213,     0,     0,     0,
     214,     0,   215,   216,     0,   217,   218,   219,  1363,     0,
     220,   221,     0,   222,   223,   224,   225,   226,   227,     0,
       0,   228,   229,   230,   231,   232,     0,     0,   233,   234,
       0,   235,   236,   237,     0,     0,   238,     0,     0,     0,
     239,   240,     0,   241,     0,   242,     0,   243,   244,   245,
     246,     0,   247,     0,   248,     0,     0,     0,   249,   250,
       0,   251,     0,     0,   252,   253,     0,     0,     0,   254,
     255,   256,   257,     0,     0,   258,   259,   260,     0,     0,
     261,     0,     0,     0,     0,   262,   263,     0,     0,     0,
     264,     0,     0,     0,   265,   266,     0,   267,   268,     0,
       0,     0,   269,     0,     0,   270,   271,     0,     0,   272,
       0,     0,   273,   274,   614,     0,     0,     0,     0,   275,
     276,     0,   277,     0,   278,     0,   279,   280,     0,     0,
       0,     0,     0,     0,     0,   281,     0,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,     0,   299,   300,   301,     0,   302,
     303,   304,   305,     0,   306,   307,     0,     0,     0,     0,
     308,   309,   310,   311,   312,   313,     0,     0,   314,   315,
       0,   316,     0,   317,     0,   318,   319,   320,   321,   322,
     323,   324,   325,   326,     0,     0,   327,   328,     0,     0,
     329,   330,   331,   332,     0,     0,     0,   333,   334,     0,
       0,     0,   335,     0,   336,   337,   338,     0,   339,   340,
     341,     0,   342,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   343,   344,   345,     0,   346,   347,     0,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,     0,
       0,   358,   359,   360,     0,   361,     0,   362,   363,   364,
     365,   366,     0,   367,   368,   369,     0,     0,   370,     0,
       0,     0,   371,   372,   373,   374,   375,     0,     0,   376,
     377,   378,   379,   380,     0,   381,   382,     0,   383,   384,
     385,     0,     0,   386,     0,   387,     0,   388,   389,     0,
     390,   391,   392,     0,   393,     0,     0,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,     0,   405,
     406,     0,     0,     0,   407,   408,   409,   410,     0,     0,
    1364,   411,     0,     0,     0,   412,     0,   413,   414,   415,
     416,     0,   417,   418,   419,   420,   421,     0,     0,     0,
       0,     0,   422,   423,   424,     0,   425,   426,     0,   427,
       0,     0,   428,     0,     0,   429,   430,   431,   432,   433,
     434,     0,     0,   435,   436,     0,   437,   438,   439,   440,
     441,   442,     0,     0,   443,   444,   445,   446,     0,   447,
     448,     0,     0,   449,   450,   451,   452,     0,   134,   453,
     454,     0,   455,   456,   457,   458,     0,     0,     0,     0,
       0,   459,   460,     0,     0,     0,   461,   462,   463,   464,
       0,   465,   466,     0,   467,   468,     0,   469,   470,     0,
       0,   471,     0,     0,   472,     0,   473,     0,   474,   475,
       0,     0,     0,     0,     0,     0,   476,     0,     0,   477,
       0,     0,     0,   478,   479,   480,   481,   482,     0,     0,
       0,     0,     0,     0,   483,   484,     0,   485,   486,   487,
       0,   137,   488,   138,   139,   140,   141,   142,     0,     0,
     143,     0,     0,     0,   144,     0,     0,   145,     0,   146,
     147,   148,   149,   150,   151,     0,   152,     0,     0,  1374,
     153,     0,     0,     0,   154,     0,     0,   155,   156,   157,
       0,   158,     0,   159,   160,     0,     0,   161,     0,     0,
     162,   163,     0,   164,   165,     0,   166,     0,   167,   168,
     169,   170,   171,   172,     0,   173,   174,     0,   175,   176,
     177,   178,   179,   180,   181,   182,   183,     0,   184,   185,
       0,   186,   187,   188,   189,   190,     0,     0,     0,   191,
       0,     0,   192,     0,   193,     0,     0,   194,     0,     0,
       0,   195,   196,   197,     0,     0,   198,     0,     0,     0,
       0,   199,   200,     0,     0,     0,  1375,   201,   202,     0,
     203,     0,     0,     0,   204,     0,   205,   206,   207,   208,
     209,     0,     0,     0,   210,     0,     0,   211,   212,   213,
       0,     0,     0,   214,     0,   215,   216,     0,   217,   218,
     219,     0,     0,   220,   221,     0,   222,   223,   224,   225,
     226,   227,     0,     0,   228,   229,   230,   231,   232,     0,
       0,   233,   234,     0,   235,   236,   237,     0,     0,   238,
       0,     0,     0,   239,   240,     0,   241,     0,   242,     0,
     243,   244,   245,   246,     0,   247,     0,   248,     0,     0,
       0,   249,   250,     0,   251,     0,     0,   252,   253,     0,
       0,     0,   254,   255,   256,   257,     0,     0,   258,   259,
     260,     0,     0,   261,     0,     0,     0,     0,   262,   263,
       0,     0,     0,   264,     0,     0,     0,   265,   266,     0,
     267,   268,     0,     0,     0,   269,     0,     0,   270,   271,
       0,     0,   272,     0,     0,   273,   274,   614,     0,     0,
       0,     0,   275,   276,     0,   277,     0,   278,     0,   279,
     280,     0,     0,     0,     0,     0,     0,     0,   281,     0,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,     0,   299,   300,
     301,     0,   302,   303,   304,   305,     0,   306,   307,     0,
       0,     0,     0,   308,   309,   310,   311,   312,   313,     0,
       0,   314,   315,     0,   316,     0,   317,     0,   318,   319,
     320,   321,   322,   323,   324,   325,   326,     0,     0,   327,
     328,     0,     0,   329,   330,   331,   332,     0,     0,     0,
     333,   334,     0,     0,     0,   335,     0,   336,   337,   338,
       0,   339,   340,   341,     0,   342,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   343,   344,   345,     0,   346,
     347,     0,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,     0,     0,   358,   359,   360,     0,   361,     0,
     362,   363,   364,   365,   366,     0,   367,   368,   369,     0,
       0,   370,     0,     0,     0,   371,   372,   373,   374,   375,
       0,     0,   376,   377,   378,   379,   380,     0,   381,   382,
       0,   383,   384,   385,     0,     0,   386,     0,   387,     0,
     388,   389,     0,   390,   391,   392,     0,   393,     0,     0,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,     0,   405,   406,     0,     0,     0,   407,   408,   409,
     410,     0,     0,     0,   411,     0,     0,     0,   412,     0,
     413,   414,   415,   416,     0,   417,   418,   419,   420,   421,
       0,     0,     0,     0,     0,   422,   423,   424,     0,   425,
     426,     0,   427,     0,     0,   428,     0,     0,   429,   430,
     431,   432,   433,   434,     0,     0,   435,   436,     0,   437,
     438,   439,   440,   441,   442,     0,     0,   443,   444,   445,
     446,     0,   447,   448,     0,     0,   449,   450,   451,   452,
       0,   134,   453,   454,     0,   455,   456,   457,   458,     0,
       0,     0,     0,     0,   459,   460,     0,     0,     0,   461,
     462,   463,   464,     0,   465,   466,     0,   467,   468,     0,
     469,   470,     0,     0,   471,     0,     0,   472,     0,   473,
       0,   474,   475,     0,     0,     0,     0,     0,     0,   476,
       0,     0,   477,     0,     0,     0,   478,   479,   480,   481,
     482,     0,     0,     0,     0,     0,     0,   483,   484,     0,
     485,   486,   487,     0,   137,   488,   138,   139,   140,   141,
     142,     0,     0,   143,     0,     0,     0,   144,     0,     0,
     145,     0,   146,   147,   148,   149,   150,   151,     0,   152,
       0,     0,     0,   153,     0,     0,     0,   154,     0,     0,
     155,   156,   157,     0,   158,     0,   159,   160,     0,     0,
     161,     0,     0,   162,   163,     0,   164,   165,     0,   166,
       0,   167,   168,   169,   170,   171,   172,     0,   173,   174,
       0,   175,   176,   177,   178,   179,   180,   181,   182,   183,
       0,   184,   185,     0,   186,   187,   188,   189,   190,     0,
       0,     0,   191,     0,     0,   192,     0,   193,     0,     0,
     194,     0,     0,     0,   195,   196,   197,     0,     0,   198,
       0,     0,     0,     0,   199,   200,     0,     0,     0,     0,
     201,   202,     0,   203,     0,     0,     0,   204,     0,   205,
     206,   207,   208,   209,     0,     0,     0,   210,     0,     0,
     211,   212,   213,     0,     0,     0,   214,     0,   215,   216,
       0,   217,   218,   219,     0,     0,   220,   221,     0,   222,
     223,   224,   225,   226,   227,     0,     0,   228,   229,   230,
     231,   232,     0,     0,   233,   234,     0,   235,   236,   237,
       0,     0,   238,     0,     0,     0,   239,   240,     0,   241,
       0,   242,     0,   243,   244,   245,   246,     0,   247,     0,
     248,     0,     0,     0,   249,   250,     0,   251,     0,     0,
     252,   253,     0,     0,     0,   254,   255,   256,   257,     0,
       0,   258,   259,   260,     0,     0,   261,     0,     0,     0,
       0,   262,   263,     0,     0,     0,   264,     0,     0,     0,
     265,   266,     0,   267,   268,     0,     0,     0,   269,     0,
       0,   270,   271,     0,     0,   272,     0,     0,   273,   274,
       0,     0,     0,     0,     0,   275,   276,     0,   277,     0,
     278,     0,   279,   280,     0,     0,  1899,     0,     0,     0,
       0,   281,     0,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
       0,   299,   300,   301,     0,   302,   303,   304,   305,     0,
     306,   307,     0,     0,     0,     0,   308,   309,   310,   311,
     312,   313,     0,     0,   314,   315,     0,   316,     0,   317,
       0,   318,   319,   320,   321,   322,   323,   324,   325,   326,
       0,     0,   327,   328,     0,     0,   329,   330,   331,   332,
       0,     0,     0,   333,   334,     0,     0,  1900,   335,     0,
     336,   337,   338,     0,   339,   340,   341,     0,   342,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   343,   344,
     345,   722,   346,   347,     0,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,     0,     0,   358,   359,   360,
       0,   361,     0,   362,   363,   364,   365,   366,     0,   367,
     368,   369,     0,     0,   370,     0,     0,     0,   371,   372,
     373,   374,   375,     0,     0,   376,   377,   378,   379,   380,
       0,   381,   382,     0,   383,   384,   385,     0,     0,   386,
       0,   387,     0,   388,   389,     0,   390,   391,   392,     0,
     393,     0,     0,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,     0,   405,   406,     0,     0,     0,
     407,   408,   409,   410,     0,     0,     0,   411,     0,     0,
       0,   412,     0,   413,   414,   415,   416,     0,   417,   418,
     419,   420,   421,     0,     0,     0,     0,     0,   422,   423,
     424,     0,   425,   426,     0,   427,     0,     0,   428,     0,
       0,   429,   430,   431,   432,   433,   434,     0,     0,   435,
     436,     0,   437,   438,   439,   440,   441,   442,     0,     0,
     443,   444,   445,   446,     0,   447,   448,     0,     0,   449,
     450,   451,   452,     0,     0,   453,   454,     0,   455,   456,
     457,   458,     0,     0,     0,     0,     0,   459,   460,     0,
       0,     0,   461,   462,   463,   464,  1901,   465,   466,     0,
     467,   468,     0,   469,   470,     0,     0,   471,     0,     0,
     472,     0,   473,     0,   474,   475,     0,     0,     0,     0,
       0,     0,   476,     0,     0,   477,     0,     0,     0,   478,
     479,   480,   481,   482,     0,     0,     0,     0,     0,     0,
     483,   484,     0,   485,   486,   487,     0,   137,   488,   138,
     139,   140,   141,   142,     0,     0,   143,     0,     0,     0,
     144,     0,     0,   145,     0,   146,   147,   148,   149,   150,
     151,     0,   152,     0,     0,  1361,   153,     0,     0,     0,
     154,     0,     0,   155,   156,   157,     0,   158,     0,   159,
     160,     0,     0,   161,     0,     0,   162,   163,     0,   164,
     165,     0,   166,     0,   167,   168,   169,   170,   171,   172,
       0,   173,   174,     0,   175,   176,   177,   178,   179,   180,
     181,   182,   183,     0,   184,   185,     0,   186,   187,   188,
     189,   190,     0,     0,     0,   191,     0,     0,   192,     0,
     193,     0,     0,   194,     0,     0,     0,   195,   196,   197,
       0,     0,   198,     0,     0,     0,     0,   199,   200,     0,
       0,     0,  1362,   201,   202,     0,   203,     0,     0,     0,
     204,     0,   205,   206,   207,   208,   209,     0,     0,     0,
     210,     0,     0,   211,   212,   213,     0,     0,     0,   214,
       0,   215,   216,     0,   217,   218,   219,     0,     0,   220,
     221,     0,   222,   223,   224,   225,   226,   227,     0,     0,
     228,   229,   230,   231,   232,     0,     0,   233,   234,     0,
     235,   236,   237,     0,     0,   238,     0,     0,     0,   239,
     240,     0,   241,     0,   242,     0,   243,   244,   245,   246,
       0,   247,     0,   248,     0,     0,     0,   249,   250,     0,
     251,     0,     0,   252,   253,     0,     0,     0,   254,   255,
     256,   257,     0,     0,   258,   259,   260,     0,     0,   261,
       0,     0,     0,     0,   262,   263,     0,     0,     0,   264,
       0,     0,     0,   265,   266,     0,   267,   268,     0,     0,
       0,   269,     0,     0,   270,   271,     0,     0,   272,     0,
       0,   273,   274,   614,     0,     0,     0,     0,   275,   276,
       0,   277,     0,   278,     0,   279,   280,     0,     0,     0,
       0,     0,     0,     0,   281,     0,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,     0,   299,   300,   301,     0,   302,   303,
     304,   305,     0,   306,   307,     0,     0,     0,     0,   308,
     309,   310,   311,   312,   313,     0,     0,   314,   315,     0,
     316,     0,   317,     0,   318,   319,   320,   321,   322,   323,
     324,   325,   326,     0,     0,   327,   328,     0,     0,   329,
     330,   331,   332,     0,     0,     0,   333,   334,     0,     0,
       0,   335,     0,   336,   337,   338,     0,   339,   340,   341,
       0,   342,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   343,   344,   345,     0,   346,   347,     0,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,     0,     0,
     358,   359,   360,     0,   361,     0,   362,   363,   364,   365,
     366,     0,   367,   368,   369,     0,     0,   370,     0,     0,
       0,   371,   372,   373,   374,   375,     0,     0,   376,   377,
     378,   379,   380,     0,   381,   382,     0,   383,   384,   385,
       0,     0,   386,     0,   387,     0,   388,   389,     0,   390,
     391,   392,     0,   393,     0,     0,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,     0,   405,   406,
       0,     0,     0,   407,   408,   409,   410,     0,     0,     0,
     411,     0,     0,     0,   412,     0,   413,   414,   415,   416,
       0,   417,   418,   419,   420,   421,     0,     0,     0,     0,
       0,   422,   423,   424,     0,   425,   426,     0,   427,     0,
       0,   428,     0,     0,   429,   430,   431,   432,   433,   434,
       0,     0,   435,   436,     0,   437,   438,   439,   440,   441,
     442,     0,     0,   443,   444,   445,   446,     0,   447,   448,
       0,     0,   449,   450,   451,   452,     0,   134,   453,   454,
       0,   455,   456,   457,   458,     0,     0,     0,     0,     0,
     459,   460,     0,     0,     0,   461,   462,   463,   464,     0,
     465,   466,     0,   467,   468,     0,   469,   470,     0,     0,
     471,     0,     0,   472,     0,   473,     0,   474,   475,     0,
       0,     0,     0,     0,     0,   476,     0,     0,   477,     0,
       0,     0,   478,   479,   480,   481,   482,     0,     0,     0,
       0,     0,     0,   483,   484,     0,   485,   486,   487,     0,
     137,   488,   138,   139,   140,   141,   142,     0,     0,   143,
       0,     0,     0,   144,     0,     0,   145,     0,   146,   147,
     148,   149,   150,   151,     0,   152,     0,     0,     0,   153,
       0,     0,     0,   154,     0,     0,   155,   156,   157,     0,
     158,     0,   159,   160,     0,     0,   161,     0,     0,   162,
     163,     0,   164,   165,     0,   166,     0,   167,   168,   169,
     170,   171,   172,     0,   173,   174,     0,   175,   176,   177,
     178,   179,   180,   181,   182,   183,     0,   184,   185,     0,
     186,   187,   188,   189,   190,     0,     0,     0,   191,     0,
       0,   192,     0,   193,   990,     0,   194,     0,     0,     0,
     195,   196,   197,     0,     0,   198,     0,     0,     0,     0,
     199,   200,     0,     0,     0,     0,   201,   202,     0,   203,
       0,     0,     0,   204,     0,   205,   206,   207,   208,   209,
       0,     0,     0,   210,     0,     0,   211,   212,   213,     0,
       0,     0,   214,     0,   215,   216,     0,   217,   218,   219,
       0,     0,   220,   221,     0,   222,   223,   224,   225,   226,
     227,     0,     0,   228,   229,   230,   231,   232,     0,     0,
     233,   234,     0,   235,   236,   237,     0,     0,   238,     0,
       0,     0,   239,   240,     0,   241,     0,   242,     0,   243,
     244,   245,   246,     0,   247,     0,   248,     0,     0,     0,
     249,   250,     0,   251,     0,     0,   252,   253,     0,     0,
       0,   254,   255,   256,   257,     0,     0,   258,   259,   260,
       0,     0,   261,     0,     0,     0,     0,   262,   263,     0,
       0,     0,   264,     0,     0,     0,   265,   266,     0,   267,
     268,     0,     0,     0,   269,     0,     0,   270,   271,     0,
       0,   272,     0,     0,   273,   274,   614,     0,     0,     0,
       0,   275,   276,     0,   277,     0,   278,     0,   279,   280,
       0,     0,     0,     0,     0,     0,     0,   281,     0,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,     0,   299,   300,   301,
       0,   302,   303,   304,   305,     0,   306,   307,     0,     0,
       0,     0,   308,   309,   310,   311,   312,   313,     0,     0,
     314,   315,     0,   316,     0,   317,     0,   318,   319,   320,
     321,   322,   323,   324,   325,   326,     0,     0,   327,   328,
       0,     0,   329,   330,   331,   332,     0,     0,     0,   333,
     334,     0,     0,     0,   335,     0,   336,   337,   338,     0,
     339,   340,   341,     0,   342,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   343,   344,   345,     0,   346,   347,
       0,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,     0,     0,   358,   359,   360,     0,   361,     0,   362,
     363,   364,   365,   366,     0,   367,   368,   369,     0,     0,
     370,     0,     0,     0,   371,   372,   373,   374,   375,     0,
       0,   376,   377,   378,   379,   380,     0,   381,   382,     0,
     383,   384,   385,     0,     0,   386,     0,   387,     0,   388,
     389,     0,   390,   391,   392,     0,   393,     0,     0,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
       0,   405,   406,     0,     0,     0,   407,   408,   409,   410,
       0,     0,     0,   411,     0,     0,     0,   412,     0,   413,
     414,   415,   416,     0,   417,   418,   419,   420,   421,     0,
       0,     0,     0,     0,   422,   423,   424,     0,   425,   426,
       0,   427,     0,     0,   428,     0,     0,   429,   430,   431,
     432,   433,   434,     0,     0,   435,   436,     0,   437,   438,
     439,   440,   441,   442,     0,     0,   443,   444,   445,   446,
       0,   447,   448,     0,     0,   449,   450,   451,   452,     0,
     134,   453,   454,     0,   455,   456,   457,   458,     0,     0,
       0,     0,     0,   459,   460,     0,     0,     0,   461,   462,
     463,   464,     0,   465,   466,     0,   467,   468,     0,   469,
     470,     0,     0,   471,     0,     0,   472,     0,   473,     0,
     474,   475,     0,     0,     0,     0,     0,     0,   476,     0,
       0,   477,     0,     0,     0,   478,   479,   480,   481,   482,
       0,     0,     0,     0,     0,     0,   483,   484,     0,   485,
     486,   487,     0,   137,   488,   138,   139,   140,   141,   142,
    1396,     0,   143,     0,     0,     0,   144,     0,     0,   145,
       0,   146,   147,   148,   149,   150,   151,     0,   152,     0,
       0,     0,   153,     0,     0,     0,   154,     0,     0,   155,
     156,   157,     0,   158,     0,   159,   160,     0,     0,   161,
       0,     0,   162,   163,     0,   164,   165,     0,   166,     0,
     167,   168,   169,   170,   171,   172,     0,   173,   174,     0,
     175,   176,   177,   178,   179,   180,   181,   182,   183,     0,
     184,   185,     0,   186,   187,   188,   189,   190,     0,     0,
       0,   191,     0,     0,   192,     0,   193,     0,     0,   194,
       0,     0,     0,   195,   196,   197,     0,     0,   198,     0,
       0,     0,     0,   199,   200,     0,     0,     0,     0,   201,
     202,     0,   203,     0,     0,     0,   204,     0,   205,   206,
     207,   208,   209,     0,     0,     0,   210,     0,     0,   211,
     212,   213,     0,     0,     0,   214,     0,   215,   216,     0,
     217,   218,   219,     0,     0,   220,   221,     0,   222,   223,
     224,   225,   226,   227,     0,     0,   228,   229,   230,   231,
     232,     0,     0,   233,   234,     0,   235,   236,   237,     0,
       0,   238,     0,     0,     0,   239,   240,     0,   241,     0,
     242,     0,   243,   244,   245,   246,     0,   247,     0,   248,
       0,     0,     0,   249,   250,     0,   251,     0,     0,   252,
     253,     0,     0,     0,   254,   255,   256,   257,     0,     0,
     258,   259,   260,     0,     0,   261,     0,     0,     0,     0,
     262,   263,     0,     0,     0,   264,     0,     0,     0,   265,
     266,     0,   267,   268,     0,     0,     0,   269,     0,     0,
     270,   271,     0,     0,   272,     0,     0,   273,   274,   614,
       0,     0,     0,     0,   275,   276,     0,   277,     0,   278,
       0,   279,   280,     0,     0,     0,     0,     0,     0,     0,
     281,     0,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,     0,
     299,   300,   301,     0,   302,   303,   304,   305,     0,   306,
     307,     0,     0,     0,     0,   308,   309,   310,   311,   312,
     313,     0,     0,   314,   315,     0,   316,     0,   317,     0,
     318,   319,   320,   321,   322,   323,   324,   325,   326,     0,
       0,   327,   328,     0,     0,   329,   330,   331,   332,     0,
       0,     0,   333,   334,     0,     0,     0,   335,     0,   336,
     337,   338,     0,   339,   340,   341,     0,   342,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   343,   344,   345,
       0,   346,   347,     0,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,     0,     0,   358,   359,   360,     0,
     361,     0,   362,   363,   364,   365,   366,     0,   367,   368,
     369,     0,     0,   370,     0,     0,     0,   371,   372,   373,
     374,   375,     0,     0,   376,   377,   378,   379,   380,     0,
     381,   382,     0,   383,   384,   385,     0,     0,   386,     0,
     387,     0,   388,   389,     0,   390,   391,   392,     0,   393,
       0,     0,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,     0,   405,   406,     0,     0,     0,   407,
     408,   409,   410,     0,     0,     0,   411,     0,     0,     0,
     412,     0,   413,   414,   415,   416,     0,   417,   418,   419,
     420,   421,     0,     0,     0,     0,     0,   422,   423,   424,
       0,   425,   426,     0,   427,     0,     0,   428,     0,     0,
     429,   430,   431,   432,   433,   434,     0,     0,   435,   436,
       0,   437,   438,   439,   440,   441,   442,     0,     0,   443,
     444,   445,   446,     0,   447,   448,     0,     0,   449,   450,
     451,   452,     0,   134,   453,   454,     0,   455,   456,   457,
     458,     0,     0,     0,     0,     0,   459,   460,     0,     0,
       0,   461,   462,   463,   464,     0,   465,   466,     0,   467,
     468,     0,   469,   470,     0,     0,   471,     0,     0,   472,
       0,   473,     0,   474,   475,     0,     0,     0,     0,     0,
       0,   476,     0,     0,   477,     0,     0,     0,   478,   479,
     480,   481,   482,     0,     0,     0,     0,     0,     0,   483,
     484,     0,   485,   486,   487,     0,   137,   488,   138,   139,
     140,   141,   142,     0,     0,   143,     0,     0,     0,   144,
       0,     0,   145,     0,   146,   147,   148,   149,   150,   151,
       0,   152,     0,     0,     0,   153,   967,     0,     0,   154,
       0,     0,   155,   156,   157,     0,   158,     0,   159,   160,
       0,     0,   161,     0,     0,   162,   163,     0,   164,   165,
       0,   166,     0,   167,   168,   169,   170,   171,   172,     0,
     173,   174,     0,   175,   176,   177,   178,   179,   180,   181,
     182,   183,     0,   184,   185,     0,   186,   187,   188,   189,
     190,     0,     0,     0,   191,     0,     0,   192,     0,   193,
       0,     0,   194,     0,     0,     0,   195,   196,   197,     0,
       0,   198,     0,     0,     0,     0,   199,   200,     0,     0,
       0,     0,   201,   202,     0,   203,     0,     0,     0,   204,
       0,   205,   206,   207,   208,   209,     0,     0,     0,   210,
       0,     0,   211,   212,   213,     0,     0,     0,   214,     0,
     215,   216,     0,   217,   218,   219,     0,     0,   220,   221,
       0,   222,   223,   224,   225,   226,   227,     0,     0,   228,
     229,   230,   231,   232,     0,     0,   233,   234,     0,   235,
     236,   237,     0,     0,   238,     0,     0,     0,   239,   240,
       0,   241,     0,   242,     0,   243,   244,   245,   246,     0,
     247,     0,   248,     0,     0,     0,   249,   250,     0,   251,
     968,     0,   252,   253,     0,     0,     0,   254,   255,   256,
     257,     0,     0,   258,   259,   260,     0,     0,   261,     0,
       0,     0,     0,   262,   263,     0,     0,     0,   264,     0,
       0,     0,   265,   266,     0,   267,   268,     0,     0,     0,
     269,     0,     0,   270,   271,     0,     0,   272,     0,     0,
     273,   274,     0,     0,     0,     0,     0,   275,   276,     0,
     277,     0,   278,     0,   279,   280,     0,     0,     0,     0,
       0,     0,     0,   281,     0,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,     0,   299,   300,   301,     0,   302,   303,   304,
     305,     0,   306,   307,     0,     0,     0,     0,   308,   309,
     310,   311,   312,   313,     0,     0,   314,   315,     0,   316,
       0,   317,     0,   318,   319,   320,   321,   322,   323,   324,
     325,   326,     0,     0,   327,   328,     0,     0,   329,   330,
     331,   332,     0,     0,     0,   333,   334,     0,     0,     0,
     335,     0,   336,   337,   338,     0,   339,   340,   341,     0,
     342,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     343,   344,   345,     0,   346,   347,     0,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,     0,     0,   358,
     359,   360,     0,   361,     0,   362,   363,   364,   365,   366,
       0,   367,   368,   369,     0,     0,   370,     0,     0,     0,
     371,   372,   373,   374,   375,     0,     0,   376,   377,   378,
     379,   380,     0,   381,   382,     0,   383,   384,   385,     0,
       0,   386,     0,   387,     0,   388,   389,     0,   390,   391,
     392,     0,   393,     0,     0,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,     0,   405,   406,     0,
       0,     0,   407,   408,   409,   410,     0,     0,     0,   411,
       0,     0,     0,   412,     0,   413,   414,   415,   416,     0,
     417,   418,   419,   420,   421,     0,     0,     0,     0,     0,
     422,   423,   424,     0,   425,   426,     0,   427,     0,     0,
     428,     0,     0,   429,   430,   431,   432,   433,   434,     0,
       0,   435,   436,     0,   437,   438,   439,   440,   441,   442,
       0,     0,   443,   444,   445,   446,     0,   447,   448,     0,
       0,   449,   450,   451,   452,     0,   969,   453,   454,     0,
     455,   456,   457,   458,     0,     0,     0,     0,     0,   459,
     460,     0,     0,     0,   461,   462,   463,   464,     0,   465,
     466,     0,   467,   468,     0,   469,   470,     0,     0,   471,
       0,     0,   472,     0,   473,     0,   474,   475,     0,     0,
       0,     0,     0,     0,   476,     0,     0,   477,     0,     0,
       0,   478,   479,   480,   481,   482,     0,     0,     0,     0,
       0,     0,   483,   484,     0,   485,   486,   487,     0,   137,
     488,   138,   139,   140,   141,   142,     0,     0,   143,     0,
       0,     0,   144,     0,     0,   145,     0,   146,   147,   148,
     149,   150,   151,     0,   152,     0,     0,     0,   153,     0,
       0,     0,   154,     0,     0,   155,   156,   157,     0,   158,
       0,   159,   160,     0,     0,   161,     0,     0,   162,   163,
       0,   164,   165,     0,   166,     0,   167,   168,   169,   170,
     171,   172,     0,   173,   174,     0,   175,   176,   177,   178,
     179,   180,   181,   182,   183,     0,   184,   185,     0,   186,
     187,   188,   189,   190,     0,     0,     0,   191,     0,     0,
     192,     0,   193,     0,     0,   194,     0,     0,     0,   195,
     196,   197,     0,     0,   198,     0,     0,     0,     0,   199,
     200,     0,     0,     0,  2408,   201,   202,     0,   203,     0,
       0,     0,   204,     0,   205,   206,   207,   208,   209,     0,
       0,     0,   210,     0,     0,   211,   212,   213,     0,     0,
       0,   214,     0,   215,   216,     0,   217,   218,   219,     0,
       0,   220,   221,     0,   222,   223,   224,   225,   226,   227,
       0,     0,   228,   229,   230,   231,   232,     0,     0,   233,
     234,     0,   235,   236,   237,     0,     0,   238,     0,     0,
       0,   239,   240,     0,   241,     0,   242,     0,   243,   244,
     245,   246,     0,   247,     0,   248,     0,     0,     0,   249,
     250,     0,   251,     0,     0,   252,   253,     0,     0,     0,
     254,   255,   256,   257,     0,     0,   258,   259,   260,     0,
       0,   261,     0,     0,     0,     0,   262,   263,     0,     0,
       0,   264,     0,     0,     0,   265,   266,     0,   267,   268,
       0,     0,     0,   269,     0,     0,   270,   271,     0,     0,
     272,     0,     0,   273,   274,   614,     0,     0,     0,     0,
     275,   276,     0,   277,     0,   278,     0,   279,   280,     0,
       0,     0,     0,     0,     0,     0,   281,     0,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,     0,   299,   300,   301,     0,
     302,   303,   304,   305,     0,   306,   307,     0,     0,     0,
       0,   308,   309,   310,   311,   312,   313,     0,     0,   314,
     315,     0,   316,     0,   317,     0,   318,   319,   320,   321,
     322,   323,   324,   325,   326,     0,     0,   327,   328,     0,
       0,   329,   330,   331,   332,     0,     0,     0,   333,   334,
       0,     0,     0,   335,     0,   336,   337,   338,     0,   339,
     340,   341,     0,   342,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   343,   344,   345,     0,   346,   347,     0,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
       0,     0,   358,   359,   360,     0,   361,     0,   362,   363,
     364,   365,   366,     0,   367,   368,   369,     0,     0,   370,
       0,     0,     0,   371,   372,   373,   374,   375,     0,     0,
     376,   377,   378,   379,   380,     0,   381,   382,     0,   383,
     384,   385,     0,     0,   386,     0,   387,     0,   388,   389,
       0,   390,   391,   392,     0,   393,     0,     0,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,     0,
     405,   406,     0,     0,     0,   407,   408,   409,   410,     0,
       0,     0,   411,     0,     0,     0,   412,     0,   413,   414,
     415,   416,     0,   417,   418,   419,   420,   421,     0,     0,
       0,     0,     0,   422,   423,   424,     0,   425,   426,     0,
     427,     0,     0,   428,     0,     0,   429,   430,   431,   432,
     433,   434,     0,     0,   435,   436,     0,   437,   438,   439,
     440,   441,   442,     0,     0,   443,   444,   445,   446,     0,
     447,   448,     0,     0,   449,   450,   451,   452,     0,   134,
     453,   454,     0,   455,   456,   457,   458,     0,     0,     0,
       0,     0,   459,   460,     0,     0,     0,   461,   462,   463,
     464,     0,   465,   466,     0,   467,   468,     0,   469,   470,
       0,     0,   471,     0,     0,   472,     0,   473,     0,   474,
     475,     0,     0,     0,     0,     0,     0,   476,     0,     0,
     477,     0,     0,     0,   478,   479,   480,   481,   482,     0,
       0,     0,     0,     0,     0,   483,   484,     0,   485,   486,
     487,     0,   137,   488,   138,   139,   140,   141,   142,     0,
       0,   143,     0,     0,     0,   144,     0,     0,   145,     0,
     146,   147,   148,   149,   150,   151,     0,   152,     0,     0,
    1361,   153,     0,     0,     0,   154,     0,     0,   155,   156,
     157,     0,   158,     0,   159,   160,     0,     0,   161,     0,
       0,   162,   163,     0,   164,   165,     0,   166,     0,   167,
     168,   169,   170,   171,   172,     0,   173,   174,     0,   175,
     176,   177,   178,   179,   180,   181,   182,   183,     0,   184,
     185,     0,   186,   187,   188,   189,   190,     0,     0,     0,
     191,     0,     0,   192,     0,   193,     0,     0,   194,     0,
       0,     0,   195,   196,   197,     0,     0,   198,     0,     0,
       0,     0,   199,   200,     0,     0,     0,     0,   201,   202,
       0,   203,     0,     0,     0,   204,     0,   205,   206,   207,
     208,   209,     0,     0,     0,   210,     0,     0,   211,   212,
     213,     0,     0,     0,   214,     0,   215,   216,     0,   217,
     218,   219,     0,     0,   220,   221,     0,   222,   223,   224,
     225,   226,   227,     0,     0,   228,   229,   230,   231,   232,
       0,     0,   233,   234,     0,   235,   236,   237,     0,     0,
     238,     0,     0,     0,   239,   240,     0,   241,     0,   242,
       0,   243,   244,   245,   246,     0,   247,     0,   248,     0,
       0,     0,   249,   250,     0,   251,     0,     0,   252,   253,
       0,     0,     0,   254,   255,   256,   257,     0,     0,   258,
     259,   260,     0,     0,   261,     0,     0,     0,     0,   262,
     263,     0,     0,     0,   264,     0,     0,     0,   265,   266,
       0,   267,   268,     0,     0,     0,   269,     0,     0,   270,
     271,     0,     0,   272,     0,     0,   273,   274,   614,     0,
       0,     0,     0,   275,   276,     0,   277,     0,   278,     0,
     279,   280,     0,     0,     0,     0,     0,     0,     0,   281,
       0,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,     0,   299,
     300,   301,     0,   302,   303,   304,   305,     0,   306,   307,
       0,     0,     0,     0,   308,   309,   310,   311,   312,   313,
       0,     0,   314,   315,     0,   316,     0,   317,     0,   318,
     319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     327,   328,     0,     0,   329,   330,   331,   332,     0,     0,
       0,   333,   334,     0,     0,     0,   335,     0,   336,   337,
     338,     0,   339,   340,   341,     0,   342,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   343,   344,   345,     0,
     346,   347,     0,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,     0,     0,   358,   359,   360,     0,   361,
       0,   362,   363,   364,   365,   366,     0,   367,   368,   369,
       0,     0,   370,     0,     0,     0,   371,   372,   373,   374,
     375,     0,     0,   376,   377,   378,   379,   380,     0,   381,
     382,     0,   383,   384,   385,     0,     0,   386,     0,   387,
       0,   388,   389,     0,   390,   391,   392,     0,   393,     0,
       0,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,     0,   405,   406,     0,     0,     0,   407,   408,
     409,   410,     0,     0,     0,   411,     0,     0,     0,   412,
       0,   413,   414,   415,   416,     0,   417,   418,   419,   420,
     421,     0,     0,     0,     0,     0,   422,   423,   424,     0,
     425,   426,     0,   427,     0,     0,   428,     0,     0,   429,
     430,   431,   432,   433,   434,     0,     0,   435,   436,     0,
     437,   438,   439,   440,   441,   442,     0,     0,   443,   444,
     445,   446,     0,   447,   448,     0,     0,   449,   450,   451,
     452,     0,   134,   453,   454,     0,   455,   456,   457,   458,
       0,     0,     0,     0,     0,   459,   460,     0,     0,     0,
     461,   462,   463,   464,     0,   465,   466,     0,   467,   468,
       0,   469,   470,     0,     0,   471,     0,     0,   472,     0,
     473,     0,   474,   475,     0,     0,     0,     0,     0,     0,
     476,     0,     0,   477,     0,     0,     0,   478,   479,   480,
     481,   482,     0,     0,     0,     0,     0,     0,   483,   484,
       0,   485,   486,   487,     0,   137,   488,   138,   139,   140,
     141,   142,     0,     0,   143,     0,     0,     0,   144,     0,
       0,   145,     0,   146,   147,   148,   149,   150,   151,     0,
     152,     0,     0,     0,   153,     0,     0,     0,   154,     0,
       0,   155,   156,   157,     0,   158,     0,   159,   160,     0,
       0,   161,     0,     0,   162,   163,     0,   164,   165,     0,
     166,     0,   167,   168,   169,   170,   171,   172,     0,   173,
     174,     0,   175,   176,   177,   178,   179,   180,   181,   182,
     183,     0,   184,   185,     0,   186,   187,   188,   189,   190,
       0,     0,     0,   191,     0,     0,   192,     0,   193,     0,
       0,   194,     0,     0,     0,   195,   196,   197,     0,     0,
     198,     0,     0,     0,     0,   199,   200,     0,     0,     0,
       0,   201,   202,     0,   203,     0,     0,     0,   204,     0,
     205,   206,   207,   208,   209,     0,     0,     0,   210,     0,
       0,   211,   212,   213,     0,     0,     0,   214,     0,   215,
     216,     0,   217,   218,   219,     0,     0,   220,   221,     0,
     222,   223,   224,   225,   226,   227,     0,     0,   228,   229,
     230,   231,   232,     0,     0,   233,   234,     0,   235,   236,
     237,     0,     0,   238,     0,     0,     0,   239,   240,     0,
     241,     0,   242,     0,   243,   244,   245,   246,     0,   247,
       0,   248,     0,     0,     0,   249,   250,     0,   251,     0,
       0,   252,   253,     0,     0,     0,   254,   255,   256,   257,
       0,     0,   258,   259,   260,     0,     0,   261,     0,     0,
       0,     0,   262,   263,     0,     0,     0,   264,     0,     0,
       0,   265,   266,     0,   267,   268,     0,     0,     0,   269,
       0,     0,   270,   271,     0,     0,   272,     0,     0,   273,
     274,   614,     0,     0,     0,     0,   275,   276,     0,   277,
       0,   278,     0,   279,   280,     0,     0,     0,     0,     0,
       0,     0,   281,     0,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,     0,   299,   300,   301,     0,   302,   303,   304,   305,
       0,   306,   307,     0,     0,     0,     0,   308,   309,   310,
     311,   312,   313,     0,     0,   314,   315,     0,   316,     0,
     317,     0,   318,   319,   320,   321,   322,   323,   324,   325,
     326,     0,     0,   327,   328,     0,     0,   329,   330,   331,
     332,     0,     0,     0,   333,   334,     0,     0,     0,   335,
       0,   336,   337,   338,     0,   339,   340,   341,     0,   342,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   343,
     344,   345,     0,   346,   347,     0,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,     0,     0,   358,   359,
     360,     0,   361,     0,   362,   363,   364,   365,   366,     0,
     367,   368,   369,     0,     0,   370,     0,     0,     0,   371,
     372,   373,   374,   375,     0,     0,   376,   377,   378,   379,
     380,     0,   381,   382,     0,   383,   384,   385,     0,     0,
     386,     0,   387,     0,   388,   389,     0,   390,   391,   392,
       0,   393,     0,     0,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,     0,   405,   406,     0,     0,
       0,   407,   408,   409,   410,     0,     0,     0,   411,     0,
       0,     0,   412,     0,   413,   414,   415,   416,     0,   417,
     418,   419,   420,   421,     0,     0,     0,     0,     0,   422,
     423,   424,     0,   425,   426,     0,   427,     0,     0,   428,
       0,     0,   429,   430,   431,   432,   433,   434,     0,     0,
     435,   436,     0,   437,   438,   439,   440,   441,   442,     0,
       0,   443,   444,   445,   446,     0,   447,   448,     0,     0,
     449,   450,   451,   452,     0,   134,   453,   454,     0,   455,
     456,   457,   458,     0,     0,     0,     0,     0,   459,   460,
       0,     0,     0,   461,   462,   463,   464,     0,   465,   466,
       0,   467,   468,     0,   469,   470,     0,     0,   471,     0,
       0,   472,     0,   473,     0,   474,   475,     0,     0,     0,
       0,     0,     0,   476,     0,     0,   477,     0,     0,     0,
     478,   479,   480,   481,   482,     0,     0,     0,     0,     0,
       0,   483,   484,     0,   485,   486,   487,     0,   137,   488,
     138,   139,   140,   141,   142,     0,     0,   143,     0,     0,
       0,   144,  2863,     0,   145,     0,   146,   147,   148,   149,
     150,   151,     0,   152,     0,     0,     0,   153,     0,     0,
       0,   154,     0,     0,   155,   156,   157,     0,   158,     0,
     159,   160,     0,     0,   161,     0,     0,   162,   163,     0,
     164,   165,     0,   166,     0,   167,   168,   169,   170,   171,
     172,     0,   173,   174,     0,   175,   176,   177,   178,   179,
     180,   181,   182,   183,     0,   184,   185,     0,   186,   187,
     188,   189,   190,     0,     0,     0,   191,     0,     0,   192,
       0,   193,     0,     0,   194,     0,     0,     0,   195,   196,
     197,     0,     0,   198,     0,     0,     0,     0,   199,   200,
       0,     0,     0,     0,   201,   202,     0,   203,     0,     0,
       0,   204,     0,   205,   206,   207,   208,   209,     0,     0,
       0,   210,     0,     0,   211,   212,   213,     0,     0,     0,
     214,     0,   215,   216,     0,   217,   218,   219,     0,     0,
     220,   221,     0,   222,   223,   224,   225,   226,   227,     0,
       0,   228,   229,   230,   231,   232,     0,     0,   233,   234,
       0,   235,   236,   237,     0,     0,   238,     0,     0,     0,
     239,   240,     0,   241,     0,   242,     0,   243,   244,   245,
     246,     0,   247,     0,   248,     0,     0,     0,   249,   250,
       0,   251,     0,     0,   252,   253,     0,     0,     0,   254,
     255,   256,   257,     0,     0,   258,   259,   260,     0,     0,
     261,     0,     0,     0,     0,   262,   263,     0,     0,     0,
     264,     0,     0,     0,   265,   266,     0,   267,   268,     0,
       0,     0,   269,     0,     0,   270,   271,     0,     0,   272,
       0,     0,   273,   274,     0,     0,     0,     0,     0,   275,
     276,     0,   277,     0,   278,     0,   279,   280,     0,     0,
       0,     0,     0,     0,     0,   281,     0,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,     0,   299,   300,   301,     0,   302,
     303,   304,   305,     0,   306,   307,     0,     0,     0,     0,
     308,   309,   310,   311,   312,   313,     0,     0,   314,   315,
       0,   316,     0,   317,     0,   318,   319,   320,   321,   322,
     323,   324,   325,   326,     0,     0,   327,   328,     0,     0,
     329,   330,   331,   332,     0,     0,     0,   333,   334,     0,
       0,     0,   335,     0,   336,   337,   338,     0,   339,   340,
     341,     0,   342,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   343,   344,   345,     0,   346,   347,     0,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,     0,
       0,   358,   359,   360,     0,   361,     0,   362,   363,   364,
     365,   366,     0,   367,   368,   369,     0,     0,   370,     0,
       0,     0,   371,   372,   373,   374,   375,     0,     0,   376,
     377,   378,   379,   380,     0,   381,   382,     0,   383,   384,
     385,     0,     0,   386,     0,   387,     0,   388,   389,     0,
     390,   391,   392,     0,   393,     0,     0,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,     0,   405,
     406,     0,     0,     0,   407,   408,   409,   410,     0,     0,
       0,   411,     0,     0,     0,   412,     0,   413,   414,   415,
     416,     0,   417,   418,   419,   420,   421,     0,     0,     0,
       0,     0,   422,   423,   424,     0,   425,   426,     0,   427,
       0,     0,   428,     0,     0,   429,   430,   431,   432,   433,
     434,     0,     0,   435,   436,     0,   437,   438,   439,   440,
     441,   442,     0,     0,   443,   444,   445,   446,     0,   447,
     448,     0,     0,   449,   450,   451,   452,     0,   134,   453,
     454,     0,   455,   456,   457,   458,     0,     0,     0,     0,
       0,   459,   460,     0,     0,     0,   461,   462,   463,   464,
       0,   465,   466,     0,   467,   468,     0,   469,   470,     0,
       0,   471,     0,     0,   472,     0,   473,     0,   474,   475,
       0,     0,     0,     0,     0,     0,   476,     0,     0,   477,
       0,     0,     0,   478,   479,   480,   481,   482,     0,     0,
       0,     0,     0,     0,   483,   484,     0,   485,   486,   487,
       0,   137,   488,   138,   139,   140,   141,   142,     0,     0,
     143,     0,     0,     0,   144,     0,     0,   145,     0,   146,
     147,   148,   149,   150,   151,     0,   152,     0,     0,     0,
     153,     0,     0,     0,   154,     0,     0,   155,   156,   157,
       0,   158,     0,   159,   160,     0,     0,   161,     0,     0,
     162,   163,     0,   164,   165,     0,   166,     0,   167,   168,
     169,   170,   171,   172,     0,   173,   174,     0,   175,   176,
     177,   178,   179,   180,   181,   182,   183,     0,   184,   185,
       0,   186,   187,   188,   189,   190,  4399,     0,     0,   191,
       0,     0,   192,     0,   193,     0,     0,   194,     0,     0,
       0,   195,   196,   197,     0,     0,   198,     0,     0,     0,
       0,   199,   200,     0,     0,     0,     0,   201,   202,     0,
     203,     0,     0,     0,   204,     0,   205,   206,   207,   208,
     209,     0,     0,     0,   210,     0,     0,   211,   212,   213,
       0,     0,     0,   214,     0,   215,   216,     0,   217,   218,
     219,     0,     0,   220,   221,     0,   222,   223,   224,   225,
     226,   227,     0,  4400,   228,   229,   230,   231,   232,     0,
       0,   233,   234,     0,   235,   236,   237,     0,     0,   238,
       0,     0,     0,   239,   240,     0,   241,     0,   242,     0,
     243,   244,   245,   246,     0,   247,     0,   248,     0,     0,
       0,   249,   250,     0,   251,     0,     0,   252,   253,     0,
       0,     0,   254,   255,   256,   257,     0,     0,   258,   259,
     260,     0,     0,   261,     0,     0,     0,     0,   262,   263,
       0,     0,     0,   264,     0,     0,     0,   265,   266,     0,
     267,   268,     0,     0,     0,   269,     0,     0,   270,   271,
       0,     0,   272,     0,     0,   273,   274,     0,     0,     0,
       0,     0,   275,   276,     0,   277,     0,   278,     0,   279,
     280,     0,     0,     0,     0,     0,     0,     0,   281,     0,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,     0,   299,   300,
     301,     0,   302,   303,   304,   305,     0,   306,   307,     0,
       0,     0,     0,   308,   309,   310,   311,   312,   313,     0,
       0,   314,   315,     0,   316,     0,   317,     0,   318,   319,
     320,   321,   322,   323,   324,   325,   326,     0,     0,   327,
     328,     0,     0,   329,   330,   331,   332,     0,     0,     0,
     333,   334,     0,     0,     0,   335,     0,   336,   337,   338,
       0,   339,   340,   341,     0,   342,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   343,   344,   345,     0,   346,
     347,     0,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,     0,     0,   358,   359,   360,     0,   361,     0,
     362,   363,   364,   365,   366,     0,   367,   368,   369,     0,
       0,   370,     0,     0,     0,   371,   372,   373,   374,   375,
       0,     0,   376,   377,   378,   379,   380,     0,   381,   382,
       0,   383,   384,   385,     0,     0,   386,     0,   387,     0,
     388,   389,     0,   390,   391,   392,     0,   393,     0,     0,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,     0,   405,   406,     0,     0,     0,   407,   408,   409,
     410,     0,     0,     0,   411,     0,     0,     0,   412,     0,
     413,   414,   415,   416,     0,   417,   418,   419,   420,   421,
       0,     0,     0,     0,     0,   422,   423,   424,     0,   425,
     426,     0,   427,     0,     0,   428,     0,     0,   429,   430,
     431,   432,   433,   434,     0,     0,   435,   436,     0,   437,
     438,   439,   440,   441,   442,     0,     0,   443,   444,   445,
     446,     0,   447,   448,     0,     0,   449,   450,   451,   452,
       0,     0,   453,   454,     0,   455,   456,   457,   458,     0,
       0,     0,     0,     0,   459,   460,     0,     0,     0,   461,
     462,   463,   464,     0,   465,   466,     0,   467,   468,     0,
     469,   470,     0,     0,   471,     0,     0,   472,     0,   473,
       0,   474,   475,     0,     0,     0,     0,     0,     0,   476,
       0,     0,   477,     0,     0,     0,   478,   479,   480,   481,
     482,     0,     0,     0,     0,     0,     0,   483,   484,     0,
     485,   486,   487,     0,   137,   488,   138,   139,   140,   141,
     142,     0,     0,   143,     0,     0,     0,   144,     0,     0,
     145,     0,   146,   147,   148,   149,   150,   151,     0,   152,
       0,     0,     0,   153,     0,     0,     0,   154,     0,     0,
     155,   156,   157,     0,   158,     0,   159,   160,     0,     0,
     161,     0,     0,   162,   163,     0,   164,   165,     0,   166,
       0,   167,   168,   169,   170,   171,   172,     0,   173,   174,
       0,   175,   176,   177,   178,   179,   180,   181,   182,   183,
       0,   184,   185,     0,   186,   187,   188,   189,   190,     0,
       0,     0,   191,     0,     0,   192,     0,   193,     0,     0,
     194,     0,     0,     0,   195,   196,   197,     0,     0,   198,
       0,     0,     0,     0,   199,   200,     0,     0,     0,     0,
     201,   202,     0,   203,     0,     0,     0,   204,     0,   205,
     206,   207,   208,   209,     0,     0,     0,   210,     0,     0,
     211,   212,   213,     0,     0,     0,   214,     0,   215,   216,
       0,   217,   218,   219,     0,     0,   220,   221,     0,   222,
     223,   224,   225,   226,   227,     0,     0,   228,   229,   230,
     231,   232,     0,     0,   233,   234,     0,   235,   236,   237,
       0,     0,   238,     0,     0,     0,   239,   240,     0,   241,
       0,   242,     0,   243,   244,   245,   246,     0,   247,     0,
     248,     0,     0,     0,   249,   250,     0,   251,     0,     0,
     252,   253,     0,     0,     0,   254,   255,   256,   257,     0,
       0,   258,   259,   260,     0,     0,   261,     0,     0,     0,
       0,   262,   263,     0,     0,     0,   264,     0,     0,     0,
     265,   266,     0,   267,   268,     0,     0,     0,   269,     0,
       0,   270,   271,     0,     0,   272,     0,     0,   273,   274,
       0,     0,     0,     0,     0,   275,   276,     0,   277,     0,
     278,     0,   279,   280,     0,     0,     0,     0,     0,     0,
       0,   281,     0,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
       0,   299,   300,   301,     0,   302,   303,   304,   305,     0,
     306,   307,     0,     0,     0,     0,   308,   309,   310,   311,
     312,   313,     0,     0,   314,   315,     0,   316,     0,   317,
       0,   318,   319,   320,   321,   322,   323,   324,   325,   326,
       0,     0,   327,   328,     0,     0,   329,   330,   331,   332,
       0,     0,     0,   333,   334,     0,     0,     0,   335,     0,
     336,   337,   338,     0,   339,   340,   341,     0,   342,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   343,   344,
     345,     0,   346,   347,     0,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,     0,     0,   358,   359,   360,
       0,   361,     0,   362,   363,   364,   365,   366,     0,   367,
     368,   369,     0,     0,   370,     0,     0,     0,   371,   372,
     373,   374,   375,     0,     0,   376,   377,   378,   379,   380,
       0,   381,   382,     0,   383,   384,   385,     0,     0,   386,
       0,   387,     0,   388,   389,     0,   390,   391,   392,     0,
     393,     0,     0,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,     0,   405,   406,     0,     0,     0,
     407,   408,   409,   410,     0,     0,     0,   411,     0,     0,
       0,   412,     0,   413,   414,   415,   416,     0,   417,   418,
     419,   420,   421,     0,     0,     0,   563,     0,   422,   423,
     424,     0,   425,   426,     0,   427,     0,     0,   428,     0,
       0,   429,   430,   431,   432,   433,   434,     0,     0,   435,
     436,     0,   437,   438,   439,   440,   441,   442,     0,     0,
     443,   444,   445,   446,     0,   447,   448,     0,     0,   449,
     450,   451,   452,     0,     0,   453,   454,     0,   455,   456,
     457,   458,     0,     0,     0,     0,     0,   459,   460,     0,
       0,     0,   461,   462,   463,   464,     0,   465,   466,     0,
     467,   468,     0,   469,   470,     0,     0,   471,     0,     0,
     472,     0,   473,     0,   474,   475,     0,     0,     0,     0,
       0,     0,   476,     0,     0,   477,     0,     0,     0,   478,
     479,   480,   481,   482,     0,     0,     0,     0,     0,     0,
     483,   484,     0,   485,   486,   487,     0,   137,   488,   138,
     139,   140,   141,   142,     0,     0,   143,     0,     0,     0,
     144,     0,     0,   145,     0,   146,   147,   148,   149,   150,
     151,     0,   152,     0,     0,     0,   153,     0,     0,     0,
     154,     0,     0,   155,   156,   157,     0,   158,     0,   159,
     160,     0,     0,   161,     0,     0,   162,   163,     0,   164,
     165,     0,   166,     0,   167,   168,   169,   170,   171,   172,
       0,   173,   174,     0,   175,   176,   177,   178,   179,   180,
     181,   182,   183,     0,   184,   185,     0,   186,   187,   188,
     189,   190,     0,     0,     0,   191,     0,     0,   192,     0,
     193,     0,     0,   194,     0,     0,     0,   195,   196,   197,
       0,     0,   198,     0,     0,     0,     0,   199,   200,     0,
       0,     0,     0,   201,   202,     0,   203,     0,     0,     0,
     204,     0,   205,   206,   207,   208,   209,     0,     0,     0,
     210,     0,     0,   211,   212,   213,     0,     0,     0,   214,
       0,   215,   216,     0,   217,   218,   219,     0,     0,   220,
     221,     0,   222,   223,   224,   225,   226,   227,     0,     0,
     228,   229,   230,   231,   232,     0,     0,   233,   234,     0,
     235,   236,   237,     0,     0,   238,     0,     0,     0,   239,
     240,  1069,   241,     0,   242,     0,   243,   244,   245,   246,
       0,   247,     0,   248,     0,     0,     0,   249,   250,     0,
     251,     0,     0,   252,   253,     0,     0,     0,   254,   255,
     256,   257,     0,     0,   258,   259,   260,     0,     0,   261,
       0,     0,     0,     0,   262,   263,     0,     0,     0,   264,
       0,     0,     0,   265,   266,     0,   267,   268,     0,     0,
       0,   269,     0,     0,   270,   271,     0,     0,   272,     0,
       0,   273,   274,     0,     0,     0,     0,     0,   275,   276,
       0,   277,     0,   278,     0,   279,   280,     0,     0,     0,
       0,     0,     0,     0,   281,     0,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,     0,   299,   300,   301,     0,   302,   303,
     304,   305,     0,   306,   307,     0,     0,     0,     0,   308,
     309,   310,   311,   312,   313,     0,     0,   314,   315,     0,
     316,     0,   317,     0,   318,   319,   320,   321,   322,   323,
     324,   325,   326,     0,     0,   327,   328,     0,     0,   329,
     330,   331,   332,     0,     0,     0,   333,   334,     0,     0,
       0,   335,     0,   336,   337,   338,     0,   339,   340,   341,
       0,   342,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   343,   344,   345,     0,   346,   347,     0,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,     0,     0,
     358,   359,   360,     0,   361,     0,   362,   363,   364,   365,
     366,     0,   367,   368,   369,     0,     0,   370,     0,     0,
       0,   371,   372,   373,   374,   375,     0,     0,   376,   377,
     378,   379,   380,     0,   381,   382,     0,   383,   384,   385,
       0,     0,   386,     0,   387,     0,   388,   389,     0,   390,
     391,   392,     0,   393,     0,     0,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,     0,   405,   406,
       0,     0,     0,   407,   408,   409,   410,     0,     0,     0,
     411,     0,     0,     0,   412,     0,   413,   414,   415,   416,
       0,   417,   418,   419,   420,   421,     0,     0,     0,     0,
       0,   422,   423,   424,     0,   425,   426,     0,   427,     0,
       0,   428,     0,     0,   429,   430,   431,   432,   433,   434,
       0,     0,   435,   436,     0,   437,   438,   439,   440,   441,
     442,     0,     0,   443,   444,   445,   446,     0,   447,   448,
       0,     0,   449,   450,   451,   452,     0,     0,   453,   454,
       0,   455,   456,   457,   458,     0,     0,     0,     0,     0,
     459,   460,     0,     0,     0,   461,   462,   463,   464,     0,
     465,   466,     0,   467,   468,     0,   469,   470,     0,     0,
     471,     0,     0,   472,     0,   473,     0,   474,   475,     0,
       0,     0,     0,     0,     0,   476,     0,     0,   477,     0,
       0,     0,   478,   479,   480,   481,   482,     0,     0,     0,
       0,     0,     0,   483,   484,     0,   485,   486,   487,     0,
     137,   488,   138,   139,   140,   141,   142,     0,     0,   143,
       0,     0,     0,   144,     0,     0,   145,     0,   146,   147,
     148,   149,   150,   151,     0,   152,     0,     0,     0,   153,
       0,     0,     0,   154,     0,     0,   155,   156,   157,     0,
     158,     0,   159,   160,     0,     0,   161,     0,     0,   162,
     163,     0,   164,   165,     0,   166,     0,   167,   168,   169,
     170,   171,   172,     0,   173,   174,     0,   175,   176,   177,
     178,   179,   180,   181,   182,   183,     0,   184,   185,     0,
     186,   187,   188,   189,   190,     0,     0,     0,   191,     0,
       0,   192,     0,   193,     0,     0,   194,     0,     0,     0,
     195,   196,   197,     0,     0,   198,     0,     0,     0,     0,
     199,   200,     0,     0,     0,   900,   201,   202,     0,   203,
       0,     0,     0,   204,     0,   205,   206,   207,   208,   209,
       0,     0,     0,   210,     0,     0,   211,   212,   213,     0,
       0,     0,   214,     0,   215,   216,     0,   217,   218,   219,
       0,     0,   220,   221,     0,   222,   223,   224,   225,   226,
     227,     0,     0,   228,   229,   230,   231,   232,     0,     0,
     233,   234,     0,   235,   236,   237,     0,     0,   238,     0,
       0,     0,   239,   240,     0,   241,     0,   242,     0,   243,
     244,   245,   246,     0,   247,     0,   248,     0,     0,     0,
     249,   250,     0,   251,     0,     0,   252,   253,     0,     0,
       0,   254,   255,   256,   257,     0,     0,   258,   259,   260,
       0,     0,   261,     0,     0,     0,     0,   262,   263,     0,
       0,     0,   264,     0,     0,     0,   265,   266,     0,   267,
     268,     0,     0,     0,   269,     0,     0,   270,   271,     0,
       0,   272,     0,     0,   273,   274,     0,     0,     0,     0,
       0,   275,   276,     0,   277,     0,   278,     0,   279,   280,
       0,     0,     0,     0,     0,     0,     0,   281,     0,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,     0,   299,   300,   301,
       0,   302,   303,   304,   305,     0,   306,   307,     0,     0,
       0,     0,   308,   309,   310,   311,   312,   313,     0,     0,
     314,   315,     0,   316,     0,   317,     0,   318,   319,   320,
     321,   322,   323,   324,   325,   326,     0,     0,   327,   328,
       0,     0,   329,   330,   331,   332,     0,     0,     0,   333,
     334,     0,     0,     0,   335,     0,   336,   337,   338,     0,
     339,   340,   341,     0,   342,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   343,   344,   345,     0,   346,   347,
       0,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,     0,     0,   358,   359,   360,     0,   361,     0,   362,
     363,   364,   365,   366,     0,   367,   368,   369,     0,     0,
     370,     0,     0,     0,   371,   372,   373,   374,   375,     0,
       0,   376,   377,   378,   379,   380,     0,   381,   382,     0,
     383,   384,   385,     0,     0,   386,     0,   387,     0,   388,
     389,     0,   390,   391,   392,     0,   393,     0,     0,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
       0,   405,   406,     0,     0,     0,   407,   408,   409,   410,
       0,     0,     0,   411,     0,     0,     0,   412,     0,   413,
     414,   415,   416,     0,   417,   418,   419,   420,   421,     0,
       0,     0,     0,     0,   422,   423,   424,     0,   425,   426,
       0,   427,     0,     0,   428,     0,     0,   429,   430,   431,
     432,   433,   434,     0,     0,   435,   436,     0,   437,   438,
     439,   440,   441,   442,     0,     0,   443,   444,   445,   446,
       0,   447,   448,     0,     0,   449,   450,   451,   452,     0,
       0,   453,   454,     0,   455,   456,   457,   458,     0,     0,
       0,     0,     0,  1875,   460,     0,     0,     0,   461,   462,
     463,   464,     0,   465,   466,     0,   467,   468,     0,   469,
     470,     0,     0,   471,     0,     0,   472,     0,   473,     0,
     474,   475,     0,     0,     0,     0,     0,     0,   476,     0,
       0,   477,     0,     0,     0,   478,   479,   480,   481,   482,
       0,     0,     0,     0,     0,     0,   483,   484,     0,   485,
     486,   487,     0,   137,   488,   138,   139,   140,   141,   142,
       0,     0,   143,     0,     0,     0,   144,     0,     0,   145,
       0,   146,   147,   148,   149,   150,   151,     0,   152,     0,
       0,     0,   153,     0,     0,     0,   154,     0,     0,   155,
     156,   157,     0,   158,     0,   159,   160,     0,     0,   161,
       0,     0,   162,   163,     0,   164,   165,     0,   166,     0,
     167,   168,   169,   170,   171,   172,     0,   173,   174,     0,
     175,   176,   177,   178,   179,   180,   181,   182,   183,     0,
     184,   185,     0,   186,   187,   188,   189,   190,     0,     0,
       0,   191,     0,     0,   192,     0,   193,     0,     0,   194,
       0,     0,     0,   195,   196,   197,     0,     0,   198,     0,
       0,     0,     0,   199,   200,     0,     0,     0,  2071,   201,
     202,     0,   203,     0,     0,     0,   204,     0,   205,   206,
     207,   208,   209,     0,     0,     0,   210,     0,     0,   211,
     212,   213,     0,     0,     0,   214,     0,   215,   216,     0,
     217,   218,   219,     0,     0,   220,   221,     0,   222,   223,
     224,   225,   226,   227,     0,     0,   228,   229,   230,   231,
     232,     0,     0,   233,   234,     0,   235,   236,   237,     0,
       0,   238,     0,     0,     0,   239,   240,     0,   241,     0,
     242,     0,   243,   244,   245,   246,     0,   247,     0,   248,
       0,     0,     0,   249,   250,     0,   251,     0,     0,   252,
     253,     0,     0,     0,   254,   255,   256,   257,     0,     0,
     258,   259,   260,     0,     0,   261,     0,     0,     0,     0,
     262,   263,     0,     0,     0,   264,     0,     0,     0,   265,
     266,     0,   267,   268,     0,     0,     0,   269,     0,     0,
     270,   271,     0,     0,   272,     0,     0,   273,   274,     0,
       0,     0,     0,     0,   275,   276,     0,   277,     0,   278,
       0,   279,   280,     0,     0,     0,     0,     0,     0,     0,
     281,     0,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,     0,
     299,   300,   301,     0,   302,   303,   304,   305,     0,   306,
     307,     0,     0,     0,     0,   308,   309,   310,   311,   312,
     313,     0,     0,   314,   315,     0,   316,     0,   317,     0,
     318,   319,   320,   321,   322,   323,   324,   325,   326,     0,
       0,   327,   328,     0,     0,   329,   330,   331,   332,     0,
       0,     0,   333,   334,     0,     0,     0,   335,     0,   336,
     337,   338,     0,   339,   340,   341,     0,   342,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   343,   344,   345,
       0,   346,   347,     0,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,     0,     0,   358,   359,   360,     0,
     361,     0,   362,   363,   364,   365,   366,     0,   367,   368,
     369,     0,     0,   370,     0,     0,     0,   371,   372,   373,
     374,   375,     0,     0,   376,   377,   378,   379,   380,     0,
     381,   382,     0,   383,   384,   385,     0,     0,   386,     0,
     387,     0,   388,   389,     0,   390,   391,   392,     0,   393,
       0,     0,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,     0,   405,   406,     0,     0,     0,   407,
     408,   409,   410,     0,     0,     0,   411,     0,     0,     0,
     412,     0,   413,   414,   415,   416,     0,   417,   418,   419,
     420,   421,     0,     0,     0,     0,     0,   422,   423,   424,
       0,   425,   426,     0,   427,     0,     0,   428,     0,     0,
     429,   430,   431,   432,   433,   434,     0,     0,   435,   436,
       0,   437,   438,   439,   440,   441,   442,     0,     0,   443,
     444,   445,   446,     0,   447,   448,     0,     0,   449,   450,
     451,   452,     0,     0,   453,   454,     0,   455,   456,   457,
     458,     0,     0,     0,     0,     0,   459,   460,     0,     0,
       0,   461,   462,   463,   464,     0,   465,   466,     0,   467,
     468,     0,   469,   470,     0,     0,   471,     0,     0,   472,
       0,   473,     0,   474,   475,     0,     0,     0,     0,     0,
       0,   476,     0,     0,   477,     0,     0,     0,   478,   479,
     480,   481,   482,     0,     0,     0,     0,     0,     0,   483,
     484,     0,   485,   486,   487,     0,   137,   488,   138,   139,
     140,   141,   142,     0,     0,   143,     0,     0,     0,   144,
       0,     0,   145,     0,   146,   147,   148,   149,   150,   151,
       0,   152,     0,     0,     0,   153,     0,     0,     0,   154,
       0,     0,   155,   156,   157,     0,   158,     0,   159,   160,
       0,     0,   161,     0,     0,   162,   163,     0,   164,   165,
       0,   166,     0,   167,   168,   169,   170,   171,   172,     0,
     173,   174,     0,   175,   176,   177,   178,   179,   180,   181,
     182,   183,     0,   184,   185,     0,   186,   187,   188,   189,
     190,     0,     0,     0,   191,     0,     0,   192,     0,   193,
       0,     0,   194,     0,     0,     0,   195,   196,   197,     0,
       0,   198,     0,     0,     0,     0,   199,   200,     0,     0,
       0,   900,   201,   202,     0,   203,     0,     0,     0,   204,
       0,   205,   206,   207,   208,   209,     0,     0,     0,   210,
       0,     0,   211,   212,   213,     0,     0,     0,   214,     0,
     215,   216,     0,   217,   218,   219,     0,     0,   220,   221,
       0,   222,   223,   224,   225,   226,   227,     0,     0,   228,
     229,   230,   231,   232,     0,     0,   233,   234,     0,   235,
     236,   237,     0,     0,   238,     0,     0,     0,   239,   240,
       0,   241,     0,   242,     0,   243,   244,   245,   246,     0,
     247,     0,   248,     0,     0,     0,   249,   250,     0,   251,
       0,     0,   252,   253,     0,     0,     0,   254,   255,   256,
     257,     0,     0,   258,   259,   260,     0,     0,   261,     0,
       0,     0,     0,   262,   263,     0,     0,     0,   264,     0,
       0,     0,   265,   266,     0,   267,   268,     0,     0,     0,
     269,     0,     0,   270,   271,     0,     0,   272,     0,     0,
     273,   274,     0,     0,     0,     0,     0,   275,   276,     0,
     277,     0,   278,     0,   279,   280,     0,     0,     0,     0,
       0,     0,     0,   281,     0,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,     0,   299,   300,   301,     0,   302,   303,   304,
     305,     0,   306,   307,     0,     0,     0,     0,   308,   309,
     310,   311,   312,   313,     0,     0,   314,   315,     0,   316,
       0,   317,     0,   318,   319,   320,   321,   322,   323,   324,
     325,   326,     0,     0,   327,   328,     0,     0,   329,   330,
     331,   332,     0,     0,     0,   333,   334,     0,     0,     0,
     335,     0,   336,   337,   338,     0,   339,   340,   341,     0,
     342,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     343,   344,   345,     0,   346,   347,     0,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,     0,     0,   358,
     359,   360,     0,   361,     0,   362,   363,   364,   365,   366,
       0,   367,   368,   369,     0,     0,   370,     0,     0,     0,
     371,   372,   373,   374,   375,     0,     0,   376,   377,   378,
     379,   380,     0,   381,   382,     0,   383,   384,   385,     0,
       0,   386,     0,   387,     0,   388,   389,     0,   390,   391,
     392,     0,   393,     0,     0,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,     0,   405,   406,     0,
       0,     0,   407,   408,   409,   410,     0,     0,     0,   411,
       0,     0,     0,   412,     0,   413,   414,   415,   416,     0,
     417,   418,   419,   420,   421,     0,     0,     0,     0,     0,
     422,   423,   424,     0,   425,   426,     0,   427,     0,     0,
     428,     0,     0,   429,   430,   431,   432,   433,   434,     0,
       0,   435,   436,     0,   437,   438,   439,   440,   441,   442,
       0,     0,   443,   444,   445,   446,     0,   447,   448,     0,
       0,   449,   450,   451,   452,     0,     0,   453,   454,     0,
     455,   456,   457,   458,     0,     0,     0,     0,     0,   459,
     460,     0,     0,     0,   461,   462,   463,   464,     0,   465,
     466,     0,   467,   468,     0,   469,   470,     0,     0,   471,
       0,     0,   472,     0,   473,     0,   474,   475,     0,     0,
       0,     0,     0,     0,   476,     0,     0,   477,     0,     0,
       0,   478,   479,   480,   481,   482,     0,     0,     0,     0,
       0,     0,   483,   484,     0,   485,   486,   487,     0,   137,
     488,   138,   139,   140,   141,   142,     0,     0,   143,     0,
       0,     0,   144,     0,     0,   145,     0,   146,   147,   148,
     149,   150,   151,     0,   152,     0,     0,     0,   153,     0,
       0,     0,   154,     0,     0,   155,   156,   157,     0,   158,
       0,   159,   160,     0,     0,   161,     0,     0,   162,   163,
       0,   164,   165,     0,   166,     0,   167,   168,   169,   170,
     171,   172,     0,   173,   174,     0,   175,   176,   177,   178,
     179,   180,   181,   182,   183,     0,   184,   185,     0,   186,
     187,   188,   189,   190,     0,     0,     0,   191,     0,     0,
     192,     0,   193,     0,     0,   194,     0,     0,     0,   195,
     196,   197,     0,     0,   198,     0,     0,     0,     0,   199,
     200,     0,     0,     0,  2955,   201,   202,     0,   203,     0,
       0,     0,   204,     0,   205,   206,   207,   208,   209,     0,
       0,     0,   210,     0,     0,   211,   212,   213,     0,     0,
       0,   214,     0,   215,   216,     0,   217,   218,   219,     0,
       0,   220,   221,     0,   222,   223,   224,   225,   226,   227,
       0,     0,   228,   229,   230,   231,   232,     0,     0,   233,
     234,     0,   235,   236,   237,     0,     0,   238,     0,     0,
       0,   239,   240,     0,   241,     0,   242,     0,   243,   244,
     245,   246,     0,   247,     0,   248,     0,     0,     0,   249,
     250,     0,   251,     0,     0,   252,   253,     0,     0,     0,
     254,   255,   256,   257,     0,     0,   258,   259,   260,     0,
       0,   261,     0,     0,     0,     0,   262,   263,     0,     0,
       0,   264,     0,     0,     0,   265,   266,     0,   267,   268,
       0,     0,     0,   269,     0,     0,   270,   271,     0,     0,
     272,     0,     0,   273,   274,     0,     0,     0,     0,     0,
     275,   276,     0,   277,     0,   278,     0,   279,   280,     0,
       0,     0,     0,     0,     0,     0,   281,     0,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,     0,   299,   300,   301,     0,
     302,   303,   304,   305,     0,   306,   307,     0,     0,     0,
       0,   308,   309,   310,   311,   312,   313,     0,     0,   314,
     315,     0,   316,     0,   317,     0,   318,   319,   320,   321,
     322,   323,   324,   325,   326,     0,     0,   327,   328,     0,
       0,   329,   330,   331,   332,     0,     0,     0,   333,   334,
       0,     0,     0,   335,     0,   336,   337,   338,     0,   339,
     340,   341,     0,   342,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   343,   344,   345,     0,   346,   347,     0,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
       0,     0,   358,   359,   360,     0,   361,     0,   362,   363,
     364,   365,   366,     0,   367,   368,   369,     0,     0,   370,
       0,     0,     0,   371,   372,   373,   374,   375,     0,     0,
     376,   377,   378,   379,   380,     0,   381,   382,     0,   383,
     384,   385,     0,     0,   386,     0,   387,     0,   388,   389,
       0,   390,   391,   392,     0,   393,     0,     0,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,     0,
     405,   406,     0,     0,     0,   407,   408,   409,   410,     0,
       0,     0,   411,     0,     0,     0,   412,     0,   413,   414,
     415,   416,     0,   417,   418,   419,   420,   421,     0,     0,
       0,     0,     0,   422,   423,   424,     0,   425,   426,     0,
     427,     0,     0,   428,     0,     0,   429,   430,   431,   432,
     433,   434,     0,     0,   435,   436,     0,   437,   438,   439,
     440,   441,   442,     0,     0,   443,   444,   445,   446,     0,
     447,   448,     0,     0,   449,   450,   451,   452,     0,     0,
     453,   454,     0,   455,   456,   457,   458,     0,     0,     0,
       0,     0,   459,   460,     0,     0,     0,   461,   462,   463,
     464,     0,   465,   466,     0,   467,   468,     0,   469,   470,
       0,     0,   471,     0,     0,   472,     0,   473,     0,   474,
     475,     0,     0,     0,     0,     0,     0,   476,     0,     0,
     477,     0,     0,     0,   478,   479,   480,   481,   482,     0,
       0,     0,     0,     0,     0,   483,   484,     0,   485,   486,
     487,     0,   137,   488,   138,   139,   140,   141,   142,  2963,
       0,   143,     0,     0,     0,   144,     0,     0,   145,     0,
     146,   147,   148,   149,   150,   151,     0,   152,     0,     0,
       0,   153,     0,     0,     0,   154,     0,     0,   155,   156,
     157,     0,   158,     0,   159,   160,     0,     0,   161,     0,
       0,   162,   163,     0,   164,   165,     0,   166,     0,   167,
     168,   169,   170,   171,   172,     0,   173,   174,     0,   175,
     176,   177,   178,   179,   180,   181,   182,   183,     0,   184,
     185,     0,   186,   187,   188,   189,   190,     0,     0,     0,
     191,     0,     0,   192,     0,   193,     0,     0,   194,     0,
       0,     0,   195,   196,   197,     0,     0,   198,     0,     0,
       0,     0,   199,   200,     0,     0,     0,     0,   201,   202,
       0,   203,     0,     0,     0,   204,     0,   205,   206,   207,
     208,   209,     0,     0,     0,   210,     0,     0,   211,   212,
     213,     0,     0,     0,   214,     0,   215,   216,     0,   217,
     218,   219,     0,     0,   220,   221,     0,   222,   223,   224,
     225,   226,   227,     0,     0,   228,   229,   230,   231,   232,
       0,     0,   233,   234,     0,   235,   236,   237,     0,     0,
     238,     0,     0,     0,   239,   240,     0,   241,     0,   242,
       0,   243,   244,   245,   246,     0,   247,     0,   248,     0,
       0,     0,   249,   250,     0,   251,     0,     0,   252,   253,
       0,     0,     0,   254,   255,   256,   257,     0,     0,   258,
     259,   260,     0,     0,   261,     0,     0,     0,     0,   262,
     263,     0,     0,     0,   264,     0,     0,     0,   265,   266,
       0,   267,   268,     0,     0,     0,   269,     0,     0,   270,
     271,     0,     0,   272,     0,     0,   273,   274,     0,     0,
       0,     0,     0,   275,   276,     0,   277,     0,   278,     0,
     279,   280,     0,     0,     0,     0,     0,     0,     0,   281,
       0,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,     0,   299,
     300,   301,     0,   302,   303,   304,   305,     0,   306,   307,
       0,     0,     0,     0,   308,   309,   310,   311,   312,   313,
       0,     0,   314,   315,     0,   316,     0,   317,     0,   318,
     319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     327,   328,     0,     0,   329,   330,   331,   332,     0,     0,
       0,   333,   334,     0,     0,     0,   335,     0,   336,   337,
     338,     0,   339,   340,   341,     0,   342,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   343,   344,   345,     0,
     346,   347,     0,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,     0,     0,   358,   359,   360,     0,   361,
       0,   362,   363,   364,   365,   366,     0,   367,   368,   369,
       0,     0,   370,     0,     0,     0,   371,   372,   373,   374,
     375,     0,     0,   376,   377,   378,   379,   380,     0,   381,
     382,     0,   383,   384,   385,     0,     0,   386,     0,   387,
       0,   388,   389,     0,   390,   391,   392,     0,   393,     0,
       0,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,     0,   405,   406,     0,     0,     0,   407,   408,
     409,   410,     0,     0,     0,   411,     0,     0,     0,   412,
       0,   413,   414,   415,   416,     0,   417,   418,   419,   420,
     421,     0,     0,     0,     0,     0,   422,   423,   424,     0,
     425,   426,     0,   427,     0,     0,   428,     0,     0,   429,
     430,   431,   432,   433,   434,     0,     0,   435,   436,     0,
     437,   438,   439,   440,   441,   442,     0,     0,   443,   444,
     445,   446,     0,   447,   448,     0,     0,   449,   450,   451,
     452,     0,     0,   453,   454,     0,   455,   456,   457,   458,
       0,     0,     0,     0,     0,   459,   460,     0,     0,     0,
     461,   462,   463,   464,     0,   465,   466,     0,   467,   468,
       0,   469,   470,     0,     0,   471,     0,     0,   472,     0,
     473,     0,   474,   475,     0,     0,     0,     0,     0,     0,
     476,     0,     0,   477,     0,     0,     0,   478,   479,   480,
     481,   482,     0,     0,     0,     0,     0,     0,   483,   484,
       0,   485,   486,   487,     0,   137,   488,   138,   139,   140,
     141,   142,     0,     0,   143,     0,     0,     0,   144,     0,
       0,   145,     0,   146,   147,   148,   149,   150,   151,     0,
     152,     0,     0,     0,   153,     0,     0,     0,   154,     0,
       0,   155,   156,   157,     0,   158,     0,   159,   160,     0,
       0,   161,     0,     0,   162,   163,     0,   164,   165,     0,
     166,     0,   167,   168,   169,   170,   171,   172,     0,   173,
     174,     0,   175,   176,   177,   178,   179,   180,   181,   182,
     183,     0,   184,   185,     0,   186,   187,   188,   189,   190,
       0,     0,     0,   191,     0,     0,   192,     0,   193,     0,
       0,   194,     0,     0,     0,   195,   196,   197,     0,     0,
     198,     0,     0,     0,     0,   199,   200,     0,     0,     0,
    2987,   201,   202,     0,   203,     0,     0,     0,   204,     0,
     205,   206,   207,   208,   209,     0,     0,     0,   210,     0,
       0,   211,   212,   213,     0,     0,     0,   214,     0,   215,
     216,     0,   217,   218,   219,     0,     0,   220,   221,     0,
     222,   223,   224,   225,   226,   227,     0,     0,   228,   229,
     230,   231,   232,     0,     0,   233,   234,     0,   235,   236,
     237,     0,     0,   238,     0,     0,     0,   239,   240,     0,
     241,     0,   242,     0,   243,   244,   245,   246,     0,   247,
       0,   248,     0,     0,     0,   249,   250,     0,   251,     0,
       0,   252,   253,     0,     0,     0,   254,   255,   256,   257,
       0,     0,   258,   259,   260,     0,     0,   261,     0,     0,
       0,     0,   262,   263,     0,     0,     0,   264,     0,     0,
       0,   265,   266,     0,   267,   268,     0,     0,     0,   269,
       0,     0,   270,   271,     0,     0,   272,     0,     0,   273,
     274,     0,     0,     0,     0,     0,   275,   276,     0,   277,
       0,   278,     0,   279,   280,     0,     0,     0,     0,     0,
       0,     0,   281,     0,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,     0,   299,   300,   301,     0,   302,   303,   304,   305,
       0,   306,   307,     0,     0,     0,     0,   308,   309,   310,
     311,   312,   313,     0,     0,   314,   315,     0,   316,     0,
     317,     0,   318,   319,   320,   321,   322,   323,   324,   325,
     326,     0,     0,   327,   328,     0,     0,   329,   330,   331,
     332,     0,     0,     0,   333,   334,     0,     0,     0,   335,
       0,   336,   337,   338,     0,   339,   340,   341,     0,   342,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   343,
     344,   345,     0,   346,   347,     0,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,     0,     0,   358,   359,
     360,     0,   361,     0,   362,   363,   364,   365,   366,     0,
     367,   368,   369,     0,     0,   370,     0,     0,     0,   371,
     372,   373,   374,   375,     0,     0,   376,   377,   378,   379,
     380,     0,   381,   382,     0,   383,   384,   385,     0,     0,
     386,     0,   387,     0,   388,   389,     0,   390,   391,   392,
       0,   393,     0,     0,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,     0,   405,   406,     0,     0,
       0,   407,   408,   409,   410,     0,     0,     0,   411,     0,
       0,     0,   412,     0,   413,   414,   415,   416,     0,   417,
     418,   419,   420,   421,     0,     0,     0,     0,     0,   422,
     423,   424,     0,   425,   426,     0,   427,     0,     0,   428,
       0,     0,   429,   430,   431,   432,   433,   434,     0,     0,
     435,   436,     0,   437,   438,   439,   440,   441,   442,     0,
       0,   443,   444,   445,   446,     0,   447,   448,     0,     0,
     449,   450,   451,   452,     0,     0,   453,   454,     0,   455,
     456,   457,   458,     0,     0,     0,     0,     0,   459,   460,
       0,     0,     0,   461,   462,   463,   464,     0,   465,   466,
       0,   467,   468,     0,   469,   470,     0,     0,   471,     0,
       0,   472,     0,   473,     0,   474,   475,     0,     0,     0,
       0,     0,     0,   476,     0,     0,   477,     0,     0,     0,
     478,   479,   480,   481,   482,     0,     0,     0,     0,     0,
       0,   483,   484,     0,   485,   486,   487,     0,   137,   488,
     138,   139,   140,   141,   142,     0,     0,   143,     0,     0,
       0,   144,     0,     0,   145,     0,   146,   147,   148,   149,
     150,   151,     0,   152,     0,     0,     0,   153,     0,     0,
       0,   154,     0,     0,   155,   156,   157,     0,   158,     0,
     159,   160,     0,     0,   161,     0,     0,   162,   163,     0,
     164,   165,     0,   166,     0,   167,   168,   169,   170,   171,
     172,     0,   173,   174,     0,   175,   176,   177,   178,   179,
     180,   181,   182,   183,     0,   184,   185,     0,   186,   187,
     188,   189,   190,     0,     0,     0,   191,     0,     0,   192,
       0,   193,     0,     0,   194,     0,     0,     0,   195,   196,
     197,     0,     0,   198,     0,     0,     0,     0,   199,   200,
       0,     0,     0,     0,   201,   202,     0,   203,     0,     0,
       0,   204,     0,   205,   206,   207,   208,   209,     0,     0,
       0,   210,     0,     0,   211,   212,   213,     0,     0,     0,
     214,     0,   215,   216,     0,   217,   218,   219,     0,     0,
     220,   221,     0,   222,   223,   224,   225,   226,   227,     0,
       0,   228,   229,   230,   231,   232,     0,     0,   233,   234,
       0,   235,   236,   237,     0,     0,   238,     0,     0,     0,
     239,   240,     0,   241,     0,   242,     0,   243,   244,   245,
     246,     0,   247,     0,   248,     0,     0,     0,   249,   250,
       0,   251,     0,     0,   252,   253,     0,     0,     0,   254,
     255,   256,   257,     0,     0,   258,   259,   260,     0,     0,
     261,     0,     0,     0,     0,   262,   263,     0,     0,     0,
     264,     0,     0,     0,   265,   266,     0,   267,   268,     0,
       0,     0,   269,     0,     0,   270,   271,     0,     0,   272,
       0,     0,   273,   274,     0,     0,     0,     0,     0,   275,
     276,     0,   277,     0,   278,     0,   279,   280,     0,     0,
       0,     0,     0,     0,     0,   281,     0,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,     0,   299,   300,   301,     0,   302,
     303,   304,   305,     0,   306,   307,     0,     0,     0,     0,
     308,   309,   310,   311,   312,   313,     0,     0,   314,   315,
       0,   316,     0,   317,     0,   318,   319,   320,   321,   322,
     323,   324,   325,   326,     0,     0,   327,   328,     0,     0,
     329,   330,   331,   332,     0,     0,     0,   333,   334,     0,
       0,     0,   335,     0,   336,   337,   338,     0,   339,   340,
     341,     0,   342,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   343,   344,   345,     0,   346,   347,     0,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,     0,
       0,   358,   359,   360,  3051,   361,     0,   362,   363,   364,
     365,   366,     0,   367,   368,   369,     0,     0,   370,     0,
       0,     0,   371,   372,   373,   374,   375,     0,     0,   376,
     377,   378,   379,   380,     0,   381,   382,     0,   383,   384,
     385,     0,     0,   386,     0,   387,     0,   388,   389,     0,
     390,   391,   392,     0,   393,     0,     0,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,     0,   405,
     406,     0,     0,     0,   407,   408,   409,   410,     0,     0,
       0,   411,     0,     0,     0,   412,     0,   413,   414,   415,
     416,     0,   417,   418,   419,   420,   421,     0,     0,     0,
       0,     0,   422,   423,   424,     0,   425,   426,     0,   427,
       0,     0,   428,     0,     0,   429,   430,   431,   432,   433,
     434,     0,     0,   435,   436,     0,   437,   438,   439,   440,
     441,   442,     0,     0,   443,   444,   445,   446,     0,   447,
     448,     0,     0,   449,   450,   451,   452,     0,     0,   453,
     454,     0,   455,   456,   457,   458,     0,     0,     0,     0,
       0,   459,   460,     0,     0,     0,   461,   462,   463,   464,
       0,   465,   466,     0,   467,   468,     0,   469,   470,     0,
       0,   471,     0,     0,   472,     0,   473,     0,   474,   475,
       0,     0,     0,     0,     0,     0,   476,     0,     0,   477,
       0,     0,     0,   478,   479,   480,   481,   482,     0,     0,
       0,     0,     0,     0,   483,   484,     0,   485,   486,   487,
       0,   137,   488,   138,   139,   140,   141,   142,     0,     0,
     143,     0,     0,     0,   144,     0,     0,   145,     0,   146,
     147,   148,   149,   150,   151,     0,   152,     0,     0,     0,
     153,     0,     0,     0,   154,     0,     0,   155,   156,   157,
       0,   158,     0,   159,   160,     0,     0,   161,     0,     0,
     162,   163,     0,   164,   165,     0,   166,     0,   167,   168,
     169,   170,   171,   172,     0,   173,   174,     0,   175,   176,
     177,   178,   179,   180,   181,   182,   183,     0,   184,   185,
       0,   186,   187,   188,   189,   190,     0,     0,     0,   191,
       0,     0,   192,     0,   193,     0,     0,   194,     0,     0,
       0,   195,   196,   197,     0,     0,   198,     0,     0,     0,
       0,   199,   200,     0,     0,     0,     0,   201,   202,     0,
     203,     0,     0,     0,   204,     0,   205,   206,   207,   208,
     209,     0,     0,     0,   210,     0,     0,   211,   212,   213,
       0,     0,     0,   214,     0,   215,   216,     0,   217,   218,
     219,     0,     0,   220,   221,     0,   222,   223,   224,   225,
     226,   227,     0,     0,   228,   229,   230,   231,   232,     0,
       0,   233,   234,     0,   235,   236,   237,     0,     0,   238,
       0,     0,     0,   239,   240,     0,   241,     0,   242,     0,
     243,   244,   245,   246,     0,   247,     0,   248,     0,     0,
       0,   249,   250,     0,   251,     0,     0,   252,   253,     0,
       0,     0,   254,   255,   256,   257,     0,     0,   258,   259,
     260,     0,     0,   261,     0,     0,     0,     0,   262,   263,
       0,     0,     0,   264,     0,     0,     0,   265,   266,     0,
     267,   268,     0,     0,     0,   269,     0,     0,   270,   271,
       0,     0,   272,     0,     0,   273,   274,     0,     0,     0,
       0,     0,   275,   276,     0,   277,     0,   278,     0,   279,
     280,     0,     0,     0,     0,     0,     0,     0,   281,     0,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,     0,   299,   300,
     301,     0,   302,   303,   304,   305,     0,   306,   307,     0,
       0,     0,     0,   308,   309,   310,   311,   312,   313,     0,
       0,   314,   315,     0,   316,     0,   317,     0,   318,   319,
     320,   321,   322,   323,   324,   325,   326,     0,     0,   327,
     328,     0,     0,   329,   330,   331,   332,     0,     0,     0,
     333,   334,     0,     0,     0,   335,     0,   336,   337,   338,
       0,   339,   340,   341,     0,   342,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   343,   344,   345,     0,   346,
     347,     0,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,     0,     0,   358,   359,   360,     0,   361,     0,
     362,   363,   364,   365,   366,     0,   367,   368,   369,     0,
       0,   370,     0,     0,     0,   371,   372,   373,   374,   375,
       0,     0,   376,   377,   378,   379,   380,     0,   381,   382,
       0,   383,   384,   385,     0,     0,   386,     0,   387,     0,
     388,   389,     0,   390,   391,   392,     0,   393,     0,     0,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,     0,   405,   406,     0,     0,     0,   407,   408,   409,
     410,     0,     0,     0,   411,     0,     0,     0,   412,     0,
     413,   414,   415,   416,     0,   417,   418,   419,   420,   421,
       0,     0,     0,     0,     0,   422,   423,   424,     0,   425,
     426,     0,   427,     0,     0,   428,     0,     0,   429,   430,
     431,   432,   433,   434,     0,     0,   435,   436,     0,   437,
     438,   439,   440,   441,   442,     0,     0,   443,   444,   445,
     446,     0,   447,   448,     0,     0,   449,   450,   451,   452,
       0,   134,   453,   454,     0,   455,   456,   457,   458,     0,
       0,     0,     0,     0,   459,   460,     0,     0,     0,   461,
     462,   463,   464,     0,   465,   466,     0,   467,   468,     0,
     469,   470,     0,     0,   471,     0,     0,   472,     0,   473,
       0,   474,   475,     0,     0,     0,     0,     0,     0,   476,
       0,     0,   477,     0,     0,     0,   478,   479,   480,   481,
     482,     0,     0,     0,     0,     0,     0,   483,   484,     0,
     485,   486,   487,     0,   137,   488,   138,   139,   140,   141,
     142,     0,     0,   143,     0,     0,     0,   144,     0,     0,
     145,     0,   146,   147,   148,   149,   150,   151,     0,   152,
       0,     0,     0,   153,     0,     0,     0,   154,     0,     0,
     155,   156,   157,     0,   158,     0,   159,   160,     0,     0,
     161,     0,     0,   162,   163,     0,   164,   165,     0,   166,
       0,   167,   168,   169,   170,   171,   172,     0,   173,   174,
       0,   175,   176,   177,   178,   179,   180,   181,   182,   183,
       0,   184,   185,     0,   186,   187,   188,   189,   190,     0,
       0,     0,   191,     0,     0,   192,     0,   193,     0,     0,
     194,     0,     0,     0,   195,   196,   197,     0,     0,   198,
       0,     0,     0,     0,   199,   200,     0,     0,     0,     0,
     201,   202,     0,   203,     0,     0,     0,   204,     0,   205,
     206,   207,   208,   209,     0,     0,     0,   210,     0,     0,
     211,   212,   213,     0,     0,     0,   214,     0,   215,   216,
       0,   217,   218,   219,     0,     0,   220,   221,     0,   222,
     223,   224,   225,   226,   227,     0,     0,   228,   229,   230,
     231,   232,     0,     0,   233,   234,     0,   235,   236,   237,
       0,     0,   238,     0,     0,     0,   239,   240,     0,   241,
       0,   242,     0,   243,   244,   245,   246,     0,   247,     0,
     248,     0,     0,     0,   249,   250,     0,   251,     0,     0,
     252,   253,     0,     0,     0,   254,   255,   256,   257,     0,
       0,   258,   259,   260,     0,     0,   261,     0,     0,     0,
       0,   262,   263,     0,     0,     0,   264,     0,     0,     0,
     265,   266,     0,   267,   268,     0,     0,     0,   269,     0,
       0,   270,   271,     0,     0,   272,     0,     0,   273,   274,
       0,     0,     0,     0,     0,   275,   276,     0,   277,     0,
     278,     0,   279,   280,     0,     0,     0,     0,     0,     0,
       0,   281,     0,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
       0,   299,   300,   301,     0,   302,   303,   304,   305,     0,
     306,   307,     0,     0,     0,     0,   308,   309,   310,   311,
     312,   313,     0,     0,   314,   315,     0,   316,     0,   317,
       0,   318,   319,   320,   321,   322,   323,   324,   325,   326,
       0,     0,   327,   328,     0,     0,   329,   330,   331,   332,
       0,     0,     0,   333,   334,     0,     0,     0,   335,     0,
     336,   337,   338,     0,   339,   340,   341,     0,   342,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   343,   344,
     345,     0,   346,   347,     0,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,     0,     0,   358,   359,   360,
       0,   361,     0,   362,   363,   364,   365,   366,     0,   367,
     368,   369,     0,     0,   370,     0,     0,     0,   371,   372,
     373,   374,   375,     0,     0,   376,   377,   378,   379,   380,
       0,   381,   382,     0,   383,   384,   385,     0,     0,   386,
       0,   387,     0,   388,   389,     0,   390,   391,   392,     0,
     393,     0,     0,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,     0,   405,   406,     0,     0,     0,
     407,   408,   409,   410,     0,     0,     0,   411,     0,     0,
       0,   412,     0,   413,   414,   415,   416,     0,   417,   418,
     419,   420,   421,     0,     0,     0,     0,     0,   422,   423,
     424,     0,   425,   426,     0,   427,     0,     0,   428,     0,
       0,   429,   430,   431,   432,   433,   434,     0,     0,   435,
     436,     0,   437,   438,   439,   440,   441,   442,     0,     0,
     443,   444,   445,   446,     0,   447,   448,     0,     0,   449,
     450,   451,   452,     0,     0,   453,   454,     0,   455,   456,
     457,   458,     0,     0,     0,     0,     0,   459,   460,     0,
       0,     0,   461,   462,   463,   464,     0,   465,   466,     0,
     467,   468,     0,   469,   470,     0,     0,   471,     0,     0,
     472,     0,   473,     0,   474,   475,     0,     0,     0,     0,
       0,     0,   476,     0,     0,   477,     0,     0,     0,   478,
     479,   480,   481,   482,     0,     0,     0,     0,     0,     0,
     483,   484,     0,   485,   486,   487,     0,   137,   488,   138,
     139,   140,   141,   142,     0,     0,   143,     0,     0,     0,
     144,     0,     0,   145,     0,   146,   147,   148,   149,   150,
     151,     0,   152,     0,     0,     0,   153,     0,     0,     0,
     154,     0,     0,   155,   156,   157,     0,   158,     0,   159,
     160,     0,     0,   161,     0,     0,   162,   163,     0,   164,
     165,     0,   166,     0,   167,   168,   169,   170,   171,   172,
       0,   173,   174,     0,   175,   176,   177,   178,   179,   180,
     181,   182,   183,     0,   184,   185,     0,   186,   187,   188,
     189,   190,     0,     0,     0,   191,     0,     0,   192,     0,
     193,     0,     0,   194,     0,     0,     0,   195,   196,   197,
       0,     0,   198,     0,     0,     0,     0,   199,   200,     0,
       0,     0,     0,   201,   202,     0,   203,     0,     0,     0,
     204,     0,   205,   206,   207,   208,   209,     0,     0,     0,
     210,     0,     0,   211,   212,   213,     0,     0,     0,   214,
       0,   215,   216,     0,   217,   218,   219,     0,     0,   220,
     221,     0,   222,   223,   224,   225,   226,   227,     0,     0,
     228,   229,   230,   231,   232,     0,     0,   233,   234,     0,
     235,  1798,   237,     0,     0,   238,     0,     0,     0,   239,
     240,     0,   241,     0,   242,     0,   243,   244,   245,   246,
       0,   247,     0,   248,     0,     0,     0,   249,   250,     0,
     251,     0,     0,   252,   253,     0,     0,     0,   254,   255,
     256,   257,     0,     0,   258,   259,   260,     0,     0,   261,
       0,     0,     0,     0,   262,   263,     0,     0,     0,   264,
       0,     0,     0,   265,   266,     0,   267,   268,     0,     0,
       0,   269,     0,     0,   270,   271,     0,     0,   272,     0,
       0,   273,   274,     0,     0,     0,     0,     0,   275,   276,
       0,   277,     0,   278,     0,   279,   280,     0,     0,     0,
       0,     0,     0,     0,   281,     0,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,     0,   299,   300,   301,     0,   302,   303,
     304,   305,     0,   306,   307,     0,     0,     0,     0,   308,
     309,   310,   311,   312,   313,     0,     0,   314,   315,     0,
     316,     0,   317,     0,   318,   319,   320,   321,   322,   323,
     324,   325,   326,     0,     0,   327,   328,     0,     0,   329,
    1799,   331,   332,     0,     0,     0,   333,   334,     0,     0,
       0,   335,     0,   336,   337,   338,     0,   339,   340,   341,
       0,   342,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   343,   344,   345,     0,   346,   347,     0,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,     0,     0,
     358,   359,   360,     0,   361,     0,   362,   363,   364,   365,
     366,     0,   367,   368,   369,     0,     0,   370,     0,     0,
       0,   371,   372,   373,   374,   375,     0,     0,   376,   377,
     378,   379,   380,     0,   381,   382,     0,   383,   384,   385,
       0,     0,   386,     0,   387,     0,   388,   389,     0,   390,
     391,   392,     0,   393,     0,     0,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,     0,   405,   406,
       0,     0,     0,   407,   408,   409,   410,     0,     0,     0,
     411,     0,     0,     0,   412,     0,   413,   414,   415,   416,
       0,   417,   418,   419,   420,   421,     0,     0,     0,     0,
       0,   422,   423,   424,     0,   425,   426,     0,   427,     0,
       0,   428,     0,     0,   429,   430,   431,   432,   433,   434,
       0,     0,   435,   436,     0,   437,   438,   439,   440,   441,
     442,     0,     0,   443,   444,   445,   446,     0,   447,   448,
       0,     0,   449,   450,   451,   452,     0,     0,   453,   454,
       0,   455,   456,   457,   458,     0,     0,     0,     0,     0,
     459,   460,     0,     0,     0,   461,   462,   463,   464,     0,
     465,   466,     0,   467,   468,     0,   469,   470,     0,     0,
     471,     0,     0,   472,     0,   473,     0,   474,   475,     0,
       0,     0,     0,     0,     0,   476,     0,     0,   477,     0,
       0,     0,   478,   479,   480,   481,   482,     0,     0,     0,
       0,     0,     0,   483,   484,     0,   485,   486,   487,     0,
     137,   488,   138,   139,   140,   141,   142,     0,     0,   143,
       0,     0,     0,   144,     0,     0,     0,     0,   146,   147,
     148,   149,   150,     0,     0,  -366,     0,     0,     0,   153,
       0,     0,     0,   154,     0,     0,   155,   156,   157,     0,
     158,     0,     0,     0,     0,     0,   161,  3969,     0,   162,
     163,     0,   164,     0,     0,     0,     0,   167,   168,   169,
    3970,   171,   172,     0,   173,   174,     0,   175,   176,     0,
     178,     0,   180,   181,   182,   183,     0,   184,   185,     0,
     186,   187,   188,     0,   190,     0,     0,     0,   191,     0,
       0,   192,     0,   193,     0,     0,   194,     0,     0,     0,
     195,   196,   197,     0,     0,   198,     0,     0,     0,     0,
     199,     0,     0,     0,     0,     0,   201,   202,     0,   203,
       0,     0,     0,   204,     0,   205,   206,   207,   208,   209,
       0,     0,     0,     0,     0,     0,   211,   212,   213,     0,
    -336,  -336,   214,     0,  -336,   216,     0,   217,   218,   219,
       0,     0,   220,   221,     0,   222,   223,   224,   225,   226,
       0,     0,     0,   228,   229,   230,   231,   232,     0,     0,
     233,   234,  3971,   235,   236,   237,     0,     0,     0,     0,
       0,     0,     0,   240,     0,   241,     0,   242,     0,   243,
     244,   245,   246,     0,   247,     0,   248,     0,     0,     0,
       0,   250,     0,     0,     0,     0,     0,   253,     0,     0,
       0,   254,   255,   256,   257,  3972,     0,   258,   259,   260,
       0,     0,   261,     0,     0,     0,     0,   262,     0,     0,
       0,     0,   264,     0,     0,     0,   265,   266,     0,   267,
     268,  3973,     0,     0,   269,     0,     0,     0,   271,     0,
       0,   272,  3974,     0,   273,   274,     0,     0,     0,     0,
       0,   275,   276,     0,   277,     0,   278,     0,   279,   280,
       0,     0,     0,     0,  -321,     0,     0,   281,     0,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,     0,   299,   300,   301,
       0,   302,   303,   304,   305,     0,   306,   307,     0,     0,
       0,     0,   308,   309,   310,   311,   312,   313,     0,     0,
     314,   315,     0,   316,     0,   317,     0,   318,   319,   320,
     321,   322,   323,   324,   325,   326,     0,     0,   327,   328,
       0,     0,   329,   330,   331,   332,     0,     0,     0,     0,
     334,     0,     0,     0,   335,     0,   336,   337,   338,     0,
     339,   340,  3975,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   344,   345,     0,     0,   347,
       0,   348,   349,   350,   351,   352,   353,   354,   355,   356,
       0,     0,     0,     0,   359,   360,     0,   361,     0,   362,
     363,   364,   365,   366,     0,   367,   368,   369,     0,     0,
     370,     0,     0,     0,   371,   372,   373,   374,   375,     0,
       0,   376,   377,   378,   379,   380,     0,   381,     0,     0,
     383,     0,   385,  -321,     0,   386,     0,     0,     0,   388,
       0,     0,   390,   391,   392,  3976,   393,     0,     0,     0,
     395,   396,   397,   398,   399,   400,   401,     0,   403,   404,
       0,   405,     0,     0,     0,     0,   407,   408,   409,     0,
       0,     0,     0,   411,     0,     0,     0,   412,     0,     0,
     414,     0,   416,     0,   417,     0,     0,   420,   421,     0,
       0,     0,     0,     0,   422,   423,   424,     0,   425,   426,
       0,   427,     0,     0,   428,     0,     0,   429,     0,   431,
     432,   433,   434,     0,     0,     0,   436,     0,   437,   438,
     439,   440,   441,   442,     0,     0,   443,   444,   445,   446,
       0,   447,   448,     0,     0,   449,   450,   451,   452,     0,
       0,   453,   454,     0,   455,   456,   457,   458,     0,     0,
       0,     0,     0,   459,   460,     0,     0,     0,     0,   462,
     463,   464,     0,   465,   466,     0,   467,   468,     0,     0,
       0,     0,     0,   471,     0,     0,   472,     0,     0,     0,
     474,   475,     0,     0,     0,     0,     0,     0,   476,     0,
       0,   477,     0,     0,     0,   478,   479,   480,   481,   482,
       0,     0,  -321,     0,     0,     0,   483,     0,     0,   485,
       0,   487,     0,   137,   488,   138,   139,   140,   141,   142,
       0,     0,   143,     0,     0,     0,   144,     0,     0,     0,
       0,   146,   147,   148,   149,   150,     0,     0,  -366,     0,
       0,     0,   153,     0,     0,     0,   154,     0,     0,   155,
     156,   157,     0,   158,     0,     0,     0,     0,     0,   161,
    3969,     0,   162,   163,     0,   164,     0,     0,     0,     0,
     167,   168,   169,  3970,   171,   172,     0,   173,   174,     0,
     175,   176,     0,   178,     0,   180,   181,   182,   183,     0,
     184,   185,     0,   186,   187,   188,     0,   190,     0,     0,
       0,   191,     0,     0,   192,     0,   193,     0,     0,   194,
       0,     0,     0,   195,   196,   197,     0,     0,   198,     0,
       0,     0,     0,   199,     0,     0,     0,     0,     0,   201,
     202,     0,   203,     0,     0,     0,   204,     0,   205,   206,
     207,   208,   209,     0,     0,     0,     0,     0,     0,   211,
     212,   213,     0,  -357,     0,   214,     0,  -357,   216,     0,
     217,   218,   219,     0,     0,   220,   221,     0,   222,   223,
     224,   225,   226,     0,     0,     0,   228,   229,   230,   231,
     232,     0,     0,   233,   234,  3971,   235,   236,   237,     0,
       0,     0,     0,     0,     0,     0,   240,     0,   241,     0,
     242,     0,   243,   244,   245,   246,     0,   247,     0,   248,
       0,     0,     0,     0,   250,     0,     0,     0,     0,     0,
     253,     0,     0,     0,   254,   255,   256,   257,  3972,     0,
     258,   259,   260,     0,     0,   261,     0,     0,     0,     0,
     262,     0,     0,     0,     0,   264,     0,     0,     0,   265,
     266,     0,   267,   268,  3973,     0,     0,   269,     0,     0,
       0,   271,     0,     0,   272,  3974,     0,   273,   274,     0,
       0,     0,     0,     0,   275,   276,     0,   277,     0,   278,
       0,   279,   280,     0,     0,     0,     0,  -321,     0,     0,
     281,     0,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,     0,
     299,   300,   301,     0,   302,   303,   304,   305,     0,   306,
     307,     0,     0,     0,     0,   308,   309,   310,   311,   312,
     313,     0,     0,   314,   315,     0,   316,     0,   317,     0,
     318,   319,   320,   321,   322,   323,   324,   325,   326,     0,
       0,   327,   328,     0,     0,   329,   330,   331,   332,     0,
       0,     0,     0,   334,     0,     0,     0,   335,     0,   336,
     337,   338,     0,   339,   340,  3975,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   344,   345,
       0,     0,   347,     0,   348,   349,   350,   351,   352,   353,
     354,   355,   356,     0,     0,     0,     0,   359,   360,     0,
     361,     0,   362,   363,   364,   365,   366,     0,   367,   368,
     369,     0,     0,   370,     0,     0,     0,   371,   372,   373,
     374,   375,     0,     0,   376,   377,   378,   379,   380,     0,
     381,     0,     0,   383,     0,   385,  -321,     0,   386,     0,
       0,     0,   388,     0,     0,   390,   391,   392,  3976,   393,
       0,     0,     0,   395,   396,   397,   398,   399,   400,   401,
       0,   403,   404,     0,   405,     0,     0,     0,     0,   407,
     408,   409,     0,     0,     0,     0,   411,     0,     0,     0,
     412,     0,     0,   414,     0,   416,     0,   417,     0,     0,
     420,   421,     0,     0,     0,     0,     0,   422,   423,   424,
       0,   425,   426,     0,   427,     0,     0,   428,     0,     0,
     429,     0,   431,   432,   433,   434,     0,     0,     0,   436,
       0,   437,   438,   439,   440,   441,   442,     0,     0,   443,
     444,   445,   446,     0,   447,   448,     0,     0,   449,   450,
     451,   452,     0,     0,   453,   454,     0,   455,   456,   457,
     458,     0,     0,     0,     0,     0,   459,   460,     0,     0,
       0,     0,   462,   463,   464,     0,   465,   466,     0,   467,
     468,     0,     0,     0,     0,     0,   471,     0,     0,   472,
       0,     0,     0,   474,   475,     0,     0,     0,     0,     0,
       0,   476,     0,     0,   477,     0,     0,     0,   478,   479,
     480,   481,   482,  -357,     0,  -321,     0,     0,     0,   483,
       0,     0,   485,     0,   487,     0,   137,   488,   138,   139,
     140,   141,   142,     0,     0,   143,     0,     0,     0,   144,
       0,     0,     0,     0,   146,   147,   148,   149,   150,     0,
       0,  -366,     0,     0,     0,   153,     0,     0,     0,   154,
       0,     0,   155,   156,   157,     0,   158,     0,     0,     0,
       0,     0,   161,  3969,     0,   162,   163,     0,   164,     0,
       0,     0,     0,   167,   168,   169,  3970,   171,   172,     0,
     173,   174,     0,   175,   176,     0,   178,     0,   180,   181,
     182,   183,     0,   184,   185,     0,   186,   187,   188,     0,
     190,     0,     0,     0,   191,     0,     0,   192,     0,   193,
       0,     0,   194,     0,     0,     0,   195,   196,   197,     0,
       0,   198,     0,     0,     0,     0,   199,     0,     0,     0,
       0,     0,   201,   202,     0,   203,     0,     0,     0,   204,
       0,   205,   206,   207,   208,   209,     0,     0,     0,     0,
       0,     0,   211,   212,   213,     0,  -354,     0,   214,     0,
    -354,   216,     0,   217,   218,   219,     0,     0,   220,   221,
       0,   222,   223,   224,   225,   226,     0,     0,     0,   228,
     229,   230,   231,   232,     0,     0,   233,   234,  3971,   235,
     236,   237,     0,     0,     0,     0,     0,     0,     0,   240,
       0,   241,     0,   242,     0,   243,   244,   245,   246,     0,
     247,     0,   248,     0,     0,     0,     0,   250,     0,     0,
       0,     0,     0,   253,     0,     0,     0,   254,   255,   256,
     257,  3972,     0,   258,   259,   260,     0,     0,   261,     0,
       0,     0,     0,   262,     0,     0,     0,     0,   264,     0,
       0,     0,   265,   266,     0,   267,   268,  3973,     0,     0,
     269,     0,     0,     0,   271,     0,     0,   272,  3974,     0,
     273,   274,     0,     0,     0,     0,     0,   275,   276,     0,
     277,     0,   278,     0,   279,   280,     0,     0,     0,     0,
    -321,     0,     0,   281,     0,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,     0,   299,   300,   301,     0,   302,   303,   304,
     305,     0,   306,   307,     0,     0,     0,     0,   308,   309,
     310,   311,   312,   313,     0,     0,   314,   315,     0,   316,
       0,   317,     0,   318,   319,   320,   321,   322,   323,   324,
     325,   326,     0,     0,   327,   328,     0,     0,   329,   330,
     331,   332,     0,     0,     0,     0,   334,     0,     0,     0,
     335,     0,   336,   337,   338,     0,   339,   340,  3975,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   344,   345,     0,     0,   347,     0,   348,   349,   350,
     351,   352,   353,   354,   355,   356,     0,     0,     0,     0,
     359,   360,     0,   361,     0,   362,   363,   364,   365,   366,
       0,   367,   368,   369,     0,     0,   370,     0,     0,     0,
     371,   372,   373,   374,   375,     0,     0,   376,   377,   378,
     379,   380,     0,   381,     0,     0,   383,     0,   385,  -321,
       0,   386,     0,     0,     0,   388,     0,     0,   390,   391,
     392,  3976,   393,     0,     0,     0,   395,   396,   397,   398,
     399,   400,   401,     0,   403,   404,     0,   405,     0,     0,
       0,     0,   407,   408,   409,     0,     0,     0,     0,   411,
       0,     0,     0,   412,     0,     0,   414,     0,   416,     0,
     417,     0,     0,   420,   421,     0,     0,     0,     0,     0,
     422,   423,   424,     0,   425,   426,     0,   427,     0,     0,
     428,     0,     0,   429,     0,   431,   432,   433,   434,     0,
       0,     0,   436,     0,   437,   438,   439,   440,   441,   442,
       0,     0,   443,   444,   445,   446,     0,   447,   448,     0,
       0,   449,   450,   451,   452,     0,     0,   453,   454,     0,
     455,   456,   457,   458,     0,     0,     0,     0,     0,   459,
     460,     0,     0,     0,     0,   462,   463,   464,     0,   465,
     466,     0,   467,   468,     0,     0,     0,     0,     0,   471,
       0,     0,   472,     0,     0,     0,   474,   475,     0,     0,
       0,     0,     0,     0,   476,     0,     0,   477,     0,     0,
       0,   478,   479,   480,   481,   482,  -354,     0,  -321,     0,
       0,     0,   483,     0,     0,   485,     0,   487,     0,   137,
     488,   138,   139,   140,   141,   142,     0,     0,   143,     0,
       0,     0,   144,     0,     0,     0,     0,   146,   147,   148,
     149,   150,     0,     0,  -366,     0,     0,     0,   153,     0,
       0,     0,   154,     0,     0,   155,   156,   157,     0,   158,
       0,     0,     0,     0,     0,   161,  3969,     0,   162,   163,
       0,   164,     0,     0,     0,     0,   167,   168,   169,  3970,
     171,   172,     0,   173,   174,     0,   175,   176,     0,   178,
       0,   180,   181,   182,   183,     0,   184,   185,     0,   186,
     187,   188,     0,   190,     0,     0,     0,   191,     0,     0,
     192,     0,   193,     0,     0,   194,     0,     0,     0,   195,
     196,   197,     0,     0,   198,     0,     0,     0,     0,   199,
       0,     0,     0,     0,     0,   201,   202,     0,   203,     0,
       0,     0,   204,     0,   205,   206,   207,   208,   209,     0,
       0,     0,     0,     0,     0,   211,   212,   213,     0,     0,
       0,   214,     0,  4296,   216,     0,   217,   218,   219,     0,
       0,   220,   221,     0,   222,   223,   224,   225,   226,     0,
       0,     0,   228,   229,   230,   231,   232,     0,     0,   233,
     234,  3971,   235,   236,   237,     0,     0,     0,     0,     0,
       0,     0,   240,     0,   241,     0,   242,     0,   243,   244,
     245,   246,     0,   247,     0,   248,     0,     0,     0,     0,
     250,     0,     0,     0,     0,     0,   253,     0,     0,     0,
     254,   255,   256,   257,  3972,     0,   258,   259,   260,     0,
       0,   261,     0,     0,     0,     0,   262,     0,     0,     0,
       0,   264,     0,     0,     0,   265,   266,     0,   267,   268,
    3973,     0,     0,   269,     0,     0,     0,   271,     0,     0,
     272,  3974,     0,   273,   274,     0,     0,     0,     0,     0,
     275,   276,     0,   277,     0,   278,     0,   279,   280,     0,
       0,     0,     0,  -321,     0,     0,   281,     0,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,     0,   299,   300,   301,     0,
     302,   303,   304,   305,     0,   306,   307,     0,     0,     0,
       0,   308,   309,   310,   311,   312,   313,     0,     0,   314,
     315,     0,   316,     0,   317,     0,   318,   319,   320,   321,
     322,   323,   324,   325,   326,     0,     0,   327,   328,     0,
       0,   329,   330,   331,   332,     0,     0,     0,     0,   334,
       0,     0,     0,   335,     0,   336,   337,   338,     0,   339,
     340,  3975,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   344,   345,     0,     0,   347,     0,
     348,   349,   350,   351,   352,   353,   354,   355,   356,     0,
       0,     0,     0,   359,   360,     0,   361,     0,   362,   363,
     364,   365,   366,     0,   367,   368,   369,     0,     0,   370,
       0,     0,     0,   371,   372,   373,   374,   375,     0,     0,
     376,   377,   378,   379,   380,     0,   381,     0,     0,   383,
       0,   385,  -321,     0,   386,     0,     0,     0,   388,     0,
       0,   390,   391,   392,  3976,   393,     0,     0,     0,   395,
     396,   397,   398,   399,   400,   401,     0,   403,   404,     0,
     405,     0,     0,     0,     0,   407,   408,   409,     0,     0,
       0,     0,   411,     0,     0,     0,   412,     0,     0,   414,
       0,   416,     0,   417,     0,     0,   420,   421,     0,     0,
       0,     0,     0,   422,   423,   424,     0,   425,   426,     0,
     427,     0,     0,   428,     0,     0,   429,     0,   431,   432,
     433,   434,     0,     0,     0,   436,     0,   437,   438,   439,
     440,   441,   442,     0,     0,   443,   444,   445,   446,     0,
     447,   448,     0,     0,   449,   450,   451,   452,     0,     0,
     453,   454,     0,   455,   456,   457,   458,     0,     0,     0,
       0,     0,   459,   460,     0,     0,     0,     0,   462,   463,
     464,     0,   465,   466,     0,   467,   468,     0,     0,     0,
       0,     0,   471,     0,     0,   472,     0,     0,     0,   474,
     475,     0,     0,     0,     0,     0,     0,   476,     0,     0,
     477,     0,     0,     0,   478,   479,   480,   481,   482,     0,
       0,  -321,     0,     0,     0,   483,     0,     0,   485,     0,
     487,     0,   137,   488,   138,   139,   140,   141,   142,     0,
       0,   143,     0,     0,     0,   144,     0,     0,     0,     0,
     146,   147,   148,   149,   150,     0,     0,  -366,     0,     0,
       0,   153,     0,     0,     0,   154,     0,     0,   155,   156,
     157,     0,   158,     0,     0,     0,     0,     0,   161,  3969,
       0,   162,   163,     0,   164,     0,     0,     0,     0,   167,
     168,   169,  3970,   171,   172,     0,   173,   174,     0,   175,
     176,     0,   178,     0,   180,   181,   182,   183,     0,   184,
     185,     0,   186,   187,   188,     0,   190,     0,     0,     0,
     191,     0,     0,   192,     0,   193,     0,     0,   194,     0,
       0,     0,   195,   196,   197,     0,     0,   198,     0,     0,
       0,     0,   199,     0,     0,     0,     0,     0,   201,   202,
       0,   203,     0,     0,     0,   204,     0,   205,   206,   207,
     208,   209,     0,     0,     0,     0,     0,     0,   211,   212,
     213,     0,     0,     0,   214,     0,  -359,   216,     0,   217,
     218,   219,     0,     0,   220,   221,     0,   222,   223,   224,
     225,   226,     0,     0,     0,   228,   229,   230,   231,   232,
       0,     0,   233,   234,  3971,   235,   236,   237,     0,     0,
       0,     0,     0,     0,     0,   240,     0,   241,     0,   242,
       0,   243,   244,   245,   246,     0,   247,     0,   248,     0,
       0,     0,     0,   250,     0,     0,     0,     0,     0,   253,
       0,     0,     0,   254,   255,   256,   257,  3972,     0,   258,
     259,   260,     0,     0,   261,     0,     0,     0,     0,   262,
       0,     0,     0,     0,   264,     0,     0,     0,   265,   266,
       0,   267,   268,  3973,     0,     0,   269,     0,     0,     0,
     271,     0,     0,   272,  3974,     0,   273,   274,     0,     0,
       0,     0,     0,   275,   276,     0,   277,     0,   278,     0,
     279,   280,     0,     0,     0,     0,  -321,     0,     0,   281,
       0,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,     0,   299,
     300,   301,     0,   302,   303,   304,   305,     0,   306,   307,
       0,     0,     0,     0,   308,   309,   310,   311,   312,   313,
       0,     0,   314,   315,     0,   316,     0,   317,     0,   318,
     319,   320,   321,   322,   323,   324,   325,   326,     0,     0,
     327,   328,     0,     0,   329,   330,   331,   332,     0,     0,
       0,     0,   334,     0,     0,     0,   335,     0,   336,   337,
     338,     0,   339,   340,  3975,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   344,   345,     0,
       0,   347,     0,   348,   349,   350,   351,   352,   353,   354,
     355,   356,     0,     0,     0,     0,   359,   360,     0,   361,
       0,   362,   363,   364,   365,   366,     0,   367,   368,   369,
       0,     0,   370,     0,     0,     0,   371,   372,   373,   374,
     375,     0,     0,   376,   377,   378,   379,   380,     0,   381,
       0,     0,   383,     0,   385,  -321,     0,   386,     0,     0,
       0,   388,     0,     0,   390,   391,   392,  3976,   393,     0,
       0,     0,   395,   396,   397,   398,   399,   400,   401,     0,
     403,   404,     0,   405,     0,     0,     0,     0,   407,   408,
     409,     0,     0,     0,     0,   411,     0,     0,     0,   412,
       0,     0,   414,     0,   416,     0,   417,     0,     0,   420,
     421,     0,     0,     0,     0,     0,   422,   423,   424,     0,
     425,   426,     0,   427,     0,     0,   428,     0,     0,   429,
       0,   431,   432,   433,   434,     0,     0,     0,   436,     0,
     437,   438,   439,   440,   441,   442,     0,     0,   443,   444,
     445,   446,     0,   447,   448,     0,     0,   449,   450,   451,
     452,     0,     0,   453,   454,     0,   455,   456,   457,   458,
       0,     0,     0,     0,     0,   459,   460,     0,     0,     0,
       0,   462,   463,   464,     0,   465,   466,     0,   467,   468,
       0,     0,     0,     0,     0,   471,     0,     0,   472,     0,
       0,     0,   474,   475,     0,     0,     0,     0,     0,     0,
     476,     0,     0,   477,     0,     0,     0,   478,   479,   480,
     481,   482,     0,     0,  -321,     0,     0,     0,   483,     0,
       0,   485,     0,   487,     0,   137,   488,   138,   139,   140,
     141,   142,     0,     0,   143,     0,     0,     0,   144,     0,
       0,     0,     0,   146,   147,   148,   149,   150,     0,     0,
    -366,     0,     0,     0,   153,     0,     0,     0,   154,     0,
       0,   155,   156,   157,     0,   158,     0,     0,     0,     0,
       0,   161,  3969,     0,   162,   163,     0,   164,     0,     0,
       0,     0,   167,   168,   169,  3970,   171,   172,     0,   173,
     174,     0,   175,   176,     0,   178,     0,   180,   181,   182,
     183,     0,   184,   185,     0,   186,   187,   188,     0,   190,
       0,     0,     0,   191,     0,     0,   192,     0,   193,     0,
       0,   194,     0,     0,     0,   195,   196,   197,     0,     0,
     198,     0,     0,     0,     0,   199,     0,     0,     0,     0,
       0,   201,   202,     0,   203,     0,     0,     0,   204,     0,
     205,   206,   207,   208,   209,     0,     0,     0,     0,     0,
       0,   211,   212,   213,     0,     0,     0,   214,     0,  4404,
     216,     0,   217,   218,   219,     0,     0,   220,   221,     0,
     222,   223,   224,   225,   226,     0,     0,     0,   228,   229,
     230,   231,   232,     0,     0,   233,   234,  3971,   235,   236,
     237,     0,     0,     0,     0,     0,     0,     0,   240,     0,
     241,     0,   242,     0,   243,   244,   245,   246,     0,   247,
       0,   248,     0,     0,     0,     0,   250,     0,     0,     0,
       0,     0,   253,     0,     0,     0,   254,   255,   256,   257,
    3972,     0,   258,   259,   260,     0,     0,   261,     0,     0,
       0,     0,   262,     0,     0,     0,     0,   264,     0,     0,
       0,   265,   266,     0,   267,   268,  3973,     0,     0,   269,
       0,     0,     0,   271,     0,     0,   272,  3974,     0,   273,
     274,     0,     0,     0,     0,     0,   275,   276,     0,   277,
       0,   278,     0,   279,   280,     0,     0,     0,     0,  -321,
       0,     0,   281,     0,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,     0,   299,   300,   301,     0,   302,   303,   304,   305,
       0,   306,   307,     0,     0,     0,     0,   308,   309,   310,
     311,   312,   313,     0,     0,   314,   315,     0,   316,     0,
     317,     0,   318,   319,   320,   321,   322,   323,   324,   325,
     326,     0,     0,   327,   328,     0,     0,   329,   330,   331,
     332,     0,     0,     0,     0,   334,     0,     0,     0,   335,
       0,   336,   337,   338,     0,   339,   340,  3975,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     344,   345,     0,     0,   347,     0,   348,   349,   350,   351,
     352,   353,   354,   355,   356,     0,     0,     0,     0,   359,
     360,     0,   361,     0,   362,   363,   364,   365,   366,     0,
     367,   368,   369,     0,     0,   370,     0,     0,     0,   371,
     372,   373,   374,   375,     0,     0,   376,   377,   378,   379,
     380,     0,   381,     0,     0,   383,     0,   385,  -321,     0,
     386,     0,     0,     0,   388,     0,     0,   390,   391,   392,
    3976,   393,     0,     0,     0,   395,   396,   397,   398,   399,
     400,   401,     0,   403,   404,     0,   405,     0,     0,     0,
       0,   407,   408,   409,     0,     0,     0,     0,   411,     0,
       0,     0,   412,     0,     0,   414,     0,   416,     0,   417,
       0,     0,   420,   421,     0,     0,     0,     0,     0,   422,
     423,   424,     0,   425,   426,     0,   427,     0,     0,   428,
       0,     0,   429,     0,   431,   432,   433,   434,     0,     0,
       0,   436,     0,   437,   438,   439,   440,   441,   442,     0,
       0,   443,   444,   445,   446,     0,   447,   448,     0,     0,
     449,   450,   451,   452,     0,     0,   453,   454,     0,   455,
     456,   457,   458,     0,     0,     0,     0,     0,   459,   460,
       0,     0,     0,     0,   462,   463,   464,     0,   465,   466,
       0,   467,   468,     0,     0,     0,     0,     0,   471,     0,
       0,   472,     0,     0,     0,   474,   475,     0,     0,     0,
       0,     0,     0,   476,     0,     0,   477,     0,     0,     0,
     478,   479,   480,   481,   482,     0,     0,  -321,     0,     0,
       0,   483,     0,     0,   485,     0,   487,     0,   137,   488,
     138,   139,   140,   141,   142,     0,     0,   143,     0,     0,
       0,   144,     0,     0,     0,     0,   146,   147,   148,   149,
     150,     0,     0,  -366,     0,     0,     0,   153,     0,     0,
       0,   154,     0,     0,   155,   156,   157,     0,   158,     0,
       0,     0,     0,     0,   161,  3969,     0,   162,   163,     0,
     164,     0,     0,     0,     0,   167,   168,   169,  3970,   171,
     172,     0,   173,   174,     0,   175,   176,     0,   178,     0,
     180,   181,   182,   183,     0,   184,   185,     0,   186,   187,
     188,     0,   190,     0,     0,     0,   191,     0,     0,   192,
       0,   193,     0,     0,   194,     0,     0,     0,   195,   196,
     197,     0,     0,   198,     0,     0,     0,     0,   199,     0,
       0,     0,     0,     0,   201,   202,     0,   203,     0,     0,
       0,   204,     0,   205,   206,   207,   208,   209,     0,     0,
       0,     0,     0,     0,   211,   212,   213,     0,     0,     0,
     214,     0,  4450,   216,     0,   217,   218,   219,     0,     0,
     220,   221,     0,   222,   223,   224,   225,   226,     0,     0,
       0,   228,   229,   230,   231,   232,     0,     0,   233,   234,
    3971,   235,   236,   237,     0,     0,     0,     0,     0,     0,
       0,   240,     0,   241,     0,   242,     0,   243,   244,   245,
     246,     0,   247,     0,   248,     0,     0,     0,     0,   250,
       0,     0,     0,     0,     0,   253,     0,     0,     0,   254,
     255,   256,   257,  3972,     0,   258,   259,   260,     0,     0,
     261,     0,     0,     0,     0,   262,     0,     0,     0,     0,
     264,     0,     0,     0,   265,   266,     0,   267,   268,  3973,
       0,     0,   269,     0,     0,     0,   271,     0,     0,   272,
    3974,     0,   273,   274,     0,     0,     0,     0,     0,   275,
     276,     0,   277,     0,   278,     0,   279,   280,     0,     0,
       0,     0,  -321,     0,     0,   281,     0,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,     0,   299,   300,   301,     0,   302,
     303,   304,   305,     0,   306,   307,     0,     0,     0,     0,
     308,   309,   310,   311,   312,   313,     0,     0,   314,   315,
       0,   316,     0,   317,     0,   318,   319,   320,   321,   322,
     323,   324,   325,   326,     0,     0,   327,   328,     0,     0,
     329,   330,   331,   332,     0,     0,     0,     0,   334,     0,
       0,     0,   335,     0,   336,   337,   338,     0,   339,   340,
    3975,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   344,   345,     0,     0,   347,     0,   348,
     349,   350,   351,   352,   353,   354,   355,   356,     0,     0,
       0,     0,   359,   360,     0,   361,     0,   362,   363,   364,
     365,   366,     0,   367,   368,   369,     0,     0,   370,     0,
       0,     0,   371,   372,   373,   374,   375,     0,     0,   376,
     377,   378,   379,   380,     0,   381,     0,     0,   383,     0,
     385,  -321,     0,   386,     0,     0,     0,   388,     0,     0,
     390,   391,   392,  3976,   393,     0,     0,     0,   395,   396,
     397,   398,   399,   400,   401,     0,   403,   404,     0,   405,
       0,     0,     0,     0,   407,   408,   409,     0,     0,     0,
       0,   411,     0,     0,     0,   412,     0,     0,   414,     0,
     416,     0,   417,     0,     0,   420,   421,     0,     0,     0,
       0,     0,   422,   423,   424,     0,   425,   426,     0,   427,
       0,     0,   428,     0,     0,   429,     0,   431,   432,   433,
     434,     0,     0,     0,   436,     0,   437,   438,   439,   440,
     441,   442,     0,     0,   443,   444,   445,   446,     0,   447,
     448,     0,     0,   449,   450,   451,   452,     0,     0,   453,
     454,     0,   455,   456,   457,   458,     0,     0,     0,     0,
       0,   459,   460,     0,     0,     0,     0,   462,   463,   464,
       0,   465,   466,     0,   467,   468,     0,     0,     0,     0,
       0,   471,     0,     0,   472,     0,     0,     0,   474,   475,
       0,     0,     0,     0,     0,     0,   476,     0,     0,   477,
       0,     0,     0,   478,   479,   480,   481,   482,     0,     0,
    -321,     0,     0,     0,   483,     0,     0,   485,     0,   487,
       0,   137,   488,   138,   139,   140,   141,   142,     0,     0,
     143,     0,     0,     0,   144,     0,     0,     0,     0,   146,
     147,   148,   149,   150,     0,     0,  -366,     0,     0,     0,
     153,     0,     0,     0,   154,     0,     0,   155,   156,   157,
       0,   158,     0,     0,     0,     0,     0,   161,  3969,     0,
     162,   163,     0,   164,     0,     0,     0,     0,   167,   168,
     169,  3970,   171,   172,     0,   173,   174,     0,   175,   176,
       0,   178,     0,   180,   181,   182,   183,     0,   184,   185,
       0,   186,   187,   188,     0,   190,     0,     0,     0,   191,
       0,     0,   192,     0,   193,     0,     0,   194,     0,     0,
       0,   195,   196,   197,     0,     0,   198,     0,     0,     0,
       0,   199,     0,     0,     0,     0,     0,   201,   202,     0,
     203,     0,     0,     0,   204,     0,   205,   206,   207,   208,
     209,     0,     0,     0,     0,     0,     0,   211,   212,   213,
       0,     0,     0,   214,     0,  -340,   216,     0,   217,   218,
     219,     0,     0,   220,   221,     0,   222,   223,   224,   225,
     226,     0,     0,     0,   228,   229,   230,   231,   232,     0,
       0,   233,   234,  3971,   235,   236,   237,     0,     0,     0,
       0,     0,     0,     0,   240,     0,   241,     0,   242,     0,
     243,   244,   245,   246,     0,   247,     0,   248,     0,     0,
       0,     0,   250,     0,     0,     0,     0,     0,   253,     0,
       0,     0,   254,   255,   256,   257,  3972,     0,   258,   259,
     260,     0,     0,   261,     0,     0,     0,     0,   262,     0,
       0,     0,     0,   264,     0,     0,     0,   265,   266,     0,
     267,   268,  3973,     0,     0,   269,     0,     0,     0,   271,
       0,     0,   272,  3974,     0,   273,   274,     0,     0,     0,
       0,     0,   275,   276,     0,   277,     0,   278,     0,   279,
     280,     0,     0,     0,     0,  -321,     0,     0,   281,     0,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,     0,   299,   300,
     301,     0,   302,   303,   304,   305,     0,   306,   307,     0,
       0,     0,     0,   308,   309,   310,   311,   312,   313,     0,
       0,   314,   315,     0,   316,     0,   317,     0,   318,   319,
     320,   321,   322,   323,   324,   325,   326,     0,     0,   327,
     328,     0,     0,   329,   330,   331,   332,     0,     0,     0,
       0,   334,     0,     0,     0,   335,     0,   336,   337,   338,
       0,   339,   340,  3975,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   344,   345,     0,     0,
     347,     0,   348,   349,   350,   351,   352,   353,   354,   355,
     356,     0,     0,     0,     0,   359,   360,     0,   361,     0,
     362,   363,   364,   365,   366,     0,   367,   368,   369,     0,
       0,   370,     0,     0,     0,   371,   372,   373,   374,   375,
       0,     0,   376,   377,   378,   379,   380,     0,   381,     0,
       0,   383,     0,   385,  -321,     0,   386,     0,     0,     0,
     388,     0,     0,   390,   391,   392,  3976,   393,     0,     0,
       0,   395,   396,   397,   398,   399,   400,   401,     0,   403,
     404,     0,   405,     0,     0,     0,     0,   407,   408,   409,
       0,     0,     0,     0,   411,     0,     0,     0,   412,     0,
       0,   414,     0,   416,     0,   417,     0,     0,   420,   421,
       0,     0,     0,     0,     0,   422,   423,   424,     0,   425,
     426,     0,   427,     0,     0,   428,     0,     0,   429,     0,
     431,   432,   433,   434,     0,     0,     0,   436,     0,   437,
     438,   439,   440,   441,   442,     0,     0,   443,   444,   445,
     446,     0,   447,   448,     0,     0,   449,   450,   451,   452,
       0,     0,   453,   454,     0,   455,   456,   457,   458,     0,
       0,     0,     0,     0,   459,   460,     0,     0,     0,     0,
     462,   463,   464,     0,   465,   466,     0,   467,   468,     0,
       0,     0,     0,     0,   471,     0,     0,   472,     0,     0,
       0,   474,   475,     0,     0,     0,     0,     0,     0,   476,
       0,     0,   477,     0,     0,     0,   478,   479,   480,   481,
     482,     0,     0,  -321,     0,     0,     0,   483,     0,     0,
     485,     0,   487,     0,   137,   488,   138,   139,   140,   141,
     142,     0,     0,   143,     0,     0,     0,   144,     0,     0,
       0,     0,   146,   147,   148,   149,   150,     0,     0,  -366,
       0,     0,     0,   153,     0,     0,     0,   154,     0,     0,
     155,   156,   157,     0,   158,     0,     0,     0,     0,     0,
     161,  3969,     0,   162,   163,     0,   164,     0,     0,     0,
       0,   167,   168,   169,  3970,   171,   172,     0,   173,   174,
       0,   175,   176,     0,   178,     0,   180,   181,   182,   183,
       0,   184,   185,     0,   186,   187,   188,     0,   190,     0,
       0,     0,   191,     0,     0,   192,     0,   193,     0,     0,
     194,     0,     0,     0,   195,   196,   197,     0,     0,   198,
       0,     0,     0,     0,   199,     0,     0,     0,     0,     0,
     201,   202,     0,   203,     0,     0,     0,   204,     0,   205,
     206,   207,   208,   209,     0,     0,     0,     0,     0,     0,
     211,   212,   213,     0,     0,     0,   214,     0,     0,   216,
       0,   217,   218,   219,     0,     0,   220,   221,     0,   222,
     223,   224,   225,   226,     0,     0,     0,   228,   229,   230,
     231,   232,     0,     0,   233,   234,  3971,   235,   236,   237,
       0,     0,     0,     0,     0,     0,     0,   240,     0,   241,
       0,   242,     0,   243,   244,   245,   246,     0,   247,     0,
     248,     0,     0,     0,     0,   250,     0,     0,     0,     0,
       0,   253,     0,     0,     0,   254,   255,   256,   257,  3972,
       0,   258,   259,   260,     0,     0,   261,     0,     0,     0,
       0,   262,     0,     0,     0,     0,   264,     0,     0,     0,
     265,   266,     0,   267,   268,  3973,     0,     0,   269,     0,
       0,     0,   271,     0,     0,   272,  3974,     0,   273,   274,
       0,     0,     0,     0,     0,   275,   276,     0,   277,     0,
     278,     0,   279,   280,     0,     0,     0,     0,  -321,     0,
       0,   281,     0,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
       0,   299,   300,   301,     0,   302,   303,   304,   305,     0,
     306,   307,     0,     0,     0,     0,   308,   309,   310,   311,
     312,   313,     0,     0,   314,   315,     0,   316,     0,   317,
       0,   318,   319,   320,   321,   322,   323,   324,   325,   326,
       0,     0,   327,   328,     0,     0,   329,   330,   331,   332,
       0,     0,     0,     0,   334,     0,     0,     0,   335,     0,
     336,   337,   338,     0,   339,   340,  3975,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   344,
     345,     0,     0,   347,     0,   348,   349,   350,   351,   352,
     353,   354,   355,   356,     0,     0,     0,     0,   359,   360,
       0,   361,     0,   362,   363,   364,   365,   366,     0,   367,
     368,   369,     0,     0,   370,     0,     0,     0,   371,   372,
     373,   374,   375,     0,     0,   376,   377,   378,   379,   380,
       0,   381,     0,     0,   383,     0,   385,  -321,     0,   386,
       0,     0,     0,   388,     0,     0,   390,   391,   392,  3976,
     393,     0,     0,     0,   395,   396,   397,   398,   399,   400,
     401,     0,   403,   404,     0,   405,     0,     0,     0,     0,
     407,   408,   409,     0,     0,     0,     0,   411,     0,     0,
       0,   412,     0,     0,   414,     0,   416,     0,   417,     0,
       0,   420,   421,     0,     0,     0,     0,     0,   422,   423,
     424,     0,   425,   426,     0,   427,     0,     0,   428,     0,
       0,   429,     0,   431,   432,   433,   434,     0,     0,     0,
     436,     0,   437,   438,   439,   440,   441,   442,     0,     0,
     443,   444,   445,   446,     0,   447,   448,     0,     0,   449,
     450,   451,   452,     0,     0,   453,   454,     0,   455,   456,
     457,   458,     0,     0,     0,     0,     0,   459,   460,     0,
       0,     0,     0,   462,   463,   464,     0,   465,   466,     0,
     467,   468,     0,     0,     0,     0,     0,   471,     0,     0,
     472,     0,     0,     0,   474,   475,     0,     0,     0,     0,
       0,     0,   476,     0,     0,   477,     0,     0,     0,   478,
     479,   480,   481,   482,     0,     0,  -321,     0,     0,     0,
     483,     0,     0,   485,     0,   487,     0,   137,   488,   138,
     139,   140,   141,   142,     0,     0,   143,     0,     0,     0,
     144,     0,     0,     0,     0,   146,   147,   148,   149,   150,
       0,     0,  -366,     0,     0,     0,   153,     0,     0,     0,
     154,     0,     0,   155,   156,   157,     0,   158,     0,     0,
       0,     0,     0,   161,  3969,     0,   162,   163,     0,   164,
       0,     0,     0,     0,   167,   168,   169,  3970,   171,   172,
       0,   173,   174,     0,   175,   176,     0,   178,     0,   180,
     181,   182,   183,     0,   184,   185,     0,   186,   187,   188,
       0,   190,     0,     0,     0,   191,     0,     0,   192,     0,
     193,     0,     0,   194,     0,     0,     0,   195,   196,   197,
       0,     0,   198,     0,     0,     0,     0,   199,     0,     0,
       0,     0,     0,   201,   202,     0,   203,     0,     0,     0,
     204,     0,   205,   206,   207,   208,   209,     0,     0,     0,
       0,     0,     0,   211,   212,   213,     0,     0,     0,   214,
       0,     0,   216,     0,   217,   218,   219,     0,     0,   220,
     221,     0,   222,   223,   224,   225,   226,     0,     0,     0,
     228,   229,   230,   231,   232,     0,     0,   233,   234,  3971,
     235,   236,   237,     0,     0,     0,     0,     0,     0,     0,
     240,     0,   241,     0,   242,     0,   243,   244,   245,   246,
       0,   247,     0,   248,     0,     0,     0,     0,   250,     0,
       0,     0,     0,     0,   253,     0,     0,     0,   254,   255,
     256,   257,  3972,     0,   258,   259,   260,     0,     0,   261,
       0,     0,     0,     0,   262,     0,     0,     0,     0,   264,
       0,     0,     0,   265,   266,     0,   267,   268,  3973,     0,
       0,   269,     0,     0,     0,   271,     0,     0,   272,  3974,
       0,   273,   274,     0,     0,     0,     0,     0,   275,   276,
       0,   277,     0,   278,     0,   279,   280,     0,     0,     0,
       0,  -321,     0,     0,   281,     0,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,     0,   299,   300,   301,     0,   302,   303,
     304,   305,     0,   306,   307,     0,     0,     0,     0,   308,
     309,   310,   311,   312,   313,     0,     0,   314,   315,     0,
     316,     0,   317,     0,   318,   319,   320,   321,   322,   323,
     324,   325,   326,     0,     0,   327,   328,     0,     0,   329,
     330,   331,   332,     0,     0,     0,     0,   334,     0,     0,
       0,   335,     0,   336,   337,   338,     0,   339,   340,  3975,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   344,   345,     0,     0,   347,     0,   348,   349,
     350,   351,   352,   353,   354,   355,   356,     0,     0,     0,
       0,   359,   360,     0,   361,     0,   362,   363,   364,   365,
     366,     0,   367,   368,   369,     0,     0,   370,     0,     0,
       0,   371,   372,   373,   374,   375,     0,     0,   376,   377,
     378,   379,   380,     0,   381,     0,     0,   383,     0,   385,
    -321,     0,   386,     0,     0,     0,   388,     0,     0,   390,
     391,   392,  3976,   393,     0,     0,     0,   395,   396,   397,
     398,   399,   400,   401,     0,   403,   404,     0,   405,     0,
       0,     0,     0,   407,   408,   409,     0,     0,     0,     0,
     411,     0,     0,     0,   412,     0,     0,   414,     0,   416,
       0,   417,     0,     0,   420,   421,     0,     0,     0,     0,
       0,   422,   423,   424,     0,   425,   426,     0,   427,     0,
       0,   428,     0,     0,   429,     0,   431,   432,   433,   434,
       0,     0,     0,   436,     0,   437,   438,   439,   440,   441,
     442,     0,     0,   443,   444,   445,   446,     0,   447,   448,
       0,     0,   449,   450,   451,   452,     0,     0,   453,   454,
       0,   455,   456,   457,   458,     0,     0,     0,     0,     0,
     459,   460,     0,     0,     0,     0,   462,   463,   464,     0,
     465,   466,     0,   467,   468,     0,     0,     0,     0,     0,
     471,     0,     0,  4299,     0,     0,     0,   474,   475,     0,
       0,     0,     0,     0,     0,   476,     0,     0,   477,     0,
       0,     0,   478,   479,   480,   481,   482,     0,     0,  -321,
       0,     0,     0,   483,     0,     0,   485,     0,   487,     0,
     137,   488,   138,   139,   140,   141,   142,     0,     0,   143,
       0,     0,     0,   144,     0,     0,     0,     0,   146,   147,
     148,   149,   150,     0,     0,     0,     0,     0,     0,   153,
       0,     0,     0,   154,     0,     0,   155,   156,   157,     0,
     158,     0,     0,     0,     0,     0,   161,     0,     0,   162,
     163,     0,   164,     0,     0,     0,     0,   167,   168,   169,
       0,   171,   172,     0,   173,   174,     0,   175,   176,     0,
     178,     0,   180,   181,   182,   183,     0,   184,   185,     0,
     186,   187,   188,     0,   190,     0,     0,     0,   191,     0,
       0,   192,     0,   193,     0,     0,   194,     0,     0,     0,
     195,   196,   197,     0,     0,   198,     0,     0,     0,     0,
     199,     0,     0,     0,     0,     0,   201,   202,     0,   203,
       0,     0,     0,   204,     0,   205,   206,   207,   208,   209,
       0,     0,     0,     0,     0,     0,   211,   212,   213,     0,
       0,     0,   214,     0,     0,   216,     0,   217,   218,   219,
       0,     0,   220,   221,     0,   222,   223,   224,   225,   226,
       0,     0,     0,   228,   229,   230,   231,   232,     0,     0,
     233,   234,     0,   235,   236,   237,     0,     0,     0,     0,
       0,     0,     0,   240,     0,   241,     0,   242,     0,   243,
     244,   245,   246,     0,   247,     0,   248,     0,     0,     0,
       0,   250,     0,     0,     0,     0,     0,   253,     0,     0,
       0,   254,   255,   256,   257,     0,     0,   258,   259,   260,
       0,     0,   261,     0,     0,     0,     0,   262,     0,     0,
       0,     0,   264,     0,     0,     0,   265,   266,     0,   267,
     268,     0,     0,     0,   269,     0,     0,     0,   271,     0,
       0,   272,     0,     0,   273,   274,     0,     0,     0,     0,
       0,   275,   276,     0,   277,     0,   278,     0,   279,   280,
       0,     0,     0,     0,     0,     0,     0,   281,     0,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,     0,   299,   300,   301,
       0,   302,   303,   304,   305,     0,   306,   307,     0,     0,
       0,     0,   308,   309,   310,   311,   312,   313,     0,     0,
     314,   315,     0,   316,     0,   317,     0,   318,   319,   320,
     321,   322,   323,   324,   325,   326,     0,     0,   327,   328,
       0,     0,   329,   330,   331,   332,     0,     0,     0,     0,
     334,     0,     0,     0,   335,     0,   336,   337,   338,     0,
     339,   340,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   344,   345,     0,     0,   347,
       0,   348,   349,   350,   351,   352,   353,   354,   355,   356,
       0,     0,     0,     0,   359,   360,     0,   361,     0,   362,
     363,   364,   365,   366,     0,   367,   368,   369,     0,     0,
     370,     0,     0,     0,   371,   372,   373,   374,   375,     0,
       0,   376,   377,   378,   379,   380,     0,   381,     0,     0,
     383,     0,   385,     0,     0,   386,     0,     0,     0,   388,
       0,     0,   390,   391,   392,     0,   393,     0,     0,     0,
     395,   396,   397,   398,   399,   400,   401,     0,   403,   404,
       0,   405,     0,     0,     0,     0,   407,   408,   409,     0,
       0,     0,     0,   411,     0,     0,     0,   412,     0,     0,
     414,     0,   416,     0,   417,     0,     0,   420,   421,     0,
       0,     0,     0,     0,   422,   423,   424,     0,   425,   426,
       0,   427,     0,     0,   428,     0,     0,   429,     0,   431,
     432,   433,   434,     0,     0,     0,   436,     0,   437,   438,
     439,   440,   441,   442,     0,     0,   443,   444,   445,   446,
       0,   447,   448,     0,     0,   449,   450,   451,   452,     0,
       0,   453,   454,     0,   455,   456,   457,   458,     0,     0,
       0,     0,     0,   459,   460,     0,     0,     0,     0,   462,
     463,   464,     0,   465,   466,     0,   467,   468,     0,     0,
       0,     0,     0,   471,     0,     0,   472,     0,     0,     0,
     474,   475,     0,     0,     0,     0,     0,     0,   476,     0,
       0,   477,     0,     0,     0,   478,   479,   480,   481,   482,
       0,     0,     0,     0,     0,     0,   483,     0,     0,   485,
       0,   487,     0,     0,   488
};

static const yytype_int16 yycheck[] =
{
       6,   638,   575,   983,   647,   648,   574,   575,   594,   903,
     904,   883,   984,    19,  1852,  1572,  1073,    23,   122,   913,
    1505,  1263,    20,  1705,  1399,  1167,    32,  1114,     6,  1167,
    1067,  1068,    30,    39,   519,  1303,    42,   705,    36,   610,
      46,   921,  1817,   943,  1503,  1380,  2553,    53,  2034,  1494,
    1190,  2339,   623,  2170,  1494,   919,  1263,  1197,  2175,  2105,
    2481,  1460,  2384,   943,  2441,  2442,  2844,  3307,  1104,  2902,
    1309,   634,   635,  2266,  2670,   988,  1484,  1928,  1778,  1484,
     944,    23,  1494,  1488,  2001,  1490,  1839,  2469,    94,   665,
     652,  2548,   988,  1997,  1137,  1410,  2003,  1997,  3043,  2449,
    2007,  2526,  2554,  1484,  2130,  2130,  3312,  1488,    24,  1490,
     116,  2018,   118,  1428,  2402,   121,   122,   123,  3098,  2462,
    1980,  1436,  1437,  2030,    19,  2698,  3535,  2470,  2704,  2702,
    1474,  2304,    33,    20,   963,    17,   773,    10,    16,    17,
     118,    46,     4,   121,    21,  1553,  1850,  3181,  1553,    59,
      16,    17,    94,    17,    29,  1198,  1199,  2119,  3580,  1202,
    1203,  1204,  1205,  1989,  1207,  1208,  1209,  1210,  1211,  1212,
    1213,  1214,  1553,  3370,  3371,    16,    17,  3374,    19,   106,
    1971,    58,    59,    16,    17,   761,   762,   763,  1236,     9,
      70,    50,   145,   145,    16,    17,  3393,   104,   774,   171,
    2510,  2511,  3399,  2951,  2060,   145,  2701,    62,  2427,    29,
      20,    67,    19,   125,    74,    35,    65,    82,   192,   158,
      50,  2514,  3330,    24,    11,  2085,  2130,  2087,  2088,    31,
    2130,    24,   803,  2093,  2094,    19,    64,    16,    17,   126,
      19,  2153,  2102,  2103,   192,  2672,    11,  2107,  2320,  3590,
    1952,  1953,  1943,    68,   373,   155,   151,   118,  2260,  4008,
     155,   262,   358,   155,    24,   341,   129,  1969,    80,   151,
      55,    16,    17,  2762,   120,  4127,   386,   247,   221,   366,
    3637,  3886,  3887,    51,  1986,  1987,   186,   367,   364,   441,
     861,  3531,   363,    61,   945,   468,    74,   123,   225,   449,
    2002,    35,   362,  2005,  2006,   141,  2008,   416,    35,  2011,
    2012,   227,   132,  2015,    75,   421,   126,   388,  2020,    57,
    2392,   244,    23,  2025,  2026,  2027,  2028,  2029,  2638,  2639,
    3577,  2033,   120,  2035,  2684,   122,  2686,   263,   244,  2041,
    2042,  2043,  2044,    21,   189,  2047,   263,  2049,   155,    12,
      21,   359,   153,   545,    41,    33,   189,   186,    20,    67,
     153,   576,    33,   151,   120,    16,    17,    61,   120,    47,
     416,   155,    62,  2831,  3653,   236,    47,  3656,    16,    17,
      58,    59,  4131,   269,   210,   545,   125,    58,    59,   249,
     245,   437,   189,   309,  2254,   151,    16,    17,   511,   151,
     504,    33,  1045,  1046,  1047,   186,   206,   107,    16,    17,
     110,  2646,  2114,  2115,  2116,  2117,   631,   545,    16,    17,
      81,  3618,   351,   352,  4029,   471,   227,    59,  4033,   403,
    3627,   544,  3711,   171,   227,  1103,   238,   175,   542,   100,
     412,   238,  2529,   272,   189,   637,   133,   373,   186,  1117,
     250,  1014,   460,  3650,   280,   403,   373,   630,  3655,  2837,
     262,   634,   163,  2921,   126,   571,    70,   227,   280,  3878,
     356,   249,   135,   280,   545,   209,  1448,   447,  2253,  1373,
     632,   260,   209,  4088,  4089,  3842,  2398,  2468,   638,  3695,
      78,   185,   231,   416,   372,   350,   439,   375,   504,   608,
     506,   269,   630,   348,  2854,  2855,   372,   272,   309,   375,
     416,   357,   588,   632,  4366,  3755,   309,   523,    16,    17,
     630,   527,  3769,    16,    17,  2950,   613,  2909,  2953,  2954,
     403,   372,   538,  2018,   375,   631,   542,  1872,   544,   372,
    1404,   377,   375,  1407,   155,   151,   411,   210,  1412,   309,
    2971,   557,    16,    17,   355,   245,  1193,   418,   638,   374,
     140,  1474,   355,  1971,   451,   539,  1971,   416,   574,   354,
     155,  3319,   632,   155,  1438,  1439,   582,   477,  1474,   317,
    1460,   189,    24,  2569,  1989,   477,  3792,   446,   375,  1997,
    1971,   539,  3572,   372,   600,  1263,   375,  1839,    61,   647,
     648,  1086,  1087,   155,   610,   606,   612,  1922,  1989,   416,
    2514,  3952,    16,    17,  2514,  2475,   446,   623,   624,   625,
    2646,  2646,  1107,   425,   630,  1201,   632,   372,   634,   635,
     375,  1116,  1839,   639,   640,   508,    16,    17,   644,  1552,
    2052,   451,  1218,  1128,  1129,  1130,  2939,   625,   654,   655,
     656,  1136,   605,   605,   660,   510,  1552,   263,   486,  2878,
     632,   517,   523,   602,  3091,   605,  3499,    16,    17,  4091,
     582,   526,    16,    17,   412,  2535,  2532,  2537,  2640,  1242,
    2536,   556,   624,  4432,  2544,   595,  2512,   560,   630,   616,
    1733,  1727,   556,   600,  2550,  2551,   800,   574,  2558,   705,
    2404,  1744,  2493,   608,  1747,  2565,  2562,   401,  1756,  1538,
    1281,  2119,   532,  4122,  2119,  3921,   632,  2577,  2578,  2579,
     521,   372,  2130,  2583,   375,  2130,   608,   600,   521,   630,
    2802,  2803,  2804,   553,   372,  2591,   623,   375,  2119,   617,
     560,   636,  2646,  1306,  3778,  2605,  2646,  3097,   608,  2130,
     630,   617,   372,  3242,   636,   375,  3066,   635,  1321,   614,
     766,  2763,   768,   583,   372,  3087,   632,   375,  3876,  2113,
    2461,  2683,   556,   632,   372,  1346,   617,   375,  2850,  2851,
    2852,  3354,  3358,  1434,   617,   227,   649,   565,   794,   795,
     796,  3771,   798,   799,   800,   617,   802,   803,  1369,   903,
     601,   405,   808,   907,   908,  2978,   613,   568,   601,   517,
     588,   545,  2668,  3389,  3390,  3388,   920,   795,   545,  4025,
    3309,   799,  4069,  3396,   802,  4234,  1388,   608,    16,    17,
    3403,   632,  3067,    16,    17,   841,   526,  1408,   617,   502,
     503,  2543,   505,   582,   507,   851,    16,    17,   636,   549,
      16,    17,   552,   632,  2556,   861,   862,  3352,  3353,   522,
     866,  2948,  2637,    16,    17,  3360,   477,   309,  3363,  3364,
      16,    17,   617,  3251,   372,   463,  3328,   375,   982,   372,
     636,   190,   375,   577,   636,  3380,  2345,  3344,   468,    16,
      17,  3316,   477,   151,   632,   477,   574,   903,  4095,  3394,
    4097,   907,   908,   574,  3399,  3400,  3401,  3402,   372,   851,
    1478,   375,   153,   355,   920,  3297,  2473,   117,   153,  3301,
     862,  1492,    16,    17,   866,   477,  3248,   598,  3873,  2910,
    2911,    45,   536,   139,    16,    17,   184,   225,   174,   212,
      16,    17,  2644,   313,   265,  2783,   279,    42,    16,    17,
     588,   280,   125,   171,  3297,   559,  3306,   963,  3301,   630,
    4166,   424,    16,    17,  1858,  1013,   617,   184,   372,    16,
      17,   375,   430,   221,  3262,   151,   982,  3037,   984,   617,
     631,   632,  1650,  2821,  1878,  3946,   227,   807,   468,   171,
      16,    17,   372,   855,   632,   375,   640,   617,    50,  1561,
     606,  4241,    16,    17,   221,   263,    16,    17,  1014,   617,
     125,   631,   632,    16,    17,  1063,   125,   134,  1918,   617,
      16,    17,   123,   372,   632,    68,   375,   638,   372,   846,
     636,   375,    33,   631,   632,  2939,    16,    17,  1918,  2939,
     186,  3067,  3067,  2528,  2529,   221,  2897,  1911,  1948,   122,
     630,   509,  2827,   638,   634,   319,   638,  1921,   231,  1065,
    1924,  1925,   263,  1069,    16,    17,  2441,  2442,  1948,   302,
     510,    16,    17,   221,   179,   384,  1180,   277,   611,   521,
     366,    16,    17,    16,    17,  2493,   638,   416,  2493,    12,
       8,   189,   206,   117,  2847,  3691,  2796,  1103,  2155,  3292,
      16,    17,    16,    17,  3021,   438,  2514,  2512,  1751,    16,
      17,  1117,  2493,  1217,   355,  3022,   231,   160,  2974,   617,
     355,   357,   231,  1065,   617,  4086,  2365,  1069,    16,    17,
      40,  2512,   280,   631,   632,  2450,   457,  2277,   631,   632,
     202,   468,  2587,   680,   247,    16,    17,  2587,   253,   966,
     630,    16,    17,   617,   798,   258,   385,  2200,   358,   601,
    1264,  1167,    98,  3067,   237,   263,    74,  3067,   632,  1812,
    1746,  1839,   373,   468,  1180,  2587,   485,   784,    71,   280,
      16,    17,  3564,  3565,   372,   247,  3258,   375,  1759,   372,
    3973,  3974,   375,  2968,   412,   630,  2283,  2284,  1761,   391,
    2113,   318,   372,   638,   433,   375,   372,   388,  1312,   375,
     650,  1217,   135,   617,   124,   752,  1222,  2113,  3787,   372,
    2902,  1227,   375,   148,    16,    17,   372,  4005,   632,   375,
     412,  4094,  2640,   120,   159,  2640,  1242,   617,  2646,  4017,
    2276,  2646,  2384,  4076,   517,   372,   341,   134,   375,   354,
    2286,   631,   632,   277,  1825,  1826,   189,  1263,  1264,  2640,
     630,   179,   352,   439,   412,  2646,   439,   874,   617,  3255,
     476,    16,    17,   617,   607,  1281,  3336,  4517,   372,   543,
     521,   375,   631,   632,   613,  1227,   521,  1293,   632,  1295,
     372,  1297,   185,   375,  3861,   468,   372,    16,    17,   375,
    1306,   302,   354,   630,   372,   569,  1312,   375,   103,   399,
    2353,   373,    16,    17,   486,  1321,  1322,  3177,   372,  2718,
    4114,   375,  3699,   122,   439,   372,   562,   613,   375,  2471,
     439,   374,   225,  2471,   358,   630,   274,    16,    17,   587,
    1346,   249,   578,  1349,  3461,   539,   372,   461,   606,   375,
     453,  1357,  2811,   468,  1360,  1297,   468,   250,   372,   468,
     601,   375,   372,  1369,   545,   375,   601,   567,   586,   372,
     587,  3693,   375,  1379,  1380,   576,   372,  1481,   636,   375,
    1322,    16,    17,  1389,  1390,  1391,  1392,  1393,  1394,    16,
      17,  3166,   372,  1399,   446,   375,   462,  3172,   336,  1405,
    1406,  3176,  1408,   632,   586,  1411,  3973,  3974,   545,   582,
     391,  1389,  1390,  1391,   632,  1393,   211,    16,    17,    12,
     372,    12,  2564,   375,   476,  1431,  2564,   372,  1406,   617,
     375,   318,   468,  1411,   617,   354,  1298,   372,   237,   372,
     375,     0,   375,   631,   632,   545,   371,   617,   631,   632,
    1392,   617,  1394,   990,    16,    17,   372,   630,   372,   375,
     636,   375,   632,  2948,   617,   372,   632,   582,   375,   151,
    3326,   617,   548,   582,   229,  1481,    16,    17,    12,   632,
    4343,  4344,   608,   238,   372,   631,  1492,   375,   155,  1431,
     617,  1497,  3348,   630,  1500,  1501,  4290,   536,    16,    17,
     539,   372,   468,  3924,   375,   632,   632,   372,   401,  4078,
     375,  4080,   431,   227,   486,   630,   398,   355,   630,  4302,
    4303,   630,  1384,   617,    16,    17,   199,   468,   189,  2423,
     630,  2939,  1538,    16,    17,   617,   372,  3022,   632,   375,
     155,   617,   135,   567,   135,   403,  4113,  4114,   302,   617,
     632,  1557,   120,  1559,  1560,  1497,  1562,  1563,  3880,  1501,
      16,    17,  3422,   617,   632,    16,    17,    16,    17,  1575,
     617,  1577,    16,    17,   235,   143,    16,    17,   632,   517,
     372,  1559,  1560,   375,   379,   632,   558,   174,    16,    17,
      12,   617,  3709,   388,   630,    12,   269,    16,    17,   509,
     395,   135,  4396,   617,  4398,  2847,   632,   617,    16,    17,
      16,    17,   180,   225,   617,   539,   136,   468,   632,   544,
     530,   617,   632,   378,   202,  1487,   588,   372,  2685,   632,
     375,  4425,   517,  3764,  4201,  3923,   632,   617,   250,  2779,
    2847,   355,    16,    17,  1650,  1651,    16,    17,   558,  4216,
     508,  2919,   632,   372,    16,    17,   375,   411,  1762,  3067,
    3791,   162,  3067,  4230,   630,   617,  4460,  4461,   372,   631,
     632,   375,   617,   132,   117,    16,    17,    16,    17,   638,
     632,     6,   617,   521,   617,   122,  3067,   632,   147,   630,
    2832,   229,  2177,   372,  2832,   490,   375,   632,   631,   565,
     238,   617,   560,   617,  2280,  1711,  2191,   624,    16,    17,
     617,   596,   373,   135,   631,   631,   484,   631,   135,    16,
      17,  2437,   588,  4290,   631,    16,    17,    16,    17,   617,
     556,    56,   486,    17,    24,  4302,  4303,   372,   181,  2224,
     375,  4246,   600,   631,  4249,   372,   617,  1753,   375,   206,
    3195,  1855,   617,  1759,  3194,  1761,  1762,  4264,  3804,  3805,
     631,   189,     8,   601,   351,   352,   631,  1773,  3227,   153,
     357,   624,  1778,   372,    16,    17,   375,  1783,   631,   630,
    1786,   617,  4349,    29,    74,  1282,  1792,  1793,  1285,  1795,
     585,  1288,  4359,   250,   162,   631,    16,    17,    74,  1805,
     473,    16,    17,  1809,  3579,   220,   264,   521,  2293,   267,
     372,   331,   580,   375,   139,   588,    57,  3499,  2534,  1825,
    1826,  1827,  1828,  3809,   192,   617,    95,    16,    17,  4396,
     202,  4398,   372,  1839,   277,   375,  1842,  1843,  1844,   631,
     378,  4408,  3172,   227,  2560,  2561,  3176,    24,   162,  1855,
    1792,  1793,   620,  1795,   372,  2431,   117,   375,  4425,   632,
    4427,  2429,  4429,  1805,  4369,   638,  1872,  1809,    39,  4436,
      16,    17,   617,  3733,   103,    46,   631,   153,   192,  4446,
     372,  1887,   172,   375,   539,  1827,  1828,   601,   542,   372,
      16,    17,   375,  4460,  4461,    16,    17,    74,   617,   225,
    1842,  1843,  1844,   630,   238,   536,    16,    17,   539,  4476,
    4477,   638,   631,   617,  4481,   358,   372,  1923,   468,   375,
     181,   372,   225,   372,   375,   259,   375,   631,   372,  1935,
     171,   375,   372,   162,   175,   375,  1942,   227,   617,    16,
      17,    77,   225,    79,   372,   186,  3281,   375,    16,    17,
     220,   227,   631,   372,   585,   413,   375,   631,   632,   228,
      95,  1823,   506,   192,   372,   595,   372,   375,   598,   375,
     202,   355,  2844,   130,  2542,   562,   153,   367,   247,    16,
      17,  1923,   617,   527,   120,   235,  2886,    58,    59,   258,
     617,   578,  2892,   631,   632,   172,   631,    68,   372,    17,
    1942,   375,   372,    46,   631,   375,  2886,   143,   287,   288,
     372,   189,  2892,   375,  3101,   217,   277,   219,   617,   309,
    1882,   593,    71,  2917,  2128,  3293,   476,   352,  2132,   280,
    2894,   372,   631,   372,   375,    17,   375,   631,  3125,  3126,
    2046,   636,   592,   593,   180,  3905,  3906,  3907,  3908,   155,
     227,  1793,   638,  1795,  2060,   617,   548,   631,   632,   349,
     718,  3148,   631,   632,   372,   355,  2170,   375,   583,   631,
     456,  2175,   341,   349,   369,   372,   317,   617,   375,   355,
     630,   372,   740,   372,   375,   588,   375,  1000,  1001,   630,
     415,   631,   417,   228,  1956,   753,   754,   358,   508,   617,
    1842,  1843,  1844,  1965,  1966,   625,   626,   627,   628,   185,
    3252,     6,   247,   631,  1976,  1977,  1978,  1979,   136,  1981,
    1982,   117,  2128,   258,   567,   617,  2132,  1040,  2134,   632,
     372,  2137,   309,   375,   617,   638,   185,   521,  2144,  2145,
    2146,  2147,  2785,   439,  2150,    11,   422,   632,   631,   428,
     429,   537,   372,   630,   136,   375,   542,   372,   630,  2137,
     375,   617,   630,  3305,  2170,  2269,   617,  3305,   617,  2175,
     630,   412,   349,   617,   403,   631,   225,   617,   355,  2847,
     631,    21,   631,   372,   453,   181,   375,   631,   630,   617,
     545,   631,   630,    33,   630,  2299,  3338,   630,   617,   585,
    3338,   250,  2144,  2145,  2146,   630,   341,    47,   468,   617,
    4048,   617,   631,   209,   600,  4136,   476,   601,    58,    59,
    4141,   217,  4143,   631,  2086,   631,   372,  2089,  2090,   375,
    2092,   521,   630,  2095,  2096,  2097,  2098,  2099,  2100,  2101,
     631,   632,  2104,   617,  2106,   521,   372,   617,   632,   375,
      61,   372,   630,   522,   375,   617,    11,   631,  2829,   630,
      71,   631,   372,  2269,   630,   375,   631,   632,   166,   631,
     631,   632,   136,    84,  4049,  4135,   617,   630,   617,   609,
     610,   277,   631,   632,  3321,  3322,   117,   423,  2294,  2774,
     631,   638,   631,  2299,   630,   372,   572,   630,   375,   630,
     588,   589,   632,   591,   372,   593,   567,   375,   630,   617,
     539,   601,   630,   331,  2320,  2584,   588,  4019,   453,   630,
     617,  3408,   364,   631,  3699,   601,   617,   402,   617,    16,
      17,   560,   592,   593,   631,   372,   385,   630,   375,   456,
     631,   117,   631,   630,   521,   630,  2352,  3589,   103,   331,
     181,  3245,   401,    74,  4056,   630,   632,  4059,  4060,  4061,
    4062,   370,   358,   631,   632,    24,   635,   122,   631,   632,
     630,   600,    19,   630,   185,   617,  2480,  2481,  2384,   364,
     191,   630,  2388,   631,   632,  4160,  2392,   522,  3530,   631,
     630,  3448,  3530,   630,  4076,  3637,    12,   617,    61,  2405,
     630,  2407,   617,   630,    33,   181,  3360,   136,    71,  3363,
    3364,   631,    58,    59,   225,    74,   631,   631,   632,   631,
     632,    84,   630,  2429,   601,    41,  3380,   630,   617,   630,
      59,   117,   153,   209,   120,  2441,  2442,   192,   630,   250,
      74,   536,   631,   631,   632,   630,   277,   630,    95,  2553,
     631,   632,  3937,  3938,  4156,  4157,   631,   632,   115,   631,
     632,   479,   480,  4165,   630,  2471,   221,   331,   631,   632,
     630,   617,   630,    89,  2480,  2481,   630,    93,   107,   631,
     632,   110,   631,   632,   364,   631,   631,   632,    19,   118,
    4047,   617,   631,   632,   153,   181,   617,   479,   480,  3471,
     630,   277,   631,   632,   151,   631,   227,   617,   155,   238,
     631,   630,    12,   172,   630,  2521,   631,   632,   273,   630,
    2526,   631,   185,   209,  2522,  2531,  2532,   358,   191,   630,
    2536,   117,  2538,   630,   120,  2533,   630,   184,   630,   186,
     617,  2539,  2548,  2405,  2550,  2551,   200,  2553,  2554,   617,
     631,   632,   630,  2559,   631,   202,  2562,   630,  2564,   216,
     207,   630,   225,   631,    95,  2563,    95,  2573,   227,   630,
    2568,   567,   630,   117,   221,   630,  2574,  2575,  2584,   630,
     617,   228,   358,   631,   632,  2591,  2592,   250,   235,   630,
     401,   277,   630,   227,   631,   181,   630,  2603,   631,   632,
     247,   630,   331,   621,   622,   623,   624,   625,   626,   627,
     628,   258,   631,   632,   631,   632,   263,  1079,  1080,  1081,
     151,   155,   156,   209,   155,   272,   242,   630,   349,  1091,
     630,  2573,   631,   632,   355,   135,   630,   181,   630,   621,
     622,   623,   624,   625,   626,   627,   628,   117,   403,    30,
     309,  3136,   306,   307,   630,   186,   630,   311,   312,   193,
    1122,  2667,  2668,  1125,   321,   209,   631,   632,   325,   630,
     204,   202,   358,   631,   632,   332,   207,   630,  2540,  2541,
    4518,   631,   632,   494,  1146,  1147,   631,   632,  1150,  2958,
     349,   277,   631,   632,   341,    76,   355,   228,   630,   228,
      31,   422,   318,  3188,   235,  2567,  1168,  1169,   630,   243,
     210,   181,  3280,   630,   343,   349,   247,   364,   247,   474,
     254,   355,   385,  2992,   630,  2667,   373,   258,   632,   258,
     221,  3000,   263,   277,   574,  3004,   567,   491,   401,   209,
      48,   272,   136,   631,   632,   631,   632,   281,   631,   632,
     479,   480,   274,   410,   594,   595,   403,   631,   632,   623,
     624,   625,   626,   627,   628,   381,   577,    48,   149,   631,
     632,   632,   358,   117,  2636,   364,   120,   631,   632,   631,
     632,  3050,   537,   364,   539,    74,   462,  3430,   422,   576,
    2796,   567,  2798,   631,   632,  2801,  2802,  2803,  2804,    88,
     521,   625,   145,   146,  2810,   136,   453,   277,   476,   466,
     341,   345,   341,   638,   358,   631,   632,  3734,  3735,  1154,
    1155,   638,  2828,  2829,    74,   161,  2832,  4158,  4159,   476,
     585,   494,   630,   364,   263,   364,   186,   181,  3446,  3447,
     129,  2847,   373,   517,  2850,  2851,  2852,  3264,  3265,  3220,
    3221,   572,   536,  3825,   161,   484,   106,  2863,   274,  3831,
     152,   517,   521,  3511,  3512,   209,   632,  2971,  2810,    83,
     632,  3914,   403,   632,   532,   522,   365,   493,   631,   151,
     601,   567,   120,    25,   106,   637,     6,   521,   358,   630,
    3458,     4,   621,   622,   623,   624,   625,   626,   627,   628,
     136,   521,   522,   153,  4046,   525,   526,   238,  4046,   529,
     105,   531,   632,   388,   577,   467,   238,   533,   600,   632,
     385,    55,   453,   552,   453,   431,    68,   166,   106,   576,
      72,   262,    74,   277,   136,   218,   632,   331,   572,   632,
     587,   588,   601,   638,  2950,   476,   603,  2953,  2954,    68,
      12,   580,  2958,   497,   605,   135,   631,    16,    17,   606,
     103,   608,   619,   252,   631,  2971,     9,   601,  2974,   638,
    3612,  3613,   632,   632,   638,   225,   631,  3585,   120,   631,
     630,   567,   631,  3625,   631,   632,  2992,   262,   635,   636,
    3632,   522,   632,   522,  3000,   638,    35,   153,  3004,    74,
     331,  2863,   502,   503,   504,   505,   506,   507,   632,   637,
     274,   274,   274,    88,   358,  3657,   274,   398,  3660,   162,
     351,   352,   522,   567,  3030,    48,   274,  3033,   274,   632,
     632,   155,  3038,  2895,  2896,   536,  2898,   630,  3044,   420,
     329,   269,  3048,   556,  3050,   576,   386,   117,   632,   192,
     120,   556,   111,   112,   113,   114,   115,   588,   308,  3065,
     632,   632,   351,   352,   385,   354,  3044,    12,   632,   155,
     632,   110,  3078,   454,   632,   606,   326,   608,   117,  3085,
      68,   632,   225,   238,   625,   479,   480,   241,   155,   534,
    3096,  3033,   176,   186,   425,   331,   632,   567,  4240,   349,
     631,   632,  4240,   581,   635,   636,   489,   389,   250,   131,
    2972,   181,   179,   169,   632,  3758,   631,    25,    26,  2981,
    1582,   364,   632,   155,  4096,   414,   193,   155,   155,   331,
     273,   155,   513,  4005,   136,   174,   155,   204,   155,   209,
     155,   155,   181,  3085,   155,  4017,   155,   155,   479,   480,
      58,    59,    60,   632,   213,   214,   215,   216,   155,   155,
      68,   492,   155,  3267,   155,   155,    74,   587,   155,   155,
     209,   155,   155,   155,    82,   155,  3182,   252,   155,   155,
     583,   612,   192,   364,  3190,   805,   253,   254,  3796,  3797,
    1652,  3799,  3800,   364,  1656,   364,   632,   189,   106,   631,
     189,   631,   625,    33,  3772,   631,   631,   277,  3070,   351,
     352,   632,   120,   631,   281,   357,   124,   631,  1680,   508,
     631,   631,   364,   567,   624,   630,   632,  3233,   622,   623,
     624,   625,   626,   627,   628,   631,   238,   632,   277,   631,
     631,   631,   631,   479,   480,   153,  3252,  3253,   576,   631,
    3256,   631,  3258,  4147,   329,   398,   631,   477,   630,   401,
     403,  3267,   321,   630,   323,   324,   325,  3273,   628,   630,
     632,   521,   631,   332,  3280,  3281,  4319,   479,   480,   354,
     545,   348,   103,   556,   545,   545,   606,   537,   358,   226,
     621,   622,   623,   624,   625,   626,   627,   628,   128,  3305,
     630,    95,   528,   342,    11,   630,   200,   189,    33,   638,
    3316,   630,   630,   372,   353,   632,   375,   225,   357,   358,
    3326,   260,  3328,   153,   232,   287,   288,   157,  3190,   331,
     472,   474,  3338,   400,   632,   638,   638,   638,  3344,   414,
    3346,   249,  3348,   189,   631,  3918,   411,   476,  4490,   186,
     585,   410,  4490,   632,   632,    46,   508,  3461,  4330,  4331,
     339,  4333,  4504,   508,   194,    54,  4504,  4509,   508,  4412,
     191,  4509,  4514,   508,    63,   508,  4514,   467,    71,   521,
     385,   388,   212,   556,    73,   621,   622,   623,   624,   625,
     626,   627,   628,   131,   537,   248,    85,    86,    87,   542,
     308,   537,   131,   128,   225,   248,   465,   466,  4380,   537,
    4382,  4383,   101,  3999,  3420,   385,   385,   560,   326,   385,
     385,   623,   624,   625,   626,   627,   628,  3289,   153,    46,
      35,   385,   157,   508,   228,   577,   387,   385,   385,  3445,
    3446,  3447,   585,  3547,   274,   385,   630,   630,   273,   434,
     588,   630,   273,   247,   631,  3461,   638,   600,   234,   149,
     234,   631,   638,   631,   258,   631,   428,   429,   631,   194,
     631,   631,   380,   631,   631,   155,   638,   479,   480,   632,
     388,   632,   556,    25,    26,  4457,  4129,   212,   638,    54,
    4127,  4064,  4472,   556,   545,   556,   613,   567,    63,   519,
     632,   269,    46,   630,   630,   110,   545,   155,    73,   630,
     549,   556,   117,   552,   630,   155,    58,    59,    60,  3525,
      85,    86,    87,   562,  3530,   370,    68,   547,   567,   189,
    3634,   570,    74,   189,   189,   235,   101,   499,   500,   501,
      82,  3547,   189,   244,   603,   545,   545,   341,   416,   274,
     458,  3413,   632,   358,   155,   155,   632,   155,   617,   618,
     619,   388,   247,   247,   106,   376,   322,   106,   106,   174,
     364,   250,   402,   169,  3436,   250,   181,   630,   120,  3585,
     638,   411,   124,   556,   623,   624,   630,   369,  3594,   202,
     545,    19,   449,   630,   385,   625,   426,  3603,  3596,   630,
     638,   630,   236,   236,   209,  3709,   514,   515,   516,   630,
     364,   153,   630,   521,   444,   631,   385,   630,  4512,   621,
     622,   623,   624,   625,   626,   627,   628,   631,  3634,   537,
     631,   320,   540,   631,   221,   638,   264,   632,   632,   189,
     582,   238,   155,   416,   625,   665,   121,   364,   337,   608,
     670,   250,  3594,   474,   632,  3661,  4201,   487,   632,   453,
     631,   247,  3668,   631,   631,   247,   638,   631,   576,   632,
    3774,  4216,   277,   494,  4242,   631,   250,   402,   631,   631,
    3686,   701,   631,   225,   630,  4230,   411,   517,   632,   632,
     232,   632,   630,  3699,  3556,   631,   399,   717,   364,   364,
      74,   426,    19,  3709,   631,   630,   536,   249,   632,   539,
     364,   364,   491,   468,   631,   630,   537,   630,   539,   444,
     262,   542,   373,   630,   632,   631,   358,   470,   522,  4366,
     631,   608,   631,   260,    11,   451,   272,   342,   416,   200,
     142,   761,   762,   763,   764,   256,   631,   631,   202,   632,
     478,   155,   357,   358,   774,   320,   577,   247,   247,   448,
     390,   632,   487,   630,   585,   120,   308,   120,  3774,   539,
     630,   397,   337,   638,  3636,   464,   630,    78,   486,   138,
     631,  3787,   491,   631,   326,   632,   463,   631,    19,   631,
    3796,  3797,   517,  3799,  3800,   263,   631,   631,   631,   631,
      33,  4374,   631,    33,  4349,   631,   328,   631,   631,   252,
     632,   631,   170,  3675,  4359,  2089,  2090,   411,  2092,   272,
    3924,  2095,  2096,  2097,  2098,  2099,  2100,  2101,   608,  4466,
    2104,   630,  2106,   370,   235,   524,   631,   638,   380,    12,
      13,    46,   632,   207,   632,   328,   388,   155,   588,   588,
     631,   598,   541,   630,   305,  4492,   598,   120,   630,   630,
     582,   250,   250,  4408,   630,  3871,  3872,   630,   630,   630,
     357,    33,  4515,   358,   631,   168,   358,  3883,   630,   632,
     328,   631,  4427,   545,  4429,   250,   545,   545,   592,   539,
     588,  4436,   588,   630,   235,   364,   353,   632,   593,   464,
     512,  4446,   608,   449,   631,   631,   358,  3913,   370,   582,
    3916,   527,   630,   150,    30,  3777,   458,   630,  3924,   630,
     639,    94,   605,   383,   186,   547,   631,   131,   131,   631,
    3872,  4476,  4477,   153,   631,    70,  4481,   403,   630,   186,
     545,   605,    30,   424,   549,   189,    61,   552,   370,  3955,
     631,    61,   125,   528,    14,   265,   632,   562,   630,   524,
     631,     5,   567,   235,  3970,   570,   139,   364,   364,  3975,
     149,  3913,   514,   515,   516,   636,   541,   370,   370,   521,
     129,   138,    46,    46,   630,   148,   630,    46,    46,   162,
      46,   630,   165,   582,   125,   537,   605,   149,   540,   220,
    1020,   279,   639,   144,    46,   178,   119,   636,    46,   630,
      46,    52,   138,   548,   459,   457,   636,   632,   623,   624,
     358,   631,   149,   548,   632,   205,   632,   200,   218,   636,
     632,    52,   149,   186,   576,   186,   631,    46,   631,   186,
    4046,   548,   120,   438,   607,   221,   358,   630,   188,   476,
    3980,   632,   225,  2306,  2108,  1075,  1076,  4161,   231,  3422,
     648,  3423,  2509,  3684,  1084,  1085,  1086,  1087,  1088,  1089,
    1090,  4130,  4078,  4010,  4080,  4309,   997,  4310,  1098,  1099,
    3682,  1101,  1102,  3686,  3870,  4492,  1106,  1107,   630,  4454,
    1110,  1111,  1112,  1113,    46,  1115,  1116,   576,  1838,   272,
    4106,  2796,  1783,  1123,  1124,  4462,  1126,  1127,  1128,  1129,
    1130,  3861,  3861,  1133,  1134,  1135,  1136,  1137,  1138,  1139,
    1140,  1141,  1142,  1143,  3861,  1145,  3861,  4346,  1148,  1149,
    3861,  3861,  3861,  1153,    32,    33,  3861,  1157,  1158,  1159,
      38,  3861,    40,  3861,    42,    43,  4152,  4194,  4346,  3861,
    1170,  1171,  1172,  4220,  4303,  4161,  4018,  3861,  3861,  1179,
    4264,    59,  4219,    12,    13,  1038,  1186,  1187,  1188,  3879,
    1190,  1494,  2059,  2998,  1490,  2823,  3524,  1197,  1198,  1199,
    3233,  1201,  1202,  1203,  1204,  1205,  2828,  1207,  1208,  1209,
    1210,  1211,  1212,  1213,  1214,  1309,  4152,  3914,  1218,  1219,
    4244,  3527,   547,  4412,  4327,  4374,  4064,  1552,   514,   107,
    2052,  3439,   110,  2668,  3071,  3348,  2060,  2594,  3326,  3371,
     118,  4325,  3371,  3823,  3404,  3645,  3595,  4242,  3634,  2752,
    3173,   404,  3176,  2480,  4240,   408,  3168,  4085,    11,   137,
      11,  4088,  1566,  4033,  4021,    94,  4089,  4029,  2142,  3883,
    3831,   424,  2059,  1445,   579,  2587,   154,  3600,  4264,   432,
    3327,  2379,  1548,  2810,  1827,  2345,  1441,   440,  1501,  2396,
    3228,   595,  2262,  1849,  2785,  3190,   125,   895,  1117,  2176,
    3295,    13,   180,  2261,   182,  2472,  3940,  4083,  4341,  3420,
     139,  4342,  2287,  4155,  1091,   468,  3338,   195,   196,  3788,
    4443,  3774,  4159,  2401,  2147,  1228,  3530,  3247,   481,   482,
    1322,  2383,  2340,   162,   983,   983,   165,  3246,  3305,  4325,
     983,  4240,  1297,   584,  1575,   670,   983,   661,  1919,   178,
     575,  1397,  1920,  1425,  1772,  4341,  4342,  1357,   236,  3346,
    3231,  4410,  4439,  4271,  4337,  4351,  4509,  1367,  4514,  3252,
    3637,   200,  4358,  3280,  1708,   574,   701,   574,   531,  2426,
    3281,  1875,    94,  2419,  1290,  1385,  2418,  2412,   266,  1329,
    1809,   568,   717,   877,  3903,  2798,   225,   275,   276,  3909,
     278,   569,   231,  1557,   882,   510,  1347,   560,   510,  4251,
    4252,  4000,  3670,   125,   648,   648,  4500,   648,    -1,  1357,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   139,    -1,   582,
      -1,   584,    -1,    -1,    -1,    -1,   314,   315,   316,   764,
    4426,    -1,    -1,   272,    -1,  4431,    -1,    -1,    -1,    -1,
     162,    -1,    -1,   165,    -1,   333,   334,   335,    -1,    -1,
      -1,    -1,   340,    -1,    -1,   343,   178,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4466,    -1,   360,   361,    -1,    -1,    -1,    -1,   200,    -1,
     222,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4490,    -1,  4492,    -1,    -1,    -1,
      -1,    -1,    -1,   225,  4500,   393,   394,    -1,  4504,   231,
      -1,    -1,    -1,  4509,    -1,    -1,    -1,    -1,  4514,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     418,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     272,   293,   294,   295,   296,   297,   298,   299,   300,   301,
      -1,   303,   304,    -1,    -1,   404,    -1,    -1,    -1,   408,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1588,    -1,
      -1,    -1,    -1,    -1,   472,   424,    -1,    -1,   476,    -1,
      -1,    -1,    -1,   432,    -1,    -1,    -1,    -1,    -1,    -1,
     488,   440,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   468,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   481,   482,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   546,    -1,
      -1,   549,    -1,    -1,   552,   553,   554,   555,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1686,  1687,  1688,    -1,
      -1,    -1,   404,    -1,    -1,  1020,   428,   429,    -1,    -1,
      -1,  1701,   531,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   424,    -1,    -1,    -1,   594,   595,    -1,    -1,
     432,    -1,    -1,    -1,    -1,    -1,    -1,  1727,   440,    -1,
      -1,   560,    -1,  1733,    -1,    -1,  1736,    -1,  1738,    -1,
      -1,   619,    -1,    -1,  1744,    -1,  1746,  1747,    -1,    -1,
    1075,  1076,    -1,   582,    -1,   584,   468,    -1,    -1,  1084,
    1085,    -1,    -1,  1088,  1089,  1090,    -1,    -1,    -1,   481,
     482,    -1,    -1,  1098,  1099,    -1,  1101,  1102,    -1,    -1,
      -1,  1106,    -1,    -1,    -1,  1110,  1111,  1112,  1113,    -1,
    1115,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1123,  1124,
      -1,  1126,  1127,    -1,    -1,    -1,    -1,    -1,  1133,  1134,
    1135,    -1,    -1,  1138,  1139,  1140,  1141,  1142,  1143,   531,
    1145,    -1,  1822,  1148,  1149,    -1,    -1,    -1,  1153,    -1,
      -1,    -1,  1157,  1158,  1159,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1170,  1171,  1172,   560,    -1,
      -1,    -1,    -1,    -1,  1179,    -1,    -1,    -1,    -1,    -1,
      -1,  1186,  1187,  1188,    -1,    -1,    -1,    -1,    -1,    -1,
     582,    -1,   584,  1873,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1881,    -1,     6,    -1,    -1,    -1,    -1,    11,    -1,
      13,    -1,    15,    -1,  1219,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    25,    26,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    56,    -1,    -1,    -1,    60,    61,    -1,
      -1,    -1,    -1,    66,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    74,    -1,    -1,    25,    26,    -1,    -1,    -1,    82,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    91,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   106,    -1,    -1,    -1,    -1,    -1,    60,
      -1,    -1,   111,   112,   113,   114,   115,   120,    -1,    -1,
      -1,   124,    -1,    74,    -1,    -1,    -1,    -1,    -1,   132,
     133,    82,    -1,    -1,    -1,    -1,   139,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   147,    -1,    -1,    -1,   151,    -1,
     153,    -1,  1357,    -1,    -1,   106,    -1,    -1,    -1,    -1,
      -1,   164,  1367,    -1,    -1,    -1,    -1,    -1,    -1,   120,
      -1,    -1,    -1,   124,    -1,    -1,    -1,    -1,    -1,    -1,
    1385,   184,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   153,  2083,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   213,   214,   215,   216,    -1,    -1,
     223,    -1,   225,    -1,    -1,    -1,    -1,    -1,    -1,   232,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   249,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   272,
      -1,    -1,    -1,    -1,   225,    -1,  2156,    -1,    -1,    -1,
    2160,   232,    -1,    -1,    -1,  2165,  2166,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2174,    -1,    -1,  2177,   249,    -1,
      -1,    -1,    -1,    -1,    -1,   308,    -1,  2187,  2188,    -1,
    2190,  2191,    -1,  2193,  2194,  2195,  2196,  2197,    -1,    -1,
    2200,    -1,   321,   326,   323,   324,   325,   330,    -1,  2209,
      -1,    -1,    -1,   332,    -1,    -1,  2216,    -1,  2218,    -1,
    2220,  2221,    -1,  2223,  2224,    -1,    -1,    -1,  2228,  2229,
    2230,    -1,    -1,    -1,  2234,  2235,  2236,   308,  2238,    -1,
    2240,    -1,  2242,    -1,  2244,   368,  2246,    -1,    -1,    -1,
     373,  2251,    -1,    -1,    -1,   326,    -1,   380,    -1,    -1,
      -1,    -1,   385,  1588,    -1,   388,    -1,    -1,    -1,    -1,
    2270,    -1,    -1,    -1,    -1,    -1,    -1,  2277,    -1,    -1,
    2280,    -1,    -1,    -1,    -1,    -1,  2286,    -1,    -1,  2289,
      -1,   410,    -1,  2293,    -1,    -1,   419,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   380,
     433,   434,   435,   436,    -1,    -1,    -1,   388,    -1,    -1,
      -1,    -1,    -1,    13,    -1,    15,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   458,    -1,    -1,    -1,    -1,
      30,    -1,    -1,    -1,    34,    -1,   465,   466,    -1,    -1,
      -1,    -1,    -1,  2353,    -1,    -1,    -1,    -1,    48,    49,
      -1,  1686,  1687,  1688,    -1,    -1,    56,    -1,    -1,    -1,
      60,    61,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    76,   458,    -1,    -1,
      -1,   514,   515,   516,    -1,    -1,    -1,    -1,   521,    -1,
      -1,    -1,  1727,    -1,    94,    -1,    -1,    -1,    -1,    -1,
      -1,  1736,    -1,  1738,   537,    -1,    -1,   540,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   116,  2427,    -1,    -1,
      -1,  2431,    -1,    -1,    -1,   125,   126,   127,    -1,    -1,
     563,    -1,    -1,   514,   515,   516,    -1,    -1,   138,   139,
     521,    -1,    -1,   576,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   151,    -1,    -1,    -1,    -1,   537,    -1,    -1,   540,
      -1,    -1,    -1,    -1,    -1,   165,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   603,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   183,    -1,    -1,    -1,  1822,    -1,   618,
     619,    -1,    -1,    -1,    -1,   576,    -1,    -1,   198,    -1,
     200,    -1,    -1,   636,    -1,   205,    -1,    -1,   208,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   231,    -1,   233,    -1,    -1,    -1,    -1,  1873,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1881,    -1,    -1,    25,
      26,   251,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   268,    -1,
      -1,    -1,   272,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    58,    59,    60,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    68,    -1,    -1,    -1,    -1,    -1,    74,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    82,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     106,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,   124,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   368,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   153,    -1,  2689,
      -1,    -1,    -1,  2693,    -1,   385,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   398,    -1,
      -1,    -1,    -1,  2713,  2714,    -1,    -1,    -1,    -1,   409,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2734,    -1,    -1,    -1,    -1,    -1,
      -1,   431,    -1,  2743,   434,  2745,   436,  2747,    -1,   439,
      -1,    -1,   442,   443,    -1,    -1,    -1,    -1,  2083,   225,
      -1,    -1,   452,    -1,   454,    -1,   232,    -1,    -1,    -1,
      -1,    -1,   462,    -1,  2774,    -1,    -1,    -1,   468,  2779,
      -1,    -1,    -1,   249,    -1,    -1,   476,    -1,    -1,    -1,
      -1,   481,    -1,   483,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2806,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   513,    -1,    -1,    -1,    -1,    -1,    -1,
     520,  2156,    -1,    -1,    -1,  2160,    -1,    -1,    -1,    -1,
    2165,  2166,   308,    -1,    -1,    -1,    -1,    -1,    -1,  2174,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     326,    -1,  2187,  2188,    -1,  2190,    -1,    -1,  2193,  2194,
    2195,  2196,  2197,   563,    -1,    -1,    -1,    -1,  2878,    -1,
      -1,    -1,    -1,    -1,  2209,   575,    -1,    -1,    -1,   579,
      -1,  2216,   582,  2218,    -1,  2220,  2221,   587,  2223,    13,
      -1,    15,    -1,  2228,  2229,  2230,    -1,    -1,    -1,  2234,
    2235,  2236,    -1,  2238,   380,  2240,    -1,  2242,    -1,  2244,
      34,  2246,   388,    -1,  2924,   615,  2251,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    48,    49,    -1,    -1,    -1,    -1,
     630,    -1,    56,    -1,    -1,  2270,    60,    61,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2286,    76,    -1,  2289,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   458,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   125,   126,   127,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   138,   139,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3041,  3042,    -1,    -1,    -1,    -1,    -1,   514,   515,
     516,   165,    -1,    -1,    -1,   521,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   183,
      -1,   537,    -1,    -1,   540,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   198,    -1,   200,    -1,    -1,    -1,
      -1,   205,     6,    -1,   208,    -1,    -1,    11,    -1,    13,
      -1,    -1,  2427,    -1,  3104,    -1,    -1,    -1,    -1,    -1,
     576,    25,    26,    -1,    -1,    -1,    -1,   231,    -1,   233,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3129,
      -1,    -1,    -1,  3133,  3134,    -1,  3136,   251,    -1,    -1,
      -1,    -1,    56,    -1,    -1,  3145,    60,    -1,    -1,    -1,
    3150,    -1,    -1,  3153,   268,  3155,  3156,    -1,   272,    -1,
      74,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    82,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    91,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3188,    -1,
      -1,    -1,   106,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,
     124,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   132,    -1,
      -1,    -1,  3222,    -1,    -1,   139,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   147,    -1,    -1,    -1,    -1,    -1,   153,
      -1,    -1,    -1,    -1,    -1,    -1,  3246,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   368,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     184,   385,    33,    34,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   398,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   409,    -1,    58,    59,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3307,    69,    -1,
      -1,   225,    -1,    -1,    -1,  3315,    -1,   431,   232,    -1,
     434,    -1,   436,    -1,    -1,   439,    -1,    -1,   442,   443,
      -1,    92,    -1,    94,    -1,   249,    -1,    -1,   452,    -1,
     454,    -1,    -1,   104,    -1,    -1,    -1,    -1,   462,    -1,
      -1,    -1,    -1,    -1,   468,    -1,    -1,    -1,   272,    -1,
      -1,    -1,   476,    -1,  2689,    -1,    -1,   481,  2693,   483,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2713,  2714,
      -1,   152,   153,    -1,   308,    -1,    -1,   158,    -1,   513,
     161,    -1,    -1,    -1,    -1,    -1,   520,    -1,    -1,  2734,
      -1,    -1,   326,    -1,    -1,    -1,   330,    -1,  2743,    -1,
    2745,    -1,  2747,    -1,    -1,    -1,    -1,    -1,    -1,   190,
      -1,   192,    -1,    -1,    -1,    -1,    -1,    -1,   199,    -1,
     201,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   563,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   373,
      -1,   575,    -1,   224,   225,   579,   380,    -1,   582,    -1,
      -1,    -1,    -1,   587,   388,    -1,    -1,    -1,    -1,    -1,
      -1,  2806,    -1,    -1,    -1,    -1,    -1,   248,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   615,    -1,    -1,    -1,    -1,    -1,    -1,   269,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   630,    -1,    -1,    -1,
     434,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3531,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   302,    -1,    -1,   458,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2878,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3568,  3569,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3577,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2924,
     514,   515,   516,    -1,    -1,    -1,   367,   521,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   537,    -1,    -1,   540,    -1,    -1,    -1,
      -1,   392,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   402,   403,    -1,    -1,   406,   407,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   576,    -1,    -1,    -1,   427,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   473,    -1,    -1,    -1,  3041,  3042,    -1,    -1,
    3720,    -1,    -1,    -1,    -1,   486,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3755,   517,    -1,    -1,    -1,
     521,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3769,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   539,  3104,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3129,    -1,    -1,    -1,  3133,  3134,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3145,    -1,    -1,    -1,    -1,  3150,    -1,    -1,  3153,    -1,
    3155,  3156,    -1,    -1,    -1,   596,    -1,    -1,    -1,    -1,
      -1,   602,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3861,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3222,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3914,    -1,    -1,    -1,    -1,    -1,
      -1,  3246,  3922,    -1,    -1,    -1,    -1,    -1,    -1,  3929,
      -1,  3931,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3967,    -1,    -1,
      -1,    -1,    -1,  3973,  3974,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3307,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3315,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4069,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4099,
      -1,  4101,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4111,    -1,  4113,  4114,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4140,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4199,
      -1,  4201,    -1,    -1,    -1,    -1,  3531,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4216,  4217,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4230,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4241,    -1,  3568,  3569,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3577,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4289,
    4290,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4302,  4303,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4319,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4349,
      -1,    -1,    -1,    -1,    -1,    -1,  4356,    -1,    -1,  4359,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4389,
      -1,    -1,    -1,    -1,    -1,  3720,  4396,    -1,  4398,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4408,    -1,
      -1,    -1,  4412,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4425,    -1,  4427,    -1,  4429,
    3755,    -1,    -1,    -1,    -1,    -1,  4436,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3769,    -1,  4446,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4460,  4461,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4476,  4477,    -1,    -1,
      -1,  4481,    -1,    -1,    -1,    -1,    -1,  4487,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4517,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3922,    -1,    -1,
      -1,    -1,    -1,    -1,  3929,    -1,  3931,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3967,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4069,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4099,    -1,  4101,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4111,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4199,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4217,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4241,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4289,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4356,    -1,    -1,    -1,    -1,    -1,    -1,     5,    -1,
       7,     8,     9,    10,    11,    -1,    -1,    14,    -1,    -1,
      -1,    18,    -1,    -1,    21,    -1,    23,    24,    25,    26,
      27,    28,    -1,    30,  4389,    -1,    33,    34,    35,    36,
      37,    38,    39,    -1,    41,    42,    43,    44,    45,    -1,
      47,    48,    -1,    -1,    51,    52,    53,    54,    55,    -1,
      57,    58,    59,    60,    -1,    62,    63,    64,    65,    66,
      67,    -1,    69,    70,    -1,    72,    73,    74,    75,    76,
      77,    78,    79,    80,    -1,    82,    83,    -1,    85,    86,
      87,    88,    89,    -1,    91,    92,    93,    -1,    -1,    96,
      97,    98,    99,    -1,   101,   102,   103,    -1,   105,   106,
     107,   108,   109,   110,    -1,    -1,    -1,    -1,   115,   116,
     117,    -1,    -1,   120,   121,   122,    -1,   124,    -1,    -1,
      -1,   128,  4487,   130,   131,   132,   133,   134,    -1,    -1,
      -1,   138,    -1,    -1,   141,   142,   143,    -1,    -1,    -1,
     147,    -1,   149,   150,    -1,   152,   153,   154,    -1,    -1,
     157,   158,  4517,   160,   161,   162,   163,   164,   165,   166,
      -1,   168,   169,   170,   171,   172,   173,   174,   175,   176,
      -1,   178,   179,   180,   181,    -1,   183,    -1,    -1,    -1,
     187,   188,    -1,   190,    -1,   192,    -1,   194,   195,   196,
     197,    -1,   199,    -1,   201,    -1,   203,    -1,   205,   206,
      -1,   208,   209,    -1,   211,   212,    -1,    -1,    -1,   216,
     217,   218,   219,   220,    -1,   222,   223,   224,    -1,    -1,
     227,    -1,    -1,    -1,   231,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,   241,   242,    -1,   244,   245,    -1,
      -1,    -1,   249,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,   258,   259,   260,    -1,    -1,    -1,    -1,    -1,   266,
     267,    -1,   269,    -1,   271,    -1,   273,   274,    -1,    -1,
     277,    -1,    -1,    -1,    -1,   282,    -1,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,    -1,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,    -1,    -1,    -1,    -1,
     317,   318,   319,   320,   321,   322,    -1,    -1,   325,   326,
     327,   328,    -1,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,    -1,   342,   343,   344,    -1,    -1,
     347,   348,   349,   350,   351,   352,   353,   354,   355,    -1,
     357,   358,   359,    -1,   361,   362,   363,    -1,   365,   366,
     367,    -1,   369,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   379,   380,   381,   382,   383,   384,    -1,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
      -1,   398,   399,   400,    -1,   402,    -1,   404,   405,   406,
     407,   408,    -1,   410,   411,   412,    -1,    -1,   415,    -1,
      -1,    -1,   419,   420,   421,   422,   423,    -1,    -1,   426,
     427,   428,   429,   430,    -1,   432,   433,    -1,   435,   436,
     437,   438,   439,   440,    -1,   442,    -1,   444,   445,    -1,
     447,   448,   449,    -1,   451,    -1,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
     467,    -1,    -1,    -1,   471,   472,   473,   474,    -1,    -1,
      -1,   478,    -1,    -1,    -1,   482,    -1,   484,   485,   486,
     487,    -1,   489,   490,   491,   492,   493,    -1,    -1,    -1,
      -1,    -1,   499,   500,   501,    -1,   503,   504,    -1,   506,
      -1,    -1,   509,    -1,    -1,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,    -1,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,    -1,    -1,   540,   541,   542,   543,    -1,   545,   546,
     547,    -1,   549,   550,   551,   552,    -1,    -1,    -1,    -1,
     557,   558,   559,    -1,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,    -1,   574,   575,    -1,
      -1,   578,    -1,    -1,   581,    -1,   583,    -1,   585,   586,
      -1,    -1,   589,   590,   591,   592,   593,    -1,    -1,   596,
     597,    -1,   599,   600,   601,   602,   603,   604,    -1,    -1,
      -1,    -1,    -1,    -1,   611,   612,    -1,   614,   615,   616,
      -1,    -1,   619,    -1,    -1,    -1,   623,   624,    -1,    -1,
      -1,    -1,   629,   630,    -1,    -1,   633,   634,    -1,    -1,
     637,   638,     5,    -1,     7,     8,     9,    10,    11,    12,
      -1,    14,    -1,    -1,    -1,    18,    -1,    -1,    21,    -1,
      23,    24,    25,    26,    27,    28,    -1,    30,    -1,    -1,
      33,    34,    35,    36,    37,    38,    39,    -1,    41,    42,
      43,    -1,    45,    -1,    47,    48,    -1,    -1,    51,    52,
      53,    54,    55,    -1,    57,    58,    59,    60,    -1,    62,
      63,    64,    65,    66,    67,    -1,    69,    70,    -1,    72,
      73,    74,    75,    76,    77,    78,    79,    80,    -1,    82,
      83,    -1,    85,    86,    87,    88,    89,    -1,    91,    92,
      93,    -1,    -1,    96,    97,    98,    99,    -1,   101,   102,
     103,    -1,   105,   106,   107,   108,   109,   110,    -1,    -1,
      -1,    -1,   115,   116,   117,    -1,    -1,   120,   121,   122,
      -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,
     133,   134,    -1,    -1,    -1,   138,    -1,    -1,   141,   142,
     143,    -1,    -1,    -1,   147,    -1,   149,   150,    -1,   152,
     153,   154,    -1,    -1,   157,   158,    -1,   160,   161,   162,
     163,   164,   165,   166,    -1,   168,   169,   170,   171,   172,
     173,   174,   175,   176,    -1,   178,   179,   180,   181,    -1,
     183,    -1,    -1,    -1,   187,   188,    -1,   190,    -1,   192,
      -1,   194,   195,   196,   197,    -1,   199,    -1,   201,    -1,
     203,    -1,   205,   206,    -1,   208,   209,    -1,   211,   212,
      -1,    -1,    -1,   216,   217,   218,   219,   220,    -1,   222,
     223,   224,    -1,    -1,   227,    -1,    -1,    -1,   231,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,
      -1,   244,   245,    -1,    -1,    -1,   249,    -1,    -1,   252,
     253,    -1,    -1,   256,    -1,   258,   259,   260,    -1,    -1,
      -1,    -1,    -1,   266,   267,    -1,   269,    -1,   271,    -1,
     273,   274,    -1,    -1,   277,    -1,    -1,    -1,    -1,   282,
      -1,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,    -1,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
      -1,    -1,    -1,    -1,   317,   318,   319,   320,   321,   322,
      -1,    -1,   325,   326,   327,   328,    -1,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,    -1,   342,
     343,   344,    -1,    -1,   347,   348,   349,   350,   351,   352,
     353,   354,   355,    -1,   357,   358,   359,    -1,   361,   362,
     363,   364,   365,   366,   367,    -1,   369,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   379,   380,   381,   382,
     383,   384,    -1,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,    -1,   398,   399,   400,    -1,   402,
      -1,   404,   405,   406,   407,   408,    -1,   410,   411,   412,
      -1,    -1,   415,    -1,    -1,    -1,   419,   420,   421,   422,
     423,    -1,    -1,   426,   427,   428,   429,   430,    -1,   432,
     433,    -1,   435,   436,   437,   438,   439,   440,    -1,   442,
      -1,   444,   445,    -1,   447,   448,   449,    -1,   451,    -1,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,   467,    -1,    -1,    -1,   471,   472,
     473,   474,    -1,    -1,    -1,   478,    -1,    -1,    -1,   482,
      -1,   484,   485,   486,   487,    -1,   489,   490,   491,   492,
     493,    -1,    -1,    -1,    -1,    -1,   499,   500,   501,    -1,
     503,   504,    -1,   506,    -1,    -1,   509,    -1,    -1,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,    -1,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,    -1,    -1,   540,   541,   542,
     543,    -1,   545,   546,   547,    -1,   549,   550,   551,   552,
      -1,    -1,    -1,    -1,    -1,   558,   559,    -1,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
      -1,   574,   575,    -1,    -1,   578,    -1,    -1,   581,    -1,
     583,    -1,   585,   586,    -1,    -1,   589,   590,   591,   592,
     593,    -1,    -1,   596,   597,    -1,   599,   600,   601,   602,
     603,   604,    -1,    -1,    -1,    -1,    -1,    -1,   611,   612,
      -1,   614,   615,   616,    -1,    -1,   619,    -1,    -1,    -1,
     623,   624,    -1,    -1,    -1,    -1,   629,   630,    -1,    -1,
     633,   634,    -1,    -1,   637,   638,     5,    -1,     7,     8,
       9,    10,    11,    -1,    -1,    14,    -1,    -1,    -1,    18,
      -1,    -1,    21,    -1,    23,    24,    25,    26,    27,    28,
      -1,    30,    -1,    -1,    33,    34,    35,    36,    37,    38,
      39,    -1,    41,    42,    43,    -1,    45,    -1,    47,    48,
      -1,    -1,    51,    52,    53,    54,    55,    -1,    57,    58,
      59,    60,    -1,    62,    63,    64,    65,    66,    67,    -1,
      69,    70,    -1,    72,    73,    74,    75,    76,    77,    78,
      79,    80,    -1,    82,    83,    -1,    85,    86,    87,    88,
      89,    -1,    91,    92,    93,    -1,    -1,    96,    97,    98,
      99,    -1,   101,   102,   103,    -1,   105,   106,   107,   108,
     109,   110,    -1,    -1,    -1,    -1,   115,   116,   117,    -1,
      -1,   120,   121,   122,    -1,   124,    -1,    -1,    -1,   128,
      -1,   130,   131,   132,   133,   134,    -1,    -1,    -1,   138,
      -1,    -1,   141,   142,   143,    -1,    -1,    -1,   147,    -1,
     149,   150,    -1,   152,   153,   154,    -1,    -1,   157,   158,
      -1,   160,   161,   162,   163,   164,   165,   166,    -1,   168,
     169,   170,   171,   172,   173,   174,   175,   176,    -1,   178,
     179,   180,   181,    -1,   183,    -1,    -1,    -1,   187,   188,
     189,   190,    -1,   192,    -1,   194,   195,   196,   197,    -1,
     199,    -1,   201,    -1,   203,    -1,   205,   206,    -1,   208,
     209,    -1,   211,   212,    -1,    -1,    -1,   216,   217,   218,
     219,   220,    -1,   222,   223,   224,    -1,    -1,   227,    -1,
      -1,    -1,   231,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,   241,   242,    -1,   244,   245,    -1,    -1,    -1,
     249,    -1,    -1,   252,   253,    -1,    -1,   256,    -1,   258,
     259,   260,    -1,    -1,    -1,    -1,    -1,   266,   267,    -1,
     269,    -1,   271,    -1,   273,   274,    -1,    -1,   277,    -1,
      -1,    -1,    -1,   282,    -1,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,    -1,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,    -1,    -1,    -1,    -1,   317,   318,
     319,   320,   321,   322,    -1,    -1,   325,   326,   327,   328,
      -1,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,    -1,   342,   343,   344,    -1,    -1,   347,   348,
     349,   350,   351,   352,   353,   354,   355,    -1,   357,   358,
     359,    -1,   361,   362,   363,    -1,   365,   366,   367,    -1,
     369,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     379,   380,   381,   382,   383,   384,    -1,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,    -1,   398,
     399,   400,    -1,   402,    -1,   404,   405,   406,   407,   408,
      -1,   410,   411,   412,    -1,    -1,   415,    -1,    -1,    -1,
     419,   420,   421,   422,   423,    -1,    -1,   426,   427,   428,
     429,   430,    -1,   432,   433,    -1,   435,   436,   437,   438,
     439,   440,    -1,   442,    -1,   444,   445,    -1,   447,   448,
     449,    -1,   451,    -1,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,   467,    -1,
      -1,    -1,   471,   472,   473,   474,    -1,    -1,    -1,   478,
      -1,    -1,    -1,   482,    -1,   484,   485,   486,   487,    -1,
     489,   490,   491,   492,   493,    -1,    -1,    -1,    -1,    -1,
     499,   500,   501,    -1,   503,   504,    -1,   506,    -1,    -1,
     509,    -1,    -1,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,    -1,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,    -1,
      -1,   540,   541,   542,   543,    -1,   545,   546,   547,    -1,
     549,   550,   551,   552,    -1,    -1,    -1,    -1,    -1,   558,
     559,    -1,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,    -1,   574,   575,    -1,    -1,   578,
      -1,    -1,   581,    -1,   583,    -1,   585,   586,    -1,    -1,
     589,   590,   591,   592,   593,    -1,    -1,   596,   597,    -1,
     599,   600,   601,   602,   603,   604,    -1,    -1,    -1,    -1,
      -1,    -1,   611,   612,    -1,   614,   615,   616,    -1,    -1,
     619,    -1,    -1,    -1,   623,   624,    -1,    -1,    -1,    -1,
     629,   630,    -1,    -1,   633,   634,    -1,    -1,   637,   638,
       5,    -1,     7,     8,     9,    10,    11,    -1,    -1,    14,
      -1,    -1,    -1,    18,    -1,    -1,    21,    -1,    23,    24,
      25,    26,    27,    28,    -1,    30,    -1,    -1,    33,    34,
      35,    36,    37,    38,    39,    -1,    41,    42,    43,    -1,
      45,    -1,    47,    48,    -1,    -1,    51,    52,    53,    54,
      55,    -1,    57,    58,    59,    60,    -1,    62,    63,    64,
      65,    66,    67,    -1,    69,    70,    -1,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    -1,    82,    83,    -1,
      85,    86,    87,    88,    89,    -1,    91,    92,    93,    -1,
      -1,    96,    97,    98,    99,    -1,   101,   102,   103,    -1,
     105,   106,   107,   108,   109,   110,    -1,    -1,    -1,    -1,
     115,   116,   117,    -1,    -1,   120,   121,   122,    -1,   124,
      -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,   134,
      -1,    -1,    -1,   138,    -1,    -1,   141,   142,   143,    -1,
      -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,   154,
      -1,    -1,   157,   158,    -1,   160,   161,   162,   163,   164,
     165,   166,    -1,   168,   169,   170,   171,   172,   173,   174,
     175,   176,    -1,   178,   179,   180,   181,    -1,   183,    -1,
      -1,    -1,   187,   188,   189,   190,    -1,   192,    -1,   194,
     195,   196,   197,    -1,   199,    -1,   201,    -1,   203,    -1,
     205,   206,    -1,   208,   209,    -1,   211,   212,    -1,    -1,
      -1,   216,   217,   218,   219,   220,    -1,   222,   223,   224,
      -1,    -1,   227,    -1,    -1,    -1,   231,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,   241,   242,    -1,   244,
     245,    -1,    -1,    -1,   249,    -1,    -1,   252,   253,    -1,
      -1,   256,    -1,   258,   259,   260,    -1,    -1,    -1,    -1,
      -1,   266,   267,    -1,   269,    -1,   271,    -1,   273,   274,
      -1,    -1,   277,    -1,    -1,    -1,    -1,   282,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,    -1,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,    -1,    -1,
      -1,    -1,   317,   318,   319,   320,   321,   322,    -1,    -1,
     325,   326,   327,   328,    -1,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,    -1,   342,   343,   344,
      -1,    -1,   347,   348,   349,   350,   351,   352,   353,   354,
     355,    -1,   357,   358,   359,    -1,   361,   362,   363,    -1,
     365,   366,   367,    -1,   369,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   379,   380,   381,   382,   383,   384,
      -1,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,    -1,   398,   399,   400,    -1,   402,    -1,   404,
     405,   406,   407,   408,    -1,   410,   411,   412,    -1,    -1,
     415,    -1,    -1,    -1,   419,   420,   421,   422,   423,    -1,
      -1,   426,   427,   428,   429,   430,    -1,   432,   433,    -1,
     435,   436,   437,   438,   439,   440,    -1,   442,    -1,   444,
     445,    -1,   447,   448,   449,    -1,   451,    -1,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,   467,    -1,    -1,    -1,   471,   472,   473,   474,
      -1,    -1,    -1,   478,    -1,    -1,    -1,   482,    -1,   484,
     485,   486,   487,    -1,   489,   490,   491,   492,   493,    -1,
      -1,    -1,    -1,    -1,   499,   500,   501,    -1,   503,   504,
      -1,   506,    -1,    -1,   509,    -1,    -1,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,    -1,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,    -1,    -1,   540,   541,   542,   543,    -1,
     545,   546,   547,    -1,   549,   550,   551,   552,    -1,    -1,
      -1,    -1,    -1,   558,   559,    -1,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,    -1,   574,
     575,    -1,    -1,   578,    -1,    -1,   581,    -1,   583,    -1,
     585,   586,    -1,    -1,   589,   590,   591,   592,   593,    -1,
      -1,   596,   597,    -1,   599,   600,   601,   602,   603,   604,
      -1,    -1,    -1,    -1,    -1,    -1,   611,   612,    -1,   614,
     615,   616,    -1,    -1,   619,    -1,    -1,    -1,   623,   624,
      -1,    -1,    -1,    -1,   629,   630,    -1,    -1,   633,   634,
      -1,    -1,   637,   638,     5,    -1,     7,     8,     9,    10,
      11,    -1,    -1,    14,    -1,    -1,    -1,    18,    -1,    -1,
      21,    -1,    23,    24,    25,    26,    27,    28,    -1,    30,
      -1,    -1,    33,    34,    35,    36,    37,    38,    39,    -1,
      41,    42,    43,    -1,    45,    -1,    47,    48,    -1,    -1,
      51,    52,    53,    54,    55,    -1,    57,    58,    59,    60,
      -1,    62,    63,    64,    65,    66,    67,    -1,    69,    70,
      -1,    72,    73,    74,    75,    76,    77,    78,    79,    80,
      -1,    82,    83,    -1,    85,    86,    87,    88,    89,    -1,
      91,    92,    93,    -1,    -1,    96,    97,    98,    99,    -1,
     101,   102,   103,    -1,   105,   106,   107,   108,   109,   110,
      -1,    -1,    -1,    -1,   115,   116,   117,    -1,    -1,   120,
     121,   122,    -1,   124,    -1,    -1,    -1,   128,    -1,   130,
     131,   132,   133,   134,    -1,    -1,    -1,   138,    -1,    -1,
     141,   142,   143,    -1,    -1,    -1,   147,    -1,   149,   150,
      -1,   152,   153,   154,    -1,    -1,   157,   158,    -1,   160,
     161,   162,   163,   164,   165,   166,    -1,   168,   169,   170,
     171,   172,   173,   174,   175,   176,    -1,   178,   179,   180,
     181,    -1,   183,    -1,    -1,    -1,   187,   188,   189,   190,
      -1,   192,    -1,   194,   195,   196,   197,    -1,   199,    -1,
     201,    -1,   203,    -1,   205,   206,    -1,   208,   209,    -1,
     211,   212,    -1,    -1,    -1,   216,   217,   218,   219,   220,
      -1,   222,   223,   224,    -1,    -1,   227,    -1,    -1,    -1,
     231,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
     241,   242,    -1,   244,   245,    -1,    -1,    -1,   249,    -1,
      -1,   252,   253,    -1,    -1,   256,    -1,   258,   259,   260,
      -1,    -1,    -1,    -1,    -1,   266,   267,    -1,   269,    -1,
     271,    -1,   273,   274,    -1,    -1,   277,    -1,    -1,    -1,
      -1,   282,    -1,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
      -1,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,    -1,    -1,    -1,    -1,   317,   318,   319,   320,
     321,   322,    -1,    -1,   325,   326,   327,   328,    -1,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
      -1,   342,   343,   344,    -1,    -1,   347,   348,   349,   350,
     351,   352,   353,   354,   355,    -1,   357,   358,   359,    -1,
     361,   362,   363,    -1,   365,   366,   367,    -1,   369,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   379,   380,
     381,   382,   383,   384,    -1,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,    -1,   398,   399,   400,
      -1,   402,    -1,   404,   405,   406,   407,   408,    -1,   410,
     411,   412,    -1,    -1,   415,    -1,    -1,    -1,   419,   420,
     421,   422,   423,    -1,    -1,   426,   427,   428,   429,   430,
      -1,   432,   433,    -1,   435,   436,   437,   438,   439,   440,
      -1,   442,    -1,   444,   445,    -1,   447,   448,   449,    -1,
     451,    -1,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,   467,    -1,    -1,    -1,
     471,   472,   473,   474,    -1,    -1,    -1,   478,    -1,    -1,
      -1,   482,    -1,   484,   485,   486,   487,    -1,   489,   490,
     491,   492,   493,    -1,    -1,    -1,    -1,    -1,   499,   500,
     501,    -1,   503,   504,    -1,   506,    -1,    -1,   509,    -1,
      -1,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,    -1,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,    -1,    -1,   540,
     541,   542,   543,    -1,   545,   546,   547,    -1,   549,   550,
     551,   552,    -1,    -1,    -1,    -1,    -1,   558,   559,    -1,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,    -1,   574,   575,    -1,    -1,   578,    -1,    -1,
     581,    -1,   583,    -1,   585,   586,    -1,    -1,   589,   590,
     591,   592,   593,    -1,    -1,   596,   597,    -1,   599,   600,
     601,   602,   603,   604,    -1,    -1,    -1,    -1,    -1,    -1,
     611,   612,    -1,   614,   615,   616,    -1,    -1,   619,    -1,
      -1,    -1,   623,   624,    -1,    -1,    -1,    -1,   629,   630,
      -1,    -1,   633,   634,    -1,    -1,   637,   638,     5,    -1,
       7,     8,     9,    10,    11,    -1,    -1,    14,    -1,    -1,
      -1,    18,    -1,    -1,    21,    -1,    23,    24,    25,    26,
      27,    28,    -1,    30,    -1,    -1,    33,    34,    35,    36,
      37,    38,    39,    -1,    41,    42,    43,    -1,    45,    -1,
      47,    48,    -1,    -1,    51,    52,    53,    54,    55,    -1,
      57,    58,    59,    60,    -1,    62,    63,    64,    65,    66,
      67,    -1,    69,    70,    -1,    72,    73,    74,    75,    76,
      77,    78,    79,    80,    -1,    82,    83,    -1,    85,    86,
      87,    88,    89,    -1,    91,    92,    93,    -1,    -1,    96,
      97,    98,    99,    -1,   101,   102,   103,    -1,   105,   106,
     107,   108,   109,   110,    -1,    -1,    -1,    -1,   115,   116,
     117,    -1,    -1,   120,   121,   122,    -1,   124,    -1,    -1,
      -1,   128,    -1,   130,   131,   132,   133,   134,    -1,    -1,
      -1,   138,    -1,    -1,   141,   142,   143,    -1,    -1,    -1,
     147,    -1,   149,   150,    -1,   152,   153,   154,    -1,    -1,
     157,   158,    -1,   160,   161,   162,   163,   164,   165,   166,
      -1,   168,   169,   170,   171,   172,   173,   174,   175,   176,
      -1,   178,   179,   180,   181,    -1,   183,    -1,    -1,    -1,
     187,   188,    -1,   190,    -1,   192,    -1,   194,   195,   196,
     197,    -1,   199,    -1,   201,    -1,   203,    -1,   205,   206,
      -1,   208,   209,    -1,   211,   212,    -1,    -1,    -1,   216,
     217,   218,   219,   220,    -1,   222,   223,   224,    -1,    -1,
     227,    -1,    -1,    -1,   231,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,   241,   242,    -1,   244,   245,    -1,
      -1,    -1,   249,    -1,    -1,   252,   253,    -1,    -1,   256,
      -1,   258,   259,   260,    -1,    -1,    -1,    -1,    -1,   266,
     267,    -1,   269,    -1,   271,    -1,   273,   274,    -1,    -1,
     277,    -1,    -1,    -1,    -1,   282,    -1,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,    -1,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,    -1,    -1,    -1,    -1,
     317,   318,   319,   320,   321,   322,    -1,    -1,   325,   326,
     327,   328,    -1,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,    -1,   342,   343,   344,    -1,    -1,
     347,   348,   349,   350,   351,   352,   353,   354,   355,    -1,
     357,   358,   359,    -1,   361,   362,   363,    -1,   365,   366,
     367,    -1,   369,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   379,   380,   381,   382,   383,   384,    -1,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
      -1,   398,   399,   400,    -1,   402,    -1,   404,   405,   406,
     407,   408,    -1,   410,   411,   412,    -1,    -1,   415,    -1,
      -1,    -1,   419,   420,   421,   422,   423,    -1,    -1,   426,
     427,   428,   429,   430,    -1,   432,   433,    -1,   435,   436,
     437,   438,   439,   440,    -1,   442,    -1,   444,   445,    -1,
     447,   448,   449,    -1,   451,    -1,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
     467,    -1,    -1,    -1,   471,   472,   473,   474,    -1,    -1,
      -1,   478,    -1,    -1,    -1,   482,    -1,   484,   485,   486,
     487,    -1,   489,   490,   491,   492,   493,    -1,    -1,    -1,
      -1,    -1,   499,   500,   501,    -1,   503,   504,    -1,   506,
      -1,    -1,   509,    -1,    -1,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,    -1,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,    -1,    -1,   540,   541,   542,   543,    -1,   545,   546,
     547,    -1,   549,   550,   551,   552,    -1,    -1,    -1,    -1,
      -1,   558,   559,    -1,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,    -1,   574,   575,    -1,
      -1,   578,    -1,    -1,   581,    -1,   583,    -1,   585,   586,
      -1,    -1,   589,   590,   591,   592,   593,    -1,    -1,   596,
     597,    -1,   599,   600,   601,   602,   603,   604,    -1,    -1,
      -1,    -1,    -1,    -1,   611,   612,    -1,   614,   615,   616,
      -1,    -1,   619,    -1,    -1,    -1,   623,   624,    -1,    -1,
      -1,    -1,   629,   630,    -1,    -1,   633,   634,    -1,    -1,
     637,   638,     5,    -1,     7,     8,     9,    10,    11,    -1,
      -1,    14,    -1,    -1,    -1,    18,    -1,    -1,    21,    -1,
      23,    24,    25,    26,    27,    28,    -1,    30,    -1,    -1,
      33,    34,    35,    36,    37,    38,    39,    -1,    41,    42,
      43,    -1,    45,    -1,    47,    48,    -1,    -1,    51,    52,
      53,    54,    55,    -1,    57,    58,    59,    60,    -1,    62,
      63,    64,    65,    66,    67,    -1,    69,    70,    -1,    72,
      73,    74,    75,    76,    77,    78,    79,    80,    -1,    82,
      83,    -1,    85,    86,    87,    88,    89,    -1,    91,    92,
      93,    -1,    -1,    96,    97,    98,    99,    -1,   101,   102,
     103,    -1,   105,   106,   107,   108,   109,   110,    -1,    -1,
      -1,    -1,   115,   116,   117,    -1,    -1,   120,   121,   122,
      -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,
     133,   134,    -1,    -1,    -1,   138,    -1,    -1,   141,   142,
     143,    -1,    -1,    -1,   147,    -1,   149,   150,    -1,   152,
     153,   154,    -1,    -1,   157,   158,    -1,   160,   161,   162,
     163,   164,   165,   166,    -1,   168,   169,   170,   171,   172,
     173,   174,   175,   176,    -1,   178,   179,   180,   181,    -1,
     183,    -1,    -1,    -1,   187,   188,    -1,   190,    -1,   192,
      -1,   194,   195,   196,   197,    -1,   199,    -1,   201,    -1,
     203,    -1,   205,   206,    -1,   208,   209,    -1,   211,   212,
      -1,    -1,    -1,   216,   217,   218,   219,   220,    -1,   222,
     223,   224,    -1,    -1,   227,    -1,    -1,    -1,   231,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,
      -1,   244,   245,    -1,    -1,    -1,   249,    -1,    -1,   252,
     253,    -1,    -1,   256,    -1,   258,   259,   260,    -1,    -1,
      -1,    -1,    -1,   266,   267,    -1,   269,    -1,   271,    -1,
     273,   274,    -1,    -1,   277,    -1,    -1,    -1,    -1,   282,
      -1,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,    -1,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
      -1,    -1,    -1,    -1,   317,   318,   319,   320,   321,   322,
      -1,    -1,   325,   326,   327,   328,    -1,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,    -1,   342,
     343,   344,    -1,    -1,   347,   348,   349,   350,   351,   352,
     353,   354,   355,    -1,   357,   358,   359,    -1,   361,   362,
     363,    -1,   365,   366,   367,    -1,   369,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   379,   380,   381,   382,
     383,   384,    -1,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,    -1,   398,   399,   400,    -1,   402,
      -1,   404,   405,   406,   407,   408,    -1,   410,   411,   412,
      -1,    -1,   415,    -1,    -1,    -1,   419,   420,   421,   422,
     423,    -1,    -1,   426,   427,   428,   429,   430,    -1,   432,
     433,    -1,   435,   436,   437,   438,   439,   440,    -1,   442,
      -1,   444,   445,    -1,   447,   448,   449,    -1,   451,    -1,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,   467,    -1,    -1,    -1,   471,   472,
     473,   474,    -1,    -1,    -1,   478,    -1,    -1,    -1,   482,
      -1,   484,   485,   486,   487,    -1,   489,   490,   491,   492,
     493,    -1,    -1,    -1,    -1,    -1,   499,   500,   501,    -1,
     503,   504,    -1,   506,    -1,    -1,   509,    -1,    -1,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,    -1,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,    -1,    -1,   540,   541,   542,
     543,    -1,   545,   546,   547,    -1,   549,   550,   551,   552,
      -1,    -1,    -1,    -1,    -1,   558,   559,    -1,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
      -1,   574,   575,    -1,    -1,   578,    -1,    -1,   581,    -1,
     583,    -1,   585,   586,    -1,    -1,   589,   590,   591,   592,
     593,    -1,    -1,   596,   597,    -1,   599,   600,   601,   602,
     603,   604,    -1,    -1,    -1,    -1,    -1,    -1,   611,   612,
      -1,   614,   615,   616,    -1,    -1,   619,    -1,    -1,    -1,
     623,   624,    -1,    -1,    -1,    -1,   629,   630,    -1,    -1,
     633,   634,    -1,    -1,   637,   638,     5,    -1,     7,     8,
       9,    10,    11,    12,    -1,    14,    -1,    -1,    -1,    18,
      -1,    -1,    21,    -1,    23,    24,    25,    26,    27,    28,
      -1,    30,    -1,    -1,    33,    34,    35,    36,    37,    38,
      39,    -1,    41,    42,    43,    -1,    45,    -1,    47,    48,
      -1,    -1,    51,    52,    53,    54,    55,    -1,    57,    58,
      59,    60,    -1,    62,    63,    64,    65,    66,    67,    -1,
      69,    70,    -1,    72,    73,    74,    75,    76,    77,    78,
      79,    80,    -1,    82,    83,    -1,    85,    86,    87,    88,
      89,    -1,    91,    92,    93,    -1,    -1,    96,    97,    98,
      99,    -1,   101,   102,   103,    -1,   105,   106,   107,   108,
     109,   110,    -1,    -1,    -1,    -1,   115,   116,   117,    -1,
      -1,   120,   121,   122,    -1,   124,    -1,    -1,    -1,   128,
      -1,   130,   131,   132,   133,   134,    -1,    -1,    -1,   138,
      -1,    -1,   141,   142,   143,    -1,    -1,    -1,   147,    -1,
     149,   150,    -1,   152,   153,   154,    -1,    -1,   157,   158,
      -1,   160,   161,   162,   163,   164,   165,   166,    -1,   168,
     169,   170,   171,   172,   173,   174,   175,   176,    -1,   178,
     179,   180,   181,    -1,   183,    -1,    -1,    -1,   187,   188,
      -1,   190,    -1,   192,    -1,   194,   195,   196,   197,    -1,
     199,    -1,   201,    -1,   203,    -1,   205,   206,    -1,   208,
     209,    -1,   211,   212,    -1,    -1,    -1,   216,   217,   218,
     219,   220,    -1,   222,   223,   224,    -1,    -1,   227,    -1,
      -1,    -1,   231,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,   241,   242,    -1,   244,   245,    -1,    -1,    -1,
     249,    -1,    -1,   252,   253,    -1,    -1,   256,    -1,   258,
     259,   260,    -1,    -1,    -1,    -1,    -1,   266,   267,    -1,
     269,    -1,   271,    -1,   273,   274,    -1,    -1,   277,    -1,
      -1,    -1,    -1,   282,    -1,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,    -1,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,    -1,    -1,    -1,    -1,   317,   318,
     319,   320,   321,   322,    -1,    -1,   325,   326,   327,   328,
      -1,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,    -1,   342,   343,   344,    -1,    -1,   347,   348,
     349,   350,   351,    -1,   353,   354,   355,    -1,   357,   358,
     359,    -1,   361,   362,   363,    -1,   365,   366,   367,    -1,
     369,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     379,   380,   381,   382,   383,   384,    -1,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,    -1,   398,
     399,   400,    -1,   402,    -1,   404,   405,   406,   407,   408,
      -1,   410,   411,   412,    -1,    -1,   415,    -1,    -1,    -1,
     419,   420,   421,   422,   423,    -1,    -1,   426,   427,   428,
     429,   430,    -1,   432,   433,    -1,   435,   436,   437,   438,
     439,   440,    -1,   442,    -1,   444,   445,    -1,   447,   448,
     449,    -1,   451,    -1,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,   467,    -1,
      -1,    -1,   471,   472,   473,   474,    -1,    -1,    -1,   478,
      -1,    -1,    -1,   482,    -1,   484,   485,   486,   487,    -1,
     489,   490,   491,   492,   493,    -1,    -1,    -1,    -1,    -1,
     499,   500,   501,    -1,   503,   504,    -1,   506,    -1,    -1,
     509,    -1,    -1,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,    -1,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,    -1,
      -1,   540,   541,   542,   543,    -1,   545,   546,   547,    -1,
     549,   550,   551,   552,    -1,    -1,    -1,    -1,    -1,   558,
     559,    -1,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,    -1,   574,   575,    -1,    -1,   578,
      -1,    -1,   581,    -1,   583,    -1,   585,   586,    -1,    -1,
     589,   590,   591,   592,   593,    -1,    -1,   596,   597,    -1,
     599,   600,   601,   602,   603,   604,    -1,    -1,    -1,    -1,
      -1,    -1,   611,   612,    -1,   614,   615,   616,    -1,    -1,
     619,    -1,    -1,    -1,   623,   624,    -1,    -1,    -1,    -1,
     629,   630,    -1,    -1,   633,   634,    -1,    -1,   637,   638,
       5,    -1,     7,     8,     9,    10,    11,    -1,    -1,    14,
      -1,    -1,    -1,    18,    -1,    -1,    21,    -1,    23,    24,
      25,    26,    27,    28,    -1,    30,    -1,    -1,    33,    34,
      35,    36,    37,    38,    39,    -1,    41,    42,    43,    -1,
      45,    -1,    47,    48,    -1,    -1,    51,    52,    53,    54,
      55,    -1,    57,    58,    59,    60,    -1,    62,    63,    64,
      65,    66,    67,    -1,    69,    70,    -1,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    -1,    82,    83,    -1,
      85,    86,    87,    88,    89,    -1,    91,    92,    93,    -1,
      -1,    96,    97,    98,    99,    -1,   101,   102,   103,    -1,
     105,   106,   107,   108,   109,   110,    -1,    -1,    -1,    -1,
     115,   116,   117,    -1,    -1,   120,   121,   122,    -1,   124,
      -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,   134,
      -1,    -1,    -1,   138,    -1,    -1,   141,   142,   143,    -1,
      -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,   154,
      -1,    -1,   157,   158,    -1,   160,   161,   162,   163,   164,
     165,   166,    -1,   168,   169,   170,   171,   172,   173,   174,
     175,   176,    -1,   178,   179,   180,   181,    -1,   183,    -1,
      -1,    -1,   187,   188,    -1,   190,    -1,   192,    -1,   194,
     195,   196,   197,    -1,   199,    -1,   201,    -1,   203,    -1,
     205,   206,    -1,   208,   209,    -1,   211,   212,    -1,    -1,
      -1,   216,   217,   218,   219,   220,    -1,   222,   223,   224,
      -1,    -1,   227,    -1,    -1,    -1,   231,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,   241,   242,    -1,   244,
     245,    -1,    -1,    -1,   249,    -1,    -1,   252,   253,    -1,
      -1,   256,    -1,   258,   259,   260,    -1,    -1,    -1,    -1,
      -1,   266,   267,    -1,   269,    -1,   271,    -1,   273,   274,
      -1,    -1,   277,    -1,    -1,    -1,    -1,   282,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,    -1,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,    -1,    -1,
      -1,    -1,   317,   318,   319,   320,   321,   322,    -1,    -1,
     325,   326,   327,   328,    -1,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,    -1,   342,   343,   344,
      -1,    -1,   347,   348,   349,   350,   351,   352,   353,   354,
     355,    -1,   357,   358,   359,    -1,   361,   362,   363,    -1,
     365,   366,   367,    -1,   369,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   379,   380,   381,   382,   383,   384,
      -1,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,    -1,   398,   399,   400,    -1,   402,    -1,   404,
     405,   406,   407,   408,    -1,   410,   411,   412,    -1,    -1,
     415,    -1,    -1,    -1,   419,   420,   421,   422,   423,    -1,
      -1,   426,   427,   428,   429,   430,    -1,   432,   433,    -1,
     435,   436,   437,   438,   439,   440,    -1,   442,    -1,   444,
     445,    -1,   447,   448,   449,    -1,   451,    -1,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,   467,    -1,    -1,    -1,   471,   472,   473,   474,
      -1,    -1,    -1,   478,    -1,    -1,    -1,   482,    -1,   484,
     485,   486,   487,    -1,   489,   490,   491,   492,   493,    -1,
      -1,    -1,    -1,    -1,   499,   500,   501,    -1,   503,   504,
      -1,   506,    -1,    -1,   509,    -1,    -1,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,    -1,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,    -1,    -1,   540,   541,   542,   543,    -1,
     545,   546,   547,    -1,   549,   550,   551,   552,    -1,    -1,
      -1,    -1,    -1,   558,   559,    -1,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,    -1,   574,
     575,    -1,    -1,   578,    -1,    -1,   581,    -1,   583,    -1,
     585,   586,    -1,    -1,   589,   590,   591,   592,   593,    -1,
      -1,   596,   597,    -1,   599,   600,   601,   602,   603,   604,
      -1,    -1,    -1,    -1,    -1,    -1,   611,   612,    -1,   614,
     615,   616,    -1,    -1,   619,    -1,    -1,    -1,   623,   624,
      -1,    -1,    -1,    -1,   629,   630,    -1,    -1,   633,   634,
      -1,    -1,   637,   638,     5,    -1,     7,     8,     9,    10,
      11,    -1,    -1,    14,    -1,    -1,    -1,    18,    -1,    -1,
      21,    -1,    23,    24,    25,    26,    27,    28,    -1,    30,
      -1,    -1,    33,    34,    35,    36,    37,    38,    39,    -1,
      41,    42,    43,    -1,    45,    -1,    47,    48,    -1,    -1,
      51,    52,    53,    54,    55,    -1,    57,    58,    59,    60,
      -1,    62,    63,    64,    65,    66,    67,    -1,    69,    70,
      -1,    72,    73,    74,    75,    76,    77,    78,    79,    80,
      -1,    82,    83,    -1,    85,    86,    87,    88,    89,    -1,
      91,    92,    93,    -1,    -1,    96,    97,    98,    99,    -1,
     101,   102,   103,    -1,   105,   106,   107,   108,   109,   110,
      -1,    -1,    -1,    -1,   115,   116,   117,    -1,    -1,   120,
     121,   122,    -1,   124,    -1,    -1,    -1,   128,    -1,   130,
     131,   132,   133,   134,    -1,    -1,    -1,   138,    -1,    -1,
     141,   142,   143,    -1,    -1,    -1,   147,    -1,   149,   150,
      -1,   152,   153,   154,    -1,    -1,   157,   158,    -1,   160,
     161,   162,   163,   164,   165,   166,    -1,   168,   169,   170,
     171,   172,   173,   174,   175,   176,    -1,   178,   179,   180,
     181,    -1,   183,    -1,    -1,    -1,   187,   188,    -1,   190,
      -1,   192,    -1,   194,   195,   196,   197,    -1,   199,    -1,
     201,    -1,   203,    -1,   205,   206,    -1,   208,   209,    -1,
     211,   212,    -1,    -1,    -1,   216,   217,   218,   219,   220,
      -1,   222,   223,   224,    -1,    -1,   227,    -1,    -1,    -1,
     231,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
     241,   242,    -1,   244,   245,    -1,    -1,    -1,   249,    -1,
      -1,   252,   253,    -1,    -1,   256,    -1,   258,   259,   260,
      -1,    -1,    -1,    -1,    -1,   266,   267,    -1,   269,    -1,
     271,    -1,   273,   274,    -1,    -1,   277,    -1,    -1,    -1,
      -1,   282,    -1,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
      -1,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,    -1,    -1,    -1,    -1,   317,   318,   319,   320,
     321,   322,    -1,    -1,   325,   326,   327,   328,    -1,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
      -1,   342,   343,   344,    -1,    -1,   347,   348,   349,   350,
     351,   352,   353,   354,   355,    -1,   357,   358,   359,    -1,
     361,   362,   363,    -1,   365,   366,   367,    -1,   369,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   379,   380,
     381,   382,   383,   384,    -1,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,    -1,   398,   399,   400,
      -1,   402,    -1,   404,   405,   406,   407,   408,    -1,   410,
     411,   412,    -1,    -1,   415,    -1,    -1,    -1,   419,   420,
     421,   422,   423,    -1,    -1,   426,   427,   428,   429,   430,
      -1,   432,   433,    -1,   435,   436,   437,   438,   439,   440,
      -1,   442,    -1,   444,   445,    -1,   447,   448,   449,    -1,
     451,    -1,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,   467,    -1,    -1,    -1,
     471,   472,   473,   474,    -1,    -1,    -1,   478,    -1,    -1,
      -1,   482,    -1,   484,   485,   486,   487,    -1,   489,   490,
     491,   492,   493,    -1,    -1,    -1,    -1,    -1,   499,   500,
     501,    -1,   503,   504,    -1,   506,    -1,    -1,   509,    -1,
      -1,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,    -1,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,    -1,    -1,   540,
     541,   542,   543,    -1,   545,   546,   547,    -1,   549,   550,
     551,   552,    -1,    -1,    -1,    -1,    -1,   558,   559,    -1,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,    -1,   574,   575,    -1,    -1,   578,    -1,    -1,
     581,    -1,   583,    -1,   585,   586,    -1,    -1,   589,   590,
     591,   592,   593,    -1,    -1,   596,   597,    -1,   599,   600,
     601,   602,   603,   604,    -1,    -1,    -1,    -1,    -1,    -1,
     611,   612,    -1,   614,   615,   616,    -1,    -1,   619,    -1,
      -1,    -1,   623,   624,    -1,    -1,    -1,    -1,   629,   630,
      -1,    -1,   633,   634,    -1,    -1,   637,   638,     5,    -1,
       7,     8,     9,    10,    11,    -1,    -1,    14,    -1,    -1,
      -1,    18,    -1,    -1,    21,    -1,    23,    24,    25,    26,
      27,    28,    -1,    30,    -1,    -1,    33,    34,    35,    36,
      37,    38,    39,    -1,    41,    42,    43,    -1,    45,    -1,
      47,    48,    -1,    -1,    51,    52,    53,    54,    55,    -1,
      57,    58,    59,    60,    -1,    62,    63,    64,    65,    66,
      67,    -1,    69,    70,    -1,    72,    73,    74,    75,    76,
      77,    78,    79,    80,    -1,    82,    83,    -1,    85,    86,
      87,    88,    89,    -1,    91,    92,    93,    -1,    -1,    96,
      97,    98,    99,    -1,   101,   102,   103,    -1,   105,   106,
     107,   108,   109,   110,    -1,    -1,    -1,    -1,   115,   116,
     117,    -1,    -1,   120,   121,   122,    -1,   124,    -1,    -1,
      -1,   128,    -1,   130,   131,   132,   133,   134,    -1,    -1,
      -1,   138,    -1,    -1,   141,   142,   143,    -1,    -1,    -1,
     147,    -1,   149,   150,    -1,   152,   153,   154,    -1,    -1,
     157,   158,    -1,   160,   161,   162,   163,   164,   165,   166,
      -1,   168,   169,   170,   171,   172,   173,   174,   175,   176,
      -1,   178,   179,   180,   181,    -1,   183,    -1,    -1,    -1,
     187,   188,    -1,   190,    -1,   192,    -1,   194,   195,   196,
     197,    -1,   199,    -1,   201,    -1,   203,    -1,   205,   206,
      -1,   208,   209,    -1,   211,   212,    -1,    -1,    -1,   216,
     217,   218,   219,   220,    -1,   222,   223,   224,    -1,    -1,
     227,    -1,    -1,    -1,   231,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,   241,   242,    -1,   244,   245,    -1,
      -1,    -1,   249,    -1,    -1,   252,   253,    -1,    -1,   256,
      -1,   258,   259,   260,    -1,    -1,    -1,    -1,    -1,   266,
     267,    -1,   269,    -1,   271,    -1,   273,   274,    -1,    -1,
     277,    -1,    -1,    -1,    -1,   282,    -1,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,    -1,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,    -1,    -1,    -1,    -1,
     317,   318,   319,   320,   321,   322,    -1,    -1,   325,   326,
     327,   328,    -1,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,    -1,   342,   343,   344,    -1,    -1,
     347,   348,   349,   350,   351,   352,   353,   354,   355,    -1,
     357,   358,   359,    -1,   361,   362,   363,    -1,   365,   366,
     367,    -1,   369,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   379,   380,   381,   382,   383,   384,    -1,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
      -1,   398,   399,   400,    -1,   402,    -1,   404,   405,   406,
     407,   408,    -1,   410,   411,   412,    -1,    -1,   415,    -1,
      -1,    -1,   419,   420,   421,   422,   423,    -1,    -1,   426,
     427,   428,   429,   430,    -1,   432,   433,    -1,   435,   436,
     437,   438,   439,   440,    -1,   442,    -1,   444,   445,    -1,
     447,   448,   449,    -1,   451,    -1,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
     467,    -1,    -1,    -1,   471,   472,   473,   474,    -1,    -1,
      -1,   478,    -1,    -1,    -1,   482,    -1,   484,   485,   486,
     487,    -1,   489,   490,   491,   492,   493,    -1,    -1,    -1,
      -1,    -1,   499,   500,   501,    -1,   503,   504,    -1,   506,
      -1,    -1,   509,    -1,    -1,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,    -1,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
     537,    -1,    -1,   540,   541,   542,   543,    -1,   545,   546,
     547,    -1,   549,   550,   551,   552,    -1,    -1,    -1,    -1,
      -1,   558,   559,    -1,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,    -1,   574,   575,    -1,
      -1,   578,    -1,    -1,   581,    -1,   583,    -1,   585,   586,
      -1,    -1,   589,   590,   591,   592,   593,    -1,    -1,   596,
     597,    -1,   599,   600,   601,   602,   603,   604,    -1,    -1,
      -1,    -1,    -1,    -1,   611,   612,    -1,   614,   615,   616,
      -1,    -1,   619,    -1,    -1,    -1,   623,   624,    -1,    -1,
      -1,    -1,   629,   630,    -1,    -1,   633,   634,    -1,    -1,
     637,   638,     5,    -1,     7,     8,     9,    10,    11,    -1,
      -1,    14,    -1,    -1,    -1,    18,    -1,    -1,    21,    -1,
      23,    24,    25,    26,    27,    28,    -1,    30,    -1,    -1,
      33,    34,    35,    36,    37,    38,    39,    -1,    41,    42,
      43,    -1,    45,    -1,    47,    48,    -1,    -1,    51,    52,
      53,    54,    55,    -1,    57,    58,    59,    60,    -1,    62,
      63,    64,    65,    66,    67,    -1,    69,    70,    -1,    72,
      73,    74,    75,    76,    77,    78,    79,    80,    -1,    82,
      83,    -1,    85,    86,    87,    88,    89,    -1,    91,    92,
      93,    -1,    -1,    96,    97,    98,    99,    -1,   101,   102,
     103,    -1,   105,   106,   107,   108,   109,   110,    -1,    -1,
      -1,    -1,   115,   116,   117,    -1,    -1,   120,   121,   122,
      -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,
     133,   134,    -1,    -1,    -1,   138,    -1,    -1,   141,   142,
     143,    -1,    -1,    -1,   147,    -1,   149,   150,    -1,   152,
     153,   154,    -1,    -1,   157,   158,    -1,   160,   161,   162,
     163,   164,   165,   166,    -1,   168,   169,   170,   171,   172,
     173,   174,   175,   176,    -1,   178,   179,   180,   181,    -1,
     183,    -1,    -1,    -1,   187,   188,    -1,   190,    -1,   192,
      -1,   194,   195,   196,   197,    -1,   199,    -1,   201,    -1,
     203,    -1,   205,   206,    -1,   208,   209,    -1,   211,   212,
      -1,    -1,    -1,   216,   217,   218,   219,   220,    -1,   222,
     223,   224,    -1,    -1,   227,    -1,    -1,    -1,   231,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,
      -1,   244,   245,    -1,    -1,    -1,   249,    -1,    -1,   252,
     253,    -1,    -1,   256,    -1,   258,   259,   260,    -1,    -1,
      -1,    -1,    -1,   266,   267,    -1,   269,    -1,   271,    -1,
     273,   274,    -1,    -1,   277,    -1,    -1,    -1,    -1,   282,
      -1,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,    -1,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,    -1,    -1,    -1,   317,   318,   319,   320,   321,   322,
      -1,    -1,   325,   326,   327,   328,    -1,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,    -1,   342,
     343,   344,    -1,    -1,   347,   348,   349,   350,   351,    -1,
     353,   354,   355,    -1,   357,   358,   359,    -1,   361,   362,
     363,    -1,   365,   366,   367,    -1,   369,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   379,   380,   381,   382,
     383,   384,    -1,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,    -1,   398,   399,   400,    -1,   402,
      -1,   404,   405,   406,   407,   408,    -1,   410,   411,   412,
      -1,    -1,   415,    -1,    -1,    -1,   419,   420,   421,   422,
     423,    -1,    -1,   426,   427,   428,   429,   430,    -1,   432,
     433,    -1,   435,   436,   437,   438,   439,   440,    -1,   442,
      -1,   444,   445,    -1,   447,   448,   449,    -1,   451,    -1,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,   467,    -1,    -1,    -1,   471,   472,
     473,   474,    -1,    -1,    -1,   478,    -1,    -1,    -1,   482,
      -1,   484,   485,   486,   487,    -1,   489,   490,   491,   492,
     493,    -1,    -1,    -1,    -1,    -1,   499,   500,   501,    -1,
     503,   504,    -1,   506,    -1,    -1,   509,    -1,    -1,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,    -1,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,   537,    -1,    -1,   540,   541,   542,
     543,    -1,   545,   546,   547,    -1,   549,   550,   551,   552,
      -1,    -1,    -1,    -1,    -1,   558,   559,    -1,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
      -1,   574,   575,    -1,    -1,   578,    -1,    -1,   581,    -1,
     583,    -1,   585,   586,    -1,    -1,   589,   590,   591,   592,
     593,    -1,    -1,   596,   597,    -1,   599,   600,   601,   602,
     603,   604,    -1,    -1,    -1,    -1,    -1,    -1,   611,   612,
      -1,   614,   615,   616,    -1,    -1,   619,    -1,    -1,    -1,
     623,   624,    -1,    -1,    -1,    -1,   629,   630,    -1,    -1,
     633,   634,    -1,    -1,   637,   638,     5,    -1,     7,     8,
       9,    10,    11,    -1,    -1,    14,    -1,    -1,    -1,    18,
      -1,    -1,    21,    -1,    23,    24,    25,    26,    27,    28,
      -1,    30,    -1,    -1,    33,    34,    35,    36,    37,    38,
      39,    -1,    41,    42,    43,    -1,    45,    -1,    47,    48,
      -1,    -1,    51,    52,    53,    54,    55,    -1,    57,    58,
      59,    60,    -1,    62,    63,    64,    65,    66,    67,    -1,
      69,    70,    -1,    72,    73,    74,    75,    76,    77,    78,
      79,    80,    -1,    82,    83,    -1,    85,    86,    87,    88,
      89,    -1,    91,    92,    93,    -1,    -1,    96,    97,    98,
      99,    -1,   101,   102,   103,    -1,   105,   106,   107,   108,
     109,   110,    -1,    -1,    -1,    -1,   115,   116,   117,    -1,
      -1,   120,   121,   122,    -1,   124,    -1,    -1,    -1,   128,
      -1,   130,   131,   132,   133,   134,    -1,    -1,    -1,   138,
      -1,    -1,   141,   142,   143,    -1,    -1,    -1,   147,    -1,
     149,   150,    -1,   152,   153,   154,    -1,    -1,   157,   158,
      -1,   160,   161,   162,   163,   164,   165,   166,    -1,   168,
     169,   170,   171,   172,   173,   174,   175,   176,    -1,   178,
     179,   180,   181,    -1,   183,    -1,    -1,    -1,   187,   188,
      -1,   190,    -1,   192,    -1,   194,   195,   196,   197,    -1,
     199,    -1,   201,    -1,   203,    -1,   205,   206,    -1,   208,
     209,    -1,   211,   212,    -1,    -1,    -1,   216,   217,   218,
     219,   220,    -1,   222,   223,   224,    -1,    -1,   227,    -1,
      -1,    -1,   231,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,   241,   242,    -1,   244,   245,    -1,    -1,    -1,
     249,    -1,    -1,   252,   253,    -1,    -1,   256,    -1,   258,
     259,   260,    -1,    -1,    -1,    -1,    -1,   266,   267,    -1,
     269,    -1,   271,    -1,   273,   274,    -1,    -1,   277,    -1,
      -1,    -1,    -1,   282,    -1,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,    -1,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,    -1,    -1,    -1,    -1,   317,   318,
     319,   320,   321,   322,    -1,    -1,   325,   326,   327,   328,
      -1,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,    -1,   342,   343,   344,    -1,    -1,   347,   348,
     349,   350,   351,    -1,   353,   354,   355,    -1,   357,   358,
     359,    -1,   361,   362,   363,    -1,   365,   366,   367,    -1,
     369,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     379,   380,   381,   382,   383,   384,    -1,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,    -1,   398,
     399,   400,    -1,   402,    -1,   404,   405,   406,   407,   408,
      -1,   410,   411,   412,    -1,    -1,   415,    -1,    -1,    -1,
     419,   420,   421,   422,   423,    -1,    -1,   426,   427,   428,
     429,   430,    -1,   432,   433,    -1,   435,   436,   437,   438,
     439,   440,    -1,   442,    -1,   444,   445,    -1,   447,   448,
     449,    -1,   451,    -1,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,   467,    -1,
      -1,    -1,   471,   472,   473,   474,    -1,    -1,    -1,   478,
      -1,    -1,    -1,   482,    -1,   484,   485,   486,   487,    -1,
     489,   490,   491,   492,   493,    -1,    -1,    -1,    -1,    -1,
     499,   500,   501,    -1,   503,   504,    -1,   506,    -1,    -1,
     509,    -1,    -1,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,    -1,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,    -1,
      -1,   540,   541,   542,   543,    -1,   545,   546,   547,    -1,
     549,   550,   551,   552,    -1,    -1,    -1,    -1,    -1,   558,
     559,    -1,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,    -1,   574,   575,    -1,    -1,   578,
      -1,    -1,   581,    -1,   583,    -1,   585,   586,    -1,    -1,
     589,   590,   591,   592,   593,    -1,    -1,   596,   597,    -1,
     599,   600,   601,   602,   603,   604,    -1,    -1,    -1,    -1,
      -1,    -1,   611,   612,    -1,   614,   615,   616,    -1,    -1,
     619,    -1,    -1,    -1,   623,   624,    -1,    -1,    -1,    -1,
     629,   630,    -1,    -1,   633,   634,    -1,    -1,   637,   638,
       5,    -1,     7,     8,     9,    10,    11,    -1,    -1,    14,
      -1,    -1,    -1,    18,    -1,    -1,    21,    -1,    23,    24,
      25,    26,    27,    28,    -1,    30,    -1,    -1,    33,    34,
      35,    36,    37,    38,    39,    -1,    41,    42,    43,    -1,
      45,    -1,    47,    48,    -1,    -1,    51,    52,    53,    54,
      55,    -1,    57,    58,    59,    60,    -1,    62,    63,    64,
      65,    66,    67,    -1,    69,    70,    -1,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    -1,    82,    83,    -1,
      85,    86,    87,    88,    89,    -1,    91,    92,    93,    -1,
      -1,    96,    97,    98,    99,    -1,   101,   102,   103,    -1,
     105,   106,   107,   108,   109,   110,    -1,    -1,    -1,    -1,
     115,   116,   117,    -1,    -1,   120,   121,   122,    -1,   124,
      -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,   134,
      -1,    -1,    -1,   138,    -1,    -1,   141,   142,   143,    -1,
      -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,   154,
      -1,    -1,   157,   158,    -1,   160,   161,   162,   163,   164,
     165,   166,    -1,   168,   169,   170,   171,   172,   173,   174,
     175,   176,    -1,   178,   179,   180,   181,    -1,   183,    -1,
      -1,    -1,   187,   188,    -1,   190,    -1,   192,    -1,   194,
     195,   196,   197,    -1,   199,    -1,   201,    -1,   203,    -1,
     205,   206,    -1,   208,   209,    -1,   211,   212,    -1,    -1,
      -1,   216,   217,   218,   219,   220,    -1,   222,   223,   224,
      -1,    -1,   227,    -1,    -1,    -1,   231,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,   241,   242,    -1,   244,
     245,    -1,    -1,    -1,   249,    -1,    -1,   252,   253,    -1,
      -1,   256,    -1,   258,   259,   260,    -1,    -1,    -1,    -1,
      -1,   266,   267,    -1,   269,    -1,   271,    -1,   273,   274,
      -1,    -1,   277,    -1,    -1,    -1,    -1,   282,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,    -1,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,    -1,    -1,
      -1,    -1,   317,   318,   319,   320,   321,   322,    -1,    -1,
     325,   326,   327,   328,    -1,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,    -1,   342,   343,   344,
      -1,    -1,   347,   348,   349,   350,   351,    -1,   353,   354,
     355,    -1,   357,   358,   359,    -1,   361,   362,   363,    -1,
     365,   366,   367,    -1,   369,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   379,   380,   381,   382,   383,   384,
      -1,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,    -1,   398,   399,   400,    -1,   402,    -1,   404,
     405,   406,   407,   408,    -1,   410,   411,   412,    -1,    -1,
     415,    -1,    -1,    -1,   419,   420,   421,   422,   423,    -1,
      -1,   426,   427,   428,   429,   430,    -1,   432,   433,    -1,
     435,   436,   437,   438,   439,   440,    -1,   442,    -1,   444,
     445,    -1,   447,   448,   449,    -1,   451,    -1,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,   467,    -1,    -1,    -1,   471,   472,   473,   474,
      -1,    -1,    -1,   478,    -1,    -1,    -1,   482,    -1,   484,
     485,   486,   487,    -1,   489,   490,   491,   492,   493,    -1,
      -1,    -1,    -1,    -1,   499,   500,   501,    -1,   503,   504,
      -1,   506,    -1,    -1,   509,    -1,    -1,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,    -1,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,    -1,    -1,   540,   541,   542,   543,    -1,
     545,   546,   547,    -1,   549,   550,   551,   552,    -1,    -1,
      -1,    -1,    -1,   558,   559,    -1,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,    -1,   574,
     575,    -1,    -1,   578,    -1,    -1,   581,    -1,   583,    -1,
     585,   586,    -1,    -1,   589,   590,   591,   592,   593,    -1,
      -1,   596,   597,    -1,   599,   600,   601,   602,   603,   604,
      -1,    -1,    -1,    -1,    -1,    -1,   611,   612,    -1,   614,
     615,   616,    -1,    -1,   619,    -1,    -1,    -1,   623,   624,
      -1,    -1,    -1,    -1,   629,   630,    -1,    -1,   633,   634,
      -1,    -1,   637,   638,     5,    -1,     7,     8,     9,    10,
      11,    -1,    -1,    14,    -1,    -1,    -1,    18,    -1,    -1,
      21,    -1,    23,    24,    25,    26,    27,    28,    -1,    30,
      -1,    -1,    33,    34,    35,    36,    37,    38,    39,    -1,
      41,    42,    43,    -1,    45,    -1,    47,    48,    -1,    -1,
      51,    52,    53,    54,    55,    -1,    57,    58,    59,    60,
      -1,    62,    63,    64,    65,    66,    67,    -1,    69,    70,
      -1,    72,    73,    74,    75,    76,    77,    78,    79,    80,
      -1,    82,    83,    -1,    85,    86,    87,    88,    89,    -1,
      91,    92,    93,    -1,    -1,    96,    97,    98,    99,    -1,
     101,   102,   103,    -1,   105,   106,   107,   108,   109,   110,
      -1,    -1,    -1,    -1,   115,   116,   117,    -1,    -1,   120,
     121,   122,    -1,   124,    -1,    -1,    -1,   128,    -1,   130,
     131,   132,   133,   134,    -1,    -1,    -1,   138,    -1,    -1,
     141,   142,   143,    -1,    -1,    -1,   147,    -1,   149,   150,
      -1,   152,   153,   154,    -1,    -1,   157,   158,    -1,   160,
     161,   162,   163,   164,   165,   166,    -1,   168,   169,   170,
     171,   172,   173,   174,   175,   176,    -1,   178,   179,   180,
     181,    -1,   183,    -1,    -1,    -1,   187,   188,    -1,   190,
      -1,   192,    -1,   194,   195,   196,   197,    -1,   199,    -1,
     201,    -1,   203,    -1,   205,   206,    -1,   208,   209,    -1,
     211,   212,    -1,    -1,    -1,   216,   217,   218,   219,   220,
      -1,   222,   223,   224,    -1,    -1,   227,    -1,    -1,    -1,
     231,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
     241,   242,    -1,   244,   245,    -1,    -1,    -1,   249,    -1,
      -1,   252,   253,    -1,    -1,   256,    -1,   258,   259,   260,
      -1,    -1,    -1,    -1,    -1,   266,   267,    -1,   269,    -1,
     271,    -1,   273,   274,    -1,    -1,   277,    -1,    -1,    -1,
      -1,   282,    -1,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
      -1,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,    -1,    -1,    -1,    -1,   317,   318,   319,   320,
     321,   322,    -1,    -1,   325,   326,   327,   328,    -1,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
      -1,   342,   343,   344,    -1,    -1,   347,   348,   349,   350,
     351,    -1,   353,   354,   355,    -1,   357,   358,   359,    -1,
     361,   362,   363,    -1,   365,   366,   367,    -1,   369,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   379,   380,
     381,   382,   383,   384,    -1,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,    -1,   398,   399,   400,
      -1,   402,    -1,   404,   405,   406,   407,   408,    -1,   410,
     411,   412,    -1,    -1,   415,    -1,    -1,    -1,   419,   420,
     421,   422,   423,    -1,    -1,   426,   427,   428,   429,   430,
      -1,   432,   433,    -1,   435,   436,   437,   438,   439,   440,
      -1,   442,    -1,   444,   445,    -1,   447,   448,   449,    -1,
     451,    -1,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,   467,    -1,    -1,    -1,
     471,   472,   473,   474,    -1,    -1,    -1,   478,    -1,    -1,
      -1,   482,    -1,   484,   485,   486,   487,    -1,   489,   490,
     491,   492,   493,    -1,    -1,    -1,    -1,    -1,   499,   500,
     501,    -1,   503,   504,    -1,   506,    -1,    -1,   509,    -1,
      -1,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,    -1,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,   537,    -1,    -1,   540,
     541,   542,   543,    -1,   545,   546,   547,    -1,   549,   550,
     551,   552,    -1,    -1,    -1,    -1,    -1,   558,   559,    -1,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,    -1,   574,   575,    -1,    -1,   578,    -1,    -1,
     581,    -1,   583,    -1,   585,   586,    -1,    -1,   589,   590,
     591,   592,   593,    -1,    -1,   596,   597,    -1,   599,   600,
     601,   602,   603,   604,    -1,    -1,    -1,    -1,    -1,    -1,
     611,   612,    -1,   614,   615,   616,    -1,    -1,   619,    -1,
      -1,    -1,   623,   624,    -1,    -1,    -1,    -1,   629,   630,
      -1,    -1,   633,   634,    -1,    -1,   637,   638,     5,    -1,
       7,     8,     9,    10,    11,    -1,    -1,    14,    -1,    -1,
      -1,    18,    -1,    -1,    21,    -1,    23,    24,    25,    26,
      27,    28,    -1,    30,    -1,    -1,    -1,    34,    35,    -1,
      -1,    38,    -1,    -1,    41,    42,    43,    -1,    45,    -1,
      47,    48,    -1,    -1,    51,    -1,    -1,    54,    55,    -1,
      57,    58,    -1,    60,    -1,    62,    63,    64,    65,    66,
      67,    -1,    69,    70,    -1,    72,    73,    74,    75,    76,
      77,    78,    79,    80,    -1,    82,    83,    -1,    85,    86,
      87,    88,    89,    -1,    -1,    -1,    93,    -1,    -1,    96,
      -1,    98,    -1,    -1,   101,    -1,    -1,    -1,   105,   106,
     107,    -1,    -1,   110,    -1,    -1,    -1,    -1,   115,   116,
     117,    -1,    -1,    -1,   121,   122,    -1,   124,    -1,    -1,
      -1,   128,    -1,   130,   131,   132,   133,   134,    -1,    -1,
      -1,   138,    -1,    -1,   141,   142,   143,    -1,    -1,    -1,
     147,    -1,   149,   150,    -1,   152,   153,   154,    -1,    -1,
     157,   158,    -1,   160,   161,   162,   163,   164,   165,    -1,
      -1,   168,   169,   170,   171,   172,    -1,   174,   175,   176,
      -1,   178,   179,   180,   181,    -1,   183,    -1,    -1,    -1,
     187,   188,    -1,   190,    -1,   192,    -1,   194,   195,   196,
     197,    -1,   199,    -1,   201,    -1,    -1,    -1,   205,   206,
      -1,   208,   209,    -1,   211,   212,    -1,    -1,    -1,   216,
     217,   218,   219,    -1,    -1,   222,   223,   224,    -1,    -1,
     227,    -1,    -1,    -1,    -1,   232,   233,    -1,    -1,    -1,
     237,    -1,    -1,    -1,   241,   242,    -1,   244,   245,    -1,
      -1,    -1,   249,    -1,    -1,   252,   253,    -1,    -1,   256,
      -1,    -1,   259,   260,    -1,    -1,    -1,    -1,    -1,   266,
     267,    -1,   269,    -1,   271,    -1,   273,   274,    -1,    -1,
     277,    -1,    -1,    -1,    -1,   282,    -1,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,    -1,   302,   303,   304,    -1,   306,
     307,   308,   309,    -1,   311,   312,    -1,    -1,    -1,    -1,
     317,   318,   319,   320,   321,   322,    -1,    -1,   325,   326,
      -1,   328,    -1,   330,    -1,   332,   333,   334,   335,   336,
     337,   338,   339,   340,    -1,   342,   343,   344,    -1,    -1,
     347,   348,   349,   350,    -1,    -1,    -1,   354,   355,    -1,
     357,   358,   359,    -1,   361,   362,   363,    -1,   365,   366,
     367,    -1,   369,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   379,   380,   381,    -1,   383,   384,    -1,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,    -1,
      -1,   398,   399,   400,    -1,   402,    -1,   404,   405,   406,
     407,   408,    -1,   410,   411,   412,    -1,    -1,   415,    -1,
      -1,    -1,   419,   420,   421,   422,   423,    -1,    -1,   426,
     427,   428,   429,   430,    -1,   432,   433,    -1,   435,   436,
     437,    -1,    -1,   440,    -1,   442,    -1,   444,   445,    -1,
     447,   448,   449,    -1,   451,    -1,    -1,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
     467,    -1,    -1,    -1,   471,   472,   473,   474,    -1,    -1,
      -1,   478,    -1,    -1,    -1,   482,    -1,   484,   485,   486,
     487,    -1,   489,   490,   491,   492,   493,    -1,    -1,    -1,
      -1,    -1,   499,   500,   501,    -1,   503,   504,    -1,   506,
      -1,    -1,   509,    -1,    -1,   512,   513,   514,   515,   516,
     517,    -1,    -1,   520,   521,    -1,   523,   524,   525,   526,
     527,   528,    -1,    -1,   531,   532,   533,   534,    -1,   536,
     537,    -1,    -1,   540,   541,   542,   543,    -1,   545,   546,
     547,    -1,   549,   550,   551,   552,    -1,    -1,    -1,    -1,
      -1,   558,   559,    -1,    -1,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,    -1,   574,   575,    -1,
      -1,   578,    -1,    -1,   581,    -1,   583,    -1,   585,   586,
      -1,    -1,    -1,    -1,    -1,    -1,   593,    -1,    -1,   596,
      -1,    -1,    -1,   600,   601,   602,   603,   604,    -1,    -1,
      -1,    -1,    -1,    -1,   611,   612,    -1,   614,   615,   616,
      -1,    -1,   619,    -1,    -1,    -1,     5,    -1,     7,     8,
       9,    10,    11,    -1,    -1,    14,    -1,    -1,    -1,    18,
     637,   638,    21,    -1,    23,    24,    25,    26,    27,    28,
      -1,    30,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,
      -1,    -1,    41,    42,    43,    -1,    45,    -1,    47,    48,
      -1,    -1,    51,    -1,    -1,    54,    55,    -1,    57,    58,
      -1,    60,    -1,    62,    63,    64,    65,    66,    67,    -1,
      69,    70,    -1,    72,    73,    74,    75,    76,    77,    78,
      79,    80,    -1,    82,    83,    84,    85,    86,    87,    88,
      89,    -1,    -1,    -1,    93,    -1,    -1,    96,    -1,    98,
      -1,    -1,   101,    -1,    -1,    -1,   105,   106,   107,    -1,
      -1,   110,    -1,    -1,    -1,    -1,   115,   116,    -1,    -1,
      -1,    -1,   121,   122,    -1,   124,    -1,    -1,    -1,   128,
      -1,   130,   131,   132,   133,   134,    -1,    -1,    -1,   138,
      -1,    -1,   141,   142,   143,    -1,    -1,    -1,   147,    -1,
     149,   150,    -1,   152,   153,   154,    -1,    -1,   157,   158,
      -1,   160,   161,   162,   163,   164,   165,    -1,    -1,   168,
     169,   170,   171,   172,    -1,    -1,   175,   176,    -1,   178,
     179,   180,    -1,    -1,   183,    -1,    -1,    -1,   187,   188,
      -1,   190,   191,   192,    -1,   194,   195,   196,   197,    -1,
     199,    -1,   201,    -1,    -1,    -1,   205,   206,    -1,   208,
      -1,    -1,   211,   212,    -1,    -1,    -1,   216,   217,   218,
     219,    -1,    -1,   222,   223,   224,   225,    -1,   227,    -1,
      -1,    -1,    -1,   232,   233,    -1,    -1,    -1,   237,    -1,
      -1,    -1,   241,   242,    -1,   244,   245,    -1,    -1,    -1,
     249,   250,    -1,   252,   253,    -1,    -1,   256,    -1,    -1,
     259,   260,    -1,   262,    -1,    -1,    -1,   266,   267,    -1,
     269,    -1,   271,    -1,   273,   274,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   282,    -1,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,    -1,   302,   303,   304,    -1,   306,   307,   308,
     309,    -1,   311,   312,    -1,    -1,    -1,    -1,   317,   318,
     319,   320,   321,   322,    -1,    -1,   325,   326,    -1,   328,
      -1,   330,    -1,   332,   333,   334,   335,   336,   337,   338,
     339,   340,    -1,    -1,   343,   344,    -1,    -1,   347,   348,
     349,   350,    -1,    -1,    -1,   354,   355,    -1,    -1,    -1,
     359,    -1,   361,   362,   363,    -1,   365,   366,   367,    -1,
     369,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     379,   380,   381,    -1,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,    -1,    -1,   398,
     399,   400,    -1,   402,    -1,   404,   405,   406,   407,   408,
      -1,   410,   411,   412,    -1,    -1,   415,    -1,    -1,    -1,
     419,   420,   421,   422,   423,    -1,    -1,   426,   427,   428,
     429,   430,    -1,   432,   433,    -1,   435,   436,   437,    -1,
      -1,   440,    -1,   442,    -1,   444,   445,    -1,   447,   448,
     449,    -1,   451,    -1,    -1,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,   467,   468,
      -1,    -1,   471,   472,   473,   474,    -1,    -1,    -1,   478,
      -1,    -1,    -1,   482,    -1,   484,   485,   486,   487,    -1,
     489,   490,   491,   492,   493,   494,    -1,    -1,    -1,    -1,
     499,   500,   501,    -1,   503,   504,    -1,   506,    -1,    -1,
     509,    -1,    -1,   512,   513,   514,   515,   516,   517,    -1,
      -1,   520,   521,    -1,   523,   524,   525,   526,   527,   528,
      -1,    -1,   531,   532,   533,   534,    -1,   536,   537,    -1,
      -1,   540,   541,   542,   543,    -1,    -1,   546,   547,    -1,
     549,   550,   551,   552,    -1,    -1,    -1,    -1,    -1,   558,
     559,    -1,    -1,    -1,   563,   564,   565,   566,    -1,   568,
     569,    -1,   571,   572,    -1,   574,   575,    -1,    -1,   578,
      -1,    -1,   581,    -1,   583,    -1,   585,   586,    -1,    -1,
      -1,    -1,    -1,    -1,   593,    -1,    -1,   596,    -1,    -1,
      -1,   600,   601,   602,   603,   604,    -1,    -1,    -1,    -1,
      -1,    -1,   611,   612,    -1,   614,   615,   616,    -1,    -1,
     619,    -1,     5,    -1,     7,     8,     9,    10,    11,    -1,
      -1,    14,    -1,    -1,    -1,    18,    -1,    -1,    21,   638,
      23,    24,    25,    26,    27,    28,    -1,    30,    -1,    -1,
      -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    41,    42,
      43,    -1,    45,    -1,    47,    48,    -1,    -1,    51,    -1,
      -1,    54,    55,    -1,    57,    58,    -1,    60,    -1,    62,
      63,    64,    65,    66,    67,    -1,    69,    70,    -1,    72,
      73,    74,    75,    76,    77,    78,    79,    80,    -1,    82,
      83,    84,    85,    86,    87,    88,    89,    -1,    -1,    -1,
      93,    -1,    -1,    96,    -1,    98,    -1,    -1,   101,    -1,
      -1,    -1,   105,   106,   107,    -1,    -1,   110,    -1,    -1,
      -1,    -1,   115,   116,    -1,    -1,    -1,    -1,   121,   122,
      -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,
     133,   134,    -1,    -1,    -1,   138,    -1,    -1,   141,   142,
     143,    -1,    -1,    -1,   147,    -1,   149,   150,    -1,   152,
     153,   154,    -1,    -1,   157,   158,    -1,   160,   161,   162,
     163,   164,   165,    -1,    -1,   168,   169,   170,   171,   172,
      -1,    -1,   175,   176,    -1,   178,   179,   180,    -1,    -1,
     183,    -1,    -1,    -1,   187,   188,    -1,   190,   191,   192,
      -1,   194,   195,   196,   197,    -1,   199,    -1,   201,    -1,
      -1,    -1,   205,   206,    -1,   208,    -1,    -1,   211,   212,
      -1,    -1,    -1,   216,   217,   218,   219,    -1,    -1,   222,
     223,   224,   225,    -1,   227,    -1,    -1,    -1,    -1,   232,
     233,    -1,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,
      -1,   244,   245,    -1,    -1,    -1,   249,   250,    -1,   252,
     253,    -1,    -1,   256,    -1,    -1,   259,   260,    -1,    -1,
      -1,    -1,    -1,   266,   267,    -1,   269,    -1,   271,    -1,
     273,   274,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   282,
      -1,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,    -1,   302,
     303,   304,    -1,   306,   307,   308,   309,    -1,   311,   312,
      -1,    -1,    -1,    -1,   317,   318,   319,   320,   321,   322,
      -1,    -1,   325,   326,    -1,   328,    -1,   330,    -1,   332,
     333,   334,   335,   336,   337,   338,   339,   340,    -1,    -1,
     343,   344,    -1,    -1,   347,   348,   349,   350,    -1,    -1,
      -1,   354,   355,    -1,    -1,    -1,   359,    -1,   361,   362,
     363,    -1,   365,   366,   367,    -1,   369,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   379,   380,   381,    -1,
     383,   384,    -1,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,    -1,    -1,   398,   399,   400,    -1,   402,
      -1,   404,   405,   406,   407,   408,    -1,   410,   411,   412,
      -1,    -1,   415,    -1,    -1,    -1,   419,   420,   421,   422,
     423,    -1,    -1,   426,   427,   428,   429,   430,    -1,   432,
     433,    -1,   435,   436,   437,    -1,    -1,   440,    -1,   442,
      -1,   444,   445,    -1,   447,   448,   449,    -1,   451,    -1,
      -1,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,   467,    -1,    -1,    -1,   471,   472,
     473,   474,    -1,    -1,    -1,   478,    -1,    -1,    -1,   482,
      -1,   484,   485,   486,   487,    -1,   489,   490,   491,   492,
     493,   494,    -1,    -1,    -1,    -1,   499,   500,   501,    -1,
     503,   504,    -1,   506,    -1,    -1,   509,    -1,    -1,   512,
     513,   514,   515,   516,   517,    -1,    -1,   520,   521,    -1,
     523,   524,   525,   526,   527,   528,    -1,    -1,   531,   532,
     533,   534,    -1,   536,   537,    -1,    -1,   540,   541,   542,
     543,    -1,    -1,   546,   547,    -1,   549,   550,   551,   552,
      -1,    -1,    -1,    -1,    -1,   558,   559,    -1,    -1,    -1,
     563,   564,   565,   566,    -1,   568,   569,    -1,   571,   572,
      -1,   574,   575,    -1,    -1,   578,    -1,    -1,   581,    -1,
     583,    -1,   585,   586,    -1,    -1,    -1,    -1,    -1,    -1,
     593,    -1,    -1,   596,    -1,    -1,    -1,   600,   601,   602,
     603,   604,    -1,    -1,    -1,    -1,    -1,    -1,   611,   612,
      -1,   614,   615,   616,    -1,    -1,   619,    -1,     5,    -1,
       7,     8,     9,    10,    11,    -1,    -1,    14,    -1,    -1,
      -1,    18,    -1,    -1,    21,   638,    23,    24,    25,    26,
      27,    28,    -1,    30,    -1,    -1,    -1,    34,    -1,    -1,
      -1,    38,    -1,    -1,    41,    42,    43,    -1,    45,    -1,
      47,    48,    -1,    -1,    51,    -1,    -1,    54,    55,    -1,
      57,    58,    -1,    60,    -1,    62,    63,    64,    65,    66,
      67,    -1,    69,    70,    -1,    72,    73,    74,    75,    76,
      77,    78,    79,    80,    -1,    82,    83,    -1,    85,    86,
      87,    88,    89,    -1,    -1,    -1,    93,    -1,    -1,    96,
      -1,    98,    -1,    -1,   101,    -1,    -1,    -1,   105,   106,
     107,    -1,    -1,   110,    -1,    -1,    -1,    -1,   115,   116,
      -1,    -1,    -1,    -1,   121,   122,    -1,   124,    -1,    -1,
      -1,   128,    -1,   130,   131,   132,   133,   134,    -1,    -1,
      -1,   138,    -1,    -1,   141,   142,   143,    -1,    -1,    -1,
     147,    -1,   149,   150,    -1,   152,   153,   154,    -1,    -1,
     157,   158,    -1,   160,   161,   162,   163,   164,   165,    -1,
      -1,   168,   169,   170,   171,   172,    -1,    -1,   175,   176,
      -1,   178,   179,   180,    -1,    -1,   183,    -1,    -1,    -1,
     187,   188,    -1,   190,    -1,   192,    -1,   194,   195,   196,
     197,    -1,   199,    -1,   201,    -1,    -1,    -1,   205,   206,
      -1,   208,    -1,    -1,   211,   212,    -1,    -1,    -1,   216,
     217,   218,   219,    -1,    -1,   222,   223,   224,    -1,    -1,
     227,    -1,    -1,    -1,    -1,   232,   233,    -1,    -1,    -1,
     237,    -1,    -1,    -1,   241,   242,    -1,   244,   245,    -1,
      -1,    -1,   249,    -1,    -1,   252,   253,    -1,    -1,   256,
      -1,    -1,   259,   260,    -1,    -1,    -1,    -1,    -1,   266,
     267,    -1,   269,    -1,   271,    -1,   273,   274,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   282,    -1,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,    -1,   302,   303,   304,    -1,   306,
     307,   308,   309,    -1,   311,   312,    -1,    -1,    -1,    -1,
     317,   318,   319,   320,   321,   322,    -1,    -1,   325,   326,
      -1,   328,    -1,   330,    -1,   332,   333,   334,   335,   336,
     337,   338,   339,   340,    -1,    -1,   343,   344,    -1,    -1,
     347,   348,   349,   350,    -1,    -1,    -1,   354,   355,    -1,
      -1,    -1,   359,    -1,   361,   362,   363,    -1,   365,   366,
     367,    -1,   369,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   379,   380,   381,    -1,   383,   384,    -1,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,    -1,
      -1,   398,   399,   400,    -1,   402,    -1,   404,   405,   406,
     407,   408,    -1,   410,   411,   412,    -1,    -1,   415,    -1,
      -1,    -1,   419,   420,   421,   422,   423,    -1,    -1,   426,
     427,   428,   429,   430,    -1,   432,   433,    -1,   435,   436,
     437,    -1,    -1,   440,    -1,   442,    -1,   444,   445,    -1,
     447,   448,   449,    -1,   451,    -1,    -1,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
     467,   468,    -1,    -1,   471,   472,   473,   474,    -1,    -1,
      -1,   478,    -1,    -1,    -1,   482,    -1,   484,   485,   486,
     487,    -1,   489,   490,   491,   492,   493,    -1,    -1,    -1,
      -1,    -1,   499,   500,   501,    -1,   503,   504,    -1,   506,
      -1,    -1,   509,    -1,    -1,   512,   513,   514,   515,   516,
     517,    -1,    -1,   520,   521,    -1,   523,   524,   525,   526,
     527,   528,    -1,    -1,   531,   532,   533,   534,    -1,   536,
     537,    -1,    -1,   540,   541,   542,   543,    -1,    -1,   546,
     547,    -1,   549,   550,   551,   552,    -1,    -1,    -1,    -1,
      -1,   558,   559,    -1,    -1,    -1,   563,   564,   565,   566,
      -1,   568,   569,    -1,   571,   572,    -1,   574,   575,    -1,
      -1,   578,    -1,    -1,   581,    -1,   583,    -1,   585,   586,
      -1,    -1,    -1,    -1,    -1,    -1,   593,    -1,    -1,   596,
      -1,    -1,    -1,   600,   601,   602,   603,   604,    -1,    -1,
      -1,    -1,    -1,    -1,   611,   612,    -1,   614,   615,   616,
      -1,    -1,   619,    -1,     5,    -1,     7,     8,     9,    10,
      11,    -1,    -1,    14,   631,    -1,    -1,    18,    -1,    -1,
      21,   638,    23,    24,    25,    26,    27,    28,    -1,    30,
      -1,    -1,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,
      41,    42,    43,    -1,    45,    -1,    47,    48,    -1,    -1,
      51,    -1,    -1,    54,    55,    -1,    57,    58,    -1,    60,
      -1,    62,    63,    64,    65,    66,    67,    -1,    69,    70,
      -1,    72,    73,    74,    75,    76,    77,    78,    79,    80,
      -1,    82,    83,    -1,    85,    86,    87,    88,    89,    -1,
      -1,    -1,    93,    -1,    -1,    96,    -1,    98,    -1,    -1,
     101,    -1,    -1,    -1,   105,   106,   107,    -1,    -1,   110,
      -1,    -1,    -1,    -1,   115,   116,    -1,    -1,    -1,    -1,
     121,   122,    -1,   124,    -1,    -1,    -1,   128,    -1,   130,
     131,   132,   133,   134,    -1,    -1,    -1,   138,    -1,    -1,
     141,   142,   143,    -1,    -1,    -1,   147,    -1,   149,   150,
      -1,   152,   153,   154,    -1,    -1,   157,   158,    -1,   160,
     161,   162,   163,   164,   165,    -1,    -1,   168,   169,   170,
     171,   172,    -1,    -1,   175,   176,    -1,   178,   179,   180,
      -1,    -1,   183,    -1,    -1,    -1,   187,   188,    -1,   190,
      -1,   192,    -1,   194,   195,   196,   197,    -1,   199,    -1,
     201,    -1,    -1,    -1,   205,   206,    -1,   208,    -1,    -1,
     211,   212,    -1,    -1,    -1,   216,   217,   218,   219,    -1,
      -1,   222,   223,   224,    -1,    -1,   227,    -1,    -1,    -1,
      -1,   232,   233,    -1,    -1,    -1,   237,    -1,    -1,    -1,
     241,   242,    -1,   244,   245,    -1,    -1,    -1,   249,    -1,
      -1,   252,   253,    -1,    -1,   256,    -1,    -1,   259,   260,
      -1,    -1,    -1,    -1,    -1,   266,   267,    -1,   269,    -1,
     271,    -1,   273,   274,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   282,    -1,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
      -1,   302,   303,   304,    -1,   306,   307,   308,   309,    -1,
     311,   312,    -1,    -1,    -1,    -1,   317,   318,   319,   320,
     321,   322,    -1,    -1,   325,   326,    -1,   328,    -1,   330,
      -1,   332,   333,   334,   335,   336,   337,   338,   339,   340,
      -1,    -1,   343,   344,    -1,    -1,   347,   348,   349,   350,
      -1,    -1,    -1,   354,   355,    -1,    -1,    -1,   359,    -1,
     361,   362,   363,    -1,   365,   366,   367,    -1,   369,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   379,   380,
     381,    -1,   383,   384,    -1,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,    -1,    -1,   398,   399,   400,
      -1,   402,    -1,   404,   405,   406,   407,   408,    -1,   410,
     411,   412,    -1,    -1,   415,    -1,    -1,    -1,   419,   420,
     421,   422,   423,    -1,    -1,   426,   427,   428,   429,   430,
      -1,   432,   433,    -1,   435,   436,   437,    -1,    -1,   440,
      -1,   442,    -1,   444,   445,    -1,   447,   448,   449,    -1,
     451,    -1,    -1,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,   467,    -1,    -1,    -1,
     471,   472,   473,   474,    -1,    -1,    -1,   478,    -1,    -1,
      -1,   482,    -1,   484,   485,   486,   487,    -1,   489,   490,
     491,   492,   493,    -1,    -1,    -1,    -1,    -1,   499,   500,
     501,    -1,   503,   504,    -1,   506,    -1,    -1,   509,    -1,
      -1,   512,   513,   514,   515,   516,   517,    -1,    -1,   520,
     521,    -1,   523,   524,   525,   526,   527,   528,    -1,    -1,
     531,   532,   533,   534,    -1,   536,   537,    -1,    -1,   540,
     541,   542,   543,    -1,    -1,   546,   547,    -1,   549,   550,
     551,   552,    -1,    -1,    -1,    -1,    -1,   558,   559,    -1,
      -1,    -1,   563,   564,   565,   566,    -1,   568,   569,    -1,
     571,   572,    -1,   574,   575,    -1,    -1,   578,    -1,    -1,
     581,    -1,   583,    -1,   585,   586,    -1,    -1,    -1,    -1,
      -1,    -1,   593,    -1,    -1,   596,    -1,    -1,    -1,   600,
     601,   602,   603,   604,    -1,    -1,    -1,    -1,    -1,    -1,
     611,   612,    -1,   614,   615,   616,    -1,    -1,   619,    -1,
      -1,    -1,     5,    -1,     7,     8,     9,    10,    11,    -1,
     631,    14,    -1,    -1,    -1,    18,   637,   638,    21,    -1,
      23,    24,    25,    26,    27,    28,    -1,    30,    -1,    -1,
      -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    41,    42,
      43,    -1,    45,    -1,    47,    48,    -1,    -1,    51,    -1,
      -1,    54,    55,    -1,    57,    58,    -1,    60,    -1,    62,
      63,    64,    65,    66,    67,    -1,    69,    70,    -1,    72,
      73,    74,    75,    76,    77,    78,    79,    80,    -1,    82,
      83,    -1,    85,    86,    87,    88,    89,    -1,    -1,    -1,
      93,    -1,    -1,    96,    -1,    98,    -1,    -1,   101,    -1,
      -1,    -1,   105,   106,   107,    -1,    -1,   110,    -1,    -1,
      -1,    -1,   115,   116,    -1,    -1,    -1,    -1,   121,   122,
      -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,
     133,   134,    -1,    -1,    -1,   138,    -1,    -1,   141,   142,
     143,    -1,    -1,    -1,   147,    -1,   149,   150,    -1,   152,
     153,   154,    -1,    -1,   157,   158,    -1,   160,   161,   162,
     163,   164,   165,    -1,    -1,   168,   169,   170,   171,   172,
      -1,    -1,   175,   176,    -1,   178,   179,   180,    -1,    -1,
     183,    -1,    -1,    -1,   187,   188,    -1,   190,    -1,   192,
      -1,   194,   195,   196,   197,    -1,   199,    -1,   201,    -1,
      -1,    -1,   205,   206,    -1,   208,    -1,    -1,   211,   212,
      -1,    -1,    -1,   216,   217,   218,   219,    -1,    -1,   222,
     223,   224,    -1,    -1,   227,    -1,    -1,    -1,    -1,   232,
     233,    -1,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,
      -1,   244,   245,    -1,    -1,    -1,   249,    -1,    -1,   252,
     253,    -1,    -1,   256,    -1,    -1,   259,   260,    -1,    -1,
      -1,    -1,    -1,   266,   267,    -1,   269,    -1,   271,    -1,
     273,   274,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   282,
      -1,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,    -1,   302,
     303,   304,    -1,   306,   307,   308,   309,    -1,   311,   312,
      -1,    -1,    -1,    -1,   317,   318,   319,   320,   321,   322,
      -1,    -1,   325,   326,    -1,   328,    -1,   330,    -1,   332,
     333,   334,   335,   336,   337,   338,   339,   340,    -1,    -1,
     343,   344,    -1,    -1,   347,   348,   349,   350,    -1,    -1,
      -1,   354,   355,    -1,    -1,    -1,   359,    -1,   361,   362,
     363,    -1,   365,   366,   367,    -1,   369,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   379,   380,   381,    -1,
     383,   384,    -1,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,    -1,    -1,   398,   399,   400,    -1,   402,
      -1,   404,   405,   406,   407,   408,    -1,   410,   411,   412,
      -1,    -1,   415,    -1,    -1,    -1,   419,   420,   421,   422,
     423,    -1,    -1,   426,   427,   428,   429,   430,    -1,   432,
     433,    -1,   435,   436,   437,    -1,    -1,   440,    -1,   442,
      -1,   444,   445,    -1,   447,   448,   449,    -1,   451,    -1,
      -1,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,   467,    -1,    -1,    -1,   471,   472,
     473,   474,    -1,    -1,    -1,   478,    -1,    -1,    -1,   482,
      -1,   484,   485,   486,   487,    -1,   489,   490,   491,   492,
     493,    -1,    -1,    -1,    -1,    -1,   499,   500,   501,    -1,
     503,   504,    -1,   506,    -1,    -1,   509,    -1,    -1,   512,
     513,   514,   515,   516,   517,    -1,    -1,   520,   521,    -1,
     523,   524,   525,   526,   527,   528,    -1,    -1,   531,   532,
     533,   534,    -1,   536,   537,    -1,    -1,   540,   541,   542,
     543,    -1,    -1,   546,   547,    -1,   549,   550,   551,   552,
      -1,    -1,    -1,    -1,    -1,   558,   559,    -1,    -1,    -1,
     563,   564,   565,   566,    -1,   568,   569,    -1,   571,   572,
      -1,   574,   575,    -1,    -1,   578,    -1,    -1,   581,    -1,
     583,    -1,   585,   586,    -1,    -1,    -1,    -1,    -1,    -1,
     593,    -1,    -1,   596,    -1,    -1,    -1,   600,   601,   602,
     603,   604,    -1,    -1,    -1,    -1,    -1,    -1,   611,   612,
      -1,   614,   615,   616,    -1,    -1,   619,    -1,    -1,    -1,
       5,    -1,     7,     8,     9,    10,    11,   630,    -1,    14,
      -1,    -1,    -1,    18,    -1,   638,    21,    -1,    23,    24,
      25,    26,    27,    28,    -1,    30,    -1,    -1,    -1,    34,
      -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,
      45,    -1,    47,    48,    -1,    -1,    51,    -1,    -1,    54,
      55,    -1,    57,    58,    -1,    60,    -1,    62,    63,    64,
      65,    66,    67,    -1,    69,    70,    -1,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    -1,    82,    83,    -1,
      85,    86,    87,    88,    89,    -1,    -1,    -1,    93,    -1,
      -1,    96,    -1,    98,    -1,    -1,   101,    -1,    -1,    -1,
     105,   106,   107,    -1,    -1,   110,    -1,    -1,    -1,    -1,
     115,   116,    -1,    -1,    -1,    -1,   121,   122,    -1,   124,
      -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,   134,
      -1,    -1,    -1,   138,    -1,    -1,   141,   142,   143,    -1,
      -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,   154,
      -1,    -1,   157,   158,    -1,   160,   161,   162,   163,   164,
     165,    -1,    -1,   168,   169,   170,   171,   172,    -1,    -1,
     175,   176,    -1,   178,   179,   180,    -1,    -1,   183,    -1,
      -1,    -1,   187,   188,    -1,   190,    -1,   192,    -1,   194,
     195,   196,   197,    -1,   199,    -1,   201,    -1,    -1,    -1,
     205,   206,    -1,   208,    -1,    -1,   211,   212,    -1,    -1,
      -1,   216,   217,   218,   219,    -1,    -1,   222,   223,   224,
      -1,    -1,   227,    -1,    -1,    -1,    -1,   232,   233,    -1,
     235,    -1,   237,    -1,    -1,    -1,   241,   242,    -1,   244,
     245,    -1,    -1,    -1,   249,    -1,    -1,   252,   253,    -1,
      -1,   256,    -1,    -1,   259,   260,    -1,    -1,    -1,    -1,
      -1,   266,   267,    -1,   269,    -1,   271,    -1,   273,   274,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   282,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,    -1,   302,   303,   304,
      -1,   306,   307,   308,   309,    -1,   311,   312,    -1,    -1,
      -1,    -1,   317,   318,   319,   320,   321,   322,    -1,    -1,
     325,   326,    -1,   328,    -1,   330,    -1,   332,   333,   334,
     335,   336,   337,   338,   339,   340,    -1,    -1,   343,   344,
      -1,    -1,   347,   348,   349,   350,    -1,    -1,    -1,   354,
     355,    -1,    -1,    -1,   359,    -1,   361,   362,   363,    -1,
     365,   366,   367,    -1,   369,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   379,   380,   381,    -1,   383,   384,
      -1,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,    -1,    -1,   398,   399,   400,    -1,   402,    -1,   404,
     405,   406,   407,   408,    -1,   410,   411,   412,    -1,    -1,
     415,    -1,    -1,    -1,   419,   420,   421,   422,   423,    -1,
      -1,   426,   427,   428,   429,   430,    -1,   432,   433,    -1,
     435,   436,   437,    -1,    -1,   440,    -1,   442,    -1,   444,
     445,    -1,   447,   448,   449,    -1,   451,    -1,    -1,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,   467,    -1,    -1,    -1,   471,   472,   473,   474,
      -1,    -1,    -1,   478,    -1,    -1,    -1,   482,    -1,   484,
     485,   486,   487,    -1,   489,   490,   491,   492,   493,    -1,
      -1,    -1,    -1,    -1,   499,   500,   501,    -1,   503,   504,
      -1,   506,    -1,    -1,   509,    -1,    -1,   512,   513,   514,
     515,   516,   517,    -1,    -1,   520,   521,    -1,   523,   524,
     525,   526,   527,   528,    -1,    -1,   531,   532,   533,   534,
      -1,   536,   537,    -1,    -1,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,   549,   550,   551,   552,    -1,    -1,
      -1,    -1,    -1,   558,   559,    -1,    -1,    -1,   563,   564,
     565,   566,    -1,   568,   569,    -1,   571,   572,    -1,   574,
     575,    -1,    -1,   578,    -1,    -1,   581,    -1,   583,    -1,
     585,   586,    -1,    -1,    -1,    -1,    -1,    -1,   593,    -1,
      -1,   596,    -1,    -1,    -1,   600,   601,   602,   603,   604,
      -1,    -1,    -1,    -1,    -1,    -1,   611,   612,    -1,   614,
     615,   616,    -1,    -1,   619,    -1,     5,    -1,     7,     8,
       9,    10,    11,    -1,    -1,    14,    -1,    -1,    -1,    18,
      -1,    -1,    21,   638,    23,    24,    25,    26,    27,    28,
      -1,    30,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,
      -1,    -1,    41,    42,    43,    -1,    45,    -1,    47,    48,
      -1,    -1,    51,    -1,    -1,    54,    55,    -1,    57,    58,
      -1,    60,    -1,    62,    63,    64,    65,    66,    67,    -1,
      69,    70,    -1,    72,    73,    74,    75,    76,    77,    78,
      79,    80,    -1,    82,    83,    -1,    85,    86,    87,    88,
      89,    -1,    -1,    -1,    93,    -1,    -1,    96,    -1,    98,
      -1,    -1,   101,    -1,    -1,    -1,   105,   106,   107,    -1,
      -1,   110,    -1,    -1,    -1,    -1,   115,   116,    -1,    -1,
      -1,    -1,   121,   122,    -1,   124,    -1,    -1,    -1,   128,
      -1,   130,   131,   132,   133,   134,    -1,    -1,    -1,   138,
      -1,    -1,   141,   142,   143,    -1,    -1,    -1,   147,    -1,
     149,   150,    -1,   152,   153,   154,    -1,    -1,   157,   158,
      -1,   160,   161,   162,   163,   164,   165,    -1,    -1,   168,
     169,   170,   171,   172,    -1,    -1,   175,   176,    -1,   178,
     179,   180,    -1,    -1,   183,    -1,    -1,    -1,   187,   188,
      -1,   190,    -1,   192,    -1,   194,   195,   196,   197,    -1,
     199,    -1,   201,    -1,    -1,    -1,   205,   206,    -1,   208,
      -1,    -1,   211,   212,    -1,    -1,    -1,   216,   217,   218,
     219,    -1,    -1,   222,   223,   224,    -1,    -1,   227,    -1,
      -1,    -1,    -1,   232,   233,    -1,    -1,    -1,   237,    -1,
      -1,    -1,   241,   242,    -1,   244,   245,    -1,    -1,    -1,
     249,    -1,    -1,   252,   253,    -1,    -1,   256,    -1,    -1,
     259,   260,    -1,    -1,    -1,    -1,    -1,   266,   267,    -1,
     269,    -1,   271,    -1,   273,   274,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   282,    -1,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,    -1,   302,   303,   304,    -1,   306,   307,   308,
     309,    -1,   311,   312,    -1,    -1,    -1,    -1,   317,   318,
     319,   320,   321,   322,    -1,    -1,   325,   326,    -1,   328,
      -1,   330,    -1,   332,   333,   334,   335,   336,   337,   338,
     339,   340,    -1,    -1,   343,   344,    -1,    -1,   347,   348,
     349,   350,    -1,    -1,    -1,   354,   355,    -1,    -1,    -1,
     359,    -1,   361,   362,   363,    -1,   365,   366,   367,    -1,
     369,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     379,   380,   381,    -1,   383,   384,    -1,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,    -1,    -1,   398,
     399,   400,    -1,   402,    -1,   404,   405,   406,   407,   408,
      -1,   410,   411,   412,    -1,    -1,   415,    -1,    -1,    -1,
     419,   420,   421,   422,   423,    -1,    -1,   426,   427,   428,
     429,   430,    -1,   432,   433,    -1,   435,   436,   437,    -1,
      -1,   440,    -1,   442,    -1,   444,   445,    -1,   447,   448,
     449,    -1,   451,    -1,    -1,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,   467,    -1,
      -1,    -1,   471,   472,   473,   474,    -1,    -1,    -1,   478,
      -1,    -1,    -1,   482,    -1,   484,   485,   486,   487,    -1,
     489,   490,   491,   492,   493,    -1,    -1,    -1,    -1,    -1,
     499,   500,   501,    -1,   503,   504,    -1,   506,    -1,    -1,
     509,    -1,    -1,   512,   513,   514,   515,   516,   517,    -1,
      -1,   520,   521,    -1,   523,   524,   525,   526,   527,   528,
      -1,    -1,   531,   532,   533,   534,    -1,   536,   537,    -1,
      -1,   540,   541,   542,   543,    -1,    -1,   546,   547,    -1,
     549,   550,   551,   552,    -1,    -1,    -1,    -1,    -1,   558,
     559,    -1,    -1,    -1,   563,   564,   565,   566,    -1,   568,
     569,    -1,   571,   572,    -1,   574,   575,    -1,    -1,   578,
      -1,    -1,   581,    -1,   583,    -1,   585,   586,    -1,    -1,
      -1,    -1,    -1,    -1,   593,    -1,    -1,   596,    -1,    -1,
      -1,   600,   601,   602,   603,   604,    -1,    -1,    -1,    -1,
      -1,    -1,   611,   612,    -1,   614,   615,   616,    -1,    -1,
     619,    -1,    -1,    -1,    -1,     5,   625,     7,     8,     9,
      10,    11,    -1,    -1,    14,    -1,    -1,    -1,    18,   638,
      -1,    21,    -1,    23,    24,    25,    26,    27,    28,    -1,
      30,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,    -1,
      -1,    41,    42,    43,    -1,    45,    -1,    47,    48,    -1,
      -1,    51,    -1,    -1,    54,    55,    -1,    57,    58,    -1,
      60,    -1,    62,    63,    64,    65,    66,    67,    -1,    69,
      70,    -1,    72,    73,    74,    75,    76,    77,    78,    79,
      80,    -1,    82,    83,    -1,    85,    86,    87,    88,    89,
      -1,    -1,    -1,    93,    -1,    -1,    96,    -1,    98,    -1,
      -1,   101,    -1,    -1,    -1,   105,   106,   107,    -1,    -1,
     110,    -1,    -1,    -1,    -1,   115,   116,    -1,    -1,    -1,
      -1,   121,   122,    -1,   124,    -1,    -1,    -1,   128,    -1,
     130,   131,   132,   133,   134,    -1,    -1,    -1,   138,    -1,
      -1,   141,   142,   143,    -1,    -1,    -1,   147,    -1,   149,
     150,    -1,   152,   153,   154,    -1,    -1,   157,   158,    -1,
     160,   161,   162,   163,   164,   165,    -1,    -1,   168,   169,
     170,   171,   172,    -1,    -1,   175,   176,    -1,   178,   179,
     180,    -1,    -1,   183,    -1,    -1,    -1,   187,   188,    -1,
     190,    -1,   192,    -1,   194,   195,   196,   197,    -1,   199,
      -1,   201,    -1,    -1,    -1,   205,   206,    -1,   208,    -1,
      -1,   211,   212,    -1,    -1,    -1,   216,   217,   218,   219,
      -1,    -1,   222,   223,   224,    -1,    -1,   227,    -1,    -1,
      -1,    -1,   232,   233,    -1,    -1,    -1,   237,    -1,    -1,
      -1,   241,   242,    -1,   244,   245,    -1,    -1,    -1,   249,
      -1,    -1,   252,   253,    -1,    -1,   256,    -1,    -1,   259,
     260,    -1,    -1,    -1,    -1,    -1,   266,   267,    -1,   269,
      -1,   271,    -1,   273,   274,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   282,    -1,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,    -1,   302,   303,   304,    -1,   306,   307,   308,   309,
      -1,   311,   312,    -1,    -1,    -1,    -1,   317,   318,   319,
     320,   321,   322,    -1,    -1,   325,   326,    -1,   328,    -1,
     330,    -1,   332,   333,   334,   335,   336,   337,   338,   339,
     340,    -1,    -1,   343,   344,    -1,    -1,   347,   348,   349,
     350,    -1,    -1,    -1,   354,   355,    -1,    -1,    -1,   359,
      -1,   361,   362,   363,    -1,   365,   366,   367,    -1,   369,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   379,
     380,   381,    -1,   383,   384,    -1,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,    -1,    -1,   398,   399,
     400,    -1,   402,    -1,   404,   405,   406,   407,   408,    -1,
     410,   411,   412,    -1,    -1,   415,    -1,    -1,    -1,   419,
     420,   421,   422,   423,    -1,    -1,   426,   427,   428,   429,
     430,    -1,   432,   433,    -1,   435,   436,   437,    -1,    -1,
     440,    -1,   442,    -1,   444,   445,    -1,   447,   448,   449,
      -1,   451,    -1,    -1,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,   467,    -1,    -1,
      -1,   471,   472,   473,   474,    -1,    -1,    -1,   478,    -1,
      -1,    -1,   482,    -1,   484,   485,   486,   487,    -1,   489,
     490,   491,   492,   493,    -1,    -1,    -1,    -1,    -1,   499,
     500,   501,    -1,   503,   504,    -1,   506,    -1,    -1,   509,
      -1,    -1,   512,   513,   514,   515,   516,   517,    -1,    -1,
     520,   521,    -1,   523,   524,   525,   526,   527,   528,    -1,
      -1,   531,   532,   533,   534,    -1,   536,   537,    -1,    -1,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,   549,
     550,   551,   552,    -1,    -1,    -1,    -1,    -1,   558,   559,
      -1,    -1,    -1,   563,   564,   565,   566,    -1,   568,   569,
      -1,   571,   572,    -1,   574,   575,    -1,    -1,   578,    -1,
      -1,   581,    -1,   583,    -1,   585,   586,    -1,    -1,    -1,
      -1,    -1,    -1,   593,    -1,    -1,   596,    -1,    -1,    -1,
     600,   601,   602,   603,   604,    -1,    -1,    -1,    -1,    -1,
      -1,   611,   612,    -1,   614,   615,   616,    -1,    -1,   619,
      -1,    -1,    -1,     5,    -1,     7,     8,     9,    10,    11,
     630,    -1,    14,    -1,    -1,    -1,    18,    -1,   638,    21,
      -1,    23,    24,    25,    26,    27,    28,    -1,    30,    -1,
      -1,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    41,
      42,    43,    -1,    45,    -1,    47,    48,    -1,    -1,    51,
      -1,    -1,    54,    55,    -1,    57,    58,    -1,    60,    -1,
      62,    63,    64,    65,    66,    67,    -1,    69,    70,    -1,
      72,    73,    74,    75,    76,    77,    78,    79,    80,    -1,
      82,    83,    -1,    85,    86,    87,    88,    89,    -1,    -1,
      -1,    93,    -1,    -1,    96,    -1,    98,    -1,    -1,   101,
      -1,    -1,    -1,   105,   106,   107,    -1,    -1,   110,    -1,
      -1,    -1,    -1,   115,   116,    -1,    -1,    -1,    -1,   121,
     122,    -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,
     132,   133,   134,    -1,    -1,    -1,   138,    -1,    -1,   141,
     142,   143,    -1,    -1,    -1,   147,    -1,   149,   150,    -1,
     152,   153,   154,    -1,    -1,   157,   158,    -1,   160,   161,
     162,   163,   164,   165,    -1,    -1,   168,   169,   170,   171,
     172,    -1,    -1,   175,   176,    -1,   178,   179,   180,    -1,
      -1,   183,    -1,    -1,    -1,   187,   188,    -1,   190,    -1,
     192,    -1,   194,   195,   196,   197,    -1,   199,    -1,   201,
      -1,    -1,    -1,   205,   206,    -1,   208,    -1,    -1,   211,
     212,    -1,    -1,    -1,   216,   217,   218,   219,    -1,    -1,
     222,   223,   224,    -1,    -1,   227,    -1,    -1,    -1,    -1,
     232,   233,    -1,    -1,    -1,   237,    -1,    -1,    -1,   241,
     242,    -1,   244,   245,    -1,    -1,    -1,   249,    -1,    -1,
     252,   253,    -1,    -1,   256,    -1,    -1,   259,   260,    -1,
      -1,    -1,    -1,    -1,   266,   267,    -1,   269,    -1,   271,
      -1,   273,   274,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     282,    -1,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,    -1,
     302,   303,   304,    -1,   306,   307,   308,   309,    -1,   311,
     312,    -1,    -1,    -1,    -1,   317,   318,   319,   320,   321,
     322,    -1,    -1,   325,   326,    -1,   328,    -1,   330,    -1,
     332,   333,   334,   335,   336,   337,   338,   339,   340,    -1,
      -1,   343,   344,    -1,    -1,   347,   348,   349,   350,    -1,
      -1,    -1,   354,   355,    -1,    -1,    -1,   359,    -1,   361,
     362,   363,    -1,   365,   366,   367,    -1,   369,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   379,   380,   381,
      -1,   383,   384,    -1,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,    -1,    -1,   398,   399,   400,    -1,
     402,    -1,   404,   405,   406,   407,   408,    -1,   410,   411,
     412,    -1,    -1,   415,    -1,    -1,    -1,   419,   420,   421,
     422,   423,    -1,    -1,   426,   427,   428,   429,   430,    -1,
     432,   433,    -1,   435,   436,   437,    -1,    -1,   440,    -1,
     442,    -1,   444,   445,    -1,   447,   448,   449,    -1,   451,
      -1,    -1,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,   467,    -1,    -1,    -1,   471,
     472,   473,   474,    -1,    -1,    -1,   478,    -1,    -1,    -1,
     482,    -1,   484,   485,   486,   487,    -1,   489,   490,   491,
     492,   493,    -1,    -1,    -1,    -1,    -1,   499,   500,   501,
      -1,   503,   504,    -1,   506,    -1,    -1,   509,    -1,    -1,
     512,   513,   514,   515,   516,   517,    -1,    -1,   520,   521,
      -1,   523,   524,   525,   526,   527,   528,    -1,    -1,   531,
     532,   533,   534,    -1,   536,   537,    -1,    -1,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,   549,   550,   551,
     552,    -1,    -1,    -1,    -1,    -1,   558,   559,    -1,    -1,
      -1,   563,   564,   565,   566,    -1,   568,   569,    -1,   571,
     572,    -1,   574,   575,    -1,    -1,   578,    -1,    -1,   581,
      -1,   583,    -1,   585,   586,    -1,    -1,    -1,    -1,    -1,
      -1,   593,    -1,    -1,   596,    -1,    -1,    -1,   600,   601,
     602,   603,   604,    -1,    -1,    -1,    -1,    -1,    -1,   611,
     612,    -1,   614,   615,   616,    -1,    -1,   619,    -1,    -1,
      -1,     5,    -1,     7,     8,     9,    10,    11,    -1,    -1,
      14,    -1,    -1,    -1,    18,   637,   638,    21,    -1,    23,
      24,    25,    26,    27,    28,    -1,    30,    -1,    -1,    -1,
      34,    -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,
      -1,    45,    -1,    47,    48,    -1,    -1,    51,    -1,    -1,
      54,    55,    -1,    57,    58,    -1,    60,    -1,    62,    63,
      64,    65,    66,    67,    -1,    69,    70,    -1,    72,    73,
      74,    75,    76,    77,    78,    79,    80,    -1,    82,    83,
      -1,    85,    86,    87,    88,    89,    -1,    -1,    -1,    93,
      -1,    -1,    96,    -1,    98,    -1,    -1,   101,    -1,    -1,
      -1,   105,   106,   107,    -1,    -1,   110,    -1,    -1,    -1,
      -1,   115,   116,    -1,    -1,    -1,    -1,   121,   122,    -1,
     124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,
     134,    -1,    -1,    -1,   138,    -1,    -1,   141,   142,   143,
      -1,    -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,
     154,    -1,    -1,   157,   158,    -1,   160,   161,   162,   163,
     164,   165,    -1,    -1,   168,   169,   170,   171,   172,    -1,
      -1,   175,   176,    -1,   178,   179,   180,    -1,    -1,   183,
      -1,    -1,    -1,   187,   188,    -1,   190,    -1,   192,    -1,
     194,   195,   196,   197,    -1,   199,    -1,   201,    -1,    -1,
      -1,   205,   206,    -1,   208,    -1,    -1,   211,   212,    -1,
      -1,    -1,   216,   217,   218,   219,    -1,    -1,   222,   223,
     224,    -1,    -1,   227,    -1,    -1,    -1,    -1,   232,   233,
      -1,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,    -1,
     244,   245,    -1,    -1,    -1,   249,    -1,    -1,   252,   253,
      -1,    -1,   256,    -1,    -1,   259,   260,    -1,    -1,    -1,
      -1,    -1,   266,   267,    -1,   269,    -1,   271,    -1,   273,
     274,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   282,    -1,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,    -1,   302,   303,
     304,    -1,   306,   307,   308,   309,    -1,   311,   312,    -1,
      -1,    -1,    -1,   317,   318,   319,   320,   321,   322,    -1,
      -1,   325,   326,    -1,   328,    -1,   330,    -1,   332,   333,
     334,   335,   336,   337,   338,   339,   340,    -1,    -1,   343,
     344,    -1,    -1,   347,   348,   349,   350,    -1,    -1,    -1,
     354,   355,    -1,    -1,    -1,   359,    -1,   361,   362,   363,
      -1,   365,   366,   367,    -1,   369,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   379,   380,   381,    -1,   383,
     384,    -1,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,    -1,    -1,   398,   399,   400,    -1,   402,    -1,
     404,   405,   406,   407,   408,    -1,   410,   411,   412,    -1,
      -1,   415,    -1,    -1,    -1,   419,   420,   421,   422,   423,
      -1,    -1,   426,   427,   428,   429,   430,    -1,   432,   433,
      -1,   435,   436,   437,    -1,    -1,   440,    -1,   442,    -1,
     444,   445,    -1,   447,   448,   449,    -1,   451,    -1,    -1,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,   467,    -1,    -1,    -1,   471,   472,   473,
     474,    -1,    -1,    -1,   478,    -1,    -1,    -1,   482,    -1,
     484,   485,   486,   487,    -1,   489,   490,   491,   492,   493,
      -1,    -1,    -1,    -1,    -1,   499,   500,   501,    -1,   503,
     504,    -1,   506,    -1,    -1,   509,    -1,    -1,   512,   513,
     514,   515,   516,   517,    -1,    -1,   520,   521,    -1,   523,
     524,   525,   526,   527,   528,    -1,    -1,   531,   532,   533,
     534,    -1,   536,   537,    -1,    -1,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,   549,   550,   551,   552,    -1,
      -1,    -1,    -1,    -1,   558,   559,    -1,    -1,    -1,   563,
     564,   565,   566,    -1,   568,   569,    -1,   571,   572,    -1,
     574,   575,    -1,    -1,   578,    -1,    -1,   581,    -1,   583,
      -1,   585,   586,    -1,    -1,    -1,    -1,    -1,    -1,   593,
      -1,    -1,   596,    -1,    -1,    -1,   600,   601,   602,   603,
     604,    -1,    -1,    -1,    -1,    -1,    -1,   611,   612,    -1,
     614,   615,   616,    -1,    -1,   619,    -1,     5,    -1,     7,
       8,     9,    10,    11,    -1,    -1,    14,    -1,    -1,    -1,
      18,    -1,    -1,    21,   638,    23,    24,    25,    26,    27,
      28,    -1,    30,    -1,    -1,    -1,    34,    -1,    -1,    -1,
      38,    -1,    -1,    41,    42,    43,    -1,    45,    -1,    47,
      48,    -1,    -1,    51,    -1,    -1,    54,    55,    -1,    57,
      58,    -1,    60,    -1,    62,    63,    64,    65,    66,    67,
      -1,    69,    70,    -1,    72,    73,    74,    75,    76,    77,
      78,    79,    80,    -1,    82,    83,    -1,    85,    86,    87,
      88,    89,    -1,    -1,    -1,    93,    -1,    -1,    96,    -1,
      98,    -1,    -1,   101,    -1,    -1,    -1,   105,   106,   107,
      -1,    -1,   110,    -1,    -1,    -1,    -1,   115,   116,    -1,
      -1,    -1,    -1,   121,   122,    -1,   124,    -1,    -1,    -1,
     128,    -1,   130,   131,   132,   133,   134,    -1,    -1,    -1,
     138,    -1,    -1,   141,   142,   143,    -1,    -1,    -1,   147,
      -1,   149,   150,    -1,   152,   153,   154,    -1,    -1,   157,
     158,    -1,   160,   161,   162,   163,   164,   165,    -1,    -1,
     168,   169,   170,   171,   172,    -1,    -1,   175,   176,    -1,
     178,   179,   180,    -1,    -1,   183,    -1,    -1,    -1,   187,
     188,    -1,   190,    -1,   192,    -1,   194,   195,   196,   197,
      -1,   199,    -1,   201,    -1,    -1,    -1,   205,   206,    -1,
     208,    -1,    -1,   211,   212,    -1,    -1,    -1,   216,   217,
     218,   219,    -1,    -1,   222,   223,   224,    -1,    -1,   227,
      -1,    -1,    -1,    -1,   232,   233,    -1,    -1,    -1,   237,
      -1,    -1,    -1,   241,   242,    -1,   244,   245,    -1,    -1,
      -1,   249,    -1,    -1,   252,   253,    -1,    -1,   256,    -1,
      -1,   259,   260,    -1,    -1,    -1,    -1,    -1,   266,   267,
      -1,   269,    -1,   271,    -1,   273,   274,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   282,    -1,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,    -1,   302,   303,   304,    -1,   306,   307,
     308,   309,    -1,   311,   312,    -1,    -1,    -1,    -1,   317,
     318,   319,   320,   321,   322,    -1,    -1,   325,   326,    -1,
     328,    -1,   330,    -1,   332,   333,   334,   335,   336,   337,
     338,   339,   340,    -1,    -1,   343,   344,    -1,    -1,   347,
     348,   349,   350,    -1,    -1,    -1,   354,   355,    -1,    -1,
      -1,   359,    -1,   361,   362,   363,    -1,   365,   366,   367,
      -1,   369,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   379,   380,   381,    -1,   383,   384,    -1,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,    -1,    -1,
     398,   399,   400,    -1,   402,    -1,   404,   405,   406,   407,
     408,    -1,   410,   411,   412,    -1,    -1,   415,    -1,    -1,
      -1,   419,   420,   421,   422,   423,    -1,    -1,   426,   427,
     428,   429,   430,    -1,   432,   433,    -1,   435,   436,   437,
      -1,    -1,   440,    -1,   442,    -1,   444,   445,    -1,   447,
     448,   449,    -1,   451,    -1,    -1,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,   467,
      -1,    -1,    -1,   471,   472,   473,   474,    -1,    -1,    -1,
     478,    -1,    -1,    -1,   482,    -1,   484,   485,   486,   487,
      -1,   489,   490,   491,   492,   493,    -1,    -1,    -1,    -1,
      -1,   499,   500,   501,    -1,   503,   504,    -1,   506,    -1,
      -1,   509,    -1,    -1,   512,   513,   514,   515,   516,   517,
      -1,    -1,   520,   521,    -1,   523,   524,   525,   526,   527,
     528,    -1,    -1,   531,   532,   533,   534,    -1,   536,   537,
      -1,    -1,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,   549,   550,   551,   552,    -1,    -1,    -1,    -1,    -1,
     558,   559,    -1,    -1,    -1,   563,   564,   565,   566,    -1,
     568,   569,    -1,   571,   572,    -1,   574,   575,    -1,    -1,
     578,    -1,    -1,   581,    -1,   583,    -1,   585,   586,    -1,
      -1,    -1,    -1,    -1,    -1,   593,    -1,    -1,   596,    -1,
      -1,    -1,   600,   601,   602,   603,   604,    -1,    -1,    -1,
      -1,    -1,    -1,   611,   612,    -1,   614,   615,   616,    -1,
      -1,   619,    -1,     5,    -1,     7,     8,     9,    10,    11,
      -1,    -1,    14,    -1,    -1,    -1,    18,    -1,    -1,    21,
     638,    23,    24,    25,    26,    27,    28,    -1,    30,    -1,
      -1,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    41,
      42,    43,    -1,    45,    -1,    47,    48,    -1,    -1,    51,
      -1,    -1,    54,    55,    -1,    57,    58,    -1,    60,    -1,
      62,    63,    64,    65,    66,    67,    -1,    69,    70,    -1,
      72,    73,    74,    75,    76,    77,    78,    79,    80,    -1,
      82,    83,    -1,    85,    86,    87,    88,    89,    -1,    -1,
      -1,    93,    -1,    -1,    96,    -1,    98,    -1,    -1,   101,
      -1,    -1,    -1,   105,   106,   107,    -1,    -1,   110,    -1,
      -1,    -1,    -1,   115,   116,    -1,    -1,    -1,    -1,   121,
     122,    -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,
     132,   133,   134,    -1,    -1,    -1,   138,    -1,    -1,   141,
     142,   143,    -1,    -1,    -1,   147,    -1,   149,   150,    -1,
     152,   153,   154,    -1,    -1,   157,   158,    -1,   160,   161,
     162,   163,   164,   165,    -1,    -1,   168,   169,   170,   171,
     172,    -1,    -1,   175,   176,    -1,   178,   179,   180,    -1,
      -1,   183,    -1,    -1,    -1,   187,   188,    -1,   190,    -1,
     192,    -1,   194,   195,   196,   197,    -1,   199,    -1,   201,
      -1,    -1,    -1,   205,   206,    -1,   208,    -1,    -1,   211,
     212,    -1,    -1,    -1,   216,   217,   218,   219,    -1,    -1,
     222,   223,   224,    -1,    -1,   227,    -1,    -1,    -1,    -1,
     232,   233,    -1,    -1,    -1,   237,    -1,    -1,    -1,   241,
     242,    -1,   244,   245,    -1,    -1,    -1,   249,    -1,    -1,
     252,   253,    -1,    -1,   256,    -1,    -1,   259,   260,    -1,
      -1,    -1,    -1,    -1,   266,   267,    -1,   269,    -1,   271,
      -1,   273,   274,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     282,    -1,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,    -1,
     302,   303,   304,    -1,   306,   307,   308,   309,    -1,   311,
     312,    -1,    -1,    -1,    -1,   317,   318,   319,   320,   321,
     322,    -1,    -1,   325,   326,    -1,   328,    -1,   330,    -1,
     332,   333,   334,   335,   336,   337,   338,   339,   340,    -1,
      -1,   343,   344,    -1,    -1,   347,   348,   349,   350,    -1,
      -1,    -1,   354,   355,    -1,    -1,    -1,   359,    -1,   361,
     362,   363,    -1,   365,   366,   367,    -1,   369,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   379,   380,   381,
      -1,   383,   384,    -1,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,    -1,    -1,   398,   399,   400,    -1,
     402,    -1,   404,   405,   406,   407,   408,    -1,   410,   411,
     412,    -1,    -1,   415,    -1,    -1,    -1,   419,   420,   421,
     422,   423,    -1,    -1,   426,   427,   428,   429,   430,    -1,
     432,   433,    -1,   435,   436,   437,    -1,    -1,   440,    -1,
     442,    -1,   444,   445,    -1,   447,   448,   449,    -1,   451,
      -1,    -1,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,   467,    -1,    -1,    -1,   471,
     472,   473,   474,    -1,    -1,    -1,   478,    -1,    -1,    -1,
     482,    -1,   484,   485,   486,   487,    -1,   489,   490,   491,
     492,   493,    -1,    -1,    -1,    -1,    -1,   499,   500,   501,
      -1,   503,   504,    -1,   506,    -1,    -1,   509,    -1,    -1,
     512,   513,   514,   515,   516,   517,    -1,    -1,   520,   521,
      -1,   523,   524,   525,   526,   527,   528,    -1,    -1,   531,
     532,   533,   534,    -1,   536,   537,    -1,    -1,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,   549,   550,   551,
     552,    -1,    -1,    -1,    -1,    -1,   558,   559,    -1,    -1,
      -1,   563,   564,   565,   566,    -1,   568,   569,    -1,   571,
     572,    -1,   574,   575,    -1,    -1,   578,    -1,    -1,   581,
      -1,   583,    -1,   585,   586,    -1,    -1,    -1,    -1,    -1,
      -1,   593,    -1,    -1,   596,    -1,    -1,    -1,   600,   601,
     602,   603,   604,    -1,    -1,    -1,    -1,    -1,    -1,   611,
     612,    -1,   614,   615,   616,    -1,    -1,   619,    -1,     5,
      -1,     7,     8,     9,    10,    11,    -1,    -1,    14,    -1,
      -1,    -1,    18,    -1,    -1,    21,   638,    23,    24,    25,
      26,    27,    28,    -1,    30,    -1,    -1,    -1,    34,    -1,
      -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,    45,
      -1,    47,    48,    -1,    -1,    51,    -1,    -1,    54,    55,
      -1,    57,    58,    -1,    60,    -1,    62,    63,    64,    65,
      66,    67,    -1,    69,    70,    -1,    72,    73,    74,    75,
      76,    77,    78,    79,    80,    -1,    82,    83,    -1,    85,
      86,    87,    88,    89,    -1,    -1,    -1,    93,    -1,    -1,
      96,    -1,    98,    -1,    -1,   101,    -1,    -1,    -1,   105,
     106,   107,    -1,    -1,   110,    -1,    -1,    -1,    -1,   115,
     116,    -1,    -1,    -1,    -1,   121,   122,    -1,   124,    -1,
      -1,    -1,   128,    -1,   130,   131,   132,   133,   134,    -1,
      -1,    -1,   138,    -1,    -1,   141,   142,   143,    -1,    -1,
      -1,   147,    -1,   149,   150,    -1,   152,   153,   154,    -1,
      -1,   157,   158,    -1,   160,   161,   162,   163,   164,   165,
      -1,    -1,   168,   169,   170,   171,   172,    -1,    -1,   175,
     176,    -1,   178,   179,   180,    -1,    -1,   183,    -1,    -1,
      -1,   187,   188,    -1,   190,    -1,   192,    -1,   194,   195,
     196,   197,    -1,   199,    -1,   201,    -1,    -1,    -1,   205,
     206,    -1,   208,    -1,    -1,   211,   212,    -1,    -1,    -1,
     216,   217,   218,   219,    -1,    -1,   222,   223,   224,    -1,
      -1,   227,    -1,    -1,    -1,    -1,   232,   233,    -1,    -1,
      -1,   237,    -1,    -1,    -1,   241,   242,    -1,   244,   245,
      -1,    -1,    -1,   249,    -1,    -1,   252,   253,    -1,    -1,
     256,    -1,    -1,   259,   260,    -1,    -1,    -1,    -1,    -1,
     266,   267,    -1,   269,    -1,   271,    -1,   273,   274,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   282,    -1,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,    -1,   302,   303,   304,    -1,
     306,   307,   308,   309,    -1,   311,   312,    -1,    -1,    -1,
      -1,   317,   318,   319,   320,   321,   322,    -1,    -1,   325,
     326,    -1,   328,    -1,   330,    -1,   332,   333,   334,   335,
     336,   337,   338,   339,   340,    -1,    -1,   343,   344,    -1,
      -1,   347,   348,   349,   350,    -1,    -1,    -1,   354,   355,
      -1,    -1,    -1,   359,    -1,   361,   362,   363,    -1,   365,
     366,   367,    -1,   369,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   379,   380,   381,    -1,   383,   384,    -1,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
      -1,    -1,   398,   399,   400,    -1,   402,    -1,   404,   405,
     406,   407,   408,    -1,   410,   411,   412,    -1,    -1,   415,
      -1,    -1,    -1,   419,   420,   421,   422,   423,    -1,    -1,
     426,   427,   428,   429,   430,    -1,   432,   433,    -1,   435,
     436,   437,    -1,    -1,   440,    -1,   442,    -1,   444,   445,
      -1,   447,   448,   449,    -1,   451,    -1,    -1,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,   467,    -1,    -1,    -1,   471,   472,   473,   474,    -1,
      -1,    -1,   478,    -1,    -1,    -1,   482,    -1,   484,   485,
     486,   487,    -1,   489,   490,   491,   492,   493,    -1,    -1,
      -1,    -1,    -1,   499,   500,   501,    -1,   503,   504,    -1,
     506,    -1,    -1,   509,    -1,    -1,   512,   513,   514,   515,
     516,   517,    -1,    -1,   520,   521,    -1,   523,   524,   525,
     526,   527,   528,    -1,    -1,   531,   532,   533,   534,    -1,
     536,   537,    -1,    -1,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,   549,   550,   551,   552,    -1,    -1,    -1,
      -1,    -1,   558,   559,    -1,    -1,    -1,   563,   564,   565,
     566,    -1,   568,   569,    -1,   571,   572,    -1,   574,   575,
      -1,    -1,   578,    -1,    -1,   581,    -1,   583,    -1,   585,
     586,    -1,    -1,    -1,    -1,    -1,    -1,   593,    -1,    -1,
     596,    -1,    -1,    -1,   600,   601,   602,   603,   604,    -1,
      -1,    -1,    -1,    -1,    -1,   611,   612,    -1,   614,   615,
     616,    -1,    -1,   619,    -1,     5,    -1,     7,     8,     9,
      10,    11,    -1,    -1,    14,    -1,    -1,    -1,    18,    -1,
      -1,    21,   638,    23,    24,    25,    26,    27,    28,    -1,
      30,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,    -1,
      -1,    41,    42,    43,    -1,    45,    -1,    47,    48,    -1,
      -1,    51,    -1,    -1,    54,    55,    -1,    57,    58,    59,
      60,    -1,    62,    63,    64,    65,    66,    67,    -1,    69,
      70,    -1,    72,    73,    74,    75,    76,    77,    78,    79,
      80,    -1,    82,    83,    -1,    85,    86,    87,    88,    89,
      -1,    -1,    -1,    93,    -1,    -1,    96,    -1,    98,    -1,
      -1,   101,    -1,    -1,    -1,   105,   106,   107,    -1,    -1,
     110,    -1,    -1,    -1,    -1,   115,   116,    -1,    -1,    -1,
     120,   121,   122,    -1,   124,    -1,    -1,    -1,   128,    -1,
     130,   131,   132,   133,   134,    -1,    -1,    -1,   138,    -1,
      -1,   141,   142,   143,    -1,    -1,    -1,   147,    -1,   149,
     150,    -1,   152,   153,   154,    -1,    -1,   157,   158,    -1,
     160,   161,   162,   163,   164,   165,    -1,    -1,   168,   169,
     170,   171,   172,    -1,    -1,   175,   176,    -1,   178,   179,
     180,    -1,    -1,   183,    -1,    -1,    -1,   187,   188,    -1,
     190,    -1,   192,    -1,   194,   195,   196,   197,    -1,   199,
      -1,   201,    -1,    -1,    -1,   205,   206,    -1,   208,    -1,
      -1,   211,   212,    -1,    -1,    -1,   216,   217,   218,   219,
      -1,    -1,   222,   223,   224,    -1,    -1,   227,    -1,    -1,
      -1,    -1,   232,   233,    -1,    -1,    -1,   237,    -1,    -1,
      -1,   241,   242,    -1,   244,   245,    -1,    -1,    -1,   249,
      -1,    -1,   252,   253,    -1,    -1,   256,    -1,    -1,   259,
     260,    -1,    -1,    -1,    -1,    -1,   266,   267,    -1,   269,
      -1,   271,    -1,   273,   274,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   282,    -1,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,    -1,   302,   303,   304,    -1,   306,   307,   308,   309,
      -1,   311,   312,    -1,    -1,    -1,    -1,   317,   318,   319,
     320,   321,   322,    -1,    -1,   325,   326,    -1,   328,    -1,
     330,    -1,   332,   333,   334,   335,   336,   337,   338,   339,
     340,    -1,    -1,   343,   344,    -1,    -1,   347,   348,   349,
     350,    -1,    -1,    -1,   354,   355,    -1,    -1,    -1,   359,
      -1,   361,   362,   363,    -1,   365,   366,   367,    -1,   369,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   379,
     380,   381,    -1,   383,   384,    -1,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,    -1,    -1,   398,   399,
     400,    -1,   402,    -1,   404,   405,   406,   407,   408,    -1,
     410,   411,   412,    -1,    -1,   415,    -1,    -1,    -1,   419,
     420,   421,   422,   423,    -1,    -1,   426,   427,   428,   429,
     430,    -1,   432,   433,    -1,   435,   436,   437,    -1,    -1,
     440,    -1,   442,    -1,   444,   445,    -1,   447,   448,   449,
      -1,   451,    -1,    -1,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,   467,    -1,    -1,
      -1,   471,   472,   473,   474,    -1,    -1,    -1,   478,    -1,
      -1,    -1,   482,    -1,   484,   485,   486,   487,    -1,   489,
     490,   491,   492,   493,    -1,    -1,    -1,    -1,    -1,   499,
     500,   501,    -1,   503,   504,    -1,   506,    -1,    -1,   509,
      -1,    -1,   512,   513,   514,   515,   516,   517,    -1,    -1,
     520,   521,    -1,   523,   524,   525,   526,   527,   528,    -1,
      -1,   531,   532,   533,   534,    -1,   536,   537,    -1,    -1,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,   549,
     550,   551,   552,    -1,    -1,    -1,    -1,    -1,   558,   559,
      -1,    -1,    -1,   563,   564,   565,   566,    -1,   568,   569,
      -1,   571,   572,    -1,   574,   575,    -1,    -1,   578,    -1,
      -1,   581,    -1,   583,    -1,   585,   586,    -1,    -1,    -1,
      -1,    -1,    -1,   593,    -1,    -1,   596,    -1,    -1,    -1,
     600,   601,   602,   603,   604,    -1,    -1,    -1,    -1,    -1,
      -1,   611,   612,    -1,   614,   615,   616,    -1,    -1,   619,
       5,    -1,     7,     8,     9,    10,    11,    -1,    -1,    14,
      -1,    -1,    -1,    18,    -1,    -1,    21,   637,    23,    24,
      25,    26,    27,    28,    -1,    30,    -1,    -1,    -1,    34,
      -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,
      45,    -1,    47,    48,    -1,    -1,    51,    -1,    -1,    54,
      55,    -1,    57,    58,    -1,    60,    -1,    62,    63,    64,
      65,    66,    67,    -1,    69,    70,    -1,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    -1,    82,    83,    -1,
      85,    86,    87,    88,    89,    -1,    -1,    -1,    93,    -1,
      -1,    96,    -1,    98,    -1,    -1,   101,    -1,    -1,    -1,
     105,   106,   107,    -1,    -1,   110,    -1,    -1,    -1,    -1,
     115,   116,    -1,    -1,    -1,    -1,   121,   122,    -1,   124,
      -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,   134,
      -1,    -1,    -1,   138,    -1,    -1,   141,   142,   143,    -1,
      -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,   154,
      -1,    -1,   157,   158,    -1,   160,   161,   162,   163,   164,
     165,    -1,    -1,   168,   169,   170,   171,   172,    -1,    -1,
     175,   176,    -1,   178,   179,   180,    -1,    -1,   183,    -1,
      -1,    -1,   187,   188,    -1,   190,    -1,   192,    -1,   194,
     195,   196,   197,    -1,   199,    -1,   201,    -1,    -1,    -1,
     205,   206,    -1,   208,    -1,    -1,   211,   212,    -1,    -1,
      -1,   216,   217,   218,   219,    -1,    -1,   222,   223,   224,
      -1,    -1,   227,    -1,    -1,    -1,    -1,   232,   233,    -1,
      -1,    -1,   237,    -1,    -1,    -1,   241,   242,    -1,   244,
     245,    -1,    -1,    -1,   249,    -1,    -1,   252,   253,    -1,
      -1,   256,    -1,    -1,   259,   260,   261,    -1,    -1,    -1,
      -1,   266,   267,    -1,   269,    -1,   271,    -1,   273,   274,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   282,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,    -1,   302,   303,   304,
      -1,   306,   307,   308,   309,    -1,   311,   312,    -1,    -1,
      -1,    -1,   317,   318,   319,   320,   321,   322,    -1,    -1,
     325,   326,    -1,   328,    -1,   330,    -1,   332,   333,   334,
     335,   336,   337,   338,   339,   340,    -1,    -1,   343,   344,
      -1,    -1,   347,   348,   349,   350,    -1,    -1,    -1,   354,
     355,    -1,    -1,    -1,   359,    -1,   361,   362,   363,    -1,
     365,   366,   367,    -1,   369,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   379,   380,   381,    -1,   383,   384,
      -1,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,    -1,    -1,   398,   399,   400,    -1,   402,    -1,   404,
     405,   406,   407,   408,    -1,   410,   411,   412,    -1,    -1,
     415,    -1,    -1,    -1,   419,   420,   421,   422,   423,    -1,
      -1,   426,   427,   428,   429,   430,    -1,   432,   433,    -1,
     435,   436,   437,    -1,    -1,   440,    -1,   442,    -1,   444,
     445,    -1,   447,   448,   449,    -1,   451,    -1,    -1,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,   467,    -1,    -1,    -1,   471,   472,   473,   474,
      -1,    -1,    -1,   478,    -1,    -1,    -1,   482,    -1,   484,
     485,   486,   487,    -1,   489,   490,   491,   492,   493,    -1,
      -1,    -1,    -1,    -1,   499,   500,   501,    -1,   503,   504,
      -1,   506,    -1,    -1,   509,    -1,    -1,   512,   513,   514,
     515,   516,   517,    -1,    -1,   520,   521,    -1,   523,   524,
     525,   526,   527,   528,    -1,    -1,   531,   532,   533,   534,
      -1,   536,   537,    -1,    -1,   540,   541,   542,   543,    -1,
     545,   546,   547,    -1,   549,   550,   551,   552,    -1,    -1,
      -1,    -1,    -1,   558,   559,    -1,    -1,    -1,   563,   564,
     565,   566,    -1,   568,   569,    -1,   571,   572,    -1,   574,
     575,    -1,    -1,   578,    -1,    -1,   581,    -1,   583,    -1,
     585,   586,    -1,    -1,    -1,    -1,    -1,    -1,   593,    -1,
      -1,   596,    -1,    -1,    -1,   600,   601,   602,   603,   604,
      -1,    -1,    -1,    -1,    -1,    -1,   611,   612,    -1,   614,
     615,   616,    -1,    -1,   619,     5,    -1,     7,     8,     9,
      10,    11,    -1,    -1,    14,    -1,    -1,    -1,    18,    -1,
      -1,    21,   637,    23,    24,    25,    26,    27,    28,    -1,
      30,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,    -1,
      -1,    41,    42,    43,    -1,    45,    -1,    47,    48,    -1,
      -1,    51,    -1,    -1,    54,    55,    -1,    57,    58,    -1,
      60,    -1,    62,    63,    64,    65,    66,    67,    -1,    69,
      70,    -1,    72,    73,    74,    75,    76,    77,    78,    79,
      80,    -1,    82,    83,    -1,    85,    86,    87,    88,    89,
      -1,    -1,    -1,    93,    -1,    -1,    96,    -1,    98,    -1,
      -1,   101,    -1,    -1,    -1,   105,   106,   107,    -1,    -1,
     110,    -1,    -1,    -1,    -1,   115,   116,    -1,    -1,    -1,
      -1,   121,   122,    -1,   124,    -1,    -1,    -1,   128,    -1,
     130,   131,   132,   133,   134,    -1,    -1,    -1,   138,    -1,
      -1,   141,   142,   143,    -1,    -1,    -1,   147,    -1,   149,
     150,    -1,   152,   153,   154,    -1,    -1,   157,   158,    -1,
     160,   161,   162,   163,   164,   165,    -1,    -1,   168,   169,
     170,   171,   172,    -1,    -1,   175,   176,    -1,   178,   179,
     180,    -1,    -1,   183,    -1,    -1,    -1,   187,   188,    -1,
     190,    -1,   192,    -1,   194,   195,   196,   197,    -1,   199,
      -1,   201,    -1,    -1,    -1,   205,   206,    -1,   208,    -1,
      -1,   211,   212,    -1,    -1,    -1,   216,   217,   218,   219,
      -1,    -1,   222,   223,   224,    -1,    -1,   227,    -1,    -1,
      -1,    -1,   232,   233,    -1,    -1,    -1,   237,    -1,    -1,
      -1,   241,   242,    -1,   244,   245,    -1,    -1,    -1,   249,
      -1,    -1,   252,   253,    -1,    -1,   256,    -1,    -1,   259,
     260,   261,    -1,    -1,    -1,    -1,   266,   267,    -1,   269,
      -1,   271,    -1,   273,   274,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   282,    -1,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,    -1,   302,   303,   304,    -1,   306,   307,   308,   309,
      -1,   311,   312,    -1,    -1,    -1,    -1,   317,   318,   319,
     320,   321,   322,    -1,    -1,   325,   326,    -1,   328,    -1,
     330,    -1,   332,   333,   334,   335,   336,   337,   338,   339,
     340,    -1,    -1,   343,   344,    -1,    -1,   347,   348,   349,
     350,    -1,    -1,    -1,   354,   355,    -1,    -1,    -1,   359,
      -1,   361,   362,   363,    -1,   365,   366,   367,    -1,   369,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   379,
     380,   381,    -1,   383,   384,    -1,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,    -1,    -1,   398,   399,
     400,    -1,   402,    -1,   404,   405,   406,   407,   408,    -1,
     410,   411,   412,    -1,    -1,   415,    -1,    -1,    -1,   419,
     420,   421,   422,   423,    -1,    -1,   426,   427,   428,   429,
     430,    -1,   432,   433,    -1,   435,   436,   437,    -1,    -1,
     440,    -1,   442,    -1,   444,   445,    -1,   447,   448,   449,
      -1,   451,    -1,    -1,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,   467,    -1,    -1,
      -1,   471,   472,   473,   474,    -1,    -1,    -1,   478,    -1,
      -1,    -1,   482,    -1,   484,   485,   486,   487,    -1,   489,
     490,   491,   492,   493,    -1,    -1,    -1,    -1,    -1,   499,
     500,   501,    -1,   503,   504,    -1,   506,    -1,    -1,   509,
      -1,    -1,   512,   513,   514,   515,   516,   517,    -1,    -1,
     520,   521,    -1,   523,   524,   525,   526,   527,   528,    -1,
      -1,   531,   532,   533,   534,    -1,   536,   537,    -1,    -1,
     540,   541,   542,   543,    -1,   545,   546,   547,    -1,   549,
     550,   551,   552,    -1,    -1,    -1,    -1,    -1,   558,   559,
      -1,    -1,    -1,   563,   564,   565,   566,    -1,   568,   569,
      -1,   571,   572,    -1,   574,   575,    -1,    -1,   578,    -1,
      -1,   581,    -1,   583,    -1,   585,   586,    -1,    -1,    -1,
      -1,    -1,    -1,   593,    -1,    -1,   596,    -1,    -1,    -1,
     600,   601,   602,   603,   604,    -1,    -1,    -1,    -1,    -1,
      -1,   611,   612,    -1,   614,   615,   616,    -1,    -1,   619,
       5,    -1,     7,     8,     9,    10,    11,    -1,    -1,    14,
      -1,    -1,    -1,    18,    -1,    -1,    21,   637,    23,    24,
      25,    26,    27,    28,    -1,    30,    -1,    -1,    -1,    34,
      -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,
      45,    -1,    47,    48,    -1,    -1,    51,    -1,    -1,    54,
      55,    -1,    57,    58,    59,    60,    -1,    62,    63,    64,
      65,    66,    67,    -1,    69,    70,    -1,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    -1,    82,    83,    -1,
      85,    86,    87,    88,    89,    -1,    -1,    -1,    93,    -1,
      -1,    96,    -1,    98,    -1,    -1,   101,    -1,    -1,    -1,
     105,   106,   107,    -1,    -1,   110,    -1,    -1,    -1,    -1,
     115,   116,    -1,    -1,    -1,   120,   121,   122,    -1,   124,
      -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,   134,
      -1,    -1,    -1,   138,    -1,    -1,   141,   142,   143,    -1,
      -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,   154,
      -1,    -1,   157,   158,    -1,   160,   161,   162,   163,   164,
     165,    -1,    -1,   168,   169,   170,   171,   172,    -1,    -1,
     175,   176,    -1,   178,   179,   180,    -1,    -1,   183,    -1,
      -1,    -1,   187,   188,    -1,   190,    -1,   192,    -1,   194,
     195,   196,   197,    -1,   199,    -1,   201,    -1,    -1,    -1,
     205,   206,    -1,   208,    -1,    -1,   211,   212,    -1,    -1,
      -1,   216,   217,   218,   219,    -1,    -1,   222,   223,   224,
      -1,    -1,   227,    -1,    -1,    -1,    -1,   232,   233,    -1,
      -1,    -1,   237,    -1,    -1,    -1,   241,   242,    -1,   244,
     245,    -1,    -1,    -1,   249,    -1,    -1,   252,   253,    -1,
      -1,   256,    -1,    -1,   259,   260,    -1,    -1,    -1,    -1,
      -1,   266,   267,    -1,   269,    -1,   271,    -1,   273,   274,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   282,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,    -1,   302,   303,   304,
      -1,   306,   307,   308,   309,    -1,   311,   312,    -1,    -1,
      -1,    -1,   317,   318,   319,   320,   321,   322,    -1,    -1,
     325,   326,    -1,   328,    -1,   330,    -1,   332,   333,   334,
     335,   336,   337,   338,   339,   340,    -1,    -1,   343,   344,
      -1,    -1,   347,   348,   349,   350,    -1,    -1,    -1,   354,
     355,    -1,    -1,    -1,   359,    -1,   361,   362,   363,    -1,
     365,   366,   367,    -1,   369,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   379,   380,   381,    -1,   383,   384,
      -1,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,    -1,    -1,   398,   399,   400,    -1,   402,    -1,   404,
     405,   406,   407,   408,    -1,   410,   411,   412,    -1,    -1,
     415,    -1,    -1,    -1,   419,   420,   421,   422,   423,    -1,
      -1,   426,   427,   428,   429,   430,    -1,   432,   433,    -1,
     435,   436,   437,    -1,    -1,   440,    -1,   442,    -1,   444,
     445,    -1,   447,   448,   449,    -1,   451,    -1,    -1,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,   467,    -1,    -1,    -1,   471,   472,   473,   474,
      -1,    -1,    -1,   478,    -1,    -1,    -1,   482,    -1,   484,
     485,   486,   487,    -1,   489,   490,   491,   492,   493,    -1,
      -1,    -1,    -1,    -1,   499,   500,   501,    -1,   503,   504,
      -1,   506,    -1,    -1,   509,    -1,    -1,   512,   513,   514,
     515,   516,   517,    -1,    -1,   520,   521,    -1,   523,   524,
     525,   526,   527,   528,    -1,    -1,   531,   532,   533,   534,
      -1,   536,   537,    -1,    -1,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,   549,   550,   551,   552,    -1,    -1,
      -1,    -1,    -1,   558,   559,    -1,    -1,    -1,   563,   564,
     565,   566,    -1,   568,   569,    -1,   571,   572,    -1,   574,
     575,    -1,    -1,   578,    -1,    -1,   581,    -1,   583,    -1,
     585,   586,    -1,    -1,    -1,    -1,    -1,    -1,   593,    -1,
      -1,   596,    -1,    -1,    -1,   600,   601,   602,   603,   604,
      -1,    -1,    -1,    -1,    -1,    -1,   611,   612,    -1,   614,
     615,   616,    -1,    -1,   619,     5,    -1,     7,     8,     9,
      10,    11,    -1,    -1,    14,    -1,    -1,    -1,    18,    -1,
      -1,    21,   637,    23,    24,    25,    26,    27,    28,    -1,
      30,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,    -1,
      -1,    41,    42,    43,    -1,    45,    -1,    47,    48,    -1,
      -1,    51,    -1,    -1,    54,    55,    -1,    57,    58,    -1,
      60,    -1,    62,    63,    64,    65,    66,    67,    -1,    69,
      70,    -1,    72,    73,    74,    75,    76,    77,    78,    79,
      80,    -1,    82,    83,    -1,    85,    86,    87,    88,    89,
      -1,    -1,    -1,    93,    -1,    -1,    96,    -1,    98,    -1,
      -1,   101,    -1,    -1,    -1,   105,   106,   107,    -1,    -1,
     110,    -1,    -1,    -1,    -1,   115,   116,    -1,    -1,    -1,
      -1,   121,   122,    -1,   124,    -1,    -1,    -1,   128,    -1,
     130,   131,   132,   133,   134,    -1,    -1,    -1,   138,    -1,
      -1,   141,   142,   143,    -1,    -1,    -1,   147,    -1,   149,
     150,    -1,   152,   153,   154,    -1,    -1,   157,   158,    -1,
     160,   161,   162,   163,   164,   165,    -1,    -1,   168,   169,
     170,   171,   172,    -1,    -1,   175,   176,    -1,   178,   179,
     180,    -1,    -1,   183,    -1,    -1,    -1,   187,   188,    -1,
     190,    -1,   192,    -1,   194,   195,   196,   197,    -1,   199,
      -1,   201,    -1,    -1,    -1,   205,   206,    -1,   208,    -1,
      -1,   211,   212,    -1,    -1,    -1,   216,   217,   218,   219,
      -1,    -1,   222,   223,   224,    -1,    -1,   227,    -1,    -1,
      -1,    -1,   232,   233,    -1,    -1,    -1,   237,    -1,    -1,
      -1,   241,   242,    -1,   244,   245,    -1,    -1,    -1,   249,
      -1,    -1,   252,   253,    -1,    -1,   256,    -1,    -1,   259,
     260,   261,    -1,    -1,    -1,    -1,   266,   267,    -1,   269,
      -1,   271,    -1,   273,   274,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   282,    -1,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,    -1,   302,   303,   304,    -1,   306,   307,   308,   309,
      -1,   311,   312,    -1,    -1,    -1,    -1,   317,   318,   319,
     320,   321,   322,    -1,    -1,   325,   326,    -1,   328,    -1,
     330,    -1,   332,   333,   334,   335,   336,   337,   338,   339,
     340,    -1,    -1,   343,   344,    -1,    -1,   347,   348,   349,
     350,    -1,    -1,    -1,   354,   355,    -1,    -1,    -1,   359,
      -1,   361,   362,   363,    -1,   365,   366,   367,    -1,   369,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   379,
     380,   381,    -1,   383,   384,    -1,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,    -1,    -1,   398,   399,
     400,    -1,   402,    -1,   404,   405,   406,   407,   408,    -1,
     410,   411,   412,    -1,    -1,   415,    -1,    -1,    -1,   419,
     420,   421,   422,   423,    -1,    -1,   426,   427,   428,   429,
     430,    -1,   432,   433,    -1,   435,   436,   437,    -1,    -1,
     440,    -1,   442,    -1,   444,   445,    -1,   447,   448,   449,
      -1,   451,    -1,    -1,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,   467,    -1,    -1,
      -1,   471,   472,   473,   474,    -1,    -1,    -1,   478,    -1,
      -1,    -1,   482,    -1,   484,   485,   486,   487,    -1,   489,
     490,   491,   492,   493,    -1,    -1,    -1,    -1,    -1,   499,
     500,   501,    -1,   503,   504,    -1,   506,    -1,    -1,   509,
      -1,    -1,   512,   513,   514,   515,   516,   517,    -1,    -1,
     520,   521,    -1,   523,   524,   525,   526,   527,   528,    -1,
      -1,   531,   532,   533,   534,    -1,   536,   537,    -1,    -1,
     540,   541,   542,   543,    -1,   545,   546,   547,    -1,   549,
     550,   551,   552,    -1,    -1,    -1,    -1,    -1,   558,   559,
      -1,    -1,    -1,   563,   564,   565,   566,    -1,   568,   569,
      -1,   571,   572,    -1,   574,   575,    -1,    -1,   578,    -1,
      -1,   581,    -1,   583,    -1,   585,   586,    -1,    -1,    -1,
      -1,    -1,    -1,   593,    -1,    -1,   596,    -1,    -1,    -1,
     600,   601,   602,   603,   604,    -1,    -1,    -1,    -1,    -1,
      -1,   611,   612,    -1,   614,   615,   616,    -1,    -1,   619,
       5,    -1,     7,     8,     9,    10,    11,    -1,    -1,    14,
      -1,    -1,    -1,    18,    -1,    -1,    21,   637,    23,    24,
      25,    26,    27,    28,    -1,    30,    -1,    -1,    -1,    34,
      -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,
      45,    -1,    47,    48,    -1,    -1,    51,    -1,    -1,    54,
      55,    -1,    57,    58,    -1,    60,    -1,    62,    63,    64,
      65,    66,    67,    -1,    69,    70,    -1,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    -1,    -1,    -1,    93,    -1,
      -1,    96,    -1,    98,    -1,    -1,   101,    -1,    -1,    -1,
     105,   106,   107,    -1,    -1,   110,    -1,    -1,    -1,    -1,
     115,   116,    -1,    -1,    -1,    -1,   121,   122,    -1,   124,
      -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,   134,
      -1,    -1,    -1,   138,    -1,    -1,   141,   142,   143,    -1,
      -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,   154,
      -1,    -1,   157,   158,    -1,   160,   161,   162,   163,   164,
     165,    -1,    -1,   168,   169,   170,   171,   172,    -1,    -1,
     175,   176,    -1,   178,   179,   180,    -1,    -1,   183,    -1,
      -1,    -1,   187,   188,    -1,   190,    -1,   192,    -1,   194,
     195,   196,   197,    -1,   199,    -1,   201,    -1,    -1,    -1,
     205,   206,    -1,   208,    -1,    -1,   211,   212,    -1,    -1,
      -1,   216,   217,   218,   219,    -1,    -1,   222,   223,   224,
      -1,    -1,   227,    -1,    -1,    -1,    -1,   232,   233,    -1,
      -1,    -1,   237,    -1,    -1,    -1,   241,   242,    -1,   244,
     245,    -1,    -1,    -1,   249,    -1,    -1,   252,   253,    -1,
      -1,   256,    -1,    -1,   259,   260,    -1,    -1,    -1,    -1,
      -1,   266,   267,    -1,   269,    -1,   271,    -1,   273,   274,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   282,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,    -1,   302,   303,   304,
      -1,   306,   307,   308,   309,    -1,   311,   312,    -1,    -1,
      -1,    -1,   317,   318,   319,   320,   321,   322,    -1,    -1,
     325,   326,    -1,   328,    -1,   330,    -1,   332,   333,   334,
     335,   336,   337,   338,   339,   340,    -1,    -1,   343,   344,
      -1,    -1,   347,   348,   349,   350,    -1,    -1,    -1,   354,
     355,    -1,    -1,    -1,   359,    -1,   361,   362,   363,    -1,
     365,   366,   367,    -1,   369,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   379,   380,   381,    -1,   383,   384,
      -1,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,    -1,    -1,   398,   399,   400,    -1,   402,    -1,   404,
     405,   406,   407,   408,    -1,   410,   411,   412,    -1,    -1,
     415,    -1,    -1,    -1,   419,   420,   421,   422,   423,    -1,
      -1,   426,   427,   428,   429,   430,    -1,   432,   433,    -1,
     435,   436,   437,    -1,    -1,   440,    -1,   442,    -1,   444,
     445,    -1,   447,   448,   449,    -1,   451,    -1,    -1,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,   467,    -1,    -1,    -1,   471,   472,   473,   474,
      -1,    -1,    -1,   478,    -1,    -1,    -1,   482,    -1,   484,
     485,   486,   487,    -1,   489,   490,   491,   492,   493,    -1,
      -1,    -1,    -1,    -1,   499,   500,   501,    -1,   503,   504,
      -1,   506,    -1,    -1,   509,    -1,    -1,   512,   513,   514,
     515,   516,   517,    -1,    -1,   520,   521,    -1,   523,   524,
     525,   526,   527,   528,    -1,    -1,   531,   532,   533,   534,
      -1,   536,   537,    -1,    -1,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,   549,   550,   551,   552,    -1,    -1,
      -1,    -1,    -1,   558,   559,    -1,    -1,    -1,   563,   564,
     565,   566,    -1,   568,   569,    -1,   571,   572,    -1,   574,
     575,    -1,    -1,   578,    -1,    -1,   581,    -1,   583,    -1,
     585,   586,    -1,    -1,    -1,    -1,    -1,    -1,   593,    -1,
      -1,   596,    -1,    -1,    -1,   600,   601,   602,   603,   604,
      -1,    -1,    -1,    -1,    -1,    -1,   611,   612,    -1,   614,
     615,   616,    -1,    -1,   619,     5,    -1,     7,     8,     9,
      10,    11,    -1,    -1,    14,    -1,    -1,    -1,    18,    -1,
      -1,    21,   637,    23,    24,    25,    26,    27,    28,    -1,
      30,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,    -1,
      -1,    41,    42,    43,    -1,    45,    -1,    47,    48,    -1,
      -1,    51,    -1,    -1,    54,    55,    -1,    57,    58,    -1,
      60,    -1,    62,    63,    64,    65,    66,    67,    -1,    69,
      70,    -1,    72,    73,    74,    75,    76,    77,    78,    79,
      80,    -1,    82,    83,    -1,    85,    86,    87,    88,    89,
      -1,    -1,    -1,    93,    -1,    -1,    96,    -1,    98,    -1,
      -1,   101,    -1,    -1,    -1,   105,   106,   107,    -1,    -1,
     110,    -1,    -1,    -1,    -1,   115,   116,    -1,    -1,    -1,
      -1,   121,   122,    -1,   124,    -1,    -1,    -1,   128,    -1,
     130,   131,   132,   133,   134,    -1,    -1,    -1,   138,    -1,
      -1,   141,   142,   143,    -1,    -1,    -1,   147,    -1,   149,
     150,    -1,   152,   153,   154,    -1,    -1,   157,   158,    -1,
     160,   161,   162,   163,   164,   165,    -1,    -1,   168,   169,
     170,   171,   172,    -1,    -1,   175,   176,    -1,   178,   179,
     180,    -1,    -1,   183,    -1,    -1,    -1,   187,   188,    -1,
     190,    -1,   192,    -1,   194,   195,   196,   197,    -1,   199,
      -1,   201,    -1,    -1,    -1,   205,   206,    -1,   208,    -1,
      -1,   211,   212,    -1,    -1,    -1,   216,   217,   218,   219,
      -1,    -1,   222,   223,   224,    -1,    -1,   227,    -1,    -1,
      -1,    -1,   232,   233,    -1,    -1,    -1,   237,    -1,    -1,
      -1,   241,   242,    -1,   244,   245,    -1,    -1,    -1,   249,
      -1,    -1,   252,   253,    -1,    -1,   256,    -1,    -1,   259,
     260,    -1,    -1,    -1,    -1,    -1,   266,   267,    -1,   269,
      -1,   271,    -1,   273,   274,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   282,    -1,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,    -1,   302,   303,   304,    -1,   306,   307,   308,   309,
      -1,   311,   312,    -1,    -1,    -1,    -1,   317,   318,   319,
     320,   321,   322,    -1,    -1,   325,   326,    -1,   328,    -1,
     330,    -1,   332,   333,   334,   335,   336,   337,   338,   339,
     340,    -1,    -1,   343,   344,    -1,    -1,   347,   348,   349,
     350,    -1,    -1,    -1,   354,   355,    -1,    -1,    -1,   359,
      -1,   361,   362,   363,    -1,   365,   366,   367,    -1,   369,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   379,
     380,   381,    -1,   383,   384,    -1,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,    -1,    -1,   398,   399,
     400,    -1,   402,    -1,   404,   405,   406,   407,   408,    -1,
     410,   411,   412,    -1,    -1,   415,    -1,    -1,    -1,   419,
     420,   421,   422,   423,    -1,    -1,   426,   427,   428,   429,
     430,    -1,   432,   433,    -1,   435,   436,   437,    -1,    -1,
     440,    -1,   442,    -1,   444,   445,    -1,   447,   448,   449,
      -1,   451,    -1,    -1,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,   467,    -1,    -1,
      -1,   471,   472,   473,   474,    -1,    -1,    -1,   478,    -1,
      -1,    -1,   482,    -1,   484,   485,   486,   487,    -1,   489,
     490,   491,   492,   493,    -1,    -1,    -1,    -1,    -1,   499,
     500,   501,    -1,   503,   504,    -1,   506,    -1,    -1,   509,
      -1,    -1,   512,   513,   514,   515,   516,   517,    -1,    -1,
     520,   521,    -1,   523,   524,   525,   526,   527,   528,    -1,
      -1,   531,   532,   533,   534,    -1,   536,   537,    -1,    -1,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,   549,
     550,   551,   552,    -1,    -1,    -1,    -1,    -1,   558,   559,
      -1,    -1,    -1,   563,   564,   565,   566,    -1,   568,   569,
      -1,   571,   572,    -1,   574,   575,    -1,    -1,   578,    -1,
      -1,   581,    -1,   583,    -1,   585,   586,    -1,    -1,    -1,
      -1,    -1,    -1,   593,    -1,    -1,   596,    -1,    -1,    -1,
     600,   601,   602,   603,   604,    -1,    -1,    -1,    -1,    -1,
      -1,   611,   612,    -1,   614,   615,   616,    -1,    -1,   619,
       5,    -1,     7,     8,     9,    10,    11,    -1,    -1,    14,
      -1,    -1,    -1,    18,    -1,    -1,    -1,   637,    23,    24,
      25,    26,    27,    -1,    -1,    30,    -1,    -1,    -1,    34,
      -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,
      45,    -1,    -1,    -1,    -1,    -1,    51,    52,    -1,    54,
      55,    -1,    57,    -1,    -1,    -1,    -1,    62,    63,    64,
      65,    66,    67,    -1,    69,    70,    -1,    72,    73,    -1,
      75,    -1,    77,    78,    79,    80,    -1,    82,    83,    -1,
      85,    86,    87,    -1,    89,    -1,    -1,    -1,    93,    -1,
      -1,    96,    -1,    98,    -1,    -1,   101,    -1,    -1,    -1,
     105,   106,   107,    -1,    -1,   110,    -1,    -1,    -1,    -1,
     115,    -1,    -1,    -1,    -1,    -1,   121,   122,    -1,   124,
      -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,   134,
      -1,    -1,    -1,    -1,    -1,    -1,   141,   142,   143,    -1,
      -1,    -1,   147,    -1,    -1,   150,    -1,   152,   153,   154,
      -1,    -1,   157,   158,    -1,   160,   161,   162,   163,   164,
      -1,    -1,    -1,   168,   169,   170,   171,   172,    -1,    -1,
     175,   176,   177,   178,   179,   180,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   188,    -1,   190,    -1,   192,    -1,   194,
     195,   196,   197,    -1,   199,    -1,   201,    -1,    -1,    -1,
      -1,   206,    -1,    -1,    -1,    -1,    -1,   212,    -1,    -1,
      -1,   216,   217,   218,   219,   220,    -1,   222,   223,   224,
      -1,    -1,   227,    -1,    -1,    -1,    -1,   232,    -1,    -1,
      -1,    -1,   237,    -1,    -1,    -1,   241,   242,    -1,   244,
     245,   246,    -1,    -1,   249,    -1,    -1,    -1,   253,    -1,
      -1,   256,   257,    -1,   259,   260,    -1,    -1,    -1,    -1,
      -1,   266,   267,    -1,   269,    -1,   271,    -1,   273,   274,
      -1,    -1,    -1,    -1,   279,    -1,    -1,   282,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,    -1,   302,   303,   304,
      -1,   306,   307,   308,   309,    -1,   311,   312,    -1,    -1,
      -1,    -1,   317,   318,   319,   320,   321,   322,    -1,    -1,
     325,   326,    -1,   328,    -1,   330,    -1,   332,   333,   334,
     335,   336,   337,   338,   339,   340,    -1,    -1,   343,   344,
      -1,    -1,   347,   348,   349,   350,    -1,    -1,    -1,    -1,
     355,    -1,    -1,    -1,   359,    -1,   361,   362,   363,    -1,
     365,   366,   367,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   380,   381,    -1,    -1,   384,
      -1,   386,   387,   388,   389,   390,   391,   392,   393,   394,
      -1,    -1,    -1,    -1,   399,   400,    -1,   402,    -1,   404,
     405,   406,   407,   408,    -1,   410,   411,   412,    -1,    -1,
     415,    -1,    -1,    -1,   419,   420,   421,   422,   423,    -1,
      -1,   426,   427,   428,   429,   430,    -1,   432,    -1,    -1,
     435,    -1,   437,   438,    -1,   440,    -1,    -1,    -1,   444,
      -1,    -1,   447,   448,   449,   450,   451,    -1,    -1,    -1,
     455,   456,   457,   458,   459,   460,   461,    -1,   463,   464,
      -1,   466,    -1,    -1,    -1,    -1,   471,   472,   473,    -1,
      -1,    -1,    -1,   478,    -1,    -1,    -1,   482,    -1,    -1,
     485,    -1,   487,    -1,   489,    -1,    -1,   492,   493,    -1,
      -1,    -1,    -1,    -1,   499,   500,   501,    -1,   503,   504,
      -1,   506,    -1,    -1,   509,    -1,    -1,   512,    -1,   514,
     515,   516,   517,    -1,    -1,    -1,   521,    -1,   523,   524,
     525,   526,   527,   528,    -1,    -1,   531,   532,   533,   534,
      -1,   536,   537,    -1,    -1,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,   549,   550,   551,   552,    -1,    -1,
      -1,    -1,    -1,   558,   559,    -1,    -1,    -1,    -1,   564,
     565,   566,    -1,   568,   569,    -1,   571,   572,    -1,    -1,
      -1,    -1,    -1,   578,    -1,    -1,   581,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,    -1,    -1,    -1,   593,    -1,
      -1,   596,    -1,    -1,    -1,   600,   601,   602,   603,   604,
      -1,    -1,   607,    -1,    -1,    -1,   611,    -1,    -1,   614,
      -1,   616,    -1,     5,   619,     7,     8,     9,    10,    11,
      -1,    -1,    14,    -1,    -1,    -1,    18,   632,    -1,    21,
      -1,    23,    24,    25,    26,    27,    28,    -1,    30,    -1,
      -1,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    41,
      42,    43,    -1,    45,    -1,    47,    48,    -1,    -1,    51,
      -1,    -1,    54,    55,    -1,    57,    58,    -1,    60,    -1,
      62,    63,    64,    65,    66,    67,    -1,    69,    70,    -1,
      72,    73,    74,    75,    76,    77,    78,    79,    80,    -1,
      82,    83,    -1,    85,    86,    87,    88,    89,    -1,    -1,
      -1,    93,    -1,    -1,    96,    -1,    98,    -1,    -1,   101,
      -1,    -1,    -1,   105,   106,   107,    -1,    -1,   110,    -1,
      -1,    -1,    -1,   115,   116,    -1,    -1,    -1,    -1,   121,
     122,    -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,
     132,   133,   134,    -1,    -1,    -1,   138,    -1,    -1,   141,
     142,   143,    -1,    -1,    -1,   147,    -1,   149,   150,    -1,
     152,   153,   154,    -1,    -1,   157,   158,    -1,   160,   161,
     162,   163,   164,   165,    -1,    -1,   168,   169,   170,   171,
     172,    -1,    -1,   175,   176,    -1,   178,   179,   180,    -1,
      -1,   183,    -1,    -1,    -1,   187,   188,    -1,   190,    -1,
     192,    -1,   194,   195,   196,   197,    -1,   199,    -1,   201,
      -1,    -1,    -1,   205,   206,    -1,   208,    -1,    -1,   211,
     212,    -1,    -1,    -1,   216,   217,   218,   219,    -1,    -1,
     222,   223,   224,    -1,    -1,   227,    -1,    -1,    -1,    -1,
     232,   233,    -1,    -1,    -1,   237,    -1,    -1,    -1,   241,
     242,    -1,   244,   245,    -1,    -1,    -1,   249,    -1,    -1,
     252,   253,    -1,    -1,   256,    -1,    -1,   259,   260,    -1,
      -1,    -1,    -1,    -1,   266,   267,    -1,   269,    -1,   271,
      -1,   273,   274,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     282,    -1,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,    -1,
     302,   303,   304,    -1,   306,   307,   308,   309,    -1,   311,
     312,    -1,    -1,    -1,    -1,   317,   318,   319,   320,   321,
     322,    -1,    -1,   325,   326,    -1,   328,    -1,   330,    -1,
     332,   333,   334,   335,   336,   337,   338,   339,   340,    -1,
      -1,   343,   344,    -1,    -1,   347,   348,   349,   350,    -1,
      -1,    -1,   354,   355,    -1,    -1,    -1,   359,    -1,   361,
     362,   363,    -1,   365,   366,   367,    -1,   369,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   379,   380,   381,
      -1,   383,   384,    -1,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,    -1,    -1,   398,   399,   400,    -1,
     402,    -1,   404,   405,   406,   407,   408,    -1,   410,   411,
     412,    -1,    -1,   415,    -1,    -1,    -1,   419,   420,   421,
     422,   423,    -1,    -1,   426,   427,   428,   429,   430,    -1,
     432,   433,    -1,   435,   436,   437,    -1,    -1,   440,    -1,
     442,    -1,   444,   445,    -1,   447,   448,   449,    -1,   451,
      -1,    -1,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,   467,    -1,    -1,    -1,   471,
     472,   473,   474,    -1,    -1,    -1,   478,    -1,    -1,    -1,
     482,    -1,   484,   485,   486,   487,    -1,   489,   490,   491,
     492,   493,    -1,    -1,    -1,    -1,    -1,   499,   500,   501,
      -1,   503,   504,    -1,   506,    -1,    -1,   509,    -1,    -1,
     512,   513,   514,   515,   516,   517,    -1,    -1,   520,   521,
      -1,   523,   524,   525,   526,   527,   528,    -1,    -1,   531,
     532,   533,   534,    -1,   536,   537,    -1,    -1,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,   549,   550,   551,
     552,    -1,    -1,    -1,    -1,    -1,   558,   559,    -1,    -1,
      -1,   563,   564,   565,   566,    -1,   568,   569,    -1,   571,
     572,    -1,   574,   575,    -1,    -1,   578,    -1,    -1,   581,
      -1,   583,    -1,   585,   586,    -1,    -1,    -1,    -1,    -1,
      -1,   593,    -1,    -1,   596,    -1,    -1,    -1,   600,   601,
     602,   603,   604,    -1,    -1,    -1,    -1,    -1,    -1,   611,
     612,    -1,   614,   615,   616,    -1,     5,   619,     7,     8,
       9,    10,    11,   625,    -1,    14,    -1,    -1,    -1,    18,
      -1,    -1,    21,    -1,    23,    24,    25,    26,    27,    28,
      -1,    30,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,
      -1,    -1,    41,    42,    43,    -1,    45,    -1,    47,    48,
      -1,    -1,    51,    -1,    -1,    54,    55,    -1,    57,    58,
      -1,    60,    -1,    62,    63,    64,    65,    66,    67,    -1,
      69,    70,    -1,    72,    73,    74,    75,    76,    77,    78,
      79,    80,    -1,    82,    83,    -1,    85,    86,    87,    88,
      89,    -1,    -1,    -1,    93,    -1,    -1,    96,    -1,    98,
      -1,    -1,   101,    -1,    -1,    -1,   105,   106,   107,    -1,
      -1,   110,    -1,    -1,    -1,    -1,   115,   116,    -1,    -1,
      -1,    -1,   121,   122,    -1,   124,    -1,    -1,    -1,   128,
      -1,   130,   131,   132,   133,   134,    -1,    -1,    -1,   138,
      -1,    -1,   141,   142,   143,    -1,    -1,    -1,   147,    -1,
     149,   150,    -1,   152,   153,   154,    -1,    -1,   157,   158,
      -1,   160,   161,   162,   163,   164,   165,    -1,    -1,   168,
     169,   170,   171,   172,    -1,    -1,   175,   176,    -1,   178,
     179,   180,    -1,    -1,   183,    -1,    -1,    -1,   187,   188,
      -1,   190,    -1,   192,    -1,   194,   195,   196,   197,    -1,
     199,    -1,   201,    -1,    -1,    -1,   205,   206,    -1,   208,
      -1,    -1,   211,   212,    -1,    -1,    -1,   216,   217,   218,
     219,    -1,    -1,   222,   223,   224,    -1,    -1,   227,    -1,
      -1,    -1,    -1,   232,   233,    -1,    -1,    -1,   237,    -1,
      -1,    -1,   241,   242,    -1,   244,   245,    -1,    -1,    -1,
     249,    -1,    -1,   252,   253,    -1,    -1,   256,    -1,    -1,
     259,   260,    -1,    -1,    -1,    -1,    -1,   266,   267,    -1,
     269,    -1,   271,    -1,   273,   274,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   282,    -1,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,    -1,   302,   303,   304,    -1,   306,   307,   308,
     309,    -1,   311,   312,    -1,    -1,    -1,    -1,   317,   318,
     319,   320,   321,   322,    -1,    -1,   325,   326,    -1,   328,
      -1,   330,    -1,   332,   333,   334,   335,   336,   337,   338,
     339,   340,    -1,    -1,   343,   344,    -1,    -1,   347,   348,
     349,   350,    -1,    -1,    -1,   354,   355,    -1,    -1,    -1,
     359,    -1,   361,   362,   363,    -1,   365,   366,   367,    -1,
     369,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     379,   380,   381,    -1,   383,   384,    -1,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,    -1,    -1,   398,
     399,   400,    -1,   402,    -1,   404,   405,   406,   407,   408,
      -1,   410,   411,   412,    -1,    -1,   415,    -1,    -1,    -1,
     419,   420,   421,   422,   423,    -1,    -1,   426,   427,   428,
     429,   430,    -1,   432,   433,    -1,   435,   436,   437,    -1,
      -1,   440,    -1,   442,    -1,   444,   445,    -1,   447,   448,
     449,    -1,   451,    -1,    -1,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,   467,    -1,
      -1,    -1,   471,   472,   473,   474,    -1,    -1,    -1,   478,
      -1,    -1,    -1,   482,    -1,   484,   485,   486,   487,    -1,
     489,   490,   491,   492,   493,    -1,    -1,    -1,    -1,    -1,
     499,   500,   501,    -1,   503,   504,    -1,   506,    -1,    -1,
     509,    -1,    -1,   512,   513,   514,   515,   516,   517,    -1,
      -1,   520,   521,    -1,   523,   524,   525,   526,   527,   528,
      -1,    -1,   531,   532,   533,   534,    -1,   536,   537,    -1,
      -1,   540,   541,   542,   543,    -1,    -1,   546,   547,    -1,
     549,   550,   551,   552,    -1,    -1,    -1,    -1,    -1,   558,
     559,    -1,    -1,    -1,   563,   564,   565,   566,    -1,   568,
     569,    -1,   571,   572,    -1,   574,   575,    -1,    -1,   578,
      -1,    -1,   581,    -1,   583,    -1,   585,   586,    -1,    -1,
      -1,    -1,    -1,    -1,   593,    -1,    -1,   596,    -1,    -1,
      -1,   600,   601,   602,   603,   604,    -1,    -1,    -1,    -1,
      -1,    -1,   611,   612,    -1,   614,   615,   616,    -1,     5,
     619,     7,     8,     9,    10,    11,   625,    -1,    14,    -1,
      -1,    -1,    18,    -1,    -1,    21,    -1,    23,    24,    25,
      26,    27,    28,    -1,    30,    -1,    -1,    -1,    34,    -1,
      -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,    45,
      -1,    47,    48,    -1,    -1,    51,    -1,    -1,    54,    55,
      -1,    57,    58,    -1,    60,    -1,    62,    63,    64,    65,
      66,    67,    -1,    69,    70,    -1,    72,    73,    74,    75,
      76,    77,    78,    79,    80,    -1,    82,    83,    -1,    85,
      86,    87,    88,    89,    -1,    -1,    -1,    93,    -1,    -1,
      96,    -1,    98,    -1,    -1,   101,    -1,    -1,    -1,   105,
     106,   107,    -1,    -1,   110,    -1,    -1,    -1,    -1,   115,
     116,    -1,    -1,    -1,    -1,   121,   122,    -1,   124,    -1,
      -1,    -1,   128,    -1,   130,   131,   132,   133,   134,    -1,
      -1,    -1,   138,    -1,    -1,   141,   142,   143,    -1,    -1,
      -1,   147,    -1,   149,   150,    -1,   152,   153,   154,    -1,
      -1,   157,   158,    -1,   160,   161,   162,   163,   164,   165,
      -1,    -1,   168,   169,   170,   171,   172,    -1,    -1,   175,
     176,    -1,   178,   179,   180,    -1,    -1,   183,    -1,    -1,
      -1,   187,   188,    -1,   190,    -1,   192,    -1,   194,   195,
     196,   197,    -1,   199,    -1,   201,    -1,    -1,    -1,   205,
     206,    -1,   208,    -1,    -1,   211,   212,    -1,    -1,    -1,
     216,   217,   218,   219,    -1,    -1,   222,   223,   224,    -1,
      -1,   227,    -1,    -1,    -1,    -1,   232,   233,    -1,    -1,
      -1,   237,    -1,    -1,    -1,   241,   242,    -1,   244,   245,
      -1,    -1,    -1,   249,    -1,    -1,   252,   253,    -1,    -1,
     256,    -1,    -1,   259,   260,    -1,    -1,    -1,    -1,    -1,
     266,   267,    -1,   269,    -1,   271,    -1,   273,   274,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   282,    -1,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,    -1,   302,   303,   304,    -1,
     306,   307,   308,   309,    -1,   311,   312,    -1,    -1,    -1,
      -1,   317,   318,   319,   320,   321,   322,    -1,    -1,   325,
     326,    -1,   328,    -1,   330,    -1,   332,   333,   334,   335,
     336,   337,   338,   339,   340,    -1,    -1,   343,   344,    -1,
      -1,   347,   348,   349,   350,    -1,    -1,    -1,   354,   355,
      -1,    -1,    -1,   359,    -1,   361,   362,   363,    -1,   365,
     366,   367,    -1,   369,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   379,   380,   381,    -1,   383,   384,    -1,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
      -1,    -1,   398,   399,   400,    -1,   402,    -1,   404,   405,
     406,   407,   408,    -1,   410,   411,   412,    -1,    -1,   415,
      -1,    -1,    -1,   419,   420,   421,   422,   423,    -1,    -1,
     426,   427,   428,   429,   430,    -1,   432,   433,    -1,   435,
     436,   437,    -1,    -1,   440,    -1,   442,    -1,   444,   445,
      -1,   447,   448,   449,    -1,   451,    -1,    -1,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,   467,    -1,    -1,    -1,   471,   472,   473,   474,    -1,
      -1,    -1,   478,    -1,    -1,    -1,   482,    -1,   484,   485,
     486,   487,    -1,   489,   490,   491,   492,   493,    -1,    -1,
      -1,    -1,    -1,   499,   500,   501,    -1,   503,   504,    -1,
     506,    -1,    -1,   509,    -1,    -1,   512,   513,   514,   515,
     516,   517,    -1,    -1,   520,   521,    -1,   523,   524,   525,
     526,   527,   528,    -1,    -1,   531,   532,   533,   534,    -1,
     536,   537,    -1,    -1,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,   549,   550,   551,   552,    -1,    -1,    -1,
      -1,    -1,   558,   559,    -1,    -1,    -1,   563,   564,   565,
     566,    -1,   568,   569,    -1,   571,   572,    -1,   574,   575,
      -1,    -1,   578,    -1,    -1,   581,    -1,   583,    -1,   585,
     586,    -1,    -1,    -1,    -1,    -1,    -1,   593,    -1,    -1,
     596,    -1,    -1,    -1,   600,   601,   602,   603,   604,    -1,
      -1,    -1,    -1,    -1,    -1,   611,   612,    -1,   614,   615,
     616,    -1,     5,   619,     7,     8,     9,    10,    11,   625,
      -1,    14,    -1,    -1,    -1,    18,    -1,    -1,    21,    -1,
      23,    24,    25,    26,    27,    28,    -1,    30,    -1,    -1,
      -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    41,    42,
      43,    -1,    45,    -1,    47,    48,    -1,    -1,    51,    -1,
      -1,    54,    55,    -1,    57,    58,    -1,    60,    -1,    62,
      63,    64,    65,    66,    67,    -1,    69,    70,    -1,    72,
      73,    74,    75,    76,    77,    78,    79,    80,    -1,    82,
      83,    -1,    85,    86,    87,    88,    89,    -1,    -1,    -1,
      93,    -1,    -1,    96,    -1,    98,    -1,    -1,   101,    -1,
      -1,    -1,   105,   106,   107,    -1,    -1,   110,    -1,    -1,
      -1,    -1,   115,   116,    -1,    -1,    -1,    -1,   121,   122,
      -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,
     133,   134,    -1,    -1,    -1,   138,    -1,    -1,   141,   142,
     143,    -1,    -1,    -1,   147,    -1,   149,   150,    -1,   152,
     153,   154,    -1,    -1,   157,   158,    -1,   160,   161,   162,
     163,   164,   165,    -1,    -1,   168,   169,   170,   171,   172,
      -1,    -1,   175,   176,    -1,   178,   179,   180,    -1,    -1,
     183,    -1,    -1,    -1,   187,   188,    -1,   190,    -1,   192,
      -1,   194,   195,   196,   197,    -1,   199,    -1,   201,    -1,
      -1,    -1,   205,   206,    -1,   208,    -1,    -1,   211,   212,
      -1,    -1,    -1,   216,   217,   218,   219,    -1,    -1,   222,
     223,   224,    -1,    -1,   227,    -1,    -1,    -1,    -1,   232,
     233,    -1,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,
      -1,   244,   245,    -1,    -1,    -1,   249,    -1,    -1,   252,
     253,    -1,    -1,   256,    -1,    -1,   259,   260,    -1,    -1,
      -1,    -1,    -1,   266,   267,    -1,   269,    -1,   271,    -1,
     273,   274,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   282,
      -1,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,    -1,   302,
     303,   304,    -1,   306,   307,   308,   309,    -1,   311,   312,
      -1,    -1,    -1,    -1,   317,   318,   319,   320,   321,   322,
      -1,    -1,   325,   326,    -1,   328,    -1,   330,    -1,   332,
     333,   334,   335,   336,   337,   338,   339,   340,    -1,    -1,
     343,   344,    -1,    -1,   347,   348,   349,   350,    -1,    -1,
      -1,   354,   355,    -1,    -1,    -1,   359,    -1,   361,   362,
     363,    -1,   365,   366,   367,    -1,   369,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   379,   380,   381,    -1,
     383,   384,    -1,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,    -1,    -1,   398,   399,   400,    -1,   402,
      -1,   404,   405,   406,   407,   408,    -1,   410,   411,   412,
      -1,    -1,   415,    -1,    -1,    -1,   419,   420,   421,   422,
     423,    -1,    -1,   426,   427,   428,   429,   430,    -1,   432,
     433,    -1,   435,   436,   437,    -1,    -1,   440,    -1,   442,
      -1,   444,   445,    -1,   447,   448,   449,    -1,   451,    -1,
      -1,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,   467,    -1,    -1,    -1,   471,   472,
     473,   474,    -1,    -1,    -1,   478,    -1,    -1,    -1,   482,
      -1,   484,   485,   486,   487,    -1,   489,   490,   491,   492,
     493,    -1,    -1,    -1,    -1,    -1,   499,   500,   501,    -1,
     503,   504,    -1,   506,    -1,    -1,   509,    -1,    -1,   512,
     513,   514,   515,   516,   517,    -1,    -1,   520,   521,    -1,
     523,   524,   525,   526,   527,   528,    -1,    -1,   531,   532,
     533,   534,    -1,   536,   537,    -1,    -1,   540,   541,   542,
     543,    -1,    -1,   546,   547,    -1,   549,   550,   551,   552,
      -1,    -1,    -1,    -1,    -1,   558,   559,    -1,    -1,    -1,
     563,   564,   565,   566,    -1,   568,   569,    -1,   571,   572,
      -1,   574,   575,    -1,    -1,   578,    -1,    -1,   581,    -1,
     583,    -1,   585,   586,    -1,    -1,    -1,    -1,    -1,    -1,
     593,    -1,    -1,   596,    -1,    -1,    -1,   600,   601,   602,
     603,   604,    -1,    -1,    -1,    -1,    -1,    -1,   611,   612,
      -1,   614,   615,   616,    -1,     5,   619,     7,     8,     9,
      10,    11,   625,    -1,    14,    -1,    -1,    -1,    18,    -1,
      -1,    21,    -1,    23,    24,    25,    26,    27,    28,    -1,
      30,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,    -1,
      -1,    41,    42,    43,    -1,    45,    -1,    47,    48,    -1,
      -1,    51,    -1,    -1,    54,    55,    -1,    57,    58,    -1,
      60,    -1,    62,    63,    64,    65,    66,    67,    -1,    69,
      70,    -1,    72,    73,    74,    75,    76,    77,    78,    79,
      80,    -1,    82,    83,    -1,    85,    86,    87,    88,    89,
      -1,    -1,    -1,    93,    -1,    -1,    96,    -1,    98,    -1,
      -1,   101,    -1,    -1,    -1,   105,   106,   107,    -1,    -1,
     110,    -1,    -1,    -1,    -1,   115,   116,   117,    -1,    -1,
      -1,   121,   122,    -1,   124,    -1,    -1,    -1,   128,    -1,
     130,   131,   132,   133,   134,    -1,    -1,    -1,   138,    -1,
      -1,   141,   142,   143,    -1,    -1,    -1,   147,    -1,   149,
     150,    -1,   152,   153,   154,    -1,    -1,   157,   158,    -1,
     160,   161,   162,   163,   164,   165,    -1,    -1,   168,   169,
     170,   171,   172,    -1,    -1,   175,   176,    -1,   178,   179,
     180,   181,    -1,   183,    -1,    -1,    -1,   187,   188,    -1,
     190,    -1,   192,    -1,   194,   195,   196,   197,    -1,   199,
      -1,   201,    -1,    -1,    -1,   205,   206,    -1,   208,   209,
      -1,   211,   212,    -1,    -1,    -1,   216,   217,   218,   219,
      -1,    -1,   222,   223,   224,    -1,    -1,   227,    -1,    -1,
      -1,    -1,   232,   233,    -1,    -1,    -1,   237,    -1,    -1,
      -1,   241,   242,    -1,   244,   245,    -1,    -1,    -1,   249,
      -1,    -1,   252,   253,    -1,    -1,   256,    -1,    -1,   259,
     260,    -1,    -1,    -1,    -1,    -1,   266,   267,    -1,   269,
      -1,   271,    -1,   273,   274,    -1,    -1,   277,    -1,    -1,
      -1,    -1,   282,    -1,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,    -1,   302,   303,   304,    -1,   306,   307,   308,   309,
      -1,   311,   312,    -1,    -1,    -1,    -1,   317,   318,   319,
     320,   321,   322,    -1,    -1,   325,   326,    -1,   328,    -1,
     330,    -1,   332,   333,   334,   335,   336,   337,   338,   339,
     340,    -1,    -1,   343,   344,    -1,    -1,   347,   348,   349,
     350,   351,   352,    -1,   354,   355,    -1,    -1,   358,   359,
      -1,   361,   362,   363,    -1,   365,   366,   367,    -1,   369,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   379,
     380,   381,    -1,   383,   384,    -1,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,    -1,    -1,   398,   399,
     400,    -1,   402,    -1,   404,   405,   406,   407,   408,    -1,
     410,   411,   412,    -1,    -1,   415,    -1,    -1,    -1,   419,
     420,   421,   422,   423,    -1,    -1,   426,   427,   428,   429,
     430,    -1,   432,   433,    -1,   435,   436,   437,    -1,    -1,
     440,    -1,   442,    -1,   444,   445,    -1,   447,   448,   449,
      -1,   451,    -1,    -1,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,   467,    -1,    -1,
      -1,   471,   472,   473,   474,    -1,    -1,    -1,   478,    -1,
      -1,    -1,   482,    -1,   484,   485,   486,   487,    -1,   489,
     490,   491,   492,   493,    -1,    -1,   496,   497,   498,   499,
     500,   501,    -1,   503,   504,    -1,   506,    -1,    -1,   509,
      -1,    -1,   512,   513,   514,   515,   516,   517,    -1,    -1,
     520,   521,    -1,   523,   524,   525,   526,   527,   528,    -1,
      -1,   531,   532,   533,   534,    -1,   536,   537,    -1,    -1,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,   549,
     550,   551,   552,    -1,    -1,    -1,    -1,    -1,   558,   559,
      -1,    -1,    -1,   563,   564,   565,   566,   567,   568,   569,
      -1,   571,   572,    -1,   574,   575,    -1,    -1,   578,    -1,
      -1,   581,    -1,   583,    -1,   585,   586,    -1,    -1,    -1,
      -1,    -1,    -1,   593,    -1,    -1,   596,    -1,    -1,    -1,
     600,   601,   602,   603,   604,    -1,    -1,    -1,    -1,    -1,
      -1,   611,   612,    -1,   614,   615,   616,    -1,     5,   619,
       7,     8,     9,    10,    11,    -1,    -1,    14,    -1,    -1,
      -1,    18,    -1,    -1,    21,    -1,    23,    24,    25,    26,
      27,    28,    -1,    30,    -1,    -1,    33,    34,    -1,    -1,
      -1,    38,    -1,    -1,    41,    42,    43,    -1,    45,    -1,
      47,    48,    -1,    -1,    51,    -1,    -1,    54,    55,    -1,
      57,    58,    -1,    60,    -1,    62,    63,    64,    65,    66,
      67,    -1,    69,    70,    -1,    72,    73,    74,    75,    76,
      77,    78,    79,    80,    -1,    82,    83,    -1,    85,    86,
      87,    88,    89,    -1,    -1,    -1,    93,    -1,    -1,    96,
      -1,    98,    -1,    -1,   101,    -1,    -1,    -1,   105,   106,
     107,    -1,    -1,   110,    -1,    -1,    -1,    -1,   115,   116,
      -1,    -1,    -1,   120,   121,   122,    -1,   124,    -1,    -1,
      -1,   128,    -1,   130,   131,   132,   133,   134,    -1,    -1,
      -1,   138,    -1,    -1,   141,   142,   143,    -1,    -1,    -1,
     147,    -1,   149,   150,    -1,   152,   153,   154,   155,    -1,
     157,   158,    -1,   160,   161,   162,   163,   164,   165,    -1,
      -1,   168,   169,   170,   171,   172,    -1,    -1,   175,   176,
      -1,   178,   179,   180,    -1,    -1,   183,    -1,    -1,    -1,
     187,   188,    -1,   190,    -1,   192,    -1,   194,   195,   196,
     197,    -1,   199,    -1,   201,    -1,    -1,    -1,   205,   206,
      -1,   208,    -1,    -1,   211,   212,    -1,    -1,    -1,   216,
     217,   218,   219,    -1,    -1,   222,   223,   224,    -1,    -1,
     227,    -1,    -1,    -1,    -1,   232,   233,    -1,    -1,    -1,
     237,    -1,    -1,    -1,   241,   242,    -1,   244,   245,    -1,
      -1,    -1,   249,    -1,    -1,   252,   253,    -1,    -1,   256,
      -1,    -1,   259,   260,   261,    -1,    -1,    -1,    -1,   266,
     267,    -1,   269,    -1,   271,    -1,   273,   274,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   282,    -1,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,    -1,   302,   303,   304,    -1,   306,
     307,   308,   309,    -1,   311,   312,    -1,    -1,    -1,    -1,
     317,   318,   319,   320,   321,   322,    -1,    -1,   325,   326,
      -1,   328,    -1,   330,    -1,   332,   333,   334,   335,   336,
     337,   338,   339,   340,    -1,    -1,   343,   344,    -1,    -1,
     347,   348,   349,   350,    -1,    -1,    -1,   354,   355,    -1,
      -1,    -1,   359,    -1,   361,   362,   363,    -1,   365,   366,
     367,    -1,   369,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   379,   380,   381,    -1,   383,   384,    -1,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,    -1,
      -1,   398,   399,   400,    -1,   402,    -1,   404,   405,   406,
     407,   408,    -1,   410,   411,   412,    -1,    -1,   415,    -1,
      -1,    -1,   419,   420,   421,   422,   423,    -1,    -1,   426,
     427,   428,   429,   430,    -1,   432,   433,    -1,   435,   436,
     437,    -1,    -1,   440,    -1,   442,    -1,   444,   445,    -1,
     447,   448,   449,    -1,   451,    -1,    -1,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
     467,    -1,    -1,    -1,   471,   472,   473,   474,    -1,    -1,
     477,   478,    -1,    -1,    -1,   482,    -1,   484,   485,   486,
     487,    -1,   489,   490,   491,   492,   493,    -1,    -1,    -1,
      -1,    -1,   499,   500,   501,    -1,   503,   504,    -1,   506,
      -1,    -1,   509,    -1,    -1,   512,   513,   514,   515,   516,
     517,    -1,    -1,   520,   521,    -1,   523,   524,   525,   526,
     527,   528,    -1,    -1,   531,   532,   533,   534,    -1,   536,
     537,    -1,    -1,   540,   541,   542,   543,    -1,   545,   546,
     547,    -1,   549,   550,   551,   552,    -1,    -1,    -1,    -1,
      -1,   558,   559,    -1,    -1,    -1,   563,   564,   565,   566,
      -1,   568,   569,    -1,   571,   572,    -1,   574,   575,    -1,
      -1,   578,    -1,    -1,   581,    -1,   583,    -1,   585,   586,
      -1,    -1,    -1,    -1,    -1,    -1,   593,    -1,    -1,   596,
      -1,    -1,    -1,   600,   601,   602,   603,   604,    -1,    -1,
      -1,    -1,    -1,    -1,   611,   612,    -1,   614,   615,   616,
      -1,     5,   619,     7,     8,     9,    10,    11,    -1,    -1,
      14,    -1,    -1,    -1,    18,    -1,    -1,    21,    -1,    23,
      24,    25,    26,    27,    28,    -1,    30,    -1,    -1,    33,
      34,    -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,
      -1,    45,    -1,    47,    48,    -1,    -1,    51,    -1,    -1,
      54,    55,    -1,    57,    58,    -1,    60,    -1,    62,    63,
      64,    65,    66,    67,    -1,    69,    70,    -1,    72,    73,
      74,    75,    76,    77,    78,    79,    80,    -1,    82,    83,
      -1,    85,    86,    87,    88,    89,    -1,    -1,    -1,    93,
      -1,    -1,    96,    -1,    98,    -1,    -1,   101,    -1,    -1,
      -1,   105,   106,   107,    -1,    -1,   110,    -1,    -1,    -1,
      -1,   115,   116,    -1,    -1,    -1,   120,   121,   122,    -1,
     124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,
     134,    -1,    -1,    -1,   138,    -1,    -1,   141,   142,   143,
      -1,    -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,
     154,    -1,    -1,   157,   158,    -1,   160,   161,   162,   163,
     164,   165,    -1,    -1,   168,   169,   170,   171,   172,    -1,
      -1,   175,   176,    -1,   178,   179,   180,    -1,    -1,   183,
      -1,    -1,    -1,   187,   188,    -1,   190,    -1,   192,    -1,
     194,   195,   196,   197,    -1,   199,    -1,   201,    -1,    -1,
      -1,   205,   206,    -1,   208,    -1,    -1,   211,   212,    -1,
      -1,    -1,   216,   217,   218,   219,    -1,    -1,   222,   223,
     224,    -1,    -1,   227,    -1,    -1,    -1,    -1,   232,   233,
      -1,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,    -1,
     244,   245,    -1,    -1,    -1,   249,    -1,    -1,   252,   253,
      -1,    -1,   256,    -1,    -1,   259,   260,   261,    -1,    -1,
      -1,    -1,   266,   267,    -1,   269,    -1,   271,    -1,   273,
     274,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   282,    -1,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,    -1,   302,   303,
     304,    -1,   306,   307,   308,   309,    -1,   311,   312,    -1,
      -1,    -1,    -1,   317,   318,   319,   320,   321,   322,    -1,
      -1,   325,   326,    -1,   328,    -1,   330,    -1,   332,   333,
     334,   335,   336,   337,   338,   339,   340,    -1,    -1,   343,
     344,    -1,    -1,   347,   348,   349,   350,    -1,    -1,    -1,
     354,   355,    -1,    -1,    -1,   359,    -1,   361,   362,   363,
      -1,   365,   366,   367,    -1,   369,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   379,   380,   381,    -1,   383,
     384,    -1,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,    -1,    -1,   398,   399,   400,    -1,   402,    -1,
     404,   405,   406,   407,   408,    -1,   410,   411,   412,    -1,
      -1,   415,    -1,    -1,    -1,   419,   420,   421,   422,   423,
      -1,    -1,   426,   427,   428,   429,   430,    -1,   432,   433,
      -1,   435,   436,   437,    -1,    -1,   440,    -1,   442,    -1,
     444,   445,    -1,   447,   448,   449,    -1,   451,    -1,    -1,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,   467,    -1,    -1,    -1,   471,   472,   473,
     474,    -1,    -1,    -1,   478,    -1,    -1,    -1,   482,    -1,
     484,   485,   486,   487,    -1,   489,   490,   491,   492,   493,
      -1,    -1,    -1,    -1,    -1,   499,   500,   501,    -1,   503,
     504,    -1,   506,    -1,    -1,   509,    -1,    -1,   512,   513,
     514,   515,   516,   517,    -1,    -1,   520,   521,    -1,   523,
     524,   525,   526,   527,   528,    -1,    -1,   531,   532,   533,
     534,    -1,   536,   537,    -1,    -1,   540,   541,   542,   543,
      -1,   545,   546,   547,    -1,   549,   550,   551,   552,    -1,
      -1,    -1,    -1,    -1,   558,   559,    -1,    -1,    -1,   563,
     564,   565,   566,    -1,   568,   569,    -1,   571,   572,    -1,
     574,   575,    -1,    -1,   578,    -1,    -1,   581,    -1,   583,
      -1,   585,   586,    -1,    -1,    -1,    -1,    -1,    -1,   593,
      -1,    -1,   596,    -1,    -1,    -1,   600,   601,   602,   603,
     604,    -1,    -1,    -1,    -1,    -1,    -1,   611,   612,    -1,
     614,   615,   616,    -1,     5,   619,     7,     8,     9,    10,
      11,    -1,    -1,    14,    -1,    -1,    -1,    18,    -1,    -1,
      21,    -1,    23,    24,    25,    26,    27,    28,    -1,    30,
      -1,    -1,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,
      41,    42,    43,    -1,    45,    -1,    47,    48,    -1,    -1,
      51,    -1,    -1,    54,    55,    -1,    57,    58,    -1,    60,
      -1,    62,    63,    64,    65,    66,    67,    -1,    69,    70,
      -1,    72,    73,    74,    75,    76,    77,    78,    79,    80,
      -1,    82,    83,    -1,    85,    86,    87,    88,    89,    -1,
      -1,    -1,    93,    -1,    -1,    96,    -1,    98,    -1,    -1,
     101,    -1,    -1,    -1,   105,   106,   107,    -1,    -1,   110,
      -1,    -1,    -1,    -1,   115,   116,    -1,    -1,    -1,    -1,
     121,   122,    -1,   124,    -1,    -1,    -1,   128,    -1,   130,
     131,   132,   133,   134,    -1,    -1,    -1,   138,    -1,    -1,
     141,   142,   143,    -1,    -1,    -1,   147,    -1,   149,   150,
      -1,   152,   153,   154,    -1,    -1,   157,   158,    -1,   160,
     161,   162,   163,   164,   165,    -1,    -1,   168,   169,   170,
     171,   172,    -1,    -1,   175,   176,    -1,   178,   179,   180,
      -1,    -1,   183,    -1,    -1,    -1,   187,   188,    -1,   190,
      -1,   192,    -1,   194,   195,   196,   197,    -1,   199,    -1,
     201,    -1,    -1,    -1,   205,   206,    -1,   208,    -1,    -1,
     211,   212,    -1,    -1,    -1,   216,   217,   218,   219,    -1,
      -1,   222,   223,   224,    -1,    -1,   227,    -1,    -1,    -1,
      -1,   232,   233,    -1,    -1,    -1,   237,    -1,    -1,    -1,
     241,   242,    -1,   244,   245,    -1,    -1,    -1,   249,    -1,
      -1,   252,   253,    -1,    -1,   256,    -1,    -1,   259,   260,
      -1,    -1,    -1,    -1,    -1,   266,   267,    -1,   269,    -1,
     271,    -1,   273,   274,    -1,    -1,   277,    -1,    -1,    -1,
      -1,   282,    -1,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
      -1,   302,   303,   304,    -1,   306,   307,   308,   309,    -1,
     311,   312,    -1,    -1,    -1,    -1,   317,   318,   319,   320,
     321,   322,    -1,    -1,   325,   326,    -1,   328,    -1,   330,
      -1,   332,   333,   334,   335,   336,   337,   338,   339,   340,
      -1,    -1,   343,   344,    -1,    -1,   347,   348,   349,   350,
      -1,    -1,    -1,   354,   355,    -1,    -1,   358,   359,    -1,
     361,   362,   363,    -1,   365,   366,   367,    -1,   369,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   379,   380,
     381,   382,   383,   384,    -1,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,    -1,    -1,   398,   399,   400,
      -1,   402,    -1,   404,   405,   406,   407,   408,    -1,   410,
     411,   412,    -1,    -1,   415,    -1,    -1,    -1,   419,   420,
     421,   422,   423,    -1,    -1,   426,   427,   428,   429,   430,
      -1,   432,   433,    -1,   435,   436,   437,    -1,    -1,   440,
      -1,   442,    -1,   444,   445,    -1,   447,   448,   449,    -1,
     451,    -1,    -1,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,   467,    -1,    -1,    -1,
     471,   472,   473,   474,    -1,    -1,    -1,   478,    -1,    -1,
      -1,   482,    -1,   484,   485,   486,   487,    -1,   489,   490,
     491,   492,   493,    -1,    -1,    -1,    -1,    -1,   499,   500,
     501,    -1,   503,   504,    -1,   506,    -1,    -1,   509,    -1,
      -1,   512,   513,   514,   515,   516,   517,    -1,    -1,   520,
     521,    -1,   523,   524,   525,   526,   527,   528,    -1,    -1,
     531,   532,   533,   534,    -1,   536,   537,    -1,    -1,   540,
     541,   542,   543,    -1,    -1,   546,   547,    -1,   549,   550,
     551,   552,    -1,    -1,    -1,    -1,    -1,   558,   559,    -1,
      -1,    -1,   563,   564,   565,   566,   567,   568,   569,    -1,
     571,   572,    -1,   574,   575,    -1,    -1,   578,    -1,    -1,
     581,    -1,   583,    -1,   585,   586,    -1,    -1,    -1,    -1,
      -1,    -1,   593,    -1,    -1,   596,    -1,    -1,    -1,   600,
     601,   602,   603,   604,    -1,    -1,    -1,    -1,    -1,    -1,
     611,   612,    -1,   614,   615,   616,    -1,     5,   619,     7,
       8,     9,    10,    11,    -1,    -1,    14,    -1,    -1,    -1,
      18,    -1,    -1,    21,    -1,    23,    24,    25,    26,    27,
      28,    -1,    30,    -1,    -1,    33,    34,    -1,    -1,    -1,
      38,    -1,    -1,    41,    42,    43,    -1,    45,    -1,    47,
      48,    -1,    -1,    51,    -1,    -1,    54,    55,    -1,    57,
      58,    -1,    60,    -1,    62,    63,    64,    65,    66,    67,
      -1,    69,    70,    -1,    72,    73,    74,    75,    76,    77,
      78,    79,    80,    -1,    82,    83,    -1,    85,    86,    87,
      88,    89,    -1,    -1,    -1,    93,    -1,    -1,    96,    -1,
      98,    -1,    -1,   101,    -1,    -1,    -1,   105,   106,   107,
      -1,    -1,   110,    -1,    -1,    -1,    -1,   115,   116,    -1,
      -1,    -1,   120,   121,   122,    -1,   124,    -1,    -1,    -1,
     128,    -1,   130,   131,   132,   133,   134,    -1,    -1,    -1,
     138,    -1,    -1,   141,   142,   143,    -1,    -1,    -1,   147,
      -1,   149,   150,    -1,   152,   153,   154,    -1,    -1,   157,
     158,    -1,   160,   161,   162,   163,   164,   165,    -1,    -1,
     168,   169,   170,   171,   172,    -1,    -1,   175,   176,    -1,
     178,   179,   180,    -1,    -1,   183,    -1,    -1,    -1,   187,
     188,    -1,   190,    -1,   192,    -1,   194,   195,   196,   197,
      -1,   199,    -1,   201,    -1,    -1,    -1,   205,   206,    -1,
     208,    -1,    -1,   211,   212,    -1,    -1,    -1,   216,   217,
     218,   219,    -1,    -1,   222,   223,   224,    -1,    -1,   227,
      -1,    -1,    -1,    -1,   232,   233,    -1,    -1,    -1,   237,
      -1,    -1,    -1,   241,   242,    -1,   244,   245,    -1,    -1,
      -1,   249,    -1,    -1,   252,   253,    -1,    -1,   256,    -1,
      -1,   259,   260,   261,    -1,    -1,    -1,    -1,   266,   267,
      -1,   269,    -1,   271,    -1,   273,   274,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   282,    -1,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,    -1,   302,   303,   304,    -1,   306,   307,
     308,   309,    -1,   311,   312,    -1,    -1,    -1,    -1,   317,
     318,   319,   320,   321,   322,    -1,    -1,   325,   326,    -1,
     328,    -1,   330,    -1,   332,   333,   334,   335,   336,   337,
     338,   339,   340,    -1,    -1,   343,   344,    -1,    -1,   347,
     348,   349,   350,    -1,    -1,    -1,   354,   355,    -1,    -1,
      -1,   359,    -1,   361,   362,   363,    -1,   365,   366,   367,
      -1,   369,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   379,   380,   381,    -1,   383,   384,    -1,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,    -1,    -1,
     398,   399,   400,    -1,   402,    -1,   404,   405,   406,   407,
     408,    -1,   410,   411,   412,    -1,    -1,   415,    -1,    -1,
      -1,   419,   420,   421,   422,   423,    -1,    -1,   426,   427,
     428,   429,   430,    -1,   432,   433,    -1,   435,   436,   437,
      -1,    -1,   440,    -1,   442,    -1,   444,   445,    -1,   447,
     448,   449,    -1,   451,    -1,    -1,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,   467,
      -1,    -1,    -1,   471,   472,   473,   474,    -1,    -1,    -1,
     478,    -1,    -1,    -1,   482,    -1,   484,   485,   486,   487,
      -1,   489,   490,   491,   492,   493,    -1,    -1,    -1,    -1,
      -1,   499,   500,   501,    -1,   503,   504,    -1,   506,    -1,
      -1,   509,    -1,    -1,   512,   513,   514,   515,   516,   517,
      -1,    -1,   520,   521,    -1,   523,   524,   525,   526,   527,
     528,    -1,    -1,   531,   532,   533,   534,    -1,   536,   537,
      -1,    -1,   540,   541,   542,   543,    -1,   545,   546,   547,
      -1,   549,   550,   551,   552,    -1,    -1,    -1,    -1,    -1,
     558,   559,    -1,    -1,    -1,   563,   564,   565,   566,    -1,
     568,   569,    -1,   571,   572,    -1,   574,   575,    -1,    -1,
     578,    -1,    -1,   581,    -1,   583,    -1,   585,   586,    -1,
      -1,    -1,    -1,    -1,    -1,   593,    -1,    -1,   596,    -1,
      -1,    -1,   600,   601,   602,   603,   604,    -1,    -1,    -1,
      -1,    -1,    -1,   611,   612,    -1,   614,   615,   616,    -1,
       5,   619,     7,     8,     9,    10,    11,    -1,    -1,    14,
      -1,    -1,    -1,    18,    -1,    -1,    21,    -1,    23,    24,
      25,    26,    27,    28,    -1,    30,    -1,    -1,    -1,    34,
      -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,
      45,    -1,    47,    48,    -1,    -1,    51,    -1,    -1,    54,
      55,    -1,    57,    58,    -1,    60,    -1,    62,    63,    64,
      65,    66,    67,    -1,    69,    70,    -1,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    -1,    82,    83,    -1,
      85,    86,    87,    88,    89,    -1,    -1,    -1,    93,    -1,
      -1,    96,    -1,    98,    99,    -1,   101,    -1,    -1,    -1,
     105,   106,   107,    -1,    -1,   110,    -1,    -1,    -1,    -1,
     115,   116,    -1,    -1,    -1,    -1,   121,   122,    -1,   124,
      -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,   134,
      -1,    -1,    -1,   138,    -1,    -1,   141,   142,   143,    -1,
      -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,   154,
      -1,    -1,   157,   158,    -1,   160,   161,   162,   163,   164,
     165,    -1,    -1,   168,   169,   170,   171,   172,    -1,    -1,
     175,   176,    -1,   178,   179,   180,    -1,    -1,   183,    -1,
      -1,    -1,   187,   188,    -1,   190,    -1,   192,    -1,   194,
     195,   196,   197,    -1,   199,    -1,   201,    -1,    -1,    -1,
     205,   206,    -1,   208,    -1,    -1,   211,   212,    -1,    -1,
      -1,   216,   217,   218,   219,    -1,    -1,   222,   223,   224,
      -1,    -1,   227,    -1,    -1,    -1,    -1,   232,   233,    -1,
      -1,    -1,   237,    -1,    -1,    -1,   241,   242,    -1,   244,
     245,    -1,    -1,    -1,   249,    -1,    -1,   252,   253,    -1,
      -1,   256,    -1,    -1,   259,   260,   261,    -1,    -1,    -1,
      -1,   266,   267,    -1,   269,    -1,   271,    -1,   273,   274,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   282,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,    -1,   302,   303,   304,
      -1,   306,   307,   308,   309,    -1,   311,   312,    -1,    -1,
      -1,    -1,   317,   318,   319,   320,   321,   322,    -1,    -1,
     325,   326,    -1,   328,    -1,   330,    -1,   332,   333,   334,
     335,   336,   337,   338,   339,   340,    -1,    -1,   343,   344,
      -1,    -1,   347,   348,   349,   350,    -1,    -1,    -1,   354,
     355,    -1,    -1,    -1,   359,    -1,   361,   362,   363,    -1,
     365,   366,   367,    -1,   369,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   379,   380,   381,    -1,   383,   384,
      -1,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,    -1,    -1,   398,   399,   400,    -1,   402,    -1,   404,
     405,   406,   407,   408,    -1,   410,   411,   412,    -1,    -1,
     415,    -1,    -1,    -1,   419,   420,   421,   422,   423,    -1,
      -1,   426,   427,   428,   429,   430,    -1,   432,   433,    -1,
     435,   436,   437,    -1,    -1,   440,    -1,   442,    -1,   444,
     445,    -1,   447,   448,   449,    -1,   451,    -1,    -1,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,   467,    -1,    -1,    -1,   471,   472,   473,   474,
      -1,    -1,    -1,   478,    -1,    -1,    -1,   482,    -1,   484,
     485,   486,   487,    -1,   489,   490,   491,   492,   493,    -1,
      -1,    -1,    -1,    -1,   499,   500,   501,    -1,   503,   504,
      -1,   506,    -1,    -1,   509,    -1,    -1,   512,   513,   514,
     515,   516,   517,    -1,    -1,   520,   521,    -1,   523,   524,
     525,   526,   527,   528,    -1,    -1,   531,   532,   533,   534,
      -1,   536,   537,    -1,    -1,   540,   541,   542,   543,    -1,
     545,   546,   547,    -1,   549,   550,   551,   552,    -1,    -1,
      -1,    -1,    -1,   558,   559,    -1,    -1,    -1,   563,   564,
     565,   566,    -1,   568,   569,    -1,   571,   572,    -1,   574,
     575,    -1,    -1,   578,    -1,    -1,   581,    -1,   583,    -1,
     585,   586,    -1,    -1,    -1,    -1,    -1,    -1,   593,    -1,
      -1,   596,    -1,    -1,    -1,   600,   601,   602,   603,   604,
      -1,    -1,    -1,    -1,    -1,    -1,   611,   612,    -1,   614,
     615,   616,    -1,     5,   619,     7,     8,     9,    10,    11,
      12,    -1,    14,    -1,    -1,    -1,    18,    -1,    -1,    21,
      -1,    23,    24,    25,    26,    27,    28,    -1,    30,    -1,
      -1,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    41,
      42,    43,    -1,    45,    -1,    47,    48,    -1,    -1,    51,
      -1,    -1,    54,    55,    -1,    57,    58,    -1,    60,    -1,
      62,    63,    64,    65,    66,    67,    -1,    69,    70,    -1,
      72,    73,    74,    75,    76,    77,    78,    79,    80,    -1,
      82,    83,    -1,    85,    86,    87,    88,    89,    -1,    -1,
      -1,    93,    -1,    -1,    96,    -1,    98,    -1,    -1,   101,
      -1,    -1,    -1,   105,   106,   107,    -1,    -1,   110,    -1,
      -1,    -1,    -1,   115,   116,    -1,    -1,    -1,    -1,   121,
     122,    -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,
     132,   133,   134,    -1,    -1,    -1,   138,    -1,    -1,   141,
     142,   143,    -1,    -1,    -1,   147,    -1,   149,   150,    -1,
     152,   153,   154,    -1,    -1,   157,   158,    -1,   160,   161,
     162,   163,   164,   165,    -1,    -1,   168,   169,   170,   171,
     172,    -1,    -1,   175,   176,    -1,   178,   179,   180,    -1,
      -1,   183,    -1,    -1,    -1,   187,   188,    -1,   190,    -1,
     192,    -1,   194,   195,   196,   197,    -1,   199,    -1,   201,
      -1,    -1,    -1,   205,   206,    -1,   208,    -1,    -1,   211,
     212,    -1,    -1,    -1,   216,   217,   218,   219,    -1,    -1,
     222,   223,   224,    -1,    -1,   227,    -1,    -1,    -1,    -1,
     232,   233,    -1,    -1,    -1,   237,    -1,    -1,    -1,   241,
     242,    -1,   244,   245,    -1,    -1,    -1,   249,    -1,    -1,
     252,   253,    -1,    -1,   256,    -1,    -1,   259,   260,   261,
      -1,    -1,    -1,    -1,   266,   267,    -1,   269,    -1,   271,
      -1,   273,   274,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     282,    -1,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,    -1,
     302,   303,   304,    -1,   306,   307,   308,   309,    -1,   311,
     312,    -1,    -1,    -1,    -1,   317,   318,   319,   320,   321,
     322,    -1,    -1,   325,   326,    -1,   328,    -1,   330,    -1,
     332,   333,   334,   335,   336,   337,   338,   339,   340,    -1,
      -1,   343,   344,    -1,    -1,   347,   348,   349,   350,    -1,
      -1,    -1,   354,   355,    -1,    -1,    -1,   359,    -1,   361,
     362,   363,    -1,   365,   366,   367,    -1,   369,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   379,   380,   381,
      -1,   383,   384,    -1,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,    -1,    -1,   398,   399,   400,    -1,
     402,    -1,   404,   405,   406,   407,   408,    -1,   410,   411,
     412,    -1,    -1,   415,    -1,    -1,    -1,   419,   420,   421,
     422,   423,    -1,    -1,   426,   427,   428,   429,   430,    -1,
     432,   433,    -1,   435,   436,   437,    -1,    -1,   440,    -1,
     442,    -1,   444,   445,    -1,   447,   448,   449,    -1,   451,
      -1,    -1,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,   467,    -1,    -1,    -1,   471,
     472,   473,   474,    -1,    -1,    -1,   478,    -1,    -1,    -1,
     482,    -1,   484,   485,   486,   487,    -1,   489,   490,   491,
     492,   493,    -1,    -1,    -1,    -1,    -1,   499,   500,   501,
      -1,   503,   504,    -1,   506,    -1,    -1,   509,    -1,    -1,
     512,   513,   514,   515,   516,   517,    -1,    -1,   520,   521,
      -1,   523,   524,   525,   526,   527,   528,    -1,    -1,   531,
     532,   533,   534,    -1,   536,   537,    -1,    -1,   540,   541,
     542,   543,    -1,   545,   546,   547,    -1,   549,   550,   551,
     552,    -1,    -1,    -1,    -1,    -1,   558,   559,    -1,    -1,
      -1,   563,   564,   565,   566,    -1,   568,   569,    -1,   571,
     572,    -1,   574,   575,    -1,    -1,   578,    -1,    -1,   581,
      -1,   583,    -1,   585,   586,    -1,    -1,    -1,    -1,    -1,
      -1,   593,    -1,    -1,   596,    -1,    -1,    -1,   600,   601,
     602,   603,   604,    -1,    -1,    -1,    -1,    -1,    -1,   611,
     612,    -1,   614,   615,   616,    -1,     5,   619,     7,     8,
       9,    10,    11,    -1,    -1,    14,    -1,    -1,    -1,    18,
      -1,    -1,    21,    -1,    23,    24,    25,    26,    27,    28,
      -1,    30,    -1,    -1,    -1,    34,    35,    -1,    -1,    38,
      -1,    -1,    41,    42,    43,    -1,    45,    -1,    47,    48,
      -1,    -1,    51,    -1,    -1,    54,    55,    -1,    57,    58,
      -1,    60,    -1,    62,    63,    64,    65,    66,    67,    -1,
      69,    70,    -1,    72,    73,    74,    75,    76,    77,    78,
      79,    80,    -1,    82,    83,    -1,    85,    86,    87,    88,
      89,    -1,    -1,    -1,    93,    -1,    -1,    96,    -1,    98,
      -1,    -1,   101,    -1,    -1,    -1,   105,   106,   107,    -1,
      -1,   110,    -1,    -1,    -1,    -1,   115,   116,    -1,    -1,
      -1,    -1,   121,   122,    -1,   124,    -1,    -1,    -1,   128,
      -1,   130,   131,   132,   133,   134,    -1,    -1,    -1,   138,
      -1,    -1,   141,   142,   143,    -1,    -1,    -1,   147,    -1,
     149,   150,    -1,   152,   153,   154,    -1,    -1,   157,   158,
      -1,   160,   161,   162,   163,   164,   165,    -1,    -1,   168,
     169,   170,   171,   172,    -1,    -1,   175,   176,    -1,   178,
     179,   180,    -1,    -1,   183,    -1,    -1,    -1,   187,   188,
      -1,   190,    -1,   192,    -1,   194,   195,   196,   197,    -1,
     199,    -1,   201,    -1,    -1,    -1,   205,   206,    -1,   208,
     209,    -1,   211,   212,    -1,    -1,    -1,   216,   217,   218,
     219,    -1,    -1,   222,   223,   224,    -1,    -1,   227,    -1,
      -1,    -1,    -1,   232,   233,    -1,    -1,    -1,   237,    -1,
      -1,    -1,   241,   242,    -1,   244,   245,    -1,    -1,    -1,
     249,    -1,    -1,   252,   253,    -1,    -1,   256,    -1,    -1,
     259,   260,    -1,    -1,    -1,    -1,    -1,   266,   267,    -1,
     269,    -1,   271,    -1,   273,   274,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   282,    -1,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,    -1,   302,   303,   304,    -1,   306,   307,   308,
     309,    -1,   311,   312,    -1,    -1,    -1,    -1,   317,   318,
     319,   320,   321,   322,    -1,    -1,   325,   326,    -1,   328,
      -1,   330,    -1,   332,   333,   334,   335,   336,   337,   338,
     339,   340,    -1,    -1,   343,   344,    -1,    -1,   347,   348,
     349,   350,    -1,    -1,    -1,   354,   355,    -1,    -1,    -1,
     359,    -1,   361,   362,   363,    -1,   365,   366,   367,    -1,
     369,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     379,   380,   381,    -1,   383,   384,    -1,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,    -1,    -1,   398,
     399,   400,    -1,   402,    -1,   404,   405,   406,   407,   408,
      -1,   410,   411,   412,    -1,    -1,   415,    -1,    -1,    -1,
     419,   420,   421,   422,   423,    -1,    -1,   426,   427,   428,
     429,   430,    -1,   432,   433,    -1,   435,   436,   437,    -1,
      -1,   440,    -1,   442,    -1,   444,   445,    -1,   447,   448,
     449,    -1,   451,    -1,    -1,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,   467,    -1,
      -1,    -1,   471,   472,   473,   474,    -1,    -1,    -1,   478,
      -1,    -1,    -1,   482,    -1,   484,   485,   486,   487,    -1,
     489,   490,   491,   492,   493,    -1,    -1,    -1,    -1,    -1,
     499,   500,   501,    -1,   503,   504,    -1,   506,    -1,    -1,
     509,    -1,    -1,   512,   513,   514,   515,   516,   517,    -1,
      -1,   520,   521,    -1,   523,   524,   525,   526,   527,   528,
      -1,    -1,   531,   532,   533,   534,    -1,   536,   537,    -1,
      -1,   540,   541,   542,   543,    -1,   545,   546,   547,    -1,
     549,   550,   551,   552,    -1,    -1,    -1,    -1,    -1,   558,
     559,    -1,    -1,    -1,   563,   564,   565,   566,    -1,   568,
     569,    -1,   571,   572,    -1,   574,   575,    -1,    -1,   578,
      -1,    -1,   581,    -1,   583,    -1,   585,   586,    -1,    -1,
      -1,    -1,    -1,    -1,   593,    -1,    -1,   596,    -1,    -1,
      -1,   600,   601,   602,   603,   604,    -1,    -1,    -1,    -1,
      -1,    -1,   611,   612,    -1,   614,   615,   616,    -1,     5,
     619,     7,     8,     9,    10,    11,    -1,    -1,    14,    -1,
      -1,    -1,    18,    -1,    -1,    21,    -1,    23,    24,    25,
      26,    27,    28,    -1,    30,    -1,    -1,    -1,    34,    -1,
      -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,    45,
      -1,    47,    48,    -1,    -1,    51,    -1,    -1,    54,    55,
      -1,    57,    58,    -1,    60,    -1,    62,    63,    64,    65,
      66,    67,    -1,    69,    70,    -1,    72,    73,    74,    75,
      76,    77,    78,    79,    80,    -1,    82,    83,    -1,    85,
      86,    87,    88,    89,    -1,    -1,    -1,    93,    -1,    -1,
      96,    -1,    98,    -1,    -1,   101,    -1,    -1,    -1,   105,
     106,   107,    -1,    -1,   110,    -1,    -1,    -1,    -1,   115,
     116,    -1,    -1,    -1,   120,   121,   122,    -1,   124,    -1,
      -1,    -1,   128,    -1,   130,   131,   132,   133,   134,    -1,
      -1,    -1,   138,    -1,    -1,   141,   142,   143,    -1,    -1,
      -1,   147,    -1,   149,   150,    -1,   152,   153,   154,    -1,
      -1,   157,   158,    -1,   160,   161,   162,   163,   164,   165,
      -1,    -1,   168,   169,   170,   171,   172,    -1,    -1,   175,
     176,    -1,   178,   179,   180,    -1,    -1,   183,    -1,    -1,
      -1,   187,   188,    -1,   190,    -1,   192,    -1,   194,   195,
     196,   197,    -1,   199,    -1,   201,    -1,    -1,    -1,   205,
     206,    -1,   208,    -1,    -1,   211,   212,    -1,    -1,    -1,
     216,   217,   218,   219,    -1,    -1,   222,   223,   224,    -1,
      -1,   227,    -1,    -1,    -1,    -1,   232,   233,    -1,    -1,
      -1,   237,    -1,    -1,    -1,   241,   242,    -1,   244,   245,
      -1,    -1,    -1,   249,    -1,    -1,   252,   253,    -1,    -1,
     256,    -1,    -1,   259,   260,   261,    -1,    -1,    -1,    -1,
     266,   267,    -1,   269,    -1,   271,    -1,   273,   274,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   282,    -1,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,    -1,   302,   303,   304,    -1,
     306,   307,   308,   309,    -1,   311,   312,    -1,    -1,    -1,
      -1,   317,   318,   319,   320,   321,   322,    -1,    -1,   325,
     326,    -1,   328,    -1,   330,    -1,   332,   333,   334,   335,
     336,   337,   338,   339,   340,    -1,    -1,   343,   344,    -1,
      -1,   347,   348,   349,   350,    -1,    -1,    -1,   354,   355,
      -1,    -1,    -1,   359,    -1,   361,   362,   363,    -1,   365,
     366,   367,    -1,   369,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   379,   380,   381,    -1,   383,   384,    -1,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
      -1,    -1,   398,   399,   400,    -1,   402,    -1,   404,   405,
     406,   407,   408,    -1,   410,   411,   412,    -1,    -1,   415,
      -1,    -1,    -1,   419,   420,   421,   422,   423,    -1,    -1,
     426,   427,   428,   429,   430,    -1,   432,   433,    -1,   435,
     436,   437,    -1,    -1,   440,    -1,   442,    -1,   444,   445,
      -1,   447,   448,   449,    -1,   451,    -1,    -1,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,   467,    -1,    -1,    -1,   471,   472,   473,   474,    -1,
      -1,    -1,   478,    -1,    -1,    -1,   482,    -1,   484,   485,
     486,   487,    -1,   489,   490,   491,   492,   493,    -1,    -1,
      -1,    -1,    -1,   499,   500,   501,    -1,   503,   504,    -1,
     506,    -1,    -1,   509,    -1,    -1,   512,   513,   514,   515,
     516,   517,    -1,    -1,   520,   521,    -1,   523,   524,   525,
     526,   527,   528,    -1,    -1,   531,   532,   533,   534,    -1,
     536,   537,    -1,    -1,   540,   541,   542,   543,    -1,   545,
     546,   547,    -1,   549,   550,   551,   552,    -1,    -1,    -1,
      -1,    -1,   558,   559,    -1,    -1,    -1,   563,   564,   565,
     566,    -1,   568,   569,    -1,   571,   572,    -1,   574,   575,
      -1,    -1,   578,    -1,    -1,   581,    -1,   583,    -1,   585,
     586,    -1,    -1,    -1,    -1,    -1,    -1,   593,    -1,    -1,
     596,    -1,    -1,    -1,   600,   601,   602,   603,   604,    -1,
      -1,    -1,    -1,    -1,    -1,   611,   612,    -1,   614,   615,
     616,    -1,     5,   619,     7,     8,     9,    10,    11,    -1,
      -1,    14,    -1,    -1,    -1,    18,    -1,    -1,    21,    -1,
      23,    24,    25,    26,    27,    28,    -1,    30,    -1,    -1,
      33,    34,    -1,    -1,    -1,    38,    -1,    -1,    41,    42,
      43,    -1,    45,    -1,    47,    48,    -1,    -1,    51,    -1,
      -1,    54,    55,    -1,    57,    58,    -1,    60,    -1,    62,
      63,    64,    65,    66,    67,    -1,    69,    70,    -1,    72,
      73,    74,    75,    76,    77,    78,    79,    80,    -1,    82,
      83,    -1,    85,    86,    87,    88,    89,    -1,    -1,    -1,
      93,    -1,    -1,    96,    -1,    98,    -1,    -1,   101,    -1,
      -1,    -1,   105,   106,   107,    -1,    -1,   110,    -1,    -1,
      -1,    -1,   115,   116,    -1,    -1,    -1,    -1,   121,   122,
      -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,
     133,   134,    -1,    -1,    -1,   138,    -1,    -1,   141,   142,
     143,    -1,    -1,    -1,   147,    -1,   149,   150,    -1,   152,
     153,   154,    -1,    -1,   157,   158,    -1,   160,   161,   162,
     163,   164,   165,    -1,    -1,   168,   169,   170,   171,   172,
      -1,    -1,   175,   176,    -1,   178,   179,   180,    -1,    -1,
     183,    -1,    -1,    -1,   187,   188,    -1,   190,    -1,   192,
      -1,   194,   195,   196,   197,    -1,   199,    -1,   201,    -1,
      -1,    -1,   205,   206,    -1,   208,    -1,    -1,   211,   212,
      -1,    -1,    -1,   216,   217,   218,   219,    -1,    -1,   222,
     223,   224,    -1,    -1,   227,    -1,    -1,    -1,    -1,   232,
     233,    -1,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,
      -1,   244,   245,    -1,    -1,    -1,   249,    -1,    -1,   252,
     253,    -1,    -1,   256,    -1,    -1,   259,   260,   261,    -1,
      -1,    -1,    -1,   266,   267,    -1,   269,    -1,   271,    -1,
     273,   274,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   282,
      -1,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,    -1,   302,
     303,   304,    -1,   306,   307,   308,   309,    -1,   311,   312,
      -1,    -1,    -1,    -1,   317,   318,   319,   320,   321,   322,
      -1,    -1,   325,   326,    -1,   328,    -1,   330,    -1,   332,
     333,   334,   335,   336,   337,   338,   339,   340,    -1,    -1,
     343,   344,    -1,    -1,   347,   348,   349,   350,    -1,    -1,
      -1,   354,   355,    -1,    -1,    -1,   359,    -1,   361,   362,
     363,    -1,   365,   366,   367,    -1,   369,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   379,   380,   381,    -1,
     383,   384,    -1,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,    -1,    -1,   398,   399,   400,    -1,   402,
      -1,   404,   405,   406,   407,   408,    -1,   410,   411,   412,
      -1,    -1,   415,    -1,    -1,    -1,   419,   420,   421,   422,
     423,    -1,    -1,   426,   427,   428,   429,   430,    -1,   432,
     433,    -1,   435,   436,   437,    -1,    -1,   440,    -1,   442,
      -1,   444,   445,    -1,   447,   448,   449,    -1,   451,    -1,
      -1,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,   467,    -1,    -1,    -1,   471,   472,
     473,   474,    -1,    -1,    -1,   478,    -1,    -1,    -1,   482,
      -1,   484,   485,   486,   487,    -1,   489,   490,   491,   492,
     493,    -1,    -1,    -1,    -1,    -1,   499,   500,   501,    -1,
     503,   504,    -1,   506,    -1,    -1,   509,    -1,    -1,   512,
     513,   514,   515,   516,   517,    -1,    -1,   520,   521,    -1,
     523,   524,   525,   526,   527,   528,    -1,    -1,   531,   532,
     533,   534,    -1,   536,   537,    -1,    -1,   540,   541,   542,
     543,    -1,   545,   546,   547,    -1,   549,   550,   551,   552,
      -1,    -1,    -1,    -1,    -1,   558,   559,    -1,    -1,    -1,
     563,   564,   565,   566,    -1,   568,   569,    -1,   571,   572,
      -1,   574,   575,    -1,    -1,   578,    -1,    -1,   581,    -1,
     583,    -1,   585,   586,    -1,    -1,    -1,    -1,    -1,    -1,
     593,    -1,    -1,   596,    -1,    -1,    -1,   600,   601,   602,
     603,   604,    -1,    -1,    -1,    -1,    -1,    -1,   611,   612,
      -1,   614,   615,   616,    -1,     5,   619,     7,     8,     9,
      10,    11,    -1,    -1,    14,    -1,    -1,    -1,    18,    -1,
      -1,    21,    -1,    23,    24,    25,    26,    27,    28,    -1,
      30,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,    -1,
      -1,    41,    42,    43,    -1,    45,    -1,    47,    48,    -1,
      -1,    51,    -1,    -1,    54,    55,    -1,    57,    58,    -1,
      60,    -1,    62,    63,    64,    65,    66,    67,    -1,    69,
      70,    -1,    72,    73,    74,    75,    76,    77,    78,    79,
      80,    -1,    82,    83,    -1,    85,    86,    87,    88,    89,
      -1,    -1,    -1,    93,    -1,    -1,    96,    -1,    98,    -1,
      -1,   101,    -1,    -1,    -1,   105,   106,   107,    -1,    -1,
     110,    -1,    -1,    -1,    -1,   115,   116,    -1,    -1,    -1,
      -1,   121,   122,    -1,   124,    -1,    -1,    -1,   128,    -1,
     130,   131,   132,   133,   134,    -1,    -1,    -1,   138,    -1,
      -1,   141,   142,   143,    -1,    -1,    -1,   147,    -1,   149,
     150,    -1,   152,   153,   154,    -1,    -1,   157,   158,    -1,
     160,   161,   162,   163,   164,   165,    -1,    -1,   168,   169,
     170,   171,   172,    -1,    -1,   175,   176,    -1,   178,   179,
     180,    -1,    -1,   183,    -1,    -1,    -1,   187,   188,    -1,
     190,    -1,   192,    -1,   194,   195,   196,   197,    -1,   199,
      -1,   201,    -1,    -1,    -1,   205,   206,    -1,   208,    -1,
      -1,   211,   212,    -1,    -1,    -1,   216,   217,   218,   219,
      -1,    -1,   222,   223,   224,    -1,    -1,   227,    -1,    -1,
      -1,    -1,   232,   233,    -1,    -1,    -1,   237,    -1,    -1,
      -1,   241,   242,    -1,   244,   245,    -1,    -1,    -1,   249,
      -1,    -1,   252,   253,    -1,    -1,   256,    -1,    -1,   259,
     260,   261,    -1,    -1,    -1,    -1,   266,   267,    -1,   269,
      -1,   271,    -1,   273,   274,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   282,    -1,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,    -1,   302,   303,   304,    -1,   306,   307,   308,   309,
      -1,   311,   312,    -1,    -1,    -1,    -1,   317,   318,   319,
     320,   321,   322,    -1,    -1,   325,   326,    -1,   328,    -1,
     330,    -1,   332,   333,   334,   335,   336,   337,   338,   339,
     340,    -1,    -1,   343,   344,    -1,    -1,   347,   348,   349,
     350,    -1,    -1,    -1,   354,   355,    -1,    -1,    -1,   359,
      -1,   361,   362,   363,    -1,   365,   366,   367,    -1,   369,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   379,
     380,   381,    -1,   383,   384,    -1,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,    -1,    -1,   398,   399,
     400,    -1,   402,    -1,   404,   405,   406,   407,   408,    -1,
     410,   411,   412,    -1,    -1,   415,    -1,    -1,    -1,   419,
     420,   421,   422,   423,    -1,    -1,   426,   427,   428,   429,
     430,    -1,   432,   433,    -1,   435,   436,   437,    -1,    -1,
     440,    -1,   442,    -1,   444,   445,    -1,   447,   448,   449,
      -1,   451,    -1,    -1,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,   467,    -1,    -1,
      -1,   471,   472,   473,   474,    -1,    -1,    -1,   478,    -1,
      -1,    -1,   482,    -1,   484,   485,   486,   487,    -1,   489,
     490,   491,   492,   493,    -1,    -1,    -1,    -1,    -1,   499,
     500,   501,    -1,   503,   504,    -1,   506,    -1,    -1,   509,
      -1,    -1,   512,   513,   514,   515,   516,   517,    -1,    -1,
     520,   521,    -1,   523,   524,   525,   526,   527,   528,    -1,
      -1,   531,   532,   533,   534,    -1,   536,   537,    -1,    -1,
     540,   541,   542,   543,    -1,   545,   546,   547,    -1,   549,
     550,   551,   552,    -1,    -1,    -1,    -1,    -1,   558,   559,
      -1,    -1,    -1,   563,   564,   565,   566,    -1,   568,   569,
      -1,   571,   572,    -1,   574,   575,    -1,    -1,   578,    -1,
      -1,   581,    -1,   583,    -1,   585,   586,    -1,    -1,    -1,
      -1,    -1,    -1,   593,    -1,    -1,   596,    -1,    -1,    -1,
     600,   601,   602,   603,   604,    -1,    -1,    -1,    -1,    -1,
      -1,   611,   612,    -1,   614,   615,   616,    -1,     5,   619,
       7,     8,     9,    10,    11,    -1,    -1,    14,    -1,    -1,
      -1,    18,    19,    -1,    21,    -1,    23,    24,    25,    26,
      27,    28,    -1,    30,    -1,    -1,    -1,    34,    -1,    -1,
      -1,    38,    -1,    -1,    41,    42,    43,    -1,    45,    -1,
      47,    48,    -1,    -1,    51,    -1,    -1,    54,    55,    -1,
      57,    58,    -1,    60,    -1,    62,    63,    64,    65,    66,
      67,    -1,    69,    70,    -1,    72,    73,    74,    75,    76,
      77,    78,    79,    80,    -1,    82,    83,    -1,    85,    86,
      87,    88,    89,    -1,    -1,    -1,    93,    -1,    -1,    96,
      -1,    98,    -1,    -1,   101,    -1,    -1,    -1,   105,   106,
     107,    -1,    -1,   110,    -1,    -1,    -1,    -1,   115,   116,
      -1,    -1,    -1,    -1,   121,   122,    -1,   124,    -1,    -1,
      -1,   128,    -1,   130,   131,   132,   133,   134,    -1,    -1,
      -1,   138,    -1,    -1,   141,   142,   143,    -1,    -1,    -1,
     147,    -1,   149,   150,    -1,   152,   153,   154,    -1,    -1,
     157,   158,    -1,   160,   161,   162,   163,   164,   165,    -1,
      -1,   168,   169,   170,   171,   172,    -1,    -1,   175,   176,
      -1,   178,   179,   180,    -1,    -1,   183,    -1,    -1,    -1,
     187,   188,    -1,   190,    -1,   192,    -1,   194,   195,   196,
     197,    -1,   199,    -1,   201,    -1,    -1,    -1,   205,   206,
      -1,   208,    -1,    -1,   211,   212,    -1,    -1,    -1,   216,
     217,   218,   219,    -1,    -1,   222,   223,   224,    -1,    -1,
     227,    -1,    -1,    -1,    -1,   232,   233,    -1,    -1,    -1,
     237,    -1,    -1,    -1,   241,   242,    -1,   244,   245,    -1,
      -1,    -1,   249,    -1,    -1,   252,   253,    -1,    -1,   256,
      -1,    -1,   259,   260,    -1,    -1,    -1,    -1,    -1,   266,
     267,    -1,   269,    -1,   271,    -1,   273,   274,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   282,    -1,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,    -1,   302,   303,   304,    -1,   306,
     307,   308,   309,    -1,   311,   312,    -1,    -1,    -1,    -1,
     317,   318,   319,   320,   321,   322,    -1,    -1,   325,   326,
      -1,   328,    -1,   330,    -1,   332,   333,   334,   335,   336,
     337,   338,   339,   340,    -1,    -1,   343,   344,    -1,    -1,
     347,   348,   349,   350,    -1,    -1,    -1,   354,   355,    -1,
      -1,    -1,   359,    -1,   361,   362,   363,    -1,   365,   366,
     367,    -1,   369,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   379,   380,   381,    -1,   383,   384,    -1,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,    -1,
      -1,   398,   399,   400,    -1,   402,    -1,   404,   405,   406,
     407,   408,    -1,   410,   411,   412,    -1,    -1,   415,    -1,
      -1,    -1,   419,   420,   421,   422,   423,    -1,    -1,   426,
     427,   428,   429,   430,    -1,   432,   433,    -1,   435,   436,
     437,    -1,    -1,   440,    -1,   442,    -1,   444,   445,    -1,
     447,   448,   449,    -1,   451,    -1,    -1,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
     467,    -1,    -1,    -1,   471,   472,   473,   474,    -1,    -1,
      -1,   478,    -1,    -1,    -1,   482,    -1,   484,   485,   486,
     487,    -1,   489,   490,   491,   492,   493,    -1,    -1,    -1,
      -1,    -1,   499,   500,   501,    -1,   503,   504,    -1,   506,
      -1,    -1,   509,    -1,    -1,   512,   513,   514,   515,   516,
     517,    -1,    -1,   520,   521,    -1,   523,   524,   525,   526,
     527,   528,    -1,    -1,   531,   532,   533,   534,    -1,   536,
     537,    -1,    -1,   540,   541,   542,   543,    -1,   545,   546,
     547,    -1,   549,   550,   551,   552,    -1,    -1,    -1,    -1,
      -1,   558,   559,    -1,    -1,    -1,   563,   564,   565,   566,
      -1,   568,   569,    -1,   571,   572,    -1,   574,   575,    -1,
      -1,   578,    -1,    -1,   581,    -1,   583,    -1,   585,   586,
      -1,    -1,    -1,    -1,    -1,    -1,   593,    -1,    -1,   596,
      -1,    -1,    -1,   600,   601,   602,   603,   604,    -1,    -1,
      -1,    -1,    -1,    -1,   611,   612,    -1,   614,   615,   616,
      -1,     5,   619,     7,     8,     9,    10,    11,    -1,    -1,
      14,    -1,    -1,    -1,    18,    -1,    -1,    21,    -1,    23,
      24,    25,    26,    27,    28,    -1,    30,    -1,    -1,    -1,
      34,    -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,
      -1,    45,    -1,    47,    48,    -1,    -1,    51,    -1,    -1,
      54,    55,    -1,    57,    58,    -1,    60,    -1,    62,    63,
      64,    65,    66,    67,    -1,    69,    70,    -1,    72,    73,
      74,    75,    76,    77,    78,    79,    80,    -1,    82,    83,
      -1,    85,    86,    87,    88,    89,    90,    -1,    -1,    93,
      -1,    -1,    96,    -1,    98,    -1,    -1,   101,    -1,    -1,
      -1,   105,   106,   107,    -1,    -1,   110,    -1,    -1,    -1,
      -1,   115,   116,    -1,    -1,    -1,    -1,   121,   122,    -1,
     124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,
     134,    -1,    -1,    -1,   138,    -1,    -1,   141,   142,   143,
      -1,    -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,
     154,    -1,    -1,   157,   158,    -1,   160,   161,   162,   163,
     164,   165,    -1,   167,   168,   169,   170,   171,   172,    -1,
      -1,   175,   176,    -1,   178,   179,   180,    -1,    -1,   183,
      -1,    -1,    -1,   187,   188,    -1,   190,    -1,   192,    -1,
     194,   195,   196,   197,    -1,   199,    -1,   201,    -1,    -1,
      -1,   205,   206,    -1,   208,    -1,    -1,   211,   212,    -1,
      -1,    -1,   216,   217,   218,   219,    -1,    -1,   222,   223,
     224,    -1,    -1,   227,    -1,    -1,    -1,    -1,   232,   233,
      -1,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,    -1,
     244,   245,    -1,    -1,    -1,   249,    -1,    -1,   252,   253,
      -1,    -1,   256,    -1,    -1,   259,   260,    -1,    -1,    -1,
      -1,    -1,   266,   267,    -1,   269,    -1,   271,    -1,   273,
     274,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   282,    -1,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,    -1,   302,   303,
     304,    -1,   306,   307,   308,   309,    -1,   311,   312,    -1,
      -1,    -1,    -1,   317,   318,   319,   320,   321,   322,    -1,
      -1,   325,   326,    -1,   328,    -1,   330,    -1,   332,   333,
     334,   335,   336,   337,   338,   339,   340,    -1,    -1,   343,
     344,    -1,    -1,   347,   348,   349,   350,    -1,    -1,    -1,
     354,   355,    -1,    -1,    -1,   359,    -1,   361,   362,   363,
      -1,   365,   366,   367,    -1,   369,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   379,   380,   381,    -1,   383,
     384,    -1,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,    -1,    -1,   398,   399,   400,    -1,   402,    -1,
     404,   405,   406,   407,   408,    -1,   410,   411,   412,    -1,
      -1,   415,    -1,    -1,    -1,   419,   420,   421,   422,   423,
      -1,    -1,   426,   427,   428,   429,   430,    -1,   432,   433,
      -1,   435,   436,   437,    -1,    -1,   440,    -1,   442,    -1,
     444,   445,    -1,   447,   448,   449,    -1,   451,    -1,    -1,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,   467,    -1,    -1,    -1,   471,   472,   473,
     474,    -1,    -1,    -1,   478,    -1,    -1,    -1,   482,    -1,
     484,   485,   486,   487,    -1,   489,   490,   491,   492,   493,
      -1,    -1,    -1,    -1,    -1,   499,   500,   501,    -1,   503,
     504,    -1,   506,    -1,    -1,   509,    -1,    -1,   512,   513,
     514,   515,   516,   517,    -1,    -1,   520,   521,    -1,   523,
     524,   525,   526,   527,   528,    -1,    -1,   531,   532,   533,
     534,    -1,   536,   537,    -1,    -1,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,   549,   550,   551,   552,    -1,
      -1,    -1,    -1,    -1,   558,   559,    -1,    -1,    -1,   563,
     564,   565,   566,    -1,   568,   569,    -1,   571,   572,    -1,
     574,   575,    -1,    -1,   578,    -1,    -1,   581,    -1,   583,
      -1,   585,   586,    -1,    -1,    -1,    -1,    -1,    -1,   593,
      -1,    -1,   596,    -1,    -1,    -1,   600,   601,   602,   603,
     604,    -1,    -1,    -1,    -1,    -1,    -1,   611,   612,    -1,
     614,   615,   616,    -1,     5,   619,     7,     8,     9,    10,
      11,    -1,    -1,    14,    -1,    -1,    -1,    18,    -1,    -1,
      21,    -1,    23,    24,    25,    26,    27,    28,    -1,    30,
      -1,    -1,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,
      41,    42,    43,    -1,    45,    -1,    47,    48,    -1,    -1,
      51,    -1,    -1,    54,    55,    -1,    57,    58,    -1,    60,
      -1,    62,    63,    64,    65,    66,    67,    -1,    69,    70,
      -1,    72,    73,    74,    75,    76,    77,    78,    79,    80,
      -1,    82,    83,    -1,    85,    86,    87,    88,    89,    -1,
      -1,    -1,    93,    -1,    -1,    96,    -1,    98,    -1,    -1,
     101,    -1,    -1,    -1,   105,   106,   107,    -1,    -1,   110,
      -1,    -1,    -1,    -1,   115,   116,    -1,    -1,    -1,    -1,
     121,   122,    -1,   124,    -1,    -1,    -1,   128,    -1,   130,
     131,   132,   133,   134,    -1,    -1,    -1,   138,    -1,    -1,
     141,   142,   143,    -1,    -1,    -1,   147,    -1,   149,   150,
      -1,   152,   153,   154,    -1,    -1,   157,   158,    -1,   160,
     161,   162,   163,   164,   165,    -1,    -1,   168,   169,   170,
     171,   172,    -1,    -1,   175,   176,    -1,   178,   179,   180,
      -1,    -1,   183,    -1,    -1,    -1,   187,   188,    -1,   190,
      -1,   192,    -1,   194,   195,   196,   197,    -1,   199,    -1,
     201,    -1,    -1,    -1,   205,   206,    -1,   208,    -1,    -1,
     211,   212,    -1,    -1,    -1,   216,   217,   218,   219,    -1,
      -1,   222,   223,   224,    -1,    -1,   227,    -1,    -1,    -1,
      -1,   232,   233,    -1,    -1,    -1,   237,    -1,    -1,    -1,
     241,   242,    -1,   244,   245,    -1,    -1,    -1,   249,    -1,
      -1,   252,   253,    -1,    -1,   256,    -1,    -1,   259,   260,
      -1,    -1,    -1,    -1,    -1,   266,   267,    -1,   269,    -1,
     271,    -1,   273,   274,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   282,    -1,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
      -1,   302,   303,   304,    -1,   306,   307,   308,   309,    -1,
     311,   312,    -1,    -1,    -1,    -1,   317,   318,   319,   320,
     321,   322,    -1,    -1,   325,   326,    -1,   328,    -1,   330,
      -1,   332,   333,   334,   335,   336,   337,   338,   339,   340,
      -1,    -1,   343,   344,    -1,    -1,   347,   348,   349,   350,
      -1,    -1,    -1,   354,   355,    -1,    -1,    -1,   359,    -1,
     361,   362,   363,    -1,   365,   366,   367,    -1,   369,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   379,   380,
     381,    -1,   383,   384,    -1,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,    -1,    -1,   398,   399,   400,
      -1,   402,    -1,   404,   405,   406,   407,   408,    -1,   410,
     411,   412,    -1,    -1,   415,    -1,    -1,    -1,   419,   420,
     421,   422,   423,    -1,    -1,   426,   427,   428,   429,   430,
      -1,   432,   433,    -1,   435,   436,   437,    -1,    -1,   440,
      -1,   442,    -1,   444,   445,    -1,   447,   448,   449,    -1,
     451,    -1,    -1,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,   467,    -1,    -1,    -1,
     471,   472,   473,   474,    -1,    -1,    -1,   478,    -1,    -1,
      -1,   482,    -1,   484,   485,   486,   487,    -1,   489,   490,
     491,   492,   493,    -1,    -1,    -1,   497,    -1,   499,   500,
     501,    -1,   503,   504,    -1,   506,    -1,    -1,   509,    -1,
      -1,   512,   513,   514,   515,   516,   517,    -1,    -1,   520,
     521,    -1,   523,   524,   525,   526,   527,   528,    -1,    -1,
     531,   532,   533,   534,    -1,   536,   537,    -1,    -1,   540,
     541,   542,   543,    -1,    -1,   546,   547,    -1,   549,   550,
     551,   552,    -1,    -1,    -1,    -1,    -1,   558,   559,    -1,
      -1,    -1,   563,   564,   565,   566,    -1,   568,   569,    -1,
     571,   572,    -1,   574,   575,    -1,    -1,   578,    -1,    -1,
     581,    -1,   583,    -1,   585,   586,    -1,    -1,    -1,    -1,
      -1,    -1,   593,    -1,    -1,   596,    -1,    -1,    -1,   600,
     601,   602,   603,   604,    -1,    -1,    -1,    -1,    -1,    -1,
     611,   612,    -1,   614,   615,   616,    -1,     5,   619,     7,
       8,     9,    10,    11,    -1,    -1,    14,    -1,    -1,    -1,
      18,    -1,    -1,    21,    -1,    23,    24,    25,    26,    27,
      28,    -1,    30,    -1,    -1,    -1,    34,    -1,    -1,    -1,
      38,    -1,    -1,    41,    42,    43,    -1,    45,    -1,    47,
      48,    -1,    -1,    51,    -1,    -1,    54,    55,    -1,    57,
      58,    -1,    60,    -1,    62,    63,    64,    65,    66,    67,
      -1,    69,    70,    -1,    72,    73,    74,    75,    76,    77,
      78,    79,    80,    -1,    82,    83,    -1,    85,    86,    87,
      88,    89,    -1,    -1,    -1,    93,    -1,    -1,    96,    -1,
      98,    -1,    -1,   101,    -1,    -1,    -1,   105,   106,   107,
      -1,    -1,   110,    -1,    -1,    -1,    -1,   115,   116,    -1,
      -1,    -1,    -1,   121,   122,    -1,   124,    -1,    -1,    -1,
     128,    -1,   130,   131,   132,   133,   134,    -1,    -1,    -1,
     138,    -1,    -1,   141,   142,   143,    -1,    -1,    -1,   147,
      -1,   149,   150,    -1,   152,   153,   154,    -1,    -1,   157,
     158,    -1,   160,   161,   162,   163,   164,   165,    -1,    -1,
     168,   169,   170,   171,   172,    -1,    -1,   175,   176,    -1,
     178,   179,   180,    -1,    -1,   183,    -1,    -1,    -1,   187,
     188,   189,   190,    -1,   192,    -1,   194,   195,   196,   197,
      -1,   199,    -1,   201,    -1,    -1,    -1,   205,   206,    -1,
     208,    -1,    -1,   211,   212,    -1,    -1,    -1,   216,   217,
     218,   219,    -1,    -1,   222,   223,   224,    -1,    -1,   227,
      -1,    -1,    -1,    -1,   232,   233,    -1,    -1,    -1,   237,
      -1,    -1,    -1,   241,   242,    -1,   244,   245,    -1,    -1,
      -1,   249,    -1,    -1,   252,   253,    -1,    -1,   256,    -1,
      -1,   259,   260,    -1,    -1,    -1,    -1,    -1,   266,   267,
      -1,   269,    -1,   271,    -1,   273,   274,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   282,    -1,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,    -1,   302,   303,   304,    -1,   306,   307,
     308,   309,    -1,   311,   312,    -1,    -1,    -1,    -1,   317,
     318,   319,   320,   321,   322,    -1,    -1,   325,   326,    -1,
     328,    -1,   330,    -1,   332,   333,   334,   335,   336,   337,
     338,   339,   340,    -1,    -1,   343,   344,    -1,    -1,   347,
     348,   349,   350,    -1,    -1,    -1,   354,   355,    -1,    -1,
      -1,   359,    -1,   361,   362,   363,    -1,   365,   366,   367,
      -1,   369,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   379,   380,   381,    -1,   383,   384,    -1,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,    -1,    -1,
     398,   399,   400,    -1,   402,    -1,   404,   405,   406,   407,
     408,    -1,   410,   411,   412,    -1,    -1,   415,    -1,    -1,
      -1,   419,   420,   421,   422,   423,    -1,    -1,   426,   427,
     428,   429,   430,    -1,   432,   433,    -1,   435,   436,   437,
      -1,    -1,   440,    -1,   442,    -1,   444,   445,    -1,   447,
     448,   449,    -1,   451,    -1,    -1,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,   467,
      -1,    -1,    -1,   471,   472,   473,   474,    -1,    -1,    -1,
     478,    -1,    -1,    -1,   482,    -1,   484,   485,   486,   487,
      -1,   489,   490,   491,   492,   493,    -1,    -1,    -1,    -1,
      -1,   499,   500,   501,    -1,   503,   504,    -1,   506,    -1,
      -1,   509,    -1,    -1,   512,   513,   514,   515,   516,   517,
      -1,    -1,   520,   521,    -1,   523,   524,   525,   526,   527,
     528,    -1,    -1,   531,   532,   533,   534,    -1,   536,   537,
      -1,    -1,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,   549,   550,   551,   552,    -1,    -1,    -1,    -1,    -1,
     558,   559,    -1,    -1,    -1,   563,   564,   565,   566,    -1,
     568,   569,    -1,   571,   572,    -1,   574,   575,    -1,    -1,
     578,    -1,    -1,   581,    -1,   583,    -1,   585,   586,    -1,
      -1,    -1,    -1,    -1,    -1,   593,    -1,    -1,   596,    -1,
      -1,    -1,   600,   601,   602,   603,   604,    -1,    -1,    -1,
      -1,    -1,    -1,   611,   612,    -1,   614,   615,   616,    -1,
       5,   619,     7,     8,     9,    10,    11,    -1,    -1,    14,
      -1,    -1,    -1,    18,    -1,    -1,    21,    -1,    23,    24,
      25,    26,    27,    28,    -1,    30,    -1,    -1,    -1,    34,
      -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,
      45,    -1,    47,    48,    -1,    -1,    51,    -1,    -1,    54,
      55,    -1,    57,    58,    -1,    60,    -1,    62,    63,    64,
      65,    66,    67,    -1,    69,    70,    -1,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    -1,    82,    83,    -1,
      85,    86,    87,    88,    89,    -1,    -1,    -1,    93,    -1,
      -1,    96,    -1,    98,    -1,    -1,   101,    -1,    -1,    -1,
     105,   106,   107,    -1,    -1,   110,    -1,    -1,    -1,    -1,
     115,   116,    -1,    -1,    -1,   120,   121,   122,    -1,   124,
      -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,   134,
      -1,    -1,    -1,   138,    -1,    -1,   141,   142,   143,    -1,
      -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,   154,
      -1,    -1,   157,   158,    -1,   160,   161,   162,   163,   164,
     165,    -1,    -1,   168,   169,   170,   171,   172,    -1,    -1,
     175,   176,    -1,   178,   179,   180,    -1,    -1,   183,    -1,
      -1,    -1,   187,   188,    -1,   190,    -1,   192,    -1,   194,
     195,   196,   197,    -1,   199,    -1,   201,    -1,    -1,    -1,
     205,   206,    -1,   208,    -1,    -1,   211,   212,    -1,    -1,
      -1,   216,   217,   218,   219,    -1,    -1,   222,   223,   224,
      -1,    -1,   227,    -1,    -1,    -1,    -1,   232,   233,    -1,
      -1,    -1,   237,    -1,    -1,    -1,   241,   242,    -1,   244,
     245,    -1,    -1,    -1,   249,    -1,    -1,   252,   253,    -1,
      -1,   256,    -1,    -1,   259,   260,    -1,    -1,    -1,    -1,
      -1,   266,   267,    -1,   269,    -1,   271,    -1,   273,   274,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   282,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,    -1,   302,   303,   304,
      -1,   306,   307,   308,   309,    -1,   311,   312,    -1,    -1,
      -1,    -1,   317,   318,   319,   320,   321,   322,    -1,    -1,
     325,   326,    -1,   328,    -1,   330,    -1,   332,   333,   334,
     335,   336,   337,   338,   339,   340,    -1,    -1,   343,   344,
      -1,    -1,   347,   348,   349,   350,    -1,    -1,    -1,   354,
     355,    -1,    -1,    -1,   359,    -1,   361,   362,   363,    -1,
     365,   366,   367,    -1,   369,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   379,   380,   381,    -1,   383,   384,
      -1,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,    -1,    -1,   398,   399,   400,    -1,   402,    -1,   404,
     405,   406,   407,   408,    -1,   410,   411,   412,    -1,    -1,
     415,    -1,    -1,    -1,   419,   420,   421,   422,   423,    -1,
      -1,   426,   427,   428,   429,   430,    -1,   432,   433,    -1,
     435,   436,   437,    -1,    -1,   440,    -1,   442,    -1,   444,
     445,    -1,   447,   448,   449,    -1,   451,    -1,    -1,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,   467,    -1,    -1,    -1,   471,   472,   473,   474,
      -1,    -1,    -1,   478,    -1,    -1,    -1,   482,    -1,   484,
     485,   486,   487,    -1,   489,   490,   491,   492,   493,    -1,
      -1,    -1,    -1,    -1,   499,   500,   501,    -1,   503,   504,
      -1,   506,    -1,    -1,   509,    -1,    -1,   512,   513,   514,
     515,   516,   517,    -1,    -1,   520,   521,    -1,   523,   524,
     525,   526,   527,   528,    -1,    -1,   531,   532,   533,   534,
      -1,   536,   537,    -1,    -1,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,   549,   550,   551,   552,    -1,    -1,
      -1,    -1,    -1,   558,   559,    -1,    -1,    -1,   563,   564,
     565,   566,    -1,   568,   569,    -1,   571,   572,    -1,   574,
     575,    -1,    -1,   578,    -1,    -1,   581,    -1,   583,    -1,
     585,   586,    -1,    -1,    -1,    -1,    -1,    -1,   593,    -1,
      -1,   596,    -1,    -1,    -1,   600,   601,   602,   603,   604,
      -1,    -1,    -1,    -1,    -1,    -1,   611,   612,    -1,   614,
     615,   616,    -1,     5,   619,     7,     8,     9,    10,    11,
      -1,    -1,    14,    -1,    -1,    -1,    18,    -1,    -1,    21,
      -1,    23,    24,    25,    26,    27,    28,    -1,    30,    -1,
      -1,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    41,
      42,    43,    -1,    45,    -1,    47,    48,    -1,    -1,    51,
      -1,    -1,    54,    55,    -1,    57,    58,    -1,    60,    -1,
      62,    63,    64,    65,    66,    67,    -1,    69,    70,    -1,
      72,    73,    74,    75,    76,    77,    78,    79,    80,    -1,
      82,    83,    -1,    85,    86,    87,    88,    89,    -1,    -1,
      -1,    93,    -1,    -1,    96,    -1,    98,    -1,    -1,   101,
      -1,    -1,    -1,   105,   106,   107,    -1,    -1,   110,    -1,
      -1,    -1,    -1,   115,   116,    -1,    -1,    -1,   120,   121,
     122,    -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,
     132,   133,   134,    -1,    -1,    -1,   138,    -1,    -1,   141,
     142,   143,    -1,    -1,    -1,   147,    -1,   149,   150,    -1,
     152,   153,   154,    -1,    -1,   157,   158,    -1,   160,   161,
     162,   163,   164,   165,    -1,    -1,   168,   169,   170,   171,
     172,    -1,    -1,   175,   176,    -1,   178,   179,   180,    -1,
      -1,   183,    -1,    -1,    -1,   187,   188,    -1,   190,    -1,
     192,    -1,   194,   195,   196,   197,    -1,   199,    -1,   201,
      -1,    -1,    -1,   205,   206,    -1,   208,    -1,    -1,   211,
     212,    -1,    -1,    -1,   216,   217,   218,   219,    -1,    -1,
     222,   223,   224,    -1,    -1,   227,    -1,    -1,    -1,    -1,
     232,   233,    -1,    -1,    -1,   237,    -1,    -1,    -1,   241,
     242,    -1,   244,   245,    -1,    -1,    -1,   249,    -1,    -1,
     252,   253,    -1,    -1,   256,    -1,    -1,   259,   260,    -1,
      -1,    -1,    -1,    -1,   266,   267,    -1,   269,    -1,   271,
      -1,   273,   274,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     282,    -1,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,    -1,
     302,   303,   304,    -1,   306,   307,   308,   309,    -1,   311,
     312,    -1,    -1,    -1,    -1,   317,   318,   319,   320,   321,
     322,    -1,    -1,   325,   326,    -1,   328,    -1,   330,    -1,
     332,   333,   334,   335,   336,   337,   338,   339,   340,    -1,
      -1,   343,   344,    -1,    -1,   347,   348,   349,   350,    -1,
      -1,    -1,   354,   355,    -1,    -1,    -1,   359,    -1,   361,
     362,   363,    -1,   365,   366,   367,    -1,   369,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   379,   380,   381,
      -1,   383,   384,    -1,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,    -1,    -1,   398,   399,   400,    -1,
     402,    -1,   404,   405,   406,   407,   408,    -1,   410,   411,
     412,    -1,    -1,   415,    -1,    -1,    -1,   419,   420,   421,
     422,   423,    -1,    -1,   426,   427,   428,   429,   430,    -1,
     432,   433,    -1,   435,   436,   437,    -1,    -1,   440,    -1,
     442,    -1,   444,   445,    -1,   447,   448,   449,    -1,   451,
      -1,    -1,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,   467,    -1,    -1,    -1,   471,
     472,   473,   474,    -1,    -1,    -1,   478,    -1,    -1,    -1,
     482,    -1,   484,   485,   486,   487,    -1,   489,   490,   491,
     492,   493,    -1,    -1,    -1,    -1,    -1,   499,   500,   501,
      -1,   503,   504,    -1,   506,    -1,    -1,   509,    -1,    -1,
     512,   513,   514,   515,   516,   517,    -1,    -1,   520,   521,
      -1,   523,   524,   525,   526,   527,   528,    -1,    -1,   531,
     532,   533,   534,    -1,   536,   537,    -1,    -1,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,   549,   550,   551,
     552,    -1,    -1,    -1,    -1,    -1,   558,   559,    -1,    -1,
      -1,   563,   564,   565,   566,    -1,   568,   569,    -1,   571,
     572,    -1,   574,   575,    -1,    -1,   578,    -1,    -1,   581,
      -1,   583,    -1,   585,   586,    -1,    -1,    -1,    -1,    -1,
      -1,   593,    -1,    -1,   596,    -1,    -1,    -1,   600,   601,
     602,   603,   604,    -1,    -1,    -1,    -1,    -1,    -1,   611,
     612,    -1,   614,   615,   616,    -1,     5,   619,     7,     8,
       9,    10,    11,    -1,    -1,    14,    -1,    -1,    -1,    18,
      -1,    -1,    21,    -1,    23,    24,    25,    26,    27,    28,
      -1,    30,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,
      -1,    -1,    41,    42,    43,    -1,    45,    -1,    47,    48,
      -1,    -1,    51,    -1,    -1,    54,    55,    -1,    57,    58,
      -1,    60,    -1,    62,    63,    64,    65,    66,    67,    -1,
      69,    70,    -1,    72,    73,    74,    75,    76,    77,    78,
      79,    80,    -1,    82,    83,    -1,    85,    86,    87,    88,
      89,    -1,    -1,    -1,    93,    -1,    -1,    96,    -1,    98,
      -1,    -1,   101,    -1,    -1,    -1,   105,   106,   107,    -1,
      -1,   110,    -1,    -1,    -1,    -1,   115,   116,    -1,    -1,
      -1,   120,   121,   122,    -1,   124,    -1,    -1,    -1,   128,
      -1,   130,   131,   132,   133,   134,    -1,    -1,    -1,   138,
      -1,    -1,   141,   142,   143,    -1,    -1,    -1,   147,    -1,
     149,   150,    -1,   152,   153,   154,    -1,    -1,   157,   158,
      -1,   160,   161,   162,   163,   164,   165,    -1,    -1,   168,
     169,   170,   171,   172,    -1,    -1,   175,   176,    -1,   178,
     179,   180,    -1,    -1,   183,    -1,    -1,    -1,   187,   188,
      -1,   190,    -1,   192,    -1,   194,   195,   196,   197,    -1,
     199,    -1,   201,    -1,    -1,    -1,   205,   206,    -1,   208,
      -1,    -1,   211,   212,    -1,    -1,    -1,   216,   217,   218,
     219,    -1,    -1,   222,   223,   224,    -1,    -1,   227,    -1,
      -1,    -1,    -1,   232,   233,    -1,    -1,    -1,   237,    -1,
      -1,    -1,   241,   242,    -1,   244,   245,    -1,    -1,    -1,
     249,    -1,    -1,   252,   253,    -1,    -1,   256,    -1,    -1,
     259,   260,    -1,    -1,    -1,    -1,    -1,   266,   267,    -1,
     269,    -1,   271,    -1,   273,   274,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   282,    -1,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,    -1,   302,   303,   304,    -1,   306,   307,   308,
     309,    -1,   311,   312,    -1,    -1,    -1,    -1,   317,   318,
     319,   320,   321,   322,    -1,    -1,   325,   326,    -1,   328,
      -1,   330,    -1,   332,   333,   334,   335,   336,   337,   338,
     339,   340,    -1,    -1,   343,   344,    -1,    -1,   347,   348,
     349,   350,    -1,    -1,    -1,   354,   355,    -1,    -1,    -1,
     359,    -1,   361,   362,   363,    -1,   365,   366,   367,    -1,
     369,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     379,   380,   381,    -1,   383,   384,    -1,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,    -1,    -1,   398,
     399,   400,    -1,   402,    -1,   404,   405,   406,   407,   408,
      -1,   410,   411,   412,    -1,    -1,   415,    -1,    -1,    -1,
     419,   420,   421,   422,   423,    -1,    -1,   426,   427,   428,
     429,   430,    -1,   432,   433,    -1,   435,   436,   437,    -1,
      -1,   440,    -1,   442,    -1,   444,   445,    -1,   447,   448,
     449,    -1,   451,    -1,    -1,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,   467,    -1,
      -1,    -1,   471,   472,   473,   474,    -1,    -1,    -1,   478,
      -1,    -1,    -1,   482,    -1,   484,   485,   486,   487,    -1,
     489,   490,   491,   492,   493,    -1,    -1,    -1,    -1,    -1,
     499,   500,   501,    -1,   503,   504,    -1,   506,    -1,    -1,
     509,    -1,    -1,   512,   513,   514,   515,   516,   517,    -1,
      -1,   520,   521,    -1,   523,   524,   525,   526,   527,   528,
      -1,    -1,   531,   532,   533,   534,    -1,   536,   537,    -1,
      -1,   540,   541,   542,   543,    -1,    -1,   546,   547,    -1,
     549,   550,   551,   552,    -1,    -1,    -1,    -1,    -1,   558,
     559,    -1,    -1,    -1,   563,   564,   565,   566,    -1,   568,
     569,    -1,   571,   572,    -1,   574,   575,    -1,    -1,   578,
      -1,    -1,   581,    -1,   583,    -1,   585,   586,    -1,    -1,
      -1,    -1,    -1,    -1,   593,    -1,    -1,   596,    -1,    -1,
      -1,   600,   601,   602,   603,   604,    -1,    -1,    -1,    -1,
      -1,    -1,   611,   612,    -1,   614,   615,   616,    -1,     5,
     619,     7,     8,     9,    10,    11,    -1,    -1,    14,    -1,
      -1,    -1,    18,    -1,    -1,    21,    -1,    23,    24,    25,
      26,    27,    28,    -1,    30,    -1,    -1,    -1,    34,    -1,
      -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,    45,
      -1,    47,    48,    -1,    -1,    51,    -1,    -1,    54,    55,
      -1,    57,    58,    -1,    60,    -1,    62,    63,    64,    65,
      66,    67,    -1,    69,    70,    -1,    72,    73,    74,    75,
      76,    77,    78,    79,    80,    -1,    82,    83,    -1,    85,
      86,    87,    88,    89,    -1,    -1,    -1,    93,    -1,    -1,
      96,    -1,    98,    -1,    -1,   101,    -1,    -1,    -1,   105,
     106,   107,    -1,    -1,   110,    -1,    -1,    -1,    -1,   115,
     116,    -1,    -1,    -1,   120,   121,   122,    -1,   124,    -1,
      -1,    -1,   128,    -1,   130,   131,   132,   133,   134,    -1,
      -1,    -1,   138,    -1,    -1,   141,   142,   143,    -1,    -1,
      -1,   147,    -1,   149,   150,    -1,   152,   153,   154,    -1,
      -1,   157,   158,    -1,   160,   161,   162,   163,   164,   165,
      -1,    -1,   168,   169,   170,   171,   172,    -1,    -1,   175,
     176,    -1,   178,   179,   180,    -1,    -1,   183,    -1,    -1,
      -1,   187,   188,    -1,   190,    -1,   192,    -1,   194,   195,
     196,   197,    -1,   199,    -1,   201,    -1,    -1,    -1,   205,
     206,    -1,   208,    -1,    -1,   211,   212,    -1,    -1,    -1,
     216,   217,   218,   219,    -1,    -1,   222,   223,   224,    -1,
      -1,   227,    -1,    -1,    -1,    -1,   232,   233,    -1,    -1,
      -1,   237,    -1,    -1,    -1,   241,   242,    -1,   244,   245,
      -1,    -1,    -1,   249,    -1,    -1,   252,   253,    -1,    -1,
     256,    -1,    -1,   259,   260,    -1,    -1,    -1,    -1,    -1,
     266,   267,    -1,   269,    -1,   271,    -1,   273,   274,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   282,    -1,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,    -1,   302,   303,   304,    -1,
     306,   307,   308,   309,    -1,   311,   312,    -1,    -1,    -1,
      -1,   317,   318,   319,   320,   321,   322,    -1,    -1,   325,
     326,    -1,   328,    -1,   330,    -1,   332,   333,   334,   335,
     336,   337,   338,   339,   340,    -1,    -1,   343,   344,    -1,
      -1,   347,   348,   349,   350,    -1,    -1,    -1,   354,   355,
      -1,    -1,    -1,   359,    -1,   361,   362,   363,    -1,   365,
     366,   367,    -1,   369,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   379,   380,   381,    -1,   383,   384,    -1,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
      -1,    -1,   398,   399,   400,    -1,   402,    -1,   404,   405,
     406,   407,   408,    -1,   410,   411,   412,    -1,    -1,   415,
      -1,    -1,    -1,   419,   420,   421,   422,   423,    -1,    -1,
     426,   427,   428,   429,   430,    -1,   432,   433,    -1,   435,
     436,   437,    -1,    -1,   440,    -1,   442,    -1,   444,   445,
      -1,   447,   448,   449,    -1,   451,    -1,    -1,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,   467,    -1,    -1,    -1,   471,   472,   473,   474,    -1,
      -1,    -1,   478,    -1,    -1,    -1,   482,    -1,   484,   485,
     486,   487,    -1,   489,   490,   491,   492,   493,    -1,    -1,
      -1,    -1,    -1,   499,   500,   501,    -1,   503,   504,    -1,
     506,    -1,    -1,   509,    -1,    -1,   512,   513,   514,   515,
     516,   517,    -1,    -1,   520,   521,    -1,   523,   524,   525,
     526,   527,   528,    -1,    -1,   531,   532,   533,   534,    -1,
     536,   537,    -1,    -1,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,   549,   550,   551,   552,    -1,    -1,    -1,
      -1,    -1,   558,   559,    -1,    -1,    -1,   563,   564,   565,
     566,    -1,   568,   569,    -1,   571,   572,    -1,   574,   575,
      -1,    -1,   578,    -1,    -1,   581,    -1,   583,    -1,   585,
     586,    -1,    -1,    -1,    -1,    -1,    -1,   593,    -1,    -1,
     596,    -1,    -1,    -1,   600,   601,   602,   603,   604,    -1,
      -1,    -1,    -1,    -1,    -1,   611,   612,    -1,   614,   615,
     616,    -1,     5,   619,     7,     8,     9,    10,    11,    12,
      -1,    14,    -1,    -1,    -1,    18,    -1,    -1,    21,    -1,
      23,    24,    25,    26,    27,    28,    -1,    30,    -1,    -1,
      -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    41,    42,
      43,    -1,    45,    -1,    47,    48,    -1,    -1,    51,    -1,
      -1,    54,    55,    -1,    57,    58,    -1,    60,    -1,    62,
      63,    64,    65,    66,    67,    -1,    69,    70,    -1,    72,
      73,    74,    75,    76,    77,    78,    79,    80,    -1,    82,
      83,    -1,    85,    86,    87,    88,    89,    -1,    -1,    -1,
      93,    -1,    -1,    96,    -1,    98,    -1,    -1,   101,    -1,
      -1,    -1,   105,   106,   107,    -1,    -1,   110,    -1,    -1,
      -1,    -1,   115,   116,    -1,    -1,    -1,    -1,   121,   122,
      -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,
     133,   134,    -1,    -1,    -1,   138,    -1,    -1,   141,   142,
     143,    -1,    -1,    -1,   147,    -1,   149,   150,    -1,   152,
     153,   154,    -1,    -1,   157,   158,    -1,   160,   161,   162,
     163,   164,   165,    -1,    -1,   168,   169,   170,   171,   172,
      -1,    -1,   175,   176,    -1,   178,   179,   180,    -1,    -1,
     183,    -1,    -1,    -1,   187,   188,    -1,   190,    -1,   192,
      -1,   194,   195,   196,   197,    -1,   199,    -1,   201,    -1,
      -1,    -1,   205,   206,    -1,   208,    -1,    -1,   211,   212,
      -1,    -1,    -1,   216,   217,   218,   219,    -1,    -1,   222,
     223,   224,    -1,    -1,   227,    -1,    -1,    -1,    -1,   232,
     233,    -1,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,
      -1,   244,   245,    -1,    -1,    -1,   249,    -1,    -1,   252,
     253,    -1,    -1,   256,    -1,    -1,   259,   260,    -1,    -1,
      -1,    -1,    -1,   266,   267,    -1,   269,    -1,   271,    -1,
     273,   274,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   282,
      -1,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,    -1,   302,
     303,   304,    -1,   306,   307,   308,   309,    -1,   311,   312,
      -1,    -1,    -1,    -1,   317,   318,   319,   320,   321,   322,
      -1,    -1,   325,   326,    -1,   328,    -1,   330,    -1,   332,
     333,   334,   335,   336,   337,   338,   339,   340,    -1,    -1,
     343,   344,    -1,    -1,   347,   348,   349,   350,    -1,    -1,
      -1,   354,   355,    -1,    -1,    -1,   359,    -1,   361,   362,
     363,    -1,   365,   366,   367,    -1,   369,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   379,   380,   381,    -1,
     383,   384,    -1,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,    -1,    -1,   398,   399,   400,    -1,   402,
      -1,   404,   405,   406,   407,   408,    -1,   410,   411,   412,
      -1,    -1,   415,    -1,    -1,    -1,   419,   420,   421,   422,
     423,    -1,    -1,   426,   427,   428,   429,   430,    -1,   432,
     433,    -1,   435,   436,   437,    -1,    -1,   440,    -1,   442,
      -1,   444,   445,    -1,   447,   448,   449,    -1,   451,    -1,
      -1,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,   467,    -1,    -1,    -1,   471,   472,
     473,   474,    -1,    -1,    -1,   478,    -1,    -1,    -1,   482,
      -1,   484,   485,   486,   487,    -1,   489,   490,   491,   492,
     493,    -1,    -1,    -1,    -1,    -1,   499,   500,   501,    -1,
     503,   504,    -1,   506,    -1,    -1,   509,    -1,    -1,   512,
     513,   514,   515,   516,   517,    -1,    -1,   520,   521,    -1,
     523,   524,   525,   526,   527,   528,    -1,    -1,   531,   532,
     533,   534,    -1,   536,   537,    -1,    -1,   540,   541,   542,
     543,    -1,    -1,   546,   547,    -1,   549,   550,   551,   552,
      -1,    -1,    -1,    -1,    -1,   558,   559,    -1,    -1,    -1,
     563,   564,   565,   566,    -1,   568,   569,    -1,   571,   572,
      -1,   574,   575,    -1,    -1,   578,    -1,    -1,   581,    -1,
     583,    -1,   585,   586,    -1,    -1,    -1,    -1,    -1,    -1,
     593,    -1,    -1,   596,    -1,    -1,    -1,   600,   601,   602,
     603,   604,    -1,    -1,    -1,    -1,    -1,    -1,   611,   612,
      -1,   614,   615,   616,    -1,     5,   619,     7,     8,     9,
      10,    11,    -1,    -1,    14,    -1,    -1,    -1,    18,    -1,
      -1,    21,    -1,    23,    24,    25,    26,    27,    28,    -1,
      30,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,    -1,
      -1,    41,    42,    43,    -1,    45,    -1,    47,    48,    -1,
      -1,    51,    -1,    -1,    54,    55,    -1,    57,    58,    -1,
      60,    -1,    62,    63,    64,    65,    66,    67,    -1,    69,
      70,    -1,    72,    73,    74,    75,    76,    77,    78,    79,
      80,    -1,    82,    83,    -1,    85,    86,    87,    88,    89,
      -1,    -1,    -1,    93,    -1,    -1,    96,    -1,    98,    -1,
      -1,   101,    -1,    -1,    -1,   105,   106,   107,    -1,    -1,
     110,    -1,    -1,    -1,    -1,   115,   116,    -1,    -1,    -1,
     120,   121,   122,    -1,   124,    -1,    -1,    -1,   128,    -1,
     130,   131,   132,   133,   134,    -1,    -1,    -1,   138,    -1,
      -1,   141,   142,   143,    -1,    -1,    -1,   147,    -1,   149,
     150,    -1,   152,   153,   154,    -1,    -1,   157,   158,    -1,
     160,   161,   162,   163,   164,   165,    -1,    -1,   168,   169,
     170,   171,   172,    -1,    -1,   175,   176,    -1,   178,   179,
     180,    -1,    -1,   183,    -1,    -1,    -1,   187,   188,    -1,
     190,    -1,   192,    -1,   194,   195,   196,   197,    -1,   199,
      -1,   201,    -1,    -1,    -1,   205,   206,    -1,   208,    -1,
      -1,   211,   212,    -1,    -1,    -1,   216,   217,   218,   219,
      -1,    -1,   222,   223,   224,    -1,    -1,   227,    -1,    -1,
      -1,    -1,   232,   233,    -1,    -1,    -1,   237,    -1,    -1,
      -1,   241,   242,    -1,   244,   245,    -1,    -1,    -1,   249,
      -1,    -1,   252,   253,    -1,    -1,   256,    -1,    -1,   259,
     260,    -1,    -1,    -1,    -1,    -1,   266,   267,    -1,   269,
      -1,   271,    -1,   273,   274,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   282,    -1,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,    -1,   302,   303,   304,    -1,   306,   307,   308,   309,
      -1,   311,   312,    -1,    -1,    -1,    -1,   317,   318,   319,
     320,   321,   322,    -1,    -1,   325,   326,    -1,   328,    -1,
     330,    -1,   332,   333,   334,   335,   336,   337,   338,   339,
     340,    -1,    -1,   343,   344,    -1,    -1,   347,   348,   349,
     350,    -1,    -1,    -1,   354,   355,    -1,    -1,    -1,   359,
      -1,   361,   362,   363,    -1,   365,   366,   367,    -1,   369,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   379,
     380,   381,    -1,   383,   384,    -1,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,    -1,    -1,   398,   399,
     400,    -1,   402,    -1,   404,   405,   406,   407,   408,    -1,
     410,   411,   412,    -1,    -1,   415,    -1,    -1,    -1,   419,
     420,   421,   422,   423,    -1,    -1,   426,   427,   428,   429,
     430,    -1,   432,   433,    -1,   435,   436,   437,    -1,    -1,
     440,    -1,   442,    -1,   444,   445,    -1,   447,   448,   449,
      -1,   451,    -1,    -1,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,   467,    -1,    -1,
      -1,   471,   472,   473,   474,    -1,    -1,    -1,   478,    -1,
      -1,    -1,   482,    -1,   484,   485,   486,   487,    -1,   489,
     490,   491,   492,   493,    -1,    -1,    -1,    -1,    -1,   499,
     500,   501,    -1,   503,   504,    -1,   506,    -1,    -1,   509,
      -1,    -1,   512,   513,   514,   515,   516,   517,    -1,    -1,
     520,   521,    -1,   523,   524,   525,   526,   527,   528,    -1,
      -1,   531,   532,   533,   534,    -1,   536,   537,    -1,    -1,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,   549,
     550,   551,   552,    -1,    -1,    -1,    -1,    -1,   558,   559,
      -1,    -1,    -1,   563,   564,   565,   566,    -1,   568,   569,
      -1,   571,   572,    -1,   574,   575,    -1,    -1,   578,    -1,
      -1,   581,    -1,   583,    -1,   585,   586,    -1,    -1,    -1,
      -1,    -1,    -1,   593,    -1,    -1,   596,    -1,    -1,    -1,
     600,   601,   602,   603,   604,    -1,    -1,    -1,    -1,    -1,
      -1,   611,   612,    -1,   614,   615,   616,    -1,     5,   619,
       7,     8,     9,    10,    11,    -1,    -1,    14,    -1,    -1,
      -1,    18,    -1,    -1,    21,    -1,    23,    24,    25,    26,
      27,    28,    -1,    30,    -1,    -1,    -1,    34,    -1,    -1,
      -1,    38,    -1,    -1,    41,    42,    43,    -1,    45,    -1,
      47,    48,    -1,    -1,    51,    -1,    -1,    54,    55,    -1,
      57,    58,    -1,    60,    -1,    62,    63,    64,    65,    66,
      67,    -1,    69,    70,    -1,    72,    73,    74,    75,    76,
      77,    78,    79,    80,    -1,    82,    83,    -1,    85,    86,
      87,    88,    89,    -1,    -1,    -1,    93,    -1,    -1,    96,
      -1,    98,    -1,    -1,   101,    -1,    -1,    -1,   105,   106,
     107,    -1,    -1,   110,    -1,    -1,    -1,    -1,   115,   116,
      -1,    -1,    -1,    -1,   121,   122,    -1,   124,    -1,    -1,
      -1,   128,    -1,   130,   131,   132,   133,   134,    -1,    -1,
      -1,   138,    -1,    -1,   141,   142,   143,    -1,    -1,    -1,
     147,    -1,   149,   150,    -1,   152,   153,   154,    -1,    -1,
     157,   158,    -1,   160,   161,   162,   163,   164,   165,    -1,
      -1,   168,   169,   170,   171,   172,    -1,    -1,   175,   176,
      -1,   178,   179,   180,    -1,    -1,   183,    -1,    -1,    -1,
     187,   188,    -1,   190,    -1,   192,    -1,   194,   195,   196,
     197,    -1,   199,    -1,   201,    -1,    -1,    -1,   205,   206,
      -1,   208,    -1,    -1,   211,   212,    -1,    -1,    -1,   216,
     217,   218,   219,    -1,    -1,   222,   223,   224,    -1,    -1,
     227,    -1,    -1,    -1,    -1,   232,   233,    -1,    -1,    -1,
     237,    -1,    -1,    -1,   241,   242,    -1,   244,   245,    -1,
      -1,    -1,   249,    -1,    -1,   252,   253,    -1,    -1,   256,
      -1,    -1,   259,   260,    -1,    -1,    -1,    -1,    -1,   266,
     267,    -1,   269,    -1,   271,    -1,   273,   274,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   282,    -1,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,    -1,   302,   303,   304,    -1,   306,
     307,   308,   309,    -1,   311,   312,    -1,    -1,    -1,    -1,
     317,   318,   319,   320,   321,   322,    -1,    -1,   325,   326,
      -1,   328,    -1,   330,    -1,   332,   333,   334,   335,   336,
     337,   338,   339,   340,    -1,    -1,   343,   344,    -1,    -1,
     347,   348,   349,   350,    -1,    -1,    -1,   354,   355,    -1,
      -1,    -1,   359,    -1,   361,   362,   363,    -1,   365,   366,
     367,    -1,   369,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   379,   380,   381,    -1,   383,   384,    -1,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,    -1,
      -1,   398,   399,   400,   401,   402,    -1,   404,   405,   406,
     407,   408,    -1,   410,   411,   412,    -1,    -1,   415,    -1,
      -1,    -1,   419,   420,   421,   422,   423,    -1,    -1,   426,
     427,   428,   429,   430,    -1,   432,   433,    -1,   435,   436,
     437,    -1,    -1,   440,    -1,   442,    -1,   444,   445,    -1,
     447,   448,   449,    -1,   451,    -1,    -1,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
     467,    -1,    -1,    -1,   471,   472,   473,   474,    -1,    -1,
      -1,   478,    -1,    -1,    -1,   482,    -1,   484,   485,   486,
     487,    -1,   489,   490,   491,   492,   493,    -1,    -1,    -1,
      -1,    -1,   499,   500,   501,    -1,   503,   504,    -1,   506,
      -1,    -1,   509,    -1,    -1,   512,   513,   514,   515,   516,
     517,    -1,    -1,   520,   521,    -1,   523,   524,   525,   526,
     527,   528,    -1,    -1,   531,   532,   533,   534,    -1,   536,
     537,    -1,    -1,   540,   541,   542,   543,    -1,    -1,   546,
     547,    -1,   549,   550,   551,   552,    -1,    -1,    -1,    -1,
      -1,   558,   559,    -1,    -1,    -1,   563,   564,   565,   566,
      -1,   568,   569,    -1,   571,   572,    -1,   574,   575,    -1,
      -1,   578,    -1,    -1,   581,    -1,   583,    -1,   585,   586,
      -1,    -1,    -1,    -1,    -1,    -1,   593,    -1,    -1,   596,
      -1,    -1,    -1,   600,   601,   602,   603,   604,    -1,    -1,
      -1,    -1,    -1,    -1,   611,   612,    -1,   614,   615,   616,
      -1,     5,   619,     7,     8,     9,    10,    11,    -1,    -1,
      14,    -1,    -1,    -1,    18,    -1,    -1,    21,    -1,    23,
      24,    25,    26,    27,    28,    -1,    30,    -1,    -1,    -1,
      34,    -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,
      -1,    45,    -1,    47,    48,    -1,    -1,    51,    -1,    -1,
      54,    55,    -1,    57,    58,    -1,    60,    -1,    62,    63,
      64,    65,    66,    67,    -1,    69,    70,    -1,    72,    73,
      74,    75,    76,    77,    78,    79,    80,    -1,    82,    83,
      -1,    85,    86,    87,    88,    89,    -1,    -1,    -1,    93,
      -1,    -1,    96,    -1,    98,    -1,    -1,   101,    -1,    -1,
      -1,   105,   106,   107,    -1,    -1,   110,    -1,    -1,    -1,
      -1,   115,   116,    -1,    -1,    -1,    -1,   121,   122,    -1,
     124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,
     134,    -1,    -1,    -1,   138,    -1,    -1,   141,   142,   143,
      -1,    -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,
     154,    -1,    -1,   157,   158,    -1,   160,   161,   162,   163,
     164,   165,    -1,    -1,   168,   169,   170,   171,   172,    -1,
      -1,   175,   176,    -1,   178,   179,   180,    -1,    -1,   183,
      -1,    -1,    -1,   187,   188,    -1,   190,    -1,   192,    -1,
     194,   195,   196,   197,    -1,   199,    -1,   201,    -1,    -1,
      -1,   205,   206,    -1,   208,    -1,    -1,   211,   212,    -1,
      -1,    -1,   216,   217,   218,   219,    -1,    -1,   222,   223,
     224,    -1,    -1,   227,    -1,    -1,    -1,    -1,   232,   233,
      -1,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,    -1,
     244,   245,    -1,    -1,    -1,   249,    -1,    -1,   252,   253,
      -1,    -1,   256,    -1,    -1,   259,   260,    -1,    -1,    -1,
      -1,    -1,   266,   267,    -1,   269,    -1,   271,    -1,   273,
     274,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   282,    -1,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,    -1,   302,   303,
     304,    -1,   306,   307,   308,   309,    -1,   311,   312,    -1,
      -1,    -1,    -1,   317,   318,   319,   320,   321,   322,    -1,
      -1,   325,   326,    -1,   328,    -1,   330,    -1,   332,   333,
     334,   335,   336,   337,   338,   339,   340,    -1,    -1,   343,
     344,    -1,    -1,   347,   348,   349,   350,    -1,    -1,    -1,
     354,   355,    -1,    -1,    -1,   359,    -1,   361,   362,   363,
      -1,   365,   366,   367,    -1,   369,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   379,   380,   381,    -1,   383,
     384,    -1,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,    -1,    -1,   398,   399,   400,    -1,   402,    -1,
     404,   405,   406,   407,   408,    -1,   410,   411,   412,    -1,
      -1,   415,    -1,    -1,    -1,   419,   420,   421,   422,   423,
      -1,    -1,   426,   427,   428,   429,   430,    -1,   432,   433,
      -1,   435,   436,   437,    -1,    -1,   440,    -1,   442,    -1,
     444,   445,    -1,   447,   448,   449,    -1,   451,    -1,    -1,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,   467,    -1,    -1,    -1,   471,   472,   473,
     474,    -1,    -1,    -1,   478,    -1,    -1,    -1,   482,    -1,
     484,   485,   486,   487,    -1,   489,   490,   491,   492,   493,
      -1,    -1,    -1,    -1,    -1,   499,   500,   501,    -1,   503,
     504,    -1,   506,    -1,    -1,   509,    -1,    -1,   512,   513,
     514,   515,   516,   517,    -1,    -1,   520,   521,    -1,   523,
     524,   525,   526,   527,   528,    -1,    -1,   531,   532,   533,
     534,    -1,   536,   537,    -1,    -1,   540,   541,   542,   543,
      -1,   545,   546,   547,    -1,   549,   550,   551,   552,    -1,
      -1,    -1,    -1,    -1,   558,   559,    -1,    -1,    -1,   563,
     564,   565,   566,    -1,   568,   569,    -1,   571,   572,    -1,
     574,   575,    -1,    -1,   578,    -1,    -1,   581,    -1,   583,
      -1,   585,   586,    -1,    -1,    -1,    -1,    -1,    -1,   593,
      -1,    -1,   596,    -1,    -1,    -1,   600,   601,   602,   603,
     604,    -1,    -1,    -1,    -1,    -1,    -1,   611,   612,    -1,
     614,   615,   616,    -1,     5,   619,     7,     8,     9,    10,
      11,    -1,    -1,    14,    -1,    -1,    -1,    18,    -1,    -1,
      21,    -1,    23,    24,    25,    26,    27,    28,    -1,    30,
      -1,    -1,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,
      41,    42,    43,    -1,    45,    -1,    47,    48,    -1,    -1,
      51,    -1,    -1,    54,    55,    -1,    57,    58,    -1,    60,
      -1,    62,    63,    64,    65,    66,    67,    -1,    69,    70,
      -1,    72,    73,    74,    75,    76,    77,    78,    79,    80,
      -1,    82,    83,    -1,    85,    86,    87,    88,    89,    -1,
      -1,    -1,    93,    -1,    -1,    96,    -1,    98,    -1,    -1,
     101,    -1,    -1,    -1,   105,   106,   107,    -1,    -1,   110,
      -1,    -1,    -1,    -1,   115,   116,    -1,    -1,    -1,    -1,
     121,   122,    -1,   124,    -1,    -1,    -1,   128,    -1,   130,
     131,   132,   133,   134,    -1,    -1,    -1,   138,    -1,    -1,
     141,   142,   143,    -1,    -1,    -1,   147,    -1,   149,   150,
      -1,   152,   153,   154,    -1,    -1,   157,   158,    -1,   160,
     161,   162,   163,   164,   165,    -1,    -1,   168,   169,   170,
     171,   172,    -1,    -1,   175,   176,    -1,   178,   179,   180,
      -1,    -1,   183,    -1,    -1,    -1,   187,   188,    -1,   190,
      -1,   192,    -1,   194,   195,   196,   197,    -1,   199,    -1,
     201,    -1,    -1,    -1,   205,   206,    -1,   208,    -1,    -1,
     211,   212,    -1,    -1,    -1,   216,   217,   218,   219,    -1,
      -1,   222,   223,   224,    -1,    -1,   227,    -1,    -1,    -1,
      -1,   232,   233,    -1,    -1,    -1,   237,    -1,    -1,    -1,
     241,   242,    -1,   244,   245,    -1,    -1,    -1,   249,    -1,
      -1,   252,   253,    -1,    -1,   256,    -1,    -1,   259,   260,
      -1,    -1,    -1,    -1,    -1,   266,   267,    -1,   269,    -1,
     271,    -1,   273,   274,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   282,    -1,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
      -1,   302,   303,   304,    -1,   306,   307,   308,   309,    -1,
     311,   312,    -1,    -1,    -1,    -1,   317,   318,   319,   320,
     321,   322,    -1,    -1,   325,   326,    -1,   328,    -1,   330,
      -1,   332,   333,   334,   335,   336,   337,   338,   339,   340,
      -1,    -1,   343,   344,    -1,    -1,   347,   348,   349,   350,
      -1,    -1,    -1,   354,   355,    -1,    -1,    -1,   359,    -1,
     361,   362,   363,    -1,   365,   366,   367,    -1,   369,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   379,   380,
     381,    -1,   383,   384,    -1,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,    -1,    -1,   398,   399,   400,
      -1,   402,    -1,   404,   405,   406,   407,   408,    -1,   410,
     411,   412,    -1,    -1,   415,    -1,    -1,    -1,   419,   420,
     421,   422,   423,    -1,    -1,   426,   427,   428,   429,   430,
      -1,   432,   433,    -1,   435,   436,   437,    -1,    -1,   440,
      -1,   442,    -1,   444,   445,    -1,   447,   448,   449,    -1,
     451,    -1,    -1,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,   467,    -1,    -1,    -1,
     471,   472,   473,   474,    -1,    -1,    -1,   478,    -1,    -1,
      -1,   482,    -1,   484,   485,   486,   487,    -1,   489,   490,
     491,   492,   493,    -1,    -1,    -1,    -1,    -1,   499,   500,
     501,    -1,   503,   504,    -1,   506,    -1,    -1,   509,    -1,
      -1,   512,   513,   514,   515,   516,   517,    -1,    -1,   520,
     521,    -1,   523,   524,   525,   526,   527,   528,    -1,    -1,
     531,   532,   533,   534,    -1,   536,   537,    -1,    -1,   540,
     541,   542,   543,    -1,    -1,   546,   547,    -1,   549,   550,
     551,   552,    -1,    -1,    -1,    -1,    -1,   558,   559,    -1,
      -1,    -1,   563,   564,   565,   566,    -1,   568,   569,    -1,
     571,   572,    -1,   574,   575,    -1,    -1,   578,    -1,    -1,
     581,    -1,   583,    -1,   585,   586,    -1,    -1,    -1,    -1,
      -1,    -1,   593,    -1,    -1,   596,    -1,    -1,    -1,   600,
     601,   602,   603,   604,    -1,    -1,    -1,    -1,    -1,    -1,
     611,   612,    -1,   614,   615,   616,    -1,     5,   619,     7,
       8,     9,    10,    11,    -1,    -1,    14,    -1,    -1,    -1,
      18,    -1,    -1,    21,    -1,    23,    24,    25,    26,    27,
      28,    -1,    30,    -1,    -1,    -1,    34,    -1,    -1,    -1,
      38,    -1,    -1,    41,    42,    43,    -1,    45,    -1,    47,
      48,    -1,    -1,    51,    -1,    -1,    54,    55,    -1,    57,
      58,    -1,    60,    -1,    62,    63,    64,    65,    66,    67,
      -1,    69,    70,    -1,    72,    73,    74,    75,    76,    77,
      78,    79,    80,    -1,    82,    83,    -1,    85,    86,    87,
      88,    89,    -1,    -1,    -1,    93,    -1,    -1,    96,    -1,
      98,    -1,    -1,   101,    -1,    -1,    -1,   105,   106,   107,
      -1,    -1,   110,    -1,    -1,    -1,    -1,   115,   116,    -1,
      -1,    -1,    -1,   121,   122,    -1,   124,    -1,    -1,    -1,
     128,    -1,   130,   131,   132,   133,   134,    -1,    -1,    -1,
     138,    -1,    -1,   141,   142,   143,    -1,    -1,    -1,   147,
      -1,   149,   150,    -1,   152,   153,   154,    -1,    -1,   157,
     158,    -1,   160,   161,   162,   163,   164,   165,    -1,    -1,
     168,   169,   170,   171,   172,    -1,    -1,   175,   176,    -1,
     178,   179,   180,    -1,    -1,   183,    -1,    -1,    -1,   187,
     188,    -1,   190,    -1,   192,    -1,   194,   195,   196,   197,
      -1,   199,    -1,   201,    -1,    -1,    -1,   205,   206,    -1,
     208,    -1,    -1,   211,   212,    -1,    -1,    -1,   216,   217,
     218,   219,    -1,    -1,   222,   223,   224,    -1,    -1,   227,
      -1,    -1,    -1,    -1,   232,   233,    -1,    -1,    -1,   237,
      -1,    -1,    -1,   241,   242,    -1,   244,   245,    -1,    -1,
      -1,   249,    -1,    -1,   252,   253,    -1,    -1,   256,    -1,
      -1,   259,   260,    -1,    -1,    -1,    -1,    -1,   266,   267,
      -1,   269,    -1,   271,    -1,   273,   274,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   282,    -1,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,    -1,   302,   303,   304,    -1,   306,   307,
     308,   309,    -1,   311,   312,    -1,    -1,    -1,    -1,   317,
     318,   319,   320,   321,   322,    -1,    -1,   325,   326,    -1,
     328,    -1,   330,    -1,   332,   333,   334,   335,   336,   337,
     338,   339,   340,    -1,    -1,   343,   344,    -1,    -1,   347,
     348,   349,   350,    -1,    -1,    -1,   354,   355,    -1,    -1,
      -1,   359,    -1,   361,   362,   363,    -1,   365,   366,   367,
      -1,   369,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   379,   380,   381,    -1,   383,   384,    -1,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,    -1,    -1,
     398,   399,   400,    -1,   402,    -1,   404,   405,   406,   407,
     408,    -1,   410,   411,   412,    -1,    -1,   415,    -1,    -1,
      -1,   419,   420,   421,   422,   423,    -1,    -1,   426,   427,
     428,   429,   430,    -1,   432,   433,    -1,   435,   436,   437,
      -1,    -1,   440,    -1,   442,    -1,   444,   445,    -1,   447,
     448,   449,    -1,   451,    -1,    -1,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,   467,
      -1,    -1,    -1,   471,   472,   473,   474,    -1,    -1,    -1,
     478,    -1,    -1,    -1,   482,    -1,   484,   485,   486,   487,
      -1,   489,   490,   491,   492,   493,    -1,    -1,    -1,    -1,
      -1,   499,   500,   501,    -1,   503,   504,    -1,   506,    -1,
      -1,   509,    -1,    -1,   512,   513,   514,   515,   516,   517,
      -1,    -1,   520,   521,    -1,   523,   524,   525,   526,   527,
     528,    -1,    -1,   531,   532,   533,   534,    -1,   536,   537,
      -1,    -1,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,   549,   550,   551,   552,    -1,    -1,    -1,    -1,    -1,
     558,   559,    -1,    -1,    -1,   563,   564,   565,   566,    -1,
     568,   569,    -1,   571,   572,    -1,   574,   575,    -1,    -1,
     578,    -1,    -1,   581,    -1,   583,    -1,   585,   586,    -1,
      -1,    -1,    -1,    -1,    -1,   593,    -1,    -1,   596,    -1,
      -1,    -1,   600,   601,   602,   603,   604,    -1,    -1,    -1,
      -1,    -1,    -1,   611,   612,    -1,   614,   615,   616,    -1,
       5,   619,     7,     8,     9,    10,    11,    -1,    -1,    14,
      -1,    -1,    -1,    18,    -1,    -1,    -1,    -1,    23,    24,
      25,    26,    27,    -1,    -1,    30,    -1,    -1,    -1,    34,
      -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,
      45,    -1,    -1,    -1,    -1,    -1,    51,    52,    -1,    54,
      55,    -1,    57,    -1,    -1,    -1,    -1,    62,    63,    64,
      65,    66,    67,    -1,    69,    70,    -1,    72,    73,    -1,
      75,    -1,    77,    78,    79,    80,    -1,    82,    83,    -1,
      85,    86,    87,    -1,    89,    -1,    -1,    -1,    93,    -1,
      -1,    96,    -1,    98,    -1,    -1,   101,    -1,    -1,    -1,
     105,   106,   107,    -1,    -1,   110,    -1,    -1,    -1,    -1,
     115,    -1,    -1,    -1,    -1,    -1,   121,   122,    -1,   124,
      -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,   134,
      -1,    -1,    -1,    -1,    -1,    -1,   141,   142,   143,    -1,
     145,   146,   147,    -1,   149,   150,    -1,   152,   153,   154,
      -1,    -1,   157,   158,    -1,   160,   161,   162,   163,   164,
      -1,    -1,    -1,   168,   169,   170,   171,   172,    -1,    -1,
     175,   176,   177,   178,   179,   180,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   188,    -1,   190,    -1,   192,    -1,   194,
     195,   196,   197,    -1,   199,    -1,   201,    -1,    -1,    -1,
      -1,   206,    -1,    -1,    -1,    -1,    -1,   212,    -1,    -1,
      -1,   216,   217,   218,   219,   220,    -1,   222,   223,   224,
      -1,    -1,   227,    -1,    -1,    -1,    -1,   232,    -1,    -1,
      -1,    -1,   237,    -1,    -1,    -1,   241,   242,    -1,   244,
     245,   246,    -1,    -1,   249,    -1,    -1,    -1,   253,    -1,
      -1,   256,   257,    -1,   259,   260,    -1,    -1,    -1,    -1,
      -1,   266,   267,    -1,   269,    -1,   271,    -1,   273,   274,
      -1,    -1,    -1,    -1,   279,    -1,    -1,   282,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,    -1,   302,   303,   304,
      -1,   306,   307,   308,   309,    -1,   311,   312,    -1,    -1,
      -1,    -1,   317,   318,   319,   320,   321,   322,    -1,    -1,
     325,   326,    -1,   328,    -1,   330,    -1,   332,   333,   334,
     335,   336,   337,   338,   339,   340,    -1,    -1,   343,   344,
      -1,    -1,   347,   348,   349,   350,    -1,    -1,    -1,    -1,
     355,    -1,    -1,    -1,   359,    -1,   361,   362,   363,    -1,
     365,   366,   367,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   380,   381,    -1,    -1,   384,
      -1,   386,   387,   388,   389,   390,   391,   392,   393,   394,
      -1,    -1,    -1,    -1,   399,   400,    -1,   402,    -1,   404,
     405,   406,   407,   408,    -1,   410,   411,   412,    -1,    -1,
     415,    -1,    -1,    -1,   419,   420,   421,   422,   423,    -1,
      -1,   426,   427,   428,   429,   430,    -1,   432,    -1,    -1,
     435,    -1,   437,   438,    -1,   440,    -1,    -1,    -1,   444,
      -1,    -1,   447,   448,   449,   450,   451,    -1,    -1,    -1,
     455,   456,   457,   458,   459,   460,   461,    -1,   463,   464,
      -1,   466,    -1,    -1,    -1,    -1,   471,   472,   473,    -1,
      -1,    -1,    -1,   478,    -1,    -1,    -1,   482,    -1,    -1,
     485,    -1,   487,    -1,   489,    -1,    -1,   492,   493,    -1,
      -1,    -1,    -1,    -1,   499,   500,   501,    -1,   503,   504,
      -1,   506,    -1,    -1,   509,    -1,    -1,   512,    -1,   514,
     515,   516,   517,    -1,    -1,    -1,   521,    -1,   523,   524,
     525,   526,   527,   528,    -1,    -1,   531,   532,   533,   534,
      -1,   536,   537,    -1,    -1,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,   549,   550,   551,   552,    -1,    -1,
      -1,    -1,    -1,   558,   559,    -1,    -1,    -1,    -1,   564,
     565,   566,    -1,   568,   569,    -1,   571,   572,    -1,    -1,
      -1,    -1,    -1,   578,    -1,    -1,   581,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,    -1,    -1,    -1,   593,    -1,
      -1,   596,    -1,    -1,    -1,   600,   601,   602,   603,   604,
      -1,    -1,   607,    -1,    -1,    -1,   611,    -1,    -1,   614,
      -1,   616,    -1,     5,   619,     7,     8,     9,    10,    11,
      -1,    -1,    14,    -1,    -1,    -1,    18,    -1,    -1,    -1,
      -1,    23,    24,    25,    26,    27,    -1,    -1,    30,    -1,
      -1,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    41,
      42,    43,    -1,    45,    -1,    -1,    -1,    -1,    -1,    51,
      52,    -1,    54,    55,    -1,    57,    -1,    -1,    -1,    -1,
      62,    63,    64,    65,    66,    67,    -1,    69,    70,    -1,
      72,    73,    -1,    75,    -1,    77,    78,    79,    80,    -1,
      82,    83,    -1,    85,    86,    87,    -1,    89,    -1,    -1,
      -1,    93,    -1,    -1,    96,    -1,    98,    -1,    -1,   101,
      -1,    -1,    -1,   105,   106,   107,    -1,    -1,   110,    -1,
      -1,    -1,    -1,   115,    -1,    -1,    -1,    -1,    -1,   121,
     122,    -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,
     132,   133,   134,    -1,    -1,    -1,    -1,    -1,    -1,   141,
     142,   143,    -1,   145,    -1,   147,    -1,   149,   150,    -1,
     152,   153,   154,    -1,    -1,   157,   158,    -1,   160,   161,
     162,   163,   164,    -1,    -1,    -1,   168,   169,   170,   171,
     172,    -1,    -1,   175,   176,   177,   178,   179,   180,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   188,    -1,   190,    -1,
     192,    -1,   194,   195,   196,   197,    -1,   199,    -1,   201,
      -1,    -1,    -1,    -1,   206,    -1,    -1,    -1,    -1,    -1,
     212,    -1,    -1,    -1,   216,   217,   218,   219,   220,    -1,
     222,   223,   224,    -1,    -1,   227,    -1,    -1,    -1,    -1,
     232,    -1,    -1,    -1,    -1,   237,    -1,    -1,    -1,   241,
     242,    -1,   244,   245,   246,    -1,    -1,   249,    -1,    -1,
      -1,   253,    -1,    -1,   256,   257,    -1,   259,   260,    -1,
      -1,    -1,    -1,    -1,   266,   267,    -1,   269,    -1,   271,
      -1,   273,   274,    -1,    -1,    -1,    -1,   279,    -1,    -1,
     282,    -1,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,    -1,
     302,   303,   304,    -1,   306,   307,   308,   309,    -1,   311,
     312,    -1,    -1,    -1,    -1,   317,   318,   319,   320,   321,
     322,    -1,    -1,   325,   326,    -1,   328,    -1,   330,    -1,
     332,   333,   334,   335,   336,   337,   338,   339,   340,    -1,
      -1,   343,   344,    -1,    -1,   347,   348,   349,   350,    -1,
      -1,    -1,    -1,   355,    -1,    -1,    -1,   359,    -1,   361,
     362,   363,    -1,   365,   366,   367,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   380,   381,
      -1,    -1,   384,    -1,   386,   387,   388,   389,   390,   391,
     392,   393,   394,    -1,    -1,    -1,    -1,   399,   400,    -1,
     402,    -1,   404,   405,   406,   407,   408,    -1,   410,   411,
     412,    -1,    -1,   415,    -1,    -1,    -1,   419,   420,   421,
     422,   423,    -1,    -1,   426,   427,   428,   429,   430,    -1,
     432,    -1,    -1,   435,    -1,   437,   438,    -1,   440,    -1,
      -1,    -1,   444,    -1,    -1,   447,   448,   449,   450,   451,
      -1,    -1,    -1,   455,   456,   457,   458,   459,   460,   461,
      -1,   463,   464,    -1,   466,    -1,    -1,    -1,    -1,   471,
     472,   473,    -1,    -1,    -1,    -1,   478,    -1,    -1,    -1,
     482,    -1,    -1,   485,    -1,   487,    -1,   489,    -1,    -1,
     492,   493,    -1,    -1,    -1,    -1,    -1,   499,   500,   501,
      -1,   503,   504,    -1,   506,    -1,    -1,   509,    -1,    -1,
     512,    -1,   514,   515,   516,   517,    -1,    -1,    -1,   521,
      -1,   523,   524,   525,   526,   527,   528,    -1,    -1,   531,
     532,   533,   534,    -1,   536,   537,    -1,    -1,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,   549,   550,   551,
     552,    -1,    -1,    -1,    -1,    -1,   558,   559,    -1,    -1,
      -1,    -1,   564,   565,   566,    -1,   568,   569,    -1,   571,
     572,    -1,    -1,    -1,    -1,    -1,   578,    -1,    -1,   581,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,    -1,    -1,
      -1,   593,    -1,    -1,   596,    -1,    -1,    -1,   600,   601,
     602,   603,   604,   605,    -1,   607,    -1,    -1,    -1,   611,
      -1,    -1,   614,    -1,   616,    -1,     5,   619,     7,     8,
       9,    10,    11,    -1,    -1,    14,    -1,    -1,    -1,    18,
      -1,    -1,    -1,    -1,    23,    24,    25,    26,    27,    -1,
      -1,    30,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,
      -1,    -1,    41,    42,    43,    -1,    45,    -1,    -1,    -1,
      -1,    -1,    51,    52,    -1,    54,    55,    -1,    57,    -1,
      -1,    -1,    -1,    62,    63,    64,    65,    66,    67,    -1,
      69,    70,    -1,    72,    73,    -1,    75,    -1,    77,    78,
      79,    80,    -1,    82,    83,    -1,    85,    86,    87,    -1,
      89,    -1,    -1,    -1,    93,    -1,    -1,    96,    -1,    98,
      -1,    -1,   101,    -1,    -1,    -1,   105,   106,   107,    -1,
      -1,   110,    -1,    -1,    -1,    -1,   115,    -1,    -1,    -1,
      -1,    -1,   121,   122,    -1,   124,    -1,    -1,    -1,   128,
      -1,   130,   131,   132,   133,   134,    -1,    -1,    -1,    -1,
      -1,    -1,   141,   142,   143,    -1,   145,    -1,   147,    -1,
     149,   150,    -1,   152,   153,   154,    -1,    -1,   157,   158,
      -1,   160,   161,   162,   163,   164,    -1,    -1,    -1,   168,
     169,   170,   171,   172,    -1,    -1,   175,   176,   177,   178,
     179,   180,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   188,
      -1,   190,    -1,   192,    -1,   194,   195,   196,   197,    -1,
     199,    -1,   201,    -1,    -1,    -1,    -1,   206,    -1,    -1,
      -1,    -1,    -1,   212,    -1,    -1,    -1,   216,   217,   218,
     219,   220,    -1,   222,   223,   224,    -1,    -1,   227,    -1,
      -1,    -1,    -1,   232,    -1,    -1,    -1,    -1,   237,    -1,
      -1,    -1,   241,   242,    -1,   244,   245,   246,    -1,    -1,
     249,    -1,    -1,    -1,   253,    -1,    -1,   256,   257,    -1,
     259,   260,    -1,    -1,    -1,    -1,    -1,   266,   267,    -1,
     269,    -1,   271,    -1,   273,   274,    -1,    -1,    -1,    -1,
     279,    -1,    -1,   282,    -1,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,    -1,   302,   303,   304,    -1,   306,   307,   308,
     309,    -1,   311,   312,    -1,    -1,    -1,    -1,   317,   318,
     319,   320,   321,   322,    -1,    -1,   325,   326,    -1,   328,
      -1,   330,    -1,   332,   333,   334,   335,   336,   337,   338,
     339,   340,    -1,    -1,   343,   344,    -1,    -1,   347,   348,
     349,   350,    -1,    -1,    -1,    -1,   355,    -1,    -1,    -1,
     359,    -1,   361,   362,   363,    -1,   365,   366,   367,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   380,   381,    -1,    -1,   384,    -1,   386,   387,   388,
     389,   390,   391,   392,   393,   394,    -1,    -1,    -1,    -1,
     399,   400,    -1,   402,    -1,   404,   405,   406,   407,   408,
      -1,   410,   411,   412,    -1,    -1,   415,    -1,    -1,    -1,
     419,   420,   421,   422,   423,    -1,    -1,   426,   427,   428,
     429,   430,    -1,   432,    -1,    -1,   435,    -1,   437,   438,
      -1,   440,    -1,    -1,    -1,   444,    -1,    -1,   447,   448,
     449,   450,   451,    -1,    -1,    -1,   455,   456,   457,   458,
     459,   460,   461,    -1,   463,   464,    -1,   466,    -1,    -1,
      -1,    -1,   471,   472,   473,    -1,    -1,    -1,    -1,   478,
      -1,    -1,    -1,   482,    -1,    -1,   485,    -1,   487,    -1,
     489,    -1,    -1,   492,   493,    -1,    -1,    -1,    -1,    -1,
     499,   500,   501,    -1,   503,   504,    -1,   506,    -1,    -1,
     509,    -1,    -1,   512,    -1,   514,   515,   516,   517,    -1,
      -1,    -1,   521,    -1,   523,   524,   525,   526,   527,   528,
      -1,    -1,   531,   532,   533,   534,    -1,   536,   537,    -1,
      -1,   540,   541,   542,   543,    -1,    -1,   546,   547,    -1,
     549,   550,   551,   552,    -1,    -1,    -1,    -1,    -1,   558,
     559,    -1,    -1,    -1,    -1,   564,   565,   566,    -1,   568,
     569,    -1,   571,   572,    -1,    -1,    -1,    -1,    -1,   578,
      -1,    -1,   581,    -1,    -1,    -1,   585,   586,    -1,    -1,
      -1,    -1,    -1,    -1,   593,    -1,    -1,   596,    -1,    -1,
      -1,   600,   601,   602,   603,   604,   605,    -1,   607,    -1,
      -1,    -1,   611,    -1,    -1,   614,    -1,   616,    -1,     5,
     619,     7,     8,     9,    10,    11,    -1,    -1,    14,    -1,
      -1,    -1,    18,    -1,    -1,    -1,    -1,    23,    24,    25,
      26,    27,    -1,    -1,    30,    -1,    -1,    -1,    34,    -1,
      -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,    45,
      -1,    -1,    -1,    -1,    -1,    51,    52,    -1,    54,    55,
      -1,    57,    -1,    -1,    -1,    -1,    62,    63,    64,    65,
      66,    67,    -1,    69,    70,    -1,    72,    73,    -1,    75,
      -1,    77,    78,    79,    80,    -1,    82,    83,    -1,    85,
      86,    87,    -1,    89,    -1,    -1,    -1,    93,    -1,    -1,
      96,    -1,    98,    -1,    -1,   101,    -1,    -1,    -1,   105,
     106,   107,    -1,    -1,   110,    -1,    -1,    -1,    -1,   115,
      -1,    -1,    -1,    -1,    -1,   121,   122,    -1,   124,    -1,
      -1,    -1,   128,    -1,   130,   131,   132,   133,   134,    -1,
      -1,    -1,    -1,    -1,    -1,   141,   142,   143,    -1,    -1,
      -1,   147,    -1,   149,   150,    -1,   152,   153,   154,    -1,
      -1,   157,   158,    -1,   160,   161,   162,   163,   164,    -1,
      -1,    -1,   168,   169,   170,   171,   172,    -1,    -1,   175,
     176,   177,   178,   179,   180,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   188,    -1,   190,    -1,   192,    -1,   194,   195,
     196,   197,    -1,   199,    -1,   201,    -1,    -1,    -1,    -1,
     206,    -1,    -1,    -1,    -1,    -1,   212,    -1,    -1,    -1,
     216,   217,   218,   219,   220,    -1,   222,   223,   224,    -1,
      -1,   227,    -1,    -1,    -1,    -1,   232,    -1,    -1,    -1,
      -1,   237,    -1,    -1,    -1,   241,   242,    -1,   244,   245,
     246,    -1,    -1,   249,    -1,    -1,    -1,   253,    -1,    -1,
     256,   257,    -1,   259,   260,    -1,    -1,    -1,    -1,    -1,
     266,   267,    -1,   269,    -1,   271,    -1,   273,   274,    -1,
      -1,    -1,    -1,   279,    -1,    -1,   282,    -1,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,    -1,   302,   303,   304,    -1,
     306,   307,   308,   309,    -1,   311,   312,    -1,    -1,    -1,
      -1,   317,   318,   319,   320,   321,   322,    -1,    -1,   325,
     326,    -1,   328,    -1,   330,    -1,   332,   333,   334,   335,
     336,   337,   338,   339,   340,    -1,    -1,   343,   344,    -1,
      -1,   347,   348,   349,   350,    -1,    -1,    -1,    -1,   355,
      -1,    -1,    -1,   359,    -1,   361,   362,   363,    -1,   365,
     366,   367,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   380,   381,    -1,    -1,   384,    -1,
     386,   387,   388,   389,   390,   391,   392,   393,   394,    -1,
      -1,    -1,    -1,   399,   400,    -1,   402,    -1,   404,   405,
     406,   407,   408,    -1,   410,   411,   412,    -1,    -1,   415,
      -1,    -1,    -1,   419,   420,   421,   422,   423,    -1,    -1,
     426,   427,   428,   429,   430,    -1,   432,    -1,    -1,   435,
      -1,   437,   438,    -1,   440,    -1,    -1,    -1,   444,    -1,
      -1,   447,   448,   449,   450,   451,    -1,    -1,    -1,   455,
     456,   457,   458,   459,   460,   461,    -1,   463,   464,    -1,
     466,    -1,    -1,    -1,    -1,   471,   472,   473,    -1,    -1,
      -1,    -1,   478,    -1,    -1,    -1,   482,    -1,    -1,   485,
      -1,   487,    -1,   489,    -1,    -1,   492,   493,    -1,    -1,
      -1,    -1,    -1,   499,   500,   501,    -1,   503,   504,    -1,
     506,    -1,    -1,   509,    -1,    -1,   512,    -1,   514,   515,
     516,   517,    -1,    -1,    -1,   521,    -1,   523,   524,   525,
     526,   527,   528,    -1,    -1,   531,   532,   533,   534,    -1,
     536,   537,    -1,    -1,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,   549,   550,   551,   552,    -1,    -1,    -1,
      -1,    -1,   558,   559,    -1,    -1,    -1,    -1,   564,   565,
     566,    -1,   568,   569,    -1,   571,   572,    -1,    -1,    -1,
      -1,    -1,   578,    -1,    -1,   581,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,    -1,    -1,    -1,   593,    -1,    -1,
     596,    -1,    -1,    -1,   600,   601,   602,   603,   604,    -1,
      -1,   607,    -1,    -1,    -1,   611,    -1,    -1,   614,    -1,
     616,    -1,     5,   619,     7,     8,     9,    10,    11,    -1,
      -1,    14,    -1,    -1,    -1,    18,    -1,    -1,    -1,    -1,
      23,    24,    25,    26,    27,    -1,    -1,    30,    -1,    -1,
      -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    41,    42,
      43,    -1,    45,    -1,    -1,    -1,    -1,    -1,    51,    52,
      -1,    54,    55,    -1,    57,    -1,    -1,    -1,    -1,    62,
      63,    64,    65,    66,    67,    -1,    69,    70,    -1,    72,
      73,    -1,    75,    -1,    77,    78,    79,    80,    -1,    82,
      83,    -1,    85,    86,    87,    -1,    89,    -1,    -1,    -1,
      93,    -1,    -1,    96,    -1,    98,    -1,    -1,   101,    -1,
      -1,    -1,   105,   106,   107,    -1,    -1,   110,    -1,    -1,
      -1,    -1,   115,    -1,    -1,    -1,    -1,    -1,   121,   122,
      -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,
     133,   134,    -1,    -1,    -1,    -1,    -1,    -1,   141,   142,
     143,    -1,    -1,    -1,   147,    -1,   149,   150,    -1,   152,
     153,   154,    -1,    -1,   157,   158,    -1,   160,   161,   162,
     163,   164,    -1,    -1,    -1,   168,   169,   170,   171,   172,
      -1,    -1,   175,   176,   177,   178,   179,   180,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   188,    -1,   190,    -1,   192,
      -1,   194,   195,   196,   197,    -1,   199,    -1,   201,    -1,
      -1,    -1,    -1,   206,    -1,    -1,    -1,    -1,    -1,   212,
      -1,    -1,    -1,   216,   217,   218,   219,   220,    -1,   222,
     223,   224,    -1,    -1,   227,    -1,    -1,    -1,    -1,   232,
      -1,    -1,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,
      -1,   244,   245,   246,    -1,    -1,   249,    -1,    -1,    -1,
     253,    -1,    -1,   256,   257,    -1,   259,   260,    -1,    -1,
      -1,    -1,    -1,   266,   267,    -1,   269,    -1,   271,    -1,
     273,   274,    -1,    -1,    -1,    -1,   279,    -1,    -1,   282,
      -1,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,    -1,   302,
     303,   304,    -1,   306,   307,   308,   309,    -1,   311,   312,
      -1,    -1,    -1,    -1,   317,   318,   319,   320,   321,   322,
      -1,    -1,   325,   326,    -1,   328,    -1,   330,    -1,   332,
     333,   334,   335,   336,   337,   338,   339,   340,    -1,    -1,
     343,   344,    -1,    -1,   347,   348,   349,   350,    -1,    -1,
      -1,    -1,   355,    -1,    -1,    -1,   359,    -1,   361,   362,
     363,    -1,   365,   366,   367,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   380,   381,    -1,
      -1,   384,    -1,   386,   387,   388,   389,   390,   391,   392,
     393,   394,    -1,    -1,    -1,    -1,   399,   400,    -1,   402,
      -1,   404,   405,   406,   407,   408,    -1,   410,   411,   412,
      -1,    -1,   415,    -1,    -1,    -1,   419,   420,   421,   422,
     423,    -1,    -1,   426,   427,   428,   429,   430,    -1,   432,
      -1,    -1,   435,    -1,   437,   438,    -1,   440,    -1,    -1,
      -1,   444,    -1,    -1,   447,   448,   449,   450,   451,    -1,
      -1,    -1,   455,   456,   457,   458,   459,   460,   461,    -1,
     463,   464,    -1,   466,    -1,    -1,    -1,    -1,   471,   472,
     473,    -1,    -1,    -1,    -1,   478,    -1,    -1,    -1,   482,
      -1,    -1,   485,    -1,   487,    -1,   489,    -1,    -1,   492,
     493,    -1,    -1,    -1,    -1,    -1,   499,   500,   501,    -1,
     503,   504,    -1,   506,    -1,    -1,   509,    -1,    -1,   512,
      -1,   514,   515,   516,   517,    -1,    -1,    -1,   521,    -1,
     523,   524,   525,   526,   527,   528,    -1,    -1,   531,   532,
     533,   534,    -1,   536,   537,    -1,    -1,   540,   541,   542,
     543,    -1,    -1,   546,   547,    -1,   549,   550,   551,   552,
      -1,    -1,    -1,    -1,    -1,   558,   559,    -1,    -1,    -1,
      -1,   564,   565,   566,    -1,   568,   569,    -1,   571,   572,
      -1,    -1,    -1,    -1,    -1,   578,    -1,    -1,   581,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,    -1,    -1,    -1,
     593,    -1,    -1,   596,    -1,    -1,    -1,   600,   601,   602,
     603,   604,    -1,    -1,   607,    -1,    -1,    -1,   611,    -1,
      -1,   614,    -1,   616,    -1,     5,   619,     7,     8,     9,
      10,    11,    -1,    -1,    14,    -1,    -1,    -1,    18,    -1,
      -1,    -1,    -1,    23,    24,    25,    26,    27,    -1,    -1,
      30,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,    -1,
      -1,    41,    42,    43,    -1,    45,    -1,    -1,    -1,    -1,
      -1,    51,    52,    -1,    54,    55,    -1,    57,    -1,    -1,
      -1,    -1,    62,    63,    64,    65,    66,    67,    -1,    69,
      70,    -1,    72,    73,    -1,    75,    -1,    77,    78,    79,
      80,    -1,    82,    83,    -1,    85,    86,    87,    -1,    89,
      -1,    -1,    -1,    93,    -1,    -1,    96,    -1,    98,    -1,
      -1,   101,    -1,    -1,    -1,   105,   106,   107,    -1,    -1,
     110,    -1,    -1,    -1,    -1,   115,    -1,    -1,    -1,    -1,
      -1,   121,   122,    -1,   124,    -1,    -1,    -1,   128,    -1,
     130,   131,   132,   133,   134,    -1,    -1,    -1,    -1,    -1,
      -1,   141,   142,   143,    -1,    -1,    -1,   147,    -1,   149,
     150,    -1,   152,   153,   154,    -1,    -1,   157,   158,    -1,
     160,   161,   162,   163,   164,    -1,    -1,    -1,   168,   169,
     170,   171,   172,    -1,    -1,   175,   176,   177,   178,   179,
     180,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   188,    -1,
     190,    -1,   192,    -1,   194,   195,   196,   197,    -1,   199,
      -1,   201,    -1,    -1,    -1,    -1,   206,    -1,    -1,    -1,
      -1,    -1,   212,    -1,    -1,    -1,   216,   217,   218,   219,
     220,    -1,   222,   223,   224,    -1,    -1,   227,    -1,    -1,
      -1,    -1,   232,    -1,    -1,    -1,    -1,   237,    -1,    -1,
      -1,   241,   242,    -1,   244,   245,   246,    -1,    -1,   249,
      -1,    -1,    -1,   253,    -1,    -1,   256,   257,    -1,   259,
     260,    -1,    -1,    -1,    -1,    -1,   266,   267,    -1,   269,
      -1,   271,    -1,   273,   274,    -1,    -1,    -1,    -1,   279,
      -1,    -1,   282,    -1,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,    -1,   302,   303,   304,    -1,   306,   307,   308,   309,
      -1,   311,   312,    -1,    -1,    -1,    -1,   317,   318,   319,
     320,   321,   322,    -1,    -1,   325,   326,    -1,   328,    -1,
     330,    -1,   332,   333,   334,   335,   336,   337,   338,   339,
     340,    -1,    -1,   343,   344,    -1,    -1,   347,   348,   349,
     350,    -1,    -1,    -1,    -1,   355,    -1,    -1,    -1,   359,
      -1,   361,   362,   363,    -1,   365,   366,   367,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     380,   381,    -1,    -1,   384,    -1,   386,   387,   388,   389,
     390,   391,   392,   393,   394,    -1,    -1,    -1,    -1,   399,
     400,    -1,   402,    -1,   404,   405,   406,   407,   408,    -1,
     410,   411,   412,    -1,    -1,   415,    -1,    -1,    -1,   419,
     420,   421,   422,   423,    -1,    -1,   426,   427,   428,   429,
     430,    -1,   432,    -1,    -1,   435,    -1,   437,   438,    -1,
     440,    -1,    -1,    -1,   444,    -1,    -1,   447,   448,   449,
     450,   451,    -1,    -1,    -1,   455,   456,   457,   458,   459,
     460,   461,    -1,   463,   464,    -1,   466,    -1,    -1,    -1,
      -1,   471,   472,   473,    -1,    -1,    -1,    -1,   478,    -1,
      -1,    -1,   482,    -1,    -1,   485,    -1,   487,    -1,   489,
      -1,    -1,   492,   493,    -1,    -1,    -1,    -1,    -1,   499,
     500,   501,    -1,   503,   504,    -1,   506,    -1,    -1,   509,
      -1,    -1,   512,    -1,   514,   515,   516,   517,    -1,    -1,
      -1,   521,    -1,   523,   524,   525,   526,   527,   528,    -1,
      -1,   531,   532,   533,   534,    -1,   536,   537,    -1,    -1,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,   549,
     550,   551,   552,    -1,    -1,    -1,    -1,    -1,   558,   559,
      -1,    -1,    -1,    -1,   564,   565,   566,    -1,   568,   569,
      -1,   571,   572,    -1,    -1,    -1,    -1,    -1,   578,    -1,
      -1,   581,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
      -1,    -1,    -1,   593,    -1,    -1,   596,    -1,    -1,    -1,
     600,   601,   602,   603,   604,    -1,    -1,   607,    -1,    -1,
      -1,   611,    -1,    -1,   614,    -1,   616,    -1,     5,   619,
       7,     8,     9,    10,    11,    -1,    -1,    14,    -1,    -1,
      -1,    18,    -1,    -1,    -1,    -1,    23,    24,    25,    26,
      27,    -1,    -1,    30,    -1,    -1,    -1,    34,    -1,    -1,
      -1,    38,    -1,    -1,    41,    42,    43,    -1,    45,    -1,
      -1,    -1,    -1,    -1,    51,    52,    -1,    54,    55,    -1,
      57,    -1,    -1,    -1,    -1,    62,    63,    64,    65,    66,
      67,    -1,    69,    70,    -1,    72,    73,    -1,    75,    -1,
      77,    78,    79,    80,    -1,    82,    83,    -1,    85,    86,
      87,    -1,    89,    -1,    -1,    -1,    93,    -1,    -1,    96,
      -1,    98,    -1,    -1,   101,    -1,    -1,    -1,   105,   106,
     107,    -1,    -1,   110,    -1,    -1,    -1,    -1,   115,    -1,
      -1,    -1,    -1,    -1,   121,   122,    -1,   124,    -1,    -1,
      -1,   128,    -1,   130,   131,   132,   133,   134,    -1,    -1,
      -1,    -1,    -1,    -1,   141,   142,   143,    -1,    -1,    -1,
     147,    -1,   149,   150,    -1,   152,   153,   154,    -1,    -1,
     157,   158,    -1,   160,   161,   162,   163,   164,    -1,    -1,
      -1,   168,   169,   170,   171,   172,    -1,    -1,   175,   176,
     177,   178,   179,   180,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   188,    -1,   190,    -1,   192,    -1,   194,   195,   196,
     197,    -1,   199,    -1,   201,    -1,    -1,    -1,    -1,   206,
      -1,    -1,    -1,    -1,    -1,   212,    -1,    -1,    -1,   216,
     217,   218,   219,   220,    -1,   222,   223,   224,    -1,    -1,
     227,    -1,    -1,    -1,    -1,   232,    -1,    -1,    -1,    -1,
     237,    -1,    -1,    -1,   241,   242,    -1,   244,   245,   246,
      -1,    -1,   249,    -1,    -1,    -1,   253,    -1,    -1,   256,
     257,    -1,   259,   260,    -1,    -1,    -1,    -1,    -1,   266,
     267,    -1,   269,    -1,   271,    -1,   273,   274,    -1,    -1,
      -1,    -1,   279,    -1,    -1,   282,    -1,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,    -1,   302,   303,   304,    -1,   306,
     307,   308,   309,    -1,   311,   312,    -1,    -1,    -1,    -1,
     317,   318,   319,   320,   321,   322,    -1,    -1,   325,   326,
      -1,   328,    -1,   330,    -1,   332,   333,   334,   335,   336,
     337,   338,   339,   340,    -1,    -1,   343,   344,    -1,    -1,
     347,   348,   349,   350,    -1,    -1,    -1,    -1,   355,    -1,
      -1,    -1,   359,    -1,   361,   362,   363,    -1,   365,   366,
     367,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   380,   381,    -1,    -1,   384,    -1,   386,
     387,   388,   389,   390,   391,   392,   393,   394,    -1,    -1,
      -1,    -1,   399,   400,    -1,   402,    -1,   404,   405,   406,
     407,   408,    -1,   410,   411,   412,    -1,    -1,   415,    -1,
      -1,    -1,   419,   420,   421,   422,   423,    -1,    -1,   426,
     427,   428,   429,   430,    -1,   432,    -1,    -1,   435,    -1,
     437,   438,    -1,   440,    -1,    -1,    -1,   444,    -1,    -1,
     447,   448,   449,   450,   451,    -1,    -1,    -1,   455,   456,
     457,   458,   459,   460,   461,    -1,   463,   464,    -1,   466,
      -1,    -1,    -1,    -1,   471,   472,   473,    -1,    -1,    -1,
      -1,   478,    -1,    -1,    -1,   482,    -1,    -1,   485,    -1,
     487,    -1,   489,    -1,    -1,   492,   493,    -1,    -1,    -1,
      -1,    -1,   499,   500,   501,    -1,   503,   504,    -1,   506,
      -1,    -1,   509,    -1,    -1,   512,    -1,   514,   515,   516,
     517,    -1,    -1,    -1,   521,    -1,   523,   524,   525,   526,
     527,   528,    -1,    -1,   531,   532,   533,   534,    -1,   536,
     537,    -1,    -1,   540,   541,   542,   543,    -1,    -1,   546,
     547,    -1,   549,   550,   551,   552,    -1,    -1,    -1,    -1,
      -1,   558,   559,    -1,    -1,    -1,    -1,   564,   565,   566,
      -1,   568,   569,    -1,   571,   572,    -1,    -1,    -1,    -1,
      -1,   578,    -1,    -1,   581,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,    -1,    -1,    -1,   593,    -1,    -1,   596,
      -1,    -1,    -1,   600,   601,   602,   603,   604,    -1,    -1,
     607,    -1,    -1,    -1,   611,    -1,    -1,   614,    -1,   616,
      -1,     5,   619,     7,     8,     9,    10,    11,    -1,    -1,
      14,    -1,    -1,    -1,    18,    -1,    -1,    -1,    -1,    23,
      24,    25,    26,    27,    -1,    -1,    30,    -1,    -1,    -1,
      34,    -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,
      -1,    45,    -1,    -1,    -1,    -1,    -1,    51,    52,    -1,
      54,    55,    -1,    57,    -1,    -1,    -1,    -1,    62,    63,
      64,    65,    66,    67,    -1,    69,    70,    -1,    72,    73,
      -1,    75,    -1,    77,    78,    79,    80,    -1,    82,    83,
      -1,    85,    86,    87,    -1,    89,    -1,    -1,    -1,    93,
      -1,    -1,    96,    -1,    98,    -1,    -1,   101,    -1,    -1,
      -1,   105,   106,   107,    -1,    -1,   110,    -1,    -1,    -1,
      -1,   115,    -1,    -1,    -1,    -1,    -1,   121,   122,    -1,
     124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,
     134,    -1,    -1,    -1,    -1,    -1,    -1,   141,   142,   143,
      -1,    -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,
     154,    -1,    -1,   157,   158,    -1,   160,   161,   162,   163,
     164,    -1,    -1,    -1,   168,   169,   170,   171,   172,    -1,
      -1,   175,   176,   177,   178,   179,   180,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   188,    -1,   190,    -1,   192,    -1,
     194,   195,   196,   197,    -1,   199,    -1,   201,    -1,    -1,
      -1,    -1,   206,    -1,    -1,    -1,    -1,    -1,   212,    -1,
      -1,    -1,   216,   217,   218,   219,   220,    -1,   222,   223,
     224,    -1,    -1,   227,    -1,    -1,    -1,    -1,   232,    -1,
      -1,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,    -1,
     244,   245,   246,    -1,    -1,   249,    -1,    -1,    -1,   253,
      -1,    -1,   256,   257,    -1,   259,   260,    -1,    -1,    -1,
      -1,    -1,   266,   267,    -1,   269,    -1,   271,    -1,   273,
     274,    -1,    -1,    -1,    -1,   279,    -1,    -1,   282,    -1,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,    -1,   302,   303,
     304,    -1,   306,   307,   308,   309,    -1,   311,   312,    -1,
      -1,    -1,    -1,   317,   318,   319,   320,   321,   322,    -1,
      -1,   325,   326,    -1,   328,    -1,   330,    -1,   332,   333,
     334,   335,   336,   337,   338,   339,   340,    -1,    -1,   343,
     344,    -1,    -1,   347,   348,   349,   350,    -1,    -1,    -1,
      -1,   355,    -1,    -1,    -1,   359,    -1,   361,   362,   363,
      -1,   365,   366,   367,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   380,   381,    -1,    -1,
     384,    -1,   386,   387,   388,   389,   390,   391,   392,   393,
     394,    -1,    -1,    -1,    -1,   399,   400,    -1,   402,    -1,
     404,   405,   406,   407,   408,    -1,   410,   411,   412,    -1,
      -1,   415,    -1,    -1,    -1,   419,   420,   421,   422,   423,
      -1,    -1,   426,   427,   428,   429,   430,    -1,   432,    -1,
      -1,   435,    -1,   437,   438,    -1,   440,    -1,    -1,    -1,
     444,    -1,    -1,   447,   448,   449,   450,   451,    -1,    -1,
      -1,   455,   456,   457,   458,   459,   460,   461,    -1,   463,
     464,    -1,   466,    -1,    -1,    -1,    -1,   471,   472,   473,
      -1,    -1,    -1,    -1,   478,    -1,    -1,    -1,   482,    -1,
      -1,   485,    -1,   487,    -1,   489,    -1,    -1,   492,   493,
      -1,    -1,    -1,    -1,    -1,   499,   500,   501,    -1,   503,
     504,    -1,   506,    -1,    -1,   509,    -1,    -1,   512,    -1,
     514,   515,   516,   517,    -1,    -1,    -1,   521,    -1,   523,
     524,   525,   526,   527,   528,    -1,    -1,   531,   532,   533,
     534,    -1,   536,   537,    -1,    -1,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,   549,   550,   551,   552,    -1,
      -1,    -1,    -1,    -1,   558,   559,    -1,    -1,    -1,    -1,
     564,   565,   566,    -1,   568,   569,    -1,   571,   572,    -1,
      -1,    -1,    -1,    -1,   578,    -1,    -1,   581,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,    -1,    -1,    -1,   593,
      -1,    -1,   596,    -1,    -1,    -1,   600,   601,   602,   603,
     604,    -1,    -1,   607,    -1,    -1,    -1,   611,    -1,    -1,
     614,    -1,   616,    -1,     5,   619,     7,     8,     9,    10,
      11,    -1,    -1,    14,    -1,    -1,    -1,    18,    -1,    -1,
      -1,    -1,    23,    24,    25,    26,    27,    -1,    -1,    30,
      -1,    -1,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,
      41,    42,    43,    -1,    45,    -1,    -1,    -1,    -1,    -1,
      51,    52,    -1,    54,    55,    -1,    57,    -1,    -1,    -1,
      -1,    62,    63,    64,    65,    66,    67,    -1,    69,    70,
      -1,    72,    73,    -1,    75,    -1,    77,    78,    79,    80,
      -1,    82,    83,    -1,    85,    86,    87,    -1,    89,    -1,
      -1,    -1,    93,    -1,    -1,    96,    -1,    98,    -1,    -1,
     101,    -1,    -1,    -1,   105,   106,   107,    -1,    -1,   110,
      -1,    -1,    -1,    -1,   115,    -1,    -1,    -1,    -1,    -1,
     121,   122,    -1,   124,    -1,    -1,    -1,   128,    -1,   130,
     131,   132,   133,   134,    -1,    -1,    -1,    -1,    -1,    -1,
     141,   142,   143,    -1,    -1,    -1,   147,    -1,    -1,   150,
      -1,   152,   153,   154,    -1,    -1,   157,   158,    -1,   160,
     161,   162,   163,   164,    -1,    -1,    -1,   168,   169,   170,
     171,   172,    -1,    -1,   175,   176,   177,   178,   179,   180,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   188,    -1,   190,
      -1,   192,    -1,   194,   195,   196,   197,    -1,   199,    -1,
     201,    -1,    -1,    -1,    -1,   206,    -1,    -1,    -1,    -1,
      -1,   212,    -1,    -1,    -1,   216,   217,   218,   219,   220,
      -1,   222,   223,   224,    -1,    -1,   227,    -1,    -1,    -1,
      -1,   232,    -1,    -1,    -1,    -1,   237,    -1,    -1,    -1,
     241,   242,    -1,   244,   245,   246,    -1,    -1,   249,    -1,
      -1,    -1,   253,    -1,    -1,   256,   257,    -1,   259,   260,
      -1,    -1,    -1,    -1,    -1,   266,   267,    -1,   269,    -1,
     271,    -1,   273,   274,    -1,    -1,    -1,    -1,   279,    -1,
      -1,   282,    -1,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
      -1,   302,   303,   304,    -1,   306,   307,   308,   309,    -1,
     311,   312,    -1,    -1,    -1,    -1,   317,   318,   319,   320,
     321,   322,    -1,    -1,   325,   326,    -1,   328,    -1,   330,
      -1,   332,   333,   334,   335,   336,   337,   338,   339,   340,
      -1,    -1,   343,   344,    -1,    -1,   347,   348,   349,   350,
      -1,    -1,    -1,    -1,   355,    -1,    -1,    -1,   359,    -1,
     361,   362,   363,    -1,   365,   366,   367,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   380,
     381,    -1,    -1,   384,    -1,   386,   387,   388,   389,   390,
     391,   392,   393,   394,    -1,    -1,    -1,    -1,   399,   400,
      -1,   402,    -1,   404,   405,   406,   407,   408,    -1,   410,
     411,   412,    -1,    -1,   415,    -1,    -1,    -1,   419,   420,
     421,   422,   423,    -1,    -1,   426,   427,   428,   429,   430,
      -1,   432,    -1,    -1,   435,    -1,   437,   438,    -1,   440,
      -1,    -1,    -1,   444,    -1,    -1,   447,   448,   449,   450,
     451,    -1,    -1,    -1,   455,   456,   457,   458,   459,   460,
     461,    -1,   463,   464,    -1,   466,    -1,    -1,    -1,    -1,
     471,   472,   473,    -1,    -1,    -1,    -1,   478,    -1,    -1,
      -1,   482,    -1,    -1,   485,    -1,   487,    -1,   489,    -1,
      -1,   492,   493,    -1,    -1,    -1,    -1,    -1,   499,   500,
     501,    -1,   503,   504,    -1,   506,    -1,    -1,   509,    -1,
      -1,   512,    -1,   514,   515,   516,   517,    -1,    -1,    -1,
     521,    -1,   523,   524,   525,   526,   527,   528,    -1,    -1,
     531,   532,   533,   534,    -1,   536,   537,    -1,    -1,   540,
     541,   542,   543,    -1,    -1,   546,   547,    -1,   549,   550,
     551,   552,    -1,    -1,    -1,    -1,    -1,   558,   559,    -1,
      -1,    -1,    -1,   564,   565,   566,    -1,   568,   569,    -1,
     571,   572,    -1,    -1,    -1,    -1,    -1,   578,    -1,    -1,
     581,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,    -1,
      -1,    -1,   593,    -1,    -1,   596,    -1,    -1,    -1,   600,
     601,   602,   603,   604,    -1,    -1,   607,    -1,    -1,    -1,
     611,    -1,    -1,   614,    -1,   616,    -1,     5,   619,     7,
       8,     9,    10,    11,    -1,    -1,    14,    -1,    -1,    -1,
      18,    -1,    -1,    -1,    -1,    23,    24,    25,    26,    27,
      -1,    -1,    30,    -1,    -1,    -1,    34,    -1,    -1,    -1,
      38,    -1,    -1,    41,    42,    43,    -1,    45,    -1,    -1,
      -1,    -1,    -1,    51,    52,    -1,    54,    55,    -1,    57,
      -1,    -1,    -1,    -1,    62,    63,    64,    65,    66,    67,
      -1,    69,    70,    -1,    72,    73,    -1,    75,    -1,    77,
      78,    79,    80,    -1,    82,    83,    -1,    85,    86,    87,
      -1,    89,    -1,    -1,    -1,    93,    -1,    -1,    96,    -1,
      98,    -1,    -1,   101,    -1,    -1,    -1,   105,   106,   107,
      -1,    -1,   110,    -1,    -1,    -1,    -1,   115,    -1,    -1,
      -1,    -1,    -1,   121,   122,    -1,   124,    -1,    -1,    -1,
     128,    -1,   130,   131,   132,   133,   134,    -1,    -1,    -1,
      -1,    -1,    -1,   141,   142,   143,    -1,    -1,    -1,   147,
      -1,    -1,   150,    -1,   152,   153,   154,    -1,    -1,   157,
     158,    -1,   160,   161,   162,   163,   164,    -1,    -1,    -1,
     168,   169,   170,   171,   172,    -1,    -1,   175,   176,   177,
     178,   179,   180,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     188,    -1,   190,    -1,   192,    -1,   194,   195,   196,   197,
      -1,   199,    -1,   201,    -1,    -1,    -1,    -1,   206,    -1,
      -1,    -1,    -1,    -1,   212,    -1,    -1,    -1,   216,   217,
     218,   219,   220,    -1,   222,   223,   224,    -1,    -1,   227,
      -1,    -1,    -1,    -1,   232,    -1,    -1,    -1,    -1,   237,
      -1,    -1,    -1,   241,   242,    -1,   244,   245,   246,    -1,
      -1,   249,    -1,    -1,    -1,   253,    -1,    -1,   256,   257,
      -1,   259,   260,    -1,    -1,    -1,    -1,    -1,   266,   267,
      -1,   269,    -1,   271,    -1,   273,   274,    -1,    -1,    -1,
      -1,   279,    -1,    -1,   282,    -1,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,    -1,   302,   303,   304,    -1,   306,   307,
     308,   309,    -1,   311,   312,    -1,    -1,    -1,    -1,   317,
     318,   319,   320,   321,   322,    -1,    -1,   325,   326,    -1,
     328,    -1,   330,    -1,   332,   333,   334,   335,   336,   337,
     338,   339,   340,    -1,    -1,   343,   344,    -1,    -1,   347,
     348,   349,   350,    -1,    -1,    -1,    -1,   355,    -1,    -1,
      -1,   359,    -1,   361,   362,   363,    -1,   365,   366,   367,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   380,   381,    -1,    -1,   384,    -1,   386,   387,
     388,   389,   390,   391,   392,   393,   394,    -1,    -1,    -1,
      -1,   399,   400,    -1,   402,    -1,   404,   405,   406,   407,
     408,    -1,   410,   411,   412,    -1,    -1,   415,    -1,    -1,
      -1,   419,   420,   421,   422,   423,    -1,    -1,   426,   427,
     428,   429,   430,    -1,   432,    -1,    -1,   435,    -1,   437,
     438,    -1,   440,    -1,    -1,    -1,   444,    -1,    -1,   447,
     448,   449,   450,   451,    -1,    -1,    -1,   455,   456,   457,
     458,   459,   460,   461,    -1,   463,   464,    -1,   466,    -1,
      -1,    -1,    -1,   471,   472,   473,    -1,    -1,    -1,    -1,
     478,    -1,    -1,    -1,   482,    -1,    -1,   485,    -1,   487,
      -1,   489,    -1,    -1,   492,   493,    -1,    -1,    -1,    -1,
      -1,   499,   500,   501,    -1,   503,   504,    -1,   506,    -1,
      -1,   509,    -1,    -1,   512,    -1,   514,   515,   516,   517,
      -1,    -1,    -1,   521,    -1,   523,   524,   525,   526,   527,
     528,    -1,    -1,   531,   532,   533,   534,    -1,   536,   537,
      -1,    -1,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,   549,   550,   551,   552,    -1,    -1,    -1,    -1,    -1,
     558,   559,    -1,    -1,    -1,    -1,   564,   565,   566,    -1,
     568,   569,    -1,   571,   572,    -1,    -1,    -1,    -1,    -1,
     578,    -1,    -1,   581,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,    -1,    -1,    -1,   593,    -1,    -1,   596,    -1,
      -1,    -1,   600,   601,   602,   603,   604,    -1,    -1,   607,
      -1,    -1,    -1,   611,    -1,    -1,   614,    -1,   616,    -1,
       5,   619,     7,     8,     9,    10,    11,    -1,    -1,    14,
      -1,    -1,    -1,    18,    -1,    -1,    -1,    -1,    23,    24,
      25,    26,    27,    -1,    -1,    -1,    -1,    -1,    -1,    34,
      -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,
      45,    -1,    -1,    -1,    -1,    -1,    51,    -1,    -1,    54,
      55,    -1,    57,    -1,    -1,    -1,    -1,    62,    63,    64,
      -1,    66,    67,    -1,    69,    70,    -1,    72,    73,    -1,
      75,    -1,    77,    78,    79,    80,    -1,    82,    83,    -1,
      85,    86,    87,    -1,    89,    -1,    -1,    -1,    93,    -1,
      -1,    96,    -1,    98,    -1,    -1,   101,    -1,    -1,    -1,
     105,   106,   107,    -1,    -1,   110,    -1,    -1,    -1,    -1,
     115,    -1,    -1,    -1,    -1,    -1,   121,   122,    -1,   124,
      -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,   134,
      -1,    -1,    -1,    -1,    -1,    -1,   141,   142,   143,    -1,
      -1,    -1,   147,    -1,    -1,   150,    -1,   152,   153,   154,
      -1,    -1,   157,   158,    -1,   160,   161,   162,   163,   164,
      -1,    -1,    -1,   168,   169,   170,   171,   172,    -1,    -1,
     175,   176,    -1,   178,   179,   180,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   188,    -1,   190,    -1,   192,    -1,   194,
     195,   196,   197,    -1,   199,    -1,   201,    -1,    -1,    -1,
      -1,   206,    -1,    -1,    -1,    -1,    -1,   212,    -1,    -1,
      -1,   216,   217,   218,   219,    -1,    -1,   222,   223,   224,
      -1,    -1,   227,    -1,    -1,    -1,    -1,   232,    -1,    -1,
      -1,    -1,   237,    -1,    -1,    -1,   241,   242,    -1,   244,
     245,    -1,    -1,    -1,   249,    -1,    -1,    -1,   253,    -1,
      -1,   256,    -1,    -1,   259,   260,    -1,    -1,    -1,    -1,
      -1,   266,   267,    -1,   269,    -1,   271,    -1,   273,   274,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   282,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,    -1,   302,   303,   304,
      -1,   306,   307,   308,   309,    -1,   311,   312,    -1,    -1,
      -1,    -1,   317,   318,   319,   320,   321,   322,    -1,    -1,
     325,   326,    -1,   328,    -1,   330,    -1,   332,   333,   334,
     335,   336,   337,   338,   339,   340,    -1,    -1,   343,   344,
      -1,    -1,   347,   348,   349,   350,    -1,    -1,    -1,    -1,
     355,    -1,    -1,    -1,   359,    -1,   361,   362,   363,    -1,
     365,   366,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   380,   381,    -1,    -1,   384,
      -1,   386,   387,   388,   389,   390,   391,   392,   393,   394,
      -1,    -1,    -1,    -1,   399,   400,    -1,   402,    -1,   404,
     405,   406,   407,   408,    -1,   410,   411,   412,    -1,    -1,
     415,    -1,    -1,    -1,   419,   420,   421,   422,   423,    -1,
      -1,   426,   427,   428,   429,   430,    -1,   432,    -1,    -1,
     435,    -1,   437,    -1,    -1,   440,    -1,    -1,    -1,   444,
      -1,    -1,   447,   448,   449,    -1,   451,    -1,    -1,    -1,
     455,   456,   457,   458,   459,   460,   461,    -1,   463,   464,
      -1,   466,    -1,    -1,    -1,    -1,   471,   472,   473,    -1,
      -1,    -1,    -1,   478,    -1,    -1,    -1,   482,    -1,    -1,
     485,    -1,   487,    -1,   489,    -1,    -1,   492,   493,    -1,
      -1,    -1,    -1,    -1,   499,   500,   501,    -1,   503,   504,
      -1,   506,    -1,    -1,   509,    -1,    -1,   512,    -1,   514,
     515,   516,   517,    -1,    -1,    -1,   521,    -1,   523,   524,
     525,   526,   527,   528,    -1,    -1,   531,   532,   533,   534,
      -1,   536,   537,    -1,    -1,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,   549,   550,   551,   552,    -1,    -1,
      -1,    -1,    -1,   558,   559,    -1,    -1,    -1,    -1,   564,
     565,   566,    -1,   568,   569,    -1,   571,   572,    -1,    -1,
      -1,    -1,    -1,   578,    -1,    -1,   581,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,    -1,    -1,    -1,   593,    -1,
      -1,   596,    -1,    -1,    -1,   600,   601,   602,   603,   604,
      -1,    -1,    -1,    -1,    -1,    -1,   611,    -1,    -1,   614,
      -1,   616,    -1,    -1,   619
};

/* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
   symbol of state STATE-NUM.  */
static const yytype_uint16 yystos[] =
{
       0,    13,    15,    30,    34,    48,    49,    56,    60,    61,
      76,    94,   116,   125,   126,   127,   138,   139,   151,   165,
     183,   198,   200,   205,   208,   231,   233,   251,   268,   272,
     368,   385,   398,   409,   431,   434,   436,   439,   442,   443,
     452,   454,   462,   468,   476,   481,   483,   513,   520,   563,
     575,   579,   582,   587,   615,   630,   641,   644,   645,   646,
     647,   648,   650,   655,   657,   664,   697,   724,   731,   732,
     851,  1016,  1058,  1060,  1074,  1077,  1082,  1084,  1085,  1090,
    1093,  1098,  1105,  1117,  1118,  1274,  1276,  1291,  1294,  1319,
    1327,  1338,  1345,  1359,  1363,  1366,  1376,  1382,  1386,  1388,
    1389,  1441,  1469,  1475,  1477,  1484,  1486,  1512,  1518,  1519,
    1520,  1521,  1578,  1586,  1587,    11,   103,   122,   192,   221,
     273,   403,   474,   537,   585,  1054,  1543,  1544,  1545,  1548,
     269,   356,  1092,  1513,   545,  1432,   225,     5,     7,     8,
       9,    10,    11,    14,    18,    21,    23,    24,    25,    26,
      27,    28,    30,    34,    38,    41,    42,    43,    45,    47,
      48,    51,    54,    55,    57,    58,    60,    62,    63,    64,
      65,    66,    67,    69,    70,    72,    73,    74,    75,    76,
      77,    78,    79,    80,    82,    83,    85,    86,    87,    88,
      89,    93,    96,    98,   101,   105,   106,   107,   110,   115,
     116,   121,   122,   124,   128,   130,   131,   132,   133,   134,
     138,   141,   142,   143,   147,   149,   150,   152,   153,   154,
     157,   158,   160,   161,   162,   163,   164,   165,   168,   169,
     170,   171,   172,   175,   176,   178,   179,   180,   183,   187,
     188,   190,   192,   194,   195,   196,   197,   199,   201,   205,
     206,   208,   211,   212,   216,   217,   218,   219,   222,   223,
     224,   227,   232,   233,   237,   241,   242,   244,   245,   249,
     252,   253,   256,   259,   260,   266,   267,   269,   271,   273,
     274,   282,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   302,
     303,   304,   306,   307,   308,   309,   311,   312,   317,   318,
     319,   320,   321,   322,   325,   326,   328,   330,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   343,   344,   347,
     348,   349,   350,   354,   355,   359,   361,   362,   363,   365,
     366,   367,   369,   379,   380,   381,   383,   384,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   398,   399,
     400,   402,   404,   405,   406,   407,   408,   410,   411,   412,
     415,   419,   420,   421,   422,   423,   426,   427,   428,   429,
     430,   432,   433,   435,   436,   437,   440,   442,   444,   445,
     447,   448,   449,   451,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   466,   467,   471,   472,   473,
     474,   478,   482,   484,   485,   486,   487,   489,   490,   491,
     492,   493,   499,   500,   501,   503,   504,   506,   509,   512,
     513,   514,   515,   516,   517,   520,   521,   523,   524,   525,
     526,   527,   528,   531,   532,   533,   534,   536,   537,   540,
     541,   542,   543,   546,   547,   549,   550,   551,   552,   558,
     559,   563,   564,   565,   566,   568,   569,   571,   572,   574,
     575,   578,   581,   583,   585,   586,   593,   596,   600,   601,
     602,   603,   604,   611,   612,   614,   615,   616,   619,   691,
    1430,  1435,  1439,  1440,   302,   536,   539,  1471,  1471,   611,
    1514,   103,   191,   273,   474,   494,   537,   542,   577,   585,
     673,   674,   903,   904,   905,   994,   995,   996,  1328,  1275,
     103,   162,   192,   225,   273,   403,   474,   537,   542,   560,
     585,   600,  1287,  1435,  1092,    98,   733,   690,   638,  1427,
    1429,  1435,   656,  1292,   391,    82,   411,  1387,   106,   225,
     616,  1394,  1471,  1092,   852,  1435,  1383,   462,   585,  1471,
    1092,  1295,  1377,   497,   721,   725,   726,  1435,   690,  1514,
    1435,  1121,  1123,  1124,  1442,  1346,   725,   486,   558,   486,
     539,  1340,   391,  1476,  1320,  1435,    30,    76,   149,   398,
     420,   454,   513,  1580,   468,   630,  1119,     0,   151,   642,
     398,   171,   187,   386,  1364,  1427,  1435,   155,  1028,  1435,
     155,   691,   202,   691,   261,  1432,  1435,  1437,   799,   800,
     803,   826,  1435,   690,   539,   162,  1022,  1543,  1471,  1514,
    1099,   698,   638,   556,  1075,  1086,    17,  1515,   220,   906,
     202,  1437,   801,   826,   690,   375,  1540,  1544,  1545,  1546,
    1547,  1548,   539,   904,   225,   225,   225,   221,   280,   412,
    1336,  1337,     7,    21,    27,    33,    35,    36,    37,    39,
      52,    53,    58,    59,    66,    69,    88,    91,    92,    97,
      99,   102,   103,   108,   109,   110,   115,   117,   120,   166,
     173,   174,   181,   187,   195,   197,   203,   209,   216,   220,
     231,   234,   258,   266,   277,   305,   310,   321,   325,   327,
     331,   332,   333,   334,   335,   342,   351,   352,   353,   357,
     358,   363,   382,   388,   393,   394,   396,   410,   438,   439,
     451,   453,   459,   460,   466,   518,   519,   525,   529,   530,
     535,   545,   549,   550,   551,   552,   561,   562,   563,   567,
     570,   585,   589,   590,   591,   592,   597,   599,   603,   604,
     619,   623,   624,   629,   630,   633,   634,   637,   638,   955,
    1138,  1139,  1140,  1141,  1145,  1148,  1149,  1150,  1151,  1152,
    1153,  1161,  1165,  1175,  1413,  1415,  1417,  1418,  1419,  1423,
    1425,  1430,  1435,   220,  1286,  1286,  1286,  1435,   202,  1286,
    1286,   826,  1286,   690,  1286,  1471,   651,  1367,   130,    12,
      13,    94,   125,   139,   162,   165,   178,   200,   225,   231,
     272,   404,   408,   424,   432,   440,   468,   481,   482,   531,
     560,   582,   584,  1487,  1489,  1491,  1492,  1435,   367,    65,
     416,   638,  1437,   123,   210,   280,  1297,  1435,  1138,   235,
    1390,  1470,  1471,    46,   853,   189,    33,   302,  1351,  1384,
    1435,   690,  1094,  1471,   123,   280,  1298,  1326,   302,   411,
     486,  1378,  1379,   593,   722,   476,   727,    12,   408,  1485,
    1489,   556,  1515,  1122,    12,   135,   210,   502,   503,   504,
     505,   506,   507,   522,  1128,  1129,  1130,  1539,    58,    59,
     120,   199,   269,   338,   388,   473,   558,   637,   957,  1435,
    1443,  1455,  1459,  1461,    34,    58,    69,    92,    94,   104,
     153,   158,   161,   190,   192,   199,   201,   224,   225,   248,
     269,   302,   367,   392,   402,   403,   406,   407,   427,   473,
     486,   521,   539,   602,   957,   993,  1347,  1351,  1352,  1354,
    1456,   727,   430,   509,  1069,  1070,  1071,   416,   608,  1061,
    1062,  1063,  1069,  1339,  1435,  1471,  1326,    35,   209,   545,
    1414,  1433,  1579,  1579,  1579,  1579,  1579,  1123,  1119,   631,
     636,  1435,   155,  1361,  1360,   319,   543,   569,  1018,   583,
      99,  1437,  1438,  1020,   805,   827,  1435,  1019,   369,     6,
      56,   139,   352,   415,   417,   828,  1024,  1438,  1427,   691,
     508,  1549,  1550,  1021,  1083,  1100,  1101,  1102,  1103,  1427,
     630,   699,  1435,   658,  1281,  1282,  1427,  1281,    55,   354,
     354,   431,  1516,   351,   352,  1144,  1435,   804,   827,   185,
       6,  1438,  1502,  1503,   439,    10,   403,   560,   677,  1134,
    1542,  1550,  1562,  1566,  1567,  1573,   677,  1134,  1541,  1550,
    1562,  1567,  1573,  1543,  1548,   906,  1435,  1435,  1435,   189,
    1329,  1333,  1334,  1435,  1336,   630,   630,   630,  1148,   630,
     630,   630,  1138,  1178,   630,   630,   630,   630,   630,   630,
     630,   630,   630,  1137,  1137,   630,   944,   630,   630,   630,
     545,   630,   630,   630,   630,   630,   630,   630,   630,   630,
     630,   630,   630,   630,  1138,   630,   630,   630,  1176,  1177,
    1423,  1435,   630,   630,   630,   630,   630,   630,   630,   630,
     630,  1138,   944,   630,   630,   630,   630,   630,   630,   630,
     630,   630,   630,   630,   630,   630,   630,   630,   630,   630,
     630,   944,   545,   630,   630,   630,   545,   630,   630,   630,
      35,   209,   545,   630,  1137,   944,   944,   630,   630,   630,
     630,   630,   630,  1148,  1148,  1148,  1138,  1534,  1535,  1435,
    1166,  1435,    16,    17,   372,   375,   617,  1142,  1143,   155,
     156,   193,   204,   243,   254,   281,   345,  1146,    31,   136,
     238,   262,   331,   425,   479,   480,   492,   621,   622,   623,
     624,   625,   626,   627,   628,  1144,  1148,    68,   374,   632,
    1433,   630,   638,   166,  1435,   691,  1435,   364,   827,   691,
    1437,   355,   601,   837,   838,  1288,  1289,  1290,  1352,   691,
    1438,  1501,  1280,  1286,   588,   652,    33,   128,   153,   157,
     194,   212,   274,   402,   411,   426,   444,   487,   517,  1368,
    1373,  1374,  1471,    81,   637,   734,   735,   736,   737,  1435,
     402,  1490,   456,   456,   537,   542,   585,   600,   370,  1494,
     536,   364,  1496,    64,   486,  1493,   104,   600,  1495,   364,
     632,    19,   155,  1230,  1231,  1478,  1435,  1054,   491,    48,
      80,   280,  1396,  1427,  1472,  1473,  1091,   264,   267,   413,
     854,   856,   637,   649,  1432,   274,  1095,  1438,  1096,  1097,
    1427,  1078,   235,  1283,  1299,  1300,  1427,    48,  1380,   632,
    1433,    54,    63,    73,    85,    86,    87,   101,   320,   337,
     464,   524,   541,   728,   730,  1490,   364,   364,   462,  1517,
    1516,   576,  1522,  1523,   625,  1132,  1133,  1134,  1130,   476,
     638,    33,   120,   155,   477,   958,   959,  1310,  1437,   186,
    1310,  1445,   637,  1437,    33,   120,   961,   962,  1437,   638,
    1446,  1444,  1310,   161,   262,   606,  1358,   630,   103,   162,
     192,   403,   539,   560,   600,  1358,    12,   915,  1437,   263,
    1249,  1251,   189,   238,  1353,  1355,    67,   517,   186,   517,
     536,    67,   517,    12,    41,    89,    93,   242,   318,   381,
     493,   533,  1341,  1342,  1343,   161,   212,   517,   517,  1249,
    1358,  1355,   274,   152,    70,   405,   536,   559,   517,   596,
    1059,   632,   366,   613,    83,   632,  1282,  1054,   632,   365,
    1582,   532,  1583,   247,   447,  1581,   631,  1523,  1525,  1527,
    1528,   151,   643,  1437,  1117,  1291,  1294,  1319,  1327,  1362,
    1365,  1414,  1435,   120,   901,   902,   912,   913,   966,   106,
    1137,   637,   692,     6,   806,   692,   630,   105,   823,   823,
     823,     4,   632,   388,  1017,  1023,   467,   600,  1550,  1281,
     238,   632,   385,  1111,  1113,  1114,   700,   701,  1138,   222,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   303,
     304,   428,   429,   659,   660,   663,   171,   412,   632,  1076,
      57,   171,   175,   186,   317,   412,  1087,  1088,  1089,    55,
     431,   166,   672,   806,   106,   823,   218,   632,  1134,  1134,
    1134,   162,   192,   192,  1550,  1427,   997,   998,   997,   997,
    1284,  1285,  1427,  1428,  1435,   632,  1331,   638,  1335,  1138,
    1138,    12,   135,  1171,  1232,  1171,  1171,  1171,   605,  1180,
    1138,  1138,  1175,  1175,  1138,  1138,  1138,   135,  1171,  1232,
     631,   358,   631,   631,  1138,  1138,  1138,  1138,  1423,  1534,
     111,   112,   113,   114,   115,   213,   214,   215,   216,   321,
     323,   324,   325,   332,   410,   465,   466,   603,   618,   619,
    1227,  1228,  1138,  1175,   107,   110,   549,   552,  1229,   135,
    1168,  1138,  1138,  1138,  1138,  1227,  1138,  1175,  1177,     9,
     632,   638,   135,  1171,  1138,  1138,   135,  1171,  1138,  1138,
    1175,  1175,  1175,  1138,  1138,  1138,  1175,  1141,  1138,  1138,
    1138,  1138,  1138,  1138,   631,  1138,  1171,  1171,  1138,  1138,
     135,  1171,  1138,  1228,  1228,  1138,    44,   255,   557,  1138,
    1138,   631,  1424,  1425,  1435,  1171,  1171,  1138,  1138,  1138,
     631,   632,   631,   468,   630,  1531,  1532,  1138,   637,  1167,
    1437,   638,  1138,  1138,  1138,  1140,   174,   357,   562,   578,
    1144,    12,    18,  1140,  1147,  1141,  1141,   630,  1148,  1141,
    1141,  1141,  1141,   262,  1141,  1141,   234,  1141,   234,  1141,
    1141,  1141,  1141,  1141,    31,   238,   262,   425,  1437,  1148,
    1138,  1154,  1435,   638,  1427,  1288,   632,  1290,   153,   632,
    1281,  1277,   637,   653,   654,   274,   274,   274,   274,    48,
     274,   274,   632,  1369,   110,   549,   552,   729,   739,  1165,
    1417,  1423,  1437,   632,   155,   536,   630,  1504,  1438,  1504,
    1504,  1504,   192,   403,   539,  1488,  1492,  1435,   179,   348,
    1435,  1479,  1480,  1299,  1432,  1106,   269,  1395,  1231,   632,
    1281,    70,   630,   861,   862,   861,   862,   386,   864,   206,
     250,  1437,    29,   556,  1385,   632,   556,   632,   556,  1281,
    1300,  1296,   385,  1194,  1195,    12,  1381,  1379,   632,   155,
     632,  1438,   192,   403,  1488,  1435,    12,   135,  1530,   632,
    1125,  1138,  1421,  1435,  1435,    68,   964,  1138,  1438,   363,
     388,   545,  1467,   244,   416,  1462,  1463,  1464,  1465,   199,
     269,   473,  1457,  1310,  1435,   558,  1447,  1458,  1461,   632,
    1449,  1460,   238,  1356,  1432,  1138,   625,   906,   691,   691,
     691,  1427,   691,  1427,   274,   336,   517,  1350,  1350,   277,
     358,   567,  1252,  1253,  1415,  1435,  1358,  1435,   691,  1358,
    1438,  1353,   691,  1358,   241,   534,   176,   186,  1344,   632,
    1356,  1353,  1427,  1355,  1353,  1353,  1358,  1358,   581,  1072,
    1071,   489,  1063,   468,   630,   634,  1181,  1182,  1183,  1184,
    1185,  1196,  1197,  1211,  1414,   389,  1584,   373,  1245,  1251,
    1529,   902,    68,   957,   131,  1437,    74,    88,   252,   329,
     354,   414,   508,   694,   696,   421,   571,   824,   825,   227,
     820,   821,   822,   829,   837,   838,   103,   211,   379,   388,
     395,   490,   585,   675,   676,  1432,    24,   309,   814,   815,
     816,   829,   830,   831,   837,   838,   807,   808,   814,  1438,
     169,     6,    11,    13,    15,    25,    26,    56,    60,    61,
      66,    74,    82,    91,   106,   124,   132,   133,   139,   147,
     153,   164,   184,   223,   225,   232,   249,   272,   308,   326,
     330,   368,   373,   380,   385,   388,   419,   433,   434,   435,
     436,   458,   514,   515,   516,   521,   537,   540,   563,   576,
     848,   908,   910,   912,   913,  1029,  1033,  1035,  1038,  1044,
    1045,  1046,  1051,  1052,  1241,   364,   685,  1025,   122,   237,
    1427,   120,  1104,  1435,  1102,  1427,   850,  1113,   225,   250,
     991,  1115,   631,   632,   155,   155,   155,   155,   155,   155,
     155,   155,   155,   155,   155,   155,   155,   155,   155,   155,
     155,   155,   155,   155,   155,   155,   155,   155,   632,  1282,
     583,  1088,   900,   901,    74,   349,   422,   572,   817,   818,
     819,   829,   833,   834,   835,   836,   837,   838,   612,   587,
     802,    46,   608,  1503,   192,   691,   691,   906,   691,  1435,
     665,   565,   588,  1005,   364,   364,   364,   632,  1332,  1194,
     638,  1335,  1334,   189,   625,  1435,   632,   631,  1171,   631,
    1172,   631,   631,   631,  1138,   145,   605,  1179,    19,   631,
     588,   631,   631,   631,   632,   588,   632,  1162,   631,   625,
     631,   632,   632,   631,   631,   631,   631,   189,   632,   631,
     632,  1164,   631,   632,   632,   632,   624,   632,   631,   631,
     630,  1423,  1435,  1171,   631,   631,   631,  1171,   631,   632,
     631,   631,   631,   631,   631,   631,   632,   631,   238,   631,
     632,   632,   631,   632,   632,   631,   631,   631,   632,   189,
     632,  1171,   631,   631,   632,   632,   632,   631,   189,  1138,
     189,  1138,   189,  1138,   189,   631,   632,   631,   631,   631,
     631,   632,    19,   260,   632,   981,   631,  1175,  1201,  1202,
    1203,   468,   630,  1120,  1526,  1527,   576,  1536,   635,  1457,
     477,  1435,   174,   357,   562,   578,   630,    17,  1138,  1534,
     160,  1237,  1141,  1138,  1138,  1141,   630,  1148,  1141,  1134,
    1158,  1159,  1160,   630,   638,  1435,  1278,  1290,  1310,  1311,
    1438,    50,   446,  1055,  1281,  1437,   632,  1374,  1281,  1375,
     737,   740,   741,   736,   359,   460,   738,  1435,  1505,  1506,
     556,   625,  1427,  1435,  1500,  1500,  1500,   155,   179,   193,
     204,   253,   254,   281,   348,   400,  1481,  1483,   606,  1233,
    1293,  1107,  1108,  1109,  1110,  1427,   226,   280,   416,   613,
    1474,  1473,   630,  1134,   117,   181,   209,   277,   358,   567,
    1256,  1259,  1260,   528,   865,   855,    11,   857,  1138,  1432,
    1438,  1438,  1097,  1427,   171,   412,   586,  1079,  1080,  1081,
     468,   476,   592,   593,   630,   896,  1301,  1304,   630,   730,
     729,   200,   189,  1500,  1500,  1500,  1524,  1133,   189,   235,
    1126,  1127,  1244,  1245,  1269,  1135,  1135,   638,   120,   963,
     965,  1437,  1310,   630,   630,   260,   366,   613,   632,   632,
     638,   638,   638,  1461,  1138,  1462,  1448,  1310,  1450,  1451,
      12,    33,   120,   364,  1138,  1468,  1432,   189,  1357,   631,
    1435,   362,   632,  1358,   411,  1249,  1343,  1357,  1358,  1353,
    1427,  1358,  1358,   499,   500,   501,   663,  1073,   585,  1064,
    1065,  1210,  1435,    95,   228,   247,   258,   341,   453,   522,
    1193,   476,   632,  1427,  1210,   632,   186,  1585,    46,  1249,
    1311,  1311,   339,  1432,   508,   508,   508,   508,   508,   467,
    1432,  1432,  1311,   632,   822,  1432,  1432,  1432,  1432,   117,
     181,   209,   277,   358,   567,  1255,  1432,  1432,   631,   632,
    1311,  1311,   632,   816,   809,   810,   829,   830,   831,   388,
      71,    84,   385,   924,   927,   928,   989,   991,   995,   996,
    1053,  1311,  1053,   385,  1311,  1311,  1053,  1311,   385,   385,
    1311,  1311,   556,   131,  1311,   248,   537,   185,   385,   401,
     991,  1053,   248,  1311,   385,   537,   131,  1311,  1311,  1311,
    1311,  1311,  1053,   385,    46,  1311,   850,  1311,   385,   387,
      19,   155,   556,  1057,   385,   385,  1311,  1311,  1311,  1311,
     134,   318,  1435,  1311,   385,  1311,   908,   632,   847,   848,
    1033,   630,   638,   923,   929,  1426,  1435,    78,   463,   434,
    1026,  1551,  1112,   630,  1138,   630,  1255,  1431,  1432,  1255,
    1255,  1431,  1431,   117,   181,   277,   358,   567,  1257,  1431,
    1255,  1255,  1431,  1431,  1431,  1431,  1431,  1431,  1431,  1255,
    1255,  1431,  1418,  1431,  1255,   660,  1311,  1311,  1311,  1311,
     632,   819,  1437,   273,   172,   811,   812,   813,   829,   830,
     831,   832,   835,   836,   837,   838,   388,   545,  1437,  1435,
    1574,     8,    29,   797,   691,   630,   449,   262,   630,   840,
     907,   909,   910,    45,   206,   461,  1010,  1010,  1427,  1427,
    1427,  1285,  1435,   588,  1330,  1435,  1182,   638,  1335,   234,
    1138,   631,  1138,   548,  1138,  1138,   149,    33,    59,   107,
     110,   118,   343,   484,   552,   580,  1173,   958,  1138,   958,
    1173,  1175,   631,   234,   234,  1138,  1138,  1138,  1175,  1138,
    1138,  1138,  1138,  1138,  1141,   631,   631,  1138,  1138,  1138,
    1138,  1138,  1138,  1175,   234,  1138,  1138,  1138,   631,  1138,
    1138,  1138,  1138,   189,  1138,   189,  1138,   189,  1138,  1138,
    1138,    33,    59,   976,   977,   978,   979,   980,  1256,  1255,
     631,   631,  1537,  1538,  1539,  1202,  1120,   631,  1530,  1437,
    1138,  1534,  1140,   631,   632,   631,  1148,  1227,  1227,    17,
    1138,  1534,  1237,  1138,   631,   632,  1174,  1175,  1435,  1279,
     914,  1437,  1055,   654,  1370,   155,   632,   631,   632,  1502,
     638,   638,   556,   556,   556,  1482,  1234,  1250,  1251,  1301,
     632,  1111,  1113,   545,  1434,   613,   269,   858,   859,   860,
    1435,   870,  1141,    46,   630,   872,   862,   155,   630,   556,
    1080,   897,  1302,   630,  1307,  1312,  1307,   631,   896,  1303,
    1420,  1421,  1424,  1435,  1305,  1226,  1435,   155,   370,  1502,
     189,   189,   189,  1118,   140,  1182,  1270,   186,   272,  1131,
    1269,  1250,  1127,    19,  1136,  1432,  1435,   625,  1435,  1467,
     545,   545,   416,   437,   471,  1466,  1464,  1463,  1310,  1449,
    1468,   632,  1453,  1455,  1459,  1257,  1348,   158,   602,  1253,
    1253,   358,  1349,  1233,  1353,   155,   155,   632,   155,   388,
    1066,  1198,  1205,  1210,  1181,   247,   247,   376,  1212,   247,
     258,   453,  1212,  1196,  1181,  1322,  1323,  1424,  1183,  1194,
    1207,  1208,  1255,   322,  1246,   965,   959,   106,   106,   122,
     237,   217,   839,  1256,   822,   676,   839,   839,   816,   632,
     810,   169,  1013,  1426,  1092,    61,   185,   401,   577,   926,
     990,  1013,   991,   992,   992,   120,  1435,  1426,  1092,  1257,
    1255,  1426,  1255,    12,  1034,  1042,  1043,  1435,  1092,  1432,
    1432,   957,  1311,  1255,   250,  1042,   250,  1426,  1426,   914,
    1043,  1311,   179,   253,   354,   917,  1255,   120,  1435,  1257,
    1257,  1426,  1092,  1242,  1243,  1424,   120,  1255,   849,  1432,
    1092,   850,  1427,  1092,  1092,    77,    79,   120,   143,   180,
     423,   916,   120,  1255,   120,  1255,   120,  1255,  1255,  1034,
     911,     6,   139,  1046,   920,   921,   922,   923,   924,  1435,
       8,   179,  1056,   424,   925,   926,   983,   930,   638,   352,
     399,    23,   163,   679,   556,   132,   147,   681,   630,  1552,
     630,   401,  1223,  1224,  1225,  1435,   661,   662,  1255,  1432,
    1256,   839,   839,   819,   369,   202,  1311,   632,   813,   545,
      19,   449,   630,   125,   231,   582,   798,   678,  1568,   118,
     236,   418,   523,   919,  1427,   262,   841,   846,   847,   920,
     846,   632,   909,   666,   668,   670,   638,  1182,  1233,  1335,
    1233,  1138,   631,  1138,   548,   630,   948,   949,   949,   630,
     943,   630,   941,   942,   948,   949,   236,   943,   236,   631,
     631,   631,   631,   631,  1163,  1138,  1138,   631,   631,   632,
     631,  1170,  1245,   632,   632,   631,   632,   631,   238,  1155,
    1156,   631,   631,   631,   631,   632,   631,   631,  1138,   631,
     186,   631,   631,   632,   631,   632,   632,   631,  1138,   631,
    1138,   631,  1138,   631,   631,   631,   630,   971,   971,    20,
     126,   451,   623,   973,   974,   975,   632,   632,  1132,  1539,
     631,  1533,   638,  1014,   631,  1175,  1140,   631,   632,   631,
    1135,  1160,   631,  1050,  1051,  1052,   186,   608,  1371,    54,
      63,    73,    85,    86,    87,   101,   320,   337,   448,   464,
     524,   541,   742,   741,  1506,   608,  1509,   625,   625,  1502,
    1502,  1502,   630,  1138,   364,  1317,  1109,  1427,  1113,   221,
    1116,  1391,   631,   632,  1135,   856,   385,   873,   874,  1256,
     858,  1438,  1128,  1308,  1309,  1424,  1313,   632,   630,  1304,
     631,   631,   632,   638,  1522,   631,   632,   729,   189,  1502,
    1502,  1502,  1233,  1233,   141,   377,  1265,  1266,  1271,   582,
     238,  1432,  1435,   638,   631,   631,    75,   568,   416,  1468,
    1452,  1454,  1249,  1249,  1358,  1432,  1432,   663,  1432,   155,
     121,  1067,   576,   631,  1526,  1206,   635,   247,  1196,  1212,
    1212,   247,   364,   364,   588,   632,  1321,  1310,  1231,  1128,
    1138,  1247,  1422,   810,  1036,   630,   250,   250,   992,  1013,
     998,  1013,  1013,   139,   476,  1034,  1047,  1031,   632,  1256,
     959,  1432,  1426,  1055,   608,  1432,  1048,  1034,   632,    20,
     126,  1248,   853,  1034,  1039,  1034,   630,   631,   632,  1435,
    1427,    32,    33,    38,    40,    42,    43,    59,   107,   110,
     118,   137,   154,   180,   182,   195,   196,   236,   266,   275,
     276,   278,   314,   315,   316,   333,   334,   335,   340,   343,
     360,   361,   393,   394,   418,   472,   476,   488,   546,   549,
     552,   553,   554,   555,   594,   595,   619,   931,   934,   935,
     936,   937,   938,   939,   940,  1435,   399,  1138,  1138,   364,
     685,   691,   364,    74,   686,  1435,  1553,    19,  1034,   631,
     632,   631,   632,   630,  1435,   839,   813,  1432,   919,  1575,
     364,   364,   702,   703,   705,  1435,   491,  1427,   896,   631,
     221,   439,   843,  1397,   909,   630,   630,   630,  1435,  1233,
    1244,  1227,  1138,   117,   277,   358,   567,    21,    33,    47,
     574,   957,   967,   968,   969,   358,   358,   631,  1227,  1227,
    1138,   470,  1169,  1138,  1138,  1175,    42,   341,   631,   608,
    1157,  1138,  1227,  1138,  1138,  1138,  1138,   631,   631,   631,
    1256,   631,   981,   976,   974,   976,   977,  1255,  1204,  1531,
    1435,   631,  1175,  1136,  1052,  1051,  1372,   416,   200,   441,
    1507,  1507,  1507,   120,  1138,  1315,  1316,   142,  1116,   256,
    1397,   860,   631,   206,   250,   875,   631,   632,   631,  1132,
     632,  1310,  1314,  1315,  1312,  1306,  1304,  1420,  1435,   850,
    1435,  1502,  1250,   202,  1238,  1434,  1434,   637,  1267,  1268,
    1437,   478,   625,  1453,  1458,  1432,   155,   390,  1068,  1530,
    1231,  1184,  1181,  1196,   247,   247,  1181,  1196,  1187,  1186,
    1188,  1323,  1233,  1316,  1221,  1222,  1132,   632,  1248,   386,
     630,  1037,  1138,  1013,   998,   630,   997,   997,   120,   120,
     929,  1087,  1043,   964,   539,   931,  1030,  1243,  1040,  1042,
    1032,  1375,   922,   630,   984,   948,   948,   949,   943,   941,
     397,   932,   941,   941,   969,    59,   594,   935,   937,   969,
     969,    59,   595,   595,   598,   941,   933,   949,   943,   943,
     969,   948,   949,    25,    68,    72,    74,   120,   357,   364,
     401,   472,   521,   577,   951,   952,   953,   982,  1144,   598,
     948,   969,    33,   948,   970,   948,   948,   949,   630,   942,
     950,   638,  1227,   486,  1432,   138,  1027,   631,   632,  1554,
    1555,   631,  1224,   662,   675,   491,   229,   238,   378,   706,
     707,   708,   709,  1134,   463,   631,   632,   704,  1432,   631,
     631,   907,    19,   899,  1011,  1012,  1435,  1011,  1011,   263,
    1254,   631,   631,   631,   631,   631,    33,    21,   574,   957,
      33,   958,   631,   632,   631,   631,   631,  1414,   631,   631,
     632,   631,   328,   252,   411,   631,   631,   631,   631,   631,
     631,   972,   631,   632,   918,  1127,  1250,  1526,   631,   170,
     272,   370,    62,   245,   350,   510,   526,   614,  1498,  1499,
     608,  1508,  1508,  1508,   631,   632,  1318,   235,   630,   863,
     857,   876,  1435,   874,   898,  1309,  1316,   631,  1525,    46,
     207,  1235,  1272,  1437,   632,   328,  1432,   155,  1199,   364,
    1190,  1196,  1196,   364,  1192,  1138,  1138,   630,  1244,  1219,
    1220,  1209,  1422,  1256,   873,   631,   630,   630,  1011,   630,
     630,   110,   549,   552,   623,   624,  1416,  1417,  1056,  1427,
     951,  1092,  1041,  1079,   631,   985,  1435,   305,   986,   484,
     580,   620,   945,   946,   947,   630,   945,   945,   969,   598,
     945,   630,   969,   945,   963,   120,   143,   180,  1432,   955,
     956,  1416,   582,   120,   120,   134,   318,   250,   953,   250,
     357,   969,   970,   969,   970,   945,   358,   945,  1435,   680,
     687,   688,  1435,   468,   630,  1556,  1559,   631,  1432,   631,
     632,   704,  1563,   679,  1569,   705,   931,   954,   842,   846,
     630,   896,   631,   632,  1248,   630,   631,   631,  1253,   958,
     970,   358,  1138,   328,   168,   631,  1255,  1131,  1131,   545,
     545,   545,    17,  1497,   200,   306,   307,   311,   312,  1510,
    1511,  1316,   250,   539,  1134,   866,   630,   592,   877,   918,
    1239,  1422,  1236,  1244,   957,   960,  1268,  1432,  1531,  1189,
     588,  1191,   588,  1226,  1254,   184,   221,   587,  1214,  1215,
    1218,   918,  1248,   631,  1011,  1011,   631,  1011,  1011,  1418,
    1418,   850,  1049,   235,   631,   632,   190,   384,   485,   364,
     987,   947,  1015,  1414,  1015,   955,   593,   512,   682,    52,
      65,   177,   220,   246,   257,   367,   450,   689,   747,   749,
     750,   751,   753,   754,   755,   756,   757,   758,   760,   768,
     769,   772,   783,   786,   788,   789,  1430,  1436,  1440,  1560,
     630,  1558,  1559,   608,  1561,  1557,  1576,   708,  1435,  1427,
     684,   685,   449,   964,  1525,   843,   896,   844,    74,   249,
     999,  1002,  1005,  1006,  1007,  1012,   358,   608,  1000,  1004,
    1006,  1009,  1001,  1003,  1006,  1008,   631,   631,   631,  1498,
     370,  1255,  1255,  1255,  1255,  1511,   582,  1427,   870,   527,
     871,   868,   869,  1435,   238,   259,    74,   106,   225,   308,
     326,   349,   537,   893,   894,   895,  1352,   609,   610,   632,
    1240,  1248,  1138,  1250,   959,  1273,  1200,  1138,   630,  1138,
     630,   631,   991,   991,  1215,   631,   631,   999,   631,   631,
    1056,   630,  1435,   125,   582,   631,   632,   631,  1138,   150,
     683,   770,   773,  1435,   189,   348,   761,   748,  1436,  1436,
    1435,   752,   645,   279,   438,   607,   792,    30,   790,   639,
    1123,  1558,   631,    51,    61,   269,  1522,   693,   954,   186,
     681,  1570,   631,  1522,  1432,  1311,   667,  1007,  1248,   631,
     383,   669,  1009,   671,  1008,  1324,  1325,  1424,  1194,  1135,
    1256,   631,   632,   879,   547,  1311,   131,   131,  1311,  1311,
    1311,  1311,   630,   888,   895,   153,  1422,   403,  1261,    70,
    1398,  1526,  1226,  1226,   186,  1213,  1213,   983,   999,  1000,
    1001,   873,    50,   354,   446,   476,   988,   988,   969,  1414,
     969,  1138,  1138,   605,   775,   779,   189,  1435,   763,   764,
    1138,   711,   746,   747,   749,   751,   753,   755,   756,   757,
     758,   760,   768,   783,   786,   788,   711,   793,   791,   784,
     787,   631,  1525,    61,   370,    61,   129,   694,   695,  1144,
    1577,  1134,   686,   954,   845,  1255,  1050,  1430,  1050,  1050,
     632,  1310,  1392,   631,   867,   869,   630,   881,   883,   878,
    1432,  1311,  1311,   277,   358,   567,  1258,  1259,  1258,  1256,
    1437,   528,   889,   890,  1311,  1248,    14,   148,   159,   371,
     544,  1399,  1400,   265,  1401,   631,   631,   202,   247,   373,
    1217,  1216,   631,     5,   120,   357,   364,   364,   771,   780,
     145,   779,   782,   235,   149,  1138,   149,   746,   636,   581,
    1138,   712,   792,   790,   370,   370,   129,   746,  1564,   138,
    1571,  1525,  1325,  1316,   960,   871,   630,   882,   883,   884,
     313,   880,   883,  1432,  1432,   891,   631,   632,   914,  1262,
      46,    46,   148,    46,  1400,   511,   544,  1402,  1403,    46,
      46,   630,   630,   582,   125,   605,   774,   776,  1138,   711,
     149,   759,   220,   765,   279,   636,   795,   794,   119,   710,
     713,   785,  1436,   785,   144,   687,   693,  1393,   631,   632,
     313,   886,   887,  1141,   892,  1437,   890,   630,  1414,  1414,
      46,  1414,    46,    46,  1403,  1223,  1225,   988,   988,   777,
     776,   782,   781,    52,   762,  1435,   548,  1138,   138,    90,
     167,   717,   743,  1435,   149,   746,   636,   459,  1572,   457,
    1404,   883,   632,   885,   893,   358,  1263,  1264,  1414,  1414,
    1414,   631,   631,  1138,   149,   548,   632,   711,   796,   711,
     205,   632,   714,    81,   100,   636,  1565,   746,   218,  1398,
     887,   631,   631,   632,   778,    52,   711,  1435,   766,   149,
     149,   186,  1435,   954,   186,   186,   746,    46,  1401,  1264,
     548,   145,   146,   767,   438,   607,   715,   120,   744,   720,
     721,  1255,   716,  1414,   221,  1405,   711,   711,   763,   496,
     498,   718,   719,   720,   723,  1144,  1435,   745,  1117,   358,
     630,  1407,   632,   746,   188,  1138,   265,   457,  1406,   631,
     637,  1408,  1409,  1424,   476,  1410,   719,  1437,   631,   632,
    1411,  1412,  1424,  1409,   632,  1310,  1412,  1134,  1316,  1135
};

#define yyerrok		(yyerrstatus = 0)
#define yyclearin	(yychar = YYEMPTY)
#define YYEMPTY		(-2)
#define YYEOF		0

#define YYACCEPT	goto yyacceptlab
#define YYABORT		goto yyabortlab
#define YYERROR		goto yyerrorlab


/* Like YYERROR except do call yyerror.  This remains here temporarily
   to ease the transition to the new meaning of YYERROR, for GCC.
   Once GCC version 2 has supplanted version 1, this can go.  */

#define YYFAIL		goto yyerrlab

#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)					\
do								\
  if (yychar == YYEMPTY && yylen == 1)				\
    {								\
      yychar = (Token);						\
      yylval = (Value);						\
      yytoken = YYTRANSLATE (yychar);				\
      YYPOPSTACK (1);						\
      goto yybackup;						\
    }								\
  else								\
    {								\
      yyerror (YY_("syntax error: cannot back up")); \
      YYERROR;							\
    }								\
while (YYID (0))


#define YYTERROR	1
#define YYERRCODE	256


/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
   If N is 0, then set CURRENT to the empty location which ends
   the previous symbol: RHS[0] (always defined).  */

#define YYRHSLOC(Rhs, K) ((Rhs)[K])
#ifndef YYLLOC_DEFAULT
# define YYLLOC_DEFAULT(Current, Rhs, N)				\
    do									\
      if (YYID (N))                                                    \
	{								\
	  (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;	\
	  (Current).first_column = YYRHSLOC (Rhs, 1).first_column;	\
	  (Current).last_line    = YYRHSLOC (Rhs, N).last_line;		\
	  (Current).last_column  = YYRHSLOC (Rhs, N).last_column;	\
	}								\
      else								\
	{								\
	  (Current).first_line   = (Current).last_line   =		\
	    YYRHSLOC (Rhs, 0).last_line;				\
	  (Current).first_column = (Current).last_column =		\
	    YYRHSLOC (Rhs, 0).last_column;				\
	}								\
    while (YYID (0))
#endif


/* YY_LOCATION_PRINT -- Print the location on the stream.
   This macro was not mandated originally: define only if we know
   we won't break user code: when these are the locations we know.  */

#ifndef YY_LOCATION_PRINT
# if YYLTYPE_IS_TRIVIAL
#  define YY_LOCATION_PRINT(File, Loc)			\
     fprintf (File, "%d.%d-%d.%d",			\
	      (Loc).first_line, (Loc).first_column,	\
	      (Loc).last_line,  (Loc).last_column)
# else
#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
# endif
#endif


/* YYLEX -- calling `yylex' with the right arguments.  */

#ifdef YYLEX_PARAM
# define YYLEX yylex (&yylval, YYLEX_PARAM)
#else
# define YYLEX yylex (&yylval)
#endif

/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)			\
do {						\
  if (yydebug)					\
    YYFPRINTF Args;				\
} while (YYID (0))

# define YY_SYMBOL_PRINT(Title, Type, Value, Location)			  \
do {									  \
  if (yydebug)								  \
    {									  \
      YYFPRINTF (stderr, "%s ", Title);					  \
      yy_symbol_print (stderr,						  \
		  Type, Value); \
      YYFPRINTF (stderr, "\n");						  \
    }									  \
} while (YYID (0))


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep)
#else
static void
yy_symbol_value_print (yyoutput, yytype, yyvaluep)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
#endif
{
  if (!yyvaluep)
    return;
# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# else
  YYUSE (yyoutput);
# endif
  switch (yytype)
    {
      default:
	break;
    }
}


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep)
#else
static void
yy_symbol_print (yyoutput, yytype, yyvaluep)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
#endif
{
  if (yytype < YYNTOKENS)
    YYFPRINTF (yyoutput, "token %s (", yytname[yytype]);
  else
    YYFPRINTF (yyoutput, "nterm %s (", yytname[yytype]);

  yy_symbol_value_print (yyoutput, yytype, yyvaluep);
  YYFPRINTF (yyoutput, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)
#else
static void
yy_stack_print (yybottom, yytop)
    yytype_int16 *yybottom;
    yytype_int16 *yytop;
#endif
{
  YYFPRINTF (stderr, "Stack now");
  for (; yybottom <= yytop; yybottom++)
    {
      int yybot = *yybottom;
      YYFPRINTF (stderr, " %d", yybot);
    }
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)				\
do {								\
  if (yydebug)							\
    yy_stack_print ((Bottom), (Top));				\
} while (YYID (0))


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_reduce_print (YYSTYPE *yyvsp, int yyrule)
#else
static void
yy_reduce_print (yyvsp, yyrule)
    YYSTYPE *yyvsp;
    int yyrule;
#endif
{
  int yynrhs = yyr2[yyrule];
  int yyi;
  unsigned long int yylno = yyrline[yyrule];
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
	     yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      YYFPRINTF (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
		       &(yyvsp[(yyi + 1) - (yynrhs)])
		       		       );
      YYFPRINTF (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)		\
do {					\
  if (yydebug)				\
    yy_reduce_print (yyvsp, Rule); \
} while (YYID (0))

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef	YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif



#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined __GLIBC__ && defined _STRING_H
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static YYSIZE_T
yystrlen (const char *yystr)
#else
static YYSIZE_T
yystrlen (yystr)
    const char *yystr;
#endif
{
  YYSIZE_T yylen;
  for (yylen = 0; yystr[yylen]; yylen++)
    continue;
  return yylen;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static char *
yystpcpy (char *yydest, const char *yysrc)
#else
static char *
yystpcpy (yydest, yysrc)
    char *yydest;
    const char *yysrc;
#endif
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYSIZE_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYSIZE_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
	switch (*++yyp)
	  {
	  case '\'':
	  case ',':
	    goto do_not_strip_quotes;

	  case '\\':
	    if (*++yyp != '\\')
	      goto do_not_strip_quotes;
	    /* Fall through.  */
	  default:
	    if (yyres)
	      yyres[yyn] = *yyp;
	    yyn++;
	    break;

	  case '"':
	    if (yyres)
	      yyres[yyn] = '\0';
	    return yyn;
	  }
    do_not_strip_quotes: ;
    }

  if (! yyres)
    return yystrlen (yystr);

  return yystpcpy (yyres, yystr) - yyres;
}
# endif

/* Copy into YYRESULT an error message about the unexpected token
   YYCHAR while in state YYSTATE.  Return the number of bytes copied,
   including the terminating null byte.  If YYRESULT is null, do not
   copy anything; just return the number of bytes that would be
   copied.  As a special case, return 0 if an ordinary "syntax error"
   message will do.  Return YYSIZE_MAXIMUM if overflow occurs during
   size calculation.  */
static YYSIZE_T
yysyntax_error (char *yyresult, int yystate, int yychar)
{
  int yyn = yypact[yystate];

  if (! (YYPACT_NINF < yyn && yyn <= YYLAST))
    return 0;
  else
    {
      int yytype = YYTRANSLATE (yychar);
      YYSIZE_T yysize0 = yytnamerr (0, yytname[yytype]);
      YYSIZE_T yysize = yysize0;
      YYSIZE_T yysize1;
      int yysize_overflow = 0;
      enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
      char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
      int yyx;

# if 0
      /* This is so xgettext sees the translatable formats that are
	 constructed on the fly.  */
      YY_("syntax error, unexpected %s");
      YY_("syntax error, unexpected %s, expecting %s");
      YY_("syntax error, unexpected %s, expecting %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s");
# endif
      char *yyfmt;
      char const *yyf;
      static char const yyunexpected[] = "syntax error, unexpected %s";
      static char const yyexpecting[] = ", expecting %s";
      static char const yyor[] = " or %s";
      char yyformat[sizeof yyunexpected
		    + sizeof yyexpecting - 1
		    + ((YYERROR_VERBOSE_ARGS_MAXIMUM - 2)
		       * (sizeof yyor - 1))];
      char const *yyprefix = yyexpecting;

      /* Start YYX at -YYN if negative to avoid negative indexes in
	 YYCHECK.  */
      int yyxbegin = yyn < 0 ? -yyn : 0;

      /* Stay within bounds of both yycheck and yytname.  */
      int yychecklim = YYLAST - yyn + 1;
      int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
      int yycount = 1;

      yyarg[0] = yytname[yytype];
      yyfmt = yystpcpy (yyformat, yyunexpected);

      for (yyx = yyxbegin; yyx < yyxend; ++yyx)
	if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
	  {
	    if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
	      {
		yycount = 1;
		yysize = yysize0;
		yyformat[sizeof yyunexpected - 1] = '\0';
		break;
	      }
	    yyarg[yycount++] = yytname[yyx];
	    yysize1 = yysize + yytnamerr (0, yytname[yyx]);
	    yysize_overflow |= (yysize1 < yysize);
	    yysize = yysize1;
	    yyfmt = yystpcpy (yyfmt, yyprefix);
	    yyprefix = yyor;
	  }

      yyf = YY_(yyformat);
      yysize1 = yysize + yystrlen (yyf);
      yysize_overflow |= (yysize1 < yysize);
      yysize = yysize1;

      if (yysize_overflow)
	return YYSIZE_MAXIMUM;

      if (yyresult)
	{
	  /* Avoid sprintf, as that infringes on the user's name space.
	     Don't have undefined behavior even if the translation
	     produced a string with the wrong number of "%s"s.  */
	  char *yyp = yyresult;
	  int yyi = 0;
	  while ((*yyp = *yyf) != '\0')
	    {
	      if (*yyp == '%' && yyf[1] == 's' && yyi < yycount)
		{
		  yyp += yytnamerr (yyp, yyarg[yyi++]);
		  yyf += 2;
		}
	      else
		{
		  yyp++;
		  yyf++;
		}
	    }
	}
      return yysize;
    }
}
#endif /* YYERROR_VERBOSE */


/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep)
#else
static void
yydestruct (yymsg, yytype, yyvaluep)
    const char *yymsg;
    int yytype;
    YYSTYPE *yyvaluep;
#endif
{
  YYUSE (yyvaluep);

  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  switch (yytype)
    {

      default:
	break;
    }
}

/* Prevent warnings from -Wmissing-prototypes.  */
#ifdef YYPARSE_PARAM
#if defined __STDC__ || defined __cplusplus
int yyparse (void *YYPARSE_PARAM);
#else
int yyparse ();
#endif
#else /* ! YYPARSE_PARAM */
#if defined __STDC__ || defined __cplusplus
int yyparse (void);
#else
int yyparse ();
#endif
#endif /* ! YYPARSE_PARAM */





/*-------------------------.
| yyparse or yypush_parse.  |
`-------------------------*/

#ifdef YYPARSE_PARAM
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (void *YYPARSE_PARAM)
#else
int
yyparse (YYPARSE_PARAM)
    void *YYPARSE_PARAM;
#endif
#else /* ! YYPARSE_PARAM */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (void)
#else
int
yyparse ()

#endif
#endif
{
/* The lookahead symbol.  */
int yychar;

/* The semantic value of the lookahead symbol.  */
YYSTYPE yylval;

    /* Number of syntax errors so far.  */
    int yynerrs;

    int yystate;
    /* Number of tokens to shift before error messages enabled.  */
    int yyerrstatus;

    /* The stacks and their tools:
       `yyss': related to states.
       `yyvs': related to semantic values.

       Refer to the stacks thru separate pointers, to allow yyoverflow
       to reallocate them elsewhere.  */

    /* The state stack.  */
    yytype_int16 yyssa[YYINITDEPTH];
    yytype_int16 *yyss;
    yytype_int16 *yyssp;

    /* The semantic value stack.  */
    YYSTYPE yyvsa[YYINITDEPTH];
    YYSTYPE *yyvs;
    YYSTYPE *yyvsp;

    YYSIZE_T yystacksize;

  int yyn;
  int yyresult;
  /* Lookahead token as an internal (translated) token number.  */
  int yytoken;
  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;

#if YYERROR_VERBOSE
  /* Buffer for error messages, and its allocated size.  */
  char yymsgbuf[128];
  char *yymsg = yymsgbuf;
  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
#endif

#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N))

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  yytoken = 0;
  yyss = yyssa;
  yyvs = yyvsa;
  yystacksize = YYINITDEPTH;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY; /* Cause a token to be read.  */

  /* Initialize stack pointers.
     Waste one element of value and location stack
     so that they stay on the same level as the state stack.
     The wasted elements are never initialized.  */
  yyssp = yyss;
  yyvsp = yyvs;

  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
	/* Give user a chance to reallocate the stack.  Use copies of
	   these so that the &'s don't force the real ones into
	   memory.  */
	YYSTYPE *yyvs1 = yyvs;
	yytype_int16 *yyss1 = yyss;

	/* Each stack pointer address is followed by the size of the
	   data in use in that stack, in bytes.  This used to be a
	   conditional around just the two extra args, but that might
	   be undefined if yyoverflow is a macro.  */
	yyoverflow (YY_("memory exhausted"),
		    &yyss1, yysize * sizeof (*yyssp),
		    &yyvs1, yysize * sizeof (*yyvsp),
		    &yystacksize);

	yyss = yyss1;
	yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyexhaustedlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
	goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
	yystacksize = YYMAXDEPTH;

      {
	yytype_int16 *yyss1 = yyss;
	union yyalloc *yyptr =
	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
	if (! yyptr)
	  goto yyexhaustedlab;
	YYSTACK_RELOCATE (yyss_alloc, yyss);
	YYSTACK_RELOCATE (yyvs_alloc, yyvs);
#  undef YYSTACK_RELOCATE
	if (yyss1 != yyssa)
	  YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;

      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
		  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
	YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  if (yystate == YYFINAL)
    YYACCEPT;

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

  /* Do appropriate processing given the current state.  Read a
     lookahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to lookahead token.  */
  yyn = yypact[yystate];
  if (yyn == YYPACT_NINF)
    goto yydefault;

  /* Not known => get a lookahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid lookahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = YYLEX;
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yyn == 0 || yyn == YYTABLE_NINF)
	goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the lookahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the shifted token.  */
  yychar = YYEMPTY;

  yystate = yyn;
  *++yyvsp = yylval;

  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     `$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];


  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 2:

/* Line 1455 of yacc.c  */
#line 1965 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            if (!thd->bootstrap &&
              (!(thd->lex->select_lex.options & OPTION_FOUND_COMMENT)))
            {
              my_message(ER_EMPTY_QUERY, ER(ER_EMPTY_QUERY), MYF(0));
              MYSQL_YYABORT;
            }
            thd->lex->sql_command= SQLCOM_EMPTY_QUERY;
            YYLIP->found_semicolon= NULL;
          }
    break;

  case 3:

/* Line 1455 of yacc.c  */
#line 1977 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex_input_stream *lip = YYLIP;

            if ((YYTHD->client_capabilities & CLIENT_MULTI_QUERIES) &&
                lip->multi_statements &&
                ! lip->eof())
            {
              /*
                We found a well formed query, and multi queries are allowed:
                - force the parser to stop after the ';'
                - mark the start of the next query for the next invocation
                  of the parser.
              */
              lip->next_state= MY_LEX_END;
              lip->found_semicolon= lip->get_ptr();
            }
            else
            {
              /* Single query, terminated. */
              lip->found_semicolon= NULL;
            }
          }
    break;

  case 5:

/* Line 1455 of yacc.c  */
#line 2002 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            /* Single query, not terminated. */
            YYLIP->found_semicolon= NULL;
          }
    break;

  case 62:

/* Line 1455 of yacc.c  */
#line 2076 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_DEALLOCATE_PREPARE;
            lex->prepared_stmt_name= (yyvsp[(3) - (3)].lex_str);
          }
    break;

  case 65:

/* Line 1455 of yacc.c  */
#line 2091 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_PREPARE;
            lex->prepared_stmt_name= (yyvsp[(2) - (4)].lex_str);
          }
    break;

  case 66:

/* Line 1455 of yacc.c  */
#line 2101 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->prepared_stmt_code= (yyvsp[(1) - (1)].lex_str);
            lex->prepared_stmt_code_is_varref= FALSE;
          }
    break;

  case 67:

/* Line 1455 of yacc.c  */
#line 2108 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->prepared_stmt_code= (yyvsp[(2) - (2)].lex_str);
            lex->prepared_stmt_code_is_varref= TRUE;
          }
    break;

  case 68:

/* Line 1455 of yacc.c  */
#line 2118 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_EXECUTE;
            lex->prepared_stmt_name= (yyvsp[(2) - (2)].lex_str);
          }
    break;

  case 69:

/* Line 1455 of yacc.c  */
#line 2125 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 74:

/* Line 1455 of yacc.c  */
#line 2140 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            LEX_STRING *lexstr= (LEX_STRING*)sql_memdup(&(yyvsp[(2) - (2)].lex_str), sizeof(LEX_STRING));
            if (!lexstr || lex->prepared_stmt_params.push_back(lexstr))
              MYSQL_YYABORT;
          }
    break;

  case 75:

/* Line 1455 of yacc.c  */
#line 2152 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (Lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HELP");
              MYSQL_YYABORT;
            }
          }
    break;

  case 76:

/* Line 1455 of yacc.c  */
#line 2160 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_HELP;
            lex->help_arg= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 77:

/* Line 1455 of yacc.c  */
#line 2171 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex = Lex;
            lex->sql_command = SQLCOM_CHANGE_MASTER;
            /*
              Clear LEX_MASTER_INFO struct. repl_ignore_server_ids is freed
              in THD::cleanup_after_query. So it is guaranteed to be
              uninitialized before here.
	      Its allocation is deferred till the option is parsed below.
            */
            lex->mi.set_unspecified();
            DBUG_ASSERT(Lex->mi.repl_ignore_server_ids.elements == 0);
          }
    break;

  case 78:

/* Line 1455 of yacc.c  */
#line 2184 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 81:

/* Line 1455 of yacc.c  */
#line 2194 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.host = (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 82:

/* Line 1455 of yacc.c  */
#line 2198 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.bind_addr = (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 83:

/* Line 1455 of yacc.c  */
#line 2202 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.user = (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 84:

/* Line 1455 of yacc.c  */
#line 2206 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.password = (yyvsp[(3) - (3)].lex_str).str;
            Lex->contains_plaintext_password= true;
          }
    break;

  case 85:

/* Line 1455 of yacc.c  */
#line 2211 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.port = (yyvsp[(3) - (3)].ulong_num);
          }
    break;

  case 86:

/* Line 1455 of yacc.c  */
#line 2215 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.connect_retry = (yyvsp[(3) - (3)].ulong_num);
          }
    break;

  case 87:

/* Line 1455 of yacc.c  */
#line 2219 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.retry_count= (yyvsp[(3) - (3)].ulong_num);
            Lex->mi.retry_count_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
    break;

  case 88:

/* Line 1455 of yacc.c  */
#line 2224 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(3) - (3)].ulong_num) > MASTER_DELAY_MAX)
            {
              my_error(ER_MASTER_DELAY_VALUE_OUT_OF_RANGE, MYF(0),
                       static_cast<uint>((yyvsp[(3) - (3)].ulong_num)), MASTER_DELAY_MAX);
            }
            else
              Lex->mi.sql_delay = (yyvsp[(3) - (3)].ulong_num);
          }
    break;

  case 89:

/* Line 1455 of yacc.c  */
#line 2234 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl= (yyvsp[(3) - (3)].ulong_num) ? 
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
    break;

  case 90:

/* Line 1455 of yacc.c  */
#line 2239 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_ca= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 91:

/* Line 1455 of yacc.c  */
#line 2243 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_capath= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 92:

/* Line 1455 of yacc.c  */
#line 2247 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_cert= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 93:

/* Line 1455 of yacc.c  */
#line 2251 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_cipher= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 94:

/* Line 1455 of yacc.c  */
#line 2255 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_key= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 95:

/* Line 1455 of yacc.c  */
#line 2259 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_verify_server_cert= (yyvsp[(3) - (3)].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
    break;

  case 96:

/* Line 1455 of yacc.c  */
#line 2264 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_crl= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 97:

/* Line 1455 of yacc.c  */
#line 2268 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_crlpath= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 98:

/* Line 1455 of yacc.c  */
#line 2273 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.heartbeat_period= (float) (yyvsp[(3) - (3)].item_num)->val_real();
            if (Lex->mi.heartbeat_period > SLAVE_MAX_HEARTBEAT_PERIOD ||
                Lex->mi.heartbeat_period < 0.0)
            {
               const char format[]= "%d";
               char buf[4*sizeof(SLAVE_MAX_HEARTBEAT_PERIOD) + sizeof(format)];
               sprintf(buf, format, SLAVE_MAX_HEARTBEAT_PERIOD);
               my_error(ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE, MYF(0), buf);
               MYSQL_YYABORT;
            }
            if (Lex->mi.heartbeat_period > slave_net_timeout)
            {
              push_warning_printf(YYTHD, Sql_condition::WARN_LEVEL_WARN,
                                  ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX,
                                  ER(ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX));
            }
            if (Lex->mi.heartbeat_period < 0.001)
            {
              if (Lex->mi.heartbeat_period != 0.0)
              {
                push_warning_printf(YYTHD, Sql_condition::WARN_LEVEL_WARN,
                                    ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN,
                                    ER(ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN));
                Lex->mi.heartbeat_period= 0.0;
              }
              Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_DISABLE;
            }
            Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
    break;

  case 99:

/* Line 1455 of yacc.c  */
#line 2304 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.repl_ignore_server_ids_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
           }
    break;

  case 100:

/* Line 1455 of yacc.c  */
#line 2309 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.auto_position= (yyvsp[(3) - (3)].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE :
              LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
    break;

  case 105:

/* Line 1455 of yacc.c  */
#line 2326 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (Lex->mi.repl_ignore_server_ids.elements == 0)
            {
              my_init_dynamic_array2(&Lex->mi.repl_ignore_server_ids,
                                     sizeof(::server_id),
                                     Lex->mi.server_ids_buffer,
                                     array_elements(Lex->mi.server_ids_buffer),
                                     16);
            }
            insert_dynamic(&Lex->mi.repl_ignore_server_ids, (uchar*) &((yyvsp[(1) - (1)].ulong_num)));
          }
    break;

  case 106:

/* Line 1455 of yacc.c  */
#line 2340 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.log_file_name = (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 107:

/* Line 1455 of yacc.c  */
#line 2344 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.pos = (yyvsp[(3) - (3)].ulonglong_number);
            /* 
               If the user specified a value < BIN_LOG_HEADER_SIZE, adjust it
               instead of causing subsequent errors. 
               We need to do it in this file, because only there we know that 
               MASTER_LOG_POS has been explicitely specified. On the contrary
               in change_master() (sql_repl.cc) we cannot distinguish between 0
               (MASTER_LOG_POS explicitely specified as 0) and 0 (unspecified),
               whereas we want to distinguish (specified 0 means "read the binlog
               from 0" (4 in fact), unspecified means "don't change the position
               (keep the preceding value)").
            */
            Lex->mi.pos = max<ulonglong>(BIN_LOG_HEADER_SIZE, Lex->mi.pos);
          }
    break;

  case 108:

/* Line 1455 of yacc.c  */
#line 2360 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.relay_log_name = (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 109:

/* Line 1455 of yacc.c  */
#line 2364 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.relay_log_pos = (yyvsp[(3) - (3)].ulong_num);
            /* Adjust if < BIN_LOG_HEADER_SIZE (same comment as Lex->mi.pos) */
            Lex->mi.relay_log_pos = max<ulong>(BIN_LOG_HEADER_SIZE,
                                               Lex->mi.relay_log_pos);
          }
    break;

  case 110:

/* Line 1455 of yacc.c  */
#line 2376 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_CREATE_TABLE;
            if (!lex->select_lex.add_table_to_list(thd, (yyvsp[(5) - (5)].table), NULL,
                                                   TL_OPTION_UPDATING,
                                                   TL_WRITE, MDL_EXCLUSIVE))
              MYSQL_YYABORT;
            /*
              For CREATE TABLE, an non-existing table is not an error.
              Instruct open_tables() to just take an MDL lock if the
              table does not exist.
            */
            lex->query_tables->open_strategy= TABLE_LIST::OPEN_IF_EXISTS;
            lex->alter_info.reset();
            lex->col_list.empty();
            lex->change=NullS;
            memset(&lex->create_info, 0, sizeof(lex->create_info));
            lex->create_info.options=(yyvsp[(2) - (5)].num) | (yyvsp[(4) - (5)].num);
            lex->create_info.default_table_charset= NULL;
            lex->name.str= 0;
            lex->name.length= 0;
            lex->create_last_non_select_table= lex->last_table();
          }
    break;

  case 111:

/* Line 1455 of yacc.c  */
#line 2401 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->current_select= &lex->select_lex; 
            if ((lex->create_info.used_fields & HA_CREATE_USED_ENGINE) &&
                !lex->create_info.db_type)
            {
              lex->create_info.db_type=
                lex->create_info.options & HA_LEX_CREATE_TMP_TABLE ?
                ha_default_temp_handlerton(thd) : ha_default_handlerton(thd);
              push_warning_printf(YYTHD, Sql_condition::WARN_LEVEL_WARN,
                                  ER_WARN_USING_OTHER_HANDLER,
                                  ER(ER_WARN_USING_OTHER_HANDLER),
                                  ha_resolve_storage_engine_name(lex->create_info.db_type),
                                  (yyvsp[(5) - (7)].table)->table.str);
            }
            create_table_set_open_action_and_adjust_tables(lex);
          }
    break;

  case 112:

/* Line 1455 of yacc.c  */
#line 2420 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (add_create_index_prepare(Lex, (yyvsp[(7) - (7)].table)))
              MYSQL_YYABORT;
          }
    break;

  case 113:

/* Line 1455 of yacc.c  */
#line 2425 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (add_create_index(Lex, (yyvsp[(2) - (12)].key_type), (yyvsp[(4) - (12)].lex_str)))
              MYSQL_YYABORT;
          }
    break;

  case 114:

/* Line 1455 of yacc.c  */
#line 2429 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { }
    break;

  case 115:

/* Line 1455 of yacc.c  */
#line 2432 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (add_create_index_prepare(Lex, (yyvsp[(7) - (7)].table)))
              MYSQL_YYABORT;
          }
    break;

  case 116:

/* Line 1455 of yacc.c  */
#line 2437 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (add_create_index(Lex, (yyvsp[(2) - (12)].key_type), (yyvsp[(4) - (12)].lex_str)))
              MYSQL_YYABORT;
          }
    break;

  case 117:

/* Line 1455 of yacc.c  */
#line 2441 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { }
    break;

  case 118:

/* Line 1455 of yacc.c  */
#line 2444 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (add_create_index_prepare(Lex, (yyvsp[(7) - (7)].table)))
              MYSQL_YYABORT;
          }
    break;

  case 119:

/* Line 1455 of yacc.c  */
#line 2449 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (add_create_index(Lex, (yyvsp[(2) - (12)].key_type), (yyvsp[(4) - (12)].lex_str)))
              MYSQL_YYABORT;
          }
    break;

  case 120:

/* Line 1455 of yacc.c  */
#line 2453 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { }
    break;

  case 121:

/* Line 1455 of yacc.c  */
#line 2455 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.default_table_charset= NULL;
            Lex->create_info.used_fields= 0;
          }
    break;

  case 122:

/* Line 1455 of yacc.c  */
#line 2460 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CREATE_DB;
            lex->name= (yyvsp[(4) - (6)].lex_str);
            lex->create_info.options=(yyvsp[(3) - (6)].num);
          }
    break;

  case 123:

/* Line 1455 of yacc.c  */
#line 2467 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->create_view_mode= VIEW_CREATE_NEW;
            Lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED;
            Lex->create_view_suid= TRUE;
          }
    break;

  case 124:

/* Line 1455 of yacc.c  */
#line 2473 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 125:

/* Line 1455 of yacc.c  */
#line 2475 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_CREATE_USER;
          }
    break;

  case 126:

/* Line 1455 of yacc.c  */
#line 2479 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_tablespace_info->ts_cmd_type= CREATE_LOGFILE_GROUP;
          }
    break;

  case 127:

/* Line 1455 of yacc.c  */
#line 2483 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_tablespace_info->ts_cmd_type= CREATE_TABLESPACE;
          }
    break;

  case 128:

/* Line 1455 of yacc.c  */
#line 2487 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_CREATE_SERVER;
          }
    break;

  case 129:

/* Line 1455 of yacc.c  */
#line 2498 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->server_options.server_name= (yyvsp[(2) - (10)].lex_str).str;
            Lex->server_options.server_name_length= (yyvsp[(2) - (10)].lex_str).length;
            Lex->server_options.scheme= (yyvsp[(6) - (10)].lex_str).str;
          }
    break;

  case 132:

/* Line 1455 of yacc.c  */
#line 2512 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->server_options.username= (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 133:

/* Line 1455 of yacc.c  */
#line 2516 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->server_options.host= (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 134:

/* Line 1455 of yacc.c  */
#line 2520 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->server_options.db= (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 135:

/* Line 1455 of yacc.c  */
#line 2524 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->server_options.owner= (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 136:

/* Line 1455 of yacc.c  */
#line 2528 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->server_options.password= (yyvsp[(2) - (2)].lex_str).str;
            Lex->contains_plaintext_password= true;
          }
    break;

  case 137:

/* Line 1455 of yacc.c  */
#line 2533 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->server_options.socket= (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 138:

/* Line 1455 of yacc.c  */
#line 2537 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->server_options.port= (yyvsp[(2) - (2)].ulong_num);
          }
    break;

  case 139:

/* Line 1455 of yacc.c  */
#line 2544 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex=Lex;

            lex->stmt_definition_begin= (yyvsp[(1) - (4)].simple_string);
            lex->create_info.options= (yyvsp[(3) - (4)].num);
            if (!(lex->event_parse_data= Event_parse_data::new_instance(thd)))
              MYSQL_YYABORT;
            lex->event_parse_data->identifier= (yyvsp[(4) - (4)].spname);
            lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;

            lex->sql_command= SQLCOM_CREATE_EVENT;
            /* We need that for disallowing subqueries */
          }
    break;

  case 140:

/* Line 1455 of yacc.c  */
#line 2564 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_CREATE_EVENT;
          }
    break;

  case 141:

/* Line 1455 of yacc.c  */
#line 2575 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->item_expression= (yyvsp[(2) - (3)].item);
            Lex->event_parse_data->interval= (yyvsp[(3) - (3)].interval);
          }
    break;

  case 143:

/* Line 1455 of yacc.c  */
#line 2582 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->item_execute_at= (yyvsp[(2) - (2)].item);
          }
    break;

  case 144:

/* Line 1455 of yacc.c  */
#line 2588 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 145:

/* Line 1455 of yacc.c  */
#line 2590 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->status= Event_parse_data::ENABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
    break;

  case 146:

/* Line 1455 of yacc.c  */
#line 2596 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->status= Event_parse_data::SLAVESIDE_DISABLED;
            Lex->event_parse_data->status_changed= true; 
            (yyval.num)= 1;
          }
    break;

  case 147:

/* Line 1455 of yacc.c  */
#line 2602 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->status= Event_parse_data::DISABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
    break;

  case 148:

/* Line 1455 of yacc.c  */
#line 2611 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Item *item= new (YYTHD->mem_root) Item_func_now_local(0);
            if (item == NULL)
              MYSQL_YYABORT;
            Lex->event_parse_data->item_starts= item;
          }
    break;

  case 149:

/* Line 1455 of yacc.c  */
#line 2618 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->item_starts= (yyvsp[(2) - (2)].item);
          }
    break;

  case 151:

/* Line 1455 of yacc.c  */
#line 2626 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->item_ends= (yyvsp[(2) - (2)].item);
          }
    break;

  case 152:

/* Line 1455 of yacc.c  */
#line 2632 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 154:

/* Line 1455 of yacc.c  */
#line 2638 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_PRESERVE;
            (yyval.num)= 1;
          }
    break;

  case 155:

/* Line 1455 of yacc.c  */
#line 2644 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;
            (yyval.num)= 1;
          }
    break;

  case 156:

/* Line 1455 of yacc.c  */
#line 2652 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 157:

/* Line 1455 of yacc.c  */
#line 2654 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->comment= Lex->event_parse_data->comment= (yyvsp[(2) - (2)].lex_str);
            (yyval.num)= 1;
          }
    break;

  case 158:

/* Line 1455 of yacc.c  */
#line 2661 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;

            /*
              This stops the following :
              - CREATE EVENT ... DO CREATE EVENT ...;
              - ALTER  EVENT ... DO CREATE EVENT ...;
              - CREATE EVENT ... DO ALTER EVENT DO ....;
              - CREATE PROCEDURE ... BEGIN CREATE EVENT ... END|
              This allows:
              - CREATE EVENT ... DO DROP EVENT yyy;
              - CREATE EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO DROP EVENT yyy;
              - CREATE PROCEDURE ... BEGIN ALTER EVENT ... END|
                (the nested ALTER EVENT can have anything but DO clause)
              - CREATE PROCEDURE ... BEGIN DROP EVENT ... END|
            */
            if (lex->sphead)
            {
              my_error(ER_EVENT_RECURSION_FORBIDDEN, MYF(0));
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd,
                                          SP_TYPE_PROCEDURE,
                                          lex->event_parse_data->identifier);

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
            sp->m_chistics= &lex->sp_chistics;

            sp->set_body_start(thd, lip->get_cpp_ptr());
          }
    break;

  case 159:

/* Line 1455 of yacc.c  */
#line 2704 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            sp_finish_parsing(thd);

            lex->sp_chistics.suid= SP_IS_SUID;  //always the definer!
            lex->event_parse_data->body_changed= TRUE;
          }
    break;

  case 173:

/* Line 1455 of yacc.c  */
#line 2733 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
           LEX *lex=Lex;
           lex->users_list.empty();
           lex->columns.empty();
           lex->grant= lex->grant_tot_col= 0;
           lex->all_privileges= 0;
           lex->select_lex.db= 0;
           lex->ssl_type= SSL_TYPE_NOT_SPECIFIED;
           lex->ssl_cipher= lex->x509_subject= lex->x509_issuer= 0;
           memset(&(lex->mqh), 0, sizeof(lex->mqh));
         }
    break;

  case 174:

/* Line 1455 of yacc.c  */
#line 2748 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (!(yyvsp[(1) - (3)].lex_str).str ||
                (check_and_convert_db_name(&(yyvsp[(1) - (3)].lex_str), FALSE) != IDENT_NAME_OK))
              MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[(3) - (3)].lex_str)))
            {
              MYSQL_YYABORT;
            }
            (yyval.spname)= new sp_name((yyvsp[(1) - (3)].lex_str), (yyvsp[(3) - (3)].lex_str), true);
            if ((yyval.spname) == NULL)
              MYSQL_YYABORT;
            (yyval.spname)->init_qname(YYTHD);
          }
    break;

  case 175:

/* Line 1455 of yacc.c  */
#line 2762 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            LEX_STRING db;
            if (sp_check_name(&(yyvsp[(1) - (1)].lex_str)))
            {
              MYSQL_YYABORT;
            }
            if (lex->copy_db_to(&db.str, &db.length))
              MYSQL_YYABORT;
            (yyval.spname)= new sp_name(db, (yyvsp[(1) - (1)].lex_str), false);
            if ((yyval.spname) == NULL)
              MYSQL_YYABORT;
            (yyval.spname)->init_qname(thd);
          }
    break;

  case 176:

/* Line 1455 of yacc.c  */
#line 2780 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 177:

/* Line 1455 of yacc.c  */
#line 2781 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 178:

/* Line 1455 of yacc.c  */
#line 2785 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 179:

/* Line 1455 of yacc.c  */
#line 2786 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 180:

/* Line 1455 of yacc.c  */
#line 2792 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->sp_chistics.comment= (yyvsp[(2) - (2)].lex_str); }
    break;

  case 181:

/* Line 1455 of yacc.c  */
#line 2794 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { /* Just parse it, we only have one language for now. */ }
    break;

  case 182:

/* Line 1455 of yacc.c  */
#line 2796 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->sp_chistics.daccess= SP_NO_SQL; }
    break;

  case 183:

/* Line 1455 of yacc.c  */
#line 2798 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->sp_chistics.daccess= SP_CONTAINS_SQL; }
    break;

  case 184:

/* Line 1455 of yacc.c  */
#line 2800 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->sp_chistics.daccess= SP_READS_SQL_DATA; }
    break;

  case 185:

/* Line 1455 of yacc.c  */
#line 2802 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->sp_chistics.daccess= SP_MODIFIES_SQL_DATA; }
    break;

  case 186:

/* Line 1455 of yacc.c  */
#line 2804 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 187:

/* Line 1455 of yacc.c  */
#line 2809 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { }
    break;

  case 188:

/* Line 1455 of yacc.c  */
#line 2810 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->sp_chistics.detistic= TRUE; }
    break;

  case 189:

/* Line 1455 of yacc.c  */
#line 2811 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->sp_chistics.detistic= FALSE; }
    break;

  case 190:

/* Line 1455 of yacc.c  */
#line 2816 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->sp_chistics.suid= SP_IS_SUID;
          }
    break;

  case 191:

/* Line 1455 of yacc.c  */
#line 2820 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->sp_chistics.suid= SP_IS_NOT_SUID;
          }
    break;

  case 192:

/* Line 1455 of yacc.c  */
#line 2827 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex = Lex;

            lex->sql_command= SQLCOM_CALL;
            lex->spname= (yyvsp[(2) - (2)].spname);
            lex->value_list.empty();
            sp_add_used_routine(lex, YYTHD, (yyvsp[(2) - (2)].spname), SP_TYPE_PROCEDURE);
          }
    break;

  case 193:

/* Line 1455 of yacc.c  */
#line 2835 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 198:

/* Line 1455 of yacc.c  */
#line 2851 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
           Lex->value_list.push_back((yyvsp[(3) - (3)].item));
          }
    break;

  case 199:

/* Line 1455 of yacc.c  */
#line 2855 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->value_list.push_back((yyvsp[(1) - (1)].item));
          }
    break;

  case 204:

/* Line 1455 of yacc.c  */
#line 2873 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            lex->length= 0;
            lex->dec= 0;
            lex->type= 0;

            lex->default_value= 0;
            lex->on_update_value= 0;

            lex->comment= null_lex_str;
            lex->charset= NULL;

            lex->interval_list.empty();
            lex->uint_geom_type= 0;
          }
    break;

  case 205:

/* Line 1455 of yacc.c  */
#line 2893 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[(1) - (3)].lex_str), TRUE))
            {
              my_error(ER_SP_DUP_PARAM, MYF(0), (yyvsp[(1) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }

            sp_variable *spvar= pctx->add_variable(thd,
                                                   (yyvsp[(1) - (3)].lex_str),
                                                   (enum enum_field_types) (yyvsp[(3) - (3)].num),
                                                   sp_variable::MODE_IN);

            if (fill_field_definition(thd, sp,
                                      (enum enum_field_types) (yyvsp[(3) - (3)].num),
                                      &spvar->field_def))
            {
              MYSQL_YYABORT;
            }
            spvar->field_def.field_name= spvar->name.str;
            spvar->field_def.pack_flag |= FIELDFLAG_MAYBE_NULL;
          }
    break;

  case 210:

/* Line 1455 of yacc.c  */
#line 2934 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[(3) - (4)].lex_str), TRUE))
            {
              my_error(ER_SP_DUP_PARAM, MYF(0), (yyvsp[(3) - (4)].lex_str).str);
              MYSQL_YYABORT;
            }
            sp_variable *spvar= pctx->add_variable(thd,
                                                   (yyvsp[(3) - (4)].lex_str),
                                                   (enum enum_field_types) (yyvsp[(4) - (4)].num),
                                                   (sp_variable::enum_mode) (yyvsp[(1) - (4)].num));

            if (fill_field_definition(thd, sp,
                                      (enum enum_field_types) (yyvsp[(4) - (4)].num),
                                      &spvar->field_def))
            {
              MYSQL_YYABORT;
            }
            spvar->field_def.field_name= spvar->name.str;
            spvar->field_def.pack_flag |= FIELDFLAG_MAYBE_NULL;
          }
    break;

  case 211:

/* Line 1455 of yacc.c  */
#line 2962 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)= sp_variable::MODE_IN; }
    break;

  case 212:

/* Line 1455 of yacc.c  */
#line 2963 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)= sp_variable::MODE_IN; }
    break;

  case 213:

/* Line 1455 of yacc.c  */
#line 2964 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)= sp_variable::MODE_OUT; }
    break;

  case 214:

/* Line 1455 of yacc.c  */
#line 2965 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)= sp_variable::MODE_INOUT; }
    break;

  case 215:

/* Line 1455 of yacc.c  */
#line 2969 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 217:

/* Line 1455 of yacc.c  */
#line 2974 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 219:

/* Line 1455 of yacc.c  */
#line 2980 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
          }
    break;

  case 220:

/* Line 1455 of yacc.c  */
#line 2984 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            /* We check for declarations out of (standard) order this way
              because letting the grammar rules reflect it caused tricky
               shift/reduce conflicts with the wrong result. (And we get
               better error handling this way.) */
            if (((yyvsp[(2) - (3)].spblock).vars || (yyvsp[(2) - (3)].spblock).conds) && ((yyvsp[(1) - (3)].spblock).curs || (yyvsp[(1) - (3)].spblock).hndlrs))
            { /* Variable or condition following cursor or handler */
              my_message(ER_SP_VARCOND_AFTER_CURSHNDLR,
                         ER(ER_SP_VARCOND_AFTER_CURSHNDLR), MYF(0));
              MYSQL_YYABORT;
            }
            if ((yyvsp[(2) - (3)].spblock).curs && (yyvsp[(1) - (3)].spblock).hndlrs)
            { /* Cursor following handler */
              my_message(ER_SP_CURSOR_AFTER_HANDLER,
                         ER(ER_SP_CURSOR_AFTER_HANDLER), MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.spblock).vars= (yyvsp[(1) - (3)].spblock).vars + (yyvsp[(2) - (3)].spblock).vars;
            (yyval.spblock).conds= (yyvsp[(1) - (3)].spblock).conds + (yyvsp[(2) - (3)].spblock).conds;
            (yyval.spblock).hndlrs= (yyvsp[(1) - (3)].spblock).hndlrs + (yyvsp[(2) - (3)].spblock).hndlrs;
            (yyval.spblock).curs= (yyvsp[(1) - (3)].spblock).curs + (yyvsp[(2) - (3)].spblock).curs;
          }
    break;

  case 221:

/* Line 1455 of yacc.c  */
#line 3010 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->reset_lex(thd);
            pctx->declare_var_boundary((yyvsp[(2) - (2)].num));
          }
    break;

  case 222:

/* Line 1455 of yacc.c  */
#line 3021 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint num_vars= pctx->context_var_count();
            enum enum_field_types var_type= (enum enum_field_types) (yyvsp[(4) - (5)].num);
            Item *dflt_value_item= (yyvsp[(5) - (5)].item);
            LEX_STRING dflt_value_query= EMPTY_STR;

            if (dflt_value_item)
            {
              // sp_opt_default only pushes start ptr for DEFAULT clause.
              const char *expr_start_ptr=
                sp->m_parser_data.pop_expr_start_ptr();
              if (lex->is_metadata_used())
              {
                dflt_value_query= make_string(thd, expr_start_ptr,
                                              YY_TOKEN_END);
                if (!dflt_value_query.str)
                  MYSQL_YYABORT;
              }
            }
            else
            {
              dflt_value_item= new (thd->mem_root) Item_null();

              if (dflt_value_item == NULL)
                MYSQL_YYABORT;
            }

            // We can have several variables in DECLARE statement.
            // We need to create an sp_instr_set instruction for each variable.

            for (uint i = num_vars-(yyvsp[(2) - (5)].num) ; i < num_vars ; i++)
            {
              uint var_idx= pctx->var_context2runtime(i);
              sp_variable *spvar= pctx->find_variable(var_idx);

              if (!spvar)
                MYSQL_YYABORT;

              spvar->type= var_type;
              spvar->default_value= dflt_value_item;

              if (fill_field_definition(thd, sp, var_type, &spvar->field_def))
                MYSQL_YYABORT;

              spvar->field_def.field_name= spvar->name.str;
              spvar->field_def.pack_flag |= FIELDFLAG_MAYBE_NULL;

              /* The last instruction is responsible for freeing LEX. */

              sp_instr_set *is=
                new (thd->mem_root)
                  sp_instr_set(sp->instructions(),
                               lex,
                               var_idx,
                               dflt_value_item,
                               dflt_value_query,
                               (i == num_vars - 1));

              if (!is || sp->add_instr(thd, is))
                MYSQL_YYABORT;
            }

            pctx->declare_var_boundary(0);
            if (sp->restore_lex(thd))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyvsp[(2) - (5)].num);
            (yyval.spblock).conds= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
          }
    break;

  case 223:

/* Line 1455 of yacc.c  */
#line 3094 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_condition((yyvsp[(2) - (5)].lex_str), TRUE))
            {
              my_error(ER_SP_DUP_COND, MYF(0), (yyvsp[(2) - (5)].lex_str).str);
              MYSQL_YYABORT;
            }
            if(pctx->add_condition(thd, (yyvsp[(2) - (5)].lex_str), (yyvsp[(5) - (5)].spcondvalue)))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
            (yyval.spblock).conds= 1;
          }
    break;

  case 224:

/* Line 1455 of yacc.c  */
#line 3110 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp_pcontext *parent_pctx= lex->get_sp_current_parsing_ctx();

            sp_pcontext *handler_pctx=
              parent_pctx->push_context(thd, sp_pcontext::HANDLER_SCOPE);

            sp_handler *h=
              parent_pctx->add_handler(thd, (sp_handler::enum_type) (yyvsp[(2) - (4)].num));

            lex->set_sp_current_parsing_ctx(handler_pctx);

            sp_instr_hpush_jump *i=
              new (thd->mem_root)
                sp_instr_hpush_jump(sp->instructions(), handler_pctx, h);
            
            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            if ((yyvsp[(2) - (4)].num) == sp_handler::CONTINUE)
            {
              // Mark the end of CONTINUE handler scope.

              if (sp->m_parser_data.add_backpatch_entry(
                    i, handler_pctx->last_label()))
              {
                MYSQL_YYABORT;
              }
            }

            if (sp->m_parser_data.add_backpatch_entry(
                  i, handler_pctx->push_label(thd, EMPTY_STR, 0)))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 225:

/* Line 1455 of yacc.c  */
#line 3150 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *hlab= pctx->pop_label(); /* After this hdlr */

            if ((yyvsp[(2) - (7)].num) == sp_handler::CONTINUE)
            {
              sp_instr_hreturn *i=
                new (thd->mem_root) sp_instr_hreturn(sp->instructions(), pctx);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }
            else
            {  /* EXIT or UNDO handler, just jump to the end of the block */
              sp_instr_hreturn *i=
                new (thd->mem_root) sp_instr_hreturn(sp->instructions(), pctx);

              if (i == NULL ||
                  sp->add_instr(thd, i) ||
                  sp->m_parser_data.add_backpatch_entry(i, pctx->last_label()))
                MYSQL_YYABORT;
            }

            sp->m_parser_data.do_backpatch(hlab, sp->instructions());

            lex->set_sp_current_parsing_ctx(pctx->pop_context());

            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).curs= 0;
            (yyval.spblock).hndlrs= 1;
          }
    break;

  case 226:

/* Line 1455 of yacc.c  */
#line 3184 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.set_current_stmt_start_ptr(YY_TOKEN_END);
          }
    break;

  case 227:

/* Line 1455 of yacc.c  */
#line 3193 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *cursor_lex= Lex;
            sp_head *sp= cursor_lex->sphead;

            DBUG_ASSERT(cursor_lex->sql_command == SQLCOM_SELECT);

            if (cursor_lex->result)
            {
              my_message(ER_SP_BAD_CURSOR_SELECT, ER(ER_SP_BAD_CURSOR_SELECT),
                         MYF(0));
              MYSQL_YYABORT;
            }

            cursor_lex->sp_lex_in_use= true;

            if (sp->restore_lex(thd))
              MYSQL_YYABORT;

            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            uint offp;

            if (pctx->find_cursor((yyvsp[(2) - (6)].lex_str), &offp, TRUE))
            {
              my_error(ER_SP_DUP_CURS, MYF(0), (yyvsp[(2) - (6)].lex_str).str);
              delete cursor_lex;
              MYSQL_YYABORT;
            }

            LEX_STRING cursor_query= EMPTY_STR;

            if (cursor_lex->is_metadata_used())
            {
              cursor_query=
                make_string(thd,
                            sp->m_parser_data.get_current_stmt_start_ptr(),
                            YY_TOKEN_END);

              if (!cursor_query.str)
                MYSQL_YYABORT;
            }

            sp_instr_cpush *i=
              new (thd->mem_root)
                sp_instr_cpush(sp->instructions(), pctx,
                               cursor_lex, cursor_query,
                               pctx->current_cursor_count());

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                pctx->add_cursor((yyvsp[(2) - (6)].lex_str)))
            {
              MYSQL_YYABORT;
            }

            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= 0;
            (yyval.spblock).curs= 1;
          }
    break;

  case 228:

/* Line 1455 of yacc.c  */
#line 3256 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)= sp_handler::EXIT; }
    break;

  case 229:

/* Line 1455 of yacc.c  */
#line 3257 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)= sp_handler::CONTINUE; }
    break;

  case 230:

/* Line 1455 of yacc.c  */
#line 3263 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 231:

/* Line 1455 of yacc.c  */
#line 3265 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)+= 1; }
    break;

  case 232:

/* Line 1455 of yacc.c  */
#line 3270 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_pcontext *parent_pctx= pctx->parent_context();

            if (parent_pctx->check_duplicate_handler((yyvsp[(1) - (1)].spcondvalue)))
            {
              my_message(ER_SP_DUP_HANDLER, ER(ER_SP_DUP_HANDLER), MYF(0));
              MYSQL_YYABORT;
            }
            else
            {
              sp_instr_hpush_jump *i=
                (sp_instr_hpush_jump *)sp->last_instruction();

              i->add_condition((yyvsp[(1) - (1)].spcondvalue));
            }
          }
    break;

  case 233:

/* Line 1455 of yacc.c  */
#line 3293 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { /* mysql errno */
            if ((yyvsp[(1) - (1)].ulong_num) == 0)
            {
              my_error(ER_WRONG_VALUE, MYF(0), "CONDITION", "0");
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= new (YYTHD->mem_root) sp_condition_value((yyvsp[(1) - (1)].ulong_num));
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 235:

/* Line 1455 of yacc.c  */
#line 3308 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { /* SQLSTATE */

            /*
              An error is triggered:
                - if the specified string is not a valid SQLSTATE,
                - or if it represents the completion condition -- it is not
                  allowed to SIGNAL, or declare a handler for the completion
                  condition.
            */
            if (!is_sqlstate_valid(&(yyvsp[(3) - (3)].lex_str)) || is_sqlstate_completion((yyvsp[(3) - (3)].lex_str).str))
            {
              my_error(ER_SP_BAD_SQLSTATE, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= new (YYTHD->mem_root) sp_condition_value((yyvsp[(3) - (3)].lex_str).str);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 236:

/* Line 1455 of yacc.c  */
#line 3329 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 237:

/* Line 1455 of yacc.c  */
#line 3330 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 238:

/* Line 1455 of yacc.c  */
#line 3335 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.spcondvalue)= (yyvsp[(1) - (1)].spcondvalue);
          }
    break;

  case 239:

/* Line 1455 of yacc.c  */
#line 3339 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            (yyval.spcondvalue)= pctx->find_condition((yyvsp[(1) - (1)].lex_str), false);

            if ((yyval.spcondvalue) == NULL)
            {
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 240:

/* Line 1455 of yacc.c  */
#line 3352 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.spcondvalue)= new (YYTHD->mem_root) sp_condition_value(sp_condition_value::WARNING);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 241:

/* Line 1455 of yacc.c  */
#line 3358 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.spcondvalue)= new (YYTHD->mem_root) sp_condition_value(sp_condition_value::NOT_FOUND);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 242:

/* Line 1455 of yacc.c  */
#line 3364 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.spcondvalue)= new (YYTHD->mem_root) sp_condition_value(sp_condition_value::EXCEPTION);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 243:

/* Line 1455 of yacc.c  */
#line 3373 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            Yacc_state *state= & thd->m_parser_state->m_yacc;

            lex->sql_command= SQLCOM_SIGNAL;
            lex->m_sql_cmd=
              new (thd->mem_root) Sql_cmd_signal((yyvsp[(2) - (3)].spcondvalue), state->m_set_signal_info);
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 244:

/* Line 1455 of yacc.c  */
#line 3388 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (!pctx)
            {
              /* SIGNAL foo cannot be used outside of stored programs */
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }

            sp_condition_value *cond= pctx->find_condition((yyvsp[(1) - (1)].lex_str), false);

            if (!cond)
            {
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
            if (cond->type != sp_condition_value::SQLSTATE)
            {
              my_error(ER_SIGNAL_BAD_CONDITION_TYPE, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= cond;
          }
    break;

  case 245:

/* Line 1455 of yacc.c  */
#line 3414 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.spcondvalue)= (yyvsp[(1) - (1)].spcondvalue); }
    break;

  case 246:

/* Line 1455 of yacc.c  */
#line 3419 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.spcondvalue)= NULL; }
    break;

  case 247:

/* Line 1455 of yacc.c  */
#line 3421 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.spcondvalue)= (yyvsp[(1) - (1)].spcondvalue); }
    break;

  case 248:

/* Line 1455 of yacc.c  */
#line 3426 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            YYTHD->m_parser_state->m_yacc.m_set_signal_info.clear();
          }
    break;

  case 250:

/* Line 1455 of yacc.c  */
#line 3434 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Set_signal_information *info;
            info= & YYTHD->m_parser_state->m_yacc.m_set_signal_info;
            int index= (int) (yyvsp[(1) - (3)].diag_condition_item_name);
            info->clear();
            info->m_item[index]= (yyvsp[(3) - (3)].item);
          }
    break;

  case 251:

/* Line 1455 of yacc.c  */
#line 3443 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Set_signal_information *info;
            info= & YYTHD->m_parser_state->m_yacc.m_set_signal_info;
            int index= (int) (yyvsp[(3) - (5)].diag_condition_item_name);
            if (info->m_item[index] != NULL)
            {
              my_error(ER_DUP_SIGNAL_SET, MYF(0),
                       Diag_condition_item_names[index].str);
              MYSQL_YYABORT;
            }
            info->m_item[index]= (yyvsp[(5) - (5)].item);
          }
    break;

  case 252:

/* Line 1455 of yacc.c  */
#line 3462 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].item); }
    break;

  case 253:

/* Line 1455 of yacc.c  */
#line 3464 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (1)].item)->type() == Item::FUNC_ITEM)
            {
              Item_func *item= (Item_func*) (yyvsp[(1) - (1)].item);
              if (item->functype() == Item_func::SUSERVAR_FUNC)
              {
                /*
                  Don't allow the following syntax:
                    SIGNAL/RESIGNAL ...
                    SET <signal condition item name> = @foo := expr
                */
                my_parse_error(ER(ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
              }
            }
            (yyval.item)= (yyvsp[(1) - (1)].item);
          }
    break;

  case 254:

/* Line 1455 of yacc.c  */
#line 3482 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].item); }
    break;

  case 255:

/* Line 1455 of yacc.c  */
#line 3488 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.diag_condition_item_name)= DIAG_CLASS_ORIGIN; }
    break;

  case 256:

/* Line 1455 of yacc.c  */
#line 3490 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.diag_condition_item_name)= DIAG_SUBCLASS_ORIGIN; }
    break;

  case 257:

/* Line 1455 of yacc.c  */
#line 3492 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.diag_condition_item_name)= DIAG_CONSTRAINT_CATALOG; }
    break;

  case 258:

/* Line 1455 of yacc.c  */
#line 3494 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.diag_condition_item_name)= DIAG_CONSTRAINT_SCHEMA; }
    break;

  case 259:

/* Line 1455 of yacc.c  */
#line 3496 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.diag_condition_item_name)= DIAG_CONSTRAINT_NAME; }
    break;

  case 260:

/* Line 1455 of yacc.c  */
#line 3498 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.diag_condition_item_name)= DIAG_CATALOG_NAME; }
    break;

  case 261:

/* Line 1455 of yacc.c  */
#line 3500 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.diag_condition_item_name)= DIAG_SCHEMA_NAME; }
    break;

  case 262:

/* Line 1455 of yacc.c  */
#line 3502 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.diag_condition_item_name)= DIAG_TABLE_NAME; }
    break;

  case 263:

/* Line 1455 of yacc.c  */
#line 3504 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.diag_condition_item_name)= DIAG_COLUMN_NAME; }
    break;

  case 264:

/* Line 1455 of yacc.c  */
#line 3506 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.diag_condition_item_name)= DIAG_CURSOR_NAME; }
    break;

  case 265:

/* Line 1455 of yacc.c  */
#line 3508 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.diag_condition_item_name)= DIAG_MESSAGE_TEXT; }
    break;

  case 266:

/* Line 1455 of yacc.c  */
#line 3510 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.diag_condition_item_name)= DIAG_MYSQL_ERRNO; }
    break;

  case 267:

/* Line 1455 of yacc.c  */
#line 3515 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            Yacc_state *state= & thd->m_parser_state->m_yacc;

            lex->sql_command= SQLCOM_RESIGNAL;
            lex->m_sql_cmd=
              new (thd->mem_root) Sql_cmd_resignal((yyvsp[(2) - (3)].spcondvalue),
                                                   state->m_set_signal_info);
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 268:

/* Line 1455 of yacc.c  */
#line 3531 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Diagnostics_information *info= (yyvsp[(4) - (4)].diag_info);

            info->set_which_da((yyvsp[(2) - (4)].diag_area));

            Lex->sql_command= SQLCOM_GET_DIAGNOSTICS;
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_get_diagnostics(info);

            if (Lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 269:

/* Line 1455 of yacc.c  */
#line 3546 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
    break;

  case 270:

/* Line 1455 of yacc.c  */
#line 3548 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
    break;

  case 271:

/* Line 1455 of yacc.c  */
#line 3553 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.diag_info)= new (YYTHD->mem_root) Statement_information((yyvsp[(1) - (1)].stmt_info_list));
            if ((yyval.diag_info) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 272:

/* Line 1455 of yacc.c  */
#line 3559 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.diag_info)= new (YYTHD->mem_root) Condition_information((yyvsp[(2) - (3)].item), (yyvsp[(3) - (3)].cond_info_list));
            if ((yyval.diag_info) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 273:

/* Line 1455 of yacc.c  */
#line 3568 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.stmt_info_list)= new (YYTHD->mem_root) List<Statement_information_item>;
            if ((yyval.stmt_info_list) == NULL || (yyval.stmt_info_list)->push_back((yyvsp[(1) - (1)].stmt_info_item)))
              MYSQL_YYABORT;
          }
    break;

  case 274:

/* Line 1455 of yacc.c  */
#line 3574 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].stmt_info_list)->push_back((yyvsp[(3) - (3)].stmt_info_item)))
              MYSQL_YYABORT;
            (yyval.stmt_info_list)= (yyvsp[(1) - (3)].stmt_info_list);
          }
    break;

  case 275:

/* Line 1455 of yacc.c  */
#line 3583 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.stmt_info_item)= new (YYTHD->mem_root) Statement_information_item((yyvsp[(3) - (3)].stmt_info_item_name), (yyvsp[(1) - (3)].item));
            if ((yyval.stmt_info_item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 276:

/* Line 1455 of yacc.c  */
#line 3591 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;
            sp_head *sp= lex->sphead;

            /*
              NOTE: lex->sphead is NULL if we're parsing something like
              'GET DIAGNOSTICS v' outside a stored program. We should throw
              ER_SP_UNDECLARED_VAR in such cases.
            */

            if (!sp)
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }

            (yyval.item)=
              create_item_for_sp_var(
                thd, (yyvsp[(1) - (1)].lex_str), NULL,
                sp->m_parser_data.get_current_stmt_start_ptr(),
                lip->get_tok_start(),
                lip->get_ptr());

            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 277:

/* Line 1455 of yacc.c  */
#line 3620 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_get_user_var((yyvsp[(2) - (2)].lex_str));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 278:

/* Line 1455 of yacc.c  */
#line 3629 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.stmt_info_item_name)= Statement_information_item::NUMBER; }
    break;

  case 279:

/* Line 1455 of yacc.c  */
#line 3631 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.stmt_info_item_name)= Statement_information_item::ROW_COUNT; }
    break;

  case 280:

/* Line 1455 of yacc.c  */
#line 3640 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].item); }
    break;

  case 281:

/* Line 1455 of yacc.c  */
#line 3645 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.cond_info_list)= new (YYTHD->mem_root) List<Condition_information_item>;
            if ((yyval.cond_info_list) == NULL || (yyval.cond_info_list)->push_back((yyvsp[(1) - (1)].cond_info_item)))
              MYSQL_YYABORT;
          }
    break;

  case 282:

/* Line 1455 of yacc.c  */
#line 3651 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].cond_info_list)->push_back((yyvsp[(3) - (3)].cond_info_item)))
              MYSQL_YYABORT;
            (yyval.cond_info_list)= (yyvsp[(1) - (3)].cond_info_list);
          }
    break;

  case 283:

/* Line 1455 of yacc.c  */
#line 3660 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.cond_info_item)= new (YYTHD->mem_root) Condition_information_item((yyvsp[(3) - (3)].cond_info_item_name), (yyvsp[(1) - (3)].item));
            if ((yyval.cond_info_item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 284:

/* Line 1455 of yacc.c  */
#line 3668 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::CLASS_ORIGIN; }
    break;

  case 285:

/* Line 1455 of yacc.c  */
#line 3670 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::SUBCLASS_ORIGIN; }
    break;

  case 286:

/* Line 1455 of yacc.c  */
#line 3672 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_CATALOG; }
    break;

  case 287:

/* Line 1455 of yacc.c  */
#line 3674 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_SCHEMA; }
    break;

  case 288:

/* Line 1455 of yacc.c  */
#line 3676 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_NAME; }
    break;

  case 289:

/* Line 1455 of yacc.c  */
#line 3678 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::CATALOG_NAME; }
    break;

  case 290:

/* Line 1455 of yacc.c  */
#line 3680 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::SCHEMA_NAME; }
    break;

  case 291:

/* Line 1455 of yacc.c  */
#line 3682 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::TABLE_NAME; }
    break;

  case 292:

/* Line 1455 of yacc.c  */
#line 3684 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::COLUMN_NAME; }
    break;

  case 293:

/* Line 1455 of yacc.c  */
#line 3686 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::CURSOR_NAME; }
    break;

  case 294:

/* Line 1455 of yacc.c  */
#line 3688 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::MESSAGE_TEXT; }
    break;

  case 295:

/* Line 1455 of yacc.c  */
#line 3690 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::MYSQL_ERRNO; }
    break;

  case 296:

/* Line 1455 of yacc.c  */
#line 3692 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::RETURNED_SQLSTATE; }
    break;

  case 297:

/* Line 1455 of yacc.c  */
#line 3697 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            /* NOTE: field definition is filled in sp_decl section. */

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[(1) - (1)].lex_str), TRUE))
            {
              my_error(ER_SP_DUP_VAR, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }

            pctx->add_variable(thd,
                               (yyvsp[(1) - (1)].lex_str),
                               MYSQL_TYPE_DECIMAL,
                               sp_variable::MODE_IN);
            (yyval.num)= 1;
          }
    break;

  case 298:

/* Line 1455 of yacc.c  */
#line 3717 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            /* NOTE: field definition is filled in sp_decl section. */

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[(3) - (3)].lex_str), TRUE))
            {
              my_error(ER_SP_DUP_VAR, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }

            pctx->add_variable(thd,
                               (yyvsp[(3) - (3)].lex_str),
                               MYSQL_TYPE_DECIMAL,
                               sp_variable::MODE_IN);
            (yyval.num)= (yyvsp[(1) - (3)].num) + 1;
          }
    break;

  case 299:

/* Line 1455 of yacc.c  */
#line 3740 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.item) = NULL; }
    break;

  case 300:

/* Line 1455 of yacc.c  */
#line 3742 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->sphead->m_parser_data.push_expr_start_ptr(YY_TOKEN_END); }
    break;

  case 301:

/* Line 1455 of yacc.c  */
#line 3744 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.item) = (yyvsp[(3) - (3)].item); }
    break;

  case 315:

/* Line 1455 of yacc.c  */
#line 3765 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->sphead->m_parser_data.new_cont_backpatch(); }
    break;

  case 316:

/* Line 1455 of yacc.c  */
#line 3767 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            sp_head *sp= Lex->sphead;

            sp->m_parser_data.do_cont_backpatch(sp->instructions());
          }
    break;

  case 317:

/* Line 1455 of yacc.c  */
#line 3775 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.set_current_stmt_start_ptr(lip->get_tok_start());
          }
    break;

  case 318:

/* Line 1455 of yacc.c  */
#line 3785 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->m_flags|= sp_get_flags_for_command(lex);
            if (lex->sql_command == SQLCOM_CHANGE_DB)
            { /* "USE db" doesn't work in a procedure */
              my_error(ER_SP_BADSTATEMENT, MYF(0), "USE");
              MYSQL_YYABORT;
            }
            /*
              Don't add an instruction for SET statements, since all
              instructions for them were already added during processing
              of "set" rule.
            */
            DBUG_ASSERT(lex->sql_command != SQLCOM_SET_OPTION ||
                        lex->var_list.is_empty());
            if (lex->sql_command != SQLCOM_SET_OPTION)
            {
              /* Extract the query statement from the tokenizer. */

              LEX_STRING query=
                make_string(thd,
                            sp->m_parser_data.get_current_stmt_start_ptr(),
                            YY_TOKEN_END);

              if (!query.str)
                MYSQL_YYABORT;

              /* Add instruction. */

              sp_instr_stmt *i=
                new (thd->mem_root)
                  sp_instr_stmt(sp->instructions(), lex, query);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            if (sp->restore_lex(thd))
              MYSQL_YYABORT;
          }
    break;

  case 319:

/* Line 1455 of yacc.c  */
#line 3832 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);

            sp->m_parser_data.push_expr_start_ptr(YY_TOKEN_END);
          }
    break;

  case 320:

/* Line 1455 of yacc.c  */
#line 3842 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            /* Extract expression string. */

            LEX_STRING expr_query= EMPTY_STR;
            const char *expr_start_ptr= sp->m_parser_data.pop_expr_start_ptr();

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, YY_TOKEN_END);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Check that this is a stored function. */

            if (sp->m_type != SP_TYPE_FUNCTION)
            {
              my_message(ER_SP_BADRETURN, ER(ER_SP_BADRETURN), MYF(0));
              MYSQL_YYABORT;
            }

            /* Indicate that we've reached RETURN statement. */

            sp->m_flags|= sp_head::HAS_RETURN;

            /* Add instruction. */

            sp_instr_freturn *i=
              new (thd->mem_root)
                sp_instr_freturn(sp->instructions(), lex, (yyvsp[(3) - (3)].item), expr_query,
                                 sp->m_return_field_def.sql_type);

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 321:

/* Line 1455 of yacc.c  */
#line 3888 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { /* Unlabeled controls get a secret label. */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            pctx->push_label(thd,
                             EMPTY_STR,
                             sp->instructions());
          }
    break;

  case 322:

/* Line 1455 of yacc.c  */
#line 3899 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());
          }
    break;

  case 323:

/* Line 1455 of yacc.c  */
#line 3911 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp = lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[(2) - (2)].lex_str));

            if (! lab)
            {
              my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "LEAVE", (yyvsp[(2) - (2)].lex_str).str);
              MYSQL_YYABORT;
            }

            uint ip= sp->instructions();

            /*
              When jumping to a BEGIN-END block end, the target jump
              points to the block hpop/cpop cleanup instructions,
              so we should exclude the block context here.
              When jumping to something else (i.e., sp_label::ITERATION),
              there are no hpop/cpop at the jump destination,
              so we should include the block context here for cleanup.
            */
            bool exclusive= (lab->type == sp_label::BEGIN);

            uint n= pctx->diff_handlers(lab->ctx, exclusive);

            if (n)
            {
              sp_instr_hpop *hpop=
                new (thd->mem_root) sp_instr_hpop(ip++, pctx);

              if (!hpop || sp->add_instr(thd, hpop))
                MYSQL_YYABORT;
            }

            n= pctx->diff_cursors(lab->ctx, exclusive);

            if (n)
            {
              sp_instr_cpop *cpop=
                new (thd->mem_root) sp_instr_cpop(ip++, pctx, n);

              if (!cpop || sp->add_instr(thd, cpop))
                MYSQL_YYABORT;
            }

            sp_instr_jump *i= new (thd->mem_root) sp_instr_jump(ip, pctx);

            if (!i ||
                /* Jumping forward */
                sp->m_parser_data.add_backpatch_entry(i, lab) ||
                sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
    break;

  case 324:

/* Line 1455 of yacc.c  */
#line 3970 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[(2) - (2)].lex_str));

            if (! lab || lab->type != sp_label::ITERATION)
            {
              my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "ITERATE", (yyvsp[(2) - (2)].lex_str).str);
              MYSQL_YYABORT;
            }

            uint ip= sp->instructions();

            /* Inclusive the dest. */
            uint n= pctx->diff_handlers(lab->ctx, FALSE);

            if (n)
            {
              sp_instr_hpop *hpop=
                new (thd->mem_root) sp_instr_hpop(ip++, pctx);

              if (!hpop || sp->add_instr(thd, hpop))
                MYSQL_YYABORT;
            }

            /* Inclusive the dest. */
            n= pctx->diff_cursors(lab->ctx, FALSE);

            if (n)
            {
              sp_instr_cpop *cpop=
                new (thd->mem_root) sp_instr_cpop(ip++, pctx, n);

              if (!cpop || sp->add_instr(thd, cpop))
                MYSQL_YYABORT;
            }

            /* Jump back */
            sp_instr_jump *i=
              new (thd->mem_root) sp_instr_jump(ip, pctx, lab->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
    break;

  case 325:

/* Line 1455 of yacc.c  */
#line 4020 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[(2) - (2)].lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[(2) - (2)].lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_copen *i=
              new (thd->mem_root)
                sp_instr_copen(sp->instructions(), pctx, offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
    break;

  case 326:

/* Line 1455 of yacc.c  */
#line 4044 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[(3) - (4)].lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[(3) - (4)].lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_cfetch *i=
              new (thd->mem_root)
                sp_instr_cfetch(sp->instructions(), pctx, offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
    break;

  case 327:

/* Line 1455 of yacc.c  */
#line 4065 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 328:

/* Line 1455 of yacc.c  */
#line 4070 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[(2) - (2)].lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[(2) - (2)].lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_cclose *i=
              new (thd->mem_root)
                sp_instr_cclose(sp->instructions(), pctx, offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
    break;

  case 332:

/* Line 1455 of yacc.c  */
#line 4100 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            if (!pctx || !(spv= pctx->find_variable((yyvsp[(1) - (1)].lex_str), false)))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();

            i->add_to_varlist(spv);
          }
    break;

  case 333:

/* Line 1455 of yacc.c  */
#line 4118 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            if (!pctx || !(spv= pctx->find_variable((yyvsp[(3) - (3)].lex_str), false)))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();

            i->add_to_varlist(spv);
          }
    break;

  case 334:

/* Line 1455 of yacc.c  */
#line 4138 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.push_expr_start_ptr(YY_TOKEN_END);
          }
    break;

  case 335:

/* Line 1455 of yacc.c  */
#line 4147 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_STRING expr_query= EMPTY_STR;
            const char *expr_start_ptr= sp->m_parser_data.pop_expr_start_ptr();

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, YY_TOKEN_END);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            sp_instr_jump_if_not *i =
              new (thd->mem_root)
                sp_instr_jump_if_not(sp->instructions(), lex,
                                     (yyvsp[(2) - (2)].item), expr_query);

            /* Add jump instruction. */

            if (i == NULL ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_STR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 336:

/* Line 1455 of yacc.c  */
#line 4183 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i =
              new (thd->mem_root) sp_instr_jump(sp->instructions(), pctx);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());

            sp->m_parser_data.add_backpatch_entry(
              i, pctx->push_label(thd, EMPTY_STR, 0));
          }
    break;

  case 337:

/* Line 1455 of yacc.c  */
#line 4202 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());
          }
    break;

  case 343:

/* Line 1455 of yacc.c  */
#line 4225 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            case_stmt_action_case(thd);

            sp->reset_lex(thd); /* For CASE-expr $3 */
            sp->m_parser_data.push_expr_start_ptr(YY_TOKEN_END);
          }
    break;

  case 344:

/* Line 1455 of yacc.c  */
#line 4236 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            /* Extract CASE-expression string. */

            LEX_STRING case_expr_query= EMPTY_STR;
            const char *expr_start_ptr= sp->m_parser_data.pop_expr_start_ptr();

            if (lex->is_metadata_used())
            {
              case_expr_query= make_string(thd, expr_start_ptr, YY_TOKEN_END);
              if (!case_expr_query.str)
                MYSQL_YYABORT;
            }

            /* Register new CASE-expression and get its id. */

            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            int case_expr_id= pctx->push_case_expr_id();

            if (case_expr_id < 0)
              MYSQL_YYABORT;

            /* Add CASE-set instruction. */

            sp_instr_set_case_expr *i=
              new (thd->mem_root)
                sp_instr_set_case_expr(sp->instructions(), lex,
                                       case_expr_id, (yyvsp[(3) - (3)].item), case_expr_query);

            if (i == NULL ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 345:

/* Line 1455 of yacc.c  */
#line 4280 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            case_stmt_action_end_case(Lex, true);
          }
    break;

  case 346:

/* Line 1455 of yacc.c  */
#line 4287 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            case_stmt_action_case(YYTHD);
          }
    break;

  case 347:

/* Line 1455 of yacc.c  */
#line 4294 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            case_stmt_action_end_case(Lex, false);
          }
    break;

  case 352:

/* Line 1455 of yacc.c  */
#line 4311 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.push_expr_start_ptr(YY_TOKEN_END);
          }
    break;

  case 353:

/* Line 1455 of yacc.c  */
#line 4320 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            /* Simple case: <caseval> = <whenval> */

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_STRING when_expr_query= EMPTY_STR;
            const char *expr_start_ptr= sp->m_parser_data.pop_expr_start_ptr();

            if (lex->is_metadata_used())
            {
              when_expr_query= make_string(thd, expr_start_ptr, YY_TOKEN_END);
              if (!when_expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add CASE-when-jump instruction. */

            sp_instr_jump_case_when *i =
              new (thd->mem_root)
                sp_instr_jump_case_when(sp->instructions(), lex,
                                        pctx->get_current_case_expr_id(),
                                        (yyvsp[(3) - (3)].item), when_expr_query);

            if (i == NULL ||
                i->on_after_expr_parsing(thd) ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_STR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 354:

/* Line 1455 of yacc.c  */
#line 4361 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (case_stmt_action_then(YYTHD, Lex))
              MYSQL_YYABORT;
          }
    break;

  case 355:

/* Line 1455 of yacc.c  */
#line 4369 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.push_expr_start_ptr(YY_TOKEN_END);
          }
    break;

  case 356:

/* Line 1455 of yacc.c  */
#line 4378 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_STRING when_query= EMPTY_STR;
            const char *expr_start_ptr= sp->m_parser_data.pop_expr_start_ptr();

            if (lex->is_metadata_used())
            {
              when_query= make_string(thd, expr_start_ptr, YY_TOKEN_END);
              if (!when_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              new (thd->mem_root)
                sp_instr_jump_if_not(sp->instructions(), lex, (yyvsp[(3) - (3)].item), when_query);

            if (i == NULL ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_STR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 357:

/* Line 1455 of yacc.c  */
#line 4414 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (case_stmt_action_then(YYTHD, Lex))
              MYSQL_YYABORT;
          }
    break;

  case 358:

/* Line 1455 of yacc.c  */
#line 4422 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_error *i=
              new (thd->mem_root)
                sp_instr_error(sp->instructions(), pctx, ER_SP_CASE_NOT_FOUND);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
    break;

  case 360:

/* Line 1455 of yacc.c  */
#line 4440 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[(1) - (2)].lex_str));

            if (lab)
            {
              my_error(ER_SP_LABEL_REDEFINE, MYF(0), (yyvsp[(1) - (2)].lex_str).str);
              MYSQL_YYABORT;
            }
            else
            {
              lab= pctx->push_label(YYTHD, (yyvsp[(1) - (2)].lex_str), sp->instructions());
              lab->type= sp_label::ITERATION;
            }
          }
    break;

  case 361:

/* Line 1455 of yacc.c  */
#line 4458 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->pop_label();

            if ((yyvsp[(5) - (5)].lex_str).str)
            {
              if (my_strcasecmp(system_charset_info, (yyvsp[(5) - (5)].lex_str).str, lab->name.str) != 0)
              {
                my_error(ER_SP_LABEL_MISMATCH, MYF(0), (yyvsp[(5) - (5)].lex_str).str);
                MYSQL_YYABORT;
              }
            }
            sp->m_parser_data.do_backpatch(lab, sp->instructions());
          }
    break;

  case 362:

/* Line 1455 of yacc.c  */
#line 4477 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= null_lex_str; }
    break;

  case 363:

/* Line 1455 of yacc.c  */
#line 4478 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str); }
    break;

  case 364:

/* Line 1455 of yacc.c  */
#line 4483 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[(1) - (2)].lex_str));

            if (lab)
            {
              my_error(ER_SP_LABEL_REDEFINE, MYF(0), (yyvsp[(1) - (2)].lex_str).str);
              MYSQL_YYABORT;
            }

            lab= pctx->push_label(YYTHD, (yyvsp[(1) - (2)].lex_str), sp->instructions());
            lab->type= sp_label::BEGIN;
          }
    break;

  case 365:

/* Line 1455 of yacc.c  */
#line 4499 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->pop_label();

            if ((yyvsp[(5) - (5)].lex_str).str)
            {
              if (my_strcasecmp(system_charset_info, (yyvsp[(5) - (5)].lex_str).str, lab->name.str) != 0)
              {
                my_error(ER_SP_LABEL_MISMATCH, MYF(0), (yyvsp[(5) - (5)].lex_str).str);
                MYSQL_YYABORT;
              }
            }
          }
    break;

  case 366:

/* Line 1455 of yacc.c  */
#line 4516 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { /* Unlabeled blocks get a secret label. */
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_label *lab=
              pctx->push_label(YYTHD, EMPTY_STR, sp->instructions());

            lab->type= sp_label::BEGIN;
          }
    break;

  case 367:

/* Line 1455 of yacc.c  */
#line 4527 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->get_sp_current_parsing_ctx()->pop_label();
          }
    break;

  case 368:

/* Line 1455 of yacc.c  */
#line 4535 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { /* QQ This is just a dummy for grouping declarations and statements
              together. No [[NOT] ATOMIC] yet, and we need to figure out how
              make it coexist with the existing BEGIN COMMIT/ROLLBACK. */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *parent_pctx= lex->get_sp_current_parsing_ctx();

            sp_pcontext *child_pctx=
              parent_pctx->push_context(thd, sp_pcontext::REGULAR_SCOPE);

            lex->set_sp_current_parsing_ctx(child_pctx);
          }
    break;

  case 369:

/* Line 1455 of yacc.c  */
#line 4550 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            // We always have a label.
            sp->m_parser_data.do_backpatch(pctx->last_label(),
                                           sp->instructions());

            if ((yyvsp[(3) - (5)].spblock).hndlrs)
            {
              sp_instr *i=
                new (thd->mem_root) sp_instr_hpop(sp->instructions(), pctx);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            if ((yyvsp[(3) - (5)].spblock).curs)
            {
              sp_instr *i=
                new (thd->mem_root)
                  sp_instr_cpop(sp->instructions(), pctx, (yyvsp[(3) - (5)].spblock).curs);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            lex->set_sp_current_parsing_ctx(pctx->pop_context());
          }
    break;

  case 370:

/* Line 1455 of yacc.c  */
#line 4586 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i=
                new (thd->mem_root)
                  sp_instr_jump(sp->instructions(), pctx,
                                pctx->last_label()->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
    break;

  case 371:

/* Line 1455 of yacc.c  */
#line 4601 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.push_expr_start_ptr(YY_TOKEN_END);
          }
    break;

  case 372:

/* Line 1455 of yacc.c  */
#line 4610 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_STRING expr_query= EMPTY_STR;
            const char *expr_start_ptr= sp->m_parser_data.pop_expr_start_ptr();

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, YY_TOKEN_END);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              new (thd->mem_root)
                sp_instr_jump_if_not(sp->instructions(), lex, (yyvsp[(3) - (3)].item), expr_query);

            if (i == NULL ||
                /* Jumping forward */
                sp->m_parser_data.add_backpatch_entry(i, pctx->last_label()) ||
                sp->m_parser_data.new_cont_backpatch() ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 373:

/* Line 1455 of yacc.c  */
#line 4648 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i=
              new (thd->mem_root)
                sp_instr_jump(sp->instructions(), pctx, pctx->last_label()->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            sp->m_parser_data.do_cont_backpatch(sp->instructions());
          }
    break;

  case 374:

/* Line 1455 of yacc.c  */
#line 4664 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.push_expr_start_ptr(YY_TOKEN_END);
          }
    break;

  case 375:

/* Line 1455 of yacc.c  */
#line 4673 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint ip= sp->instructions();

            /* Extract expression string. */

            LEX_STRING expr_query= EMPTY_STR;
            const char *expr_start_ptr= sp->m_parser_data.pop_expr_start_ptr();

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, YY_TOKEN_END);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              new (thd->mem_root)
                sp_instr_jump_if_not(ip, lex, (yyvsp[(5) - (5)].item), expr_query,
                                     pctx->last_label()->ip);

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }

            /* We can shortcut the cont_backpatch here */
            i->set_cont_dest(ip + 1);
          }
    break;

  case 377:

/* Line 1455 of yacc.c  */
#line 4714 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TRG_ACTION_BEFORE; }
    break;

  case 378:

/* Line 1455 of yacc.c  */
#line 4716 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TRG_ACTION_AFTER; }
    break;

  case 379:

/* Line 1455 of yacc.c  */
#line 4721 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TRG_EVENT_INSERT; }
    break;

  case 380:

/* Line 1455 of yacc.c  */
#line 4723 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TRG_EVENT_UPDATE; }
    break;

  case 381:

/* Line 1455 of yacc.c  */
#line 4725 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TRG_EVENT_DELETE; }
    break;

  case 385:

/* Line 1455 of yacc.c  */
#line 4759 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 386:

/* Line 1455 of yacc.c  */
#line 4761 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->logfile_group_name= (yyvsp[(4) - (4)].lex_str).str;
          }
    break;

  case 387:

/* Line 1455 of yacc.c  */
#line 4771 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { 
            Lex->alter_tablespace_info->ts_alter_tablespace_type= ALTER_TABLESPACE_ADD_FILE; 
          }
    break;

  case 388:

/* Line 1455 of yacc.c  */
#line 4777 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { 
            Lex->alter_tablespace_info->ts_alter_tablespace_type= ALTER_TABLESPACE_DROP_FILE; 
          }
    break;

  case 393:

/* Line 1455 of yacc.c  */
#line 4800 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 444:

/* Line 1455 of yacc.c  */
#line 4898 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->data_file_name= (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 445:

/* Line 1455 of yacc.c  */
#line 4906 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->undo_file_name= (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 446:

/* Line 1455 of yacc.c  */
#line 4914 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->redo_file_name= (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 447:

/* Line 1455 of yacc.c  */
#line 4922 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info= new st_alter_tablespace();
            if (lex->alter_tablespace_info == NULL)
              MYSQL_YYABORT;
            lex->alter_tablespace_info->tablespace_name= (yyvsp[(1) - (1)].lex_str).str;
            lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
    break;

  case 448:

/* Line 1455 of yacc.c  */
#line 4934 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info= new st_alter_tablespace();
            if (lex->alter_tablespace_info == NULL)
              MYSQL_YYABORT;
            lex->alter_tablespace_info->logfile_group_name= (yyvsp[(1) - (1)].lex_str).str;
            lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
    break;

  case 449:

/* Line 1455 of yacc.c  */
#line 4946 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_READ_ONLY;
          }
    break;

  case 450:

/* Line 1455 of yacc.c  */
#line 4951 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_READ_WRITE;
          }
    break;

  case 451:

/* Line 1455 of yacc.c  */
#line 4956 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_NOT_ACCESSIBLE;
          }
    break;

  case 452:

/* Line 1455 of yacc.c  */
#line 4964 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->initial_size= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 453:

/* Line 1455 of yacc.c  */
#line 4972 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->autoextend_size= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 454:

/* Line 1455 of yacc.c  */
#line 4980 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->max_size= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 455:

/* Line 1455 of yacc.c  */
#line 4988 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->extent_size= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 456:

/* Line 1455 of yacc.c  */
#line 4996 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->undo_buffer_size= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 457:

/* Line 1455 of yacc.c  */
#line 5004 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->redo_buffer_size= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 458:

/* Line 1455 of yacc.c  */
#line 5012 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->alter_tablespace_info->nodegroup_id != UNDEF_NODEGROUP)
            {
              my_error(ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"NODEGROUP");
              MYSQL_YYABORT;
            }
            lex->alter_tablespace_info->nodegroup_id= (yyvsp[(3) - (3)].ulong_num);
          }
    break;

  case 459:

/* Line 1455 of yacc.c  */
#line 5025 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->alter_tablespace_info->ts_comment != NULL)
            {
              my_error(ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"COMMENT");
              MYSQL_YYABORT;
            }
            lex->alter_tablespace_info->ts_comment= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 460:

/* Line 1455 of yacc.c  */
#line 5038 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->alter_tablespace_info->storage_engine != NULL)
            {
              my_error(ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),
                       "STORAGE ENGINE");
              MYSQL_YYABORT;
            }
            lex->alter_tablespace_info->storage_engine= (yyvsp[(4) - (4)].db_type);
          }
    break;

  case 461:

/* Line 1455 of yacc.c  */
#line 5052 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->wait_until_completed= TRUE;
          }
    break;

  case 462:

/* Line 1455 of yacc.c  */
#line 5057 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (!(lex->alter_tablespace_info->wait_until_completed))
            {
              my_error(ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"NO_WAIT");
              MYSQL_YYABORT;
            }
            lex->alter_tablespace_info->wait_until_completed= FALSE;
          }
    break;

  case 463:

/* Line 1455 of yacc.c  */
#line 5069 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.ulonglong_number)= (yyvsp[(1) - (1)].ulong_num);}
    break;

  case 464:

/* Line 1455 of yacc.c  */
#line 5071 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            ulonglong number;
            uint text_shift_number= 0;
            longlong prefix_number;
            char *start_ptr= (yyvsp[(1) - (1)].lex_str).str;
            uint str_len= (yyvsp[(1) - (1)].lex_str).length;
            char *end_ptr= start_ptr + str_len;
            int error;
            prefix_number= my_strtoll10(start_ptr, &end_ptr, &error);
            if ((start_ptr + str_len - 1) == end_ptr)
            {
              switch (end_ptr[0])
              {
                case 'g':
                case 'G':
                  text_shift_number+=10;
                case 'm':
                case 'M':
                  text_shift_number+=10;
                case 'k':
                case 'K':
                  text_shift_number+=10;
                  break;
                default:
                {
                  my_error(ER_WRONG_SIZE_NUMBER, MYF(0));
                  MYSQL_YYABORT;
                }
              }
              if (prefix_number >> 31)
              {
                my_error(ER_SIZE_OVERFLOW_ERROR, MYF(0));
                MYSQL_YYABORT;
              }
              number= prefix_number << text_shift_number;
            }
            else
            {
              my_error(ER_WRONG_SIZE_NUMBER, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.ulonglong_number)= number;
          }
    break;

  case 465:

/* Line 1455 of yacc.c  */
#line 5121 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 466:

/* Line 1455 of yacc.c  */
#line 5124 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 467:

/* Line 1455 of yacc.c  */
#line 5126 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            TABLE_LIST *src_table;
            LEX *lex= thd->lex;

            lex->create_info.options|= HA_LEX_CREATE_TABLE_LIKE;
            src_table= lex->select_lex.add_table_to_list(thd, (yyvsp[(2) - (2)].table), NULL, 0,
                                                         TL_READ,
                                                         MDL_SHARED_READ);
            if (! src_table)
              MYSQL_YYABORT;
            /* CREATE TABLE ... LIKE is not allowed for views. */
            src_table->required_type= FRMTYPE_TABLE;
          }
    break;

  case 468:

/* Line 1455 of yacc.c  */
#line 5141 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            TABLE_LIST *src_table;
            LEX *lex= thd->lex;

            lex->create_info.options|= HA_LEX_CREATE_TABLE_LIKE;
            src_table= lex->select_lex.add_table_to_list(thd, (yyvsp[(3) - (4)].table), NULL, 0,
                                                         TL_READ,
                                                         MDL_SHARED_READ);
            if (! src_table)
              MYSQL_YYABORT;
            /* CREATE TABLE ... LIKE is not allowed for views. */
            src_table->required_type= FRMTYPE_TABLE;
          }
    break;

  case 469:

/* Line 1455 of yacc.c  */
#line 5160 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 470:

/* Line 1455 of yacc.c  */
#line 5163 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Select->set_braces(1);}
    break;

  case 471:

/* Line 1455 of yacc.c  */
#line 5164 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 472:

/* Line 1455 of yacc.c  */
#line 5168 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 473:

/* Line 1455 of yacc.c  */
#line 5170 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Select->set_braces(0);}
    break;

  case 474:

/* Line 1455 of yacc.c  */
#line 5171 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 475:

/* Line 1455 of yacc.c  */
#line 5173 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Select->set_braces(1);}
    break;

  case 476:

/* Line 1455 of yacc.c  */
#line 5174 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 477:

/* Line 1455 of yacc.c  */
#line 5179 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            /*
              Remove all tables used in PARTITION clause from the global table
              list. Partitioning with subqueries is not allowed anyway.
            */
            TABLE_LIST *last_non_sel_table= Lex->create_last_non_select_table;
            last_non_sel_table->next_global= 0;
            Lex->query_tables_last= &last_non_sel_table->next_global;
          }
    break;

  case 478:

/* Line 1455 of yacc.c  */
#line 5215 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 480:

/* Line 1455 of yacc.c  */
#line 5221 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->part_info= new partition_info();
            if (!lex->part_info)
            {
              mem_alloc_error(sizeof(partition_info));
              MYSQL_YYABORT;
            }
            if (lex->sql_command == SQLCOM_ALTER_TABLE)
            {
              lex->alter_info.flags|= Alter_info::ALTER_PARTITION;
            }
          }
    break;

  case 482:

/* Line 1455 of yacc.c  */
#line 5239 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
#ifdef WITH_PARTITION_STORAGE_ENGINE
            LEX_STRING partition_name={C_STRING_WITH_LEN("partition")};
            if (!plugin_is_ready(&partition_name, MYSQL_STORAGE_ENGINE_PLUGIN))
            {
              my_error(ER_OPTION_PREVENTS_STATEMENT, MYF(0),
                      "--skip-partition");
              MYSQL_YYABORT;
            }
#else
            my_error(ER_FEATURE_DISABLED, MYF(0), "partitioning",
                    "--with-plugin-partition");
            MYSQL_YYABORT;
#endif
          }
    break;

  case 483:

/* Line 1455 of yacc.c  */
#line 5258 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (!lex->part_info)
            {
              my_parse_error(ER(ER_PARTITION_ENTRY_ERROR));
              MYSQL_YYABORT;
            }
            /*
              We enter here when opening the frm file to translate
              partition info string into part_info data structure.
            */
          }
    break;

  case 484:

/* Line 1455 of yacc.c  */
#line 5270 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 486:

/* Line 1455 of yacc.c  */
#line 5279 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->list_of_part_fields= TRUE;
            part_info->column_list= FALSE;
            part_info->part_type= HASH_PARTITION;
          }
    break;

  case 487:

/* Line 1455 of yacc.c  */
#line 5286 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->part_info->part_type= HASH_PARTITION; }
    break;

  case 488:

/* Line 1455 of yacc.c  */
#line 5287 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 489:

/* Line 1455 of yacc.c  */
#line 5289 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->part_info->part_type= RANGE_PARTITION; }
    break;

  case 490:

/* Line 1455 of yacc.c  */
#line 5291 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->part_info->part_type= RANGE_PARTITION; }
    break;

  case 491:

/* Line 1455 of yacc.c  */
#line 5293 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->part_info->part_type= LIST_PARTITION; }
    break;

  case 492:

/* Line 1455 of yacc.c  */
#line 5295 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->part_info->part_type= LIST_PARTITION; }
    break;

  case 493:

/* Line 1455 of yacc.c  */
#line 5299 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 494:

/* Line 1455 of yacc.c  */
#line 5301 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->part_info->linear_hash_ind= TRUE;}
    break;

  case 495:

/* Line 1455 of yacc.c  */
#line 5306 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->part_info->key_algorithm= partition_info::KEY_ALGORITHM_NONE;}
    break;

  case 496:

/* Line 1455 of yacc.c  */
#line 5308 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            switch ((yyvsp[(3) - (3)].ulong_num)) {
            case 1:
              Lex->part_info->key_algorithm= partition_info::KEY_ALGORITHM_51;
              break;
            case 2:
              Lex->part_info->key_algorithm= partition_info::KEY_ALGORITHM_55;
              break;
            default:
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
          }
    break;

  case 497:

/* Line 1455 of yacc.c  */
#line 5324 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 498:

/* Line 1455 of yacc.c  */
#line 5325 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 499:

/* Line 1455 of yacc.c  */
#line 5329 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 500:

/* Line 1455 of yacc.c  */
#line 5330 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 501:

/* Line 1455 of yacc.c  */
#line 5335 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->num_columns++;
            if (part_info->part_field_list.push_back((yyvsp[(1) - (1)].lex_str).str))
            {
              mem_alloc_error(1);
              MYSQL_YYABORT;
            }
            if (part_info->num_columns > MAX_REF_PARTS)
            {
              my_error(ER_TOO_MANY_PARTITION_FUNC_FIELDS_ERROR, MYF(0),
                       "list of partition fields");
              MYSQL_YYABORT;
            }
          }
    break;

  case 502:

/* Line 1455 of yacc.c  */
#line 5354 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->column_list= TRUE;
            part_info->list_of_part_fields= TRUE;
          }
    break;

  case 503:

/* Line 1455 of yacc.c  */
#line 5364 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->set_part_expr((yyvsp[(2) - (5)].simple_string)+1, (yyvsp[(3) - (5)].item), (yyvsp[(4) - (5)].simple_string), FALSE))
            { MYSQL_YYABORT; }
            part_info->num_columns= 1;
            part_info->column_list= FALSE;
          }
    break;

  case 504:

/* Line 1455 of yacc.c  */
#line 5375 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (Lex->part_info->set_part_expr((yyvsp[(2) - (5)].simple_string)+1, (yyvsp[(3) - (5)].item), (yyvsp[(4) - (5)].simple_string), TRUE))
            { MYSQL_YYABORT; }
          }
    break;

  case 505:

/* Line 1455 of yacc.c  */
#line 5383 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 506:

/* Line 1455 of yacc.c  */
#line 5385 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { 
            uint num_parts= (yyvsp[(2) - (2)].ulong_num);
            partition_info *part_info= Lex->part_info;
            if (num_parts == 0)
            {
              my_error(ER_NO_PARTS_ERROR, MYF(0), "partitions");
              MYSQL_YYABORT;
            }

            part_info->num_parts= num_parts;
            part_info->use_default_num_partitions= FALSE;
          }
    break;

  case 507:

/* Line 1455 of yacc.c  */
#line 5400 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 508:

/* Line 1455 of yacc.c  */
#line 5402 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->part_info->subpart_type= HASH_PARTITION; }
    break;

  case 509:

/* Line 1455 of yacc.c  */
#line 5403 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 510:

/* Line 1455 of yacc.c  */
#line 5406 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->subpart_type= HASH_PARTITION;
            part_info->list_of_subpart_fields= TRUE;
          }
    break;

  case 511:

/* Line 1455 of yacc.c  */
#line 5411 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 512:

/* Line 1455 of yacc.c  */
#line 5415 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 513:

/* Line 1455 of yacc.c  */
#line 5416 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 514:

/* Line 1455 of yacc.c  */
#line 5421 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->subpart_field_list.push_back((yyvsp[(1) - (1)].lex_str).str))
            {
              mem_alloc_error(1);
              MYSQL_YYABORT;
            }
            if (part_info->subpart_field_list.elements > MAX_REF_PARTS)
            {
              my_error(ER_TOO_MANY_PARTITION_FUNC_FIELDS_ERROR, MYF(0),
                       "list of subpartition fields");
              MYSQL_YYABORT;
            }
          }
    break;

  case 515:

/* Line 1455 of yacc.c  */
#line 5439 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            bool not_corr_func;
            not_corr_func= !lex->safe_to_cache_query;
            lex->safe_to_cache_query= 1;
            if (not_corr_func)
            {
              my_parse_error(ER(ER_WRONG_EXPR_IN_PARTITION_FUNC_ERROR));
              MYSQL_YYABORT;
            }
            (yyval.item)=(yyvsp[(1) - (1)].item);
          }
    break;

  case 516:

/* Line 1455 of yacc.c  */
#line 5454 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 517:

/* Line 1455 of yacc.c  */
#line 5456 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            uint num_parts= (yyvsp[(2) - (2)].ulong_num);
            LEX *lex= Lex;
            if (num_parts == 0)
            {
              my_error(ER_NO_PARTS_ERROR, MYF(0), "subpartitions");
              MYSQL_YYABORT;
            }
            lex->part_info->num_subparts= num_parts;
            lex->part_info->use_default_num_subpartitions= FALSE;
          }
    break;

  case 518:

/* Line 1455 of yacc.c  */
#line 5471 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->part_type == RANGE_PARTITION)
            {
              my_error(ER_PARTITIONS_MUST_BE_DEFINED_ERROR, MYF(0),
                       "RANGE");
              MYSQL_YYABORT;
            }
            else if (part_info->part_type == LIST_PARTITION)
            {
              my_error(ER_PARTITIONS_MUST_BE_DEFINED_ERROR, MYF(0),
                       "LIST");
              MYSQL_YYABORT;
            }
          }
    break;

  case 519:

/* Line 1455 of yacc.c  */
#line 5487 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            uint count_curr_parts= part_info->partitions.elements;
            if (part_info->num_parts != 0)
            {
              if (part_info->num_parts !=
                  count_curr_parts)
              {
                my_parse_error(ER(ER_PARTITION_WRONG_NO_PART_ERROR));
                MYSQL_YYABORT;
              }
            }
            else if (count_curr_parts > 0)
            {
              part_info->num_parts= count_curr_parts;
            }
            part_info->count_curr_subparts= 0;
          }
    break;

  case 520:

/* Line 1455 of yacc.c  */
#line 5508 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 521:

/* Line 1455 of yacc.c  */
#line 5509 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 522:

/* Line 1455 of yacc.c  */
#line 5514 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            partition_element *p_elem= new partition_element();

            if (!p_elem || part_info->partitions.push_back(p_elem))
            {
              mem_alloc_error(sizeof(partition_element));
              MYSQL_YYABORT;
            }
            p_elem->part_state= PART_NORMAL;
            part_info->curr_part_elem= p_elem;
            part_info->current_partition= p_elem;
            part_info->use_default_partitions= FALSE;
            part_info->use_default_num_partitions= FALSE;
          }
    break;

  case 523:

/* Line 1455 of yacc.c  */
#line 5533 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 524:

/* Line 1455 of yacc.c  */
#line 5538 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            partition_element *p_elem= part_info->curr_part_elem;
            p_elem->partition_name= (yyvsp[(1) - (1)].lex_str).str;
          }
    break;

  case 525:

/* Line 1455 of yacc.c  */
#line 5547 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (part_info->part_type == RANGE_PARTITION)
              {
                my_error(ER_PARTITION_REQUIRES_VALUES_ERROR, MYF(0),
                         "RANGE", "LESS THAN");
                MYSQL_YYABORT;
              }
              if (part_info->part_type == LIST_PARTITION)
              {
                my_error(ER_PARTITION_REQUIRES_VALUES_ERROR, MYF(0),
                         "LIST", "IN");
                MYSQL_YYABORT;
              }
            }
            else
              part_info->part_type= HASH_PARTITION;
          }
    break;

  case 526:

/* Line 1455 of yacc.c  */
#line 5569 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (part_info->part_type != RANGE_PARTITION)
              {
                my_error(ER_PARTITION_WRONG_VALUES_ERROR, MYF(0),
                         "RANGE", "LESS THAN");
                MYSQL_YYABORT;
              }
            }
            else
              part_info->part_type= RANGE_PARTITION;
          }
    break;

  case 527:

/* Line 1455 of yacc.c  */
#line 5584 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 528:

/* Line 1455 of yacc.c  */
#line 5586 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (part_info->part_type != LIST_PARTITION)
              {
                my_error(ER_PARTITION_WRONG_VALUES_ERROR, MYF(0),
                               "LIST", "IN");
                MYSQL_YYABORT;
              }
            }
            else
              part_info->part_type= LIST_PARTITION;
          }
    break;

  case 529:

/* Line 1455 of yacc.c  */
#line 5601 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 530:

/* Line 1455 of yacc.c  */
#line 5606 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;

            if (part_info->num_columns &&
                part_info->num_columns != 1U)
            {
              part_info->print_debug("Kilroy II", NULL);
              my_parse_error(ER(ER_PARTITION_COLUMN_LIST_ERROR));
              MYSQL_YYABORT;
            }
            else
              part_info->num_columns= 1U;
            if (part_info->init_column_part())
            {
              MYSQL_YYABORT;
            }
            if (part_info->add_max_value())
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 531:

/* Line 1455 of yacc.c  */
#line 5627 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 532:

/* Line 1455 of yacc.c  */
#line 5632 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            part_info->print_debug("part_values_in: part_value_item", NULL);

            if (part_info->num_columns != 1U)
            {
              if (!lex->is_partition_management() ||
                  part_info->num_columns == 0 ||
                  part_info->num_columns > MAX_REF_PARTS)
              {
                part_info->print_debug("Kilroy III", NULL);
                my_parse_error(ER(ER_PARTITION_COLUMN_LIST_ERROR));
                MYSQL_YYABORT;
              }
              /*
                Reorganize the current large array into a list of small
                arrays with one entry in each array. This can happen
                in the first partition of an ALTER TABLE statement where
                we ADD or REORGANIZE partitions. Also can only happen
                for LIST [COLUMNS] partitions.
              */
              if (part_info->reorganize_into_single_field_col_val())
              {
                MYSQL_YYABORT;
              }
            }
          }
    break;

  case 533:

/* Line 1455 of yacc.c  */
#line 5661 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->num_columns < 2U)
            {
              my_parse_error(ER(ER_ROW_SINGLE_PARTITION_FIELD_ERROR));
              MYSQL_YYABORT;
            }
          }
    break;

  case 534:

/* Line 1455 of yacc.c  */
#line 5672 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 535:

/* Line 1455 of yacc.c  */
#line 5673 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 536:

/* Line 1455 of yacc.c  */
#line 5678 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->print_debug("( part_value_item", NULL);
            /* Initialisation code needed for each list of value expressions */
            if (!(part_info->part_type == LIST_PARTITION &&
                  part_info->num_columns == 1U) &&
                 part_info->init_column_part())
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 537:

/* Line 1455 of yacc.c  */
#line 5689 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 538:

/* Line 1455 of yacc.c  */
#line 5691 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->print_debug(") part_value_item", NULL);
            if (part_info->num_columns == 0)
              part_info->num_columns= part_info->curr_list_object;
            if (part_info->num_columns != part_info->curr_list_object)
            {
              /*
                All value items lists must be of equal length, in some cases
                which is covered by the above if-statement we don't know yet
                how many columns is in the partition so the assignment above
                ensures that we only report errors when we know we have an
                error.
              */
              part_info->print_debug("Kilroy I", NULL);
              my_parse_error(ER(ER_PARTITION_COLUMN_LIST_ERROR));
              MYSQL_YYABORT;
            }
            part_info->curr_list_object= 0;
          }
    break;

  case 539:

/* Line 1455 of yacc.c  */
#line 5714 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 540:

/* Line 1455 of yacc.c  */
#line 5715 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 541:

/* Line 1455 of yacc.c  */
#line 5720 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->part_type == LIST_PARTITION)
            {
              my_parse_error(ER(ER_MAXVALUE_IN_VALUES_IN));
              MYSQL_YYABORT;
            }
            if (part_info->add_max_value())
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 542:

/* Line 1455 of yacc.c  */
#line 5733 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            Item *part_expr= (yyvsp[(1) - (1)].item);

            if (!lex->safe_to_cache_query)
            {
              my_parse_error(ER(ER_WRONG_EXPR_IN_PARTITION_FUNC_ERROR));
              MYSQL_YYABORT;
            }
            if (part_info->add_column_list_value(YYTHD, part_expr))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 543:

/* Line 1455 of yacc.c  */
#line 5753 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->num_subparts != 0 &&
                !part_info->use_default_subpartitions)
            {
              /*
                We come here when we have defined subpartitions on the first
                partition but not on all the subsequent partitions. 
              */
              my_parse_error(ER(ER_PARTITION_WRONG_NO_SUBPART_ERROR));
              MYSQL_YYABORT;
            }
          }
    break;

  case 544:

/* Line 1455 of yacc.c  */
#line 5767 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->num_subparts != 0)
            {
              if (part_info->num_subparts !=
                  part_info->count_curr_subparts)
              {
                my_parse_error(ER(ER_PARTITION_WRONG_NO_SUBPART_ERROR));
                MYSQL_YYABORT;
              }
            }
            else if (part_info->count_curr_subparts > 0)
            {
              if (part_info->partitions.elements > 1)
              {
                my_parse_error(ER(ER_PARTITION_WRONG_NO_SUBPART_ERROR));
                MYSQL_YYABORT;
              }
              part_info->num_subparts= part_info->count_curr_subparts;
            }
            part_info->count_curr_subparts= 0;
          }
    break;

  case 545:

/* Line 1455 of yacc.c  */
#line 5792 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 546:

/* Line 1455 of yacc.c  */
#line 5793 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 547:

/* Line 1455 of yacc.c  */
#line 5798 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            partition_element *curr_part= part_info->current_partition;
            partition_element *sub_p_elem= new partition_element(curr_part);
            if (part_info->use_default_subpartitions &&
                part_info->partitions.elements >= 2)
            {
              /*
                create table t1 (a int)
                partition by list (a) subpartition by hash (a)
                (partition p0 values in (1),
                 partition p1 values in (2) subpartition sp11);
                causes use to arrive since we are on the second
                partition, but still use_default_subpartitions
                is set. When we come here we're processing at least
                the second partition (the current partition processed
                have already been put into the partitions list.
              */
              my_parse_error(ER(ER_PARTITION_WRONG_NO_SUBPART_ERROR));
              MYSQL_YYABORT;
            }
            if (!sub_p_elem ||
             curr_part->subpartitions.push_back(sub_p_elem))
            {
              mem_alloc_error(sizeof(partition_element));
              MYSQL_YYABORT;
            }
            part_info->curr_part_elem= sub_p_elem;
            part_info->use_default_subpartitions= FALSE;
            part_info->use_default_num_subpartitions= FALSE;
            part_info->count_curr_subparts++;
          }
    break;

  case 548:

/* Line 1455 of yacc.c  */
#line 5830 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 549:

/* Line 1455 of yacc.c  */
#line 5835 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->partition_name= (yyvsp[(1) - (1)].lex_str).str; }
    break;

  case 550:

/* Line 1455 of yacc.c  */
#line 5839 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 551:

/* Line 1455 of yacc.c  */
#line 5840 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 552:

/* Line 1455 of yacc.c  */
#line 5844 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 553:

/* Line 1455 of yacc.c  */
#line 5845 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 554:

/* Line 1455 of yacc.c  */
#line 5850 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->tablespace_name= (yyvsp[(3) - (3)].lex_str).str; }
    break;

  case 555:

/* Line 1455 of yacc.c  */
#line 5852 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->curr_part_elem->engine_type= (yyvsp[(4) - (4)].db_type);
            part_info->default_engine_type= (yyvsp[(4) - (4)].db_type);
          }
    break;

  case 556:

/* Line 1455 of yacc.c  */
#line 5858 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->nodegroup_id= (uint16) (yyvsp[(3) - (3)].ulong_num); }
    break;

  case 557:

/* Line 1455 of yacc.c  */
#line 5860 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->part_max_rows= (ha_rows) (yyvsp[(3) - (3)].ulonglong_number); }
    break;

  case 558:

/* Line 1455 of yacc.c  */
#line 5862 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->part_min_rows= (ha_rows) (yyvsp[(3) - (3)].ulonglong_number); }
    break;

  case 559:

/* Line 1455 of yacc.c  */
#line 5864 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->data_file_name= (yyvsp[(4) - (4)].lex_str).str; }
    break;

  case 560:

/* Line 1455 of yacc.c  */
#line 5866 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->index_file_name= (yyvsp[(4) - (4)].lex_str).str; }
    break;

  case 561:

/* Line 1455 of yacc.c  */
#line 5868 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->part_comment= (yyvsp[(3) - (3)].lex_str).str; }
    break;

  case 562:

/* Line 1455 of yacc.c  */
#line 5877 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->sql_command == SQLCOM_INSERT)
              lex->sql_command= SQLCOM_INSERT_SELECT;
            else if (lex->sql_command == SQLCOM_REPLACE)
              lex->sql_command= SQLCOM_REPLACE_SELECT;
            /*
              The following work only with the local list, the global list
              is created correctly in this case
            */
            lex->current_select->table_list.save_and_clear(&lex->save_list);
            mysql_init_select(lex);
            lex->current_select->parsing_place= SELECT_LIST;
          }
    break;

  case 563:

/* Line 1455 of yacc.c  */
#line 5892 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Select->parsing_place= NO_MATTER;
          }
    break;

  case 564:

/* Line 1455 of yacc.c  */
#line 5896 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            /*
              The following work only with the local list, the global list
              is created correctly in this case
            */
            Lex->current_select->table_list.push_front(&Lex->save_list);
          }
    break;

  case 565:

/* Line 1455 of yacc.c  */
#line 5906 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 566:

/* Line 1455 of yacc.c  */
#line 5907 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 567:

/* Line 1455 of yacc.c  */
#line 5911 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 568:

/* Line 1455 of yacc.c  */
#line 5912 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 569:

/* Line 1455 of yacc.c  */
#line 5916 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 570:

/* Line 1455 of yacc.c  */
#line 5917 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 571:

/* Line 1455 of yacc.c  */
#line 5921 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 572:

/* Line 1455 of yacc.c  */
#line 5922 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 573:

/* Line 1455 of yacc.c  */
#line 5926 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 574:

/* Line 1455 of yacc.c  */
#line 5927 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)= (yyvsp[(1) - (1)].num);}
    break;

  case 575:

/* Line 1455 of yacc.c  */
#line 5931 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)=(yyvsp[(1) - (1)].num); }
    break;

  case 576:

/* Line 1455 of yacc.c  */
#line 5932 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)= (yyvsp[(1) - (2)].num) | (yyvsp[(2) - (2)].num); }
    break;

  case 577:

/* Line 1455 of yacc.c  */
#line 5936 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)=HA_LEX_CREATE_TMP_TABLE; }
    break;

  case 578:

/* Line 1455 of yacc.c  */
#line 5940 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 579:

/* Line 1455 of yacc.c  */
#line 5941 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)=HA_LEX_CREATE_IF_NOT_EXISTS; }
    break;

  case 587:

/* Line 1455 of yacc.c  */
#line 5962 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.db_type= (yyvsp[(3) - (3)].db_type);
            Lex->create_info.used_fields|= HA_CREATE_USED_ENGINE;
          }
    break;

  case 588:

/* Line 1455 of yacc.c  */
#line 5967 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.max_rows= (yyvsp[(3) - (3)].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_MAX_ROWS;
          }
    break;

  case 589:

/* Line 1455 of yacc.c  */
#line 5972 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.min_rows= (yyvsp[(3) - (3)].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_MIN_ROWS;
          }
    break;

  case 590:

/* Line 1455 of yacc.c  */
#line 5977 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.avg_row_length=(yyvsp[(3) - (3)].ulong_num);
            Lex->create_info.used_fields|= HA_CREATE_USED_AVG_ROW_LENGTH;
          }
    break;

  case 591:

/* Line 1455 of yacc.c  */
#line 5982 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.password=(yyvsp[(3) - (3)].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_PASSWORD;
          }
    break;

  case 592:

/* Line 1455 of yacc.c  */
#line 5987 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.comment=(yyvsp[(3) - (3)].lex_str);
            Lex->create_info.used_fields|= HA_CREATE_USED_COMMENT;
          }
    break;

  case 593:

/* Line 1455 of yacc.c  */
#line 5992 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.auto_increment_value=(yyvsp[(3) - (3)].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_AUTO;
          }
    break;

  case 594:

/* Line 1455 of yacc.c  */
#line 5997 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            switch((yyvsp[(3) - (3)].ulong_num)) {
            case 0:
                Lex->create_info.table_options|= HA_OPTION_NO_PACK_KEYS;
                break;
            case 1:
                Lex->create_info.table_options|= HA_OPTION_PACK_KEYS;
                break;
            default:
                my_parse_error(ER(ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_PACK_KEYS;
          }
    break;

  case 595:

/* Line 1455 of yacc.c  */
#line 6012 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.table_options&=
              ~(HA_OPTION_PACK_KEYS | HA_OPTION_NO_PACK_KEYS);
            Lex->create_info.used_fields|= HA_CREATE_USED_PACK_KEYS;
          }
    break;

  case 596:

/* Line 1455 of yacc.c  */
#line 6018 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            switch((yyvsp[(3) - (3)].ulong_num)) {
            case 0:
                Lex->create_info.stats_auto_recalc= HA_STATS_AUTO_RECALC_OFF;
                break;
            case 1:
                Lex->create_info.stats_auto_recalc= HA_STATS_AUTO_RECALC_ON;
                break;
            default:
                my_parse_error(ER(ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_AUTO_RECALC;
          }
    break;

  case 597:

/* Line 1455 of yacc.c  */
#line 6033 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.stats_auto_recalc= HA_STATS_AUTO_RECALC_DEFAULT;
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_AUTO_RECALC;
          }
    break;

  case 598:

/* Line 1455 of yacc.c  */
#line 6038 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            switch((yyvsp[(3) - (3)].ulong_num)) {
            case 0:
                Lex->create_info.table_options|= HA_OPTION_NO_STATS_PERSISTENT;
                break;
            case 1:
                Lex->create_info.table_options|= HA_OPTION_STATS_PERSISTENT;
                break;
            default:
                my_parse_error(ER(ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_PERSISTENT;
          }
    break;

  case 599:

/* Line 1455 of yacc.c  */
#line 6053 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.table_options&=
              ~(HA_OPTION_STATS_PERSISTENT | HA_OPTION_NO_STATS_PERSISTENT);
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_PERSISTENT;
          }
    break;

  case 600:

/* Line 1455 of yacc.c  */
#line 6059 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            /* From user point of view STATS_SAMPLE_PAGES can be specified as
            STATS_SAMPLE_PAGES=N (where 0<N<=65535, it does not make sense to
            scan 0 pages) or STATS_SAMPLE_PAGES=default. Internally we record
            =default as 0. See create_frm() in sql/table.cc, we use only two
            bytes for stats_sample_pages and this is why we do not allow
            larger values. 65535 pages, 16kb each means to sample 1GB, which
            is impractical. If at some point this needs to be extended, then
            we can store the higher bits from stats_sample_pages in .frm too. */
            if ((yyvsp[(3) - (3)].ulong_num) == 0 || (yyvsp[(3) - (3)].ulong_num) > 0xffff)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            Lex->create_info.stats_sample_pages=(yyvsp[(3) - (3)].ulong_num);
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_SAMPLE_PAGES;
          }
    break;

  case 601:

/* Line 1455 of yacc.c  */
#line 6077 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.stats_sample_pages=0;
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_SAMPLE_PAGES;
          }
    break;

  case 602:

/* Line 1455 of yacc.c  */
#line 6082 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.table_options|= (yyvsp[(3) - (3)].ulong_num) ? HA_OPTION_CHECKSUM : HA_OPTION_NO_CHECKSUM;
            Lex->create_info.used_fields|= HA_CREATE_USED_CHECKSUM;
          }
    break;

  case 603:

/* Line 1455 of yacc.c  */
#line 6087 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
             Lex->create_info.table_options|= (yyvsp[(3) - (3)].ulong_num) ? HA_OPTION_CHECKSUM : HA_OPTION_NO_CHECKSUM;
             Lex->create_info.used_fields|= HA_CREATE_USED_CHECKSUM;
          }
    break;

  case 604:

/* Line 1455 of yacc.c  */
#line 6092 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.table_options|= (yyvsp[(3) - (3)].ulong_num) ? HA_OPTION_DELAY_KEY_WRITE : HA_OPTION_NO_DELAY_KEY_WRITE;
            Lex->create_info.used_fields|= HA_CREATE_USED_DELAY_KEY_WRITE;
          }
    break;

  case 605:

/* Line 1455 of yacc.c  */
#line 6097 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.row_type= (yyvsp[(3) - (3)].row_type);
            Lex->create_info.used_fields|= HA_CREATE_USED_ROW_FORMAT;
          }
    break;

  case 606:

/* Line 1455 of yacc.c  */
#line 6102 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->select_lex.table_list.save_and_clear(&Lex->save_list);
          }
    break;

  case 607:

/* Line 1455 of yacc.c  */
#line 6106 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            /*
              Move the union list to the merge_list and exclude its tables
              from the global list.
            */
            LEX *lex=Lex;
            lex->create_info.merge_list= lex->select_lex.table_list;
            lex->select_lex.table_list= lex->save_list;
            /*
              When excluding union list from the global list we assume that
              elements of the former immediately follow elements which represent
              table being created/altered and parent tables.
            */
            TABLE_LIST *last_non_sel_table= lex->create_last_non_select_table;
            DBUG_ASSERT(last_non_sel_table->next_global ==
                        lex->create_info.merge_list.first);
            last_non_sel_table->next_global= 0;
            Lex->query_tables_last= &last_non_sel_table->next_global;

            lex->create_info.used_fields|= HA_CREATE_USED_UNION;
          }
    break;

  case 610:

/* Line 1455 of yacc.c  */
#line 6130 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.merge_insert_method= (yyvsp[(3) - (3)].ulong_num);
            Lex->create_info.used_fields|= HA_CREATE_USED_INSERT_METHOD;
          }
    break;

  case 611:

/* Line 1455 of yacc.c  */
#line 6135 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.data_file_name= (yyvsp[(4) - (4)].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_DATADIR;
          }
    break;

  case 612:

/* Line 1455 of yacc.c  */
#line 6140 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.index_file_name= (yyvsp[(4) - (4)].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_INDEXDIR;
          }
    break;

  case 613:

/* Line 1455 of yacc.c  */
#line 6145 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {Lex->create_info.tablespace= (yyvsp[(2) - (2)].lex_str).str;}
    break;

  case 614:

/* Line 1455 of yacc.c  */
#line 6147 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {Lex->create_info.storage_media= HA_SM_DISK;}
    break;

  case 615:

/* Line 1455 of yacc.c  */
#line 6149 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {Lex->create_info.storage_media= HA_SM_MEMORY;}
    break;

  case 616:

/* Line 1455 of yacc.c  */
#line 6151 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.connect_string.str= (yyvsp[(3) - (3)].lex_str).str;
            Lex->create_info.connect_string.length= (yyvsp[(3) - (3)].lex_str).length;
            Lex->create_info.used_fields|= HA_CREATE_USED_CONNECTION;
          }
    break;

  case 617:

/* Line 1455 of yacc.c  */
#line 6157 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.used_fields|= HA_CREATE_USED_KEY_BLOCK_SIZE;
            Lex->create_info.key_block_size= (yyvsp[(3) - (3)].ulong_num);
          }
    break;

  case 618:

/* Line 1455 of yacc.c  */
#line 6165 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            HA_CREATE_INFO *cinfo= &Lex->create_info;
            if ((cinfo->used_fields & HA_CREATE_USED_DEFAULT_CHARSET) &&
                 cinfo->default_table_charset && (yyvsp[(4) - (4)].charset) &&
                 !my_charset_same(cinfo->default_table_charset,(yyvsp[(4) - (4)].charset)))
            {
              my_error(ER_CONFLICTING_DECLARATIONS, MYF(0),
                       "CHARACTER SET ", cinfo->default_table_charset->csname,
                       "CHARACTER SET ", (yyvsp[(4) - (4)].charset)->csname);
              MYSQL_YYABORT;
            }
            Lex->create_info.default_table_charset= (yyvsp[(4) - (4)].charset);
            Lex->create_info.used_fields|= HA_CREATE_USED_DEFAULT_CHARSET;
          }
    break;

  case 619:

/* Line 1455 of yacc.c  */
#line 6183 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            HA_CREATE_INFO *cinfo= &Lex->create_info;
            if ((cinfo->used_fields & HA_CREATE_USED_DEFAULT_CHARSET) &&
                 cinfo->default_table_charset && (yyvsp[(4) - (4)].charset) &&
                 !((yyvsp[(4) - (4)].charset)= merge_charset_and_collation(cinfo->default_table_charset,
                                                   (yyvsp[(4) - (4)].charset))))
            {
              MYSQL_YYABORT;
            }

            Lex->create_info.default_table_charset= (yyvsp[(4) - (4)].charset);
            Lex->create_info.used_fields|= HA_CREATE_USED_DEFAULT_CHARSET;
          }
    break;

  case 620:

/* Line 1455 of yacc.c  */
#line 6200 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            plugin_ref plugin=
              ha_resolve_by_name(thd, &(yyvsp[(1) - (1)].lex_str),
                thd->lex->create_info.options & HA_LEX_CREATE_TMP_TABLE);

            if (plugin)
              (yyval.db_type)= plugin_data(plugin, handlerton*);
            else
            {
              if (thd->variables.sql_mode & MODE_NO_ENGINE_SUBSTITUTION)
              {
                my_error(ER_UNKNOWN_STORAGE_ENGINE, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
                MYSQL_YYABORT;
              }
              (yyval.db_type)= 0;
              push_warning_printf(thd, Sql_condition::WARN_LEVEL_WARN,
                                  ER_UNKNOWN_STORAGE_ENGINE,
                                  ER(ER_UNKNOWN_STORAGE_ENGINE),
                                  (yyvsp[(1) - (1)].lex_str).str);
            }
          }
    break;

  case 621:

/* Line 1455 of yacc.c  */
#line 6226 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            plugin_ref plugin=
              ha_resolve_by_name(thd, &(yyvsp[(1) - (1)].lex_str),
                lex->create_info.options & HA_LEX_CREATE_TMP_TABLE);
            if (plugin)
              (yyval.db_type)= plugin_data(plugin, handlerton*);
            else
            {
              my_error(ER_UNKNOWN_STORAGE_ENGINE, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 622:

/* Line 1455 of yacc.c  */
#line 6243 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_DEFAULT; }
    break;

  case 623:

/* Line 1455 of yacc.c  */
#line 6244 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_FIXED; }
    break;

  case 624:

/* Line 1455 of yacc.c  */
#line 6245 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_DYNAMIC; }
    break;

  case 625:

/* Line 1455 of yacc.c  */
#line 6246 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_COMPRESSED; }
    break;

  case 626:

/* Line 1455 of yacc.c  */
#line 6247 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_REDUNDANT; }
    break;

  case 627:

/* Line 1455 of yacc.c  */
#line 6248 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_COMPACT; }
    break;

  case 628:

/* Line 1455 of yacc.c  */
#line 6252 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= MERGE_INSERT_DISABLED; }
    break;

  case 629:

/* Line 1455 of yacc.c  */
#line 6253 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= MERGE_INSERT_TO_FIRST; }
    break;

  case 630:

/* Line 1455 of yacc.c  */
#line 6254 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= MERGE_INSERT_TO_LAST; }
    break;

  case 631:

/* Line 1455 of yacc.c  */
#line 6258 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 633:

/* Line 1455 of yacc.c  */
#line 6263 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {(yyval.num) = (int) STRING_RESULT; }
    break;

  case 634:

/* Line 1455 of yacc.c  */
#line 6264 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {(yyval.num) = (int) REAL_RESULT; }
    break;

  case 635:

/* Line 1455 of yacc.c  */
#line 6265 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {(yyval.num) = (int) DECIMAL_RESULT; }
    break;

  case 636:

/* Line 1455 of yacc.c  */
#line 6266 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {(yyval.num) = (int) INT_RESULT; }
    break;

  case 637:

/* Line 1455 of yacc.c  */
#line 6272 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
          Lex->create_last_non_select_table= Lex->last_table();
        }
    break;

  case 643:

/* Line 1455 of yacc.c  */
#line 6290 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->col_list.empty(); /* Alloced by sql_alloc */
          }
    break;

  case 644:

/* Line 1455 of yacc.c  */
#line 6297 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (add_create_index (Lex, (yyvsp[(1) - (7)].key_type), (yyvsp[(2) - (7)].lex_str)))
              MYSQL_YYABORT;
          }
    break;

  case 645:

/* Line 1455 of yacc.c  */
#line 6303 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (add_create_index (Lex, (yyvsp[(1) - (8)].key_type), (yyvsp[(3) - (8)].lex_str)))
              MYSQL_YYABORT;
          }
    break;

  case 646:

/* Line 1455 of yacc.c  */
#line 6309 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (add_create_index (Lex, (yyvsp[(1) - (8)].key_type), (yyvsp[(3) - (8)].lex_str)))
              MYSQL_YYABORT;
          }
    break;

  case 647:

/* Line 1455 of yacc.c  */
#line 6315 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (add_create_index (Lex, (yyvsp[(2) - (8)].key_type), (yyvsp[(3) - (8)].lex_str).str ? (yyvsp[(3) - (8)].lex_str) : (yyvsp[(1) - (8)].lex_str)))
              MYSQL_YYABORT;
          }
    break;

  case 648:

/* Line 1455 of yacc.c  */
#line 6320 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Key *key= new Foreign_key((yyvsp[(4) - (8)].lex_str).str ? (yyvsp[(4) - (8)].lex_str) : (yyvsp[(1) - (8)].lex_str), lex->col_list,
                                      (yyvsp[(8) - (8)].table)->db,
                                      (yyvsp[(8) - (8)].table)->table,
                                      lex->ref_list,
                                      lex->fk_delete_opt,
                                      lex->fk_update_opt,
                                      lex->fk_match_option);
            if (key == NULL)
              MYSQL_YYABORT;
            lex->alter_info.key_list.push_back(key);
            if (add_create_index (lex, Key::MULTIPLE, (yyvsp[(1) - (8)].lex_str).str ? (yyvsp[(1) - (8)].lex_str) : (yyvsp[(4) - (8)].lex_str),
                                  &default_key_create_info, 1))
              MYSQL_YYABORT;
            /* Only used for ALTER TABLE. Ignored otherwise. */
            lex->alter_info.flags|= Alter_info::ADD_FOREIGN_KEY;
          }
    break;

  case 649:

/* Line 1455 of yacc.c  */
#line 6339 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->col_list.empty(); /* Alloced by sql_alloc */
          }
    break;

  case 653:

/* Line 1455 of yacc.c  */
#line 6354 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= null_lex_str; }
    break;

  case 654:

/* Line 1455 of yacc.c  */
#line 6355 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str); }
    break;

  case 655:

/* Line 1455 of yacc.c  */
#line 6359 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(2) - (2)].lex_str); }
    break;

  case 656:

/* Line 1455 of yacc.c  */
#line 6364 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->length=lex->dec=0;
            lex->type=0;
            lex->default_value= lex->on_update_value= 0;
            lex->comment=null_lex_str;
            lex->charset=NULL;
          }
    break;

  case 657:

/* Line 1455 of yacc.c  */
#line 6373 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (add_field_to_list(lex->thd, &(yyvsp[(1) - (4)].lex_str), (enum enum_field_types) (yyvsp[(3) - (4)].num),
                                  lex->length,lex->dec,lex->type,
                                  lex->default_value, lex->on_update_value, 
                                  &lex->comment,
                                  lex->change,&lex->interval_list,lex->charset,
                                  lex->uint_geom_type))
              MYSQL_YYABORT;
          }
    break;

  case 658:

/* Line 1455 of yacc.c  */
#line 6386 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)=(yyvsp[(1) - (3)].num); }
    break;

  case 659:

/* Line 1455 of yacc.c  */
#line 6387 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)=(yyvsp[(1) - (3)].num); }
    break;

  case 660:

/* Line 1455 of yacc.c  */
#line 6388 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_FLOAT; }
    break;

  case 661:

/* Line 1455 of yacc.c  */
#line 6390 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->length= (char*) "1";
            (yyval.num)=MYSQL_TYPE_BIT;
          }
    break;

  case 662:

/* Line 1455 of yacc.c  */
#line 6395 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)=MYSQL_TYPE_BIT;
          }
    break;

  case 663:

/* Line 1455 of yacc.c  */
#line 6399 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->length= (char*) "1";
            (yyval.num)=MYSQL_TYPE_TINY;
          }
    break;

  case 664:

/* Line 1455 of yacc.c  */
#line 6404 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->length= (char*) "1";
            (yyval.num)=MYSQL_TYPE_TINY;
          }
    break;

  case 665:

/* Line 1455 of yacc.c  */
#line 6409 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)=MYSQL_TYPE_STRING;
          }
    break;

  case 666:

/* Line 1455 of yacc.c  */
#line 6413 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->length= (char*) "1";
            (yyval.num)=MYSQL_TYPE_STRING;
          }
    break;

  case 667:

/* Line 1455 of yacc.c  */
#line 6418 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)=MYSQL_TYPE_STRING;
            Lex->charset=national_charset_info;
          }
    break;

  case 668:

/* Line 1455 of yacc.c  */
#line 6423 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->length= (char*) "1";
            (yyval.num)=MYSQL_TYPE_STRING;
            Lex->charset=national_charset_info;
          }
    break;

  case 669:

/* Line 1455 of yacc.c  */
#line 6429 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_STRING;
          }
    break;

  case 670:

/* Line 1455 of yacc.c  */
#line 6434 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->length= (char*) "1";
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_STRING;
          }
    break;

  case 671:

/* Line 1455 of yacc.c  */
#line 6440 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= MYSQL_TYPE_VARCHAR;
          }
    break;

  case 672:

/* Line 1455 of yacc.c  */
#line 6444 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= MYSQL_TYPE_VARCHAR;
            Lex->charset=national_charset_info;
          }
    break;

  case 673:

/* Line 1455 of yacc.c  */
#line 6449 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->charset=&my_charset_bin;
            (yyval.num)= MYSQL_TYPE_VARCHAR;
          }
    break;

  case 674:

/* Line 1455 of yacc.c  */
#line 6454 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (Lex->length)
            {
              errno= 0;
              ulong length= strtoul(Lex->length, NULL, 10);
              if (errno == 0 && length <= MAX_FIELD_BLOBLENGTH && length != 4)
              {
                /* Reset unsupported positive column width to default value */
                Lex->length= NULL;
                push_warning_printf(YYTHD, Sql_condition::WARN_LEVEL_WARN,
                                    ER_INVALID_YEAR_COLUMN_LENGTH,
                                    ER(ER_INVALID_YEAR_COLUMN_LENGTH),
                                    length);
              }
            }
            (yyval.num)=MYSQL_TYPE_YEAR;
          }
    break;

  case 675:

/* Line 1455 of yacc.c  */
#line 6472 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_DATE; }
    break;

  case 676:

/* Line 1455 of yacc.c  */
#line 6474 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)= MYSQL_TYPE_TIME2; }
    break;

  case 677:

/* Line 1455 of yacc.c  */
#line 6476 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (YYTHD->variables.sql_mode & MODE_MAXDB)
              (yyval.num)=MYSQL_TYPE_DATETIME2;
            else
            {
              /* 
                Unlike other types TIMESTAMP fields are NOT NULL by default.
                This behavior is deprecated now.
              */
              if (!YYTHD->variables.explicit_defaults_for_timestamp)
                Lex->type|= NOT_NULL_FLAG;

              (yyval.num)=MYSQL_TYPE_TIMESTAMP2;
            }
          }
    break;

  case 678:

/* Line 1455 of yacc.c  */
#line 6492 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)= MYSQL_TYPE_DATETIME2; }
    break;

  case 679:

/* Line 1455 of yacc.c  */
#line 6494 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_TINY_BLOB;
          }
    break;

  case 680:

/* Line 1455 of yacc.c  */
#line 6499 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_BLOB;
          }
    break;

  case 681:

/* Line 1455 of yacc.c  */
#line 6504 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
#ifdef HAVE_SPATIAL
            Lex->charset=&my_charset_bin;
            Lex->uint_geom_type= (uint)(yyvsp[(1) - (1)].num);
            (yyval.num)=MYSQL_TYPE_GEOMETRY;
#else
            my_error(ER_FEATURE_DISABLED, MYF(0),
                     sym_group_geom.name, sym_group_geom.needed_define);
            MYSQL_YYABORT;
#endif
          }
    break;

  case 682:

/* Line 1455 of yacc.c  */
#line 6516 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_MEDIUM_BLOB;
          }
    break;

  case 683:

/* Line 1455 of yacc.c  */
#line 6521 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_LONG_BLOB;
          }
    break;

  case 684:

/* Line 1455 of yacc.c  */
#line 6526 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_MEDIUM_BLOB;
          }
    break;

  case 685:

/* Line 1455 of yacc.c  */
#line 6531 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_MEDIUM_BLOB; }
    break;

  case 686:

/* Line 1455 of yacc.c  */
#line 6533 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_TINY_BLOB; }
    break;

  case 687:

/* Line 1455 of yacc.c  */
#line 6535 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_BLOB; }
    break;

  case 688:

/* Line 1455 of yacc.c  */
#line 6537 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_MEDIUM_BLOB; }
    break;

  case 689:

/* Line 1455 of yacc.c  */
#line 6539 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_LONG_BLOB; }
    break;

  case 690:

/* Line 1455 of yacc.c  */
#line 6541 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_NEWDECIMAL;}
    break;

  case 691:

/* Line 1455 of yacc.c  */
#line 6543 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_NEWDECIMAL;}
    break;

  case 692:

/* Line 1455 of yacc.c  */
#line 6545 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_NEWDECIMAL;}
    break;

  case 693:

/* Line 1455 of yacc.c  */
#line 6547 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {Lex->interval_list.empty();}
    break;

  case 694:

/* Line 1455 of yacc.c  */
#line 6549 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_ENUM; }
    break;

  case 695:

/* Line 1455 of yacc.c  */
#line 6551 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->interval_list.empty();}
    break;

  case 696:

/* Line 1455 of yacc.c  */
#line 6553 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_SET; }
    break;

  case 697:

/* Line 1455 of yacc.c  */
#line 6555 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_MEDIUM_BLOB; }
    break;

  case 698:

/* Line 1455 of yacc.c  */
#line 6557 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)=MYSQL_TYPE_LONGLONG;
            Lex->type|= (AUTO_INCREMENT_FLAG | NOT_NULL_FLAG | UNSIGNED_FLAG |
              UNIQUE_FLAG);
          }
    break;

  case 699:

/* Line 1455 of yacc.c  */
#line 6565 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)= Field::GEOM_GEOMETRY; }
    break;

  case 700:

/* Line 1455 of yacc.c  */
#line 6566 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)= Field::GEOM_GEOMETRYCOLLECTION; }
    break;

  case 701:

/* Line 1455 of yacc.c  */
#line 6568 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->length= (char*)"25";
            (yyval.num)= Field::GEOM_POINT;
          }
    break;

  case 702:

/* Line 1455 of yacc.c  */
#line 6572 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)= Field::GEOM_MULTIPOINT; }
    break;

  case 703:

/* Line 1455 of yacc.c  */
#line 6573 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)= Field::GEOM_LINESTRING; }
    break;

  case 704:

/* Line 1455 of yacc.c  */
#line 6574 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)= Field::GEOM_MULTILINESTRING; }
    break;

  case 705:

/* Line 1455 of yacc.c  */
#line 6575 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)= Field::GEOM_POLYGON; }
    break;

  case 706:

/* Line 1455 of yacc.c  */
#line 6576 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)= Field::GEOM_MULTIPOLYGON; }
    break;

  case 707:

/* Line 1455 of yacc.c  */
#line 6580 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 708:

/* Line 1455 of yacc.c  */
#line 6584 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 709:

/* Line 1455 of yacc.c  */
#line 6585 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 710:

/* Line 1455 of yacc.c  */
#line 6589 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 711:

/* Line 1455 of yacc.c  */
#line 6590 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 712:

/* Line 1455 of yacc.c  */
#line 6594 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 713:

/* Line 1455 of yacc.c  */
#line 6595 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 714:

/* Line 1455 of yacc.c  */
#line 6596 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 715:

/* Line 1455 of yacc.c  */
#line 6597 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 716:

/* Line 1455 of yacc.c  */
#line 6598 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 717:

/* Line 1455 of yacc.c  */
#line 6602 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_LONG; }
    break;

  case 718:

/* Line 1455 of yacc.c  */
#line 6603 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_TINY; }
    break;

  case 719:

/* Line 1455 of yacc.c  */
#line 6604 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_SHORT; }
    break;

  case 720:

/* Line 1455 of yacc.c  */
#line 6605 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_INT24; }
    break;

  case 721:

/* Line 1455 of yacc.c  */
#line 6606 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_LONGLONG; }
    break;

  case 722:

/* Line 1455 of yacc.c  */
#line 6611 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= YYTHD->variables.sql_mode & MODE_REAL_AS_FLOAT ?
              MYSQL_TYPE_FLOAT : MYSQL_TYPE_DOUBLE;
          }
    break;

  case 723:

/* Line 1455 of yacc.c  */
#line 6616 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_DOUBLE; }
    break;

  case 724:

/* Line 1455 of yacc.c  */
#line 6618 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_DOUBLE; }
    break;

  case 725:

/* Line 1455 of yacc.c  */
#line 6623 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->dec=Lex->length= (char*)0; }
    break;

  case 726:

/* Line 1455 of yacc.c  */
#line 6625 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->dec= (char*)0; }
    break;

  case 727:

/* Line 1455 of yacc.c  */
#line 6627 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 728:

/* Line 1455 of yacc.c  */
#line 6632 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->length=(yyvsp[(2) - (5)].lex_str).str;
            lex->dec=(yyvsp[(4) - (5)].lex_str).str;
          }
    break;

  case 729:

/* Line 1455 of yacc.c  */
#line 6641 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->dec= (char *) 0; }
    break;

  case 730:

/* Line 1455 of yacc.c  */
#line 6642 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->dec= (yyvsp[(2) - (3)].lex_str).str; }
    break;

  case 731:

/* Line 1455 of yacc.c  */
#line 6646 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 0; }
    break;

  case 732:

/* Line 1455 of yacc.c  */
#line 6647 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 0; }
    break;

  case 733:

/* Line 1455 of yacc.c  */
#line 6649 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
             int error;
             (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(2) - (3)].lex_str).str, NULL, &error);
           }
    break;

  case 734:

/* Line 1455 of yacc.c  */
#line 6656 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 735:

/* Line 1455 of yacc.c  */
#line 6657 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 736:

/* Line 1455 of yacc.c  */
#line 6661 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 737:

/* Line 1455 of yacc.c  */
#line 6662 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 738:

/* Line 1455 of yacc.c  */
#line 6666 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 739:

/* Line 1455 of yacc.c  */
#line 6667 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->type|= UNSIGNED_FLAG;}
    break;

  case 740:

/* Line 1455 of yacc.c  */
#line 6668 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->type|= UNSIGNED_FLAG | ZEROFILL_FLAG; }
    break;

  case 741:

/* Line 1455 of yacc.c  */
#line 6672 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->length= (yyvsp[(2) - (3)].lex_str).str; }
    break;

  case 742:

/* Line 1455 of yacc.c  */
#line 6673 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->length= (yyvsp[(2) - (3)].lex_str).str; }
    break;

  case 743:

/* Line 1455 of yacc.c  */
#line 6674 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->length= (yyvsp[(2) - (3)].lex_str).str; }
    break;

  case 744:

/* Line 1455 of yacc.c  */
#line 6675 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->length= (yyvsp[(2) - (3)].lex_str).str; }
    break;

  case 745:

/* Line 1455 of yacc.c  */
#line 6678 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->length=(char*) 0; /* use default length */ }
    break;

  case 746:

/* Line 1455 of yacc.c  */
#line 6679 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { }
    break;

  case 747:

/* Line 1455 of yacc.c  */
#line 6683 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 748:

/* Line 1455 of yacc.c  */
#line 6684 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 749:

/* Line 1455 of yacc.c  */
#line 6688 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 750:

/* Line 1455 of yacc.c  */
#line 6689 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 751:

/* Line 1455 of yacc.c  */
#line 6693 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 753:

/* Line 1455 of yacc.c  */
#line 6698 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->type&= ~ NOT_NULL_FLAG; }
    break;

  case 754:

/* Line 1455 of yacc.c  */
#line 6699 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->type|= NOT_NULL_FLAG; }
    break;

  case 755:

/* Line 1455 of yacc.c  */
#line 6700 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->default_value=(yyvsp[(2) - (2)].item); }
    break;

  case 756:

/* Line 1455 of yacc.c  */
#line 6701 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->on_update_value= (yyvsp[(3) - (3)].item); }
    break;

  case 757:

/* Line 1455 of yacc.c  */
#line 6702 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->type|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG; }
    break;

  case 758:

/* Line 1455 of yacc.c  */
#line 6704 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { 
            LEX *lex=Lex;
            lex->type|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG | UNIQUE_FLAG;
            lex->alter_info.flags|= Alter_info::ALTER_ADD_INDEX;
          }
    break;

  case 759:

/* Line 1455 of yacc.c  */
#line 6710 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->type|= PRI_KEY_FLAG | NOT_NULL_FLAG;
            lex->alter_info.flags|= Alter_info::ALTER_ADD_INDEX;
          }
    break;

  case 760:

/* Line 1455 of yacc.c  */
#line 6716 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->type|= UNIQUE_FLAG; 
            lex->alter_info.flags|= Alter_info::ALTER_ADD_INDEX;
          }
    break;

  case 761:

/* Line 1455 of yacc.c  */
#line 6722 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->type|= UNIQUE_KEY_FLAG; 
            lex->alter_info.flags|= Alter_info::ALTER_ADD_INDEX; 
          }
    break;

  case 762:

/* Line 1455 of yacc.c  */
#line 6727 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->comment= (yyvsp[(2) - (2)].lex_str); }
    break;

  case 763:

/* Line 1455 of yacc.c  */
#line 6729 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (Lex->charset && !my_charset_same(Lex->charset,(yyvsp[(2) - (2)].charset)))
            {
              my_error(ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                       (yyvsp[(2) - (2)].charset)->name,Lex->charset->csname);
              MYSQL_YYABORT;
            }
            else
            {
              Lex->charset=(yyvsp[(2) - (2)].charset);
            }
          }
    break;

  case 764:

/* Line 1455 of yacc.c  */
#line 6742 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->type&= ~(FIELD_FLAGS_COLUMN_FORMAT_MASK);
            Lex->type|=
              (COLUMN_FORMAT_TYPE_DEFAULT << FIELD_FLAGS_COLUMN_FORMAT);
          }
    break;

  case 765:

/* Line 1455 of yacc.c  */
#line 6748 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->type&= ~(FIELD_FLAGS_COLUMN_FORMAT_MASK);
            Lex->type|=
              (COLUMN_FORMAT_TYPE_FIXED << FIELD_FLAGS_COLUMN_FORMAT);
          }
    break;

  case 766:

/* Line 1455 of yacc.c  */
#line 6754 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->type&= ~(FIELD_FLAGS_COLUMN_FORMAT_MASK);
            Lex->type|=
              (COLUMN_FORMAT_TYPE_DYNAMIC << FIELD_FLAGS_COLUMN_FORMAT);
          }
    break;

  case 767:

/* Line 1455 of yacc.c  */
#line 6760 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->type&= ~(FIELD_FLAGS_STORAGE_MEDIA_MASK);
            Lex->type|= (HA_SM_DEFAULT << FIELD_FLAGS_STORAGE_MEDIA);
          }
    break;

  case 768:

/* Line 1455 of yacc.c  */
#line 6765 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->type&= ~(FIELD_FLAGS_STORAGE_MEDIA_MASK);
            Lex->type|= (HA_SM_DISK << FIELD_FLAGS_STORAGE_MEDIA);
          }
    break;

  case 769:

/* Line 1455 of yacc.c  */
#line 6770 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->type&= ~(FIELD_FLAGS_STORAGE_MEDIA_MASK);
            Lex->type|= (HA_SM_MEMORY << FIELD_FLAGS_STORAGE_MEDIA);
          }
    break;

  case 770:

/* Line 1455 of yacc.c  */
#line 6779 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
          (yyval.num)= (yyvsp[(1) - (2)].num);

          if (Lex->charset) /* Lex->charset is scanned in "type" */
          {
            if (!(Lex->charset= merge_charset_and_collation(Lex->charset, (yyvsp[(2) - (2)].charset))))
              MYSQL_YYABORT;
          }
          else if ((yyvsp[(2) - (2)].charset))
          {
            my_error(ER_NOT_SUPPORTED_YET, MYF(0),
                     "COLLATE with no CHARACTER SET "
                     "in SP parameters, RETURNS, DECLARE");
            MYSQL_YYABORT;
          }
        }
    break;

  case 771:

/* Line 1455 of yacc.c  */
#line 6800 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_now_local((yyvsp[(2) - (2)].ulong_num));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 773:

/* Line 1455 of yacc.c  */
#line 6809 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.item)=(yyvsp[(1) - (1)].item); }
    break;

  case 774:

/* Line 1455 of yacc.c  */
#line 6813 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 775:

/* Line 1455 of yacc.c  */
#line 6814 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 776:

/* Line 1455 of yacc.c  */
#line 6819 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.charset)=get_charset_by_csname((yyvsp[(1) - (1)].lex_str).str,MY_CS_PRIMARY,MYF(0))))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 777:

/* Line 1455 of yacc.c  */
#line 6826 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.charset)= &my_charset_bin; }
    break;

  case 778:

/* Line 1455 of yacc.c  */
#line 6830 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.charset)=(yyvsp[(1) - (1)].charset);   }
    break;

  case 779:

/* Line 1455 of yacc.c  */
#line 6831 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.charset)=NULL; }
    break;

  case 780:

/* Line 1455 of yacc.c  */
#line 6835 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.charset)= NULL; }
    break;

  case 781:

/* Line 1455 of yacc.c  */
#line 6836 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.charset)= (yyvsp[(2) - (2)].charset); }
    break;

  case 782:

/* Line 1455 of yacc.c  */
#line 6841 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.charset)=get_charset_by_csname((yyvsp[(1) - (1)].lex_str).str,MY_CS_PRIMARY,MYF(0))) &&
                !((yyval.charset)=get_old_charset_by_name((yyvsp[(1) - (1)].lex_str).str)))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 783:

/* Line 1455 of yacc.c  */
#line 6849 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.charset)= &my_charset_bin; }
    break;

  case 784:

/* Line 1455 of yacc.c  */
#line 6853 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.charset)=(yyvsp[(1) - (1)].charset);   }
    break;

  case 785:

/* Line 1455 of yacc.c  */
#line 6854 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.charset)=NULL; }
    break;

  case 786:

/* Line 1455 of yacc.c  */
#line 6859 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.charset)= mysqld_collation_get_by_name((yyvsp[(1) - (1)].lex_str).str)))
              MYSQL_YYABORT;
          }
    break;

  case 787:

/* Line 1455 of yacc.c  */
#line 6866 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.charset)=NULL; }
    break;

  case 788:

/* Line 1455 of yacc.c  */
#line 6867 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.charset)=(yyvsp[(2) - (2)].charset); }
    break;

  case 789:

/* Line 1455 of yacc.c  */
#line 6871 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.charset)=(yyvsp[(1) - (1)].charset); }
    break;

  case 790:

/* Line 1455 of yacc.c  */
#line 6872 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.charset)=NULL; }
    break;

  case 791:

/* Line 1455 of yacc.c  */
#line 6876 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 792:

/* Line 1455 of yacc.c  */
#line 6877 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 793:

/* Line 1455 of yacc.c  */
#line 6882 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->charset= &my_charset_latin1; }
    break;

  case 794:

/* Line 1455 of yacc.c  */
#line 6884 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->charset= &my_charset_latin1_bin;
          }
    break;

  case 795:

/* Line 1455 of yacc.c  */
#line 6888 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->charset= &my_charset_latin1_bin;
          }
    break;

  case 796:

/* Line 1455 of yacc.c  */
#line 6895 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (!(Lex->charset=get_charset_by_csname("ucs2",
                                                     MY_CS_PRIMARY,MYF(0))))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), "ucs2");
              MYSQL_YYABORT;
            }
          }
    break;

  case 797:

/* Line 1455 of yacc.c  */
#line 6904 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (!(Lex->charset= mysqld_collation_get_by_name("ucs2_bin")))
              MYSQL_YYABORT;
          }
    break;

  case 798:

/* Line 1455 of yacc.c  */
#line 6909 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (!(Lex->charset= mysqld_collation_get_by_name("ucs2_bin")))
              my_error(ER_UNKNOWN_COLLATION, MYF(0), "ucs2_bin");
          }
    break;

  case 799:

/* Line 1455 of yacc.c  */
#line 6916 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->charset=NULL; }
    break;

  case 802:

/* Line 1455 of yacc.c  */
#line 6919 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->charset=&my_charset_bin; }
    break;

  case 803:

/* Line 1455 of yacc.c  */
#line 6920 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->charset=(yyvsp[(2) - (3)].charset); }
    break;

  case 804:

/* Line 1455 of yacc.c  */
#line 6922 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->charset= NULL;
            Lex->type|= BINCMP_FLAG;
          }
    break;

  case 805:

/* Line 1455 of yacc.c  */
#line 6927 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->charset= (yyvsp[(3) - (3)].charset);
            Lex->type|= BINCMP_FLAG;
          }
    break;

  case 806:

/* Line 1455 of yacc.c  */
#line 6934 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { }
    break;

  case 807:

/* Line 1455 of yacc.c  */
#line 6935 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->type|= BINCMP_FLAG; }
    break;

  case 808:

/* Line 1455 of yacc.c  */
#line 6940 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
          if ((yyvsp[(2) - (2)].ulong_num) == 0)
          {
            my_parse_error(ER(ER_SYNTAX_ERROR));
            MYSQL_YYABORT;
          }
        }
    break;

  case 809:

/* Line 1455 of yacc.c  */
#line 6948 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(2) - (4)].ulong_num); }
    break;

  case 810:

/* Line 1455 of yacc.c  */
#line 6952 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 0; }
    break;

  case 811:

/* Line 1455 of yacc.c  */
#line 6953 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 1 << MY_STRXFRM_DESC_SHIFT; }
    break;

  case 812:

/* Line 1455 of yacc.c  */
#line 6957 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 1 << MY_STRXFRM_REVERSE_SHIFT; }
    break;

  case 813:

/* Line 1455 of yacc.c  */
#line 6960 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 0; }
    break;

  case 814:

/* Line 1455 of yacc.c  */
#line 6961 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(1) - (1)].ulong_num); }
    break;

  case 815:

/* Line 1455 of yacc.c  */
#line 6962 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(1) - (2)].ulong_num) | (yyvsp[(2) - (2)].ulong_num); }
    break;

  case 816:

/* Line 1455 of yacc.c  */
#line 6963 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(1) - (1)].ulong_num) ; }
    break;

  case 817:

/* Line 1455 of yacc.c  */
#line 6968 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
          (yyval.ulong_num)= (yyvsp[(1) - (1)].ulong_num) < 1 ? 1 : ((yyvsp[(1) - (1)].ulong_num) > MY_STRXFRM_NLEVELS ? MY_STRXFRM_NLEVELS : (yyvsp[(1) - (1)].ulong_num));
          (yyval.ulong_num)--;
        }
    break;

  case 818:

/* Line 1455 of yacc.c  */
#line 6976 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
          (yyval.ulong_num)= (1 | (yyvsp[(2) - (2)].ulong_num)) << (yyvsp[(1) - (2)].ulong_num);
        }
    break;

  case 819:

/* Line 1455 of yacc.c  */
#line 6982 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(1) - (1)].ulong_num); }
    break;

  case 820:

/* Line 1455 of yacc.c  */
#line 6983 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)|= (yyvsp[(3) - (3)].ulong_num); }
    break;

  case 821:

/* Line 1455 of yacc.c  */
#line 6988 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
          uint start= (yyvsp[(1) - (3)].ulong_num);
          uint end= (yyvsp[(3) - (3)].ulong_num);
          for ((yyval.ulong_num)= 0; start <= end; start++)
            (yyval.ulong_num)|= (1 << start);
        }
    break;

  case 822:

/* Line 1455 of yacc.c  */
#line 6997 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(1) - (1)].ulong_num); }
    break;

  case 823:

/* Line 1455 of yacc.c  */
#line 6998 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(1) - (1)].ulong_num); }
    break;

  case 824:

/* Line 1455 of yacc.c  */
#line 7002 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 0; }
    break;

  case 825:

/* Line 1455 of yacc.c  */
#line 7003 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(2) - (2)].ulong_num); }
    break;

  case 828:

/* Line 1455 of yacc.c  */
#line 7017 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.table)=(yyvsp[(2) - (5)].table);
          }
    break;

  case 829:

/* Line 1455 of yacc.c  */
#line 7024 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->ref_list.empty(); }
    break;

  case 831:

/* Line 1455 of yacc.c  */
#line 7030 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Key_part_spec *key= new Key_part_spec((yyvsp[(3) - (3)].lex_str), 0);
            if (key == NULL)
              MYSQL_YYABORT;
            Lex->ref_list.push_back(key);
          }
    break;

  case 832:

/* Line 1455 of yacc.c  */
#line 7037 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Key_part_spec *key= new Key_part_spec((yyvsp[(1) - (1)].lex_str), 0);
            if (key == NULL)
              MYSQL_YYABORT;
            LEX *lex= Lex;
            lex->ref_list.empty();
            lex->ref_list.push_back(key);
          }
    break;

  case 833:

/* Line 1455 of yacc.c  */
#line 7049 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->fk_match_option= Foreign_key::FK_MATCH_UNDEF; }
    break;

  case 834:

/* Line 1455 of yacc.c  */
#line 7051 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->fk_match_option= Foreign_key::FK_MATCH_FULL; }
    break;

  case 835:

/* Line 1455 of yacc.c  */
#line 7053 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->fk_match_option= Foreign_key::FK_MATCH_PARTIAL; }
    break;

  case 836:

/* Line 1455 of yacc.c  */
#line 7055 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->fk_match_option= Foreign_key::FK_MATCH_SIMPLE; }
    break;

  case 837:

/* Line 1455 of yacc.c  */
#line 7060 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->fk_update_opt= Foreign_key::FK_OPTION_UNDEF;
            lex->fk_delete_opt= Foreign_key::FK_OPTION_UNDEF;
          }
    break;

  case 838:

/* Line 1455 of yacc.c  */
#line 7066 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[(3) - (3)].m_fk_option);
            lex->fk_delete_opt= Foreign_key::FK_OPTION_UNDEF;
          }
    break;

  case 839:

/* Line 1455 of yacc.c  */
#line 7072 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->fk_update_opt= Foreign_key::FK_OPTION_UNDEF;
            lex->fk_delete_opt= (yyvsp[(3) - (3)].m_fk_option);
          }
    break;

  case 840:

/* Line 1455 of yacc.c  */
#line 7079 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[(3) - (6)].m_fk_option);
            lex->fk_delete_opt= (yyvsp[(6) - (6)].m_fk_option);
          }
    break;

  case 841:

/* Line 1455 of yacc.c  */
#line 7086 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[(6) - (6)].m_fk_option);
            lex->fk_delete_opt= (yyvsp[(3) - (6)].m_fk_option);
          }
    break;

  case 842:

/* Line 1455 of yacc.c  */
#line 7094 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.m_fk_option)= Foreign_key::FK_OPTION_RESTRICT; }
    break;

  case 843:

/* Line 1455 of yacc.c  */
#line 7095 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.m_fk_option)= Foreign_key::FK_OPTION_CASCADE; }
    break;

  case 844:

/* Line 1455 of yacc.c  */
#line 7096 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.m_fk_option)= Foreign_key::FK_OPTION_SET_NULL; }
    break;

  case 845:

/* Line 1455 of yacc.c  */
#line 7097 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.m_fk_option)= Foreign_key::FK_OPTION_NO_ACTION; }
    break;

  case 846:

/* Line 1455 of yacc.c  */
#line 7098 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.m_fk_option)= Foreign_key::FK_OPTION_DEFAULT;  }
    break;

  case 847:

/* Line 1455 of yacc.c  */
#line 7102 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.key_type)= Key::MULTIPLE; }
    break;

  case 848:

/* Line 1455 of yacc.c  */
#line 7106 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.key_type)= Key::PRIMARY; }
    break;

  case 849:

/* Line 1455 of yacc.c  */
#line 7107 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.key_type)= Key::UNIQUE; }
    break;

  case 850:

/* Line 1455 of yacc.c  */
#line 7111 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 851:

/* Line 1455 of yacc.c  */
#line 7112 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 852:

/* Line 1455 of yacc.c  */
#line 7116 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 854:

/* Line 1455 of yacc.c  */
#line 7121 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 855:

/* Line 1455 of yacc.c  */
#line 7122 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 856:

/* Line 1455 of yacc.c  */
#line 7123 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 857:

/* Line 1455 of yacc.c  */
#line 7127 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.key_type)= Key::MULTIPLE; }
    break;

  case 858:

/* Line 1455 of yacc.c  */
#line 7128 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.key_type)= Key::UNIQUE; }
    break;

  case 859:

/* Line 1455 of yacc.c  */
#line 7132 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.key_type)= Key::FULLTEXT;}
    break;

  case 860:

/* Line 1455 of yacc.c  */
#line 7137 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
#ifdef HAVE_SPATIAL
            (yyval.key_type)= Key::SPATIAL;
#else
            my_error(ER_FEATURE_DISABLED, MYF(0),
                     sym_group_geom.name, sym_group_geom.needed_define);
            MYSQL_YYABORT;
#endif
          }
    break;

  case 861:

/* Line 1455 of yacc.c  */
#line 7149 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->key_create_info= default_key_create_info;
          }
    break;

  case 864:

/* Line 1455 of yacc.c  */
#line 7166 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 866:

/* Line 1455 of yacc.c  */
#line 7171 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 868:

/* Line 1455 of yacc.c  */
#line 7176 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 876:

/* Line 1455 of yacc.c  */
#line 7196 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->key_create_info.algorithm= (yyvsp[(2) - (2)].key_alg); }
    break;

  case 877:

/* Line 1455 of yacc.c  */
#line 7197 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->key_create_info.algorithm= (yyvsp[(2) - (2)].key_alg); }
    break;

  case 878:

/* Line 1455 of yacc.c  */
#line 7202 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->key_create_info.block_size= (yyvsp[(3) - (3)].ulong_num); }
    break;

  case 879:

/* Line 1455 of yacc.c  */
#line 7203 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->key_create_info.comment= (yyvsp[(2) - (2)].lex_str); }
    break;

  case 884:

/* Line 1455 of yacc.c  */
#line 7218 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (plugin_is_ready(&(yyvsp[(3) - (3)].lex_str), MYSQL_FTPARSER_PLUGIN))
              Lex->key_create_info.parser_name= (yyvsp[(3) - (3)].lex_str);
            else
            {
              my_error(ER_FUNCTION_NOT_DEFINED, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 885:

/* Line 1455 of yacc.c  */
#line 7230 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.key_alg)= HA_KEY_ALG_BTREE; }
    break;

  case 886:

/* Line 1455 of yacc.c  */
#line 7231 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.key_alg)= HA_KEY_ALG_RTREE; }
    break;

  case 887:

/* Line 1455 of yacc.c  */
#line 7232 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.key_alg)= HA_KEY_ALG_HASH; }
    break;

  case 888:

/* Line 1455 of yacc.c  */
#line 7236 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->col_list.push_back((yyvsp[(3) - (4)].key_part)); }
    break;

  case 889:

/* Line 1455 of yacc.c  */
#line 7237 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->col_list.push_back((yyvsp[(1) - (2)].key_part)); }
    break;

  case 890:

/* Line 1455 of yacc.c  */
#line 7242 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.key_part)= new Key_part_spec((yyvsp[(1) - (1)].lex_str), 0);
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 891:

/* Line 1455 of yacc.c  */
#line 7248 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            int key_part_len= atoi((yyvsp[(3) - (4)].lex_str).str);
            if (!key_part_len)
            {
              my_error(ER_KEY_PART_0, MYF(0), (yyvsp[(1) - (4)].lex_str).str);
            }
            (yyval.key_part)= new Key_part_spec((yyvsp[(1) - (4)].lex_str), (uint) key_part_len);
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 892:

/* Line 1455 of yacc.c  */
#line 7261 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= null_lex_str; }
    break;

  case 893:

/* Line 1455 of yacc.c  */
#line 7262 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str); }
    break;

  case 894:

/* Line 1455 of yacc.c  */
#line 7266 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= null_lex_str; }
    break;

  case 895:

/* Line 1455 of yacc.c  */
#line 7267 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(2) - (2)].lex_str); }
    break;

  case 896:

/* Line 1455 of yacc.c  */
#line 7271 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->interval_list.push_back((yyvsp[(1) - (1)].string)); }
    break;

  case 897:

/* Line 1455 of yacc.c  */
#line 7272 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->interval_list.push_back((yyvsp[(3) - (3)].string)); }
    break;

  case 898:

/* Line 1455 of yacc.c  */
#line 7280 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->name.str= 0;
            lex->name.length= 0;
            lex->sql_command= SQLCOM_ALTER_TABLE;
            lex->duplicates= DUP_ERROR; 
            if (!lex->select_lex.add_table_to_list(thd, (yyvsp[(4) - (4)].table), NULL,
                                                   TL_OPTION_UPDATING,
                                                   TL_READ_NO_INSERT,
                                                   MDL_SHARED_UPGRADABLE))
              MYSQL_YYABORT;
            lex->col_list.empty();
            lex->select_lex.init_order();
            lex->select_lex.db= (lex->select_lex.table_list.first)->db;
            memset(&lex->create_info, 0, sizeof(lex->create_info));
            lex->create_info.db_type= 0;
            lex->create_info.default_table_charset= NULL;
            lex->create_info.row_type= ROW_TYPE_NOT_USED;
            lex->alter_info.reset();
            lex->no_write_to_binlog= 0;
            lex->create_info.storage_media= HA_SM_DEFAULT;
            lex->create_last_non_select_table= lex->last_table();
            DBUG_ASSERT(!lex->m_sql_cmd);
          }
    break;

  case 899:

/* Line 1455 of yacc.c  */
#line 7306 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (!lex->m_sql_cmd)
            {
              /* Create a generic ALTER TABLE statment. */
              lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_alter_table();
              if (lex->m_sql_cmd == NULL)
                MYSQL_YYABORT;
            }
          }
    break;

  case 900:

/* Line 1455 of yacc.c  */
#line 7318 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->create_info.default_table_charset= NULL;
            Lex->create_info.used_fields= 0;
          }
    break;

  case 901:

/* Line 1455 of yacc.c  */
#line 7323 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_ALTER_DB;
            lex->name= (yyvsp[(3) - (5)].lex_str);
            if (lex->name.str == NULL &&
                lex->copy_db_to(&lex->name.str, &lex->name.length))
              MYSQL_YYABORT;
          }
    break;

  case 902:

/* Line 1455 of yacc.c  */
#line 7332 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "DATABASE");
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_ALTER_DB_UPGRADE;
            lex->name= (yyvsp[(3) - (7)].lex_str);
          }
    break;

  case 903:

/* Line 1455 of yacc.c  */
#line 7343 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
    break;

  case 904:

/* Line 1455 of yacc.c  */
#line 7354 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_PROCEDURE;
            lex->spname= (yyvsp[(3) - (5)].spname);
          }
    break;

  case 905:

/* Line 1455 of yacc.c  */
#line 7361 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
    break;

  case 906:

/* Line 1455 of yacc.c  */
#line 7372 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_FUNCTION;
            lex->spname= (yyvsp[(3) - (5)].spname);
          }
    break;

  case 907:

/* Line 1455 of yacc.c  */
#line 7379 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "ALTER VIEW");
              MYSQL_YYABORT;
            }
            lex->create_view_mode= VIEW_ALTER;
          }
    break;

  case 908:

/* Line 1455 of yacc.c  */
#line 7390 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 909:

/* Line 1455 of yacc.c  */
#line 7397 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "ALTER VIEW");
              MYSQL_YYABORT;
            }
            lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED;
            lex->create_view_mode= VIEW_ALTER;
          }
    break;

  case 910:

/* Line 1455 of yacc.c  */
#line 7409 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 911:

/* Line 1455 of yacc.c  */
#line 7411 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            /* 
              It is safe to use Lex->spname because
              ALTER EVENT xxx RENATE TO yyy DO ALTER EVENT RENAME TO
              is not allowed. Lex->spname is used in the case of RENAME TO
              If it had to be supported spname had to be added to
              Event_parse_data.
            */

            if (!(Lex->event_parse_data= Event_parse_data::new_instance(YYTHD)))
              MYSQL_YYABORT;
            Lex->event_parse_data->identifier= (yyvsp[(4) - (4)].spname);

            Lex->sql_command= SQLCOM_ALTER_EVENT;
          }
    break;

  case 912:

/* Line 1455 of yacc.c  */
#line 7431 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (!((yyvsp[(6) - (10)].num) || (yyvsp[(7) - (10)].num) || (yyvsp[(8) - (10)].num) || (yyvsp[(9) - (10)].num) || (yyvsp[(10) - (10)].num)))
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_ALTER_EVENT;
          }
    break;

  case 913:

/* Line 1455 of yacc.c  */
#line 7444 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_TABLESPACE;
          }
    break;

  case 914:

/* Line 1455 of yacc.c  */
#line 7449 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_LOGFILE_GROUP;
          }
    break;

  case 915:

/* Line 1455 of yacc.c  */
#line 7454 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= CHANGE_FILE_TABLESPACE;
          }
    break;

  case 916:

/* Line 1455 of yacc.c  */
#line 7459 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_ACCESS_MODE_TABLESPACE;
          }
    break;

  case 917:

/* Line 1455 of yacc.c  */
#line 7464 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_SERVER;
            lex->server_options.server_name= (yyvsp[(3) - (7)].lex_str).str;
            lex->server_options.server_name_length= (yyvsp[(3) - (7)].lex_str).length;
          }
    break;

  case 918:

/* Line 1455 of yacc.c  */
#line 7471 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_ALTER_USER;
          }
    break;

  case 919:

/* Line 1455 of yacc.c  */
#line 7478 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(1) - (3)].lex_user)))
              MYSQL_YYABORT;
        }
    break;

  case 920:

/* Line 1455 of yacc.c  */
#line 7483 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(3) - (5)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 921:

/* Line 1455 of yacc.c  */
#line 7490 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0;}
    break;

  case 922:

/* Line 1455 of yacc.c  */
#line 7491 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 923:

/* Line 1455 of yacc.c  */
#line 7492 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 924:

/* Line 1455 of yacc.c  */
#line 7493 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 925:

/* Line 1455 of yacc.c  */
#line 7497 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0;}
    break;

  case 926:

/* Line 1455 of yacc.c  */
#line 7499 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            /*
              Use lex's spname to hold the new name.
              The original name is in the Event_parse_data object
            */
            Lex->spname= (yyvsp[(3) - (3)].spname); 
            (yyval.num)= 1;
          }
    break;

  case 927:

/* Line 1455 of yacc.c  */
#line 7510 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0;}
    break;

  case 928:

/* Line 1455 of yacc.c  */
#line 7511 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 929:

/* Line 1455 of yacc.c  */
#line 7515 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str).str= 0; (yyval.lex_str).length= 0; }
    break;

  case 930:

/* Line 1455 of yacc.c  */
#line 7516 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str); }
    break;

  case 932:

/* Line 1455 of yacc.c  */
#line 7522 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->m_sql_cmd= new (YYTHD->mem_root)
              Sql_cmd_discard_import_tablespace(
                Sql_cmd_discard_import_tablespace::DISCARD_TABLESPACE);
            if (Lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 933:

/* Line 1455 of yacc.c  */
#line 7530 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->m_sql_cmd= new (YYTHD->mem_root)
              Sql_cmd_discard_import_tablespace(
                Sql_cmd_discard_import_tablespace::IMPORT_TABLESPACE);
            if (Lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 939:

/* Line 1455 of yacc.c  */
#line 7552 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= Alter_info::ALTER_DROP_PARTITION;
          }
    break;

  case 940:

/* Line 1455 of yacc.c  */
#line 7557 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_info.flags|= Alter_info::ALTER_REBUILD_PARTITION;
            lex->no_write_to_binlog= (yyvsp[(3) - (4)].num);
          }
    break;

  case 941:

/* Line 1455 of yacc.c  */
#line 7564 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[(3) - (4)].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_optimize_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 943:

/* Line 1455 of yacc.c  */
#line 7578 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[(3) - (4)].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_analyze_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 944:

/* Line 1455 of yacc.c  */
#line 7590 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_check_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 946:

/* Line 1455 of yacc.c  */
#line 7603 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[(3) - (4)].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_repair_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 948:

/* Line 1455 of yacc.c  */
#line 7616 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_info.flags|= Alter_info::ALTER_COALESCE_PARTITION;
            lex->no_write_to_binlog= (yyvsp[(3) - (4)].num);
            lex->alter_info.num_parts= (yyvsp[(4) - (4)].ulong_num);
          }
    break;

  case 949:

/* Line 1455 of yacc.c  */
#line 7623 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_truncate_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 951:

/* Line 1455 of yacc.c  */
#line 7636 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            size_t dummy;
            lex->select_lex.db=(yyvsp[(6) - (7)].table)->db.str;
            if (lex->select_lex.db == NULL &&
                lex->copy_db_to(&lex->select_lex.db, &dummy))
            {
              MYSQL_YYABORT;
            }
            lex->name= (yyvsp[(6) - (7)].table)->table;
            lex->alter_info.flags|= Alter_info::ALTER_EXCHANGE_PARTITION;
            if (!lex->select_lex.add_table_to_list(thd, (yyvsp[(6) - (7)].table), NULL,
                                                   TL_OPTION_UPDATING,
                                                   TL_READ_NO_INSERT,
                                                   MDL_SHARED_NO_WRITE))
              MYSQL_YYABORT;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                               Sql_cmd_alter_table_exchange_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 952:

/* Line 1455 of yacc.c  */
#line 7663 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= Alter_info::ALTER_REMOVE_PARTITIONING;
          }
    break;

  case 953:

/* Line 1455 of yacc.c  */
#line 7670 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= Alter_info::ALTER_ALL_PARTITION;
          }
    break;

  case 955:

/* Line 1455 of yacc.c  */
#line 7678 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->part_info= new partition_info();
            if (!lex->part_info)
            {
              mem_alloc_error(sizeof(partition_info));
              MYSQL_YYABORT;
            }
            lex->alter_info.flags|= Alter_info::ALTER_ADD_PARTITION;
            lex->no_write_to_binlog= (yyvsp[(3) - (3)].num);
          }
    break;

  case 956:

/* Line 1455 of yacc.c  */
#line 7690 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 958:

/* Line 1455 of yacc.c  */
#line 7696 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->part_info->num_parts= lex->part_info->partitions.elements;
          }
    break;

  case 959:

/* Line 1455 of yacc.c  */
#line 7701 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->part_info->num_parts= (yyvsp[(2) - (2)].ulong_num);
          }
    break;

  case 960:

/* Line 1455 of yacc.c  */
#line 7708 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->part_info= new partition_info();
            if (!lex->part_info)
            {
              mem_alloc_error(sizeof(partition_info));
              MYSQL_YYABORT;
            }
            lex->no_write_to_binlog= (yyvsp[(3) - (3)].num);
          }
    break;

  case 962:

/* Line 1455 of yacc.c  */
#line 7723 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= Alter_info::ALTER_TABLE_REORG;
          }
    break;

  case 963:

/* Line 1455 of yacc.c  */
#line 7727 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= Alter_info::ALTER_REORGANIZE_PARTITION;
          }
    break;

  case 964:

/* Line 1455 of yacc.c  */
#line 7731 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->num_parts= part_info->partitions.elements;
          }
    break;

  case 965:

/* Line 1455 of yacc.c  */
#line 7738 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 966:

/* Line 1455 of yacc.c  */
#line 7739 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 967:

/* Line 1455 of yacc.c  */
#line 7744 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (Lex->alter_info.partition_names.push_back((yyvsp[(1) - (1)].lex_str).str))
            {
              mem_alloc_error(1);
              MYSQL_YYABORT;
            }
          }
    break;

  case 970:

/* Line 1455 of yacc.c  */
#line 7764 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->change=0;
            lex->alter_info.flags|= Alter_info::ALTER_ADD_COLUMN;
          }
    break;

  case 971:

/* Line 1455 of yacc.c  */
#line 7773 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->create_last_non_select_table= Lex->last_table();
          }
    break;

  case 972:

/* Line 1455 of yacc.c  */
#line 7777 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->create_last_non_select_table= Lex->last_table();
            Lex->alter_info.flags|= Alter_info::ALTER_ADD_INDEX;
          }
    break;

  case 973:

/* Line 1455 of yacc.c  */
#line 7782 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= Alter_info::ALTER_ADD_COLUMN |
                                    Alter_info::ALTER_ADD_INDEX;
          }
    break;

  case 974:

/* Line 1455 of yacc.c  */
#line 7787 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->change= (yyvsp[(3) - (3)].lex_str).str;
            lex->alter_info.flags|= Alter_info::ALTER_CHANGE_COLUMN;
          }
    break;

  case 975:

/* Line 1455 of yacc.c  */
#line 7793 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->create_last_non_select_table= Lex->last_table();
          }
    break;

  case 976:

/* Line 1455 of yacc.c  */
#line 7797 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->length=lex->dec=0; lex->type=0;
            lex->default_value= lex->on_update_value= 0;
            lex->comment=null_lex_str;
            lex->charset= NULL;
            lex->alter_info.flags|= Alter_info::ALTER_CHANGE_COLUMN;
          }
    break;

  case 977:

/* Line 1455 of yacc.c  */
#line 7806 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (add_field_to_list(lex->thd,&(yyvsp[(3) - (6)].lex_str),
                                  (enum enum_field_types) (yyvsp[(5) - (6)].num),
                                  lex->length,lex->dec,lex->type,
                                  lex->default_value, lex->on_update_value,
                                  &lex->comment,
                                  (yyvsp[(3) - (6)].lex_str).str, &lex->interval_list, lex->charset,
                                  lex->uint_geom_type))
              MYSQL_YYABORT;
          }
    break;

  case 978:

/* Line 1455 of yacc.c  */
#line 7818 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->create_last_non_select_table= Lex->last_table();
          }
    break;

  case 979:

/* Line 1455 of yacc.c  */
#line 7822 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Alter_drop *ad= new Alter_drop(Alter_drop::COLUMN, (yyvsp[(3) - (4)].lex_str).str);
            if (ad == NULL)
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad);
            lex->alter_info.flags|= Alter_info::ALTER_DROP_COLUMN;
          }
    break;

  case 980:

/* Line 1455 of yacc.c  */
#line 7831 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Alter_drop *ad= new Alter_drop(Alter_drop::FOREIGN_KEY, (yyvsp[(4) - (4)].lex_str).str);
            if (ad == NULL)
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad);
            lex->alter_info.flags|= Alter_info::DROP_FOREIGN_KEY;
          }
    break;

  case 981:

/* Line 1455 of yacc.c  */
#line 7840 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Alter_drop *ad= new Alter_drop(Alter_drop::KEY, primary_key_name);
            if (ad == NULL)
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad);
            lex->alter_info.flags|= Alter_info::ALTER_DROP_INDEX;
          }
    break;

  case 982:

/* Line 1455 of yacc.c  */
#line 7849 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Alter_drop *ad= new Alter_drop(Alter_drop::KEY, (yyvsp[(3) - (3)].lex_str).str);
            if (ad == NULL)
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad);
            lex->alter_info.flags|= Alter_info::ALTER_DROP_INDEX;
          }
    break;

  case 983:

/* Line 1455 of yacc.c  */
#line 7858 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->alter_info.keys_onoff= Alter_info::DISABLE;
            lex->alter_info.flags|= Alter_info::ALTER_KEYS_ONOFF;
          }
    break;

  case 984:

/* Line 1455 of yacc.c  */
#line 7864 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->alter_info.keys_onoff= Alter_info::ENABLE;
            lex->alter_info.flags|= Alter_info::ALTER_KEYS_ONOFF;
          }
    break;

  case 985:

/* Line 1455 of yacc.c  */
#line 7870 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Alter_column *ac= new Alter_column((yyvsp[(3) - (6)].lex_str).str,(yyvsp[(6) - (6)].item));
            if (ac == NULL)
              MYSQL_YYABORT;
            lex->alter_info.alter_list.push_back(ac);
            lex->alter_info.flags|= Alter_info::ALTER_CHANGE_COLUMN_DEFAULT;
          }
    break;

  case 986:

/* Line 1455 of yacc.c  */
#line 7879 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Alter_column *ac= new Alter_column((yyvsp[(3) - (5)].lex_str).str, (Item*) 0);
            if (ac == NULL)
              MYSQL_YYABORT;
            lex->alter_info.alter_list.push_back(ac);
            lex->alter_info.flags|= Alter_info::ALTER_CHANGE_COLUMN_DEFAULT;
          }
    break;

  case 987:

/* Line 1455 of yacc.c  */
#line 7888 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            size_t dummy;
            lex->select_lex.db=(yyvsp[(3) - (3)].table)->db.str;
            if (lex->select_lex.db == NULL &&
                lex->copy_db_to(&lex->select_lex.db, &dummy))
            {
              MYSQL_YYABORT;
            }
            enum_ident_name_check ident_check_status=
              check_table_name((yyvsp[(3) - (3)].table)->table.str,(yyvsp[(3) - (3)].table)->table.length, FALSE);
            if (ident_check_status == IDENT_NAME_WRONG)
            {
              my_error(ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[(3) - (3)].table)->table.str);
              MYSQL_YYABORT;
            }
            else if (ident_check_status == IDENT_NAME_TOO_LONG)
            {
              my_error(ER_TOO_LONG_IDENT, MYF(0), (yyvsp[(3) - (3)].table)->table.str);
              MYSQL_YYABORT;
            }
            if ((yyvsp[(3) - (3)].table)->db.str &&
                (check_and_convert_db_name(&(yyvsp[(3) - (3)].table)->db, FALSE) != IDENT_NAME_OK))
              MYSQL_YYABORT;
            lex->name= (yyvsp[(3) - (3)].table)->table;
            lex->alter_info.flags|= Alter_info::ALTER_RENAME;
          }
    break;

  case 988:

/* Line 1455 of yacc.c  */
#line 7916 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (!(yyvsp[(4) - (5)].charset))
            {
              THD *thd= YYTHD;
              (yyvsp[(4) - (5)].charset)= thd->variables.collation_database;
            }
            (yyvsp[(5) - (5)].charset)= (yyvsp[(5) - (5)].charset) ? (yyvsp[(5) - (5)].charset) : (yyvsp[(4) - (5)].charset);
            if (!my_charset_same((yyvsp[(4) - (5)].charset),(yyvsp[(5) - (5)].charset)))
            {
              my_error(ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                       (yyvsp[(5) - (5)].charset)->name, (yyvsp[(4) - (5)].charset)->csname);
              MYSQL_YYABORT;
            }
            LEX *lex= Lex;
            lex->create_info.table_charset=
            lex->create_info.default_table_charset= (yyvsp[(5) - (5)].charset);
            lex->create_info.used_fields|= (HA_CREATE_USED_CHARSET |
              HA_CREATE_USED_DEFAULT_CHARSET);
            lex->alter_info.flags|= Alter_info::ALTER_CONVERT;
          }
    break;

  case 989:

/* Line 1455 of yacc.c  */
#line 7937 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->alter_info.flags|= Alter_info::ALTER_OPTIONS;
            if ((lex->create_info.used_fields & HA_CREATE_USED_ENGINE) &&
                !lex->create_info.db_type)
            {
              lex->create_info.used_fields&= ~HA_CREATE_USED_ENGINE;
            }
          }
    break;

  case 990:

/* Line 1455 of yacc.c  */
#line 7947 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= Alter_info::ALTER_RECREATE;
          }
    break;

  case 991:

/* Line 1455 of yacc.c  */
#line 7951 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->alter_info.flags|= Alter_info::ALTER_ORDER;
          }
    break;

  case 999:

/* Line 1455 of yacc.c  */
#line 7968 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.requested_algorithm=
              Alter_info::ALTER_TABLE_ALGORITHM_DEFAULT;
          }
    break;

  case 1000:

/* Line 1455 of yacc.c  */
#line 7973 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (Lex->alter_info.set_requested_algorithm(&(yyvsp[(3) - (3)].lex_str)))
            {
              my_error(ER_UNKNOWN_ALTER_ALGORITHM, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 1001:

/* Line 1455 of yacc.c  */
#line 7984 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.requested_lock=
              Alter_info::ALTER_TABLE_LOCK_DEFAULT;
          }
    break;

  case 1002:

/* Line 1455 of yacc.c  */
#line 7989 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (Lex->alter_info.set_requested_lock(&(yyvsp[(3) - (3)].lex_str)))
            {
              my_error(ER_UNKNOWN_ALTER_LOCK, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 1003:

/* Line 1455 of yacc.c  */
#line 7999 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1004:

/* Line 1455 of yacc.c  */
#line 8000 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1005:

/* Line 1455 of yacc.c  */
#line 8004 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->ignore= 0;}
    break;

  case 1006:

/* Line 1455 of yacc.c  */
#line 8005 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->ignore= 1;}
    break;

  case 1007:

/* Line 1455 of yacc.c  */
#line 8009 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->drop_mode= DROP_DEFAULT; }
    break;

  case 1008:

/* Line 1455 of yacc.c  */
#line 8010 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->drop_mode= DROP_RESTRICT; }
    break;

  case 1009:

/* Line 1455 of yacc.c  */
#line 8011 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->drop_mode= DROP_CASCADE; }
    break;

  case 1010:

/* Line 1455 of yacc.c  */
#line 8015 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1011:

/* Line 1455 of yacc.c  */
#line 8017 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            store_position_for_column((yyvsp[(2) - (2)].lex_str).str);
            Lex->alter_info.flags |= Alter_info::ALTER_COLUMN_ORDER;
          }
    break;

  case 1012:

/* Line 1455 of yacc.c  */
#line 8022 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            store_position_for_column(first_keyword);
            Lex->alter_info.flags |= Alter_info::ALTER_COLUMN_ORDER;
          }
    break;

  case 1013:

/* Line 1455 of yacc.c  */
#line 8029 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1014:

/* Line 1455 of yacc.c  */
#line 8030 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1015:

/* Line 1455 of yacc.c  */
#line 8031 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1016:

/* Line 1455 of yacc.c  */
#line 8032 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1017:

/* Line 1455 of yacc.c  */
#line 8037 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            /* Clean previous slave connection values */
            lex->slave_connection.reset();
            lex->sql_command = SQLCOM_SLAVE_START;
            lex->type = 0;
            /* We'll use mi structure for UNTIL options */
            lex->mi.set_unspecified();
            lex->slave_thd_opt= (yyvsp[(3) - (3)].num);
          }
    break;

  case 1018:

/* Line 1455 of yacc.c  */
#line 8049 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            /*
              It is not possible to set user's information when
              one is trying to start the SQL Thread.
            */
            if ((Lex->slave_thd_opt & SLAVE_SQL) == SLAVE_SQL &&
                (Lex->slave_thd_opt & SLAVE_IO) != SLAVE_IO &&
                (Lex->slave_connection.user ||
                 Lex->slave_connection.password ||
                 Lex->slave_connection.plugin_auth ||
                 Lex->slave_connection.plugin_dir))
            {
              my_error(ER_SQLTHREAD_WITH_SECURE_SLAVE, MYF(0));
              MYSQL_YYABORT;
            }
          }
    break;

  case 1019:

/* Line 1455 of yacc.c  */
#line 8066 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_STOP;
            lex->type = 0;
            lex->slave_thd_opt= (yyvsp[(3) - (3)].num);
          }
    break;

  case 1020:

/* Line 1455 of yacc.c  */
#line 8076 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_BEGIN;
            /* READ ONLY and READ WRITE are mutually exclusive. */
            if (((yyvsp[(3) - (3)].num) & MYSQL_START_TRANS_OPT_READ_WRITE) &&
                ((yyvsp[(3) - (3)].num) & MYSQL_START_TRANS_OPT_READ_ONLY))
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            lex->start_transaction_opt= (yyvsp[(3) - (3)].num);
          }
    break;

  case 1021:

/* Line 1455 of yacc.c  */
#line 8092 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= 0;
          }
    break;

  case 1022:

/* Line 1455 of yacc.c  */
#line 8096 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= (yyvsp[(1) - (1)].num);
          }
    break;

  case 1023:

/* Line 1455 of yacc.c  */
#line 8103 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= (yyvsp[(1) - (1)].num);
          }
    break;

  case 1024:

/* Line 1455 of yacc.c  */
#line 8107 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= (yyvsp[(1) - (3)].num) | (yyvsp[(3) - (3)].num);
          }
    break;

  case 1025:

/* Line 1455 of yacc.c  */
#line 8114 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_WITH_CONS_SNAPSHOT;
          }
    break;

  case 1026:

/* Line 1455 of yacc.c  */
#line 8118 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_ONLY;
          }
    break;

  case 1027:

/* Line 1455 of yacc.c  */
#line 8122 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_WRITE;
          }
    break;

  case 1029:

/* Line 1455 of yacc.c  */
#line 8133 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            /* empty */
          }
    break;

  case 1030:

/* Line 1455 of yacc.c  */
#line 8137 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->slave_connection.user= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 1031:

/* Line 1455 of yacc.c  */
#line 8143 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            /* empty */
          }
    break;

  case 1032:

/* Line 1455 of yacc.c  */
#line 8147 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->slave_connection.password= (yyvsp[(3) - (3)].lex_str).str;
            Lex->contains_plaintext_password= true;
          }
    break;

  case 1033:

/* Line 1455 of yacc.c  */
#line 8153 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            /* empty */
          }
    break;

  case 1034:

/* Line 1455 of yacc.c  */
#line 8157 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->slave_connection.plugin_auth= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 1035:

/* Line 1455 of yacc.c  */
#line 8163 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            /* empty */
          }
    break;

  case 1036:

/* Line 1455 of yacc.c  */
#line 8167 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->slave_connection.plugin_dir= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 1037:

/* Line 1455 of yacc.c  */
#line 8174 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= 0;
          }
    break;

  case 1038:

/* Line 1455 of yacc.c  */
#line 8178 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= (yyvsp[(1) - (1)].num);
          }
    break;

  case 1039:

/* Line 1455 of yacc.c  */
#line 8185 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= (yyvsp[(1) - (1)].num);
          }
    break;

  case 1040:

/* Line 1455 of yacc.c  */
#line 8189 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= (yyvsp[(1) - (3)].num) | (yyvsp[(3) - (3)].num);
          }
    break;

  case 1041:

/* Line 1455 of yacc.c  */
#line 8196 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= SLAVE_SQL;
          }
    break;

  case 1042:

/* Line 1455 of yacc.c  */
#line 8200 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= SLAVE_IO;
          }
    break;

  case 1043:

/* Line 1455 of yacc.c  */
#line 8206 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1044:

/* Line 1455 of yacc.c  */
#line 8208 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (((lex->mi.log_file_name || lex->mi.pos) &&
                lex->mi.gtid) ||
               ((lex->mi.relay_log_name || lex->mi.relay_log_pos) &&
                lex->mi.gtid) ||
                !((lex->mi.log_file_name && lex->mi.pos) ||
                  (lex->mi.relay_log_name && lex->mi.relay_log_pos) ||
                  lex->mi.gtid ||
                  lex->mi.until_after_gaps) ||
                /* SQL_AFTER_MTS_GAPS is meaningless in combination */
                /* with any other coordinates related options       */
                ((lex->mi.log_file_name || lex->mi.pos || lex->mi.relay_log_name
                  || lex->mi.relay_log_pos || lex->mi.gtid)
                 && lex->mi.until_after_gaps))
            {
               my_message(ER_BAD_SLAVE_UNTIL_COND,
                          ER(ER_BAD_SLAVE_UNTIL_COND), MYF(0));
               MYSQL_YYABORT;
            }
          }
    break;

  case 1047:

/* Line 1455 of yacc.c  */
#line 8235 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.gtid= (yyvsp[(3) - (3)].lex_str).str;
            Lex->mi.gtid_until_condition= LEX_MASTER_INFO::UNTIL_SQL_BEFORE_GTIDS;
          }
    break;

  case 1048:

/* Line 1455 of yacc.c  */
#line 8240 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.gtid= (yyvsp[(3) - (3)].lex_str).str;
            Lex->mi.gtid_until_condition= LEX_MASTER_INFO::UNTIL_SQL_AFTER_GTIDS;
          }
    break;

  case 1049:

/* Line 1455 of yacc.c  */
#line 8245 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->mi.until_after_gaps= true;
          }
    break;

  case 1050:

/* Line 1455 of yacc.c  */
#line 8252 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_CHECKSUM;
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
    break;

  case 1051:

/* Line 1455 of yacc.c  */
#line 8259 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1052:

/* Line 1455 of yacc.c  */
#line 8263 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.flags= 0; }
    break;

  case 1053:

/* Line 1455 of yacc.c  */
#line 8264 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.flags= T_QUICK; }
    break;

  case 1054:

/* Line 1455 of yacc.c  */
#line 8265 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.flags= T_EXTEND; }
    break;

  case 1055:

/* Line 1455 of yacc.c  */
#line 8270 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_REPAIR;
            lex->no_write_to_binlog= (yyvsp[(2) - (3)].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
    break;

  case 1056:

/* Line 1455 of yacc.c  */
#line 8280 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_repair_table();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1057:

/* Line 1455 of yacc.c  */
#line 8291 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.flags = T_MEDIUM; }
    break;

  case 1058:

/* Line 1455 of yacc.c  */
#line 8292 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1059:

/* Line 1455 of yacc.c  */
#line 8296 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1060:

/* Line 1455 of yacc.c  */
#line 8297 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1061:

/* Line 1455 of yacc.c  */
#line 8301 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.flags|= T_QUICK; }
    break;

  case 1062:

/* Line 1455 of yacc.c  */
#line 8302 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.flags|= T_EXTEND; }
    break;

  case 1063:

/* Line 1455 of yacc.c  */
#line 8303 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.sql_flags|= TT_USEFRM; }
    break;

  case 1064:

/* Line 1455 of yacc.c  */
#line 8308 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_ANALYZE;
            lex->no_write_to_binlog= (yyvsp[(2) - (3)].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
    break;

  case 1065:

/* Line 1455 of yacc.c  */
#line 8318 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_analyze_table();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1066:

/* Line 1455 of yacc.c  */
#line 8330 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_BINLOG_BASE64_EVENT;
            Lex->comment= (yyvsp[(2) - (2)].lex_str);
          }
    break;

  case 1067:

/* Line 1455 of yacc.c  */
#line 8338 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "CHECK");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CHECK;
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
    break;

  case 1068:

/* Line 1455 of yacc.c  */
#line 8353 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_check_table();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1069:

/* Line 1455 of yacc.c  */
#line 8364 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.flags = T_MEDIUM; }
    break;

  case 1070:

/* Line 1455 of yacc.c  */
#line 8365 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1071:

/* Line 1455 of yacc.c  */
#line 8369 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1072:

/* Line 1455 of yacc.c  */
#line 8370 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1073:

/* Line 1455 of yacc.c  */
#line 8374 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.flags|= T_QUICK; }
    break;

  case 1074:

/* Line 1455 of yacc.c  */
#line 8375 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.flags|= T_FAST; }
    break;

  case 1075:

/* Line 1455 of yacc.c  */
#line 8376 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.flags|= T_MEDIUM; }
    break;

  case 1076:

/* Line 1455 of yacc.c  */
#line 8377 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.flags|= T_EXTEND; }
    break;

  case 1077:

/* Line 1455 of yacc.c  */
#line 8378 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.flags|= T_CHECK_ONLY_CHANGED; }
    break;

  case 1078:

/* Line 1455 of yacc.c  */
#line 8379 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->check_opt.sql_flags|= TT_FOR_UPGRADE; }
    break;

  case 1079:

/* Line 1455 of yacc.c  */
#line 8384 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_OPTIMIZE;
            lex->no_write_to_binlog= (yyvsp[(2) - (3)].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
    break;

  case 1080:

/* Line 1455 of yacc.c  */
#line 8394 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_optimize_table();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1081:

/* Line 1455 of yacc.c  */
#line 8405 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 1082:

/* Line 1455 of yacc.c  */
#line 8406 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1083:

/* Line 1455 of yacc.c  */
#line 8407 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1084:

/* Line 1455 of yacc.c  */
#line 8412 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_RENAME_TABLE;
          }
    break;

  case 1085:

/* Line 1455 of yacc.c  */
#line 8416 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1086:

/* Line 1455 of yacc.c  */
#line 8418 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_RENAME_USER;
          }
    break;

  case 1087:

/* Line 1455 of yacc.c  */
#line 8425 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(1) - (3)].lex_user)) || Lex->users_list.push_back((yyvsp[(3) - (3)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 1088:

/* Line 1455 of yacc.c  */
#line 8430 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(3) - (5)].lex_user)) || Lex->users_list.push_back((yyvsp[(5) - (5)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 1091:

/* Line 1455 of yacc.c  */
#line 8443 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            SELECT_LEX *sl= lex->current_select;
            if (!sl->add_table_to_list(lex->thd, (yyvsp[(1) - (3)].table),NULL,TL_OPTION_UPDATING,
                                       TL_IGNORE, MDL_EXCLUSIVE) ||
                !sl->add_table_to_list(lex->thd, (yyvsp[(3) - (3)].table),NULL,TL_OPTION_UPDATING,
                                       TL_IGNORE, MDL_EXCLUSIVE))
              MYSQL_YYABORT;
          }
    break;

  case 1092:

/* Line 1455 of yacc.c  */
#line 8456 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.reset();
          }
    break;

  case 1093:

/* Line 1455 of yacc.c  */
#line 8460 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ASSIGN_TO_KEYCACHE;
            lex->ident= (yyvsp[(6) - (6)].lex_str);
          }
    break;

  case 1098:

/* Line 1455 of yacc.c  */
#line 8479 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (2)].table), NULL, 0, TL_READ,
                                           MDL_SHARED_READ,
                                           Select->pop_index_hints()))
              MYSQL_YYABORT;
          }
    break;

  case 1099:

/* Line 1455 of yacc.c  */
#line 8489 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (3)].table), NULL, 0, TL_READ, 
                                           MDL_SHARED_READ,
                                           Select->pop_index_hints()))
              MYSQL_YYABORT;
          }
    break;

  case 1100:

/* Line 1455 of yacc.c  */
#line 8498 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str); }
    break;

  case 1101:

/* Line 1455 of yacc.c  */
#line 8499 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str) = default_key_cache_base; }
    break;

  case 1102:

/* Line 1455 of yacc.c  */
#line 8504 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_PRELOAD_KEYS;
            lex->alter_info.reset();
          }
    break;

  case 1103:

/* Line 1455 of yacc.c  */
#line 8510 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1108:

/* Line 1455 of yacc.c  */
#line 8525 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (3)].table), NULL, (yyvsp[(3) - (3)].num), TL_READ,
                                           MDL_SHARED_READ,
                                           Select->pop_index_hints()))
              MYSQL_YYABORT;
          }
    break;

  case 1109:

/* Line 1455 of yacc.c  */
#line 8535 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (4)].table), NULL, (yyvsp[(4) - (4)].num), TL_READ,
                                           MDL_SHARED_READ,
                                           Select->pop_index_hints()))
              MYSQL_YYABORT;
          }
    break;

  case 1110:

/* Line 1455 of yacc.c  */
#line 8545 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= Alter_info::ALTER_ADMIN_PARTITION;
          }
    break;

  case 1112:

/* Line 1455 of yacc.c  */
#line 8552 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->select_lex.alloc_index_hints(YYTHD);
            Select->set_index_hint_type(INDEX_HINT_USE, 
                                        old_mode ? 
                                        INDEX_HINT_MASK_JOIN : 
                                        INDEX_HINT_MASK_ALL);
          }
    break;

  case 1114:

/* Line 1455 of yacc.c  */
#line 8563 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { }
    break;

  case 1116:

/* Line 1455 of yacc.c  */
#line 8569 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 1117:

/* Line 1455 of yacc.c  */
#line 8570 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TL_OPTION_IGNORE_LEAVES; }
    break;

  case 1118:

/* Line 1455 of yacc.c  */
#line 8580 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SELECT;
          }
    break;

  case 1121:

/* Line 1455 of yacc.c  */
#line 8594 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (setup_select_in_parentheses(Lex))
              MYSQL_YYABORT;
          }
    break;

  case 1123:

/* Line 1455 of yacc.c  */
#line 8604 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (setup_select_in_parentheses(Lex))
              MYSQL_YYABORT;
          }
    break;

  case 1125:

/* Line 1455 of yacc.c  */
#line 8613 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            SELECT_LEX * sel= lex->current_select;
            if (lex->current_select->set_braces(0))
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            if (sel->linkage == UNION_TYPE &&
                sel->master_unit()->first_select()->braces)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
          }
    break;

  case 1127:

/* Line 1455 of yacc.c  */
#line 8632 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            SELECT_LEX *sel= lex->current_select;
            if (sel->linkage != UNION_TYPE)
              mysql_init_select(lex);
            lex->current_select->parsing_place= SELECT_LIST;
          }
    break;

  case 1128:

/* Line 1455 of yacc.c  */
#line 8640 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Select->parsing_place= NO_MATTER;
          }
    break;

  case 1130:

/* Line 1455 of yacc.c  */
#line 8647 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1135:

/* Line 1455 of yacc.c  */
#line 8657 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Select->context.table_list=
              Select->context.first_name_resolution_table=
                Select->table_list.first;
          }
    break;

  case 1138:

/* Line 1455 of yacc.c  */
#line 8672 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (Select->options & SELECT_DISTINCT && Select->options & SELECT_ALL)
            {
              my_error(ER_WRONG_USAGE, MYF(0), "ALL", "DISTINCT");
              MYSQL_YYABORT;
            }
          }
    break;

  case 1142:

/* Line 1455 of yacc.c  */
#line 8689 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            /* 
              Allow this flag only on the first top-level SELECT statement, if
              SQL_CACHE wasn't specified, and only once per query.
             */
            if (Lex->current_select != &Lex->select_lex)
            {
              my_error(ER_CANT_USE_OPTION_HERE, MYF(0), "SQL_NO_CACHE");
              MYSQL_YYABORT;
            }
            else if (Lex->select_lex.sql_cache == SELECT_LEX::SQL_CACHE)
            {
              my_error(ER_WRONG_USAGE, MYF(0), "SQL_CACHE", "SQL_NO_CACHE");
              MYSQL_YYABORT;
            }
            else if (Lex->select_lex.sql_cache == SELECT_LEX::SQL_NO_CACHE)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "SQL_NO_CACHE");
              MYSQL_YYABORT;
            }
            else
            {
              Lex->safe_to_cache_query=0;
              Lex->select_lex.options&= ~OPTION_TO_QUERY_CACHE;
              Lex->select_lex.sql_cache= SELECT_LEX::SQL_NO_CACHE;
            }
          }
    break;

  case 1143:

/* Line 1455 of yacc.c  */
#line 8717 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            /* 
              Allow this flag only on the first top-level SELECT statement, if
              SQL_NO_CACHE wasn't specified, and only once per query.
             */
            if (Lex->current_select != &Lex->select_lex)
            {
              my_error(ER_CANT_USE_OPTION_HERE, MYF(0), "SQL_CACHE");
              MYSQL_YYABORT;
            }         
            else if (Lex->select_lex.sql_cache == SELECT_LEX::SQL_NO_CACHE)
            {
              my_error(ER_WRONG_USAGE, MYF(0), "SQL_NO_CACHE", "SQL_CACHE");
              MYSQL_YYABORT;
            }
            else if (Lex->select_lex.sql_cache == SELECT_LEX::SQL_CACHE)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "SQL_CACHE");
              MYSQL_YYABORT;
            }
            else
            {
              Lex->safe_to_cache_query=1;
              Lex->select_lex.options|= OPTION_TO_QUERY_CACHE;
              Lex->select_lex.sql_cache= SELECT_LEX::SQL_CACHE;
            }
          }
    break;

  case 1145:

/* Line 1455 of yacc.c  */
#line 8749 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->current_select->set_lock_for_tables(TL_WRITE);
            lex->safe_to_cache_query=0;
          }
    break;

  case 1146:

/* Line 1455 of yacc.c  */
#line 8755 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->current_select->
              set_lock_for_tables(TL_READ_WITH_SHARED_LOCKS);
            lex->safe_to_cache_query=0;
          }
    break;

  case 1149:

/* Line 1455 of yacc.c  */
#line 8767 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            Item *item= new (thd->mem_root)
                          Item_field(&thd->lex->current_select->context,
                                     NULL, NULL, "*");
            if (item == NULL)
              MYSQL_YYABORT;
            if (add_item_to_list(thd, item))
              MYSQL_YYABORT;
            (thd->lex->current_select->with_wild)++;
          }
    break;

  case 1150:

/* Line 1455 of yacc.c  */
#line 8782 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;

            if (add_item_to_list(thd, (yyvsp[(2) - (3)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1151:

/* Line 1455 of yacc.c  */
#line 8789 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            DBUG_ASSERT((yyvsp[(1) - (4)].simple_string) < (yyvsp[(3) - (4)].simple_string));

            if (add_item_to_list(thd, (yyvsp[(2) - (4)].item)))
              MYSQL_YYABORT;
            if ((yyvsp[(4) - (4)].lex_str).str)
            {
              if (Lex->sql_command == SQLCOM_CREATE_VIEW &&
                  check_column_name((yyvsp[(4) - (4)].lex_str).str))
              {
                my_error(ER_WRONG_COLUMN_NAME, MYF(0), (yyvsp[(4) - (4)].lex_str).str);
                MYSQL_YYABORT;
              }
              (yyvsp[(2) - (4)].item)->item_name.copy((yyvsp[(4) - (4)].lex_str).str, (yyvsp[(4) - (4)].lex_str).length, system_charset_info, false);
            }
            else if (!(yyvsp[(2) - (4)].item)->item_name.is_set())
            {
              (yyvsp[(2) - (4)].item)->item_name.copy((yyvsp[(1) - (4)].simple_string), (uint) ((yyvsp[(3) - (4)].simple_string) - (yyvsp[(1) - (4)].simple_string)), thd->charset());
            }
          }
    break;

  case 1152:

/* Line 1455 of yacc.c  */
#line 8813 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.simple_string)= (char*) YYLIP->get_cpp_tok_start();
          }
    break;

  case 1153:

/* Line 1455 of yacc.c  */
#line 8819 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.simple_string)= (char*) YYLIP->get_cpp_tok_end();
          }
    break;

  case 1154:

/* Line 1455 of yacc.c  */
#line 8825 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=null_lex_str;}
    break;

  case 1155:

/* Line 1455 of yacc.c  */
#line 8826 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(2) - (2)].lex_str); }
    break;

  case 1156:

/* Line 1455 of yacc.c  */
#line 8827 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(2) - (2)].lex_str); }
    break;

  case 1157:

/* Line 1455 of yacc.c  */
#line 8828 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str); }
    break;

  case 1158:

/* Line 1455 of yacc.c  */
#line 8829 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str); }
    break;

  case 1159:

/* Line 1455 of yacc.c  */
#line 8833 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1160:

/* Line 1455 of yacc.c  */
#line 8834 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1161:

/* Line 1455 of yacc.c  */
#line 8840 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            /*
              Design notes:
              Do not use a manually maintained stack like thd->lex->xxx_list,
              but use the internal bison stack ($$, $1 and $3) instead.
              Using the bison stack is:
              - more robust to changes in the grammar,
              - guaranteed to be in sync with the parser state,
              - better for performances (no memory allocation).
            */
            Item_cond_or *item1;
            Item_cond_or *item3;
            if (is_cond_or((yyvsp[(1) - (3)].item)))
            {
              item1= (Item_cond_or*) (yyvsp[(1) - (3)].item);
              if (is_cond_or((yyvsp[(3) - (3)].item)))
              {
                item3= (Item_cond_or*) (yyvsp[(3) - (3)].item);
                /*
                  (X1 OR X2) OR (Y1 OR Y2) ==> OR (X1, X2, Y1, Y2)
                */
                item3->add_at_head(item1->argument_list());
                (yyval.item) = (yyvsp[(3) - (3)].item);
              }
              else
              {
                /*
                  (X1 OR X2) OR Y ==> OR (X1, X2, Y)
                */
                item1->add((yyvsp[(3) - (3)].item));
                (yyval.item) = (yyvsp[(1) - (3)].item);
              }
            }
            else if (is_cond_or((yyvsp[(3) - (3)].item)))
            {
              item3= (Item_cond_or*) (yyvsp[(3) - (3)].item);
              /*
                X OR (Y1 OR Y2) ==> OR (X, Y1, Y2)
              */
              item3->add_at_head((yyvsp[(1) - (3)].item));
              (yyval.item) = (yyvsp[(3) - (3)].item);
            }
            else
            {
              /* X OR Y */
              (yyval.item) = new (YYTHD->mem_root) Item_cond_or((yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
              if ((yyval.item) == NULL)
                MYSQL_YYABORT;
            }
          }
    break;

  case 1162:

/* Line 1455 of yacc.c  */
#line 8891 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            /* XOR is a proprietary extension */
            (yyval.item) = new (YYTHD->mem_root) Item_func_xor((yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1163:

/* Line 1455 of yacc.c  */
#line 8898 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            /* See comments in rule expr: expr or expr */
            Item_cond_and *item1;
            Item_cond_and *item3;
            if (is_cond_and((yyvsp[(1) - (3)].item)))
            {
              item1= (Item_cond_and*) (yyvsp[(1) - (3)].item);
              if (is_cond_and((yyvsp[(3) - (3)].item)))
              {
                item3= (Item_cond_and*) (yyvsp[(3) - (3)].item);
                /*
                  (X1 AND X2) AND (Y1 AND Y2) ==> AND (X1, X2, Y1, Y2)
                */
                item3->add_at_head(item1->argument_list());
                (yyval.item) = (yyvsp[(3) - (3)].item);
              }
              else
              {
                /*
                  (X1 AND X2) AND Y ==> AND (X1, X2, Y)
                */
                item1->add((yyvsp[(3) - (3)].item));
                (yyval.item) = (yyvsp[(1) - (3)].item);
              }
            }
            else if (is_cond_and((yyvsp[(3) - (3)].item)))
            {
              item3= (Item_cond_and*) (yyvsp[(3) - (3)].item);
              /*
                X AND (Y1 AND Y2) ==> AND (X, Y1, Y2)
              */
              item3->add_at_head((yyvsp[(1) - (3)].item));
              (yyval.item) = (yyvsp[(3) - (3)].item);
            }
            else
            {
              /* X AND Y */
              (yyval.item) = new (YYTHD->mem_root) Item_cond_and((yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
              if ((yyval.item) == NULL)
                MYSQL_YYABORT;
            }
          }
    break;

  case 1164:

/* Line 1455 of yacc.c  */
#line 8941 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= negate_expression(YYTHD, (yyvsp[(2) - (2)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1165:

/* Line 1455 of yacc.c  */
#line 8947 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_istrue((yyvsp[(1) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1166:

/* Line 1455 of yacc.c  */
#line 8953 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_isnottrue((yyvsp[(1) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1167:

/* Line 1455 of yacc.c  */
#line 8959 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_isfalse((yyvsp[(1) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1168:

/* Line 1455 of yacc.c  */
#line 8965 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_isnotfalse((yyvsp[(1) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1169:

/* Line 1455 of yacc.c  */
#line 8971 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_isnull((yyvsp[(1) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1170:

/* Line 1455 of yacc.c  */
#line 8977 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_isnotnull((yyvsp[(1) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1172:

/* Line 1455 of yacc.c  */
#line 8987 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_isnull((yyvsp[(1) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1173:

/* Line 1455 of yacc.c  */
#line 8993 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_isnotnull((yyvsp[(1) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1174:

/* Line 1455 of yacc.c  */
#line 8999 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_equal((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1175:

/* Line 1455 of yacc.c  */
#line 9005 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= (*(yyvsp[(2) - (3)].boolfunc2creator))(0)->create((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1176:

/* Line 1455 of yacc.c  */
#line 9011 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= all_any_subquery_creator((yyvsp[(1) - (6)].item), (yyvsp[(2) - (6)].boolfunc2creator), (yyvsp[(3) - (6)].num), (yyvsp[(5) - (6)].select_lex));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1178:

/* Line 1455 of yacc.c  */
#line 9021 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_in_subselect((yyvsp[(1) - (5)].item), (yyvsp[(4) - (5)].select_lex));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1179:

/* Line 1455 of yacc.c  */
#line 9027 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            Item *item= new (thd->mem_root) Item_in_subselect((yyvsp[(1) - (6)].item), (yyvsp[(5) - (6)].select_lex));
            if (item == NULL)
              MYSQL_YYABORT;
            (yyval.item)= negate_expression(thd, item);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1180:

/* Line 1455 of yacc.c  */
#line 9037 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= handle_sql2003_note184_exception(YYTHD, (yyvsp[(1) - (5)].item), true, (yyvsp[(4) - (5)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1181:

/* Line 1455 of yacc.c  */
#line 9043 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { 
            (yyvsp[(6) - (7)].item_list)->push_front((yyvsp[(4) - (7)].item));
            (yyvsp[(6) - (7)].item_list)->push_front((yyvsp[(1) - (7)].item));
            (yyval.item)= new (YYTHD->mem_root) Item_func_in(*(yyvsp[(6) - (7)].item_list));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1182:

/* Line 1455 of yacc.c  */
#line 9051 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= handle_sql2003_note184_exception(YYTHD, (yyvsp[(1) - (6)].item), false, (yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1183:

/* Line 1455 of yacc.c  */
#line 9057 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(7) - (8)].item_list)->push_front((yyvsp[(5) - (8)].item));
            (yyvsp[(7) - (8)].item_list)->push_front((yyvsp[(1) - (8)].item));
            Item_func_in *item = new (YYTHD->mem_root) Item_func_in(*(yyvsp[(7) - (8)].item_list));
            if (item == NULL)
              MYSQL_YYABORT;
            item->negate();
            (yyval.item)= item;
          }
    break;

  case 1184:

/* Line 1455 of yacc.c  */
#line 9067 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_between((yyvsp[(1) - (5)].item),(yyvsp[(3) - (5)].item),(yyvsp[(5) - (5)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1185:

/* Line 1455 of yacc.c  */
#line 9073 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Item_func_between *item;
            item= new (YYTHD->mem_root) Item_func_between((yyvsp[(1) - (6)].item),(yyvsp[(4) - (6)].item),(yyvsp[(6) - (6)].item));
            if (item == NULL)
              MYSQL_YYABORT;
            item->negate();
            (yyval.item)= item;
          }
    break;

  case 1186:

/* Line 1455 of yacc.c  */
#line 9082 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Item *item1= new (YYTHD->mem_root) Item_func_soundex((yyvsp[(1) - (4)].item));
            Item *item4= new (YYTHD->mem_root) Item_func_soundex((yyvsp[(4) - (4)].item));
            if ((item1 == NULL) || (item4 == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (YYTHD->mem_root) Item_func_eq(item1, item4);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1187:

/* Line 1455 of yacc.c  */
#line 9092 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_like((yyvsp[(1) - (4)].item),(yyvsp[(3) - (4)].item),(yyvsp[(4) - (4)].item),Lex->escape_used);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1188:

/* Line 1455 of yacc.c  */
#line 9098 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Item *item= new (YYTHD->mem_root) Item_func_like((yyvsp[(1) - (5)].item),(yyvsp[(4) - (5)].item),(yyvsp[(5) - (5)].item),
                                                             Lex->escape_used);
            if (item == NULL)
              MYSQL_YYABORT;
            (yyval.item)= new (YYTHD->mem_root) Item_func_not(item);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1189:

/* Line 1455 of yacc.c  */
#line 9108 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_regex((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1190:

/* Line 1455 of yacc.c  */
#line 9114 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Item *item= new (YYTHD->mem_root) Item_func_regex((yyvsp[(1) - (4)].item),(yyvsp[(4) - (4)].item));
            if (item == NULL)
              MYSQL_YYABORT;
            (yyval.item)= negate_expression(YYTHD, item);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1192:

/* Line 1455 of yacc.c  */
#line 9127 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_bit_or((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1193:

/* Line 1455 of yacc.c  */
#line 9133 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_bit_and((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1194:

/* Line 1455 of yacc.c  */
#line 9139 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_shift_left((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1195:

/* Line 1455 of yacc.c  */
#line 9145 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_shift_right((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1196:

/* Line 1455 of yacc.c  */
#line 9151 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_plus((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1197:

/* Line 1455 of yacc.c  */
#line 9157 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_minus((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1198:

/* Line 1455 of yacc.c  */
#line 9163 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[(1) - (5)].item),(yyvsp[(4) - (5)].item),(yyvsp[(5) - (5)].interval),0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1199:

/* Line 1455 of yacc.c  */
#line 9169 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[(1) - (5)].item),(yyvsp[(4) - (5)].item),(yyvsp[(5) - (5)].interval),1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1200:

/* Line 1455 of yacc.c  */
#line 9175 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_mul((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1201:

/* Line 1455 of yacc.c  */
#line 9181 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_div((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1202:

/* Line 1455 of yacc.c  */
#line 9187 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_mod((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1203:

/* Line 1455 of yacc.c  */
#line 9193 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_int_div((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1204:

/* Line 1455 of yacc.c  */
#line 9199 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_mod((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1205:

/* Line 1455 of yacc.c  */
#line 9205 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_bit_xor((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1215:

/* Line 1455 of yacc.c  */
#line 9234 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_eq_creator; }
    break;

  case 1216:

/* Line 1455 of yacc.c  */
#line 9235 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_ge_creator; }
    break;

  case 1217:

/* Line 1455 of yacc.c  */
#line 9236 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_gt_creator; }
    break;

  case 1218:

/* Line 1455 of yacc.c  */
#line 9237 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_le_creator; }
    break;

  case 1219:

/* Line 1455 of yacc.c  */
#line 9238 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_lt_creator; }
    break;

  case 1220:

/* Line 1455 of yacc.c  */
#line 9239 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_ne_creator; }
    break;

  case 1221:

/* Line 1455 of yacc.c  */
#line 9243 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num) = 1; }
    break;

  case 1222:

/* Line 1455 of yacc.c  */
#line 9244 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num) = 0; }
    break;

  case 1228:

/* Line 1455 of yacc.c  */
#line 9254 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            Item *i1= new (thd->mem_root) Item_string((yyvsp[(3) - (3)].lex_str).str,
                                                      (yyvsp[(3) - (3)].lex_str).length,
                                                      thd->charset());
            if (i1 == NULL)
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_func_set_collation((yyvsp[(1) - (3)].item), i1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1233:

/* Line 1455 of yacc.c  */
#line 9270 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_concat((yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1234:

/* Line 1455 of yacc.c  */
#line 9276 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= (yyvsp[(2) - (2)].item);
          }
    break;

  case 1235:

/* Line 1455 of yacc.c  */
#line 9280 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_neg((yyvsp[(2) - (2)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1236:

/* Line 1455 of yacc.c  */
#line 9286 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_bit_neg((yyvsp[(2) - (2)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1237:

/* Line 1455 of yacc.c  */
#line 9292 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= negate_expression(YYTHD, (yyvsp[(2) - (2)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1238:

/* Line 1455 of yacc.c  */
#line 9298 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { 
            (yyval.item)= new (YYTHD->mem_root) Item_singlerow_subselect((yyvsp[(2) - (3)].select_lex));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1239:

/* Line 1455 of yacc.c  */
#line 9304 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(2) - (3)].item); }
    break;

  case 1240:

/* Line 1455 of yacc.c  */
#line 9306 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(4) - (5)].item_list)->push_front((yyvsp[(2) - (5)].item));
            (yyval.item)= new (YYTHD->mem_root) Item_row(*(yyvsp[(4) - (5)].item_list));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1241:

/* Line 1455 of yacc.c  */
#line 9313 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(5) - (6)].item_list)->push_front((yyvsp[(3) - (6)].item));
            (yyval.item)= new (YYTHD->mem_root) Item_row(*(yyvsp[(5) - (6)].item_list));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1242:

/* Line 1455 of yacc.c  */
#line 9320 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_exists_subselect((yyvsp[(3) - (4)].select_lex));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1243:

/* Line 1455 of yacc.c  */
#line 9326 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Item_string *item;
            (yyval.item)= NULL;
            /*
              If "expr" is reasonably short pure ASCII string literal,
              try to parse known ODBC style date, time or timestamp literals,
              e.g:
              SELECT {d'2001-01-01'};
              SELECT {t'10:20:30'};
              SELECT {ts'2001-01-01 10:20:30'};
            */
            if ((yyvsp[(3) - (4)].item)->type() == Item::STRING_ITEM &&
               (item= (Item_string *) (yyvsp[(3) - (4)].item)) &&
                item->collation.repertoire == MY_REPERTOIRE_ASCII &&
                item->str_value.length() < MAX_DATE_STRING_REP_LENGTH * 4)
            {
              enum_field_types type= MYSQL_TYPE_STRING;
              ErrConvString str(&item->str_value);
              LEX_STRING *ls= &(yyvsp[(2) - (4)].lex_str);
              if (ls->length == 1)
              {
                if (ls->str[0] == 'd')  /* {d'2001-01-01'} */
                  type= MYSQL_TYPE_DATE;
                else if (ls->str[0] == 't') /* {t'10:20:30'} */
                  type= MYSQL_TYPE_TIME;
              }
              else if (ls->length == 2) /* {ts'2001-01-01 10:20:30'} */
              {
                if (ls->str[0] == 't' && ls->str[1] == 's')
                  type= MYSQL_TYPE_DATETIME;
              }
              if (type != MYSQL_TYPE_STRING)
                (yyval.item)= create_temporal_literal(YYTHD,
                                            str.ptr(), str.length(),
                                            system_charset_info,
                                            type, false);
            }
            if ((yyval.item) == NULL)
              (yyval.item)= (yyvsp[(3) - (4)].item);
          }
    break;

  case 1244:

/* Line 1455 of yacc.c  */
#line 9367 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(2) - (7)].item_list)->push_front((yyvsp[(5) - (7)].item));
            Item_func_match *i1= new (YYTHD->mem_root) Item_func_match(*(yyvsp[(2) - (7)].item_list), (yyvsp[(6) - (7)].num));
            if (i1 == NULL)
              MYSQL_YYABORT;
            Select->add_ftfunc_to_list(i1);
            (yyval.item)= i1;
          }
    break;

  case 1245:

/* Line 1455 of yacc.c  */
#line 9376 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= create_func_cast(YYTHD, (yyvsp[(2) - (2)].item), ITEM_CAST_CHAR, NULL, NULL,
                                 &my_charset_bin);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1246:

/* Line 1455 of yacc.c  */
#line 9383 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            (yyval.item)= create_func_cast(YYTHD, (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].cast_type), lex->length, lex->dec,
                                 lex->charset);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1247:

/* Line 1455 of yacc.c  */
#line 9391 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_case(* (yyvsp[(3) - (5)].item_list), (yyvsp[(2) - (5)].item), (yyvsp[(4) - (5)].item) );
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1248:

/* Line 1455 of yacc.c  */
#line 9397 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= create_func_cast(YYTHD, (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].cast_type), Lex->length, Lex->dec,
                                 Lex->charset);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1249:

/* Line 1455 of yacc.c  */
#line 9404 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_conv_charset((yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].charset));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1250:

/* Line 1455 of yacc.c  */
#line 9410 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(3) - (4)].item)->is_splocal())
            {
              Item_splocal *il= static_cast<Item_splocal *>((yyvsp[(3) - (4)].item));

              my_error(ER_WRONG_COLUMN_NAME, MYF(0), il->m_name.ptr());
              MYSQL_YYABORT;
            }
            (yyval.item)= new (YYTHD->mem_root) Item_default_value(Lex->current_context(),
                                                         (yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1251:

/* Line 1455 of yacc.c  */
#line 9424 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_insert_value(Lex->current_context(),
                                                        (yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1252:

/* Line 1455 of yacc.c  */
#line 9432 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[(5) - (5)].item),(yyvsp[(2) - (5)].item),(yyvsp[(3) - (5)].interval),0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1253:

/* Line 1455 of yacc.c  */
#line 9447 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_char(*(yyvsp[(3) - (4)].item_list));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1254:

/* Line 1455 of yacc.c  */
#line 9453 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_char(*(yyvsp[(3) - (6)].item_list), (yyvsp[(5) - (6)].charset));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1255:

/* Line 1455 of yacc.c  */
#line 9459 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_current_user(Lex->current_context());
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query= 0;
          }
    break;

  case 1256:

/* Line 1455 of yacc.c  */
#line 9467 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_typecast((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1257:

/* Line 1455 of yacc.c  */
#line 9473 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_dayofmonth((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1258:

/* Line 1455 of yacc.c  */
#line 9479 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_hour((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1259:

/* Line 1455 of yacc.c  */
#line 9485 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_insert((yyvsp[(3) - (10)].item),(yyvsp[(5) - (10)].item),(yyvsp[(7) - (10)].item),(yyvsp[(9) - (10)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1260:

/* Line 1455 of yacc.c  */
#line 9491 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            List<Item> *list= new (thd->mem_root) List<Item>;
            if (list == NULL)
              MYSQL_YYABORT;
            list->push_front((yyvsp[(5) - (6)].item));
            list->push_front((yyvsp[(3) - (6)].item));
            Item_row *item= new (thd->mem_root) Item_row(*list);
            if (item == NULL)
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_func_interval(item);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1261:

/* Line 1455 of yacc.c  */
#line 9506 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            (yyvsp[(7) - (8)].item_list)->push_front((yyvsp[(5) - (8)].item));
            (yyvsp[(7) - (8)].item_list)->push_front((yyvsp[(3) - (8)].item));
            Item_row *item= new (thd->mem_root) Item_row(*(yyvsp[(7) - (8)].item_list));
            if (item == NULL)
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_func_interval(item);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1262:

/* Line 1455 of yacc.c  */
#line 9518 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_left((yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1263:

/* Line 1455 of yacc.c  */
#line 9524 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_minute((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1264:

/* Line 1455 of yacc.c  */
#line 9530 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_month((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1265:

/* Line 1455 of yacc.c  */
#line 9536 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_right((yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1266:

/* Line 1455 of yacc.c  */
#line 9542 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_second((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1267:

/* Line 1455 of yacc.c  */
#line 9548 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_time_typecast((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1268:

/* Line 1455 of yacc.c  */
#line 9554 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_datetime_typecast((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1269:

/* Line 1455 of yacc.c  */
#line 9560 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_add_time((yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item), 1, 0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1270:

/* Line 1455 of yacc.c  */
#line 9566 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_trim((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1271:

/* Line 1455 of yacc.c  */
#line 9572 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_ltrim((yyvsp[(6) - (7)].item),(yyvsp[(4) - (7)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1272:

/* Line 1455 of yacc.c  */
#line 9578 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_rtrim((yyvsp[(6) - (7)].item),(yyvsp[(4) - (7)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1273:

/* Line 1455 of yacc.c  */
#line 9584 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_trim((yyvsp[(6) - (7)].item),(yyvsp[(4) - (7)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1274:

/* Line 1455 of yacc.c  */
#line 9590 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_ltrim((yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1275:

/* Line 1455 of yacc.c  */
#line 9596 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_rtrim((yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1276:

/* Line 1455 of yacc.c  */
#line 9602 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_trim((yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1277:

/* Line 1455 of yacc.c  */
#line 9608 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_trim((yyvsp[(5) - (6)].item),(yyvsp[(3) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1278:

/* Line 1455 of yacc.c  */
#line 9614 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_user();
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query=0;
          }
    break;

  case 1279:

/* Line 1455 of yacc.c  */
#line 9622 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_year((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1280:

/* Line 1455 of yacc.c  */
#line 9643 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item),
                                                             INTERVAL_DAY, 0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1281:

/* Line 1455 of yacc.c  */
#line 9650 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[(3) - (8)].item), (yyvsp[(6) - (8)].item), (yyvsp[(7) - (8)].interval), 0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1282:

/* Line 1455 of yacc.c  */
#line 9656 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_curdate_local();
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
    break;

  case 1283:

/* Line 1455 of yacc.c  */
#line 9663 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_curtime_local((yyvsp[(2) - (2)].ulong_num));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
    break;

  case 1284:

/* Line 1455 of yacc.c  */
#line 9671 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[(3) - (8)].item),(yyvsp[(6) - (8)].item),(yyvsp[(7) - (8)].interval),0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1285:

/* Line 1455 of yacc.c  */
#line 9678 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[(3) - (8)].item),(yyvsp[(6) - (8)].item),(yyvsp[(7) - (8)].interval),1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1286:

/* Line 1455 of yacc.c  */
#line 9684 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)=new (YYTHD->mem_root) Item_extract( (yyvsp[(3) - (6)].interval), (yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1287:

/* Line 1455 of yacc.c  */
#line 9690 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_get_format((yyvsp[(3) - (6)].date_time_type), (yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1288:

/* Line 1455 of yacc.c  */
#line 9696 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= (yyvsp[(1) - (1)].item);
            Lex->safe_to_cache_query= 0;
          }
    break;

  case 1289:

/* Line 1455 of yacc.c  */
#line 9701 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item) = new (YYTHD->mem_root) Item_func_locate((yyvsp[(5) - (6)].item),(yyvsp[(3) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1290:

/* Line 1455 of yacc.c  */
#line 9707 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item),
                                                             INTERVAL_DAY, 1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1291:

/* Line 1455 of yacc.c  */
#line 9714 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[(3) - (8)].item), (yyvsp[(6) - (8)].item), (yyvsp[(7) - (8)].interval), 1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1292:

/* Line 1455 of yacc.c  */
#line 9720 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_substr((yyvsp[(3) - (8)].item),(yyvsp[(5) - (8)].item),(yyvsp[(7) - (8)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1293:

/* Line 1455 of yacc.c  */
#line 9726 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_substr((yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1294:

/* Line 1455 of yacc.c  */
#line 9732 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_substr((yyvsp[(3) - (8)].item),(yyvsp[(5) - (8)].item),(yyvsp[(7) - (8)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1295:

/* Line 1455 of yacc.c  */
#line 9738 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_substr((yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1296:

/* Line 1455 of yacc.c  */
#line 9744 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            /*
              Unlike other time-related functions, SYSDATE() is
              replication-unsafe because it is not affected by the
              TIMESTAMP variable.  It is unsafe even if
              sysdate_is_now=1, because the slave may have
              sysdate_is_now=0.
            */
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            if (global_system_variables.sysdate_is_now == 0)
              (yyval.item)= new (YYTHD->mem_root) Item_func_sysdate_local((yyvsp[(2) - (2)].ulong_num));
            else
              (yyval.item)= new (YYTHD->mem_root) Item_func_now_local((yyvsp[(2) - (2)].ulong_num));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
    break;

  case 1297:

/* Line 1455 of yacc.c  */
#line 9762 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[(7) - (8)].item),(yyvsp[(5) - (8)].item),(yyvsp[(3) - (8)].interval_time_st),0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1298:

/* Line 1455 of yacc.c  */
#line 9768 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_timestamp_diff((yyvsp[(5) - (8)].item),(yyvsp[(7) - (8)].item),(yyvsp[(3) - (8)].interval_time_st));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1299:

/* Line 1455 of yacc.c  */
#line 9774 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_curdate_utc();
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
    break;

  case 1300:

/* Line 1455 of yacc.c  */
#line 9781 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_curtime_utc((yyvsp[(2) - (2)].ulong_num));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
    break;

  case 1301:

/* Line 1455 of yacc.c  */
#line 9788 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_now_utc((yyvsp[(2) - (2)].ulong_num));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
    break;

  case 1302:

/* Line 1455 of yacc.c  */
#line 9803 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_ascii((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1303:

/* Line 1455 of yacc.c  */
#line 9809 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_charset((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1304:

/* Line 1455 of yacc.c  */
#line 9815 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_coalesce(* (yyvsp[(3) - (4)].item_list));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1305:

/* Line 1455 of yacc.c  */
#line 9821 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_collation((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1306:

/* Line 1455 of yacc.c  */
#line 9827 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_database();
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
    break;

  case 1307:

/* Line 1455 of yacc.c  */
#line 9834 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_if((yyvsp[(3) - (8)].item),(yyvsp[(5) - (8)].item),(yyvsp[(7) - (8)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1308:

/* Line 1455 of yacc.c  */
#line 9840 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_format((yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1309:

/* Line 1455 of yacc.c  */
#line 9846 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_format((yyvsp[(3) - (8)].item), (yyvsp[(5) - (8)].item), (yyvsp[(7) - (8)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1310:

/* Line 1455 of yacc.c  */
#line 9852 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_microsecond((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1311:

/* Line 1455 of yacc.c  */
#line 9858 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item) = new (YYTHD->mem_root) Item_func_mod((yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1312:

/* Line 1455 of yacc.c  */
#line 9864 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)=  new (YYTHD->mem_root) Item_func_old_password((yyvsp[(3) - (4)].item));
            Lex->contains_plaintext_password= true;
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1313:

/* Line 1455 of yacc.c  */
#line 9871 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            Item* i1;
            Lex->contains_plaintext_password= true;
            if (thd->variables.old_passwords == 1)
              i1= new (thd->mem_root) Item_func_old_password((yyvsp[(3) - (4)].item));
            else
              i1= new (thd->mem_root) Item_func_password((yyvsp[(3) - (4)].item));
            if (i1 == NULL)
              MYSQL_YYABORT;
            (yyval.item)= i1;
          }
    break;

  case 1314:

/* Line 1455 of yacc.c  */
#line 9884 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item) = new (YYTHD->mem_root) Item_func_quarter((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1315:

/* Line 1455 of yacc.c  */
#line 9890 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_repeat((yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1316:

/* Line 1455 of yacc.c  */
#line 9896 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_replace((yyvsp[(3) - (8)].item),(yyvsp[(5) - (8)].item),(yyvsp[(7) - (8)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1317:

/* Line 1455 of yacc.c  */
#line 9902 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_reverse((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1318:

/* Line 1455 of yacc.c  */
#line 9908 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_row_count();
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query= 0;
          }
    break;

  case 1319:

/* Line 1455 of yacc.c  */
#line 9916 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_round((yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item),1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1320:

/* Line 1455 of yacc.c  */
#line 9922 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            Item *i1= new (thd->mem_root) Item_int(NAME_STRING("0"),
                                           thd->variables.default_week_format,
                                                   1);
            if (i1 == NULL)
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_func_week((yyvsp[(3) - (4)].item), i1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1321:

/* Line 1455 of yacc.c  */
#line 9934 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_week((yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1322:

/* Line 1455 of yacc.c  */
#line 9940 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_weight_string((yyvsp[(3) - (5)].item), 0, 0, (yyvsp[(4) - (5)].ulong_num));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1323:

/* Line 1455 of yacc.c  */
#line 9946 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root)
                Item_func_weight_string((yyvsp[(3) - (8)].item), 0, (yyvsp[(6) - (8)].ulong_num),
                                        (yyvsp[(7) - (8)].ulong_num) | MY_STRXFRM_PAD_WITH_SPACE);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1324:

/* Line 1455 of yacc.c  */
#line 9954 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Item *item= new (YYTHD->mem_root) Item_char_typecast((yyvsp[(3) - (7)].item), (yyvsp[(6) - (7)].ulong_num), &my_charset_bin);
            if (item == NULL)
              MYSQL_YYABORT;
            (yyval.item)= new (YYTHD->mem_root)
                Item_func_weight_string(item, 0, (yyvsp[(6) - (7)].ulong_num), MY_STRXFRM_PAD_WITH_SPACE);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1325:

/* Line 1455 of yacc.c  */
#line 9964 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_weight_string((yyvsp[(3) - (10)].item), (yyvsp[(5) - (10)].ulong_num), (yyvsp[(7) - (10)].ulong_num), (yyvsp[(9) - (10)].ulong_num));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1326:

/* Line 1455 of yacc.c  */
#line 9970 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
#ifdef HAVE_SPATIAL
            (yyval.item)= (yyvsp[(1) - (1)].item);
            /* $1 may be NULL, GEOM_NEW not tested for out of memory */
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
#else
            my_error(ER_FEATURE_DISABLED, MYF(0),
                     sym_group_geom.name, sym_group_geom.needed_define);
            MYSQL_YYABORT;
#endif
          }
    break;

  case 1327:

/* Line 1455 of yacc.c  */
#line 9986 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= GEOM_NEW(YYTHD,
                         Item_func_spatial_mbr_rel((yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item),
                                               Item_func::SP_CONTAINS_FUNC));
          }
    break;

  case 1328:

/* Line 1455 of yacc.c  */
#line 9992 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= GEOM_NEW(YYTHD,
                         Item_func_spatial_collection(* (yyvsp[(3) - (4)].item_list),
                           Geometry::wkb_geometrycollection,
                           Geometry::wkb_point));
          }
    break;

  case 1329:

/* Line 1455 of yacc.c  */
#line 9999 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= GEOM_NEW(YYTHD,
                         Item_func_spatial_collection(* (yyvsp[(3) - (4)].item_list),
                           Geometry::wkb_linestring,
                           Geometry::wkb_point));
          }
    break;

  case 1330:

/* Line 1455 of yacc.c  */
#line 10006 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= GEOM_NEW(YYTHD,
                         Item_func_spatial_collection(* (yyvsp[(3) - (4)].item_list),
                           Geometry::wkb_multilinestring,
                           Geometry::wkb_linestring));
          }
    break;

  case 1331:

/* Line 1455 of yacc.c  */
#line 10013 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= GEOM_NEW(YYTHD,
                         Item_func_spatial_collection(* (yyvsp[(3) - (4)].item_list),
                           Geometry::wkb_multipoint,
                           Geometry::wkb_point));
          }
    break;

  case 1332:

/* Line 1455 of yacc.c  */
#line 10020 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= GEOM_NEW(YYTHD,
                         Item_func_spatial_collection(* (yyvsp[(3) - (4)].item_list),
                           Geometry::wkb_multipolygon,
                           Geometry::wkb_polygon));
          }
    break;

  case 1333:

/* Line 1455 of yacc.c  */
#line 10027 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= GEOM_NEW(YYTHD, Item_func_point((yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item)));
          }
    break;

  case 1334:

/* Line 1455 of yacc.c  */
#line 10031 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= GEOM_NEW(YYTHD,
                         Item_func_spatial_collection(* (yyvsp[(3) - (4)].item_list),
                           Geometry::wkb_polygon,
                           Geometry::wkb_linestring));
          }
    break;

  case 1335:

/* Line 1455 of yacc.c  */
#line 10050 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
#ifdef HAVE_DLOPEN
            udf_func *udf= 0;
            LEX *lex= Lex;
            if (using_udf_functions &&
                (udf= find_udf((yyvsp[(1) - (2)].lex_str).str, (yyvsp[(1) - (2)].lex_str).length)) &&
                udf->type == UDFTYPE_AGGREGATE)
            {
              if (lex->current_select->inc_in_sum_expr())
              {
                my_parse_error(ER(ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
              }
            }
            /* Temporary placing the result of find_udf in $3 */
            (yyval.udf)= udf;
#endif
          }
    break;

  case 1336:

/* Line 1455 of yacc.c  */
#line 10069 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            Create_func *builder;
            Item *item= NULL;

            if (sp_check_name(&(yyvsp[(1) - (5)].lex_str)))
            {
              MYSQL_YYABORT;
            }

            /*
              Implementation note:
              names are resolved with the following order:
              - MySQL native functions,
              - User Defined Functions,
              - Stored Functions (assuming the current <use> database)

              This will be revised with WL#2128 (SQL PATH)
            */
            builder= find_native_function_builder(thd, (yyvsp[(1) - (5)].lex_str));
            if (builder)
            {
              item= builder->create_func(thd, (yyvsp[(1) - (5)].lex_str), (yyvsp[(4) - (5)].item_list));
            }
            else
            {
#ifdef HAVE_DLOPEN
              /* Retrieving the result of find_udf */
              udf_func *udf= (yyvsp[(3) - (5)].udf);

              if (udf)
              {
                if (udf->type == UDFTYPE_AGGREGATE)
                {
                  Select->in_sum_expr--;
                }

                item= Create_udf_func::s_singleton.create(thd, udf, (yyvsp[(4) - (5)].item_list));
              }
              else
#endif
              {
                builder= find_qualified_function_builder(thd);
                DBUG_ASSERT(builder);
                item= builder->create_func(thd, (yyvsp[(1) - (5)].lex_str), (yyvsp[(4) - (5)].item_list));
              }
            }

            if (! ((yyval.item)= item))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 1337:

/* Line 1455 of yacc.c  */
#line 10123 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            Create_qfunc *builder;
            Item *item= NULL;

            /*
              The following in practice calls:
              <code>Create_sp_func::create()</code>
              and builds a stored function.

              However, it's important to maintain the interface between the
              parser and the implementation in item_create.cc clean,
              since this will change with WL#2128 (SQL PATH):
              - INFORMATION_SCHEMA.version() is the SQL 99 syntax for the native
              function version(),
              - MySQL.version() is the SQL 2003 syntax for the native function
              version() (a vendor can specify any schema).
            */

            if (!(yyvsp[(1) - (6)].lex_str).str ||
                (check_and_convert_db_name(&(yyvsp[(1) - (6)].lex_str), FALSE) != IDENT_NAME_OK))
              MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[(3) - (6)].lex_str)))
            {
              MYSQL_YYABORT;
            }

            builder= find_qualified_function_builder(thd);
            DBUG_ASSERT(builder);
            item= builder->create(thd, (yyvsp[(1) - (6)].lex_str), (yyvsp[(3) - (6)].lex_str), true, (yyvsp[(5) - (6)].item_list));

            if (! ((yyval.item)= item))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 1338:

/* Line 1455 of yacc.c  */
#line 10163 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)= (yyvsp[(1) - (2)].num) | (yyvsp[(2) - (2)].num); }
    break;

  case 1339:

/* Line 1455 of yacc.c  */
#line 10165 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)= FT_BOOL; }
    break;

  case 1340:

/* Line 1455 of yacc.c  */
#line 10169 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)= FT_NL; }
    break;

  case 1341:

/* Line 1455 of yacc.c  */
#line 10170 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)= FT_NL; }
    break;

  case 1342:

/* Line 1455 of yacc.c  */
#line 10174 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0;         }
    break;

  case 1343:

/* Line 1455 of yacc.c  */
#line 10175 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)= FT_EXPAND; }
    break;

  case 1344:

/* Line 1455 of yacc.c  */
#line 10179 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.item_list)= NULL; }
    break;

  case 1345:

/* Line 1455 of yacc.c  */
#line 10180 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.item_list)= (yyvsp[(1) - (1)].item_list); }
    break;

  case 1346:

/* Line 1455 of yacc.c  */
#line 10185 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= new (YYTHD->mem_root) List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[(1) - (1)].item));
          }
    break;

  case 1347:

/* Line 1455 of yacc.c  */
#line 10192 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (3)].item_list)->push_back((yyvsp[(3) - (3)].item));
            (yyval.item_list)= (yyvsp[(1) - (3)].item_list);
          }
    break;

  case 1348:

/* Line 1455 of yacc.c  */
#line 10200 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            /*
             Use Item::name as a storage for the attribute value of user
             defined function argument. It is safe to use Item::name
             because the syntax will not allow having an explicit name here.
             See WL#1017 re. udf attributes.
            */
            if ((yyvsp[(4) - (4)].lex_str).str)
            {
              (yyvsp[(2) - (4)].item)->item_name.copy((yyvsp[(4) - (4)].lex_str).str, (yyvsp[(4) - (4)].lex_str).length, system_charset_info, false);
            }
            /* 
               A field has to have its proper name in order for name
               resolution to work, something we are only guaranteed if we
               parse it out. If we hijack the input stream with
               remember_name we may get quoted or escaped names.
            */
            else if ((yyvsp[(2) - (4)].item)->type() != Item::FIELD_ITEM &&
                     (yyvsp[(2) - (4)].item)->type() != Item::REF_ITEM /* For HAVING */ )
              (yyvsp[(2) - (4)].item)->item_name.copy((yyvsp[(1) - (4)].simple_string), (uint) ((yyvsp[(3) - (4)].simple_string) - (yyvsp[(1) - (4)].simple_string)), YYTHD->charset());
            (yyval.item)= (yyvsp[(2) - (4)].item);
          }
    break;

  case 1349:

/* Line 1455 of yacc.c  */
#line 10226 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_avg((yyvsp[(3) - (4)].item), FALSE);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1350:

/* Line 1455 of yacc.c  */
#line 10232 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_avg((yyvsp[(4) - (5)].item), TRUE);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1351:

/* Line 1455 of yacc.c  */
#line 10238 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_and((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1352:

/* Line 1455 of yacc.c  */
#line 10244 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_or((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1353:

/* Line 1455 of yacc.c  */
#line 10250 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_xor((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1354:

/* Line 1455 of yacc.c  */
#line 10256 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Item *item= new (YYTHD->mem_root) Item_int((int32) 0L,1);
            if (item == NULL)
              MYSQL_YYABORT;
            (yyval.item)= new (YYTHD->mem_root) Item_sum_count(item);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1355:

/* Line 1455 of yacc.c  */
#line 10265 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_count((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1356:

/* Line 1455 of yacc.c  */
#line 10271 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Select->in_sum_expr++; }
    break;

  case 1357:

/* Line 1455 of yacc.c  */
#line 10273 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Select->in_sum_expr--; }
    break;

  case 1358:

/* Line 1455 of yacc.c  */
#line 10275 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_count(* (yyvsp[(5) - (7)].item_list));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1359:

/* Line 1455 of yacc.c  */
#line 10281 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_min((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1360:

/* Line 1455 of yacc.c  */
#line 10292 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_min((yyvsp[(4) - (5)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1361:

/* Line 1455 of yacc.c  */
#line 10298 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_max((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1362:

/* Line 1455 of yacc.c  */
#line 10304 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_max((yyvsp[(4) - (5)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1363:

/* Line 1455 of yacc.c  */
#line 10310 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_std((yyvsp[(3) - (4)].item), 0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1364:

/* Line 1455 of yacc.c  */
#line 10316 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_variance((yyvsp[(3) - (4)].item), 0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1365:

/* Line 1455 of yacc.c  */
#line 10322 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_std((yyvsp[(3) - (4)].item), 1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1366:

/* Line 1455 of yacc.c  */
#line 10328 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_variance((yyvsp[(3) - (4)].item), 1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1367:

/* Line 1455 of yacc.c  */
#line 10334 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_sum((yyvsp[(3) - (4)].item), FALSE);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1368:

/* Line 1455 of yacc.c  */
#line 10340 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_sum((yyvsp[(4) - (5)].item), TRUE);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1369:

/* Line 1455 of yacc.c  */
#line 10346 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Select->in_sum_expr++; }
    break;

  case 1370:

/* Line 1455 of yacc.c  */
#line 10350 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            SELECT_LEX *sel= Select;
            sel->in_sum_expr--;
            (yyval.item)= new (YYTHD->mem_root)
                  Item_func_group_concat(Lex->current_context(), (yyvsp[(3) - (8)].num), (yyvsp[(5) - (8)].item_list),
                                         sel->gorder_list, (yyvsp[(7) - (8)].string));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            (yyvsp[(5) - (8)].item_list)->empty();
          }
    break;

  case 1371:

/* Line 1455 of yacc.c  */
#line 10364 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (! Lex->parsing_options.allows_variable)
            {
              my_error(ER_VIEW_SELECT_VARIABLE, MYF(0));
              MYSQL_YYABORT;
            }
          }
    break;

  case 1372:

/* Line 1455 of yacc.c  */
#line 10372 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= (yyvsp[(3) - (3)].item);
          }
    break;

  case 1373:

/* Line 1455 of yacc.c  */
#line 10379 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Item_func_set_user_var *item;
            (yyval.item)= item=
              new (YYTHD->mem_root) Item_func_set_user_var((yyvsp[(1) - (3)].lex_str), (yyvsp[(3) - (3)].item), false);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            LEX *lex= Lex;
            lex->uncacheable(UNCACHEABLE_RAND);
            lex->set_var_list.push_back(item);
          }
    break;

  case 1374:

/* Line 1455 of yacc.c  */
#line 10390 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_get_user_var((yyvsp[(1) - (1)].lex_str));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            LEX *lex= Lex;
            lex->uncacheable(UNCACHEABLE_RAND);
          }
    break;

  case 1375:

/* Line 1455 of yacc.c  */
#line 10398 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            /* disallow "SELECT @@global.global.variable" */
            if ((yyvsp[(3) - (4)].lex_str).str && (yyvsp[(4) - (4)].lex_str).str && check_reserved_words(&(yyvsp[(3) - (4)].lex_str)))
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            if (!((yyval.item)= get_system_var(YYTHD, (yyvsp[(2) - (4)].var_type), (yyvsp[(3) - (4)].lex_str), (yyvsp[(4) - (4)].lex_str))))
              MYSQL_YYABORT;
            if (!((Item_func_get_system_var*) (yyval.item))->is_written_to_binlog())
              Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_VARIABLE);
          }
    break;

  case 1376:

/* Line 1455 of yacc.c  */
#line 10413 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num) = 0; }
    break;

  case 1377:

/* Line 1455 of yacc.c  */
#line 10414 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num) = 1; }
    break;

  case 1378:

/* Line 1455 of yacc.c  */
#line 10419 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.string)= new (YYTHD->mem_root) String(",", 1, &my_charset_latin1);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1379:

/* Line 1455 of yacc.c  */
#line 10424 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.string) = (yyvsp[(2) - (2)].string); }
    break;

  case 1380:

/* Line 1455 of yacc.c  */
#line 10429 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Select->gorder_list = NULL;
          }
    break;

  case 1381:

/* Line 1455 of yacc.c  */
#line 10433 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            SELECT_LEX *select= Select;
            select->gorder_list= new (YYTHD->mem_root)
                                   SQL_I_List<ORDER>(select->order_list);
            if (select->gorder_list == NULL)
              MYSQL_YYABORT;
            select->order_list.empty();
          }
    break;

  case 1382:

/* Line 1455 of yacc.c  */
#line 10445 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->current_select->inc_in_sum_expr())
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
          }
    break;

  case 1383:

/* Line 1455 of yacc.c  */
#line 10454 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Select->in_sum_expr--;
            (yyval.item)= (yyvsp[(3) - (3)].item);
          }
    break;

  case 1384:

/* Line 1455 of yacc.c  */
#line 10462 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_CHAR; Lex->charset= &my_charset_bin; Lex->dec= 0; }
    break;

  case 1385:

/* Line 1455 of yacc.c  */
#line 10464 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_CHAR; Lex->dec= 0; }
    break;

  case 1386:

/* Line 1455 of yacc.c  */
#line 10466 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_CHAR; Lex->charset= national_charset_info; Lex->dec=0; }
    break;

  case 1387:

/* Line 1455 of yacc.c  */
#line 10468 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_SIGNED_INT; Lex->charset= NULL; Lex->dec=Lex->length= (char*)0; }
    break;

  case 1388:

/* Line 1455 of yacc.c  */
#line 10470 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_SIGNED_INT; Lex->charset= NULL; Lex->dec=Lex->length= (char*)0; }
    break;

  case 1389:

/* Line 1455 of yacc.c  */
#line 10472 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_UNSIGNED_INT; Lex->charset= NULL; Lex->dec=Lex->length= (char*)0; }
    break;

  case 1390:

/* Line 1455 of yacc.c  */
#line 10474 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_UNSIGNED_INT; Lex->charset= NULL; Lex->dec=Lex->length= (char*)0; }
    break;

  case 1391:

/* Line 1455 of yacc.c  */
#line 10476 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.cast_type)= ITEM_CAST_DATE; Lex->charset= NULL; Lex->dec= Lex->length= (char *) 0; }
    break;

  case 1392:

/* Line 1455 of yacc.c  */
#line 10478 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.cast_type)= ITEM_CAST_TIME; Lex->charset= NULL; Lex->length= (char *) 0; }
    break;

  case 1393:

/* Line 1455 of yacc.c  */
#line 10480 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.cast_type)= ITEM_CAST_DATETIME; Lex->charset= NULL; Lex->length= (char *) 0; }
    break;

  case 1394:

/* Line 1455 of yacc.c  */
#line 10482 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_DECIMAL; Lex->charset= NULL; }
    break;

  case 1395:

/* Line 1455 of yacc.c  */
#line 10486 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.item_list)= NULL; }
    break;

  case 1396:

/* Line 1455 of yacc.c  */
#line 10487 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.item_list)= (yyvsp[(1) - (1)].item_list);}
    break;

  case 1397:

/* Line 1455 of yacc.c  */
#line 10492 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= new (YYTHD->mem_root) List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[(1) - (1)].item));
          }
    break;

  case 1398:

/* Line 1455 of yacc.c  */
#line 10499 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (3)].item_list)->push_back((yyvsp[(3) - (3)].item));
            (yyval.item_list)= (yyvsp[(1) - (3)].item_list);
          }
    break;

  case 1399:

/* Line 1455 of yacc.c  */
#line 10506 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.item_list)= (yyvsp[(1) - (1)].item_list); }
    break;

  case 1400:

/* Line 1455 of yacc.c  */
#line 10507 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.item_list)= (yyvsp[(2) - (3)].item_list); }
    break;

  case 1401:

/* Line 1455 of yacc.c  */
#line 10512 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= new (YYTHD->mem_root) List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[(1) - (1)].item));
          }
    break;

  case 1402:

/* Line 1455 of yacc.c  */
#line 10519 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (3)].item_list)->push_back((yyvsp[(3) - (3)].item));
            (yyval.item_list)= (yyvsp[(1) - (3)].item_list);
          }
    break;

  case 1403:

/* Line 1455 of yacc.c  */
#line 10526 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.item)= NULL; }
    break;

  case 1404:

/* Line 1455 of yacc.c  */
#line 10527 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].item); }
    break;

  case 1405:

/* Line 1455 of yacc.c  */
#line 10531 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.item)= NULL; }
    break;

  case 1406:

/* Line 1455 of yacc.c  */
#line 10532 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(2) - (2)].item); }
    break;

  case 1407:

/* Line 1455 of yacc.c  */
#line 10537 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_list)= new List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[(2) - (4)].item));
            (yyval.item_list)->push_back((yyvsp[(4) - (4)].item));
          }
    break;

  case 1408:

/* Line 1455 of yacc.c  */
#line 10545 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (5)].item_list)->push_back((yyvsp[(3) - (5)].item));
            (yyvsp[(1) - (5)].item_list)->push_back((yyvsp[(5) - (5)].item));
            (yyval.item_list)= (yyvsp[(1) - (5)].item_list);
          }
    break;

  case 1409:

/* Line 1455 of yacc.c  */
#line 10555 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.table_list)=(yyvsp[(1) - (1)].table_list); }
    break;

  case 1410:

/* Line 1455 of yacc.c  */
#line 10557 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (!((yyval.table_list)= lex->current_select->nest_last_join(lex->thd)))
              MYSQL_YYABORT;
          }
    break;

  case 1411:

/* Line 1455 of yacc.c  */
#line 10565 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { MYSQL_YYABORT_UNLESS((yyval.table_list)=(yyvsp[(1) - (1)].table_list)); }
    break;

  case 1412:

/* Line 1455 of yacc.c  */
#line 10576 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.table_list)=(yyvsp[(1) - (1)].table_list); }
    break;

  case 1413:

/* Line 1455 of yacc.c  */
#line 10577 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.table_list)=(yyvsp[(3) - (4)].table_list); }
    break;

  case 1414:

/* Line 1455 of yacc.c  */
#line 10583 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.table_list)=(yyvsp[(1) - (1)].table_list); }
    break;

  case 1415:

/* Line 1455 of yacc.c  */
#line 10585 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (3)].table_list) && ((yyval.table_list)=(yyvsp[(3) - (3)].table_list)));
          }
    break;

  case 1416:

/* Line 1455 of yacc.c  */
#line 10605 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { MYSQL_YYABORT_UNLESS((yyvsp[(1) - (3)].table_list) && ((yyval.table_list)=(yyvsp[(3) - (3)].table_list))); }
    break;

  case 1417:

/* Line 1455 of yacc.c  */
#line 10607 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { MYSQL_YYABORT_UNLESS((yyvsp[(1) - (3)].table_list) && ((yyval.table_list)=(yyvsp[(3) - (3)].table_list))); (yyvsp[(3) - (3)].table_list)->straight=1; }
    break;

  case 1418:

/* Line 1455 of yacc.c  */
#line 10610 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (4)].table_list) && (yyvsp[(3) - (4)].table_list));
            /* Change the current name resolution context to a local context. */
            if (push_new_name_resolution_context(YYTHD, (yyvsp[(1) - (4)].table_list), (yyvsp[(3) - (4)].table_list)))
              MYSQL_YYABORT;
            Select->parsing_place= IN_ON;
          }
    break;

  case 1419:

/* Line 1455 of yacc.c  */
#line 10618 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            add_join_on((yyvsp[(3) - (6)].table_list),(yyvsp[(6) - (6)].item));
            Lex->pop_context();
            Select->parsing_place= NO_MATTER;
          }
    break;

  case 1420:

/* Line 1455 of yacc.c  */
#line 10625 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (4)].table_list) && (yyvsp[(3) - (4)].table_list));
            /* Change the current name resolution context to a local context. */
            if (push_new_name_resolution_context(YYTHD, (yyvsp[(1) - (4)].table_list), (yyvsp[(3) - (4)].table_list)))
              MYSQL_YYABORT;
            Select->parsing_place= IN_ON;
          }
    break;

  case 1421:

/* Line 1455 of yacc.c  */
#line 10633 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(3) - (6)].table_list)->straight=1;
            add_join_on((yyvsp[(3) - (6)].table_list),(yyvsp[(6) - (6)].item));
            Lex->pop_context();
            Select->parsing_place= NO_MATTER;
          }
    break;

  case 1422:

/* Line 1455 of yacc.c  */
#line 10641 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (4)].table_list) && (yyvsp[(3) - (4)].table_list));
          }
    break;

  case 1423:

/* Line 1455 of yacc.c  */
#line 10645 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { add_join_natural((yyvsp[(1) - (8)].table_list),(yyvsp[(3) - (8)].table_list),(yyvsp[(7) - (8)].string_list),Select); (yyval.table_list)=(yyvsp[(3) - (8)].table_list); }
    break;

  case 1424:

/* Line 1455 of yacc.c  */
#line 10647 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (4)].table_list) && ((yyval.table_list)=(yyvsp[(4) - (4)].table_list)));
            add_join_natural((yyvsp[(1) - (4)].table_list),(yyvsp[(4) - (4)].table_list),NULL,Select);
          }
    break;

  case 1425:

/* Line 1455 of yacc.c  */
#line 10655 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (6)].table_list) && (yyvsp[(5) - (6)].table_list));
            /* Change the current name resolution context to a local context. */
            if (push_new_name_resolution_context(YYTHD, (yyvsp[(1) - (6)].table_list), (yyvsp[(5) - (6)].table_list)))
              MYSQL_YYABORT;
            Select->parsing_place= IN_ON;
          }
    break;

  case 1426:

/* Line 1455 of yacc.c  */
#line 10663 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            add_join_on((yyvsp[(5) - (8)].table_list),(yyvsp[(8) - (8)].item));
            Lex->pop_context();
            (yyvsp[(5) - (8)].table_list)->outer_join|=JOIN_TYPE_LEFT;
            (yyval.table_list)=(yyvsp[(5) - (8)].table_list);
            Select->parsing_place= NO_MATTER;
          }
    break;

  case 1427:

/* Line 1455 of yacc.c  */
#line 10671 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (5)].table_list) && (yyvsp[(5) - (5)].table_list));
          }
    break;

  case 1428:

/* Line 1455 of yacc.c  */
#line 10675 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { 
            add_join_natural((yyvsp[(1) - (10)].table_list),(yyvsp[(5) - (10)].table_list),(yyvsp[(9) - (10)].string_list),Select); 
            (yyvsp[(5) - (10)].table_list)->outer_join|=JOIN_TYPE_LEFT; 
            (yyval.table_list)=(yyvsp[(5) - (10)].table_list); 
          }
    break;

  case 1429:

/* Line 1455 of yacc.c  */
#line 10681 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (6)].table_list) && (yyvsp[(6) - (6)].table_list));
            add_join_natural((yyvsp[(1) - (6)].table_list),(yyvsp[(6) - (6)].table_list),NULL,Select);
            (yyvsp[(6) - (6)].table_list)->outer_join|=JOIN_TYPE_LEFT;
            (yyval.table_list)=(yyvsp[(6) - (6)].table_list);
          }
    break;

  case 1430:

/* Line 1455 of yacc.c  */
#line 10691 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (6)].table_list) && (yyvsp[(5) - (6)].table_list));
            /* Change the current name resolution context to a local context. */
            if (push_new_name_resolution_context(YYTHD, (yyvsp[(1) - (6)].table_list), (yyvsp[(5) - (6)].table_list)))
              MYSQL_YYABORT;
            Select->parsing_place= IN_ON;
          }
    break;

  case 1431:

/* Line 1455 of yacc.c  */
#line 10699 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (!((yyval.table_list)= lex->current_select->convert_right_join()))
              MYSQL_YYABORT;
            add_join_on((yyval.table_list), (yyvsp[(8) - (8)].item));
            Lex->pop_context();
            Select->parsing_place= NO_MATTER;
          }
    break;

  case 1432:

/* Line 1455 of yacc.c  */
#line 10708 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (5)].table_list) && (yyvsp[(5) - (5)].table_list));
          }
    break;

  case 1433:

/* Line 1455 of yacc.c  */
#line 10712 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (!((yyval.table_list)= lex->current_select->convert_right_join()))
              MYSQL_YYABORT;
            add_join_natural((yyval.table_list),(yyvsp[(5) - (10)].table_list),(yyvsp[(9) - (10)].string_list),Select);
          }
    break;

  case 1434:

/* Line 1455 of yacc.c  */
#line 10719 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (6)].table_list) && (yyvsp[(6) - (6)].table_list));
            add_join_natural((yyvsp[(6) - (6)].table_list),(yyvsp[(1) - (6)].table_list),NULL,Select);
            LEX *lex= Lex;
            if (!((yyval.table_list)= lex->current_select->convert_right_join()))
              MYSQL_YYABORT;
          }
    break;

  case 1435:

/* Line 1455 of yacc.c  */
#line 10729 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1436:

/* Line 1455 of yacc.c  */
#line 10730 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1437:

/* Line 1455 of yacc.c  */
#line 10731 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1438:

/* Line 1455 of yacc.c  */
#line 10739 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.string_list)= 0;}
    break;

  case 1440:

/* Line 1455 of yacc.c  */
#line 10745 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.string_list)= (yyvsp[(3) - (5)].string_list);
          }
    break;

  case 1441:

/* Line 1455 of yacc.c  */
#line 10759 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            SELECT_LEX *sel= Select;
            sel->table_join_options= 0;
          }
    break;

  case 1442:

/* Line 1455 of yacc.c  */
#line 10764 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.table_list)= Select->add_table_to_list(YYTHD, (yyvsp[(2) - (5)].table), (yyvsp[(4) - (5)].lex_str_ptr),
                                                Select->get_table_join_options(),
                                                YYPS->m_lock_type,
                                                YYPS->m_mdl_type,
                                                Select->pop_index_hints(),
                                                (yyvsp[(3) - (5)].string_list))))
              MYSQL_YYABORT;
            Select->add_joined_table((yyval.table_list));
          }
    break;

  case 1443:

/* Line 1455 of yacc.c  */
#line 10775 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            SELECT_LEX *sel= lex->current_select;
            if ((yyvsp[(1) - (3)].num))
            {
              if (sel->set_braces(1))
              {
                my_parse_error(ER(ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
              }
              /* select in braces, can't contain global parameters */
              if (sel->master_unit()->fake_select_lex)
                sel->master_unit()->global_parameters=
                   sel->master_unit()->fake_select_lex;
            }
            if ((yyvsp[(2) - (3)].select_lex)->init_nested_join(lex->thd))
              MYSQL_YYABORT;
            (yyval.table_list)= 0;
            /* incomplete derived tables return NULL, we must be
               nested in select_derived rule to be here. */
          }
    break;

  case 1444:

/* Line 1455 of yacc.c  */
#line 10815 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            /* Use $2 instead of Lex->current_select as derived table will
               alter value of Lex->current_select. */
            if (!((yyvsp[(3) - (5)].table_list) || (yyvsp[(5) - (5)].lex_str_ptr)) && (yyvsp[(2) - (5)].select_lex)->embedding &&
                !(yyvsp[(2) - (5)].select_lex)->embedding->nested_join->join_list.elements)
            {
              /* we have a derived table ($3 == NULL) but no alias,
                 Since we are nested in further parentheses so we
                 can pass NULL to the outer level parentheses
                 Permits parsing of "((((select ...))) as xyz)" */
              (yyval.table_list)= 0;
            }
            else if (!(yyvsp[(3) - (5)].table_list))
            {
              /* Handle case of derived table, alias may be NULL if there
                 are no outer parentheses, add_table_to_list() will throw
                 error in this case */
              LEX *lex=Lex;
              SELECT_LEX *sel= lex->current_select;
              SELECT_LEX_UNIT *unit= sel->master_unit();
              lex->current_select= sel= unit->outer_select();
              Table_ident *ti= new Table_ident(unit);
              if (ti == NULL)
                MYSQL_YYABORT;
              if (!((yyval.table_list)= sel->add_table_to_list(lex->thd,
                                               ti, (yyvsp[(5) - (5)].lex_str_ptr), 0,
                                               TL_READ, MDL_SHARED_READ)))

                MYSQL_YYABORT;
              sel->add_joined_table((yyval.table_list));
              lex->pop_context();
              lex->nest_level--;
            }
            else if ((yyvsp[(5) - (5)].lex_str_ptr) != NULL)
            {
              /*
                Tables with or without joins within parentheses cannot
                have aliases, and we ruled out derived tables above.
              */
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            else
            {
              /* nested join: FROM (t1 JOIN t2 ...),
                 nest_level is the same as in the outer query */
              (yyval.table_list)= (yyvsp[(3) - (5)].table_list);
            }
          }
    break;

  case 1445:

/* Line 1455 of yacc.c  */
#line 10888 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (2)].table_list) && (yyvsp[(2) - (2)].is_not_empty))
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
          }
    break;

  case 1446:

/* Line 1455 of yacc.c  */
#line 10898 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (add_select_to_union_list(Lex, (bool)(yyvsp[(3) - (3)].num), FALSE))
              MYSQL_YYABORT;
          }
    break;

  case 1447:

/* Line 1455 of yacc.c  */
#line 10903 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            /*
              Remove from the name resolution context stack the context of the
              last select in the union.
             */
            Lex->pop_context();
          }
    break;

  case 1448:

/* Line 1455 of yacc.c  */
#line 10911 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (7)].table_list) != NULL)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
          }
    break;

  case 1449:

/* Line 1455 of yacc.c  */
#line 10923 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            SELECT_LEX * sel= lex->current_select;
            if (lex->current_select->set_braces(0))
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            if (sel->linkage == UNION_TYPE &&
                sel->master_unit()->first_select()->braces)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
          }
    break;

  case 1450:

/* Line 1455 of yacc.c  */
#line 10942 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            SELECT_LEX *sel= lex->current_select;
            if (sel->linkage != UNION_TYPE)
              mysql_init_select(lex);
            lex->current_select->parsing_place= SELECT_LIST;
          }
    break;

  case 1451:

/* Line 1455 of yacc.c  */
#line 10950 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Select->parsing_place= NO_MATTER;
          }
    break;

  case 1453:

/* Line 1455 of yacc.c  */
#line 10959 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if ((yyvsp[(1) - (1)].select_lex)->init_nested_join(lex->thd))
              MYSQL_YYABORT;
          }
    break;

  case 1454:

/* Line 1455 of yacc.c  */
#line 10965 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            /* for normal joins, $3 != NULL and end_nested_join() != NULL,
               for derived tables, both must equal NULL */

            if (!((yyval.table_list)= (yyvsp[(1) - (3)].select_lex)->end_nested_join(lex->thd)) && (yyvsp[(3) - (3)].table_list))
              MYSQL_YYABORT;
            if (!(yyvsp[(3) - (3)].table_list) && (yyval.table_list))
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
          }
    break;

  case 1455:

/* Line 1455 of yacc.c  */
#line 10981 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->derived_tables|= DERIVED_SUBQUERY;
            if (!lex->expr_allows_subselect ||
                lex->sql_command == (int)SQLCOM_PURGE)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            if (lex->current_select->linkage == GLOBAL_OPTIONS_TYPE ||
                mysql_new_select(lex, 1))
              MYSQL_YYABORT;
            mysql_init_select(lex);
            lex->current_select->linkage= DERIVED_TABLE_TYPE;
            lex->current_select->parsing_place= SELECT_LIST;
          }
    break;

  case 1456:

/* Line 1455 of yacc.c  */
#line 10998 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Select->parsing_place= NO_MATTER;
          }
    break;

  case 1458:

/* Line 1455 of yacc.c  */
#line 11005 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.select_lex)= Select; }
    break;

  case 1459:

/* Line 1455 of yacc.c  */
#line 11010 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (! lex->parsing_options.allows_derived)
            {
              my_error(ER_VIEW_SELECT_DERIVED, MYF(0));
              MYSQL_YYABORT;
            }

            SELECT_LEX *sel= lex->current_select;
            TABLE_LIST *embedding;
            if (!sel->embedding || sel->end_nested_join(lex->thd))
            {
              /* we are not in parentheses */
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            embedding= Select->embedding;
            (yyval.num)= embedding &&
                !embedding->nested_join->join_list.elements;
            /* return true if we are deeply nested */
          }
    break;

  case 1460:

/* Line 1455 of yacc.c  */
#line 11035 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1461:

/* Line 1455 of yacc.c  */
#line 11036 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1462:

/* Line 1455 of yacc.c  */
#line 11041 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.num)= old_mode ?  INDEX_HINT_MASK_JOIN : INDEX_HINT_MASK_ALL; 
          }
    break;

  case 1463:

/* Line 1455 of yacc.c  */
#line 11044 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)= INDEX_HINT_MASK_JOIN;  }
    break;

  case 1464:

/* Line 1455 of yacc.c  */
#line 11045 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)= INDEX_HINT_MASK_ORDER; }
    break;

  case 1465:

/* Line 1455 of yacc.c  */
#line 11046 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)= INDEX_HINT_MASK_GROUP; }
    break;

  case 1466:

/* Line 1455 of yacc.c  */
#line 11050 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.index_hint)= INDEX_HINT_FORCE; }
    break;

  case 1467:

/* Line 1455 of yacc.c  */
#line 11051 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.index_hint)= INDEX_HINT_IGNORE; }
    break;

  case 1468:

/* Line 1455 of yacc.c  */
#line 11056 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Select->set_index_hint_type((yyvsp[(1) - (3)].index_hint), (yyvsp[(3) - (3)].num));
          }
    break;

  case 1470:

/* Line 1455 of yacc.c  */
#line 11061 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Select->set_index_hint_type(INDEX_HINT_USE, (yyvsp[(3) - (3)].num));
          }
    break;

  case 1475:

/* Line 1455 of yacc.c  */
#line 11074 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Select->alloc_index_hints(YYTHD); }
    break;

  case 1477:

/* Line 1455 of yacc.c  */
#line 11078 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {  Select->clear_index_hints(); }
    break;

  case 1479:

/* Line 1455 of yacc.c  */
#line 11083 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Select->add_index_hint(YYTHD, NULL, 0); }
    break;

  case 1480:

/* Line 1455 of yacc.c  */
#line 11084 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1481:

/* Line 1455 of yacc.c  */
#line 11089 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Select->add_index_hint(YYTHD, (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length); }
    break;

  case 1482:

/* Line 1455 of yacc.c  */
#line 11091 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Select->add_index_hint(YYTHD, (char *)"PRIMARY", 7); }
    break;

  case 1485:

/* Line 1455 of yacc.c  */
#line 11101 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.string_list)= new List<String>))
              MYSQL_YYABORT;
            String *s= new (YYTHD->mem_root) String((const char *) (yyvsp[(1) - (1)].lex_str).str,
                                                    (yyvsp[(1) - (1)].lex_str).length,
                                                    system_charset_info);
            if (s == NULL)
              MYSQL_YYABORT;
            (yyval.string_list)->push_back(s);
          }
    break;

  case 1486:

/* Line 1455 of yacc.c  */
#line 11112 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            String *s= new (YYTHD->mem_root) String((const char *) (yyvsp[(3) - (3)].lex_str).str,
                                                    (yyvsp[(3) - (3)].lex_str).length,
                                                    system_charset_info);
            if (s == NULL)
              MYSQL_YYABORT;
            (yyvsp[(1) - (3)].string_list)->push_back(s);
            (yyval.string_list)= (yyvsp[(1) - (3)].string_list);
          }
    break;

  case 1487:

/* Line 1455 of yacc.c  */
#line 11124 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1488:

/* Line 1455 of yacc.c  */
#line 11125 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_DAY_HOUR; }
    break;

  case 1489:

/* Line 1455 of yacc.c  */
#line 11126 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_DAY_MICROSECOND; }
    break;

  case 1490:

/* Line 1455 of yacc.c  */
#line 11127 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_DAY_MINUTE; }
    break;

  case 1491:

/* Line 1455 of yacc.c  */
#line 11128 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_DAY_SECOND; }
    break;

  case 1492:

/* Line 1455 of yacc.c  */
#line 11129 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_HOUR_MICROSECOND; }
    break;

  case 1493:

/* Line 1455 of yacc.c  */
#line 11130 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_HOUR_MINUTE; }
    break;

  case 1494:

/* Line 1455 of yacc.c  */
#line 11131 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_HOUR_SECOND; }
    break;

  case 1495:

/* Line 1455 of yacc.c  */
#line 11132 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_MINUTE_MICROSECOND; }
    break;

  case 1496:

/* Line 1455 of yacc.c  */
#line 11133 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_MINUTE_SECOND; }
    break;

  case 1497:

/* Line 1455 of yacc.c  */
#line 11134 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_SECOND_MICROSECOND; }
    break;

  case 1498:

/* Line 1455 of yacc.c  */
#line 11135 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_YEAR_MONTH; }
    break;

  case 1499:

/* Line 1455 of yacc.c  */
#line 11139 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_DAY; }
    break;

  case 1500:

/* Line 1455 of yacc.c  */
#line 11140 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_WEEK; }
    break;

  case 1501:

/* Line 1455 of yacc.c  */
#line 11141 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_HOUR; }
    break;

  case 1502:

/* Line 1455 of yacc.c  */
#line 11142 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_MINUTE; }
    break;

  case 1503:

/* Line 1455 of yacc.c  */
#line 11143 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_MONTH; }
    break;

  case 1504:

/* Line 1455 of yacc.c  */
#line 11144 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_QUARTER; }
    break;

  case 1505:

/* Line 1455 of yacc.c  */
#line 11145 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_SECOND; }
    break;

  case 1506:

/* Line 1455 of yacc.c  */
#line 11146 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_MICROSECOND; }
    break;

  case 1507:

/* Line 1455 of yacc.c  */
#line 11147 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_YEAR; }
    break;

  case 1508:

/* Line 1455 of yacc.c  */
#line 11151 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATE; }
    break;

  case 1509:

/* Line 1455 of yacc.c  */
#line 11152 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_TIME; }
    break;

  case 1510:

/* Line 1455 of yacc.c  */
#line 11153 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATETIME; }
    break;

  case 1511:

/* Line 1455 of yacc.c  */
#line 11154 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATETIME; }
    break;

  case 1515:

/* Line 1455 of yacc.c  */
#line 11164 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str_ptr)=0; }
    break;

  case 1516:

/* Line 1455 of yacc.c  */
#line 11166 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.lex_str_ptr)= (LEX_STRING*) sql_memdup(&(yyvsp[(2) - (2)].lex_str),sizeof(LEX_STRING));
            if ((yyval.lex_str_ptr) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1519:

/* Line 1455 of yacc.c  */
#line 11179 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Select->where= 0; }
    break;

  case 1520:

/* Line 1455 of yacc.c  */
#line 11181 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Select->parsing_place= IN_WHERE;
          }
    break;

  case 1521:

/* Line 1455 of yacc.c  */
#line 11185 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            SELECT_LEX *select= Select;
            select->where= (yyvsp[(3) - (3)].item);
            select->parsing_place= NO_MATTER;
            if ((yyvsp[(3) - (3)].item))
              (yyvsp[(3) - (3)].item)->top_level_item();
          }
    break;

  case 1523:

/* Line 1455 of yacc.c  */
#line 11197 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Select->parsing_place= IN_HAVING;
          }
    break;

  case 1524:

/* Line 1455 of yacc.c  */
#line 11201 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            SELECT_LEX *sel= Select;
            sel->having= (yyvsp[(3) - (3)].item);
            sel->parsing_place= NO_MATTER;
            if ((yyvsp[(3) - (3)].item))
              (yyvsp[(3) - (3)].item)->top_level_item();
          }
    break;

  case 1525:

/* Line 1455 of yacc.c  */
#line 11212 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->escape_used= TRUE;
            (yyval.item)= (yyvsp[(2) - (2)].item);
          }
    break;

  case 1526:

/* Line 1455 of yacc.c  */
#line 11217 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            Lex->escape_used= FALSE;
            (yyval.item)= ((thd->variables.sql_mode & MODE_NO_BACKSLASH_ESCAPES) ?
                 new (thd->mem_root) Item_string("", 0, &my_charset_latin1) :
                 new (thd->mem_root) Item_string("\\", 1, &my_charset_latin1));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1529:

/* Line 1455 of yacc.c  */
#line 11239 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { if (add_group_to_list(YYTHD, (yyvsp[(3) - (4)].item),(bool) (yyvsp[(4) - (4)].num))) MYSQL_YYABORT; }
    break;

  case 1530:

/* Line 1455 of yacc.c  */
#line 11241 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { if (add_group_to_list(YYTHD, (yyvsp[(1) - (2)].item),(bool) (yyvsp[(2) - (2)].num))) MYSQL_YYABORT; }
    break;

  case 1531:

/* Line 1455 of yacc.c  */
#line 11245 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1532:

/* Line 1455 of yacc.c  */
#line 11247 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            /*
              'WITH CUBE' is reserved in the MySQL syntax, but not implemented,
              and cause LALR(2) conflicts.
              This syntax is not standard.
              MySQL syntax: GROUP BY col1, col2, col3 WITH CUBE
              SQL-2003: GROUP BY ... CUBE(col1, col2, col3)
            */
            LEX *lex=Lex;
            if (lex->current_select->linkage == GLOBAL_OPTIONS_TYPE)
            {
              my_error(ER_WRONG_USAGE, MYF(0), "WITH CUBE",
                       "global union parameters");
              MYSQL_YYABORT;
            }
            lex->current_select->olap= CUBE_TYPE;
            my_error(ER_NOT_SUPPORTED_YET, MYF(0), "CUBE");
            MYSQL_YYABORT;
          }
    break;

  case 1533:

/* Line 1455 of yacc.c  */
#line 11267 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            /*
              'WITH ROLLUP' is needed for backward compatibility,
              and cause LALR(2) conflicts.
              This syntax is not standard.
              MySQL syntax: GROUP BY col1, col2, col3 WITH ROLLUP
              SQL-2003: GROUP BY ... ROLLUP(col1, col2, col3)
            */
            LEX *lex= Lex;
            if (lex->current_select->linkage == GLOBAL_OPTIONS_TYPE)
            {
              my_error(ER_WRONG_USAGE, MYF(0), "WITH ROLLUP",
                       "global union parameters");
              MYSQL_YYABORT;
            }
            lex->current_select->olap= ROLLUP_TYPE;
          }
    break;

  case 1537:

/* Line 1455 of yacc.c  */
#line 11301 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            bool ascending= ((yyvsp[(2) - (2)].num) == 1) ? true : false;
            if (add_order_to_list(thd, (yyvsp[(1) - (2)].item), ascending))
              MYSQL_YYABORT;
          }
    break;

  case 1540:

/* Line 1455 of yacc.c  */
#line 11320 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            SELECT_LEX *sel= lex->current_select;
            SELECT_LEX_UNIT *unit= sel-> master_unit();
            if (sel->linkage != GLOBAL_OPTIONS_TYPE &&
                sel->olap != UNSPECIFIED_OLAP_TYPE &&
                (sel->linkage != UNION_TYPE || sel->braces))
            {
              my_error(ER_WRONG_USAGE, MYF(0),
                       "CUBE/ROLLUP", "ORDER BY");
              MYSQL_YYABORT;
            }
            if (lex->sql_command != SQLCOM_ALTER_TABLE && !unit->fake_select_lex)
            {
              /*
                A query of the of the form (SELECT ...) ORDER BY order_list is
                executed in the same way as the query
                SELECT ... ORDER BY order_list
                unless the SELECT construct contains ORDER BY or LIMIT clauses.
                Otherwise we create a fake SELECT_LEX if it has not been created
                yet.
              */
              SELECT_LEX *first_sl= unit->first_select();
              if (!unit->is_union() &&
                  (first_sl->order_list.elements || 
                   first_sl->select_limit) &&            
                  unit->add_fake_select_lex(lex->thd))
                MYSQL_YYABORT;
            }
          }
    break;

  case 1542:

/* Line 1455 of yacc.c  */
#line 11355 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { if (add_order_to_list(YYTHD, (yyvsp[(3) - (4)].item),(bool) (yyvsp[(4) - (4)].num))) MYSQL_YYABORT; }
    break;

  case 1543:

/* Line 1455 of yacc.c  */
#line 11357 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { if (add_order_to_list(YYTHD, (yyvsp[(1) - (2)].item),(bool) (yyvsp[(2) - (2)].num))) MYSQL_YYABORT; }
    break;

  case 1544:

/* Line 1455 of yacc.c  */
#line 11361 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num) =  1; }
    break;

  case 1545:

/* Line 1455 of yacc.c  */
#line 11362 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num) =1; }
    break;

  case 1546:

/* Line 1455 of yacc.c  */
#line 11363 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num) =0; }
    break;

  case 1547:

/* Line 1455 of yacc.c  */
#line 11368 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            SELECT_LEX *sel= lex->current_select;
            sel->offset_limit= 0;
            sel->select_limit= 0;
          }
    break;

  case 1548:

/* Line 1455 of yacc.c  */
#line 11374 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1549:

/* Line 1455 of yacc.c  */
#line 11378 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1550:

/* Line 1455 of yacc.c  */
#line 11379 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1551:

/* Line 1455 of yacc.c  */
#line 11384 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
          }
    break;

  case 1552:

/* Line 1455 of yacc.c  */
#line 11391 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[(1) - (1)].item);
            sel->offset_limit= 0;
            sel->explicit_limit= 1;
          }
    break;

  case 1553:

/* Line 1455 of yacc.c  */
#line 11398 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[(3) - (3)].item);
            sel->offset_limit= (yyvsp[(1) - (3)].item);
            sel->explicit_limit= 1;
          }
    break;

  case 1554:

/* Line 1455 of yacc.c  */
#line 11405 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[(1) - (3)].item);
            sel->offset_limit= (yyvsp[(3) - (3)].item);
            sel->explicit_limit= 1;
          }
    break;

  case 1555:

/* Line 1455 of yacc.c  */
#line 11415 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
          THD *thd= YYTHD;
          LEX *lex= Lex;
          Lex_input_stream *lip= YYLIP;
          sp_head *sp= lex->sphead;
          const char *query_start_ptr=
            sp ? sp->m_parser_data.get_current_stmt_start_ptr() : NULL;

          Item_splocal *v= create_item_for_sp_var(thd, (yyvsp[(1) - (1)].lex_str), NULL,
                                                  query_start_ptr,
                                                  lip->get_tok_start(),
                                                  lip->get_ptr());
          if (!v)
            MYSQL_YYABORT;

          lex->safe_to_cache_query= false;

          if (v->type() != Item::INT_ITEM)
          {
            my_error(ER_WRONG_SPVAR_TYPE_IN_LIMIT, MYF(0));
            MYSQL_YYABORT;
          }

          v->limit_clause_param= true;
          (yyval.item)= v;
        }
    break;

  case 1556:

/* Line 1455 of yacc.c  */
#line 11442 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
          ((Item_param *) (yyvsp[(1) - (1)].item))->limit_clause_param= TRUE;
        }
    break;

  case 1557:

/* Line 1455 of yacc.c  */
#line 11446 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_uint((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1558:

/* Line 1455 of yacc.c  */
#line 11452 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_uint((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1559:

/* Line 1455 of yacc.c  */
#line 11458 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_uint((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1560:

/* Line 1455 of yacc.c  */
#line 11467 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->current_select->select_limit= 0;
          }
    break;

  case 1561:

/* Line 1455 of yacc.c  */
#line 11472 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[(2) - (2)].item);
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
            sel->explicit_limit= 1;
          }
    break;

  case 1562:

/* Line 1455 of yacc.c  */
#line 11481 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1563:

/* Line 1455 of yacc.c  */
#line 11482 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (ulong) strtol((yyvsp[(1) - (1)].lex_str).str, (char**) 0, 16); }
    break;

  case 1564:

/* Line 1455 of yacc.c  */
#line 11483 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1565:

/* Line 1455 of yacc.c  */
#line 11484 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1566:

/* Line 1455 of yacc.c  */
#line 11485 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1567:

/* Line 1455 of yacc.c  */
#line 11486 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1568:

/* Line 1455 of yacc.c  */
#line 11490 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1569:

/* Line 1455 of yacc.c  */
#line 11491 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (ulong) strtol((yyvsp[(1) - (1)].lex_str).str, (char**) 0, 16); }
    break;

  case 1570:

/* Line 1455 of yacc.c  */
#line 11492 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1571:

/* Line 1455 of yacc.c  */
#line 11493 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1572:

/* Line 1455 of yacc.c  */
#line 11494 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { MYSQL_YYABORT; }
    break;

  case 1573:

/* Line 1455 of yacc.c  */
#line 11498 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1574:

/* Line 1455 of yacc.c  */
#line 11499 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1575:

/* Line 1455 of yacc.c  */
#line 11500 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1576:

/* Line 1455 of yacc.c  */
#line 11501 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1577:

/* Line 1455 of yacc.c  */
#line 11502 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1578:

/* Line 1455 of yacc.c  */
#line 11506 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1579:

/* Line 1455 of yacc.c  */
#line 11507 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1580:

/* Line 1455 of yacc.c  */
#line 11508 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1581:

/* Line 1455 of yacc.c  */
#line 11509 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { MYSQL_YYABORT; }
    break;

  case 1582:

/* Line 1455 of yacc.c  */
#line 11514 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { my_parse_error(ER(ER_ONLY_INTEGERS_ALLOWED)); }
    break;

  case 1586:

/* Line 1455 of yacc.c  */
#line 11525 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            
            if (!lex->parsing_options.allows_select_procedure)
            {
              my_error(ER_VIEW_SELECT_CLAUSE, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }

            if (&lex->select_lex != lex->current_select)
            {
              my_error(ER_WRONG_USAGE, MYF(0), "PROCEDURE", "subquery");
              MYSQL_YYABORT;
            }

            if (lex->result != NULL)
            {
              my_error(ER_WRONG_USAGE, MYF(0), "PROCEDURE", "INTO");
              MYSQL_YYABORT;
            }

            if ((lex->proc_analyse= new Proc_analyse_params) == NULL)
            {
              my_error(ER_OUTOFMEMORY, MYF(ME_FATALERROR));
              MYSQL_YYABORT;
            }
            
            lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
          }
    break;

  case 1588:

/* Line 1455 of yacc.c  */
#line 11558 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1589:

/* Line 1455 of yacc.c  */
#line 11560 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->proc_analyse->max_tree_elements= (yyvsp[(1) - (1)].ulonglong_number);
          }
    break;

  case 1590:

/* Line 1455 of yacc.c  */
#line 11564 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->proc_analyse->max_tree_elements= (yyvsp[(1) - (3)].ulonglong_number);
            Lex->proc_analyse->max_treemem= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 1591:

/* Line 1455 of yacc.c  */
#line 11572 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            int error;
            (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error);
            if (error != 0)
            {
              my_error(ER_WRONG_PARAMETERS_TO_PROCEDURE, MYF(0), "ANALYSE");
              MYSQL_YYABORT;
            }
          }
    break;

  case 1592:

/* Line 1455 of yacc.c  */
#line 11584 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (!lex->describe && (!(lex->result= new select_dumpvar())))
              MYSQL_YYABORT;
          }
    break;

  case 1593:

/* Line 1455 of yacc.c  */
#line 11590 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1595:

/* Line 1455 of yacc.c  */
#line 11595 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1596:

/* Line 1455 of yacc.c  */
#line 11600 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->result) 
            {
              my_var *var= new my_var((yyvsp[(2) - (2)].lex_str),0,0,(enum_field_types)0);
              if (var == NULL)
                MYSQL_YYABORT;
              ((select_dumpvar *)lex->result)->var_list.push_back(var);
            }
            else
            {
              /*
                The parser won't create select_result instance only
                if it's an EXPLAIN.
              */
              DBUG_ASSERT(lex->describe);
            }
          }
    break;

  case 1597:

/* Line 1455 of yacc.c  */
#line 11619 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
#ifndef DBUG_OFF
            sp_head *sp= lex->sphead;
#endif
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            if (!pctx || !(spv= pctx->find_variable((yyvsp[(1) - (1)].lex_str), false)))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
            if (lex->result)
            {
              my_var *var= new my_var((yyvsp[(1) - (1)].lex_str), 1, spv->offset, spv->type);

              if (var == NULL)
                MYSQL_YYABORT;

              ((select_dumpvar *) lex->result)->var_list.push_back(var);

#ifndef DBUG_OFF
              var->sp= sp;
#endif
            }
            else
            {
              /*
                The parser won't create select_result instance only
                if it's an EXPLAIN.
              */
              DBUG_ASSERT(lex->describe);
            }
          }
    break;

  case 1598:

/* Line 1455 of yacc.c  */
#line 11658 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (! Lex->parsing_options.allows_select_into)
            {
              my_error(ER_VIEW_SELECT_CLAUSE, MYF(0), "INTO");
              MYSQL_YYABORT;
            }
          }
    break;

  case 1600:

/* Line 1455 of yacc.c  */
#line 11670 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
            if (!(lex->exchange= new sql_exchange((yyvsp[(2) - (2)].lex_str).str, 0)) ||
                !(lex->result= new select_export(lex->exchange)))
              MYSQL_YYABORT;
          }
    break;

  case 1601:

/* Line 1455 of yacc.c  */
#line 11678 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->exchange->cs= (yyvsp[(4) - (4)].charset); }
    break;

  case 1603:

/* Line 1455 of yacc.c  */
#line 11681 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (!lex->describe)
            {
              lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
              if (!(lex->exchange= new sql_exchange((yyvsp[(2) - (2)].lex_str).str,1)))
                MYSQL_YYABORT;
              if (!(lex->result= new select_dump(lex->exchange)))
                MYSQL_YYABORT;
            }
          }
    break;

  case 1604:

/* Line 1455 of yacc.c  */
#line 11693 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
          }
    break;

  case 1605:

/* Line 1455 of yacc.c  */
#line 11704 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_DO;
            mysql_init_select(lex);
          }
    break;

  case 1606:

/* Line 1455 of yacc.c  */
#line 11710 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->insert_list= (yyvsp[(3) - (3)].item_list);
          }
    break;

  case 1607:

/* Line 1455 of yacc.c  */
#line 11721 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_DROP_TABLE;
            lex->drop_temporary= (yyvsp[(2) - (4)].num);
            lex->drop_if_exists= (yyvsp[(4) - (4)].num);
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
    break;

  case 1608:

/* Line 1455 of yacc.c  */
#line 11730 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1609:

/* Line 1455 of yacc.c  */
#line 11731 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1610:

/* Line 1455 of yacc.c  */
#line 11732 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Alter_drop *ad= new Alter_drop(Alter_drop::KEY, (yyvsp[(3) - (6)].lex_str).str);
            if (ad == NULL)
              MYSQL_YYABORT;
            lex->sql_command= SQLCOM_DROP_INDEX;
            lex->alter_info.reset();
            lex->alter_info.flags= Alter_info::ALTER_DROP_INDEX;
            lex->alter_info.drop_list.push_back(ad);
            if (!lex->current_select->add_table_to_list(lex->thd, (yyvsp[(5) - (6)].table), NULL,
                                                        TL_OPTION_UPDATING,
                                                        TL_READ_NO_INSERT,
                                                        MDL_SHARED_UPGRADABLE))
              MYSQL_YYABORT;
          }
    break;

  case 1611:

/* Line 1455 of yacc.c  */
#line 11747 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1612:

/* Line 1455 of yacc.c  */
#line 11749 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_DROP_DB;
            lex->drop_if_exists=(yyvsp[(3) - (4)].num);
            lex->name= (yyvsp[(4) - (4)].lex_str);
          }
    break;

  case 1613:

/* Line 1455 of yacc.c  */
#line 11756 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_name *spname;
            if ((yyvsp[(4) - (6)].lex_str).str &&
                (check_and_convert_db_name(&(yyvsp[(4) - (6)].lex_str), FALSE) != IDENT_NAME_OK))
               MYSQL_YYABORT;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_DROP_FUNCTION;
            lex->drop_if_exists= (yyvsp[(3) - (6)].num);
            spname= new sp_name((yyvsp[(4) - (6)].lex_str), (yyvsp[(6) - (6)].lex_str), true);
            if (spname == NULL)
              MYSQL_YYABORT;
            spname->init_qname(thd);
            lex->spname= spname;
          }
    break;

  case 1614:

/* Line 1455 of yacc.c  */
#line 11777 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            LEX_STRING db= {0, 0};
            sp_name *spname;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            if (thd->db && lex->copy_db_to(&db.str, &db.length))
              MYSQL_YYABORT;
            lex->sql_command = SQLCOM_DROP_FUNCTION;
            lex->drop_if_exists= (yyvsp[(3) - (4)].num);
            spname= new sp_name(db, (yyvsp[(4) - (4)].lex_str), false);
            if (spname == NULL)
              MYSQL_YYABORT;
            spname->init_qname(thd);
            lex->spname= spname;
          }
    break;

  case 1615:

/* Line 1455 of yacc.c  */
#line 11798 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_DROP_PROCEDURE;
            lex->drop_if_exists= (yyvsp[(3) - (4)].num);
            lex->spname= (yyvsp[(4) - (4)].spname);
          }
    break;

  case 1616:

/* Line 1455 of yacc.c  */
#line 11810 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_DROP_USER;
          }
    break;

  case 1617:

/* Line 1455 of yacc.c  */
#line 11814 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DROP_VIEW;
            lex->drop_if_exists= (yyvsp[(3) - (3)].num);
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
    break;

  case 1618:

/* Line 1455 of yacc.c  */
#line 11822 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1619:

/* Line 1455 of yacc.c  */
#line 11824 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->drop_if_exists= (yyvsp[(3) - (4)].num);
            Lex->spname= (yyvsp[(4) - (4)].spname);
            Lex->sql_command = SQLCOM_DROP_EVENT;
          }
    break;

  case 1620:

/* Line 1455 of yacc.c  */
#line 11830 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DROP_TRIGGER;
            lex->drop_if_exists= (yyvsp[(3) - (4)].num);
            lex->spname= (yyvsp[(4) - (4)].spname);
          }
    break;

  case 1621:

/* Line 1455 of yacc.c  */
#line 11837 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= DROP_TABLESPACE;
          }
    break;

  case 1622:

/* Line 1455 of yacc.c  */
#line 11842 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= DROP_LOGFILE_GROUP;
          }
    break;

  case 1623:

/* Line 1455 of yacc.c  */
#line 11847 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_DROP_SERVER;
            Lex->drop_if_exists= (yyvsp[(3) - (4)].num);
            Lex->server_options.server_name= (yyvsp[(4) - (4)].lex_str).str;
            Lex->server_options.server_name_length= (yyvsp[(4) - (4)].lex_str).length;
          }
    break;

  case 1626:

/* Line 1455 of yacc.c  */
#line 11862 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (1)].table), NULL,
                                           TL_OPTION_UPDATING,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
    break;

  case 1627:

/* Line 1455 of yacc.c  */
#line 11873 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (2)].table), NULL,
                                           TL_OPTION_UPDATING,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type,
                                           NULL,
                                           (yyvsp[(2) - (2)].string_list)))
              MYSQL_YYABORT;
          }
    break;

  case 1630:

/* Line 1455 of yacc.c  */
#line 11891 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (1)].table), NULL,
                                           TL_OPTION_UPDATING | TL_OPTION_ALIAS,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
    break;

  case 1631:

/* Line 1455 of yacc.c  */
#line 11901 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 1632:

/* Line 1455 of yacc.c  */
#line 11902 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1633:

/* Line 1455 of yacc.c  */
#line 11906 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 1634:

/* Line 1455 of yacc.c  */
#line 11907 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1642:

/* Line 1455 of yacc.c  */
#line 11930 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSERT;
            lex->duplicates= DUP_ERROR; 
            mysql_init_select(lex);
          }
    break;

  case 1643:

/* Line 1455 of yacc.c  */
#line 11938 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Select->set_lock_for_tables((yyvsp[(3) - (5)].lock_type));
            Lex->current_select= &Lex->select_lex;
          }
    break;

  case 1644:

/* Line 1455 of yacc.c  */
#line 11943 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1645:

/* Line 1455 of yacc.c  */
#line 11948 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_REPLACE;
            lex->duplicates= DUP_REPLACE;
            mysql_init_select(lex);
          }
    break;

  case 1646:

/* Line 1455 of yacc.c  */
#line 11955 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Select->set_lock_for_tables((yyvsp[(3) - (4)].lock_type));
            Lex->current_select= &Lex->select_lex;
          }
    break;

  case 1647:

/* Line 1455 of yacc.c  */
#line 11960 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1648:

/* Line 1455 of yacc.c  */
#line 11965 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
#ifdef HAVE_QUERY_CACHE
            /*
              If it is SP we do not allow insert optimisation whan result of
              insert visible only after the table unlocking but everyone can
              read table.
            */
            (yyval.lock_type)= (Lex->sphead ? TL_WRITE_DEFAULT : TL_WRITE_CONCURRENT_INSERT);
#else
            (yyval.lock_type)= TL_WRITE_CONCURRENT_INSERT;
#endif
          }
    break;

  case 1649:

/* Line 1455 of yacc.c  */
#line 11977 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
    break;

  case 1650:

/* Line 1455 of yacc.c  */
#line 11979 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
          Lex->keyword_delayed_begin_offset= (uint)(YYLIP->get_tok_start() -
                                                    YYTHD->query());
          Lex->keyword_delayed_end_offset= Lex->keyword_delayed_begin_offset +
                                           YYLIP->yyLength() + 1;
          (yyval.lock_type)= TL_WRITE_DELAYED;

          push_warning_printf(YYTHD, Sql_condition::WARN_LEVEL_WARN,
                              ER_WARN_DEPRECATED_SYNTAX,
                              ER(ER_WARN_DEPRECATED_SYNTAX),
                              "INSERT DELAYED", "INSERT");
        }
    break;

  case 1651:

/* Line 1455 of yacc.c  */
#line 11991 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE; }
    break;

  case 1652:

/* Line 1455 of yacc.c  */
#line 11995 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= (yyvsp[(1) - (1)].lock_type); }
    break;

  case 1653:

/* Line 1455 of yacc.c  */
#line 11997 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
          Lex->keyword_delayed_begin_offset= (uint)(YYLIP->get_tok_start() -
                                                    YYTHD->query());
          Lex->keyword_delayed_end_offset= Lex->keyword_delayed_begin_offset +
                                           YYLIP->yyLength() + 1;
          (yyval.lock_type)= TL_WRITE_DELAYED;

          push_warning_printf(YYTHD, Sql_condition::WARN_LEVEL_WARN,
                              ER_WARN_DEPRECATED_SYNTAX,
                              ER(ER_WARN_DEPRECATED_SYNTAX),
                              "REPLACE DELAYED", "REPLACE");
        }
    break;

  case 1654:

/* Line 1455 of yacc.c  */
#line 12012 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1655:

/* Line 1455 of yacc.c  */
#line 12013 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1656:

/* Line 1455 of yacc.c  */
#line 12018 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->field_list.empty();
            lex->many_values.empty();
            lex->insert_list=0;
          }
    break;

  case 1657:

/* Line 1455 of yacc.c  */
#line 12026 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1658:

/* Line 1455 of yacc.c  */
#line 12027 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1659:

/* Line 1455 of yacc.c  */
#line 12028 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1660:

/* Line 1455 of yacc.c  */
#line 12030 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (!(lex->insert_list = new List_item) ||
                lex->many_values.push_back(lex->insert_list))
              MYSQL_YYABORT;
          }
    break;

  case 1662:

/* Line 1455 of yacc.c  */
#line 12040 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->field_list.push_back((yyvsp[(3) - (3)].item)); }
    break;

  case 1663:

/* Line 1455 of yacc.c  */
#line 12041 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->field_list.push_back((yyvsp[(1) - (1)].item)); }
    break;

  case 1664:

/* Line 1455 of yacc.c  */
#line 12045 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1665:

/* Line 1455 of yacc.c  */
#line 12046 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1666:

/* Line 1455 of yacc.c  */
#line 12048 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Select->set_braces(0);}
    break;

  case 1667:

/* Line 1455 of yacc.c  */
#line 12049 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1668:

/* Line 1455 of yacc.c  */
#line 12051 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Select->set_braces(1);}
    break;

  case 1669:

/* Line 1455 of yacc.c  */
#line 12052 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1674:

/* Line 1455 of yacc.c  */
#line 12067 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->field_list.push_back((yyvsp[(1) - (3)].item)) ||
                lex->insert_list->push_back((yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1675:

/* Line 1455 of yacc.c  */
#line 12076 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1676:

/* Line 1455 of yacc.c  */
#line 12077 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1677:

/* Line 1455 of yacc.c  */
#line 12081 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1678:

/* Line 1455 of yacc.c  */
#line 12082 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1679:

/* Line 1455 of yacc.c  */
#line 12087 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
              if (!(Lex->insert_list = new List_item))
                MYSQL_YYABORT;
          }
    break;

  case 1680:

/* Line 1455 of yacc.c  */
#line 12092 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->many_values.push_back(lex->insert_list))
              MYSQL_YYABORT;
          }
    break;

  case 1681:

/* Line 1455 of yacc.c  */
#line 12100 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1683:

/* Line 1455 of yacc.c  */
#line 12106 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (Lex->insert_list->push_back((yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1684:

/* Line 1455 of yacc.c  */
#line 12111 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (Lex->insert_list->push_back((yyvsp[(1) - (1)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1685:

/* Line 1455 of yacc.c  */
#line 12118 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].item);}
    break;

  case 1686:

/* Line 1455 of yacc.c  */
#line 12120 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_default_value(Lex->current_context());
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1688:

/* Line 1455 of yacc.c  */
#line 12129 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->duplicates= DUP_UPDATE; }
    break;

  case 1690:

/* Line 1455 of yacc.c  */
#line 12137 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            mysql_init_select(lex);
            lex->sql_command= SQLCOM_UPDATE;
            lex->duplicates= DUP_ERROR; 
          }
    break;

  case 1691:

/* Line 1455 of yacc.c  */
#line 12145 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->select_lex.table_list.elements > 1)
              lex->sql_command= SQLCOM_UPDATE_MULTI;
            else if (lex->select_lex.get_table_list()->derived)
            {
              /* it is single table update and it is update of derived table */
              my_error(ER_NON_UPDATABLE_TABLE, MYF(0),
                       lex->select_lex.get_table_list()->alias, "UPDATE");
              MYSQL_YYABORT;
            }
            /*
              In case of multi-update setting write lock for all tables may
              be too pessimistic. We will decrease lock level if possible in
              mysql_multi_update().
            */
            Select->set_lock_for_tables((yyvsp[(3) - (7)].lock_type));
          }
    break;

  case 1692:

/* Line 1455 of yacc.c  */
#line 12163 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1695:

/* Line 1455 of yacc.c  */
#line 12173 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (add_item_to_list(YYTHD, (yyvsp[(1) - (3)].item)) || add_value_to_list(YYTHD, (yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1698:

/* Line 1455 of yacc.c  */
#line 12186 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
          LEX *lex= Lex;
          if (lex->update_list.push_back((yyvsp[(1) - (3)].item)) || 
              lex->value_list.push_back((yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1699:

/* Line 1455 of yacc.c  */
#line 12195 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
    break;

  case 1700:

/* Line 1455 of yacc.c  */
#line 12196 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
    break;

  case 1701:

/* Line 1455 of yacc.c  */
#line 12203 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DELETE;
            mysql_init_select(lex);
            YYPS->m_lock_type= TL_WRITE_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_WRITE;

            lex->ignore= 0;
            lex->select_lex.init_order();
          }
    break;

  case 1703:

/* Line 1455 of yacc.c  */
#line 12218 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(2) - (3)].table), NULL, TL_OPTION_UPDATING,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type,
                                           NULL,
                                           (yyvsp[(3) - (3)].string_list)))
              MYSQL_YYABORT;
            YYPS->m_lock_type= TL_READ_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_READ;
          }
    break;

  case 1704:

/* Line 1455 of yacc.c  */
#line 12229 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1705:

/* Line 1455 of yacc.c  */
#line 12231 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            mysql_init_multi_delete(Lex);
            YYPS->m_lock_type= TL_READ_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_READ;
          }
    break;

  case 1706:

/* Line 1455 of yacc.c  */
#line 12237 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (multi_delete_set_locks_and_link_aux_tables(Lex))
              MYSQL_YYABORT;
          }
    break;

  case 1707:

/* Line 1455 of yacc.c  */
#line 12242 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            mysql_init_multi_delete(Lex);
            YYPS->m_lock_type= TL_READ_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_READ;
          }
    break;

  case 1708:

/* Line 1455 of yacc.c  */
#line 12248 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (multi_delete_set_locks_and_link_aux_tables(Lex))
              MYSQL_YYABORT;
          }
    break;

  case 1711:

/* Line 1455 of yacc.c  */
#line 12261 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Table_ident *ti= new Table_ident((yyvsp[(1) - (2)].lex_str));
            if (ti == NULL)
              MYSQL_YYABORT;
            if (!Select->add_table_to_list(YYTHD,
                                           ti,
                                           NULL,
                                           TL_OPTION_UPDATING | TL_OPTION_ALIAS,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
    break;

  case 1712:

/* Line 1455 of yacc.c  */
#line 12274 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Table_ident *ti= new Table_ident(YYTHD, (yyvsp[(1) - (4)].lex_str), (yyvsp[(3) - (4)].lex_str), 0);
            if (ti == NULL)
              MYSQL_YYABORT;
            if (!Select->add_table_to_list(YYTHD,
                                           ti,
                                           NULL,
                                           TL_OPTION_UPDATING | TL_OPTION_ALIAS,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
    break;

  case 1713:

/* Line 1455 of yacc.c  */
#line 12289 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1714:

/* Line 1455 of yacc.c  */
#line 12290 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1715:

/* Line 1455 of yacc.c  */
#line 12294 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1716:

/* Line 1455 of yacc.c  */
#line 12295 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1717:

/* Line 1455 of yacc.c  */
#line 12299 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Select->options|= OPTION_QUICK; }
    break;

  case 1718:

/* Line 1455 of yacc.c  */
#line 12300 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { YYPS->m_lock_type= TL_WRITE_LOW_PRIORITY; }
    break;

  case 1719:

/* Line 1455 of yacc.c  */
#line 12301 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->ignore= 1; }
    break;

  case 1720:

/* Line 1455 of yacc.c  */
#line 12306 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX* lex= Lex;
            lex->sql_command= SQLCOM_TRUNCATE;
            lex->alter_info.reset();
            lex->select_lex.options= 0;
            lex->select_lex.sql_cache= SELECT_LEX::SQL_CACHE_UNSPECIFIED;
            lex->select_lex.init_order();
            YYPS->m_lock_type= TL_WRITE;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
    break;

  case 1721:

/* Line 1455 of yacc.c  */
#line 12317 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_truncate_table();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1728:

/* Line 1455 of yacc.c  */
#line 12342 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_CPU;
    }
    break;

  case 1729:

/* Line 1455 of yacc.c  */
#line 12346 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_MEMORY;
    }
    break;

  case 1730:

/* Line 1455 of yacc.c  */
#line 12350 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_BLOCK_IO;
    }
    break;

  case 1731:

/* Line 1455 of yacc.c  */
#line 12354 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_CONTEXT;
    }
    break;

  case 1732:

/* Line 1455 of yacc.c  */
#line 12358 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_PAGE_FAULTS;
    }
    break;

  case 1733:

/* Line 1455 of yacc.c  */
#line 12362 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_IPC;
    }
    break;

  case 1734:

/* Line 1455 of yacc.c  */
#line 12366 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_SWAPS;
    }
    break;

  case 1735:

/* Line 1455 of yacc.c  */
#line 12370 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_SOURCE;
    }
    break;

  case 1736:

/* Line 1455 of yacc.c  */
#line 12374 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_ALL;
    }
    break;

  case 1737:

/* Line 1455 of yacc.c  */
#line 12381 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_query_id= 0;
    }
    break;

  case 1738:

/* Line 1455 of yacc.c  */
#line 12385 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
      Lex->profile_query_id= atoi((yyvsp[(3) - (3)].lex_str).str);
    }
    break;

  case 1739:

/* Line 1455 of yacc.c  */
#line 12394 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->wild=0;
            mysql_init_select(lex);
            lex->current_select->parsing_place= SELECT_LIST;
            memset(&lex->create_info, 0, sizeof(lex->create_info));
          }
    break;

  case 1740:

/* Line 1455 of yacc.c  */
#line 12402 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Select->parsing_place= NO_MATTER;
          }
    break;

  case 1741:

/* Line 1455 of yacc.c  */
#line 12409 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_DATABASES;
             if (prepare_schema_table(YYTHD, lex, 0, SCH_SCHEMATA))
               MYSQL_YYABORT;
           }
    break;

  case 1742:

/* Line 1455 of yacc.c  */
#line 12416 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TABLES;
             lex->select_lex.db= (yyvsp[(3) - (4)].simple_string);
             if (prepare_schema_table(YYTHD, lex, 0, SCH_TABLE_NAMES))
               MYSQL_YYABORT;
           }
    break;

  case 1743:

/* Line 1455 of yacc.c  */
#line 12424 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TRIGGERS;
             lex->select_lex.db= (yyvsp[(3) - (4)].simple_string);
             if (prepare_schema_table(YYTHD, lex, 0, SCH_TRIGGERS))
               MYSQL_YYABORT;
           }
    break;

  case 1744:

/* Line 1455 of yacc.c  */
#line 12432 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_EVENTS;
             lex->select_lex.db= (yyvsp[(2) - (3)].simple_string);
             if (prepare_schema_table(YYTHD, lex, 0, SCH_EVENTS))
               MYSQL_YYABORT;
           }
    break;

  case 1745:

/* Line 1455 of yacc.c  */
#line 12440 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TABLE_STATUS;
             lex->select_lex.db= (yyvsp[(3) - (4)].simple_string);
             if (prepare_schema_table(YYTHD, lex, 0, SCH_TABLES))
               MYSQL_YYABORT;
           }
    break;

  case 1746:

/* Line 1455 of yacc.c  */
#line 12448 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_OPEN_TABLES;
            lex->select_lex.db= (yyvsp[(3) - (4)].simple_string);
            if (prepare_schema_table(YYTHD, lex, 0, SCH_OPEN_TABLES))
              MYSQL_YYABORT;
          }
    break;

  case 1747:

/* Line 1455 of yacc.c  */
#line 12456 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_PLUGINS;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_PLUGINS))
              MYSQL_YYABORT;
          }
    break;

  case 1748:

/* Line 1455 of yacc.c  */
#line 12463 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->create_info.db_type= (yyvsp[(2) - (3)].db_type); }
    break;

  case 1749:

/* Line 1455 of yacc.c  */
#line 12465 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->create_info.db_type= NULL; }
    break;

  case 1750:

/* Line 1455 of yacc.c  */
#line 12467 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_FIELDS;
            if ((yyvsp[(5) - (6)].simple_string))
              (yyvsp[(4) - (6)].table)->change_db((yyvsp[(5) - (6)].simple_string));
            if (prepare_schema_table(YYTHD, lex, (yyvsp[(4) - (6)].table), SCH_COLUMNS))
              MYSQL_YYABORT;
          }
    break;

  case 1751:

/* Line 1455 of yacc.c  */
#line 12476 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_SHOW_BINLOGS;
          }
    break;

  case 1752:

/* Line 1455 of yacc.c  */
#line 12480 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_HOSTS;
          }
    break;

  case 1753:

/* Line 1455 of yacc.c  */
#line 12484 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_BINLOG_EVENTS;
          }
    break;

  case 1755:

/* Line 1455 of yacc.c  */
#line 12489 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_RELAYLOG_EVENTS;
          }
    break;

  case 1757:

/* Line 1455 of yacc.c  */
#line 12494 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_KEYS;
            if ((yyvsp[(4) - (5)].simple_string))
              (yyvsp[(3) - (5)].table)->change_db((yyvsp[(4) - (5)].simple_string));
            if (prepare_schema_table(YYTHD, lex, (yyvsp[(3) - (5)].table), SCH_STATISTICS))
              MYSQL_YYABORT;
          }
    break;

  case 1758:

/* Line 1455 of yacc.c  */
#line 12503 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_STORAGE_ENGINES;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_ENGINES))
              MYSQL_YYABORT;
          }
    break;

  case 1759:

/* Line 1455 of yacc.c  */
#line 12510 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_PRIVILEGES;
          }
    break;

  case 1760:

/* Line 1455 of yacc.c  */
#line 12515 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (void) create_select_for_variable("warning_count"); }
    break;

  case 1761:

/* Line 1455 of yacc.c  */
#line 12517 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (void) create_select_for_variable("error_count"); }
    break;

  case 1762:

/* Line 1455 of yacc.c  */
#line 12519 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->sql_command = SQLCOM_SHOW_WARNS;}
    break;

  case 1763:

/* Line 1455 of yacc.c  */
#line 12521 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->sql_command = SQLCOM_SHOW_ERRORS;}
    break;

  case 1764:

/* Line 1455 of yacc.c  */
#line 12523 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            push_warning_printf(YYTHD, Sql_condition::WARN_LEVEL_WARN,
                                ER_WARN_DEPRECATED_SYNTAX,
                                ER(ER_WARN_DEPRECATED_SYNTAX),
                                "SHOW PROFILES", "Performance Schema");
            Lex->sql_command = SQLCOM_SHOW_PROFILES;
          }
    break;

  case 1765:

/* Line 1455 of yacc.c  */
#line 12531 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            push_warning_printf(YYTHD, Sql_condition::WARN_LEVEL_WARN,
                                ER_WARN_DEPRECATED_SYNTAX,
                                ER(ER_WARN_DEPRECATED_SYNTAX),
                                "SHOW PROFILE", "Performance Schema");
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_PROFILE;
            if (prepare_schema_table(YYTHD, lex, NULL, SCH_PROFILES) != 0)
              YYABORT;
          }
    break;

  case 1766:

/* Line 1455 of yacc.c  */
#line 12542 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS;
            lex->option_type= (yyvsp[(1) - (3)].var_type);
            if (prepare_schema_table(YYTHD, lex, 0, SCH_STATUS))
              MYSQL_YYABORT;
          }
    break;

  case 1767:

/* Line 1455 of yacc.c  */
#line 12550 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->sql_command= SQLCOM_SHOW_PROCESSLIST;}
    break;

  case 1768:

/* Line 1455 of yacc.c  */
#line 12552 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_VARIABLES;
            lex->option_type= (yyvsp[(1) - (3)].var_type);
            if (prepare_schema_table(YYTHD, lex, 0, SCH_VARIABLES))
              MYSQL_YYABORT;
          }
    break;

  case 1769:

/* Line 1455 of yacc.c  */
#line 12560 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_CHARSETS;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_CHARSETS))
              MYSQL_YYABORT;
          }
    break;

  case 1770:

/* Line 1455 of yacc.c  */
#line 12567 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_COLLATIONS;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_COLLATIONS))
              MYSQL_YYABORT;
          }
    break;

  case 1771:

/* Line 1455 of yacc.c  */
#line 12574 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_GRANTS;
            LEX_USER *curr_user;
            if (!(curr_user= (LEX_USER*) lex->thd->alloc(sizeof(st_lex_user))))
              MYSQL_YYABORT;
            memset(curr_user, 0, sizeof(st_lex_user));
            lex->grant_user= curr_user;
          }
    break;

  case 1772:

/* Line 1455 of yacc.c  */
#line 12584 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_GRANTS;
            lex->grant_user=(yyvsp[(3) - (3)].lex_user);
            lex->grant_user->password=null_lex_str;
          }
    break;

  case 1773:

/* Line 1455 of yacc.c  */
#line 12591 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command=SQLCOM_SHOW_CREATE_DB;
            Lex->create_info.options=(yyvsp[(3) - (4)].num);
            Lex->name= (yyvsp[(4) - (4)].lex_str);
          }
    break;

  case 1774:

/* Line 1455 of yacc.c  */
#line 12597 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (!lex->select_lex.add_table_to_list(YYTHD, (yyvsp[(3) - (3)].table), NULL,0))
              MYSQL_YYABORT;
            lex->only_view= 0;
            lex->create_info.storage_media= HA_SM_DEFAULT;
          }
    break;

  case 1775:

/* Line 1455 of yacc.c  */
#line 12606 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (!lex->select_lex.add_table_to_list(YYTHD, (yyvsp[(3) - (3)].table), NULL, 0))
              MYSQL_YYABORT;
            lex->only_view= 1;
          }
    break;

  case 1776:

/* Line 1455 of yacc.c  */
#line 12614 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_SHOW_MASTER_STAT;
          }
    break;

  case 1777:

/* Line 1455 of yacc.c  */
#line 12618 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_STAT;
          }
    break;

  case 1778:

/* Line 1455 of yacc.c  */
#line 12622 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            lex->sql_command = SQLCOM_SHOW_CREATE_PROC;
            lex->spname= (yyvsp[(3) - (3)].spname);
          }
    break;

  case 1779:

/* Line 1455 of yacc.c  */
#line 12629 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            lex->sql_command = SQLCOM_SHOW_CREATE_FUNC;
            lex->spname= (yyvsp[(3) - (3)].spname);
          }
    break;

  case 1780:

/* Line 1455 of yacc.c  */
#line 12636 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_CREATE_TRIGGER;
            lex->spname= (yyvsp[(3) - (3)].spname);
          }
    break;

  case 1781:

/* Line 1455 of yacc.c  */
#line 12642 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_PROC;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_PROCEDURES))
              MYSQL_YYABORT;
          }
    break;

  case 1782:

/* Line 1455 of yacc.c  */
#line 12649 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_FUNC;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_PROCEDURES))
              MYSQL_YYABORT;
          }
    break;

  case 1783:

/* Line 1455 of yacc.c  */
#line 12656 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_SHOW_PROC_CODE;
            Lex->spname= (yyvsp[(3) - (3)].spname);
          }
    break;

  case 1784:

/* Line 1455 of yacc.c  */
#line 12661 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_SHOW_FUNC_CODE;
            Lex->spname= (yyvsp[(3) - (3)].spname);
          }
    break;

  case 1785:

/* Line 1455 of yacc.c  */
#line 12666 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->spname= (yyvsp[(3) - (3)].spname);
            Lex->sql_command = SQLCOM_SHOW_CREATE_EVENT;
          }
    break;

  case 1786:

/* Line 1455 of yacc.c  */
#line 12674 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_STATUS; }
    break;

  case 1787:

/* Line 1455 of yacc.c  */
#line 12676 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_MUTEX; }
    break;

  case 1788:

/* Line 1455 of yacc.c  */
#line 12678 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_LOGS; }
    break;

  case 1793:

/* Line 1455 of yacc.c  */
#line 12692 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.simple_string)= 0; }
    break;

  case 1794:

/* Line 1455 of yacc.c  */
#line 12693 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.simple_string)= (yyvsp[(2) - (2)].lex_str).str; }
    break;

  case 1795:

/* Line 1455 of yacc.c  */
#line 12697 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->verbose=0; }
    break;

  case 1796:

/* Line 1455 of yacc.c  */
#line 12698 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->verbose=1; }
    break;

  case 1799:

/* Line 1455 of yacc.c  */
#line 12707 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->mi.log_file_name = 0; }
    break;

  case 1800:

/* Line 1455 of yacc.c  */
#line 12708 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->mi.log_file_name = (yyvsp[(2) - (2)].lex_str).str; }
    break;

  case 1801:

/* Line 1455 of yacc.c  */
#line 12712 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->mi.pos = 4; /* skip magic number */ }
    break;

  case 1802:

/* Line 1455 of yacc.c  */
#line 12713 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->mi.pos = (yyvsp[(2) - (2)].ulonglong_number); }
    break;

  case 1804:

/* Line 1455 of yacc.c  */
#line 12719 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->wild= new (YYTHD->mem_root) String((yyvsp[(2) - (2)].lex_str).str, (yyvsp[(2) - (2)].lex_str).length,
                                                    system_charset_info);
            if (Lex->wild == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1805:

/* Line 1455 of yacc.c  */
#line 12726 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Select->where= (yyvsp[(2) - (2)].item);
            if ((yyvsp[(2) - (2)].item))
              (yyvsp[(2) - (2)].item)->top_level_item();
          }
    break;

  case 1806:

/* Line 1455 of yacc.c  */
#line 12736 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            mysql_init_select(lex);
            lex->current_select->parsing_place= SELECT_LIST;
            lex->sql_command= SQLCOM_SHOW_FIELDS;
            lex->select_lex.db= 0;
            lex->verbose= 0;
            if (prepare_schema_table(YYTHD, lex, (yyvsp[(2) - (2)].table), SCH_COLUMNS))
              MYSQL_YYABORT;
          }
    break;

  case 1807:

/* Line 1455 of yacc.c  */
#line 12747 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Select->parsing_place= NO_MATTER;
          }
    break;

  case 1808:

/* Line 1455 of yacc.c  */
#line 12751 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->describe|= DESCRIBE_NORMAL; }
    break;

  case 1809:

/* Line 1455 of yacc.c  */
#line 12753 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->select_lex.options|= SELECT_DESCRIBE; }
    break;

  case 1817:

/* Line 1455 of yacc.c  */
#line 12771 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if ((Lex->explain_format= new Explain_format_traditional) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1818:

/* Line 1455 of yacc.c  */
#line 12776 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if ((Lex->explain_format= new Explain_format_traditional) == NULL)
              MYSQL_YYABORT;
            Lex->describe|= DESCRIBE_EXTENDED;
          }
    break;

  case 1819:

/* Line 1455 of yacc.c  */
#line 12782 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if ((Lex->explain_format= new Explain_format_traditional) == NULL)
              MYSQL_YYABORT;
            Lex->describe|= DESCRIBE_PARTITIONS;
          }
    break;

  case 1820:

/* Line 1455 of yacc.c  */
#line 12788 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (!my_strcasecmp(system_charset_info, (yyvsp[(3) - (3)].lex_str).str, "JSON"))
            {
              if ((Lex->explain_format= new Explain_format_JSON) == NULL)
                MYSQL_YYABORT;
              Lex->describe|= DESCRIBE_EXTENDED | DESCRIBE_PARTITIONS;
            }
            else if (!my_strcasecmp(system_charset_info, (yyvsp[(3) - (3)].lex_str).str, "TRADITIONAL"))
            {
              if ((Lex->explain_format= new Explain_format_traditional) == NULL)
                MYSQL_YYABORT;
            }
            else
            {
              my_error(ER_UNKNOWN_EXPLAIN_FORMAT, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 1821:

/* Line 1455 of yacc.c  */
#line 12809 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1822:

/* Line 1455 of yacc.c  */
#line 12810 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->wild= (yyvsp[(1) - (1)].string); }
    break;

  case 1823:

/* Line 1455 of yacc.c  */
#line 12812 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->wild= new (YYTHD->mem_root) String((const char*) (yyvsp[(1) - (1)].lex_str).str,
                                                    (yyvsp[(1) - (1)].lex_str).length,
                                                    system_charset_info);
            if (Lex->wild == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1824:

/* Line 1455 of yacc.c  */
#line 12826 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_FLUSH;
            lex->type= 0;
            lex->no_write_to_binlog= (yyvsp[(2) - (2)].num);
          }
    break;

  case 1825:

/* Line 1455 of yacc.c  */
#line 12833 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1826:

/* Line 1455 of yacc.c  */
#line 12838 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->type|= REFRESH_TABLES;
            /*
              Set type of metadata and table locks for
              FLUSH TABLES table_list [WITH READ LOCK].
            */
            YYPS->m_lock_type= TL_READ_NO_INSERT;
            YYPS->m_mdl_type= MDL_SHARED_HIGH_PRIO;
          }
    break;

  case 1827:

/* Line 1455 of yacc.c  */
#line 12847 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1828:

/* Line 1455 of yacc.c  */
#line 12848 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1830:

/* Line 1455 of yacc.c  */
#line 12853 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1831:

/* Line 1455 of yacc.c  */
#line 12855 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            TABLE_LIST *tables= Lex->query_tables;
            Lex->type|= REFRESH_READ_LOCK;
            for (; tables; tables= tables->next_global)
            {
              tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
              tables->required_type= FRMTYPE_TABLE; /* Don't try to flush views. */
              tables->open_type= OT_BASE_ONLY;      /* Ignore temporary tables. */
            }
          }
    break;

  case 1832:

/* Line 1455 of yacc.c  */
#line 12866 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (Lex->query_tables == NULL) // Table list can't be empty
            {
              my_parse_error(ER(ER_NO_TABLES_USED));
              MYSQL_YYABORT;
            } 
          }
    break;

  case 1833:

/* Line 1455 of yacc.c  */
#line 12874 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            TABLE_LIST *tables= Lex->query_tables;
            Lex->type|= REFRESH_FOR_EXPORT;
            for (; tables; tables= tables->next_global)
            {
              tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
              tables->required_type= FRMTYPE_TABLE; /* Don't try to flush views. */
              tables->open_type= OT_BASE_ONLY;      /* Ignore temporary tables. */
            }
          }
    break;

  case 1835:

/* Line 1455 of yacc.c  */
#line 12889 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1836:

/* Line 1455 of yacc.c  */
#line 12894 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_ERROR_LOG; }
    break;

  case 1837:

/* Line 1455 of yacc.c  */
#line 12896 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_ENGINE_LOG; }
    break;

  case 1838:

/* Line 1455 of yacc.c  */
#line 12898 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_GENERAL_LOG; }
    break;

  case 1839:

/* Line 1455 of yacc.c  */
#line 12900 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_SLOW_LOG; }
    break;

  case 1840:

/* Line 1455 of yacc.c  */
#line 12902 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_BINARY_LOG; }
    break;

  case 1841:

/* Line 1455 of yacc.c  */
#line 12904 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_RELAY_LOG; }
    break;

  case 1842:

/* Line 1455 of yacc.c  */
#line 12906 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_QUERY_CACHE_FREE; }
    break;

  case 1843:

/* Line 1455 of yacc.c  */
#line 12908 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_HOSTS; }
    break;

  case 1844:

/* Line 1455 of yacc.c  */
#line 12910 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_GRANT; }
    break;

  case 1845:

/* Line 1455 of yacc.c  */
#line 12912 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_LOG; }
    break;

  case 1846:

/* Line 1455 of yacc.c  */
#line 12914 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_STATUS; }
    break;

  case 1847:

/* Line 1455 of yacc.c  */
#line 12916 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_DES_KEY_FILE; }
    break;

  case 1848:

/* Line 1455 of yacc.c  */
#line 12918 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_USER_RESOURCES; }
    break;

  case 1849:

/* Line 1455 of yacc.c  */
#line 12922 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1850:

/* Line 1455 of yacc.c  */
#line 12923 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1851:

/* Line 1455 of yacc.c  */
#line 12928 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RESET; lex->type=0;
          }
    break;

  case 1852:

/* Line 1455 of yacc.c  */
#line 12933 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1855:

/* Line 1455 of yacc.c  */
#line 12942 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_SLAVE; }
    break;

  case 1856:

/* Line 1455 of yacc.c  */
#line 12943 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { }
    break;

  case 1857:

/* Line 1455 of yacc.c  */
#line 12944 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_MASTER; }
    break;

  case 1858:

/* Line 1455 of yacc.c  */
#line 12945 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_QUERY_CACHE;}
    break;

  case 1859:

/* Line 1455 of yacc.c  */
#line 12949 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->reset_slave_info.all= false; }
    break;

  case 1860:

/* Line 1455 of yacc.c  */
#line 12950 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->reset_slave_info.all= true; }
    break;

  case 1861:

/* Line 1455 of yacc.c  */
#line 12955 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->type=0;
            lex->sql_command = SQLCOM_PURGE;
          }
    break;

  case 1862:

/* Line 1455 of yacc.c  */
#line 12961 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1864:

/* Line 1455 of yacc.c  */
#line 12970 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->to_log = (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 1865:

/* Line 1455 of yacc.c  */
#line 12974 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->value_list.empty();
            lex->value_list.push_front((yyvsp[(2) - (2)].item));
            lex->sql_command= SQLCOM_PURGE_BEFORE;
          }
    break;

  case 1866:

/* Line 1455 of yacc.c  */
#line 12986 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->value_list.empty();
            lex->value_list.push_front((yyvsp[(3) - (3)].item));
            lex->sql_command= SQLCOM_KILL;
          }
    break;

  case 1867:

/* Line 1455 of yacc.c  */
#line 12995 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->type= 0; }
    break;

  case 1868:

/* Line 1455 of yacc.c  */
#line 12996 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->type= 0; }
    break;

  case 1869:

/* Line 1455 of yacc.c  */
#line 12997 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->type= ONLY_KILL_QUERY; }
    break;

  case 1870:

/* Line 1455 of yacc.c  */
#line 13004 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CHANGE_DB;
            lex->select_lex.db= (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 1871:

/* Line 1455 of yacc.c  */
#line 13015 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), 
                       (yyvsp[(2) - (2)].filetype) == FILETYPE_CSV ? "LOAD DATA" : "LOAD XML");
              MYSQL_YYABORT;
            }
          }
    break;

  case 1872:

/* Line 1455 of yacc.c  */
#line 13027 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_LOAD;
            lex->local_file=  (yyvsp[(5) - (7)].num);
            lex->duplicates= DUP_ERROR;
            lex->ignore= 0;
            if (!(lex->exchange= new sql_exchange((yyvsp[(7) - (7)].lex_str).str, 0, (yyvsp[(2) - (7)].filetype))))
              MYSQL_YYABORT;
          }
    break;

  case 1873:

/* Line 1455 of yacc.c  */
#line 13037 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(12) - (13)].table), NULL, TL_OPTION_UPDATING,
                                           (yyvsp[(4) - (13)].lock_type), MDL_SHARED_WRITE, NULL, (yyvsp[(13) - (13)].string_list)))
              MYSQL_YYABORT;
            lex->field_list.empty();
            lex->update_list.empty();
            lex->value_list.empty();
          }
    break;

  case 1874:

/* Line 1455 of yacc.c  */
#line 13047 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->exchange->cs= (yyvsp[(15) - (15)].charset); }
    break;

  case 1875:

/* Line 1455 of yacc.c  */
#line 13051 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1876:

/* Line 1455 of yacc.c  */
#line 13055 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.filetype)= FILETYPE_CSV; }
    break;

  case 1877:

/* Line 1455 of yacc.c  */
#line 13056 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.filetype)= FILETYPE_XML; }
    break;

  case 1878:

/* Line 1455 of yacc.c  */
#line 13060 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)=0;}
    break;

  case 1879:

/* Line 1455 of yacc.c  */
#line 13061 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)=1;}
    break;

  case 1880:

/* Line 1455 of yacc.c  */
#line 13065 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
    break;

  case 1881:

/* Line 1455 of yacc.c  */
#line 13067 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
#ifdef HAVE_QUERY_CACHE
            /*
              Ignore this option in SP to avoid problem with query cache
            */
            if (Lex->sphead != 0)
              (yyval.lock_type)= TL_WRITE_DEFAULT;
            else
#endif
              (yyval.lock_type)= TL_WRITE_CONCURRENT_INSERT;
          }
    break;

  case 1882:

/* Line 1455 of yacc.c  */
#line 13078 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
    break;

  case 1883:

/* Line 1455 of yacc.c  */
#line 13082 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->duplicates=DUP_ERROR; }
    break;

  case 1884:

/* Line 1455 of yacc.c  */
#line 13083 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->duplicates=DUP_REPLACE; }
    break;

  case 1885:

/* Line 1455 of yacc.c  */
#line 13084 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->ignore= 1; }
    break;

  case 1890:

/* Line 1455 of yacc.c  */
#line 13099 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->field_term= (yyvsp[(3) - (3)].string);
          }
    break;

  case 1891:

/* Line 1455 of yacc.c  */
#line 13104 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            DBUG_ASSERT(lex->exchange != 0);
            lex->exchange->enclosed= (yyvsp[(4) - (4)].string);
            lex->exchange->opt_enclosed= 1;
          }
    break;

  case 1892:

/* Line 1455 of yacc.c  */
#line 13111 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->enclosed= (yyvsp[(3) - (3)].string);
          }
    break;

  case 1893:

/* Line 1455 of yacc.c  */
#line 13116 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->escaped= (yyvsp[(3) - (3)].string);
          }
    break;

  case 1898:

/* Line 1455 of yacc.c  */
#line 13134 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->line_term= (yyvsp[(3) - (3)].string);
          }
    break;

  case 1899:

/* Line 1455 of yacc.c  */
#line 13139 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->line_start= (yyvsp[(3) - (3)].string);
          }
    break;

  case 1900:

/* Line 1455 of yacc.c  */
#line 13146 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { }
    break;

  case 1901:

/* Line 1455 of yacc.c  */
#line 13148 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->exchange->line_term = (yyvsp[(4) - (4)].string); }
    break;

  case 1903:

/* Line 1455 of yacc.c  */
#line 13153 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->skip_lines= atol((yyvsp[(2) - (3)].lex_str).str);
          }
    break;

  case 1904:

/* Line 1455 of yacc.c  */
#line 13160 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { }
    break;

  case 1905:

/* Line 1455 of yacc.c  */
#line 13162 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { }
    break;

  case 1906:

/* Line 1455 of yacc.c  */
#line 13166 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1907:

/* Line 1455 of yacc.c  */
#line 13167 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1908:

/* Line 1455 of yacc.c  */
#line 13168 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1909:

/* Line 1455 of yacc.c  */
#line 13173 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->field_list.push_back((yyvsp[(3) - (3)].item)); }
    break;

  case 1910:

/* Line 1455 of yacc.c  */
#line 13175 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->field_list.push_back((yyvsp[(1) - (1)].item)); }
    break;

  case 1911:

/* Line 1455 of yacc.c  */
#line 13179 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {(yyval.item)= (yyvsp[(1) - (1)].item);}
    break;

  case 1912:

/* Line 1455 of yacc.c  */
#line 13181 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_user_var_as_out_param((yyvsp[(2) - (2)].lex_str));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1913:

/* Line 1455 of yacc.c  */
#line 13189 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1914:

/* Line 1455 of yacc.c  */
#line 13190 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1917:

/* Line 1455 of yacc.c  */
#line 13200 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->update_list.push_back((yyvsp[(1) - (5)].item)) || 
                lex->value_list.push_back((yyvsp[(4) - (5)].item)))
                MYSQL_YYABORT;
            (yyvsp[(4) - (5)].item)->item_name.copy((yyvsp[(3) - (5)].simple_string), (uint) ((yyvsp[(5) - (5)].simple_string) - (yyvsp[(3) - (5)].simple_string)), YYTHD->charset());
          }
    break;

  case 1918:

/* Line 1455 of yacc.c  */
#line 13213 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX_STRING tmp;
            THD *thd= YYTHD;
            const CHARSET_INFO *cs_con= thd->variables.collation_connection;
            const CHARSET_INFO *cs_cli= thd->variables.character_set_client;
            uint repertoire= thd->lex->text_string_is_7bit &&
                             my_charset_is_ascii_based(cs_cli) ?
                             MY_REPERTOIRE_ASCII : MY_REPERTOIRE_UNICODE30;
            if (thd->charset_is_collation_connection ||
                (repertoire == MY_REPERTOIRE_ASCII &&
                 my_charset_is_ascii_based(cs_con)))
              tmp= (yyvsp[(1) - (1)].lex_str);
            else
            {
              if (thd->convert_string(&tmp, cs_con, (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, cs_cli))
                MYSQL_YYABORT;
            }
            (yyval.item)= new (thd->mem_root) Item_string(tmp.str, tmp.length, cs_con,
                                                DERIVATION_COERCIBLE,
                                                repertoire);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1919:

/* Line 1455 of yacc.c  */
#line 13237 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            uint repertoire= Lex->text_string_is_7bit ?
                             MY_REPERTOIRE_ASCII : MY_REPERTOIRE_UNICODE30;
            DBUG_ASSERT(my_charset_is_ascii_based(national_charset_info));
            (yyval.item)= new (YYTHD->mem_root) Item_string((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length,
                                                  national_charset_info,
                                                  DERIVATION_COERCIBLE,
                                                  repertoire);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1920:

/* Line 1455 of yacc.c  */
#line 13249 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Item_string *str= new (YYTHD->mem_root) Item_string((yyvsp[(2) - (2)].lex_str).str,
                                                                (yyvsp[(2) - (2)].lex_str).length, (yyvsp[(1) - (2)].charset));
            if (str == NULL)
              MYSQL_YYABORT;
            str->set_repertoire_from_value();
            str->set_cs_specified(TRUE);

            (yyval.item)= str;
          }
    break;

  case 1921:

/* Line 1455 of yacc.c  */
#line 13260 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Item_string* item= (Item_string*) (yyvsp[(1) - (2)].item);
            item->append((yyvsp[(2) - (2)].lex_str).str, (yyvsp[(2) - (2)].lex_str).length);
            if (!(item->collation.repertoire & MY_REPERTOIRE_EXTENDED))
            {
              /*
                 If the string has been pure ASCII so far,
                 check the new part.
              */
              const CHARSET_INFO *cs= YYTHD->variables.collation_connection;
              item->collation.repertoire|= my_string_repertoire(cs,
                                                                (yyvsp[(2) - (2)].lex_str).str,
                                                                (yyvsp[(2) - (2)].lex_str).length);
            }
          }
    break;

  case 1922:

/* Line 1455 of yacc.c  */
#line 13279 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.string)= new (YYTHD->mem_root) String((yyvsp[(1) - (1)].lex_str).str,
                                             (yyvsp[(1) - (1)].lex_str).length,
                                             YYTHD->variables.collation_connection);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1923:

/* Line 1455 of yacc.c  */
#line 13287 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Item *tmp= new (YYTHD->mem_root) Item_hex_string((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
            if (tmp == NULL)
              MYSQL_YYABORT;
            /*
              it is OK only emulate fix_fields, because we need only
              value of constant
            */
            tmp->quick_fix_field();
            (yyval.string)= tmp->val_str((String*) 0);
          }
    break;

  case 1924:

/* Line 1455 of yacc.c  */
#line 13299 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Item *tmp= new (YYTHD->mem_root) Item_bin_string((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
            if (tmp == NULL)
              MYSQL_YYABORT;
            /*
              it is OK only emulate fix_fields, because we need only
              value of constant
            */
            tmp->quick_fix_field();
            (yyval.string)= tmp->val_str((String*) 0);
          }
    break;

  case 1925:

/* Line 1455 of yacc.c  */
#line 13314 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;
            Item_param *item;
            if (! lex->parsing_options.allows_variable)
            {
              my_error(ER_VIEW_SELECT_VARIABLE, MYF(0));
              MYSQL_YYABORT;
            }
            item= new (thd->mem_root) Item_param((uint) (lip->get_tok_start() - thd->query()));
            if (!((yyval.item)= item) || lex->param_list.push_back(item))
            {
              my_message(ER_OUT_OF_RESOURCES, ER(ER_OUT_OF_RESOURCES), MYF(0));
              MYSQL_YYABORT;
            }
          }
    break;

  case 1926:

/* Line 1455 of yacc.c  */
#line 13334 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.item) = (yyvsp[(1) - (1)].item); }
    break;

  case 1927:

/* Line 1455 of yacc.c  */
#line 13335 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.item) = (yyvsp[(2) - (2)].item_num); }
    break;

  case 1928:

/* Line 1455 of yacc.c  */
#line 13337 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyvsp[(2) - (2)].item_num)->max_length++;
            (yyval.item)= (yyvsp[(2) - (2)].item_num)->neg();
          }
    break;

  case 1929:

/* Line 1455 of yacc.c  */
#line 13345 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.item) = (yyvsp[(1) - (1)].item); }
    break;

  case 1930:

/* Line 1455 of yacc.c  */
#line 13346 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.item) = (yyvsp[(1) - (1)].item_num); }
    break;

  case 1931:

/* Line 1455 of yacc.c  */
#line 13347 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].item); }
    break;

  case 1932:

/* Line 1455 of yacc.c  */
#line 13349 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item) = new (YYTHD->mem_root) Item_null();
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            YYLIP->next_state= MY_LEX_OPERATOR_OR_IDENT;
          }
    break;

  case 1933:

/* Line 1455 of yacc.c  */
#line 13356 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_int(NAME_STRING("FALSE"), 0, 1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1934:

/* Line 1455 of yacc.c  */
#line 13362 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_int(NAME_STRING("TRUE"), 1, 1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1935:

/* Line 1455 of yacc.c  */
#line 13368 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item) = new (YYTHD->mem_root) Item_hex_string((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1936:

/* Line 1455 of yacc.c  */
#line 13374 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_bin_string((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1937:

/* Line 1455 of yacc.c  */
#line 13380 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Item *tmp= new (YYTHD->mem_root) Item_hex_string((yyvsp[(2) - (2)].lex_str).str, (yyvsp[(2) - (2)].lex_str).length);
            if (tmp == NULL)
              MYSQL_YYABORT;
            /*
              it is OK only emulate fix_fieds, because we need only
              value of constant
            */
            tmp->quick_fix_field();
            String *str= tmp->val_str((String*) 0);

            Item_string *item_str;
            item_str= new (YYTHD->mem_root)
                        Item_string(null_name_string, /* name will be set in select_item */
                                    str ? str->ptr() : "",
                                    str ? str->length() : 0,
                                    (yyvsp[(1) - (2)].charset));
            if (!item_str ||
                !item_str->check_well_formed_result(&item_str->str_value, TRUE))
            {
              MYSQL_YYABORT;
            }

            item_str->set_repertoire_from_value();
            item_str->set_cs_specified(TRUE);

            (yyval.item)= item_str;
          }
    break;

  case 1938:

/* Line 1455 of yacc.c  */
#line 13409 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Item *tmp= new (YYTHD->mem_root) Item_bin_string((yyvsp[(2) - (2)].lex_str).str, (yyvsp[(2) - (2)].lex_str).length);
            if (tmp == NULL)
              MYSQL_YYABORT;
            /*
              it is OK only emulate fix_fieds, because we need only
              value of constant
            */
            tmp->quick_fix_field();
            String *str= tmp->val_str((String*) 0);

            Item_string *item_str;
            item_str= new (YYTHD->mem_root)
                        Item_string(null_name_string, /* name will be set in select_item */
                                    str ? str->ptr() : "",
                                    str ? str->length() : 0,
                                    (yyvsp[(1) - (2)].charset));
            if (!item_str ||
                !item_str->check_well_formed_result(&item_str->str_value, TRUE))
            {
              MYSQL_YYABORT;
            }

            item_str->set_cs_specified(TRUE);

            (yyval.item)= item_str;
          }
    break;

  case 1939:

/* Line 1455 of yacc.c  */
#line 13440 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            int error;
            (yyval.item_num)= new (YYTHD->mem_root)
                  Item_int((yyvsp[(1) - (1)].lex_str),
                           (longlong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, NULL, &error),
                           (yyvsp[(1) - (1)].lex_str).length);
            if ((yyval.item_num) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1940:

/* Line 1455 of yacc.c  */
#line 13450 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            int error;
            (yyval.item_num)= new (YYTHD->mem_root)
                  Item_int((yyvsp[(1) - (1)].lex_str),
                           (longlong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, NULL, &error),
                           (yyvsp[(1) - (1)].lex_str).length);
            if ((yyval.item_num) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1941:

/* Line 1455 of yacc.c  */
#line 13460 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_num)= new (YYTHD->mem_root) Item_uint((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
            if ((yyval.item_num) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1942:

/* Line 1455 of yacc.c  */
#line 13466 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_num)= new (YYTHD->mem_root) Item_decimal((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length,
                                                   YYTHD->charset());
            if (((yyval.item_num) == NULL) || (YYTHD->is_error()))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 1943:

/* Line 1455 of yacc.c  */
#line 13475 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item_num)= new (YYTHD->mem_root) Item_float((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
            if (((yyval.item_num) == NULL) || (YYTHD->is_error()))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 1944:

/* Line 1455 of yacc.c  */
#line 13487 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.item)= create_temporal_literal(YYTHD, (yyvsp[(2) - (2)].lex_str).str, (yyvsp[(2) - (2)].lex_str).length, YYCSCL,
                                              MYSQL_TYPE_DATE, true)))
              MYSQL_YYABORT;
          }
    break;

  case 1945:

/* Line 1455 of yacc.c  */
#line 13493 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.item)= create_temporal_literal(YYTHD, (yyvsp[(2) - (2)].lex_str).str, (yyvsp[(2) - (2)].lex_str).length, YYCSCL,
                                              MYSQL_TYPE_TIME, true)))
              MYSQL_YYABORT;
          }
    break;

  case 1946:

/* Line 1455 of yacc.c  */
#line 13499 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.item)= create_temporal_literal(YYTHD, (yyvsp[(2) - (2)].lex_str).str, (yyvsp[(2) - (2)].lex_str).length, YYCSCL,
                                              MYSQL_TYPE_DATETIME, true)))
              MYSQL_YYABORT;
          }
    break;

  case 1947:

/* Line 1455 of yacc.c  */
#line 13514 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.item)=(yyvsp[(1) - (1)].item); }
    break;

  case 1948:

/* Line 1455 of yacc.c  */
#line 13515 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.item)=(yyvsp[(1) - (1)].item); }
    break;

  case 1949:

/* Line 1455 of yacc.c  */
#line 13520 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            SELECT_LEX *sel= Select;
            (yyval.item)= new (YYTHD->mem_root) Item_field(Lex->current_context(),
                                                 NullS, (yyvsp[(1) - (3)].lex_str).str, "*");
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            sel->with_wild++;
          }
    break;

  case 1950:

/* Line 1455 of yacc.c  */
#line 13529 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            SELECT_LEX *sel= Select;
            const char* schema= thd->client_capabilities & CLIENT_NO_SCHEMA ?
                                  NullS : (yyvsp[(1) - (5)].lex_str).str;
            (yyval.item)= new (thd->mem_root) Item_field(Lex->current_context(),
                                               schema,
                                               (yyvsp[(3) - (5)].lex_str).str,"*");
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            sel->with_wild++;
          }
    break;

  case 1951:

/* Line 1455 of yacc.c  */
#line 13544 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.item)=(yyvsp[(1) - (1)].item); }
    break;

  case 1952:

/* Line 1455 of yacc.c  */
#line 13549 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx = lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            if (pctx && (spv= pctx->find_variable((yyvsp[(1) - (1)].lex_str), false)))
            {
              Lex_input_stream *lip= &thd->m_parser_state->m_lip;
              sp_head *sp= lex->sphead;

              DBUG_ASSERT(sp);

              /* We're compiling a stored procedure and found a variable */
              if (! lex->parsing_options.allows_variable)
              {
                my_error(ER_VIEW_SELECT_VARIABLE, MYF(0));
                MYSQL_YYABORT;
              }

              (yyval.item)=
                create_item_for_sp_var(
                  thd, (yyvsp[(1) - (1)].lex_str), spv,
                  sp->m_parser_data.get_current_stmt_start_ptr(),
                  lip->get_tok_start_prev(),
                  lip->get_tok_end());

              if ((yyval.item) == NULL)
                MYSQL_YYABORT;

              lex->safe_to_cache_query= false;
            }
            else
            {
              SELECT_LEX *sel=Select;
              if ((sel->parsing_place != IN_HAVING) ||
                  (sel->get_in_sum_expr() > 0))
              {
                (yyval.item)= new (thd->mem_root) Item_field(Lex->current_context(),
                                                   NullS, NullS, (yyvsp[(1) - (1)].lex_str).str);
              }
              else
              {
                (yyval.item)= new (thd->mem_root) Item_ref(Lex->current_context(),
                                                 NullS, NullS, (yyvsp[(1) - (1)].lex_str).str);
              }
              if ((yyval.item) == NULL)
                MYSQL_YYABORT;
            }
          }
    break;

  case 1953:

/* Line 1455 of yacc.c  */
#line 13599 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].item); }
    break;

  case 1954:

/* Line 1455 of yacc.c  */
#line 13604 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            SELECT_LEX *sel=Select;
            if ((sel->parsing_place != IN_HAVING) ||
                (sel->get_in_sum_expr() > 0))
            {
              (yyval.item)= new (thd->mem_root) Item_field(Lex->current_context(),
                                                 NullS, NullS, (yyvsp[(1) - (1)].lex_str).str);
            }
            else
            {
              (yyval.item)= new (thd->mem_root) Item_ref(Lex->current_context(),
                                               NullS, NullS, (yyvsp[(1) - (1)].lex_str).str);
            }
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1955:

/* Line 1455 of yacc.c  */
#line 13621 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].item); }
    break;

  case 1956:

/* Line 1455 of yacc.c  */
#line 13626 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            /*
              FIXME This will work ok in simple_ident_nospvar case because
              we can't meet simple_ident_nospvar in trigger now. But it
              should be changed in future.
            */
            if (sp && sp->m_type == SP_TYPE_TRIGGER &&
                (!my_strcasecmp(system_charset_info, (yyvsp[(1) - (3)].lex_str).str, "NEW") ||
                 !my_strcasecmp(system_charset_info, (yyvsp[(1) - (3)].lex_str).str, "OLD")))
            {
              Item_trigger_field *trg_fld;
              bool new_row= ((yyvsp[(1) - (3)].lex_str).str[0]=='N' || (yyvsp[(1) - (3)].lex_str).str[0]=='n');

              if (sp->m_trg_chistics.event == TRG_EVENT_INSERT &&
                  !new_row)
              {
                my_error(ER_TRG_NO_SUCH_ROW_IN_TRG, MYF(0), "OLD", "on INSERT");
                MYSQL_YYABORT;
              }

              if (sp->m_trg_chistics.event == TRG_EVENT_DELETE &&
                  new_row)
              {
                my_error(ER_TRG_NO_SUCH_ROW_IN_TRG, MYF(0), "NEW", "on DELETE");
                MYSQL_YYABORT;
              }

              DBUG_ASSERT(!new_row ||
                          (sp->m_trg_chistics.event == TRG_EVENT_INSERT ||
                           sp->m_trg_chistics.event == TRG_EVENT_UPDATE));
              const bool read_only=
                !(new_row && sp->m_trg_chistics.action_time == TRG_ACTION_BEFORE);
              trg_fld= new (thd->mem_root)
                         Item_trigger_field(Lex->current_context(),
                                            new_row ?
                                              Item_trigger_field::NEW_ROW:
                                              Item_trigger_field::OLD_ROW,
                                            (yyvsp[(3) - (3)].lex_str).str,
                                            SELECT_ACL,
                                            read_only);
              if (trg_fld == NULL)
                MYSQL_YYABORT;

              /*
                Let us add this item to list of all Item_trigger_field objects
                in trigger.
              */
              lex->sphead->m_trg_table_fields.link_in_list(
                trg_fld, &trg_fld->next_trg_field);

              (yyval.item)= trg_fld;
            }
            else
            {
              SELECT_LEX *sel= lex->current_select;
              if (sel->no_table_names_allowed)
              {
                my_error(ER_TABLENAME_NOT_ALLOWED_HERE,
                         MYF(0), (yyvsp[(1) - (3)].lex_str).str, thd->where);
              }
              if ((sel->parsing_place != IN_HAVING) ||
                  (sel->get_in_sum_expr() > 0))
              {
                (yyval.item)= new (thd->mem_root) Item_field(Lex->current_context(),
                                                   NullS, (yyvsp[(1) - (3)].lex_str).str, (yyvsp[(3) - (3)].lex_str).str);
              }
              else
              {
                (yyval.item)= new (thd->mem_root) Item_ref(Lex->current_context(),
                                                 NullS, (yyvsp[(1) - (3)].lex_str).str, (yyvsp[(3) - (3)].lex_str).str);
              }
              if ((yyval.item) == NULL)
                MYSQL_YYABORT;
            }
          }
    break;

  case 1957:

/* Line 1455 of yacc.c  */
#line 13706 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            SELECT_LEX *sel= lex->current_select;
            if (sel->no_table_names_allowed)
            {
              my_error(ER_TABLENAME_NOT_ALLOWED_HERE,
                       MYF(0), (yyvsp[(2) - (4)].lex_str).str, thd->where);
            }
            if ((sel->parsing_place != IN_HAVING) ||
                (sel->get_in_sum_expr() > 0))
            {
              (yyval.item)= new (thd->mem_root) Item_field(Lex->current_context(),
                                                 NullS, (yyvsp[(2) - (4)].lex_str).str, (yyvsp[(4) - (4)].lex_str).str);

            }
            else
            {
              (yyval.item)= new (thd->mem_root) Item_ref(Lex->current_context(),
                                               NullS, (yyvsp[(2) - (4)].lex_str).str, (yyvsp[(4) - (4)].lex_str).str);
            }
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1958:

/* Line 1455 of yacc.c  */
#line 13731 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            SELECT_LEX *sel= lex->current_select;
            const char* schema= (thd->client_capabilities & CLIENT_NO_SCHEMA ?
                                 NullS : (yyvsp[(1) - (5)].lex_str).str);
            if (sel->no_table_names_allowed)
            {
              my_error(ER_TABLENAME_NOT_ALLOWED_HERE,
                       MYF(0), (yyvsp[(3) - (5)].lex_str).str, thd->where);
            }
            if ((sel->parsing_place != IN_HAVING) ||
                (sel->get_in_sum_expr() > 0))
            {
              (yyval.item)= new (thd->mem_root) Item_field(Lex->current_context(),
                                                 schema,
                                                 (yyvsp[(3) - (5)].lex_str).str, (yyvsp[(5) - (5)].lex_str).str);
            }
            else
            {
              (yyval.item)= new (thd->mem_root) Item_ref(Lex->current_context(),
                                               schema,
                                               (yyvsp[(3) - (5)].lex_str).str, (yyvsp[(5) - (5)].lex_str).str);
            }
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1959:

/* Line 1455 of yacc.c  */
#line 13761 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str);}
    break;

  case 1960:

/* Line 1455 of yacc.c  */
#line 13763 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            TABLE_LIST *table= Select->table_list.first;
            if (my_strcasecmp(table_alias_charset, (yyvsp[(1) - (5)].lex_str).str, table->db))
            {
              my_error(ER_WRONG_DB_NAME, MYF(0), (yyvsp[(1) - (5)].lex_str).str);
              MYSQL_YYABORT;
            }
            if (my_strcasecmp(table_alias_charset, (yyvsp[(3) - (5)].lex_str).str,
                              table->table_name))
            {
              my_error(ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[(3) - (5)].lex_str).str);
              MYSQL_YYABORT;
            }
            (yyval.lex_str)=(yyvsp[(5) - (5)].lex_str);
          }
    break;

  case 1961:

/* Line 1455 of yacc.c  */
#line 13779 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            TABLE_LIST *table= Select->table_list.first;
            if (my_strcasecmp(table_alias_charset, (yyvsp[(1) - (3)].lex_str).str, table->alias))
            {
              my_error(ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[(1) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }
            (yyval.lex_str)=(yyvsp[(3) - (3)].lex_str);
          }
    break;

  case 1962:

/* Line 1455 of yacc.c  */
#line 13788 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(2) - (2)].lex_str);}
    break;

  case 1963:

/* Line 1455 of yacc.c  */
#line 13793 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.table)= new Table_ident((yyvsp[(1) - (1)].lex_str));
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1964:

/* Line 1455 of yacc.c  */
#line 13799 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.table)= new Table_ident(YYTHD, (yyvsp[(1) - (3)].lex_str),(yyvsp[(3) - (3)].lex_str),0);
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1965:

/* Line 1455 of yacc.c  */
#line 13805 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            /* For Delphi */
            (yyval.table)= new Table_ident((yyvsp[(2) - (2)].lex_str));
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1966:

/* Line 1455 of yacc.c  */
#line 13815 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.table)= new Table_ident((yyvsp[(1) - (2)].lex_str));
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1967:

/* Line 1455 of yacc.c  */
#line 13821 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.table)= new Table_ident(YYTHD, (yyvsp[(1) - (4)].lex_str),(yyvsp[(3) - (4)].lex_str),0);
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1968:

/* Line 1455 of yacc.c  */
#line 13830 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX_STRING db={(char*) any_db,3};
            (yyval.table)= new Table_ident(YYTHD, db,(yyvsp[(1) - (1)].lex_str),0);
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1969:

/* Line 1455 of yacc.c  */
#line 13839 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str); }
    break;

  case 1970:

/* Line 1455 of yacc.c  */
#line 13841 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
            {
              const CHARSET_INFO *cs= system_charset_info;
              int dummy_error;
              uint wlen= cs->cset->well_formed_len(cs, (yyvsp[(1) - (1)].lex_str).str,
                                                   (yyvsp[(1) - (1)].lex_str).str+(yyvsp[(1) - (1)].lex_str).length,
                                                   (yyvsp[(1) - (1)].lex_str).length, &dummy_error);
              if (wlen < (yyvsp[(1) - (1)].lex_str).length)
              {
                ErrConvString err((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, &my_charset_bin);
                my_error(ER_INVALID_CHARACTER_STRING, MYF(0),
                         cs->csname, err.ptr());
                MYSQL_YYABORT;
              }
              (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str);
            }
            else
            {
              if (thd->convert_string(&(yyval.lex_str), system_charset_info,
                                  (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
    break;

  case 1971:

/* Line 1455 of yacc.c  */
#line 13871 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (!strcont((yyvsp[(1) - (1)].lex_str).str, "\n"))
              (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str);
            else
            {
              my_error(ER_WRONG_VALUE, MYF(0), "argument contains not-allowed LF", (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 1972:

/* Line 1455 of yacc.c  */
#line 13884 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
              (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lex_str), system_charset_info,
                                  (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
    break;

  case 1973:

/* Line 1455 of yacc.c  */
#line 13900 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;

            if (thd->charset_is_collation_connection)
              (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lex_str), thd->variables.collation_connection,
                                  (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            } 
          }
    break;

  case 1974:

/* Line 1455 of yacc.c  */
#line 13916 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;

            if (thd->charset_is_character_set_filesystem)
              (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lex_str),
                                      thd->variables.character_set_filesystem,
                                      (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
    break;

  case 1975:

/* Line 1455 of yacc.c  */
#line 13932 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str); }
    break;

  case 1976:

/* Line 1455 of yacc.c  */
#line 13934 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            (yyval.lex_str).str= thd->strmake((yyvsp[(1) - (1)].symbol).str, (yyvsp[(1) - (1)].symbol).length);
            if ((yyval.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lex_str).length= (yyvsp[(1) - (1)].symbol).length;
          }
    break;

  case 1977:

/* Line 1455 of yacc.c  */
#line 13944 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str); }
    break;

  case 1978:

/* Line 1455 of yacc.c  */
#line 13946 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            (yyval.lex_str).str= thd->strmake((yyvsp[(1) - (1)].symbol).str, (yyvsp[(1) - (1)].symbol).length);
            if ((yyval.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lex_str).length= (yyvsp[(1) - (1)].symbol).length;
          }
    break;

  case 1979:

/* Line 1455 of yacc.c  */
#line 13956 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str);}
    break;

  case 1980:

/* Line 1455 of yacc.c  */
#line 13957 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str);}
    break;

  case 1981:

/* Line 1455 of yacc.c  */
#line 13958 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str);}
    break;

  case 1982:

/* Line 1455 of yacc.c  */
#line 13963 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            if (!((yyval.lex_user)=(LEX_USER*) thd->alloc(sizeof(st_lex_user))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user= (yyvsp[(1) - (1)].lex_str);
            (yyval.lex_user)->host.str= (char *) "%";
            (yyval.lex_user)->host.length= 1;
            (yyval.lex_user)->password= null_lex_str; 
            (yyval.lex_user)->plugin= empty_lex_str;
            (yyval.lex_user)->auth= empty_lex_str;
            (yyval.lex_user)->uses_identified_by_clause= false;
            (yyval.lex_user)->uses_identified_with_clause= false;
            (yyval.lex_user)->uses_identified_by_password_clause= false;
            (yyval.lex_user)->uses_authentication_string_clause= false;

            /*
              Trim whitespace as the values will go to a CHAR field
              when stored.
            */
            trim_whitespace(system_charset_info, &(yyval.lex_user)->user);

            if (check_string_char_length(&(yyval.lex_user)->user, ER(ER_USERNAME),
                                         USERNAME_CHAR_LENGTH,
                                         system_charset_info, 0))
              MYSQL_YYABORT;
          }
    break;

  case 1983:

/* Line 1455 of yacc.c  */
#line 13990 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            if (!((yyval.lex_user)=(LEX_USER*) thd->alloc(sizeof(st_lex_user))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user= (yyvsp[(1) - (3)].lex_str);
            (yyval.lex_user)->host= (yyvsp[(3) - (3)].lex_str);
            (yyval.lex_user)->password= null_lex_str; 
            (yyval.lex_user)->plugin= empty_lex_str;
            (yyval.lex_user)->auth= empty_lex_str;
            (yyval.lex_user)->uses_identified_by_clause= false;
            (yyval.lex_user)->uses_identified_with_clause= false;
            (yyval.lex_user)->uses_identified_by_password_clause= false;
            (yyval.lex_user)->uses_authentication_string_clause= false;

            if (check_string_char_length(&(yyval.lex_user)->user, ER(ER_USERNAME),
                                         USERNAME_CHAR_LENGTH,
                                         system_charset_info, 0) ||
                check_host_name(&(yyval.lex_user)->host))
              MYSQL_YYABORT;
            /*
              Convert hostname part of username to lowercase.
              It's OK to use in-place lowercase as long as
              the character set is utf8.
            */
            my_casedn_str(system_charset_info, (yyval.lex_user)->host.str);
            /*
              Trim whitespace as the values will go to a CHAR field
              when stored.
            */
            trim_whitespace(system_charset_info, &(yyval.lex_user)->user);
            trim_whitespace(system_charset_info, &(yyval.lex_user)->host);
          }
    break;

  case 1984:

/* Line 1455 of yacc.c  */
#line 14023 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (!((yyval.lex_user)=(LEX_USER*) YYTHD->alloc(sizeof(st_lex_user))))
              MYSQL_YYABORT;
            /* 
              empty LEX_USER means current_user and 
              will be handled in the  get_current_user() function
              later
            */
            memset((yyval.lex_user), 0, sizeof(LEX_USER));
          }
    break;

  case 1985:

/* Line 1455 of yacc.c  */
#line 14037 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1986:

/* Line 1455 of yacc.c  */
#line 14038 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1987:

/* Line 1455 of yacc.c  */
#line 14039 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1988:

/* Line 1455 of yacc.c  */
#line 14040 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1989:

/* Line 1455 of yacc.c  */
#line 14041 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1990:

/* Line 1455 of yacc.c  */
#line 14042 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1991:

/* Line 1455 of yacc.c  */
#line 14043 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1992:

/* Line 1455 of yacc.c  */
#line 14044 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1993:

/* Line 1455 of yacc.c  */
#line 14045 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1994:

/* Line 1455 of yacc.c  */
#line 14046 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1995:

/* Line 1455 of yacc.c  */
#line 14047 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1996:

/* Line 1455 of yacc.c  */
#line 14048 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1997:

/* Line 1455 of yacc.c  */
#line 14049 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1998:

/* Line 1455 of yacc.c  */
#line 14050 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 1999:

/* Line 1455 of yacc.c  */
#line 14051 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2000:

/* Line 1455 of yacc.c  */
#line 14052 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2001:

/* Line 1455 of yacc.c  */
#line 14053 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2002:

/* Line 1455 of yacc.c  */
#line 14054 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2003:

/* Line 1455 of yacc.c  */
#line 14055 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2004:

/* Line 1455 of yacc.c  */
#line 14056 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2005:

/* Line 1455 of yacc.c  */
#line 14057 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2006:

/* Line 1455 of yacc.c  */
#line 14058 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2007:

/* Line 1455 of yacc.c  */
#line 14059 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2008:

/* Line 1455 of yacc.c  */
#line 14060 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2009:

/* Line 1455 of yacc.c  */
#line 14061 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2010:

/* Line 1455 of yacc.c  */
#line 14062 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2011:

/* Line 1455 of yacc.c  */
#line 14063 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2012:

/* Line 1455 of yacc.c  */
#line 14064 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2013:

/* Line 1455 of yacc.c  */
#line 14065 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2014:

/* Line 1455 of yacc.c  */
#line 14066 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2015:

/* Line 1455 of yacc.c  */
#line 14067 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2016:

/* Line 1455 of yacc.c  */
#line 14068 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2017:

/* Line 1455 of yacc.c  */
#line 14069 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2018:

/* Line 1455 of yacc.c  */
#line 14070 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2019:

/* Line 1455 of yacc.c  */
#line 14071 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2020:

/* Line 1455 of yacc.c  */
#line 14072 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2021:

/* Line 1455 of yacc.c  */
#line 14073 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2022:

/* Line 1455 of yacc.c  */
#line 14074 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2023:

/* Line 1455 of yacc.c  */
#line 14075 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2024:

/* Line 1455 of yacc.c  */
#line 14076 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2025:

/* Line 1455 of yacc.c  */
#line 14077 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2026:

/* Line 1455 of yacc.c  */
#line 14078 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2027:

/* Line 1455 of yacc.c  */
#line 14079 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2028:

/* Line 1455 of yacc.c  */
#line 14080 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2029:

/* Line 1455 of yacc.c  */
#line 14081 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2030:

/* Line 1455 of yacc.c  */
#line 14082 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2031:

/* Line 1455 of yacc.c  */
#line 14083 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2032:

/* Line 1455 of yacc.c  */
#line 14084 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2033:

/* Line 1455 of yacc.c  */
#line 14085 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2034:

/* Line 1455 of yacc.c  */
#line 14086 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2035:

/* Line 1455 of yacc.c  */
#line 14096 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2036:

/* Line 1455 of yacc.c  */
#line 14097 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2037:

/* Line 1455 of yacc.c  */
#line 14098 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2038:

/* Line 1455 of yacc.c  */
#line 14099 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2039:

/* Line 1455 of yacc.c  */
#line 14100 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2040:

/* Line 1455 of yacc.c  */
#line 14101 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2041:

/* Line 1455 of yacc.c  */
#line 14102 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2042:

/* Line 1455 of yacc.c  */
#line 14103 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2043:

/* Line 1455 of yacc.c  */
#line 14104 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2044:

/* Line 1455 of yacc.c  */
#line 14105 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2045:

/* Line 1455 of yacc.c  */
#line 14106 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2046:

/* Line 1455 of yacc.c  */
#line 14107 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2047:

/* Line 1455 of yacc.c  */
#line 14108 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2048:

/* Line 1455 of yacc.c  */
#line 14109 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2049:

/* Line 1455 of yacc.c  */
#line 14110 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2050:

/* Line 1455 of yacc.c  */
#line 14111 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2051:

/* Line 1455 of yacc.c  */
#line 14112 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2052:

/* Line 1455 of yacc.c  */
#line 14113 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2053:

/* Line 1455 of yacc.c  */
#line 14114 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2054:

/* Line 1455 of yacc.c  */
#line 14115 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2055:

/* Line 1455 of yacc.c  */
#line 14116 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2056:

/* Line 1455 of yacc.c  */
#line 14117 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2057:

/* Line 1455 of yacc.c  */
#line 14118 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2058:

/* Line 1455 of yacc.c  */
#line 14119 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2059:

/* Line 1455 of yacc.c  */
#line 14120 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2060:

/* Line 1455 of yacc.c  */
#line 14121 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2061:

/* Line 1455 of yacc.c  */
#line 14122 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2062:

/* Line 1455 of yacc.c  */
#line 14123 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2063:

/* Line 1455 of yacc.c  */
#line 14124 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2064:

/* Line 1455 of yacc.c  */
#line 14125 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2065:

/* Line 1455 of yacc.c  */
#line 14126 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2066:

/* Line 1455 of yacc.c  */
#line 14127 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2067:

/* Line 1455 of yacc.c  */
#line 14128 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2068:

/* Line 1455 of yacc.c  */
#line 14129 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2069:

/* Line 1455 of yacc.c  */
#line 14130 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2070:

/* Line 1455 of yacc.c  */
#line 14131 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2071:

/* Line 1455 of yacc.c  */
#line 14132 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2072:

/* Line 1455 of yacc.c  */
#line 14133 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2073:

/* Line 1455 of yacc.c  */
#line 14134 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2074:

/* Line 1455 of yacc.c  */
#line 14135 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2075:

/* Line 1455 of yacc.c  */
#line 14136 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2076:

/* Line 1455 of yacc.c  */
#line 14137 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2077:

/* Line 1455 of yacc.c  */
#line 14138 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2078:

/* Line 1455 of yacc.c  */
#line 14139 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2079:

/* Line 1455 of yacc.c  */
#line 14140 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2080:

/* Line 1455 of yacc.c  */
#line 14145 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2081:

/* Line 1455 of yacc.c  */
#line 14146 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2082:

/* Line 1455 of yacc.c  */
#line 14147 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2083:

/* Line 1455 of yacc.c  */
#line 14148 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2084:

/* Line 1455 of yacc.c  */
#line 14149 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2085:

/* Line 1455 of yacc.c  */
#line 14150 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2086:

/* Line 1455 of yacc.c  */
#line 14151 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2087:

/* Line 1455 of yacc.c  */
#line 14152 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2088:

/* Line 1455 of yacc.c  */
#line 14153 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2089:

/* Line 1455 of yacc.c  */
#line 14154 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2090:

/* Line 1455 of yacc.c  */
#line 14155 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2091:

/* Line 1455 of yacc.c  */
#line 14156 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2092:

/* Line 1455 of yacc.c  */
#line 14157 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2093:

/* Line 1455 of yacc.c  */
#line 14158 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2094:

/* Line 1455 of yacc.c  */
#line 14159 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2095:

/* Line 1455 of yacc.c  */
#line 14160 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2096:

/* Line 1455 of yacc.c  */
#line 14161 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2097:

/* Line 1455 of yacc.c  */
#line 14162 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2098:

/* Line 1455 of yacc.c  */
#line 14163 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2099:

/* Line 1455 of yacc.c  */
#line 14164 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2100:

/* Line 1455 of yacc.c  */
#line 14165 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2101:

/* Line 1455 of yacc.c  */
#line 14166 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2102:

/* Line 1455 of yacc.c  */
#line 14167 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2103:

/* Line 1455 of yacc.c  */
#line 14168 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2104:

/* Line 1455 of yacc.c  */
#line 14169 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2105:

/* Line 1455 of yacc.c  */
#line 14170 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2106:

/* Line 1455 of yacc.c  */
#line 14171 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2107:

/* Line 1455 of yacc.c  */
#line 14172 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2108:

/* Line 1455 of yacc.c  */
#line 14173 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2109:

/* Line 1455 of yacc.c  */
#line 14174 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2110:

/* Line 1455 of yacc.c  */
#line 14175 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2111:

/* Line 1455 of yacc.c  */
#line 14176 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2112:

/* Line 1455 of yacc.c  */
#line 14177 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2113:

/* Line 1455 of yacc.c  */
#line 14178 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2114:

/* Line 1455 of yacc.c  */
#line 14179 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2115:

/* Line 1455 of yacc.c  */
#line 14180 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2116:

/* Line 1455 of yacc.c  */
#line 14181 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2117:

/* Line 1455 of yacc.c  */
#line 14182 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2118:

/* Line 1455 of yacc.c  */
#line 14183 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2119:

/* Line 1455 of yacc.c  */
#line 14184 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2120:

/* Line 1455 of yacc.c  */
#line 14185 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2121:

/* Line 1455 of yacc.c  */
#line 14186 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2122:

/* Line 1455 of yacc.c  */
#line 14187 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2123:

/* Line 1455 of yacc.c  */
#line 14188 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2124:

/* Line 1455 of yacc.c  */
#line 14189 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2125:

/* Line 1455 of yacc.c  */
#line 14190 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2126:

/* Line 1455 of yacc.c  */
#line 14191 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2127:

/* Line 1455 of yacc.c  */
#line 14192 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2128:

/* Line 1455 of yacc.c  */
#line 14193 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2129:

/* Line 1455 of yacc.c  */
#line 14194 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2130:

/* Line 1455 of yacc.c  */
#line 14195 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2131:

/* Line 1455 of yacc.c  */
#line 14196 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2132:

/* Line 1455 of yacc.c  */
#line 14197 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2133:

/* Line 1455 of yacc.c  */
#line 14198 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2134:

/* Line 1455 of yacc.c  */
#line 14199 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2135:

/* Line 1455 of yacc.c  */
#line 14200 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2136:

/* Line 1455 of yacc.c  */
#line 14201 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2137:

/* Line 1455 of yacc.c  */
#line 14202 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2138:

/* Line 1455 of yacc.c  */
#line 14203 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2139:

/* Line 1455 of yacc.c  */
#line 14204 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2140:

/* Line 1455 of yacc.c  */
#line 14205 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2141:

/* Line 1455 of yacc.c  */
#line 14206 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2142:

/* Line 1455 of yacc.c  */
#line 14207 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2143:

/* Line 1455 of yacc.c  */
#line 14208 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2144:

/* Line 1455 of yacc.c  */
#line 14209 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2145:

/* Line 1455 of yacc.c  */
#line 14210 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2146:

/* Line 1455 of yacc.c  */
#line 14211 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2147:

/* Line 1455 of yacc.c  */
#line 14212 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2148:

/* Line 1455 of yacc.c  */
#line 14213 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2149:

/* Line 1455 of yacc.c  */
#line 14214 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2150:

/* Line 1455 of yacc.c  */
#line 14215 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2151:

/* Line 1455 of yacc.c  */
#line 14216 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2152:

/* Line 1455 of yacc.c  */
#line 14217 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2153:

/* Line 1455 of yacc.c  */
#line 14218 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2154:

/* Line 1455 of yacc.c  */
#line 14219 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2155:

/* Line 1455 of yacc.c  */
#line 14220 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2156:

/* Line 1455 of yacc.c  */
#line 14221 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2157:

/* Line 1455 of yacc.c  */
#line 14222 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2158:

/* Line 1455 of yacc.c  */
#line 14223 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2159:

/* Line 1455 of yacc.c  */
#line 14224 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2160:

/* Line 1455 of yacc.c  */
#line 14225 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2161:

/* Line 1455 of yacc.c  */
#line 14226 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2162:

/* Line 1455 of yacc.c  */
#line 14227 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2163:

/* Line 1455 of yacc.c  */
#line 14228 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2164:

/* Line 1455 of yacc.c  */
#line 14229 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2165:

/* Line 1455 of yacc.c  */
#line 14230 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2166:

/* Line 1455 of yacc.c  */
#line 14231 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2167:

/* Line 1455 of yacc.c  */
#line 14232 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2168:

/* Line 1455 of yacc.c  */
#line 14233 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2169:

/* Line 1455 of yacc.c  */
#line 14234 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2170:

/* Line 1455 of yacc.c  */
#line 14235 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2171:

/* Line 1455 of yacc.c  */
#line 14236 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2172:

/* Line 1455 of yacc.c  */
#line 14237 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2173:

/* Line 1455 of yacc.c  */
#line 14238 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2174:

/* Line 1455 of yacc.c  */
#line 14239 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2175:

/* Line 1455 of yacc.c  */
#line 14240 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2176:

/* Line 1455 of yacc.c  */
#line 14241 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2177:

/* Line 1455 of yacc.c  */
#line 14242 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2178:

/* Line 1455 of yacc.c  */
#line 14243 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2179:

/* Line 1455 of yacc.c  */
#line 14244 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2180:

/* Line 1455 of yacc.c  */
#line 14245 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2181:

/* Line 1455 of yacc.c  */
#line 14246 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2182:

/* Line 1455 of yacc.c  */
#line 14247 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2183:

/* Line 1455 of yacc.c  */
#line 14248 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2184:

/* Line 1455 of yacc.c  */
#line 14249 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2185:

/* Line 1455 of yacc.c  */
#line 14250 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2186:

/* Line 1455 of yacc.c  */
#line 14251 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2187:

/* Line 1455 of yacc.c  */
#line 14252 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2188:

/* Line 1455 of yacc.c  */
#line 14253 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2189:

/* Line 1455 of yacc.c  */
#line 14254 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2190:

/* Line 1455 of yacc.c  */
#line 14255 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2191:

/* Line 1455 of yacc.c  */
#line 14256 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2192:

/* Line 1455 of yacc.c  */
#line 14257 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2193:

/* Line 1455 of yacc.c  */
#line 14258 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2194:

/* Line 1455 of yacc.c  */
#line 14259 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2195:

/* Line 1455 of yacc.c  */
#line 14260 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2196:

/* Line 1455 of yacc.c  */
#line 14261 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2197:

/* Line 1455 of yacc.c  */
#line 14262 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2198:

/* Line 1455 of yacc.c  */
#line 14263 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2199:

/* Line 1455 of yacc.c  */
#line 14264 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2200:

/* Line 1455 of yacc.c  */
#line 14265 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2201:

/* Line 1455 of yacc.c  */
#line 14266 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2202:

/* Line 1455 of yacc.c  */
#line 14267 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2203:

/* Line 1455 of yacc.c  */
#line 14268 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2204:

/* Line 1455 of yacc.c  */
#line 14269 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2205:

/* Line 1455 of yacc.c  */
#line 14270 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2206:

/* Line 1455 of yacc.c  */
#line 14271 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2207:

/* Line 1455 of yacc.c  */
#line 14272 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2208:

/* Line 1455 of yacc.c  */
#line 14273 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2209:

/* Line 1455 of yacc.c  */
#line 14274 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2210:

/* Line 1455 of yacc.c  */
#line 14275 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2211:

/* Line 1455 of yacc.c  */
#line 14276 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2212:

/* Line 1455 of yacc.c  */
#line 14277 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2213:

/* Line 1455 of yacc.c  */
#line 14278 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2214:

/* Line 1455 of yacc.c  */
#line 14279 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2215:

/* Line 1455 of yacc.c  */
#line 14280 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2216:

/* Line 1455 of yacc.c  */
#line 14281 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2217:

/* Line 1455 of yacc.c  */
#line 14282 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2218:

/* Line 1455 of yacc.c  */
#line 14283 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2219:

/* Line 1455 of yacc.c  */
#line 14284 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2220:

/* Line 1455 of yacc.c  */
#line 14285 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2221:

/* Line 1455 of yacc.c  */
#line 14286 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2222:

/* Line 1455 of yacc.c  */
#line 14287 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2223:

/* Line 1455 of yacc.c  */
#line 14288 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2224:

/* Line 1455 of yacc.c  */
#line 14289 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2225:

/* Line 1455 of yacc.c  */
#line 14290 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2226:

/* Line 1455 of yacc.c  */
#line 14291 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2227:

/* Line 1455 of yacc.c  */
#line 14292 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2228:

/* Line 1455 of yacc.c  */
#line 14293 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2229:

/* Line 1455 of yacc.c  */
#line 14294 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2230:

/* Line 1455 of yacc.c  */
#line 14295 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2231:

/* Line 1455 of yacc.c  */
#line 14296 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2232:

/* Line 1455 of yacc.c  */
#line 14297 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2233:

/* Line 1455 of yacc.c  */
#line 14298 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2234:

/* Line 1455 of yacc.c  */
#line 14299 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2235:

/* Line 1455 of yacc.c  */
#line 14300 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2236:

/* Line 1455 of yacc.c  */
#line 14301 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2237:

/* Line 1455 of yacc.c  */
#line 14302 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2238:

/* Line 1455 of yacc.c  */
#line 14303 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2239:

/* Line 1455 of yacc.c  */
#line 14304 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2240:

/* Line 1455 of yacc.c  */
#line 14305 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2241:

/* Line 1455 of yacc.c  */
#line 14306 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2242:

/* Line 1455 of yacc.c  */
#line 14307 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2243:

/* Line 1455 of yacc.c  */
#line 14308 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2244:

/* Line 1455 of yacc.c  */
#line 14309 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2245:

/* Line 1455 of yacc.c  */
#line 14310 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2246:

/* Line 1455 of yacc.c  */
#line 14311 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2247:

/* Line 1455 of yacc.c  */
#line 14312 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2248:

/* Line 1455 of yacc.c  */
#line 14313 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2249:

/* Line 1455 of yacc.c  */
#line 14314 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2250:

/* Line 1455 of yacc.c  */
#line 14315 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2251:

/* Line 1455 of yacc.c  */
#line 14316 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2252:

/* Line 1455 of yacc.c  */
#line 14317 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2253:

/* Line 1455 of yacc.c  */
#line 14318 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2254:

/* Line 1455 of yacc.c  */
#line 14319 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2255:

/* Line 1455 of yacc.c  */
#line 14320 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2256:

/* Line 1455 of yacc.c  */
#line 14321 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2257:

/* Line 1455 of yacc.c  */
#line 14322 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2258:

/* Line 1455 of yacc.c  */
#line 14323 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2259:

/* Line 1455 of yacc.c  */
#line 14324 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2260:

/* Line 1455 of yacc.c  */
#line 14325 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2261:

/* Line 1455 of yacc.c  */
#line 14326 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2262:

/* Line 1455 of yacc.c  */
#line 14327 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2263:

/* Line 1455 of yacc.c  */
#line 14328 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2264:

/* Line 1455 of yacc.c  */
#line 14329 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2265:

/* Line 1455 of yacc.c  */
#line 14330 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2266:

/* Line 1455 of yacc.c  */
#line 14331 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2267:

/* Line 1455 of yacc.c  */
#line 14332 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2268:

/* Line 1455 of yacc.c  */
#line 14333 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2269:

/* Line 1455 of yacc.c  */
#line 14334 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2270:

/* Line 1455 of yacc.c  */
#line 14335 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2271:

/* Line 1455 of yacc.c  */
#line 14336 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2272:

/* Line 1455 of yacc.c  */
#line 14337 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2273:

/* Line 1455 of yacc.c  */
#line 14338 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2274:

/* Line 1455 of yacc.c  */
#line 14339 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2275:

/* Line 1455 of yacc.c  */
#line 14340 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2276:

/* Line 1455 of yacc.c  */
#line 14341 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2277:

/* Line 1455 of yacc.c  */
#line 14342 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2278:

/* Line 1455 of yacc.c  */
#line 14343 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2279:

/* Line 1455 of yacc.c  */
#line 14344 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2280:

/* Line 1455 of yacc.c  */
#line 14345 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2281:

/* Line 1455 of yacc.c  */
#line 14346 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2282:

/* Line 1455 of yacc.c  */
#line 14347 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2283:

/* Line 1455 of yacc.c  */
#line 14348 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2284:

/* Line 1455 of yacc.c  */
#line 14349 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2285:

/* Line 1455 of yacc.c  */
#line 14350 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2286:

/* Line 1455 of yacc.c  */
#line 14351 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2287:

/* Line 1455 of yacc.c  */
#line 14352 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2288:

/* Line 1455 of yacc.c  */
#line 14353 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2289:

/* Line 1455 of yacc.c  */
#line 14354 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2290:

/* Line 1455 of yacc.c  */
#line 14355 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2291:

/* Line 1455 of yacc.c  */
#line 14356 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2292:

/* Line 1455 of yacc.c  */
#line 14357 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2293:

/* Line 1455 of yacc.c  */
#line 14358 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2294:

/* Line 1455 of yacc.c  */
#line 14359 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2295:

/* Line 1455 of yacc.c  */
#line 14360 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2296:

/* Line 1455 of yacc.c  */
#line 14361 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2297:

/* Line 1455 of yacc.c  */
#line 14362 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2298:

/* Line 1455 of yacc.c  */
#line 14363 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2299:

/* Line 1455 of yacc.c  */
#line 14364 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2300:

/* Line 1455 of yacc.c  */
#line 14365 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2301:

/* Line 1455 of yacc.c  */
#line 14366 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2302:

/* Line 1455 of yacc.c  */
#line 14367 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2303:

/* Line 1455 of yacc.c  */
#line 14368 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2304:

/* Line 1455 of yacc.c  */
#line 14369 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2305:

/* Line 1455 of yacc.c  */
#line 14370 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2306:

/* Line 1455 of yacc.c  */
#line 14371 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2307:

/* Line 1455 of yacc.c  */
#line 14372 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2308:

/* Line 1455 of yacc.c  */
#line 14373 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2309:

/* Line 1455 of yacc.c  */
#line 14374 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2310:

/* Line 1455 of yacc.c  */
#line 14375 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2311:

/* Line 1455 of yacc.c  */
#line 14376 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2312:

/* Line 1455 of yacc.c  */
#line 14377 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2313:

/* Line 1455 of yacc.c  */
#line 14378 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2314:

/* Line 1455 of yacc.c  */
#line 14379 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2315:

/* Line 1455 of yacc.c  */
#line 14380 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2316:

/* Line 1455 of yacc.c  */
#line 14381 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2317:

/* Line 1455 of yacc.c  */
#line 14382 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2318:

/* Line 1455 of yacc.c  */
#line 14383 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2319:

/* Line 1455 of yacc.c  */
#line 14384 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2320:

/* Line 1455 of yacc.c  */
#line 14385 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2321:

/* Line 1455 of yacc.c  */
#line 14386 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2322:

/* Line 1455 of yacc.c  */
#line 14387 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2323:

/* Line 1455 of yacc.c  */
#line 14388 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2324:

/* Line 1455 of yacc.c  */
#line 14389 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2325:

/* Line 1455 of yacc.c  */
#line 14390 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2326:

/* Line 1455 of yacc.c  */
#line 14391 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2327:

/* Line 1455 of yacc.c  */
#line 14392 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2328:

/* Line 1455 of yacc.c  */
#line 14393 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2329:

/* Line 1455 of yacc.c  */
#line 14394 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2330:

/* Line 1455 of yacc.c  */
#line 14395 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2331:

/* Line 1455 of yacc.c  */
#line 14396 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2332:

/* Line 1455 of yacc.c  */
#line 14397 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2333:

/* Line 1455 of yacc.c  */
#line 14398 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2334:

/* Line 1455 of yacc.c  */
#line 14399 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2335:

/* Line 1455 of yacc.c  */
#line 14400 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2336:

/* Line 1455 of yacc.c  */
#line 14412 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            mysql_init_select(lex);
            lex->sql_command= SQLCOM_SET_OPTION;
            lex->option_type= OPT_SESSION;
            lex->var_list.empty();
            lex->one_shot_set= 0;
            lex->autocommit= 0;

            sp_create_assignment_lex(YYTHD, YY_TOKEN_END);
          }
    break;

  case 2337:

/* Line 1455 of yacc.c  */
#line 14424 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2338:

/* Line 1455 of yacc.c  */
#line 14431 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (sp_create_assignment_instr(YYTHD, YY_TOKEN_END))
              MYSQL_YYABORT;
          }
    break;

  case 2340:

/* Line 1455 of yacc.c  */
#line 14437 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->option_type= OPT_DEFAULT;
          }
    break;

  case 2341:

/* Line 1455 of yacc.c  */
#line 14441 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (sp_create_assignment_instr(YYTHD, YY_TOKEN_END))
              MYSQL_YYABORT;
          }
    break;

  case 2342:

/* Line 1455 of yacc.c  */
#line 14446 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->option_type= (yyvsp[(1) - (1)].var_type);
          }
    break;

  case 2344:

/* Line 1455 of yacc.c  */
#line 14456 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (sp_create_assignment_instr(YYTHD, YY_TOKEN_END))
              MYSQL_YYABORT; 
          }
    break;

  case 2346:

/* Line 1455 of yacc.c  */
#line 14462 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (sp_create_assignment_instr(YYTHD, YY_TOKEN_END))
              MYSQL_YYABORT; 
          }
    break;

  case 2349:

/* Line 1455 of yacc.c  */
#line 14476 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            sp_create_assignment_lex(YYTHD, YY_TOKEN_START);
          }
    break;

  case 2350:

/* Line 1455 of yacc.c  */
#line 14480 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (sp_create_assignment_instr(YYTHD, YY_TOKEN_END))
              MYSQL_YYABORT; 
          }
    break;

  case 2351:

/* Line 1455 of yacc.c  */
#line 14485 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            sp_create_assignment_lex(YYTHD, YY_TOKEN_START);
          }
    break;

  case 2352:

/* Line 1455 of yacc.c  */
#line 14489 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (sp_create_assignment_instr(YYTHD, YY_TOKEN_END))
              MYSQL_YYABORT; 
          }
    break;

  case 2353:

/* Line 1455 of yacc.c  */
#line 14498 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->option_type= (yyvsp[(1) - (1)].var_type);
          }
    break;

  case 2356:

/* Line 1455 of yacc.c  */
#line 14506 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_GLOBAL; }
    break;

  case 2357:

/* Line 1455 of yacc.c  */
#line 14507 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2358:

/* Line 1455 of yacc.c  */
#line 14508 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2359:

/* Line 1455 of yacc.c  */
#line 14512 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2360:

/* Line 1455 of yacc.c  */
#line 14513 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_GLOBAL; }
    break;

  case 2361:

/* Line 1455 of yacc.c  */
#line 14514 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2362:

/* Line 1455 of yacc.c  */
#line 14515 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2363:

/* Line 1455 of yacc.c  */
#line 14519 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_DEFAULT; }
    break;

  case 2364:

/* Line 1455 of yacc.c  */
#line 14520 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_GLOBAL; }
    break;

  case 2365:

/* Line 1455 of yacc.c  */
#line 14521 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2366:

/* Line 1455 of yacc.c  */
#line 14522 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2367:

/* Line 1455 of yacc.c  */
#line 14528 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;

            if ((yyvsp[(1) - (3)].variable).var && (yyvsp[(1) - (3)].variable).var != trg_new_row_fake_var)
            {
              /* It is a system variable. */
              if (set_system_variable(thd, &(yyvsp[(1) - (3)].variable), lex->option_type, (yyvsp[(3) - (3)].item)))
                MYSQL_YYABORT;
            }
            else
            {
              /*
                Not in trigger assigning value to new row,
                and option_type preceeding local variable is illegal.
              */
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
          }
    break;

  case 2368:

/* Line 1455 of yacc.c  */
#line 14553 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            sp_head *sp= Lex->sphead;

            if (sp)
              sp->m_parser_data.push_expr_start_ptr(YY_TOKEN_START);
          }
    break;

  case 2369:

/* Line 1455 of yacc.c  */
#line 14560 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            const char *expr_start_ptr= NULL;

            if (sp)
              expr_start_ptr= sp->m_parser_data.pop_expr_start_ptr();

            if ((yyvsp[(1) - (4)].variable).var == trg_new_row_fake_var)
            {
              DBUG_ASSERT(sp);
              DBUG_ASSERT(expr_start_ptr);

              /* We are parsing trigger and this is a trigger NEW-field. */

              LEX_STRING expr_query= EMPTY_STR;

              if (!(yyvsp[(4) - (4)].item))
              {
                // This is: SET NEW.x = DEFAULT
                // DEFAULT clause is not supported in triggers.

                my_parse_error(ER(ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
              }
              else if (lex->is_metadata_used())
              {
                expr_query= make_string(thd, expr_start_ptr, YY_TOKEN_END);

                if (!expr_query.str)
                  MYSQL_YYABORT;
              }

              if (set_trigger_new_row(thd, (yyvsp[(1) - (4)].variable).base_name, (yyvsp[(4) - (4)].item), expr_query))
                MYSQL_YYABORT;
            }
            else if ((yyvsp[(1) - (4)].variable).var)
            {
              /* We're not parsing SP and this is a system variable. */

              if (set_system_variable(thd, &(yyvsp[(1) - (4)].variable), lex->option_type, (yyvsp[(4) - (4)].item)))
                MYSQL_YYABORT;
            }
            else
            {
              DBUG_ASSERT(sp);
              DBUG_ASSERT(expr_start_ptr);

              /* We're parsing SP and this is an SP-variable. */

              sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
              sp_variable *spv= pctx->find_variable((yyvsp[(1) - (4)].variable).base_name, false);

              LEX_STRING expr_query= EMPTY_STR;

              if (!(yyvsp[(4) - (4)].item))
              {
                // This is: SET x = DEFAULT, where x is a SP-variable.
                // This is not supported.

                my_parse_error(ER(ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
              }
              else if (lex->is_metadata_used())
              {
                expr_query= make_string(thd, expr_start_ptr, YY_TOKEN_END);

                if (!expr_query.str)
                  MYSQL_YYABORT;
              }

              /*
                NOTE: every SET-expression has its own LEX-object, even if it is
                a multiple SET-statement, like:

                  SET spv1 = expr1, spv2 = expr2, ...

                Every SET-expression has its own sp_instr_set. Thus, the
                instruction owns the LEX-object, i.e. the instruction is
                responsible for destruction of the LEX-object.
              */

              sp_instr_set *i=
                new sp_instr_set(sp->instructions(), lex,
                                 spv->offset, (yyvsp[(4) - (4)].item), expr_query,
                                 true); // The instruction owns its lex.

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }
          }
    break;

  case 2370:

/* Line 1455 of yacc.c  */
#line 14653 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Item_func_set_user_var *item;
            item= new (YYTHD->mem_root) Item_func_set_user_var((yyvsp[(2) - (4)].lex_str), (yyvsp[(4) - (4)].item), false);
            if (item == NULL)
              MYSQL_YYABORT;
            set_var_user *var= new set_var_user(item);
            if (var == NULL)
              MYSQL_YYABORT;
            Lex->var_list.push_back(var);
          }
    break;

  case 2371:

/* Line 1455 of yacc.c  */
#line 14664 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            struct sys_var_with_base tmp= (yyvsp[(4) - (6)].variable);
            /* Lookup if necessary: must be a system variable. */
            if (tmp.var == NULL)
            {
              if (find_sys_var_null_base(thd, &tmp))
                MYSQL_YYABORT;
            }
            if (set_system_variable(thd, &tmp, (yyvsp[(3) - (6)].var_type), (yyvsp[(6) - (6)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 2372:

/* Line 1455 of yacc.c  */
#line 14677 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            int flags= (yyvsp[(2) - (2)].charset) ? 0 : set_var_collation_client::SET_CS_DEFAULT;
            const CHARSET_INFO *cs2;
            cs2= (yyvsp[(2) - (2)].charset) ? (yyvsp[(2) - (2)].charset): global_system_variables.character_set_client;
            set_var_collation_client *var;
            var= new set_var_collation_client(flags,
                                              cs2,
                                              thd->variables.collation_database,
                                              cs2);
            if (var == NULL)
              MYSQL_YYABORT;
            lex->var_list.push_back(var);
          }
    break;

  case 2373:

/* Line 1455 of yacc.c  */
#line 14693 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            LEX_STRING names= { C_STRING_WITH_LEN("names") };

            if (pctx && pctx->find_variable(names, false))
              my_error(ER_SP_BAD_VAR_SHADOW, MYF(0), names.str);
            else
              my_parse_error(ER(ER_SYNTAX_ERROR));

            MYSQL_YYABORT;
          }
    break;

  case 2374:

/* Line 1455 of yacc.c  */
#line 14706 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            const CHARSET_INFO *cs2;
            const CHARSET_INFO *cs3;
            int flags= set_var_collation_client::SET_CS_NAMES
                       | ((yyvsp[(2) - (3)].charset) ? 0 : set_var_collation_client::SET_CS_DEFAULT)
                       | ((yyvsp[(3) - (3)].charset) ? set_var_collation_client::SET_CS_COLLATE : 0);
            cs2= (yyvsp[(2) - (3)].charset) ? (yyvsp[(2) - (3)].charset) : global_system_variables.character_set_client;
            cs3= (yyvsp[(3) - (3)].charset) ? (yyvsp[(3) - (3)].charset) : cs2;
            if (!my_charset_same(cs2, cs3))
            {
              my_error(ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                       cs3->name, cs2->csname);
              MYSQL_YYABORT;
            }
            set_var_collation_client *var;
            var= new set_var_collation_client(flags, cs3, cs3, cs3);
            if (var == NULL)
              MYSQL_YYABORT;
            lex->var_list.push_back(var);
          }
    break;

  case 2375:

/* Line 1455 of yacc.c  */
#line 14728 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            LEX_STRING pw= { C_STRING_WITH_LEN("password") };

            if (pctx && pctx->find_variable(pw, false))
            {
              my_error(ER_SP_BAD_VAR_SHADOW, MYF(0), pw.str);
              MYSQL_YYABORT;
            }

            LEX_USER *user= (LEX_USER*) thd->alloc(sizeof(LEX_USER));

            if (!user)
              MYSQL_YYABORT;

            user->host=null_lex_str;
            user->user.str=thd->security_ctx->user;
            user->user.length= strlen(thd->security_ctx->user);

            set_var_password *var= new set_var_password(user, (yyvsp[(3) - (3)].simple_string));
            if (var == NULL)
              MYSQL_YYABORT;

            lex->var_list.push_back(var);
            lex->autocommit= TRUE;
            lex->is_set_password_sql= true;
            lex->is_change_password= TRUE;

            if (sp)
              sp->m_flags|= sp_head::HAS_SET_AUTOCOMMIT_STMT;
          }
    break;

  case 2376:

/* Line 1455 of yacc.c  */
#line 14763 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX_USER *user= (yyvsp[(3) - (5)].lex_user);
            LEX *lex= Lex;
            set_var_password *var;

            var= new set_var_password(user,(yyvsp[(5) - (5)].simple_string));
            if (var == NULL)
              MYSQL_YYABORT;
            lex->var_list.push_back(var);
            lex->autocommit= TRUE;
            lex->is_set_password_sql= true;
            if (lex->sphead)
              lex->sphead->m_flags|= sp_head::HAS_SET_AUTOCOMMIT_STMT;
            /*
              'is_change_password' should be set if the user is setting his
              own password. This is later used to determine if the password
              expiration flag should be reset.
              Either the user exactly matches the currently authroized user or
              the CURRENT_USER keyword was used.

              If CURRENT_USER was used for the <user> rule then
              user->user.str=0. See rule below:
              
              user:
                 [..]
              | CURRENT_USER optional_braces
                {
                 [..]
                  memset($$, 0, sizeof(LEX_USER));
                }
            */
            if (user->user.str ||
                match_authorized_user(&current_thd->main_security_ctx,
                                      user))
              lex->is_change_password= TRUE;
            else
              lex->is_change_password= FALSE;
          }
    break;

  case 2377:

/* Line 1455 of yacc.c  */
#line 14805 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            /* Best effort lookup for system variable. */
            if (!pctx || !(spv= pctx->find_variable((yyvsp[(1) - (1)].lex_str), false)))
            {
              struct sys_var_with_base tmp= {NULL, (yyvsp[(1) - (1)].lex_str)};

              /* Not an SP local variable */
              if (find_sys_var_null_base(thd, &tmp))
                MYSQL_YYABORT;

              (yyval.variable)= tmp;
            }
            else
            {
              /*
                Possibly an SP local variable (or a shadowed sysvar).
                Will depend on the context of the SET statement.
              */
              (yyval.variable).var= NULL;
              (yyval.variable).base_name= (yyvsp[(1) - (1)].lex_str);
            }
          }
    break;

  case 2378:

/* Line 1455 of yacc.c  */
#line 14833 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            if (check_reserved_words(&(yyvsp[(1) - (3)].lex_str)))
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }

            if (sp && sp->m_type == SP_TYPE_TRIGGER &&
                (!my_strcasecmp(system_charset_info, (yyvsp[(1) - (3)].lex_str).str, "NEW") ||
                 !my_strcasecmp(system_charset_info, (yyvsp[(1) - (3)].lex_str).str, "OLD")))
            {
              if ((yyvsp[(1) - (3)].lex_str).str[0]=='O' || (yyvsp[(1) - (3)].lex_str).str[0]=='o')
              {
                my_error(ER_TRG_CANT_CHANGE_ROW, MYF(0), "OLD", "");
                MYSQL_YYABORT;
              }
              if (sp->m_trg_chistics.event == TRG_EVENT_DELETE)
              {
                my_error(ER_TRG_NO_SUCH_ROW_IN_TRG, MYF(0),
                         "NEW", "on DELETE");
                MYSQL_YYABORT;
              }
              if (sp->m_trg_chistics.action_time == TRG_ACTION_AFTER)
              {
                my_error(ER_TRG_CANT_CHANGE_ROW, MYF(0), "NEW", "after ");
                MYSQL_YYABORT;
              }
              /* This special combination will denote field of NEW row */
              (yyval.variable).var= trg_new_row_fake_var;
              (yyval.variable).base_name= (yyvsp[(3) - (3)].lex_str);
            }
            else
            {
              sys_var *tmp=find_sys_var(YYTHD, (yyvsp[(3) - (3)].lex_str).str, (yyvsp[(3) - (3)].lex_str).length);
              if (!tmp)
                MYSQL_YYABORT;
              if (!tmp->is_struct())
                my_error(ER_VARIABLE_IS_NOT_STRUCT, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              (yyval.variable).var= tmp;
              (yyval.variable).base_name= (yyvsp[(1) - (3)].lex_str);
            }
          }
    break;

  case 2379:

/* Line 1455 of yacc.c  */
#line 14879 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            sys_var *tmp=find_sys_var(YYTHD, (yyvsp[(3) - (3)].lex_str).str, (yyvsp[(3) - (3)].lex_str).length);
            if (!tmp)
              MYSQL_YYABORT;
            if (!tmp->is_struct())
              my_error(ER_VARIABLE_IS_NOT_STRUCT, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
            (yyval.variable).var= tmp;
            (yyval.variable).base_name.str=    (char*) "default";
            (yyval.variable).base_name.length= 7;
          }
    break;

  case 2384:

/* Line 1455 of yacc.c  */
#line 14900 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex=Lex;
            Item *item= new (thd->mem_root) Item_int((int32) (yyvsp[(1) - (1)].num));
            if (item == NULL)
              MYSQL_YYABORT;
            set_var *var= new set_var(lex->option_type,
                                      find_sys_var(thd, "tx_read_only"),
                                      &null_lex_str,
                                      item);
            if (var == NULL)
              MYSQL_YYABORT;
            lex->var_list.push_back(var);
          }
    break;

  case 2385:

/* Line 1455 of yacc.c  */
#line 14918 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex=Lex;
            Item *item= new (thd->mem_root) Item_int((int32) (yyvsp[(3) - (3)].tx_isolation));
            if (item == NULL)
              MYSQL_YYABORT;
            set_var *var= new set_var(lex->option_type,
                                      find_sys_var(thd, "tx_isolation"),
                                      &null_lex_str,
                                      item);
            if (var == NULL)
              MYSQL_YYABORT;
            lex->var_list.push_back(var);
          }
    break;

  case 2386:

/* Line 1455 of yacc.c  */
#line 14935 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)= true; }
    break;

  case 2387:

/* Line 1455 of yacc.c  */
#line 14936 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)= false; }
    break;

  case 2388:

/* Line 1455 of yacc.c  */
#line 14940 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.tx_isolation)= ISO_READ_UNCOMMITTED; }
    break;

  case 2389:

/* Line 1455 of yacc.c  */
#line 14941 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.tx_isolation)= ISO_READ_COMMITTED; }
    break;

  case 2390:

/* Line 1455 of yacc.c  */
#line 14942 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.tx_isolation)= ISO_REPEATABLE_READ; }
    break;

  case 2391:

/* Line 1455 of yacc.c  */
#line 14943 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.tx_isolation)= ISO_SERIALIZABLE; }
    break;

  case 2392:

/* Line 1455 of yacc.c  */
#line 14947 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.simple_string)=(yyvsp[(1) - (1)].lex_str).str;}
    break;

  case 2393:

/* Line 1455 of yacc.c  */
#line 14949 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if ((yyvsp[(3) - (4)].lex_str).length == 0)
             (yyval.simple_string)= (yyvsp[(3) - (4)].lex_str).str;
            else
            switch (YYTHD->variables.old_passwords) {
              case 1: (yyval.simple_string)= Item_func_old_password::
                alloc(YYTHD, (yyvsp[(3) - (4)].lex_str).str, (yyvsp[(3) - (4)].lex_str).length);
                break;
              case 0:
              case 2: (yyval.simple_string)= Item_func_password::
                create_password_hash_buffer(YYTHD, (yyvsp[(3) - (4)].lex_str).str, (yyvsp[(3) - (4)].lex_str).length);
                break;
            }
            if ((yyval.simple_string) == NULL)
              MYSQL_YYABORT;
            Lex->contains_plaintext_password= true;
          }
    break;

  case 2394:

/* Line 1455 of yacc.c  */
#line 14967 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.simple_string)= (yyvsp[(3) - (4)].lex_str).length ? Item_func_old_password::
              alloc(YYTHD, (yyvsp[(3) - (4)].lex_str).str, (yyvsp[(3) - (4)].lex_str).length) :
              (yyvsp[(3) - (4)].lex_str).str;
            if ((yyval.simple_string) == NULL)
              MYSQL_YYABORT;
            Lex->contains_plaintext_password= true;
          }
    break;

  case 2395:

/* Line 1455 of yacc.c  */
#line 14979 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.item)=(yyvsp[(1) - (1)].item); }
    break;

  case 2396:

/* Line 1455 of yacc.c  */
#line 14980 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.item)=0; }
    break;

  case 2397:

/* Line 1455 of yacc.c  */
#line 14982 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)=new (YYTHD->mem_root) Item_string("ON",  2, system_charset_info);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2398:

/* Line 1455 of yacc.c  */
#line 14988 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)=new (YYTHD->mem_root) Item_string("ALL", 3, system_charset_info);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2399:

/* Line 1455 of yacc.c  */
#line 14994 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.item)=new (YYTHD->mem_root) Item_string("binary", 6, system_charset_info);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2400:

/* Line 1455 of yacc.c  */
#line 15005 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "LOCK");
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_LOCK_TABLES;
          }
    break;

  case 2401:

/* Line 1455 of yacc.c  */
#line 15016 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2406:

/* Line 1455 of yacc.c  */
#line 15031 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            thr_lock_type lock_type= (thr_lock_type) (yyvsp[(3) - (3)].num);
            bool lock_for_write= (lock_type >= TL_WRITE_ALLOW_WRITE);
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (3)].table), (yyvsp[(2) - (3)].lex_str_ptr), 0, lock_type,
                                           (lock_for_write ?
                                            MDL_SHARED_NO_READ_WRITE :
                                            MDL_SHARED_READ)))
              MYSQL_YYABORT;
          }
    break;

  case 2407:

/* Line 1455 of yacc.c  */
#line 15043 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TL_READ_NO_INSERT; }
    break;

  case 2408:

/* Line 1455 of yacc.c  */
#line 15044 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TL_WRITE_DEFAULT; }
    break;

  case 2409:

/* Line 1455 of yacc.c  */
#line 15046 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { 
            (yyval.num)= TL_WRITE_LOW_PRIORITY; 
            WARN_DEPRECATED(YYTHD, "LOW_PRIORITY WRITE", "WRITE");
          }
    break;

  case 2410:

/* Line 1455 of yacc.c  */
#line 15050 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)= TL_READ; }
    break;

  case 2411:

/* Line 1455 of yacc.c  */
#line 15055 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "UNLOCK");
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_UNLOCK_TABLES;
          }
    break;

  case 2412:

/* Line 1455 of yacc.c  */
#line 15066 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2413:

/* Line 1455 of yacc.c  */
#line 15075 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HANDLER");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_HA_OPEN;
            if (!lex->current_select->add_table_to_list(thd, (yyvsp[(2) - (4)].table), (yyvsp[(4) - (4)].lex_str_ptr), 0))
              MYSQL_YYABORT;
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_handler_open();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2414:

/* Line 1455 of yacc.c  */
#line 15091 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HANDLER");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_HA_CLOSE;
            if (!lex->current_select->add_table_to_list(thd, (yyvsp[(2) - (3)].table), 0, 0))
              MYSQL_YYABORT;
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_handler_close();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2415:

/* Line 1455 of yacc.c  */
#line 15107 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HANDLER");
              MYSQL_YYABORT;
            }
            lex->expr_allows_subselect= FALSE;
            lex->sql_command = SQLCOM_HA_READ;
            Item *one= new (YYTHD->mem_root) Item_int((int32) 1);
            if (one == NULL)
              MYSQL_YYABORT;
            lex->current_select->select_limit= one;
            lex->current_select->offset_limit= 0;
            if (!lex->current_select->add_table_to_list(lex->thd, (yyvsp[(2) - (3)].table), 0, 0))
              MYSQL_YYABORT;
          }
    break;

  case 2416:

/* Line 1455 of yacc.c  */
#line 15125 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            Lex->expr_allows_subselect= TRUE;
            /* Stored functions are not supported for HANDLER READ. */
            if (lex->uses_stored_routines())
            {
              my_error(ER_NOT_SUPPORTED_YET, MYF(0),
                       "stored functions in HANDLER ... READ");
              MYSQL_YYABORT;
            }
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_handler_read((yyvsp[(5) - (7)].ha_read_mode),
                                  lex->ident.str, lex->insert_list,
                                  thd->m_parser_state->m_yacc.m_ha_rkey_mode);
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2417:

/* Line 1455 of yacc.c  */
#line 15145 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->ident= null_lex_str; (yyval.ha_read_mode)=(yyvsp[(1) - (1)].ha_read_mode); }
    break;

  case 2418:

/* Line 1455 of yacc.c  */
#line 15146 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->ident= (yyvsp[(1) - (2)].lex_str); (yyval.ha_read_mode)=(yyvsp[(2) - (2)].ha_read_mode); }
    break;

  case 2419:

/* Line 1455 of yacc.c  */
#line 15150 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.ha_read_mode)= RFIRST; }
    break;

  case 2420:

/* Line 1455 of yacc.c  */
#line 15151 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.ha_read_mode)= RNEXT;  }
    break;

  case 2421:

/* Line 1455 of yacc.c  */
#line 15155 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.ha_read_mode)= RFIRST; }
    break;

  case 2422:

/* Line 1455 of yacc.c  */
#line 15156 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.ha_read_mode)= RNEXT;  }
    break;

  case 2423:

/* Line 1455 of yacc.c  */
#line 15157 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.ha_read_mode)= RPREV;  }
    break;

  case 2424:

/* Line 1455 of yacc.c  */
#line 15158 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.ha_read_mode)= RLAST;  }
    break;

  case 2425:

/* Line 1455 of yacc.c  */
#line 15160 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            YYTHD->m_parser_state->m_yacc.m_ha_rkey_mode= (yyvsp[(1) - (1)].ha_rkey_mode);
            Lex->insert_list= new List_item;
            if (! Lex->insert_list)
              MYSQL_YYABORT;
          }
    break;

  case 2426:

/* Line 1455 of yacc.c  */
#line 15167 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.ha_read_mode)= RKEY;
          }
    break;

  case 2427:

/* Line 1455 of yacc.c  */
#line 15173 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_KEY_EXACT;   }
    break;

  case 2428:

/* Line 1455 of yacc.c  */
#line 15174 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_NEXT; }
    break;

  case 2429:

/* Line 1455 of yacc.c  */
#line 15175 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_PREV; }
    break;

  case 2430:

/* Line 1455 of yacc.c  */
#line 15176 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_AFTER_KEY;   }
    break;

  case 2431:

/* Line 1455 of yacc.c  */
#line 15177 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_BEFORE_KEY;  }
    break;

  case 2432:

/* Line 1455 of yacc.c  */
#line 15184 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2433:

/* Line 1455 of yacc.c  */
#line 15189 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_REVOKE;
            lex->type= 0;
          }
    break;

  case 2434:

/* Line 1455 of yacc.c  */
#line 15195 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->columns.elements)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_REVOKE;
            lex->type= TYPE_ENUM_FUNCTION;
          }
    break;

  case 2435:

/* Line 1455 of yacc.c  */
#line 15206 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->columns.elements)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_REVOKE;
            lex->type= TYPE_ENUM_PROCEDURE;
          }
    break;

  case 2436:

/* Line 1455 of yacc.c  */
#line 15217 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_REVOKE_ALL;
          }
    break;

  case 2437:

/* Line 1455 of yacc.c  */
#line 15221 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->users_list.push_front ((yyvsp[(3) - (5)].lex_user));
            lex->sql_command= SQLCOM_REVOKE;
            lex->type= TYPE_ENUM_PROXY;
          }
    break;

  case 2438:

/* Line 1455 of yacc.c  */
#line 15231 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2439:

/* Line 1455 of yacc.c  */
#line 15237 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT;
            lex->type= 0;
          }
    break;

  case 2440:

/* Line 1455 of yacc.c  */
#line 15244 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->columns.elements)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_GRANT;
            lex->type= TYPE_ENUM_FUNCTION;
          }
    break;

  case 2441:

/* Line 1455 of yacc.c  */
#line 15256 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->columns.elements)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_GRANT;
            lex->type= TYPE_ENUM_PROCEDURE;
          }
    break;

  case 2442:

/* Line 1455 of yacc.c  */
#line 15267 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->users_list.push_front ((yyvsp[(3) - (6)].lex_user));
            lex->sql_command= SQLCOM_GRANT;
            lex->type= TYPE_ENUM_PROXY;
          }
    break;

  case 2445:

/* Line 1455 of yacc.c  */
#line 15281 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2446:

/* Line 1455 of yacc.c  */
#line 15283 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { 
            Lex->all_privileges= 1; 
            Lex->grant= GLOBAL_ACLS;
          }
    break;

  case 2451:

/* Line 1455 of yacc.c  */
#line 15301 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->which_columns = SELECT_ACL;}
    break;

  case 2452:

/* Line 1455 of yacc.c  */
#line 15302 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2453:

/* Line 1455 of yacc.c  */
#line 15304 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->which_columns = INSERT_ACL;}
    break;

  case 2454:

/* Line 1455 of yacc.c  */
#line 15305 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2455:

/* Line 1455 of yacc.c  */
#line 15307 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->which_columns = UPDATE_ACL; }
    break;

  case 2456:

/* Line 1455 of yacc.c  */
#line 15308 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2457:

/* Line 1455 of yacc.c  */
#line 15310 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->which_columns = REFERENCES_ACL;}
    break;

  case 2458:

/* Line 1455 of yacc.c  */
#line 15311 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2459:

/* Line 1455 of yacc.c  */
#line 15312 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->grant |= DELETE_ACL;}
    break;

  case 2460:

/* Line 1455 of yacc.c  */
#line 15313 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2461:

/* Line 1455 of yacc.c  */
#line 15314 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->grant |= INDEX_ACL;}
    break;

  case 2462:

/* Line 1455 of yacc.c  */
#line 15315 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->grant |= ALTER_ACL;}
    break;

  case 2463:

/* Line 1455 of yacc.c  */
#line 15316 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->grant |= CREATE_ACL;}
    break;

  case 2464:

/* Line 1455 of yacc.c  */
#line 15317 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->grant |= DROP_ACL;}
    break;

  case 2465:

/* Line 1455 of yacc.c  */
#line 15318 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->grant |= EXECUTE_ACL;}
    break;

  case 2466:

/* Line 1455 of yacc.c  */
#line 15319 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->grant |= RELOAD_ACL;}
    break;

  case 2467:

/* Line 1455 of yacc.c  */
#line 15320 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->grant |= SHUTDOWN_ACL;}
    break;

  case 2468:

/* Line 1455 of yacc.c  */
#line 15321 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->grant |= PROCESS_ACL;}
    break;

  case 2469:

/* Line 1455 of yacc.c  */
#line 15322 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->grant |= FILE_ACL;}
    break;

  case 2470:

/* Line 1455 of yacc.c  */
#line 15323 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->grant |= GRANT_ACL;}
    break;

  case 2471:

/* Line 1455 of yacc.c  */
#line 15324 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->grant |= SHOW_DB_ACL;}
    break;

  case 2472:

/* Line 1455 of yacc.c  */
#line 15325 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->grant |= SUPER_ACL;}
    break;

  case 2473:

/* Line 1455 of yacc.c  */
#line 15326 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->grant |= CREATE_TMP_ACL;}
    break;

  case 2474:

/* Line 1455 of yacc.c  */
#line 15327 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->grant |= LOCK_TABLES_ACL; }
    break;

  case 2475:

/* Line 1455 of yacc.c  */
#line 15328 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->grant |= REPL_SLAVE_ACL; }
    break;

  case 2476:

/* Line 1455 of yacc.c  */
#line 15329 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->grant |= REPL_CLIENT_ACL; }
    break;

  case 2477:

/* Line 1455 of yacc.c  */
#line 15330 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->grant |= CREATE_VIEW_ACL; }
    break;

  case 2478:

/* Line 1455 of yacc.c  */
#line 15331 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->grant |= SHOW_VIEW_ACL; }
    break;

  case 2479:

/* Line 1455 of yacc.c  */
#line 15332 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->grant |= CREATE_PROC_ACL; }
    break;

  case 2480:

/* Line 1455 of yacc.c  */
#line 15333 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->grant |= ALTER_PROC_ACL; }
    break;

  case 2481:

/* Line 1455 of yacc.c  */
#line 15334 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->grant |= CREATE_USER_ACL; }
    break;

  case 2482:

/* Line 1455 of yacc.c  */
#line 15335 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->grant |= EVENT_ACL;}
    break;

  case 2483:

/* Line 1455 of yacc.c  */
#line 15336 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->grant |= TRIGGER_ACL; }
    break;

  case 2484:

/* Line 1455 of yacc.c  */
#line 15337 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->grant |= CREATE_TABLESPACE_ACL; }
    break;

  case 2485:

/* Line 1455 of yacc.c  */
#line 15341 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2486:

/* Line 1455 of yacc.c  */
#line 15342 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2489:

/* Line 1455 of yacc.c  */
#line 15352 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->x509_subject)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "SUBJECT");
              MYSQL_YYABORT;
            }
            lex->x509_subject=(yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 2490:

/* Line 1455 of yacc.c  */
#line 15362 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->x509_issuer)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "ISSUER");
              MYSQL_YYABORT;
            }
            lex->x509_issuer=(yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 2491:

/* Line 1455 of yacc.c  */
#line 15372 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->ssl_cipher)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "CIPHER");
              MYSQL_YYABORT;
            }
            lex->ssl_cipher=(yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 2492:

/* Line 1455 of yacc.c  */
#line 15385 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            size_t dummy;
            if (lex->copy_db_to(&lex->current_select->db, &dummy))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_ACLS & ~GRANT_ACL;
            else if (lex->columns.elements)
            {
              my_message(ER_ILLEGAL_GRANT_FOR_TABLE,
                         ER(ER_ILLEGAL_GRANT_FOR_TABLE), MYF(0));
              MYSQL_YYABORT;
            }
          }
    break;

  case 2493:

/* Line 1455 of yacc.c  */
#line 15400 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->current_select->db = (yyvsp[(1) - (3)].lex_str).str;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_ACLS & ~GRANT_ACL;
            else if (lex->columns.elements)
            {
              my_message(ER_ILLEGAL_GRANT_FOR_TABLE,
                         ER(ER_ILLEGAL_GRANT_FOR_TABLE), MYF(0));
              MYSQL_YYABORT;
            }
          }
    break;

  case 2494:

/* Line 1455 of yacc.c  */
#line 15413 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->current_select->db = NULL;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant= GLOBAL_ACLS & ~GRANT_ACL;
            else if (lex->columns.elements)
            {
              my_message(ER_ILLEGAL_GRANT_FOR_TABLE,
                         ER(ER_ILLEGAL_GRANT_FOR_TABLE), MYF(0));
              MYSQL_YYABORT;
            }
          }
    break;

  case 2495:

/* Line 1455 of yacc.c  */
#line 15426 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (!lex->current_select->add_table_to_list(lex->thd, (yyvsp[(1) - (1)].table),NULL,
                                                        TL_OPTION_UPDATING))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant =  TABLE_ACLS & ~GRANT_ACL;
          }
    break;

  case 2496:

/* Line 1455 of yacc.c  */
#line 15438 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(1) - (1)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 2497:

/* Line 1455 of yacc.c  */
#line 15443 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(3) - (3)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 2498:

/* Line 1455 of yacc.c  */
#line 15451 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(1) - (1)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 2499:

/* Line 1455 of yacc.c  */
#line 15456 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(3) - (3)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 2500:

/* Line 1455 of yacc.c  */
#line 15464 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.lex_user)=(yyvsp[(1) - (4)].lex_user); (yyvsp[(1) - (4)].lex_user)->password=(yyvsp[(4) - (4)].lex_str);
            if (Lex->sql_command == SQLCOM_REVOKE)
              MYSQL_YYABORT;
            String *password = new (YYTHD->mem_root) String((const char*)(yyvsp[(4) - (4)].lex_str).str,
                                    YYTHD->variables.character_set_client);
            check_password_policy(password);
            /*
              1. Plugin must be resolved
              2. Password must be digested
            */
            (yyvsp[(1) - (4)].lex_user)->uses_identified_by_clause= true;
            Lex->contains_plaintext_password= true;
          }
    break;

  case 2501:

/* Line 1455 of yacc.c  */
#line 15479 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { 
            if (Lex->sql_command == SQLCOM_REVOKE)
              MYSQL_YYABORT;
            (yyval.lex_user)= (yyvsp[(1) - (5)].lex_user); 
            (yyvsp[(1) - (5)].lex_user)->password= (yyvsp[(5) - (5)].lex_str); 
            /*
              1. Plugin must be resolved
            */
            (yyvsp[(1) - (5)].lex_user)->uses_identified_by_password_clause= true;
          }
    break;

  case 2502:

/* Line 1455 of yacc.c  */
#line 15490 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (Lex->sql_command == SQLCOM_REVOKE)
              MYSQL_YYABORT;
            (yyval.lex_user)= (yyvsp[(1) - (4)].lex_user);
            (yyvsp[(1) - (4)].lex_user)->plugin= (yyvsp[(4) - (4)].lex_str);
            (yyvsp[(1) - (4)].lex_user)->auth= empty_lex_str;
            (yyvsp[(1) - (4)].lex_user)->uses_identified_with_clause= true;
          }
    break;

  case 2503:

/* Line 1455 of yacc.c  */
#line 15499 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (Lex->sql_command == SQLCOM_REVOKE)
              MYSQL_YYABORT;
            (yyval.lex_user)= (yyvsp[(1) - (6)].lex_user);
            (yyvsp[(1) - (6)].lex_user)->plugin= (yyvsp[(4) - (6)].lex_str);
            (yyvsp[(1) - (6)].lex_user)->auth= (yyvsp[(6) - (6)].lex_str);
            (yyvsp[(1) - (6)].lex_user)->uses_identified_with_clause= true;
            (yyvsp[(1) - (6)].lex_user)->uses_authentication_string_clause= true;
          }
    break;

  case 2504:

/* Line 1455 of yacc.c  */
#line 15509 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.lex_user)= (yyvsp[(1) - (1)].lex_user);
            (yyvsp[(1) - (1)].lex_user)->password= null_lex_str;
          }
    break;

  case 2505:

/* Line 1455 of yacc.c  */
#line 15517 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->grant |= lex->which_columns;
          }
    break;

  case 2509:

/* Line 1455 of yacc.c  */
#line 15531 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            String *new_str = new (YYTHD->mem_root) String((const char*) (yyvsp[(1) - (1)].lex_str).str,(yyvsp[(1) - (1)].lex_str).length,system_charset_info);
            if (new_str == NULL)
              MYSQL_YYABORT;
            List_iterator <LEX_COLUMN> iter(Lex->columns);
            class LEX_COLUMN *point;
            LEX *lex=Lex;
            while ((point=iter++))
            {
              if (!my_strcasecmp(system_charset_info,
                                 point->column.ptr(), new_str->ptr()))
                break;
            }
            lex->grant_tot_col|= lex->which_columns;
            if (point)
              point->rights |= lex->which_columns;
            else
            {
              LEX_COLUMN *col= new LEX_COLUMN (*new_str,lex->which_columns);
              if (col == NULL)
                MYSQL_YYABORT;
              lex->columns.push_back(col);
            }
          }
    break;

  case 2511:

/* Line 1455 of yacc.c  */
#line 15560 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->ssl_type=SSL_TYPE_SPECIFIED;
          }
    break;

  case 2512:

/* Line 1455 of yacc.c  */
#line 15564 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->ssl_type=SSL_TYPE_ANY;
          }
    break;

  case 2513:

/* Line 1455 of yacc.c  */
#line 15568 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->ssl_type=SSL_TYPE_X509;
          }
    break;

  case 2514:

/* Line 1455 of yacc.c  */
#line 15572 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->ssl_type=SSL_TYPE_NONE;
          }
    break;

  case 2515:

/* Line 1455 of yacc.c  */
#line 15578 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2517:

/* Line 1455 of yacc.c  */
#line 15583 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2518:

/* Line 1455 of yacc.c  */
#line 15584 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->grant |= GRANT_ACL;}
    break;

  case 2519:

/* Line 1455 of yacc.c  */
#line 15588 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2520:

/* Line 1455 of yacc.c  */
#line 15589 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2521:

/* Line 1455 of yacc.c  */
#line 15593 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->grant |= GRANT_ACL;}
    break;

  case 2522:

/* Line 1455 of yacc.c  */
#line 15595 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.questions=(yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::QUERIES_PER_HOUR;
          }
    break;

  case 2523:

/* Line 1455 of yacc.c  */
#line 15601 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.updates=(yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::UPDATES_PER_HOUR;
          }
    break;

  case 2524:

/* Line 1455 of yacc.c  */
#line 15607 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.conn_per_hour= (yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::CONNECTIONS_PER_HOUR;
          }
    break;

  case 2525:

/* Line 1455 of yacc.c  */
#line 15613 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.user_conn= (yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::USER_CONNECTIONS;
          }
    break;

  case 2526:

/* Line 1455 of yacc.c  */
#line 15622 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_BEGIN;
            lex->start_transaction_opt= 0;
          }
    break;

  case 2527:

/* Line 1455 of yacc.c  */
#line 15627 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2528:

/* Line 1455 of yacc.c  */
#line 15631 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2529:

/* Line 1455 of yacc.c  */
#line 15632 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2530:

/* Line 1455 of yacc.c  */
#line 15637 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
    break;

  case 2531:

/* Line 1455 of yacc.c  */
#line 15638 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_NO; }
    break;

  case 2532:

/* Line 1455 of yacc.c  */
#line 15639 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_YES; }
    break;

  case 2533:

/* Line 1455 of yacc.c  */
#line 15644 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
    break;

  case 2534:

/* Line 1455 of yacc.c  */
#line 15645 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_YES; }
    break;

  case 2535:

/* Line 1455 of yacc.c  */
#line 15646 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_NO; }
    break;

  case 2536:

/* Line 1455 of yacc.c  */
#line 15650 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2537:

/* Line 1455 of yacc.c  */
#line 15651 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2538:

/* Line 1455 of yacc.c  */
#line 15656 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_COMMIT;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[(3) - (4)].m_yes_no_unk) != TVL_YES || (yyvsp[(4) - (4)].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[(3) - (4)].m_yes_no_unk);
            lex->tx_release= (yyvsp[(4) - (4)].m_yes_no_unk);
          }
    break;

  case 2539:

/* Line 1455 of yacc.c  */
#line 15668 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[(3) - (4)].m_yes_no_unk) != TVL_YES || (yyvsp[(4) - (4)].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[(3) - (4)].m_yes_no_unk);
            lex->tx_release= (yyvsp[(4) - (4)].m_yes_no_unk);
          }
    break;

  case 2540:

/* Line 1455 of yacc.c  */
#line 15678 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK_TO_SAVEPOINT;
            lex->ident= (yyvsp[(5) - (5)].lex_str);
          }
    break;

  case 2541:

/* Line 1455 of yacc.c  */
#line 15687 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SAVEPOINT;
            lex->ident= (yyvsp[(2) - (2)].lex_str);
          }
    break;

  case 2542:

/* Line 1455 of yacc.c  */
#line 15696 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RELEASE_SAVEPOINT;
            lex->ident= (yyvsp[(3) - (3)].lex_str);
          }
    break;

  case 2543:

/* Line 1455 of yacc.c  */
#line 15709 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2545:

/* Line 1455 of yacc.c  */
#line 15715 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (add_select_to_union_list(Lex, (bool)(yyvsp[(2) - (2)].num), TRUE))
              MYSQL_YYABORT;
          }
    break;

  case 2546:

/* Line 1455 of yacc.c  */
#line 15720 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            /*
              Remove from the name resolution context stack the context of the
              last select in the union.
            */
            Lex->pop_context();
          }
    break;

  case 2547:

/* Line 1455 of yacc.c  */
#line 15730 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 2548:

/* Line 1455 of yacc.c  */
#line 15731 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 2549:

/* Line 1455 of yacc.c  */
#line 15732 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 2550:

/* Line 1455 of yacc.c  */
#line 15736 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= false; }
    break;

  case 2551:

/* Line 1455 of yacc.c  */
#line 15737 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.is_not_empty)= true; }
    break;

  case 2552:

/* Line 1455 of yacc.c  */
#line 15741 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            DBUG_ASSERT(lex->current_select->linkage != GLOBAL_OPTIONS_TYPE);
            SELECT_LEX *sel= lex->current_select;
            SELECT_LEX_UNIT *unit= sel->master_unit();
            SELECT_LEX *fake= unit->fake_select_lex;
            if (fake)
            {
              unit->global_parameters= fake;
              fake->no_table_names_allowed= 1;
              lex->current_select= fake;
            }
            thd->where= "global ORDER clause";
          }
    break;

  case 2553:

/* Line 1455 of yacc.c  */
#line 15757 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            thd->lex->current_select->no_table_names_allowed= 0;
            thd->where= "";
          }
    break;

  case 2556:

/* Line 1455 of yacc.c  */
#line 15770 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)=1; }
    break;

  case 2557:

/* Line 1455 of yacc.c  */
#line 15771 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)=1; }
    break;

  case 2558:

/* Line 1455 of yacc.c  */
#line 15772 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { (yyval.num)=0; }
    break;

  case 2559:

/* Line 1455 of yacc.c  */
#line 15777 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { 
            (yyval.select_lex)= Lex->current_select->master_unit()->first_select();
          }
    break;

  case 2560:

/* Line 1455 of yacc.c  */
#line 15781 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            (yyval.select_lex)= Lex->current_select->master_unit()->first_select();
          }
    break;

  case 2562:

/* Line 1455 of yacc.c  */
#line 15790 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (add_select_to_union_list(Lex, (bool)(yyvsp[(3) - (3)].num), FALSE))
              MYSQL_YYABORT;
          }
    break;

  case 2563:

/* Line 1455 of yacc.c  */
#line 15796 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->pop_context();
            (yyval.select_lex)= (yyvsp[(1) - (6)].select_lex);
          }
    break;

  case 2564:

/* Line 1455 of yacc.c  */
#line 15805 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { 
            (yyval.select_lex)= (yyvsp[(2) - (3)].select_lex);
          }
    break;

  case 2565:

/* Line 1455 of yacc.c  */
#line 15811 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (!lex->expr_allows_subselect ||
               lex->sql_command == (int)SQLCOM_PURGE)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            /* 
              we are making a "derived table" for the parenthesis
              as we need to have a lex level to fit the union 
              after the parenthesis, e.g. 
              (SELECT .. ) UNION ...  becomes 
              SELECT * FROM ((SELECT ...) UNION ...)
            */
            if (mysql_new_select(Lex, 1))
              MYSQL_YYABORT;
          }
    break;

  case 2566:

/* Line 1455 of yacc.c  */
#line 15832 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;

            lex->pop_context();
            SELECT_LEX *child= lex->current_select;
            lex->current_select = lex->current_select->outer_select();
            lex->nest_level--;
            lex->current_select->n_child_sum_items += child->n_sum_items;
            /*
              A subselect can add fields to an outer select. Reserve space for
              them.
            */
            lex->current_select->select_n_where_fields+=
            child->select_n_where_fields;
          }
    break;

  case 2571:

/* Line 1455 of yacc.c  */
#line 15860 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Select->options|= SELECT_STRAIGHT_JOIN; }
    break;

  case 2572:

/* Line 1455 of yacc.c  */
#line 15862 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (check_simple_select())
              MYSQL_YYABORT;
            YYPS->m_lock_type= TL_READ_HIGH_PRIORITY;
            YYPS->m_mdl_type= MDL_SHARED_READ;
            Select->options|= SELECT_HIGH_PRIORITY;
          }
    break;

  case 2573:

/* Line 1455 of yacc.c  */
#line 15869 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Select->options|= SELECT_DISTINCT; }
    break;

  case 2574:

/* Line 1455 of yacc.c  */
#line 15870 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Select->options|= SELECT_SMALL_RESULT; }
    break;

  case 2575:

/* Line 1455 of yacc.c  */
#line 15871 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Select->options|= SELECT_BIG_RESULT; }
    break;

  case 2576:

/* Line 1455 of yacc.c  */
#line 15873 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (check_simple_select())
              MYSQL_YYABORT;
            Select->options|= OPTION_BUFFER_RESULT;
          }
    break;

  case 2577:

/* Line 1455 of yacc.c  */
#line 15879 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (check_simple_select())
              MYSQL_YYABORT;
            Select->options|= OPTION_FOUND_ROWS;
          }
    break;

  case 2578:

/* Line 1455 of yacc.c  */
#line 15884 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Select->options|= SELECT_ALL; }
    break;

  case 2579:

/* Line 1455 of yacc.c  */
#line 15895 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2580:

/* Line 1455 of yacc.c  */
#line 15897 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2581:

/* Line 1455 of yacc.c  */
#line 15899 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2595:

/* Line 1455 of yacc.c  */
#line 15932 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            /*
              We have to distinguish missing DEFINER-clause from case when
              CURRENT_USER specified as definer explicitly in order to properly
              handle CREATE TRIGGER statements which come to replication thread
              from older master servers (i.e. to create non-suid trigger in this
              case).
            */
            YYTHD->lex->definer= 0;
          }
    break;

  case 2596:

/* Line 1455 of yacc.c  */
#line 15946 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            YYTHD->lex->definer= get_current_user(YYTHD, (yyvsp[(3) - (3)].lex_user));
          }
    break;

  case 2597:

/* Line 1455 of yacc.c  */
#line 15959 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2598:

/* Line 1455 of yacc.c  */
#line 15961 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2599:

/* Line 1455 of yacc.c  */
#line 15963 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2600:

/* Line 1455 of yacc.c  */
#line 15968 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->create_view_mode= VIEW_CREATE_OR_REPLACE; }
    break;

  case 2601:

/* Line 1455 of yacc.c  */
#line 15973 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED; }
    break;

  case 2602:

/* Line 1455 of yacc.c  */
#line 15975 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->create_view_algorithm= VIEW_ALGORITHM_MERGE; }
    break;

  case 2603:

/* Line 1455 of yacc.c  */
#line 15977 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->create_view_algorithm= VIEW_ALGORITHM_TMPTABLE; }
    break;

  case 2604:

/* Line 1455 of yacc.c  */
#line 15982 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->create_view_suid= VIEW_SUID_DEFAULT; }
    break;

  case 2605:

/* Line 1455 of yacc.c  */
#line 15984 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->create_view_suid= VIEW_SUID_DEFINER; }
    break;

  case 2606:

/* Line 1455 of yacc.c  */
#line 15986 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->create_view_suid= VIEW_SUID_INVOKER; }
    break;

  case 2607:

/* Line 1455 of yacc.c  */
#line 15991 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_CREATE_VIEW;
            /* first table in list is target VIEW name */
            if (!lex->select_lex.add_table_to_list(thd, (yyvsp[(3) - (3)].table), NULL,
                                                   TL_OPTION_UPDATING,
                                                   TL_IGNORE,
                                                   MDL_EXCLUSIVE))
              MYSQL_YYABORT;
            lex->query_tables->open_strategy= TABLE_LIST::OPEN_STUB;
          }
    break;

  case 2609:

/* Line 1455 of yacc.c  */
#line 16008 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2611:

/* Line 1455 of yacc.c  */
#line 16014 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
              Lex->view_list.push_back((LEX_STRING*)
              sql_memdup(&(yyvsp[(1) - (1)].lex_str), sizeof(LEX_STRING)));
            }
    break;

  case 2612:

/* Line 1455 of yacc.c  */
#line 16019 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
              Lex->view_list.push_back((LEX_STRING*)
              sql_memdup(&(yyvsp[(3) - (3)].lex_str), sizeof(LEX_STRING)));
            }
    break;

  case 2613:

/* Line 1455 of yacc.c  */
#line 16026 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->parsing_options.allows_variable= FALSE;
            lex->parsing_options.allows_select_into= FALSE;
            lex->parsing_options.allows_select_procedure= FALSE;
            lex->parsing_options.allows_derived= FALSE;
            lex->create_view_select.str= (char *) YYLIP->get_cpp_ptr();
          }
    break;

  case 2614:

/* Line 1455 of yacc.c  */
#line 16035 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            uint len= YYLIP->get_cpp_ptr() - lex->create_view_select.str;
            void *create_view_select= thd->memdup(lex->create_view_select.str, len);
            lex->create_view_select.length= len;
            lex->create_view_select.str= (char *) create_view_select;
            trim_whitespace(thd->charset(), &lex->create_view_select);
            lex->parsing_options.allows_variable= TRUE;
            lex->parsing_options.allows_select_into= TRUE;
            lex->parsing_options.allows_select_procedure= TRUE;
            lex->parsing_options.allows_derived= TRUE;
          }
    break;

  case 2615:

/* Line 1455 of yacc.c  */
#line 16052 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (Lex->current_select->set_braces(0))
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            /*
              For statment as "CREATE VIEW v1 AS SELECT1 UNION SELECT2",
              parsing of Select query (SELECT1) is completed and UNION_CLAUSE
              is not yet parsed. So check for
              Lex->current_select->master_unit()->first_select()->braces
              (as its done in "select_init2" for "select_part2" rule) is not
              done here.
            */
          }
    break;

  case 2618:

/* Line 1455 of yacc.c  */
#line 16073 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            if (setup_select_in_parentheses(Lex))
              MYSQL_YYABORT;
          }
    break;

  case 2620:

/* Line 1455 of yacc.c  */
#line 16082 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->current_select->table_list.save_and_clear(&Lex->save_list);
          }
    break;

  case 2621:

/* Line 1455 of yacc.c  */
#line 16086 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->current_select->table_list.push_front(&Lex->save_list);
          }
    break;

  case 2622:

/* Line 1455 of yacc.c  */
#line 16093 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->create_view_check= VIEW_CHECK_NONE; }
    break;

  case 2623:

/* Line 1455 of yacc.c  */
#line 16095 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->create_view_check= VIEW_CHECK_CASCADED; }
    break;

  case 2624:

/* Line 1455 of yacc.c  */
#line 16097 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->create_view_check= VIEW_CHECK_CASCADED; }
    break;

  case 2625:

/* Line 1455 of yacc.c  */
#line 16099 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->create_view_check= VIEW_CHECK_LOCAL; }
    break;

  case 2626:

/* Line 1455 of yacc.c  */
#line 16116 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {                 /* $8 */
            Lex->raw_trg_on_table_name_begin= YYLIP->get_tok_start();
          }
    break;

  case 2627:

/* Line 1455 of yacc.c  */
#line 16122 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {                 /* $12 */
            Lex->raw_trg_on_table_name_end= YYLIP->get_tok_start();
          }
    break;

  case 2628:

/* Line 1455 of yacc.c  */
#line 16127 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {                 /* $15 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "TRIGGER");
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd, SP_TYPE_TRIGGER, (yyvsp[(3) - (14)].spname));

            if (!sp)
              MYSQL_YYABORT;

            sp->m_trg_chistics.action_time= (enum trg_action_time_type) (yyvsp[(4) - (14)].num);
            sp->m_trg_chistics.event= (enum trg_event_type) (yyvsp[(5) - (14)].num);
            lex->stmt_definition_begin= (yyvsp[(2) - (14)].simple_string);
            lex->ident.str= (yyvsp[(7) - (14)].simple_string);
            lex->ident.length= (yyvsp[(11) - (14)].simple_string) - (yyvsp[(7) - (14)].simple_string);

            lex->sphead= sp;
            lex->spname= (yyvsp[(3) - (14)].spname);

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
            sp->m_chistics= &lex->sp_chistics;
            sp->set_body_start(thd, lip->get_cpp_ptr());
          }
    break;

  case 2629:

/* Line 1455 of yacc.c  */
#line 16157 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { /* $17 */
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_TRIGGER;

            if (sp->is_not_allowed_in_function("trigger"))
              MYSQL_YYABORT;

            /*
              We have to do it after parsing trigger body, because some of
              sp_proc_stmt alternatives are not saving/restoring LEX, so
              lex->query_tables can be wiped out.
            */
            if (!lex->select_lex.add_table_to_list(thd, (yyvsp[(9) - (16)].table),
                                                   (LEX_STRING*) 0,
                                                   TL_OPTION_UPDATING,
                                                   TL_READ_NO_INSERT,
                                                   MDL_SHARED_NO_WRITE))
              MYSQL_YYABORT;
          }
    break;

  case 2630:

/* Line 1455 of yacc.c  */
#line 16192 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (is_native_function(thd, & (yyvsp[(4) - (8)].lex_str)))
            {
              my_error(ER_NATIVE_FCT_NAME_COLLISION, MYF(0),
                       (yyvsp[(4) - (8)].lex_str).str);
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CREATE_FUNCTION;
            lex->udf.type= UDFTYPE_AGGREGATE;
            lex->stmt_definition_begin= (yyvsp[(2) - (8)].simple_string);
            lex->udf.name = (yyvsp[(4) - (8)].lex_str);
            lex->udf.returns=(Item_result) (yyvsp[(6) - (8)].num);
            lex->udf.dl=(yyvsp[(8) - (8)].lex_str).str;
          }
    break;

  case 2631:

/* Line 1455 of yacc.c  */
#line 16210 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (is_native_function(thd, & (yyvsp[(3) - (7)].lex_str)))
            {
              my_error(ER_NATIVE_FCT_NAME_COLLISION, MYF(0),
                       (yyvsp[(3) - (7)].lex_str).str);
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CREATE_FUNCTION;
            lex->udf.type= UDFTYPE_FUNCTION;
            lex->stmt_definition_begin= (yyvsp[(1) - (7)].simple_string);
            lex->udf.name = (yyvsp[(3) - (7)].lex_str);
            lex->udf.returns=(Item_result) (yyvsp[(5) - (7)].num);
            lex->udf.dl=(yyvsp[(7) - (7)].lex_str).str;
          }
    break;

  case 2632:

/* Line 1455 of yacc.c  */
#line 16233 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { /* $5 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->stmt_definition_begin= (yyvsp[(1) - (4)].simple_string);
            lex->spname= (yyvsp[(3) - (4)].spname);

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd, SP_TYPE_FUNCTION, lex->spname);

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;

            /*
              NOTE: the start of the parameters in the query string is
              YYLIP->get_cpp_tok_start() + 1. 1 is the length of '(', which the
              tokenizer has just passed (just YYLIP->get_cpp_tok_start() points
              to the '(').
            */

            sp->m_parser_data.set_parameter_start_ptr(
              YYLIP->get_cpp_tok_start() + 1);
          }
    break;

  case 2633:

/* Line 1455 of yacc.c  */
#line 16265 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { /* $8 */
            Lex->sphead->m_parser_data.set_parameter_end_ptr(
              YYLIP->get_cpp_tok_start());
          }
    break;

  case 2634:

/* Line 1455 of yacc.c  */
#line 16270 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { /* $10 */
            LEX *lex= Lex;
            lex->charset= NULL;
            lex->length= lex->dec= NULL;
            lex->interval_list.empty();
            lex->type= 0;
          }
    break;

  case 2635:

/* Line 1455 of yacc.c  */
#line 16278 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { /* $12 */
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            /*
              This was disabled in 5.1.12. See bug #20701
              When collation support in SP is implemented, then this test
              should be removed.
            */
            if (((yyvsp[(11) - (11)].num) == MYSQL_TYPE_STRING || (yyvsp[(11) - (11)].num) == MYSQL_TYPE_VARCHAR)
                && (lex->type & BINCMP_FLAG))
            {
              my_error(ER_NOT_SUPPORTED_YET, MYF(0), "return value collation");
              MYSQL_YYABORT;
            }

            if (fill_field_definition(YYTHD, sp,
                                      (enum enum_field_types) (yyvsp[(11) - (11)].num),
                                      &sp->m_return_field_def))
              MYSQL_YYABORT;

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
    break;

  case 2636:

/* Line 1455 of yacc.c  */
#line 16301 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { /* $14 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_chistics= &lex->sp_chistics;
            lex->sphead->set_body_start(thd, YYLIP->get_cpp_tok_start());
          }
    break;

  case 2637:

/* Line 1455 of yacc.c  */
#line 16309 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            if (sp->is_not_allowed_in_function("function"))
              MYSQL_YYABORT;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_SPFUNCTION;

            if (!(sp->m_flags & sp_head::HAS_RETURN))
            {
              my_error(ER_SP_NORETURN, MYF(0), sp->m_qname.str);
              MYSQL_YYABORT;
            }

            if (is_native_function(thd, & sp->m_name))
            {
              /*
                This warning will be printed when
                [1] A client query is parsed,
                [2] A stored function is loaded by db_load_routine.
                Printing the warning for [2] is intentional, to cover the
                following scenario:
                - A user define a SF 'foo' using MySQL 5.N
                - An application uses select foo(), and works.
                - MySQL 5.{N+1} defines a new native function 'foo', as
                part of a new feature.
                - MySQL 5.{N+1} documentation is updated, and should mention
                that there is a potential incompatible change in case of
                existing stored function named 'foo'.
                - The user deploys 5.{N+1}. At this point, 'select foo()'
                means something different, and the user code is most likely
                broken (it's only safe if the code is 'select db.foo()').
                With a warning printed when the SF is loaded (which has to occur
                before the call), the warning will provide a hint explaining
                the root cause of a later failure of 'select foo()'.
                With no warning printed, the user code will fail with no
                apparent reason.
                Printing a warning each time db_load_routine is executed for
                an ambiguous function is annoying, since that can happen a lot,
                but in practice should not happen unless there *are* name
                collisions.
                If a collision exists, it should not be silenced but fixed.
              */
              push_warning_printf(thd,
                                  Sql_condition::WARN_LEVEL_NOTE,
                                  ER_NATIVE_FCT_NAME_COLLISION,
                                  ER(ER_NATIVE_FCT_NAME_COLLISION),
                                  sp->m_name.str);
            }
          }
    break;

  case 2638:

/* Line 1455 of yacc.c  */
#line 16367 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }

            lex->stmt_definition_begin= (yyvsp[(2) - (3)].simple_string);

            sp_head *sp= sp_start_parsing(thd, SP_TYPE_PROCEDURE, (yyvsp[(3) - (3)].spname));

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;
          }
    break;

  case 2639:

/* Line 1455 of yacc.c  */
#line 16387 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            /*
              NOTE: the start of the parameters in the query string is
              YYLIP->get_cpp_tok_start() + 1. 1 is the length of '(', which the
              tokenizer has just passed (just YYLIP->get_cpp_tok_start() points
              to the '(').
            */

            Lex->sphead->m_parser_data.set_parameter_start_ptr(
              YYLIP->get_cpp_tok_start() + 1);
          }
    break;

  case 2640:

/* Line 1455 of yacc.c  */
#line 16400 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            Lex->sphead->m_parser_data.set_parameter_end_ptr(
              YYLIP->get_cpp_tok_start());

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
    break;

  case 2641:

/* Line 1455 of yacc.c  */
#line 16410 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_chistics= &lex->sp_chistics;
            lex->sphead->set_body_start(thd, YYLIP->get_cpp_tok_start());
          }
    break;

  case 2642:

/* Line 1455 of yacc.c  */
#line 16418 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_PROCEDURE;
          }
    break;

  case 2643:

/* Line 1455 of yacc.c  */
#line 16432 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_START;
          }
    break;

  case 2644:

/* Line 1455 of yacc.c  */
#line 16436 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_END;
          }
    break;

  case 2645:

/* Line 1455 of yacc.c  */
#line 16440 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_PREPARE;
          }
    break;

  case 2646:

/* Line 1455 of yacc.c  */
#line 16444 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_COMMIT;
          }
    break;

  case 2647:

/* Line 1455 of yacc.c  */
#line 16448 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_ROLLBACK;
          }
    break;

  case 2648:

/* Line 1455 of yacc.c  */
#line 16452 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_RECOVER;
          }
    break;

  case 2649:

/* Line 1455 of yacc.c  */
#line 16459 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (1)].string)->length() <= MAXGTRIDSIZE);
            if (!(Lex->xid=(XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            Lex->xid->set(1L, (yyvsp[(1) - (1)].string)->ptr(), (yyvsp[(1) - (1)].string)->length(), 0, 0);
          }
    break;

  case 2650:

/* Line 1455 of yacc.c  */
#line 16466 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (3)].string)->length() <= MAXGTRIDSIZE && (yyvsp[(3) - (3)].string)->length() <= MAXBQUALSIZE);
            if (!(Lex->xid=(XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            Lex->xid->set(1L, (yyvsp[(1) - (3)].string)->ptr(), (yyvsp[(1) - (3)].string)->length(), (yyvsp[(3) - (3)].string)->ptr(), (yyvsp[(3) - (3)].string)->length());
          }
    break;

  case 2651:

/* Line 1455 of yacc.c  */
#line 16473 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (5)].string)->length() <= MAXGTRIDSIZE && (yyvsp[(3) - (5)].string)->length() <= MAXBQUALSIZE);
            if (!(Lex->xid=(XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            Lex->xid->set((yyvsp[(5) - (5)].ulong_num), (yyvsp[(1) - (5)].string)->ptr(), (yyvsp[(1) - (5)].string)->length(), (yyvsp[(3) - (5)].string)->ptr(), (yyvsp[(3) - (5)].string)->length());
          }
    break;

  case 2652:

/* Line 1455 of yacc.c  */
#line 16482 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2653:

/* Line 1455 of yacc.c  */
#line 16483 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2654:

/* Line 1455 of yacc.c  */
#line 16487 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->xa_opt=XA_NONE;        }
    break;

  case 2655:

/* Line 1455 of yacc.c  */
#line 16488 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->xa_opt=XA_JOIN;        }
    break;

  case 2656:

/* Line 1455 of yacc.c  */
#line 16489 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->xa_opt=XA_RESUME;      }
    break;

  case 2657:

/* Line 1455 of yacc.c  */
#line 16493 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->xa_opt=XA_NONE;        }
    break;

  case 2658:

/* Line 1455 of yacc.c  */
#line 16494 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->xa_opt=XA_ONE_PHASE;   }
    break;

  case 2659:

/* Line 1455 of yacc.c  */
#line 16499 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->xa_opt=XA_NONE;        }
    break;

  case 2660:

/* Line 1455 of yacc.c  */
#line 16501 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->xa_opt=XA_SUSPEND;     }
    break;

  case 2662:

/* Line 1455 of yacc.c  */
#line 16506 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {}
    break;

  case 2663:

/* Line 1455 of yacc.c  */
#line 16507 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    { Lex->xa_opt=XA_FOR_MIGRATE; }
    break;

  case 2664:

/* Line 1455 of yacc.c  */
#line 16512 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSTALL_PLUGIN;
            lex->comment= (yyvsp[(3) - (5)].lex_str);
            lex->ident= (yyvsp[(5) - (5)].lex_str);
          }
    break;

  case 2665:

/* Line 1455 of yacc.c  */
#line 16522 "/export/home/pb2/build/sb_0-8905559-1365164376.65/mysql-5.6.11-release-export-5034961_gpl/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_UNINSTALL_PLUGIN;
            lex->comment= (yyvsp[(3) - (3)].lex_str);
          }
    break;



/* Line 1455 of yacc.c  */
#line 41955 "/export/home/pb2/build/sb_0-8905559-1365164376.65/dist_GPL/sql/sql_yacc.cc"
      default: break;
    }
  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;

  /* Now `shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*------------------------------------.
| yyerrlab -- here on detecting error |
`------------------------------------*/
yyerrlab:
  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if ! YYERROR_VERBOSE
      yyerror (YY_("syntax error"));
#else
      {
	YYSIZE_T yysize = yysyntax_error (0, yystate, yychar);
	if (yymsg_alloc < yysize && yymsg_alloc < YYSTACK_ALLOC_MAXIMUM)
	  {
	    YYSIZE_T yyalloc = 2 * yysize;
	    if (! (yysize <= yyalloc && yyalloc <= YYSTACK_ALLOC_MAXIMUM))
	      yyalloc = YYSTACK_ALLOC_MAXIMUM;
	    if (yymsg != yymsgbuf)
	      YYSTACK_FREE (yymsg);
	    yymsg = (char *) YYSTACK_ALLOC (yyalloc);
	    if (yymsg)
	      yymsg_alloc = yyalloc;
	    else
	      {
		yymsg = yymsgbuf;
		yymsg_alloc = sizeof yymsgbuf;
	      }
	  }

	if (0 < yysize && yysize <= yymsg_alloc)
	  {
	    (void) yysyntax_error (yymsg, yystate, yychar);
	    yyerror (yymsg);
	  }
	else
	  {
	    yyerror (YY_("syntax error"));
	    if (yysize != 0)
	      goto yyexhaustedlab;
	  }
      }
#endif
    }



  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse lookahead token after an
	 error, discard it.  */

      if (yychar <= YYEOF)
	{
	  /* Return failure if at end of input.  */
	  if (yychar == YYEOF)
	    YYABORT;
	}
      else
	{
	  yydestruct ("Error: discarding",
		      yytoken, &yylval);
	  yychar = YYEMPTY;
	}
    }

  /* Else will try to reuse lookahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

  /* Pacify compilers like GCC when the user code never invokes
     YYERROR and the label yyerrorlab therefore never appears in user
     code.  */
  if (/*CONSTCOND*/ 0)
     goto yyerrorlab;

  /* Do not reclaim the symbols of the rule which action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;	/* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (yyn != YYPACT_NINF)
	{
	  yyn += YYTERROR;
	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
	    {
	      yyn = yytable[yyn];
	      if (0 < yyn)
		break;
	    }
	}

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
	YYABORT;


      yydestruct ("Error: popping",
		  yystos[yystate], yyvsp);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  *++yyvsp = yylval;


  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#if !defined(yyoverflow) || YYERROR_VERBOSE
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
  if (yychar != YYEMPTY)
     yydestruct ("Cleanup: discarding lookahead",
		 yytoken, &yylval);
  /* Do not reclaim the symbols of the rule which action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
		  yystos[*yyssp], yyvsp);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
#if YYERROR_VERBOSE
  if (yymsg != yymsgbuf)
    YYSTACK_FREE (yymsg);
#endif
  /* Make sure YYID is used.  */
  return YYID (yyresult);
}



