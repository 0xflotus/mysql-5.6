/* A Bison parser, made by GNU Bison 2.3.  */

/* Skeleton implementation for Bison's Yacc-like parsers in C

   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
   Free Software Foundation, Inc.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 51 Franklin Street, Fifth Floor,
   Boston, MA 02110-1301, USA.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "2.3"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Using locations.  */
#define YYLSP_NEEDED 0

/* Substitute the variable and function names.  */
#define yyparse MYSQLparse
#define yylex   MYSQLlex
#define yyerror MYSQLerror
#define yylval  MYSQLlval
#define yychar  MYSQLchar
#define yydebug MYSQLdebug
#define yynerrs MYSQLnerrs


/* Tokens.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
   /* Put the tokens into the symbol table, so that GDB and other debuggers
      know about them.  */
   enum yytokentype {
     ABORT_SYM = 258,
     ACCESSIBLE_SYM = 259,
     ACTION = 260,
     ADD = 261,
     ADDDATE_SYM = 262,
     AFTER_SYM = 263,
     AGAINST = 264,
     AGGREGATE_SYM = 265,
     ALGORITHM_SYM = 266,
     ALL = 267,
     ALTER = 268,
     ANALYZE_SYM = 269,
     AND_AND_SYM = 270,
     AND_SYM = 271,
     ANY_SYM = 272,
     AS = 273,
     ASC = 274,
     ASCII_SYM = 275,
     ASENSITIVE_SYM = 276,
     AT_SYM = 277,
     AUTHORS_SYM = 278,
     AUTOEXTEND_SIZE_SYM = 279,
     AUTO_INC = 280,
     AVG_ROW_LENGTH = 281,
     AVG_SYM = 282,
     BACKUP_SYM = 283,
     BEFORE_SYM = 284,
     BEGIN_SYM = 285,
     BETWEEN_SYM = 286,
     BIGINT = 287,
     BINARY = 288,
     BINLOG_SYM = 289,
     BIN_NUM = 290,
     BIT_AND = 291,
     BIT_OR = 292,
     BIT_SYM = 293,
     BIT_XOR = 294,
     BLOB_SYM = 295,
     BLOCK_SYM = 296,
     BOOLEAN_SYM = 297,
     BOOL_SYM = 298,
     BOTH = 299,
     BTREE_SYM = 300,
     BY = 301,
     BYTE_SYM = 302,
     CACHE_SYM = 303,
     CALL_SYM = 304,
     CASCADE = 305,
     CASCADED = 306,
     CASE_SYM = 307,
     CAST_SYM = 308,
     CATALOG_NAME_SYM = 309,
     CHAIN_SYM = 310,
     CHANGE = 311,
     CHANGED = 312,
     CHARSET = 313,
     CHAR_SYM = 314,
     CHECKSUM_SYM = 315,
     CHECK_SYM = 316,
     CIPHER_SYM = 317,
     CLASS_ORIGIN_SYM = 318,
     CLIENT_SYM = 319,
     CLOSE_SYM = 320,
     COALESCE = 321,
     CODE_SYM = 322,
     COLLATE_SYM = 323,
     COLLATION_SYM = 324,
     COLUMNS = 325,
     COLUMN_SYM = 326,
     COLUMN_NAME_SYM = 327,
     COMMENT_SYM = 328,
     COMMITTED_SYM = 329,
     COMMIT_SYM = 330,
     COMPACT_SYM = 331,
     COMPLETION_SYM = 332,
     COMPRESSED_SYM = 333,
     CONCURRENT = 334,
     CONDITION_SYM = 335,
     CONNECTION_SYM = 336,
     CONSISTENT_SYM = 337,
     CONSTRAINT = 338,
     CONSTRAINT_CATALOG_SYM = 339,
     CONSTRAINT_NAME_SYM = 340,
     CONSTRAINT_SCHEMA_SYM = 341,
     CONTAINS_SYM = 342,
     CONTEXT_SYM = 343,
     CONTINUE_SYM = 344,
     CONTRIBUTORS_SYM = 345,
     CONVERT_SYM = 346,
     COUNT_SYM = 347,
     CPU_SYM = 348,
     CREATE = 349,
     CROSS = 350,
     CUBE_SYM = 351,
     CURDATE = 352,
     CURRENT_SYM = 353,
     CURRENT_USER = 354,
     CURSOR_SYM = 355,
     CURSOR_NAME_SYM = 356,
     CURTIME = 357,
     DATABASE = 358,
     DATABASES = 359,
     DATAFILE_SYM = 360,
     DATA_SYM = 361,
     DATETIME = 362,
     DATE_ADD_INTERVAL = 363,
     DATE_SUB_INTERVAL = 364,
     DATE_SYM = 365,
     DAY_HOUR_SYM = 366,
     DAY_MICROSECOND_SYM = 367,
     DAY_MINUTE_SYM = 368,
     DAY_SECOND_SYM = 369,
     DAY_SYM = 370,
     DEALLOCATE_SYM = 371,
     DECIMAL_NUM = 372,
     DECIMAL_SYM = 373,
     DECLARE_SYM = 374,
     DEFAULT = 375,
     DEFAULT_AUTH_SYM = 376,
     DEFINER_SYM = 377,
     DELAYED_SYM = 378,
     DELAY_KEY_WRITE_SYM = 379,
     DELETE_SYM = 380,
     DESC = 381,
     DESCRIBE = 382,
     DES_KEY_FILE = 383,
     DETERMINISTIC_SYM = 384,
     DIAGNOSTICS_SYM = 385,
     DIRECTORY_SYM = 386,
     DISABLE_SYM = 387,
     DISCARD = 388,
     DISK_SYM = 389,
     DISTINCT = 390,
     DIV_SYM = 391,
     DOUBLE_SYM = 392,
     DO_SYM = 393,
     DROP = 394,
     DUAL_SYM = 395,
     DUMPFILE = 396,
     DUPLICATE_SYM = 397,
     DYNAMIC_SYM = 398,
     EACH_SYM = 399,
     ELSE = 400,
     ELSEIF_SYM = 401,
     ENABLE_SYM = 402,
     ENCLOSED = 403,
     END = 404,
     ENDS_SYM = 405,
     END_OF_INPUT = 406,
     ENGINES_SYM = 407,
     ENGINE_SYM = 408,
     ENUM = 409,
     EQ = 410,
     EQUAL_SYM = 411,
     ERROR_SYM = 412,
     ERRORS = 413,
     ESCAPED = 414,
     ESCAPE_SYM = 415,
     EVENTS_SYM = 416,
     EVENT_SYM = 417,
     EVERY_SYM = 418,
     EXCHANGE_SYM = 419,
     EXECUTE_SYM = 420,
     EXISTS = 421,
     EXIT_SYM = 422,
     EXPANSION_SYM = 423,
     EXTENDED_SYM = 424,
     EXTENT_SIZE_SYM = 425,
     EXTRACT_SYM = 426,
     FALSE_SYM = 427,
     FAST_SYM = 428,
     FAULTS_SYM = 429,
     FETCH_SYM = 430,
     FILE_SYM = 431,
     FIRST_SYM = 432,
     FIXED_SYM = 433,
     FLOAT_NUM = 434,
     FLOAT_SYM = 435,
     FLUSH_SYM = 436,
     FORCE_SYM = 437,
     FOREIGN = 438,
     FOR_SYM = 439,
     FORMAT_SYM = 440,
     FOUND_SYM = 441,
     FROM = 442,
     FULL = 443,
     FULLTEXT_SYM = 444,
     FUNCTION_SYM = 445,
     GE = 446,
     GENERAL = 447,
     GEOMETRYCOLLECTION = 448,
     GEOMETRY_SYM = 449,
     GET_FORMAT = 450,
     GET_SYM = 451,
     GLOBAL_SYM = 452,
     GRANT = 453,
     GRANTS = 454,
     GROUP_SYM = 455,
     GROUP_CONCAT_SYM = 456,
     GT_SYM = 457,
     HANDLER_SYM = 458,
     HASH_SYM = 459,
     HAVING = 460,
     HELP_SYM = 461,
     HEX_NUM = 462,
     HIGH_PRIORITY = 463,
     HOST_SYM = 464,
     HOSTS_SYM = 465,
     HOUR_MICROSECOND_SYM = 466,
     HOUR_MINUTE_SYM = 467,
     HOUR_SECOND_SYM = 468,
     HOUR_SYM = 469,
     IDENT = 470,
     IDENTIFIED_SYM = 471,
     IDENT_QUOTED = 472,
     IF = 473,
     IGNORE_SYM = 474,
     IGNORE_SERVER_IDS_SYM = 475,
     IMPORT = 476,
     INDEXES = 477,
     INDEX_SYM = 478,
     INFILE = 479,
     INITIAL_SIZE_SYM = 480,
     INNER_SYM = 481,
     INOUT_SYM = 482,
     INSENSITIVE_SYM = 483,
     INSERT = 484,
     INSERT_METHOD = 485,
     INSTALL_SYM = 486,
     INTERVAL_SYM = 487,
     INTO = 488,
     INT_SYM = 489,
     INVOKER_SYM = 490,
     IN_SYM = 491,
     IO_AFTER_GTIDS = 492,
     IO_BEFORE_GTIDS = 493,
     IO_SYM = 494,
     IPC_SYM = 495,
     IS = 496,
     ISOLATION = 497,
     ISSUER_SYM = 498,
     ITERATE_SYM = 499,
     JOIN_SYM = 500,
     KEYS = 501,
     KEY_BLOCK_SIZE = 502,
     KEY_SYM = 503,
     KILL_SYM = 504,
     LANGUAGE_SYM = 505,
     LAST_SYM = 506,
     LE = 507,
     LEADING = 508,
     LEAVES = 509,
     LEAVE_SYM = 510,
     LEFT = 511,
     LESS_SYM = 512,
     LEVEL_SYM = 513,
     LEX_HOSTNAME = 514,
     LIKE = 515,
     LIMIT = 516,
     LINEAR_SYM = 517,
     LINES = 518,
     LINESTRING = 519,
     LIST_SYM = 520,
     LOAD = 521,
     LOCAL_SYM = 522,
     LOCATOR_SYM = 523,
     LOCKS_SYM = 524,
     LOCK_SYM = 525,
     LOGFILE_SYM = 526,
     LOGS_SYM = 527,
     LONGBLOB = 528,
     LONGTEXT = 529,
     LONG_NUM = 530,
     LONG_SYM = 531,
     LOOP_SYM = 532,
     LOW_PRIORITY = 533,
     LT = 534,
     MASTER_AUTO_POSITION_SYM = 535,
     MASTER_BIND_SYM = 536,
     MASTER_CONNECT_RETRY_SYM = 537,
     MASTER_DELAY_SYM = 538,
     MASTER_HOST_SYM = 539,
     MASTER_LOG_FILE_SYM = 540,
     MASTER_LOG_POS_SYM = 541,
     MASTER_PASSWORD_SYM = 542,
     MASTER_PORT_SYM = 543,
     MASTER_RETRY_COUNT_SYM = 544,
     MASTER_SERVER_ID_SYM = 545,
     MASTER_SSL_CAPATH_SYM = 546,
     MASTER_SSL_CA_SYM = 547,
     MASTER_SSL_CERT_SYM = 548,
     MASTER_SSL_CIPHER_SYM = 549,
     MASTER_SSL_CRL_SYM = 550,
     MASTER_SSL_CRLPATH_SYM = 551,
     MASTER_SSL_KEY_SYM = 552,
     MASTER_SSL_SYM = 553,
     MASTER_SSL_VERIFY_SERVER_CERT_SYM = 554,
     MASTER_SYM = 555,
     MASTER_USER_SYM = 556,
     MASTER_HEARTBEAT_PERIOD_SYM = 557,
     MATCH = 558,
     MAX_CONNECTIONS_PER_HOUR = 559,
     MAX_QUERIES_PER_HOUR = 560,
     MAX_ROWS = 561,
     MAX_SIZE_SYM = 562,
     MAX_SYM = 563,
     MAX_UPDATES_PER_HOUR = 564,
     MAX_USER_CONNECTIONS_SYM = 565,
     MAX_VALUE_SYM = 566,
     MEDIUMBLOB = 567,
     MEDIUMINT = 568,
     MEDIUMTEXT = 569,
     MEDIUM_SYM = 570,
     MEMORY_SYM = 571,
     MERGE_SYM = 572,
     MESSAGE_TEXT_SYM = 573,
     MICROSECOND_SYM = 574,
     MIGRATE_SYM = 575,
     MINUTE_MICROSECOND_SYM = 576,
     MINUTE_SECOND_SYM = 577,
     MINUTE_SYM = 578,
     MIN_ROWS = 579,
     MIN_SYM = 580,
     MODE_SYM = 581,
     MODIFIES_SYM = 582,
     MODIFY_SYM = 583,
     MOD_SYM = 584,
     MONTH_SYM = 585,
     MULTILINESTRING = 586,
     MULTIPOINT = 587,
     MULTIPOLYGON = 588,
     MUTEX_SYM = 589,
     MYSQL_ERRNO_SYM = 590,
     NAMES_SYM = 591,
     NAME_SYM = 592,
     NATIONAL_SYM = 593,
     NATURAL = 594,
     NCHAR_STRING = 595,
     NCHAR_SYM = 596,
     NDBCLUSTER_SYM = 597,
     NE = 598,
     NEG = 599,
     NEW_SYM = 600,
     NEXT_SYM = 601,
     NODEGROUP_SYM = 602,
     NONE_SYM = 603,
     NOT2_SYM = 604,
     NOT_SYM = 605,
     NOW_SYM = 606,
     NO_SYM = 607,
     NO_WAIT_SYM = 608,
     NO_WRITE_TO_BINLOG = 609,
     NULL_SYM = 610,
     NUM = 611,
     NUMBER_SYM = 612,
     NUMERIC_SYM = 613,
     NVARCHAR_SYM = 614,
     OFFSET_SYM = 615,
     OLD_PASSWORD = 616,
     ON = 617,
     ONE_SYM = 618,
     ONLY_SYM = 619,
     OPEN_SYM = 620,
     OPTIMIZE = 621,
     OPTIONS_SYM = 622,
     OPTION = 623,
     OPTIONALLY = 624,
     OR2_SYM = 625,
     ORDER_SYM = 626,
     OR_OR_SYM = 627,
     OR_SYM = 628,
     OUTER = 629,
     OUTFILE = 630,
     OUT_SYM = 631,
     OWNER_SYM = 632,
     PACK_KEYS_SYM = 633,
     PAGE_SYM = 634,
     PARAM_MARKER = 635,
     PARSER_SYM = 636,
     PARTIAL = 637,
     PARTITION_SYM = 638,
     PARTITIONS_SYM = 639,
     PARTITIONING_SYM = 640,
     PASSWORD = 641,
     PHASE_SYM = 642,
     PLUGIN_DIR_SYM = 643,
     PLUGIN_SYM = 644,
     PLUGINS_SYM = 645,
     POINT_SYM = 646,
     POLYGON = 647,
     PORT_SYM = 648,
     POSITION_SYM = 649,
     PRECISION = 650,
     PREPARE_SYM = 651,
     PRESERVE_SYM = 652,
     PREV_SYM = 653,
     PRIMARY_SYM = 654,
     PRIVILEGES = 655,
     PROCEDURE_SYM = 656,
     PROCESS = 657,
     PROCESSLIST_SYM = 658,
     PROFILE_SYM = 659,
     PROFILES_SYM = 660,
     PROXY_SYM = 661,
     PURGE = 662,
     QUARTER_SYM = 663,
     QUERY_SYM = 664,
     QUICK = 665,
     RANGE_SYM = 666,
     READS_SYM = 667,
     READ_ONLY_SYM = 668,
     READ_SYM = 669,
     READ_WRITE_SYM = 670,
     REAL = 671,
     REBUILD_SYM = 672,
     RECOVER_SYM = 673,
     REDOFILE_SYM = 674,
     REDO_BUFFER_SIZE_SYM = 675,
     REDUNDANT_SYM = 676,
     REFERENCES = 677,
     REGEXP = 678,
     RELAY = 679,
     RELAYLOG_SYM = 680,
     RELAY_LOG_FILE_SYM = 681,
     RELAY_LOG_POS_SYM = 682,
     RELAY_THREAD = 683,
     RELEASE_SYM = 684,
     RELOAD = 685,
     REMOVE_SYM = 686,
     RENAME = 687,
     REORGANIZE_SYM = 688,
     REPAIR = 689,
     REPEATABLE_SYM = 690,
     REPEAT_SYM = 691,
     REPLACE = 692,
     REPLICATION = 693,
     REQUIRE_SYM = 694,
     RESET_SYM = 695,
     RESIGNAL_SYM = 696,
     RESOURCES = 697,
     RESTORE_SYM = 698,
     RESTRICT = 699,
     RESUME_SYM = 700,
     RETURNED_SQLSTATE_SYM = 701,
     RETURNS_SYM = 702,
     RETURN_SYM = 703,
     REVERSE_SYM = 704,
     REVOKE = 705,
     RIGHT = 706,
     ROLLBACK_SYM = 707,
     ROLLUP_SYM = 708,
     ROUTINE_SYM = 709,
     ROWS_SYM = 710,
     ROW_FORMAT_SYM = 711,
     ROW_SYM = 712,
     ROW_COUNT_SYM = 713,
     RTREE_SYM = 714,
     SAVEPOINT_SYM = 715,
     SCHEDULE_SYM = 716,
     SCHEMA_NAME_SYM = 717,
     SECOND_MICROSECOND_SYM = 718,
     SECOND_SYM = 719,
     SECURITY_SYM = 720,
     SELECT_SYM = 721,
     SENSITIVE_SYM = 722,
     SEPARATOR_SYM = 723,
     SERIALIZABLE_SYM = 724,
     SERIAL_SYM = 725,
     SESSION_SYM = 726,
     SERVER_SYM = 727,
     SERVER_OPTIONS = 728,
     SET = 729,
     SET_VAR = 730,
     SHARE_SYM = 731,
     SHIFT_LEFT = 732,
     SHIFT_RIGHT = 733,
     SHOW = 734,
     SHUTDOWN = 735,
     SIGNAL_SYM = 736,
     SIGNED_SYM = 737,
     SIMPLE_SYM = 738,
     SLAVE = 739,
     SLOW = 740,
     SMALLINT = 741,
     SNAPSHOT_SYM = 742,
     SOCKET_SYM = 743,
     SONAME_SYM = 744,
     SOUNDS_SYM = 745,
     SOURCE_SYM = 746,
     SPATIAL_SYM = 747,
     SPECIFIC_SYM = 748,
     SQLEXCEPTION_SYM = 749,
     SQLSTATE_SYM = 750,
     SQLWARNING_SYM = 751,
     SQL_AFTER_GTIDS = 752,
     SQL_BEFORE_GTIDS = 753,
     SQL_BIG_RESULT = 754,
     SQL_BUFFER_RESULT = 755,
     SQL_CACHE_SYM = 756,
     SQL_CALC_FOUND_ROWS = 757,
     SQL_NO_CACHE_SYM = 758,
     SQL_SMALL_RESULT = 759,
     SQL_SYM = 760,
     SQL_THREAD = 761,
     SSL_SYM = 762,
     STARTING = 763,
     STARTS_SYM = 764,
     START_SYM = 765,
     STATUS_SYM = 766,
     STDDEV_SAMP_SYM = 767,
     STD_SYM = 768,
     STOP_SYM = 769,
     STORAGE_SYM = 770,
     STRAIGHT_JOIN = 771,
     STRING_SYM = 772,
     SUBCLASS_ORIGIN_SYM = 773,
     SUBDATE_SYM = 774,
     SUBJECT_SYM = 775,
     SUBPARTITIONS_SYM = 776,
     SUBPARTITION_SYM = 777,
     SUBSTRING = 778,
     SUM_SYM = 779,
     SUPER_SYM = 780,
     SUSPEND_SYM = 781,
     SWAPS_SYM = 782,
     SWITCHES_SYM = 783,
     SYSDATE = 784,
     TABLES = 785,
     TABLESPACE = 786,
     TABLE_REF_PRIORITY = 787,
     TABLE_SYM = 788,
     TABLE_CHECKSUM_SYM = 789,
     TABLE_NAME_SYM = 790,
     TEMPORARY = 791,
     TEMPTABLE_SYM = 792,
     TERMINATED = 793,
     TEXT_STRING = 794,
     TEXT_SYM = 795,
     THAN_SYM = 796,
     THEN_SYM = 797,
     TIMESTAMP = 798,
     TIMESTAMP_ADD = 799,
     TIMESTAMP_DIFF = 800,
     TIME_SYM = 801,
     TINYBLOB = 802,
     TINYINT = 803,
     TINYTEXT = 804,
     TO_SYM = 805,
     TRAILING = 806,
     TRANSACTION_SYM = 807,
     TRIGGERS_SYM = 808,
     TRIGGER_SYM = 809,
     TRIM = 810,
     TRUE_SYM = 811,
     TRUNCATE_SYM = 812,
     TYPES_SYM = 813,
     TYPE_SYM = 814,
     UDF_RETURNS_SYM = 815,
     ULONGLONG_NUM = 816,
     UNCOMMITTED_SYM = 817,
     UNDEFINED_SYM = 818,
     UNDERSCORE_CHARSET = 819,
     UNDOFILE_SYM = 820,
     UNDO_BUFFER_SIZE_SYM = 821,
     UNDO_SYM = 822,
     UNICODE_SYM = 823,
     UNINSTALL_SYM = 824,
     UNION_SYM = 825,
     UNIQUE_SYM = 826,
     UNKNOWN_SYM = 827,
     UNLOCK_SYM = 828,
     UNSIGNED = 829,
     UNTIL_SYM = 830,
     UPDATE_SYM = 831,
     UPGRADE_SYM = 832,
     USAGE = 833,
     USER = 834,
     USE_FRM = 835,
     USE_SYM = 836,
     USING = 837,
     UTC_DATE_SYM = 838,
     UTC_TIMESTAMP_SYM = 839,
     UTC_TIME_SYM = 840,
     VALUES = 841,
     VALUE_SYM = 842,
     VARBINARY = 843,
     VARCHAR = 844,
     VARIABLES = 845,
     VARIANCE_SYM = 846,
     VARYING = 847,
     VAR_SAMP_SYM = 848,
     VIEW_SYM = 849,
     WAIT_SYM = 850,
     WARNINGS = 851,
     WEEK_SYM = 852,
     WEIGHT_STRING_SYM = 853,
     WHEN_SYM = 854,
     WHERE = 855,
     WHILE_SYM = 856,
     WITH = 857,
     WITH_CUBE_SYM = 858,
     WITH_ROLLUP_SYM = 859,
     WORK_SYM = 860,
     WRAPPER_SYM = 861,
     WRITE_SYM = 862,
     X509_SYM = 863,
     XA_SYM = 864,
     XML_SYM = 865,
     XOR = 866,
     YEAR_MONTH_SYM = 867,
     YEAR_SYM = 868,
     ZEROFILL = 869
   };
#endif
/* Tokens.  */
#define ABORT_SYM 258
#define ACCESSIBLE_SYM 259
#define ACTION 260
#define ADD 261
#define ADDDATE_SYM 262
#define AFTER_SYM 263
#define AGAINST 264
#define AGGREGATE_SYM 265
#define ALGORITHM_SYM 266
#define ALL 267
#define ALTER 268
#define ANALYZE_SYM 269
#define AND_AND_SYM 270
#define AND_SYM 271
#define ANY_SYM 272
#define AS 273
#define ASC 274
#define ASCII_SYM 275
#define ASENSITIVE_SYM 276
#define AT_SYM 277
#define AUTHORS_SYM 278
#define AUTOEXTEND_SIZE_SYM 279
#define AUTO_INC 280
#define AVG_ROW_LENGTH 281
#define AVG_SYM 282
#define BACKUP_SYM 283
#define BEFORE_SYM 284
#define BEGIN_SYM 285
#define BETWEEN_SYM 286
#define BIGINT 287
#define BINARY 288
#define BINLOG_SYM 289
#define BIN_NUM 290
#define BIT_AND 291
#define BIT_OR 292
#define BIT_SYM 293
#define BIT_XOR 294
#define BLOB_SYM 295
#define BLOCK_SYM 296
#define BOOLEAN_SYM 297
#define BOOL_SYM 298
#define BOTH 299
#define BTREE_SYM 300
#define BY 301
#define BYTE_SYM 302
#define CACHE_SYM 303
#define CALL_SYM 304
#define CASCADE 305
#define CASCADED 306
#define CASE_SYM 307
#define CAST_SYM 308
#define CATALOG_NAME_SYM 309
#define CHAIN_SYM 310
#define CHANGE 311
#define CHANGED 312
#define CHARSET 313
#define CHAR_SYM 314
#define CHECKSUM_SYM 315
#define CHECK_SYM 316
#define CIPHER_SYM 317
#define CLASS_ORIGIN_SYM 318
#define CLIENT_SYM 319
#define CLOSE_SYM 320
#define COALESCE 321
#define CODE_SYM 322
#define COLLATE_SYM 323
#define COLLATION_SYM 324
#define COLUMNS 325
#define COLUMN_SYM 326
#define COLUMN_NAME_SYM 327
#define COMMENT_SYM 328
#define COMMITTED_SYM 329
#define COMMIT_SYM 330
#define COMPACT_SYM 331
#define COMPLETION_SYM 332
#define COMPRESSED_SYM 333
#define CONCURRENT 334
#define CONDITION_SYM 335
#define CONNECTION_SYM 336
#define CONSISTENT_SYM 337
#define CONSTRAINT 338
#define CONSTRAINT_CATALOG_SYM 339
#define CONSTRAINT_NAME_SYM 340
#define CONSTRAINT_SCHEMA_SYM 341
#define CONTAINS_SYM 342
#define CONTEXT_SYM 343
#define CONTINUE_SYM 344
#define CONTRIBUTORS_SYM 345
#define CONVERT_SYM 346
#define COUNT_SYM 347
#define CPU_SYM 348
#define CREATE 349
#define CROSS 350
#define CUBE_SYM 351
#define CURDATE 352
#define CURRENT_SYM 353
#define CURRENT_USER 354
#define CURSOR_SYM 355
#define CURSOR_NAME_SYM 356
#define CURTIME 357
#define DATABASE 358
#define DATABASES 359
#define DATAFILE_SYM 360
#define DATA_SYM 361
#define DATETIME 362
#define DATE_ADD_INTERVAL 363
#define DATE_SUB_INTERVAL 364
#define DATE_SYM 365
#define DAY_HOUR_SYM 366
#define DAY_MICROSECOND_SYM 367
#define DAY_MINUTE_SYM 368
#define DAY_SECOND_SYM 369
#define DAY_SYM 370
#define DEALLOCATE_SYM 371
#define DECIMAL_NUM 372
#define DECIMAL_SYM 373
#define DECLARE_SYM 374
#define DEFAULT 375
#define DEFAULT_AUTH_SYM 376
#define DEFINER_SYM 377
#define DELAYED_SYM 378
#define DELAY_KEY_WRITE_SYM 379
#define DELETE_SYM 380
#define DESC 381
#define DESCRIBE 382
#define DES_KEY_FILE 383
#define DETERMINISTIC_SYM 384
#define DIAGNOSTICS_SYM 385
#define DIRECTORY_SYM 386
#define DISABLE_SYM 387
#define DISCARD 388
#define DISK_SYM 389
#define DISTINCT 390
#define DIV_SYM 391
#define DOUBLE_SYM 392
#define DO_SYM 393
#define DROP 394
#define DUAL_SYM 395
#define DUMPFILE 396
#define DUPLICATE_SYM 397
#define DYNAMIC_SYM 398
#define EACH_SYM 399
#define ELSE 400
#define ELSEIF_SYM 401
#define ENABLE_SYM 402
#define ENCLOSED 403
#define END 404
#define ENDS_SYM 405
#define END_OF_INPUT 406
#define ENGINES_SYM 407
#define ENGINE_SYM 408
#define ENUM 409
#define EQ 410
#define EQUAL_SYM 411
#define ERROR_SYM 412
#define ERRORS 413
#define ESCAPED 414
#define ESCAPE_SYM 415
#define EVENTS_SYM 416
#define EVENT_SYM 417
#define EVERY_SYM 418
#define EXCHANGE_SYM 419
#define EXECUTE_SYM 420
#define EXISTS 421
#define EXIT_SYM 422
#define EXPANSION_SYM 423
#define EXTENDED_SYM 424
#define EXTENT_SIZE_SYM 425
#define EXTRACT_SYM 426
#define FALSE_SYM 427
#define FAST_SYM 428
#define FAULTS_SYM 429
#define FETCH_SYM 430
#define FILE_SYM 431
#define FIRST_SYM 432
#define FIXED_SYM 433
#define FLOAT_NUM 434
#define FLOAT_SYM 435
#define FLUSH_SYM 436
#define FORCE_SYM 437
#define FOREIGN 438
#define FOR_SYM 439
#define FORMAT_SYM 440
#define FOUND_SYM 441
#define FROM 442
#define FULL 443
#define FULLTEXT_SYM 444
#define FUNCTION_SYM 445
#define GE 446
#define GENERAL 447
#define GEOMETRYCOLLECTION 448
#define GEOMETRY_SYM 449
#define GET_FORMAT 450
#define GET_SYM 451
#define GLOBAL_SYM 452
#define GRANT 453
#define GRANTS 454
#define GROUP_SYM 455
#define GROUP_CONCAT_SYM 456
#define GT_SYM 457
#define HANDLER_SYM 458
#define HASH_SYM 459
#define HAVING 460
#define HELP_SYM 461
#define HEX_NUM 462
#define HIGH_PRIORITY 463
#define HOST_SYM 464
#define HOSTS_SYM 465
#define HOUR_MICROSECOND_SYM 466
#define HOUR_MINUTE_SYM 467
#define HOUR_SECOND_SYM 468
#define HOUR_SYM 469
#define IDENT 470
#define IDENTIFIED_SYM 471
#define IDENT_QUOTED 472
#define IF 473
#define IGNORE_SYM 474
#define IGNORE_SERVER_IDS_SYM 475
#define IMPORT 476
#define INDEXES 477
#define INDEX_SYM 478
#define INFILE 479
#define INITIAL_SIZE_SYM 480
#define INNER_SYM 481
#define INOUT_SYM 482
#define INSENSITIVE_SYM 483
#define INSERT 484
#define INSERT_METHOD 485
#define INSTALL_SYM 486
#define INTERVAL_SYM 487
#define INTO 488
#define INT_SYM 489
#define INVOKER_SYM 490
#define IN_SYM 491
#define IO_AFTER_GTIDS 492
#define IO_BEFORE_GTIDS 493
#define IO_SYM 494
#define IPC_SYM 495
#define IS 496
#define ISOLATION 497
#define ISSUER_SYM 498
#define ITERATE_SYM 499
#define JOIN_SYM 500
#define KEYS 501
#define KEY_BLOCK_SIZE 502
#define KEY_SYM 503
#define KILL_SYM 504
#define LANGUAGE_SYM 505
#define LAST_SYM 506
#define LE 507
#define LEADING 508
#define LEAVES 509
#define LEAVE_SYM 510
#define LEFT 511
#define LESS_SYM 512
#define LEVEL_SYM 513
#define LEX_HOSTNAME 514
#define LIKE 515
#define LIMIT 516
#define LINEAR_SYM 517
#define LINES 518
#define LINESTRING 519
#define LIST_SYM 520
#define LOAD 521
#define LOCAL_SYM 522
#define LOCATOR_SYM 523
#define LOCKS_SYM 524
#define LOCK_SYM 525
#define LOGFILE_SYM 526
#define LOGS_SYM 527
#define LONGBLOB 528
#define LONGTEXT 529
#define LONG_NUM 530
#define LONG_SYM 531
#define LOOP_SYM 532
#define LOW_PRIORITY 533
#define LT 534
#define MASTER_AUTO_POSITION_SYM 535
#define MASTER_BIND_SYM 536
#define MASTER_CONNECT_RETRY_SYM 537
#define MASTER_DELAY_SYM 538
#define MASTER_HOST_SYM 539
#define MASTER_LOG_FILE_SYM 540
#define MASTER_LOG_POS_SYM 541
#define MASTER_PASSWORD_SYM 542
#define MASTER_PORT_SYM 543
#define MASTER_RETRY_COUNT_SYM 544
#define MASTER_SERVER_ID_SYM 545
#define MASTER_SSL_CAPATH_SYM 546
#define MASTER_SSL_CA_SYM 547
#define MASTER_SSL_CERT_SYM 548
#define MASTER_SSL_CIPHER_SYM 549
#define MASTER_SSL_CRL_SYM 550
#define MASTER_SSL_CRLPATH_SYM 551
#define MASTER_SSL_KEY_SYM 552
#define MASTER_SSL_SYM 553
#define MASTER_SSL_VERIFY_SERVER_CERT_SYM 554
#define MASTER_SYM 555
#define MASTER_USER_SYM 556
#define MASTER_HEARTBEAT_PERIOD_SYM 557
#define MATCH 558
#define MAX_CONNECTIONS_PER_HOUR 559
#define MAX_QUERIES_PER_HOUR 560
#define MAX_ROWS 561
#define MAX_SIZE_SYM 562
#define MAX_SYM 563
#define MAX_UPDATES_PER_HOUR 564
#define MAX_USER_CONNECTIONS_SYM 565
#define MAX_VALUE_SYM 566
#define MEDIUMBLOB 567
#define MEDIUMINT 568
#define MEDIUMTEXT 569
#define MEDIUM_SYM 570
#define MEMORY_SYM 571
#define MERGE_SYM 572
#define MESSAGE_TEXT_SYM 573
#define MICROSECOND_SYM 574
#define MIGRATE_SYM 575
#define MINUTE_MICROSECOND_SYM 576
#define MINUTE_SECOND_SYM 577
#define MINUTE_SYM 578
#define MIN_ROWS 579
#define MIN_SYM 580
#define MODE_SYM 581
#define MODIFIES_SYM 582
#define MODIFY_SYM 583
#define MOD_SYM 584
#define MONTH_SYM 585
#define MULTILINESTRING 586
#define MULTIPOINT 587
#define MULTIPOLYGON 588
#define MUTEX_SYM 589
#define MYSQL_ERRNO_SYM 590
#define NAMES_SYM 591
#define NAME_SYM 592
#define NATIONAL_SYM 593
#define NATURAL 594
#define NCHAR_STRING 595
#define NCHAR_SYM 596
#define NDBCLUSTER_SYM 597
#define NE 598
#define NEG 599
#define NEW_SYM 600
#define NEXT_SYM 601
#define NODEGROUP_SYM 602
#define NONE_SYM 603
#define NOT2_SYM 604
#define NOT_SYM 605
#define NOW_SYM 606
#define NO_SYM 607
#define NO_WAIT_SYM 608
#define NO_WRITE_TO_BINLOG 609
#define NULL_SYM 610
#define NUM 611
#define NUMBER_SYM 612
#define NUMERIC_SYM 613
#define NVARCHAR_SYM 614
#define OFFSET_SYM 615
#define OLD_PASSWORD 616
#define ON 617
#define ONE_SYM 618
#define ONLY_SYM 619
#define OPEN_SYM 620
#define OPTIMIZE 621
#define OPTIONS_SYM 622
#define OPTION 623
#define OPTIONALLY 624
#define OR2_SYM 625
#define ORDER_SYM 626
#define OR_OR_SYM 627
#define OR_SYM 628
#define OUTER 629
#define OUTFILE 630
#define OUT_SYM 631
#define OWNER_SYM 632
#define PACK_KEYS_SYM 633
#define PAGE_SYM 634
#define PARAM_MARKER 635
#define PARSER_SYM 636
#define PARTIAL 637
#define PARTITION_SYM 638
#define PARTITIONS_SYM 639
#define PARTITIONING_SYM 640
#define PASSWORD 641
#define PHASE_SYM 642
#define PLUGIN_DIR_SYM 643
#define PLUGIN_SYM 644
#define PLUGINS_SYM 645
#define POINT_SYM 646
#define POLYGON 647
#define PORT_SYM 648
#define POSITION_SYM 649
#define PRECISION 650
#define PREPARE_SYM 651
#define PRESERVE_SYM 652
#define PREV_SYM 653
#define PRIMARY_SYM 654
#define PRIVILEGES 655
#define PROCEDURE_SYM 656
#define PROCESS 657
#define PROCESSLIST_SYM 658
#define PROFILE_SYM 659
#define PROFILES_SYM 660
#define PROXY_SYM 661
#define PURGE 662
#define QUARTER_SYM 663
#define QUERY_SYM 664
#define QUICK 665
#define RANGE_SYM 666
#define READS_SYM 667
#define READ_ONLY_SYM 668
#define READ_SYM 669
#define READ_WRITE_SYM 670
#define REAL 671
#define REBUILD_SYM 672
#define RECOVER_SYM 673
#define REDOFILE_SYM 674
#define REDO_BUFFER_SIZE_SYM 675
#define REDUNDANT_SYM 676
#define REFERENCES 677
#define REGEXP 678
#define RELAY 679
#define RELAYLOG_SYM 680
#define RELAY_LOG_FILE_SYM 681
#define RELAY_LOG_POS_SYM 682
#define RELAY_THREAD 683
#define RELEASE_SYM 684
#define RELOAD 685
#define REMOVE_SYM 686
#define RENAME 687
#define REORGANIZE_SYM 688
#define REPAIR 689
#define REPEATABLE_SYM 690
#define REPEAT_SYM 691
#define REPLACE 692
#define REPLICATION 693
#define REQUIRE_SYM 694
#define RESET_SYM 695
#define RESIGNAL_SYM 696
#define RESOURCES 697
#define RESTORE_SYM 698
#define RESTRICT 699
#define RESUME_SYM 700
#define RETURNED_SQLSTATE_SYM 701
#define RETURNS_SYM 702
#define RETURN_SYM 703
#define REVERSE_SYM 704
#define REVOKE 705
#define RIGHT 706
#define ROLLBACK_SYM 707
#define ROLLUP_SYM 708
#define ROUTINE_SYM 709
#define ROWS_SYM 710
#define ROW_FORMAT_SYM 711
#define ROW_SYM 712
#define ROW_COUNT_SYM 713
#define RTREE_SYM 714
#define SAVEPOINT_SYM 715
#define SCHEDULE_SYM 716
#define SCHEMA_NAME_SYM 717
#define SECOND_MICROSECOND_SYM 718
#define SECOND_SYM 719
#define SECURITY_SYM 720
#define SELECT_SYM 721
#define SENSITIVE_SYM 722
#define SEPARATOR_SYM 723
#define SERIALIZABLE_SYM 724
#define SERIAL_SYM 725
#define SESSION_SYM 726
#define SERVER_SYM 727
#define SERVER_OPTIONS 728
#define SET 729
#define SET_VAR 730
#define SHARE_SYM 731
#define SHIFT_LEFT 732
#define SHIFT_RIGHT 733
#define SHOW 734
#define SHUTDOWN 735
#define SIGNAL_SYM 736
#define SIGNED_SYM 737
#define SIMPLE_SYM 738
#define SLAVE 739
#define SLOW 740
#define SMALLINT 741
#define SNAPSHOT_SYM 742
#define SOCKET_SYM 743
#define SONAME_SYM 744
#define SOUNDS_SYM 745
#define SOURCE_SYM 746
#define SPATIAL_SYM 747
#define SPECIFIC_SYM 748
#define SQLEXCEPTION_SYM 749
#define SQLSTATE_SYM 750
#define SQLWARNING_SYM 751
#define SQL_AFTER_GTIDS 752
#define SQL_BEFORE_GTIDS 753
#define SQL_BIG_RESULT 754
#define SQL_BUFFER_RESULT 755
#define SQL_CACHE_SYM 756
#define SQL_CALC_FOUND_ROWS 757
#define SQL_NO_CACHE_SYM 758
#define SQL_SMALL_RESULT 759
#define SQL_SYM 760
#define SQL_THREAD 761
#define SSL_SYM 762
#define STARTING 763
#define STARTS_SYM 764
#define START_SYM 765
#define STATUS_SYM 766
#define STDDEV_SAMP_SYM 767
#define STD_SYM 768
#define STOP_SYM 769
#define STORAGE_SYM 770
#define STRAIGHT_JOIN 771
#define STRING_SYM 772
#define SUBCLASS_ORIGIN_SYM 773
#define SUBDATE_SYM 774
#define SUBJECT_SYM 775
#define SUBPARTITIONS_SYM 776
#define SUBPARTITION_SYM 777
#define SUBSTRING 778
#define SUM_SYM 779
#define SUPER_SYM 780
#define SUSPEND_SYM 781
#define SWAPS_SYM 782
#define SWITCHES_SYM 783
#define SYSDATE 784
#define TABLES 785
#define TABLESPACE 786
#define TABLE_REF_PRIORITY 787
#define TABLE_SYM 788
#define TABLE_CHECKSUM_SYM 789
#define TABLE_NAME_SYM 790
#define TEMPORARY 791
#define TEMPTABLE_SYM 792
#define TERMINATED 793
#define TEXT_STRING 794
#define TEXT_SYM 795
#define THAN_SYM 796
#define THEN_SYM 797
#define TIMESTAMP 798
#define TIMESTAMP_ADD 799
#define TIMESTAMP_DIFF 800
#define TIME_SYM 801
#define TINYBLOB 802
#define TINYINT 803
#define TINYTEXT 804
#define TO_SYM 805
#define TRAILING 806
#define TRANSACTION_SYM 807
#define TRIGGERS_SYM 808
#define TRIGGER_SYM 809
#define TRIM 810
#define TRUE_SYM 811
#define TRUNCATE_SYM 812
#define TYPES_SYM 813
#define TYPE_SYM 814
#define UDF_RETURNS_SYM 815
#define ULONGLONG_NUM 816
#define UNCOMMITTED_SYM 817
#define UNDEFINED_SYM 818
#define UNDERSCORE_CHARSET 819
#define UNDOFILE_SYM 820
#define UNDO_BUFFER_SIZE_SYM 821
#define UNDO_SYM 822
#define UNICODE_SYM 823
#define UNINSTALL_SYM 824
#define UNION_SYM 825
#define UNIQUE_SYM 826
#define UNKNOWN_SYM 827
#define UNLOCK_SYM 828
#define UNSIGNED 829
#define UNTIL_SYM 830
#define UPDATE_SYM 831
#define UPGRADE_SYM 832
#define USAGE 833
#define USER 834
#define USE_FRM 835
#define USE_SYM 836
#define USING 837
#define UTC_DATE_SYM 838
#define UTC_TIMESTAMP_SYM 839
#define UTC_TIME_SYM 840
#define VALUES 841
#define VALUE_SYM 842
#define VARBINARY 843
#define VARCHAR 844
#define VARIABLES 845
#define VARIANCE_SYM 846
#define VARYING 847
#define VAR_SAMP_SYM 848
#define VIEW_SYM 849
#define WAIT_SYM 850
#define WARNINGS 851
#define WEEK_SYM 852
#define WEIGHT_STRING_SYM 853
#define WHEN_SYM 854
#define WHERE 855
#define WHILE_SYM 856
#define WITH 857
#define WITH_CUBE_SYM 858
#define WITH_ROLLUP_SYM 859
#define WORK_SYM 860
#define WRAPPER_SYM 861
#define WRITE_SYM 862
#define X509_SYM 863
#define XA_SYM 864
#define XML_SYM 865
#define XOR 866
#define YEAR_MONTH_SYM 867
#define YEAR_SYM 868
#define ZEROFILL 869




/* Copy the first part of user declarations.  */
#line 24 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"

/* thd is passed as an argument to yyparse(), and subsequently to yylex().
** The type will be void*, so it must be  cast to (THD*) when used.
** Use the YYTHD macro for this.
*/
#define YYPARSE_PARAM yythd
#define YYLEX_PARAM yythd
#define YYTHD ((THD *)yythd)
#define YYLIP (& YYTHD->m_parser_state->m_lip)
#define YYPS (& YYTHD->m_parser_state->m_yacc)
#define YYCSCL  YYTHD->variables.character_set_client

#define MYSQL_YACC
#define YYINITDEPTH 100
#define YYMAXDEPTH 3200                        /* Because of 64K stack */
#define Lex (YYTHD->lex)
#define Select Lex->current_select
#include "sql_priv.h"
#include "unireg.h"                    // REQUIRED: for other includes
#include "sql_parse.h"                        /* comp_*_creator */
#include "sql_table.h"                        /* primary_key_name */
#include "sql_partition.h"  /* mem_alloc_error, partition_info, HASH_PARTITION */
#include "sql_acl.h"                          /* *_ACL */
#include "password.h"       /* my_make_scrambled_password_323, my_make_scrambled_password */
#include "sql_class.h"      /* Key_part_spec, enum_filetype, Diag_condition_item_name */
#include "rpl_slave.h"
#include "lex_symbol.h"
#include "item_create.h"
#include "sp_head.h"
#include "sp_pcontext.h"
#include "sp_rcontext.h"
#include "sp.h"
#include "sql_alter.h"                         // Sql_cmd_alter_table*
#include "sql_truncate.h"                      // Sql_cmd_truncate_table
#include "sql_admin.h"                         // Sql_cmd_analyze/Check..._table
#include "sql_partition_admin.h"               // Sql_cmd_alter_table_*_part.
#include "sql_handler.h"                       // Sql_cmd_handler_*
#include "sql_signal.h"
#include "sql_get_diagnostics.h"               // Sql_cmd_get_diagnostics
#include "event_parse_data.h"
#include <myisam.h>
#include <myisammrg.h>
#include "keycaches.h"
#include "set_var.h"
#include "opt_explain_traditional.h"
#include "opt_explain_json.h"

/* this is to get the bison compilation windows warnings out */
#ifdef _MSC_VER
/* warning C4065: switch statement contains 'default' but no 'case' labels */
#pragma warning (disable : 4065)
#endif

using std::min;
using std::max;

int yylex(void *yylval, void *yythd);

#define yyoverflow(A,B,C,D,E,F)               \
  {                                           \
    ulong val= *(F);                          \
    if (my_yyoverflow((B), (D), &val))        \
    {                                         \
      yyerror((char*) (A));                   \
      return 2;                               \
    }                                         \
    else                                      \
    {                                         \
      *(F)= (YYSIZE_T)val;                    \
    }                                         \
  }

#define MYSQL_YYABORT                         \
  do                                          \
  {                                           \
    LEX::cleanup_lex_after_parse_error(YYTHD);\
    YYABORT;                                  \
  } while (0)

#define MYSQL_YYABORT_UNLESS(A)         \
  if (!(A))                             \
  {                                     \
    my_parse_error(ER(ER_SYNTAX_ERROR));\
    MYSQL_YYABORT;                      \
  }

/*
  Work around for broken code generated by bison 1.875.

  The code generated by bison 1.875a and later, bison 2.1 and bison 2.2 is ok.
  With bison 1.875 however, the generated code contains:
<pre>
  yyerrlab1:
  #if defined (__GNUC_MINOR__) && 2093 <= (__GNUC__ * 1000 + __GNUC_MINOR__)
    __attribute__ ((__unused__))
  #endif
</pre>
  This usage of __attribute__ is illegal, so we remove it.
  See the following references for details:
  http://lists.gnu.org/archive/html/bug-bison/2004-02/msg00014.html
  http://gcc.gnu.org/bugzilla/show_bug.cgi?id=14273
*/

#if defined (__GNUC_MINOR__) && 2093 <= (__GNUC__ * 1000 + __GNUC_MINOR__)
#undef __attribute__
#define __attribute__(X)
#endif


#ifndef DBUG_OFF
#define YYDEBUG 1
#else
#define YYDEBUG 0
#endif

/**
  @brief Push an error message into MySQL error stack with line
  and position information.

  This function provides semantic action implementers with a way
  to push the famous "You have a syntax error near..." error
  message into the error stack, which is normally produced only if
  a parse error is discovered internally by the Bison generated
  parser.
*/

void my_parse_error(const char *s)
{
  THD *thd= current_thd;
  Lex_input_stream *lip= & thd->m_parser_state->m_lip;

  const char *yytext= lip->get_tok_start();
  if (!yytext)
    yytext= "";

  /* Push an error into the error stack */
  ErrConvString err(yytext, thd->variables.character_set_client);
  my_printf_error(ER_PARSE_ERROR,  ER(ER_PARSE_ERROR), MYF(0), s,
                  err.ptr(), lip->yylineno);
}

/**
  @brief Bison callback to report a syntax/OOM error

  This function is invoked by the bison-generated parser
  when a syntax error, a parse error or an out-of-memory
  condition occurs. This function is not invoked when the
  parser is requested to abort by semantic action code
  by means of YYABORT or YYACCEPT macros. This is why these
  macros should not be used (use MYSQL_YYABORT/MYSQL_YYACCEPT
  instead).

  The parser will abort immediately after invoking this callback.

  This function is not for use in semantic actions and is internal to
  the parser, as it performs some pre-return cleanup. 
  In semantic actions, please use my_parse_error or my_error to
  push an error into the error stack and MYSQL_YYABORT
  to abort from the parser.
*/

void MYSQLerror(const char *s)
{
  THD *thd= current_thd;

  /*
    Restore the original LEX if it was replaced when parsing
    a stored procedure. We must ensure that a parsing error
    does not leave any side effects in the THD.
  */
  LEX::cleanup_lex_after_parse_error(thd);

  /* "parse error" changed into "syntax error" between bison 1.75 and 1.875 */
  if (strcmp(s,"parse error") == 0 || strcmp(s,"syntax error") == 0)
    s= ER(ER_SYNTAX_ERROR);
  my_parse_error(s);
}


#ifndef DBUG_OFF
void turn_parser_debug_on()
{
  /*
     MYSQLdebug is in sql/sql_yacc.cc, in bison generated code.
     Turning this option on is **VERY** verbose, and should be
     used when investigating a syntax error problem only.

     The syntax to run with bison traces is as follows :
     - Starting a server manually :
       mysqld --debug="d,parser_debug" ...
     - Running a test :
       mysql-test-run.pl --mysqld="--debug=d,parser_debug" ...

     The result will be in the process stderr (var/log/master.err)
   */

  extern int yydebug;
  yydebug= 1;
}
#endif

static bool is_native_function(THD *thd, const LEX_STRING *name)
{
  if (find_native_function_builder(thd, *name))
    return true;

  if (is_lex_native_function(name))
    return true;

  return false;
}


/**
  Helper action for a case statement (entering the CASE).
  This helper is used for both 'simple' and 'searched' cases.
  This helper, with the other case_stmt_action_..., is executed when
  the following SQL code is parsed:
<pre>
CREATE PROCEDURE proc_19194_simple(i int)
BEGIN
  DECLARE str CHAR(10);

  CASE i
    WHEN 1 THEN SET str="1";
    WHEN 2 THEN SET str="2";
    WHEN 3 THEN SET str="3";
    ELSE SET str="unknown";
  END CASE;

  SELECT str;
END
</pre>
  The actions are used to generate the following code:
<pre>
SHOW PROCEDURE CODE proc_19194_simple;
Pos     Instruction
0       set str@1 NULL
1       set_case_expr (12) 0 i@0
2       jump_if_not 5(12) (case_expr@0 = 1)
3       set str@1 _latin1'1'
4       jump 12
5       jump_if_not 8(12) (case_expr@0 = 2)
6       set str@1 _latin1'2'
7       jump 12
8       jump_if_not 11(12) (case_expr@0 = 3)
9       set str@1 _latin1'3'
10      jump 12
11      set str@1 _latin1'unknown'
12      stmt 0 "SELECT str"
</pre>

  @param lex the parser lex context
*/

void case_stmt_action_case(LEX *lex)
{
  lex->sphead->new_cont_backpatch(NULL);

  /*
    BACKPATCH: Creating target label for the jump to
    "case_stmt_action_end_case"
    (Instruction 12 in the example)
  */

  lex->spcont->push_label(current_thd, EMPTY_STR, lex->sphead->instructions());
}

/**
  Helper action for a case expression statement (the expr in 'CASE expr').
  This helper is used for 'searched' cases only.
  @param lex the parser lex context
  @param expr the parsed expression
  @return 0 on success
*/

int case_stmt_action_expr(LEX *lex, Item* expr)
{
  sp_head *sp= lex->sphead;
  sp_pcontext *parsing_ctx= lex->spcont;
  int case_expr_id= parsing_ctx->register_case_expr();
  sp_instr_set_case_expr *i;

  if (parsing_ctx->push_case_expr_id(case_expr_id))
    return 1;

  i= new sp_instr_set_case_expr(sp->instructions(),
                                parsing_ctx, case_expr_id, expr, lex);

  sp->add_cont_backpatch(i);
  return sp->add_instr(i);
}

/**
  Helper action for a case when condition.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
  @param when the parsed expression for the WHEN clause
  @param simple true for simple cases, false for searched cases
*/

int case_stmt_action_when(LEX *lex, Item *when, bool simple)
{
  sp_head *sp= lex->sphead;
  sp_pcontext *ctx= lex->spcont;
  uint ip= sp->instructions();
  sp_instr_jump_if_not *i;
  Item_case_expr *var;
  Item *expr;

  if (simple)
  {
    var= new Item_case_expr(ctx->get_current_case_expr_id());

#ifndef DBUG_OFF
    if (var)
    {
      var->m_sp= sp;
    }
#endif

    expr= new Item_func_eq(var, when);
    i= new sp_instr_jump_if_not(ip, ctx, expr, lex);
  }
  else
    i= new sp_instr_jump_if_not(ip, ctx, when, lex);

  /*
    BACKPATCH: Registering forward jump from
    "case_stmt_action_when" to "case_stmt_action_then"
    (jump_if_not from instruction 2 to 5, 5 to 8 ... in the example)
  */

  return !test(i) ||
         sp->push_backpatch(i, ctx->push_label(current_thd, EMPTY_STR, 0)) ||
         sp->add_cont_backpatch(i) ||
         sp->add_instr(i);
}

/**
  Helper action for a case then statements.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
*/

int case_stmt_action_then(LEX *lex)
{
  sp_head *sp= lex->sphead;
  sp_pcontext *ctx= lex->spcont;
  uint ip= sp->instructions();
  sp_instr_jump *i = new sp_instr_jump(ip, ctx);
  if (!test(i) || sp->add_instr(i))
    return 1;

  /*
    BACKPATCH: Resolving forward jump from
    "case_stmt_action_when" to "case_stmt_action_then"
    (jump_if_not from instruction 2 to 5, 5 to 8 ... in the example)
  */

  sp->backpatch(ctx->pop_label());

  /*
    BACKPATCH: Registering forward jump from
    "case_stmt_action_then" to "case_stmt_action_end_case"
    (jump from instruction 4 to 12, 7 to 12 ... in the example)
  */

  return sp->push_backpatch(i, ctx->last_label());
}

/**
  Helper action for an end case.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
  @param simple true for simple cases, false for searched cases
*/

void case_stmt_action_end_case(LEX *lex, bool simple)
{
  /*
    BACKPATCH: Resolving forward jump from
    "case_stmt_action_then" to "case_stmt_action_end_case"
    (jump from instruction 4 to 12, 7 to 12 ... in the example)
  */
  lex->sphead->backpatch(lex->spcont->pop_label());

  if (simple)
    lex->spcont->pop_case_expr_id();

  lex->sphead->do_cont_backpatch();
}


static bool
find_sys_var_null_base(THD *thd, struct sys_var_with_base *tmp)
{
  tmp->var= find_sys_var(thd, tmp->base_name.str, tmp->base_name.length);

  if (tmp->var == NULL)
    my_error(ER_UNKNOWN_SYSTEM_VARIABLE, MYF(0), tmp->base_name.str);
  else
    tmp->base_name= null_lex_str;

  return thd->is_error();
}


/**
  Helper action for a SET statement.
  Used to push a system variable into the assignment list.

  @param thd      the current thread
  @param tmp      the system variable with base name
  @param var_type the scope of the variable
  @param val      the value being assigned to the variable

  @return TRUE if error, FALSE otherwise.
*/

static bool
set_system_variable(THD *thd, struct sys_var_with_base *tmp,
                    enum enum_var_type var_type, Item *val)
{
  set_var *var;
  LEX *lex= thd->lex;

  /* No AUTOCOMMIT from a stored function or trigger. */
  if (lex->spcont && tmp->var == Sys_autocommit_ptr)
    lex->sphead->m_flags|= sp_head::HAS_SET_AUTOCOMMIT_STMT;

#ifdef HAVE_REPLICATION
  if (lex->uses_stored_routines() &&
      (tmp->var == Sys_gtid_next_ptr
#ifdef HAVE_NDB_BINLOG
       || tmp->var == Sys_gtid_next_list_ptr
#endif
     ))
  {
    my_error(ER_SET_STATEMENT_CANNOT_INVOKE_FUNCTION, MYF(0),
             tmp->var->name.str);
    return TRUE;
  }
#endif

  if (! (var= new set_var(var_type, tmp->var, &tmp->base_name, val)))
    return TRUE;

  return lex->var_list.push_back(var);
}


/**
  Helper action for a SET statement.
  Used to push a SP local variable into the assignment list.

  @param thd      the current thread
  @param var_type the SP local variable
  @param val      the value being assigned to the variable

  @return TRUE if error, FALSE otherwise.
*/

static bool
set_local_variable(THD *thd, sp_variable *spv, Item *val)
{
  Item *it;
  LEX *lex= thd->lex;
  sp_instr_set *sp_set;

  if (val)
    it= val;
  else if (spv->default_value)
    it= spv->default_value;
  else
  {
    it= new (thd->mem_root) Item_null();
    if (it == NULL)
      return TRUE;
  }

  sp_set= new sp_instr_set(lex->sphead->instructions(), lex->spcont,
                           spv->offset, it, spv->type, lex, TRUE);

  return (sp_set == NULL || lex->sphead->add_instr(sp_set));
}


/**
  Helper action for a SET statement.
  Used to SET a field of NEW row.

  @param thd      the current thread
  @param name     the field name
  @param val      the value being assigned to the row

  @return TRUE if error, FALSE otherwise.
*/

static bool
set_trigger_new_row(THD *thd, LEX_STRING *name, Item *val)
{
  LEX *lex= thd->lex;
  Item_trigger_field *trg_fld;
  sp_instr_set_trigger_field *sp_fld;

  /* QQ: Shouldn't this be field's default value ? */
  if (! val)
    val= new Item_null();

  DBUG_ASSERT(lex->trg_chistics.action_time == TRG_ACTION_BEFORE &&
              (lex->trg_chistics.event == TRG_EVENT_INSERT ||
               lex->trg_chistics.event == TRG_EVENT_UPDATE));

  trg_fld= new (thd->mem_root)
            Item_trigger_field(lex->current_context(),
                               Item_trigger_field::NEW_ROW,
                               name->str, UPDATE_ACL, FALSE);

  if (trg_fld == NULL)
    return TRUE;

  sp_fld= new sp_instr_set_trigger_field(lex->sphead->instructions(),
                                         lex->spcont, trg_fld, val, lex);

  if (sp_fld == NULL)
    return TRUE;

  /*
    Let us add this item to list of all Item_trigger_field
    objects in trigger.
  */
  lex->trg_table_fields.link_in_list(trg_fld, &trg_fld->next_trg_field);

  return lex->sphead->add_instr(sp_fld);
}


/**
  Create an object to represent a SP variable in the Item-hierarchy.

  @param  thd         The current thread.
  @param  name        The SP variable name.
  @param  spvar       The SP variable (optional).
  @param  start_in_q  Start position of the SP variable name in the query.
  @param  end_in_q    End position of the SP variable name in the query.

  @remark If spvar is not specified, the name is used to search for the
          variable in the parse-time context. If the variable does not
          exist, a error is set and NULL is returned to the caller.

  @return An Item_splocal object representing the SP variable, or NULL on error.
*/
static Item_splocal*
create_item_for_sp_var(THD *thd, LEX_STRING name, sp_variable *spvar,
                       const char *start_in_q, const char *end_in_q)
{
  Item_splocal *item;
  LEX *lex= thd->lex;
  uint pos_in_q, len_in_q;
  sp_pcontext *spc = lex->spcont;

  /* If necessary, look for the variable. */
  if (spc && !spvar)
    spvar= spc->find_variable(name, false);

  if (!spvar)
  {
    my_error(ER_SP_UNDECLARED_VAR, MYF(0), name.str);
    return NULL;
  }

  DBUG_ASSERT(spc && spvar);

  /* Position and length of the SP variable name in the query. */
  pos_in_q= start_in_q - lex->sphead->m_tmp_query;
  len_in_q= end_in_q - start_in_q;

  item= new (thd->mem_root)
    Item_splocal(name, spvar->offset, spvar->type, pos_in_q, len_in_q);

#ifndef DBUG_OFF
  if (item)
    item->m_sp= lex->sphead;
#endif

  return item;
}


/**
  Helper to resolve the SQL:2003 Syntax exception 1) in <in predicate>.
  See SQL:2003, Part 2, section 8.4 <in predicate>, Note 184, page 383.
  This function returns the proper item for the SQL expression
  <code>left [NOT] IN ( expr )</code>
  @param thd the current thread
  @param left the in predicand
  @param equal true for IN predicates, false for NOT IN predicates
  @param expr first and only expression of the in value list
  @return an expression representing the IN predicate.
*/
Item* handle_sql2003_note184_exception(THD *thd, Item* left, bool equal,
                                       Item *expr)
{
  /*
    Relevant references for this issue:
    - SQL:2003, Part 2, section 8.4 <in predicate>, page 383,
    - SQL:2003, Part 2, section 7.2 <row value expression>, page 296,
    - SQL:2003, Part 2, section 6.3 <value expression primary>, page 174,
    - SQL:2003, Part 2, section 7.15 <subquery>, page 370,
    - SQL:2003 Feature F561, "Full value expressions".

    The exception in SQL:2003 Note 184 means:
    Item_singlerow_subselect, which corresponds to a <scalar subquery>,
    should be re-interpreted as an Item_in_subselect, which corresponds
    to a <table subquery> when used inside an <in predicate>.

    Our reading of Note 184 is reccursive, so that all:
    - IN (( <subquery> ))
    - IN ((( <subquery> )))
    - IN '('^N <subquery> ')'^N
    - etc
    should be interpreted as a <table subquery>, no matter how deep in the
    expression the <subquery> is.
  */

  Item *result;

  DBUG_ENTER("handle_sql2003_note184_exception");

  if (expr->type() == Item::SUBSELECT_ITEM)
  {
    Item_subselect *expr2 = (Item_subselect*) expr;

    if (expr2->substype() == Item_subselect::SINGLEROW_SUBS)
    {
      Item_singlerow_subselect *expr3 = (Item_singlerow_subselect*) expr2;
      st_select_lex *subselect;

      /*
        Implement the mandated change, by altering the semantic tree:
          left IN Item_singlerow_subselect(subselect)
        is modified to
          left IN (subselect)
        which is represented as
          Item_in_subselect(left, subselect)
      */
      subselect= expr3->invalidate_and_restore_select_lex();
      result= new (thd->mem_root) Item_in_subselect(left, subselect);

      if (! equal)
        result = negate_expression(thd, result);

      DBUG_RETURN(result);
    }
  }

  if (equal)
    result= new (thd->mem_root) Item_func_eq(left, expr);
  else
    result= new (thd->mem_root) Item_func_ne(left, expr);

  DBUG_RETURN(result);
}

/**
   @brief Creates a new SELECT_LEX for a UNION branch.

   Sets up and initializes a SELECT_LEX structure for a query once the parser
   discovers a UNION token. The current SELECT_LEX is pushed on the stack and
   the new SELECT_LEX becomes the current one.

   @param lex The parser state.

   @param is_union_distinct True if the union preceding the new select statement
   uses UNION DISTINCT.

   @param is_top_level This should be @c TRUE if the newly created SELECT_LEX
   is a non-nested statement.

   @return <code>false</code> if successful, <code>true</code> if an error was
   reported. In the latter case parsing should stop.
 */
bool add_select_to_union_list(LEX *lex, bool is_union_distinct, 
                              bool is_top_level)
{
  /* 
     Only the last SELECT can have INTO. Since the grammar won't allow INTO in
     a nested SELECT, we make this check only when creating a top-level SELECT.
  */
  if (is_top_level && lex->result)
  {
    my_error(ER_WRONG_USAGE, MYF(0), "UNION", "INTO");
    return TRUE;
  }
  if (lex->current_select->linkage == GLOBAL_OPTIONS_TYPE)
  {
    my_parse_error(ER(ER_SYNTAX_ERROR));
    return TRUE;
  }
  /* This counter shouldn't be incremented for UNION parts */
  lex->nest_level--;
  if (mysql_new_select(lex, 0))
    return TRUE;
  mysql_init_select(lex);
  lex->current_select->linkage=UNION_TYPE;
  if (is_union_distinct) /* UNION DISTINCT - remember position */
    lex->current_select->master_unit()->union_distinct=
      lex->current_select;
  return FALSE;
}

/**
   @brief Initializes a SELECT_LEX for a query within parentheses (aka
   braces).

   @return false if successful, true if an error was reported. In the latter
   case parsing should stop.
 */
bool setup_select_in_parentheses(LEX *lex) 
{
  SELECT_LEX * sel= lex->current_select;
  if (sel->set_braces(1))
  {
    my_parse_error(ER(ER_SYNTAX_ERROR));
    return TRUE;
  }
  if (sel->linkage == UNION_TYPE &&
      !sel->master_unit()->first_select()->braces &&
      sel->master_unit()->first_select()->linkage ==
      UNION_TYPE)
  {
    my_parse_error(ER(ER_SYNTAX_ERROR));
    return TRUE;
  }
  if (sel->linkage == UNION_TYPE &&
      sel->olap != UNSPECIFIED_OLAP_TYPE &&
      sel->master_unit()->fake_select_lex)
  {
    my_error(ER_WRONG_USAGE, MYF(0), "CUBE/ROLLUP", "ORDER BY");
    return TRUE;
  }
  /* select in braces, can't contain global parameters */
  if (sel->master_unit()->fake_select_lex)
    sel->master_unit()->global_parameters=
      sel->master_unit()->fake_select_lex;
  return FALSE;
}

static bool add_create_index_prepare (LEX *lex, Table_ident *table)
{
  lex->sql_command= SQLCOM_CREATE_INDEX;
  if (!lex->current_select->add_table_to_list(lex->thd, table, NULL,
                                              TL_OPTION_UPDATING,
                                              TL_READ_NO_INSERT,
                                              MDL_SHARED_NO_WRITE))
    return TRUE;
  lex->alter_info.reset();
  lex->alter_info.flags= ALTER_ADD_INDEX;
  lex->col_list.empty();
  lex->change= NullS;
  return FALSE;
}

static bool add_create_index (LEX *lex, Key::Keytype type,
                              const LEX_STRING &name,
                              KEY_CREATE_INFO *info= NULL, bool generated= 0)
{
  Key *key;
  key= new Key(type, name, info ? info : &lex->key_create_info, generated, 
               lex->col_list);
  if (key == NULL)
    return TRUE;

  lex->alter_info.key_list.push_back(key);
  lex->col_list.empty();
  return FALSE;
}


/**
  Create a separate LEX for each assignment if in SP.

  If we are in SP we want have own LEX for each assignment.
  This is mostly because it is hard for several sp_instr_set
  and sp_instr_set_trigger instructions share one LEX.
  (Well, it is theoretically possible but adds some extra
  overhead on preparation for execution stage and IMO less
  robust).

  QQ: May be we should simply prohibit group assignments in SP?

  @see sp_create_assignment_instr

  @param thd           Thread context
  @param no_lookahead  True if the parser has no lookahead
*/

static void sp_create_assignment_lex(THD *thd, bool no_lookahead)
{
  LEX *lex= thd->lex;

  if (lex->sphead)
  {
    Lex_input_stream *lip= &thd->m_parser_state->m_lip;
    LEX *old_lex= lex;
    lex->sphead->reset_lex(thd);
    lex= thd->lex;

    /* Set new LEX as if we at start of set rule. */
    lex->sql_command= SQLCOM_SET_OPTION;
    mysql_init_select(lex);
    lex->var_list.empty();
    lex->one_shot_set= 0;
    lex->autocommit= 0;
    /* get_ptr() is only correct with no lookahead. */
    DBUG_ASSERT(no_lookahead);
    lex->sphead->m_tmp_query= lip->get_ptr();
    /* Inherit from outer lex. */
    lex->option_type= old_lex->option_type;
  }
}


/**
  Create a SP instruction for a SET assignment.

  @see sp_create_assignment_lex

  @param thd           Thread context
  @param no_lookahead  True if the parser has no lookahead

  @return false if success, true otherwise.
*/

static bool sp_create_assignment_instr(THD *thd, bool no_lookahead)
{
  LEX *lex= thd->lex;

  if (lex->sphead)
  {
    sp_head *sp= lex->sphead;

    if (!lex->var_list.is_empty())
    {
      /*
        We have assignment to user or system variable or
        option setting, so we should construct sp_instr_stmt
        for it.
      */
      LEX_STRING qbuff;
      sp_instr_stmt *i;
      Lex_input_stream *lip= &thd->m_parser_state->m_lip;

      if (!(i= new sp_instr_stmt(sp->instructions(), lex->spcont,
                                 lex)))
        return true;

      /*
        Extract the query statement from the tokenizer.  The
        end is either lip->ptr, if there was no lookahead,
        lip->tok_end otherwise.
      */
      if (no_lookahead)
        qbuff.length= lip->get_ptr() - sp->m_tmp_query;
      else
        qbuff.length= lip->get_tok_end() - sp->m_tmp_query;

      if (!(qbuff.str= (char*) alloc_root(thd->mem_root,
                                          qbuff.length + 5)))
        return true;

      strmake(strmake(qbuff.str, "SET ", 4), sp->m_tmp_query,
              qbuff.length);
      qbuff.length+= 4;
      i->m_query= qbuff;
      if (sp->add_instr(i))
        return true;
    }
    enum_var_type inner_option_type= lex->option_type;
    if (lex->sphead->restore_lex(thd))
      return true;
    /* Copy option_type to outer lex in case it has changed. */
    thd->lex->option_type= inner_option_type;
  }
  return false;
}




/* Enabling traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* Enabling the token table.  */
#ifndef YYTOKEN_TABLE
# define YYTOKEN_TABLE 0
#endif

#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
typedef union YYSTYPE
#line 914 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
{
  int  num;
  ulong ulong_num;
  ulonglong ulonglong_number;
  longlong longlong_number;
  LEX_STRING lex_str;
  LEX_STRING *lex_str_ptr;
  LEX_SYMBOL symbol;
  Table_ident *table;
  char *simple_string;
  Item *item;
  Item_num *item_num;
  List<Item> *item_list;
  List<String> *string_list;
  String *string;
  Key_part_spec *key_part;
  TABLE_LIST *table_list;
  udf_func *udf;
  LEX_USER *lex_user;
  struct sys_var_with_base variable;
  enum enum_var_type var_type;
  Key::Keytype key_type;
  enum ha_key_alg key_alg;
  handlerton *db_type;
  enum row_type row_type;
  enum ha_rkey_function ha_rkey_mode;
  enum enum_ha_read_modes ha_read_mode;
  enum enum_tx_isolation tx_isolation;
  enum Cast_target cast_type;
  enum Item_udftype udf_type;
  const CHARSET_INFO *charset;
  thr_lock_type lock_type;
  interval_type interval, interval_time_st;
  timestamp_type date_time_type;
  st_select_lex *select_lex;
  chooser_compare_func_creator boolfunc2creator;
  class sp_condition_value *spcondvalue;
  struct { int vars, conds, hndlrs, curs; } spblock;
  sp_name *spname;
  LEX *lex;
  sp_head *sphead;
  struct p_elem_val *p_elem_value;
  enum index_hint_type index_hint;
  enum enum_filetype filetype;
  enum Foreign_key::fk_option m_fk_option;
  enum enum_yes_no_unknown m_yes_no_unk;
  Diag_condition_item_name diag_condition_item_name;
  Diagnostics_information::Which_area diag_area;
  Diagnostics_information *diag_info;
  Statement_information_item *stmt_info_item;
  Statement_information_item::Name stmt_info_item_name;
  List<Statement_information_item> *stmt_info_list;
  Condition_information_item *cond_info_item;
  Condition_information_item::Name cond_info_item_name;
  List<Condition_information_item> *cond_info_list;
}
/* Line 193 of yacc.c.  */
#line 2280 "/export/home/pb2/build/sb_0-5372937-1333009038.16/dist/sql/sql_yacc.cc"
	YYSTYPE;
# define yystype YYSTYPE /* obsolescent; will be withdrawn */
# define YYSTYPE_IS_DECLARED 1
# define YYSTYPE_IS_TRIVIAL 1
#endif



/* Copy the second part of user declarations.  */
#line 971 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"

bool my_yyoverflow(short **a, YYSTYPE **b, ulong *yystacksize);


/* Line 216 of yacc.c.  */
#line 2296 "/export/home/pb2/build/sb_0-5372937-1333009038.16/dist/sql/sql_yacc.cc"

#ifdef short
# undef short
#endif

#ifdef YYTYPE_UINT8
typedef YYTYPE_UINT8 yytype_uint8;
#else
typedef unsigned char yytype_uint8;
#endif

#ifdef YYTYPE_INT8
typedef YYTYPE_INT8 yytype_int8;
#elif (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
typedef signed char yytype_int8;
#else
typedef short int yytype_int8;
#endif

#ifdef YYTYPE_UINT16
typedef YYTYPE_UINT16 yytype_uint16;
#else
typedef unsigned short int yytype_uint16;
#endif

#ifdef YYTYPE_INT16
typedef YYTYPE_INT16 yytype_int16;
#else
typedef short int yytype_int16;
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif ! defined YYSIZE_T && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned int
# endif
#endif

#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)

#ifndef YY_
# if YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(msgid) dgettext ("bison-runtime", msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(msgid) msgid
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(e) ((void) (e))
#else
# define YYUSE(e) /* empty */
#endif

/* Identity function, used to suppress warnings about constant conditions.  */
#ifndef lint
# define YYID(n) (n)
#else
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static int
YYID (int i)
#else
static int
YYID (i)
    int i;
#endif
{
  return i;
}
#endif

#if ! defined yyoverflow || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#     ifndef _STDLIB_H
#      define _STDLIB_H 1
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's `empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (YYID (0))
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined _STDLIB_H \
       && ! ((defined YYMALLOC || defined malloc) \
	     && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef _STDLIB_H
#    define _STDLIB_H 1
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* ! defined yyoverflow || YYERROR_VERBOSE */


#if (! defined yyoverflow \
     && (! defined __cplusplus \
	 || (defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yytype_int16 yyss;
  YYSTYPE yyvs;
  };

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE)) \
      + YYSTACK_GAP_MAXIMUM)

/* Copy COUNT objects from FROM to TO.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(To, From, Count) \
      __builtin_memcpy (To, From, (Count) * sizeof (*(From)))
#  else
#   define YYCOPY(To, From, Count)		\
      do					\
	{					\
	  YYSIZE_T yyi;				\
	  for (yyi = 0; yyi < (Count); yyi++)	\
	    (To)[yyi] = (From)[yyi];		\
	}					\
      while (YYID (0))
#  endif
# endif

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack)					\
    do									\
      {									\
	YYSIZE_T yynewbytes;						\
	YYCOPY (&yyptr->Stack, Stack, yysize);				\
	Stack = &yyptr->Stack;						\
	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
	yyptr += yynewbytes / sizeof (*yyptr);				\
      }									\
    while (YYID (0))

#endif

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  588
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   53904

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  634
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  935
/* YYNRULES -- Number of rules.  */
#define YYNRULES  2619
/* YYNRULES -- Number of states.  */
#define YYNSTATES  4445

/* YYTRANSLATE(YYLEX) -- Bison symbol number corresponding to YYLEX.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   869

#define YYTRANSLATE(YYX)						\
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[YYLEX] -- Bison symbol number corresponding to YYLEX.  */
static const yytype_uint16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   627,     2,     2,     2,   621,   616,     2,
     624,   625,   619,   618,   626,   617,   632,   620,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   633,   630,
       2,     2,     2,     2,   631,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,   622,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   628,   615,   629,   623,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614
};

#if YYDEBUG
/* YYPRHS[YYN] -- Index of the first RHS symbol of rule number YYN in
   YYRHS.  */
static const yytype_uint16 yyprhs[] =
{
       0,     0,     3,     5,     6,    11,    14,    15,    17,    19,
      21,    23,    25,    27,    29,    31,    33,    35,    37,    39,
      41,    43,    45,    47,    49,    51,    53,    55,    57,    59,
      61,    63,    65,    67,    69,    71,    73,    75,    77,    79,
      81,    83,    85,    87,    89,    91,    93,    95,    97,    99,
     101,   103,   105,   107,   109,   111,   113,   115,   117,   119,
     121,   123,   125,   129,   131,   133,   138,   140,   143,   144,
     149,   150,   153,   157,   159,   162,   163,   167,   168,   174,
     176,   180,   184,   188,   192,   196,   200,   204,   208,   212,
     216,   220,   224,   228,   232,   236,   240,   244,   248,   252,
     258,   262,   264,   265,   267,   271,   273,   277,   281,   285,
     289,   290,   298,   299,   312,   313,   326,   327,   340,   341,
     348,   349,   353,   358,   363,   367,   370,   381,   383,   387,
     390,   393,   396,   399,   402,   405,   408,   409,   423,   424,
     431,   434,   435,   437,   441,   443,   444,   447,   448,   451,
     452,   454,   458,   463,   464,   467,   468,   471,   473,   475,
     477,   479,   481,   483,   485,   487,   489,   491,   493,   495,
     497,   498,   502,   504,   505,   508,   509,   512,   515,   518,
     521,   524,   528,   532,   534,   536,   538,   541,   545,   549,
     550,   555,   556,   560,   561,   563,   567,   569,   570,   572,
     576,   578,   579,   583,   584,   586,   590,   592,   597,   598,
     600,   602,   604,   605,   609,   612,   616,   617,   621,   622,
     628,   634,   635,   643,   649,   650,   653,   655,   657,   659,
     663,   665,   667,   669,   673,   674,   676,   678,   680,   682,
     685,   687,   691,   693,   695,   696,   698,   699,   702,   706,
     712,   714,   716,   718,   720,   722,   724,   726,   728,   730,
     732,   734,   736,   738,   740,   742,   746,   751,   752,   754,
     756,   760,   762,   766,   770,   772,   775,   777,   779,   781,
     783,   787,   791,   793,   795,   797,   799,   801,   803,   805,
     807,   809,   811,   813,   815,   817,   819,   823,   824,   827,
     829,   831,   833,   835,   837,   839,   841,   843,   845,   847,
     849,   851,   853,   854,   860,   861,   864,   865,   869,   870,
     873,   876,   879,   882,   883,   890,   893,   894,   897,   899,
     901,   905,   906,   907,   908,   916,   917,   920,   923,   925,
     927,   928,   929,   938,   939,   946,   948,   951,   953,   956,
     957,   958,   965,   966,   967,   974,   975,   978,   979,   985,
     986,   988,   989,   995,   996,   999,  1000,  1006,  1011,  1012,
    1013,  1022,  1023,  1031,  1033,  1035,  1037,  1039,  1041,  1044,
    1049,  1055,  1056,  1061,  1066,  1071,  1075,  1079,  1082,  1085,
    1086,  1089,  1091,  1094,  1098,  1100,  1102,  1104,  1105,  1107,
    1109,  1112,  1116,  1118,  1120,  1122,  1124,  1126,  1128,  1130,
    1132,  1133,  1135,  1137,  1140,  1144,  1146,  1148,  1150,  1152,
    1154,  1155,  1157,  1159,  1162,  1166,  1168,  1170,  1172,  1174,
    1176,  1178,  1180,  1181,  1183,  1185,  1188,  1192,  1194,  1196,
    1198,  1201,  1204,  1207,  1209,  1211,  1213,  1215,  1218,  1222,
    1226,  1230,  1234,  1238,  1242,  1246,  1250,  1255,  1257,  1259,
    1261,  1263,  1266,  1270,  1273,  1278,  1284,  1285,  1291,  1292,
    1293,  1299,  1300,  1308,  1310,  1311,  1313,  1314,  1319,  1320,
    1321,  1325,  1331,  1337,  1338,  1343,  1346,  1349,  1352,  1355,
    1356,  1358,  1359,  1361,  1363,  1367,  1369,  1374,  1380,  1386,
    1387,  1390,  1391,  1392,  1400,  1401,  1411,  1413,  1417,  1419,
    1421,  1422,  1425,  1426,  1430,  1432,  1436,  1437,  1444,  1446,
    1447,  1448,  1454,  1455,  1460,  1462,  1464,  1466,  1470,  1472,
    1476,  1477,  1478,  1484,  1486,  1490,  1492,  1494,  1495,  1499,
    1501,  1505,  1506,  1511,  1513,  1514,  1516,  1519,  1521,  1525,
    1530,  1534,  1538,  1542,  1547,  1552,  1556,  1557,  1558,  1565,
    1566,  1568,  1569,  1571,  1573,  1576,  1578,  1580,  1581,  1583,
    1585,  1588,  1590,  1591,  1595,  1596,  1598,  1600,  1603,  1605,
    1608,  1612,  1616,  1620,  1624,  1628,  1632,  1636,  1640,  1644,
    1648,  1652,  1656,  1660,  1664,  1665,  1672,  1674,  1676,  1680,
    1685,  1690,  1693,  1696,  1699,  1703,  1707,  1712,  1717,  1719,
    1721,  1723,  1725,  1727,  1729,  1731,  1733,  1735,  1737,  1739,
    1741,  1744,  1746,  1748,  1750,  1752,  1754,  1756,  1760,  1762,
    1764,  1767,  1770,  1778,  1787,  1796,  1805,  1814,  1817,  1818,
    1820,  1825,  1826,  1828,  1831,  1832,  1837,  1841,  1845,  1849,
    1851,  1854,  1856,  1858,  1862,  1865,  1869,  1872,  1875,  1877,
    1881,  1885,  1888,  1892,  1894,  1897,  1900,  1903,  1905,  1908,
    1910,  1912,  1914,  1917,  1921,  1924,  1928,  1931,  1934,  1938,
    1942,  1946,  1947,  1954,  1955,  1962,  1965,  1967,  1969,  1971,
    1973,  1975,  1977,  1979,  1981,  1983,  1985,  1987,  1990,  1993,
    1995,  1998,  2000,  2003,  2007,  2010,  2012,  2014,  2016,  2018,
    2020,  2022,  2024,  2027,  2028,  2030,  2032,  2038,  2039,  2043,
    2044,  2047,  2051,  2052,  2054,  2057,  2059,  2061,  2063,  2065,
    2069,  2073,  2077,  2081,  2082,  2084,  2085,  2087,  2088,  2090,
    2093,  2095,  2097,  2100,  2103,  2107,  2109,  2113,  2116,  2118,
    2121,  2124,  2127,  2130,  2133,  2135,  2137,  2140,  2142,  2144,
    2146,  2148,  2150,  2151,  2154,  2156,  2158,  2160,  2162,  2164,
    2165,  2168,  2170,  2172,  2173,  2175,  2177,  2180,  2183,  2185,
    2188,  2191,  2192,  2194,  2196,  2198,  2202,  2204,  2208,  2209,
    2211,  2212,  2217,  2219,  2221,  2223,  2224,  2226,  2229,  2231,
    2233,  2236,  2238,  2242,  2246,  2248,  2250,  2251,  2254,  2255,
    2257,  2263,  2264,  2268,  2272,  2274,  2275,  2278,  2281,  2284,
    2285,  2289,  2293,  2300,  2307,  2309,  2311,  2314,  2317,  2320,
    2322,  2325,  2328,  2330,  2332,  2333,  2335,  2337,  2339,  2341,
    2342,  2344,  2346,  2348,  2349,  2351,  2354,  2355,  2357,  2358,
    2360,  2361,  2363,  2365,  2368,  2370,  2373,  2375,  2378,  2381,
    2384,  2388,  2391,  2393,  2395,  2397,  2399,  2403,  2405,  2407,
    2409,  2414,  2417,  2419,  2424,  2425,  2427,  2428,  2431,  2433,
    2437,  2438,  2445,  2446,  2452,  2460,  2461,  2467,  2468,  2474,
    2475,  2481,  2482,  2487,  2488,  2499,  2503,  2508,  2512,  2516,
    2524,  2525,  2529,  2531,  2536,  2537,  2541,  2542,  2545,  2546,
    2548,  2549,  2552,  2555,  2558,  2561,  2563,  2565,  2567,  2571,
    2576,  2577,  2584,  2589,  2590,  2596,  2597,  2604,  2609,  2613,
    2615,  2623,  2627,  2629,  2631,  2632,  2638,  2639,  2643,  2646,
    2647,  2653,  2654,  2655,  2662,  2664,  2668,  2670,  2672,  2676,
    2679,  2683,  2686,  2691,  2692,  2699,  2700,  2701,  2710,  2715,
    2720,  2724,  2728,  2731,  2734,  2741,  2747,  2751,  2757,  2759,
    2761,  2763,  2764,  2766,  2767,  2769,  2770,  2772,  2774,  2775,
    2778,  2780,  2781,  2783,  2785,  2787,  2788,  2789,  2797,  2801,
    2805,  2806,  2808,  2810,  2814,  2818,  2821,  2824,  2829,  2830,
    2834,  2835,  2839,  2840,  2844,  2845,  2849,  2850,  2853,  2855,
    2859,  2860,  2862,  2864,  2865,  2868,  2870,  2874,  2878,  2879,
    2885,  2886,  2888,  2890,  2891,  2898,  2899,  2901,  2903,  2906,
    2908,  2910,  2912,  2913,  2919,  2922,  2923,  2929,  2930,  2932,
    2934,  2937,  2939,  2941,  2943,  2945,  2947,  2950,  2951,  2957,
    2958,  2960,  2962,  2963,  2968,  2973,  2977,  2983,  2985,  2989,
    2993,  2994,  3001,  3003,  3005,  3007,  3011,  3014,  3018,  3020,
    3022,  3023,  3030,  3032,  3034,  3036,  3040,  3044,  3049,  3050,
    3057,  3058,  3061,  3062,  3067,  3068,  3071,  3073,  3076,  3081,
    3084,  3088,  3091,  3095,  3096,  3100,  3101,  3102,  3109,  3112,
    3114,  3116,  3119,  3122,  3131,  3136,  3137,  3139,  3142,  3144,
    3146,  3148,  3150,  3151,  3154,  3159,  3163,  3165,  3167,  3171,
    3176,  3177,  3178,  3179,  3182,  3185,  3187,  3189,  3190,  3193,
    3197,  3201,  3205,  3208,  3212,  3217,  3221,  3226,  3230,  3235,
    3237,  3241,  3246,  3250,  3254,  3261,  3263,  3269,  3276,  3282,
    3290,  3297,  3306,  3312,  3319,  3324,  3329,  3335,  3339,  3344,
    3346,  3350,  3354,  3358,  3362,  3366,  3370,  3376,  3382,  3386,
    3390,  3394,  3398,  3402,  3406,  3408,  3410,  3412,  3414,  3416,
    3418,  3420,  3422,  3424,  3426,  3428,  3430,  3432,  3434,  3436,
    3438,  3440,  3442,  3444,  3446,  3448,  3450,  3454,  3456,  3458,
    3460,  3462,  3466,  3469,  3472,  3475,  3478,  3482,  3486,  3492,
    3499,  3504,  3509,  3517,  3520,  3527,  3533,  3540,  3547,  3552,
    3557,  3563,  3568,  3575,  3578,  3583,  3588,  3593,  3604,  3611,
    3620,  3627,  3632,  3637,  3644,  3649,  3654,  3659,  3666,  3671,
    3679,  3687,  3695,  3702,  3709,  3716,  3723,  3727,  3732,  3739,
    3748,  3751,  3754,  3763,  3772,  3779,  3786,  3788,  3795,  3802,
    3811,  3820,  3827,  3836,  3843,  3846,  3855,  3864,  3867,  3870,
    3873,  3878,  3883,  3888,  3893,  3897,  3906,  3913,  3922,  3927,
    3934,  3939,  3944,  3949,  3956,  3965,  3970,  3974,  3981,  3986,
    3993,  3999,  4008,  4016,  4027,  4029,  4036,  4041,  4046,  4051,
    4056,  4061,  4068,  4073,  4074,  4080,  4087,  4090,  4094,  4095,
    4100,  4101,  4105,  4106,  4108,  4110,  4114,  4119,  4124,  4130,
    4135,  4140,  4145,  4151,  4156,  4157,  4158,  4166,  4171,  4177,
    4182,  4188,  4193,  4198,  4203,  4208,  4213,  4219,  4220,  4229,
    4230,  4234,  4238,  4240,  4245,  4246,  4248,  4249,  4252,  4253,
    4255,  4256,  4260,  4263,  4267,  4270,  4272,  4275,  4277,  4280,
    4282,  4285,  4288,  4291,  4292,  4294,  4296,  4300,  4302,  4306,
    4308,  4312,  4313,  4315,  4316,  4319,  4324,  4330,  4332,  4334,
    4336,  4338,  4343,  4345,  4349,  4353,  4357,  4358,  4365,  4366,
    4373,  4374,  4383,  4388,  4389,  4398,  4399,  4410,  4417,  4418,
    4427,  4428,  4439,  4446,  4448,  4451,  4454,  4455,  4457,  4463,
    4464,  4470,  4474,  4480,  4483,  4484,  4485,  4493,  4495,  4496,
    4497,  4504,  4505,  4509,  4510,  4511,  4517,  4518,  4520,  4521,
    4523,  4524,  4527,  4531,  4535,  4537,  4539,  4540,  4548,  4549,
    4557,  4559,  4562,  4563,  4564,  4567,  4568,  4571,  4572,  4574,
    4576,  4578,  4580,  4584,  4586,  4590,  4592,  4594,  4596,  4598,
    4600,  4602,  4604,  4606,  4608,  4610,  4612,  4614,  4616,  4618,
    4620,  4622,  4624,  4626,  4628,  4630,  4632,  4634,  4636,  4638,
    4640,  4641,  4643,  4645,  4646,  4649,  4650,  4652,  4653,  4654,
    4658,  4659,  4660,  4664,  4667,  4668,  4669,  4674,  4679,  4682,
    4683,  4685,  4687,  4691,  4695,  4697,  4700,  4701,  4703,  4704,
    4709,  4714,  4717,  4718,  4720,  4722,  4723,  4725,  4726,  4728,
    4731,  4733,  4737,  4741,  4743,  4745,  4747,  4749,  4751,  4752,
    4755,  4757,  4759,  4761,  4763,  4765,  4767,  4769,  4771,  4773,
    4775,  4777,  4779,  4781,  4783,  4785,  4787,  4789,  4791,  4793,
    4795,  4797,  4799,  4801,  4802,  4803,  4810,  4811,  4813,  4817,
    4819,  4823,  4824,  4827,  4831,  4833,  4836,  4838,  4839,  4843,
    4844,  4845,  4853,  4856,  4858,  4859,  4863,  4864,  4872,  4873,
    4880,  4885,  4892,  4897,  4902,  4907,  4908,  4915,  4920,  4925,
    4930,  4936,  4941,  4943,  4947,  4949,  4952,  4954,  4958,  4960,
    4961,  4964,  4965,  4967,  4968,  4970,  4972,  4975,  4979,  4981,
    4983,  4984,  4985,  4994,  4995,  4996,  5003,  5004,  5006,  5008,
    5010,  5012,  5014,  5017,  5019,  5021,  5023,  5027,  5032,  5033,
    5037,  5041,  5043,  5046,  5049,  5050,  5054,  5055,  5061,  5065,
    5067,  5071,  5073,  5077,  5079,  5081,  5082,  5084,  5085,  5090,
    5091,  5093,  5097,  5099,  5101,  5103,  5104,  5105,  5112,  5113,
    5114,  5126,  5130,  5132,  5136,  5140,  5142,  5146,  5147,  5149,
    5150,  5155,  5156,  5164,  5165,  5171,  5172,  5179,  5181,  5185,
    5188,  5193,  5194,  5197,  5198,  5201,  5203,  5205,  5207,  5208,
    5213,  5214,  5216,  5217,  5219,  5221,  5225,  5227,  5229,  5232,
    5235,  5238,  5240,  5242,  5244,  5246,  5247,  5251,  5252,  5256,
    5259,  5264,  5269,  5273,  5278,  5283,  5285,  5289,  5293,  5300,
    5303,  5306,  5307,  5314,  5315,  5322,  5328,  5331,  5333,  5335,
    5337,  5343,  5349,  5352,  5355,  5357,  5362,  5366,  5369,  5373,
    5376,  5379,  5381,  5385,  5390,  5394,  5398,  5401,  5404,  5408,
    5412,  5416,  5420,  5424,  5428,  5432,  5436,  5438,  5440,  5442,
    5444,  5446,  5447,  5449,  5450,  5453,  5454,  5456,  5458,  5460,
    5461,  5464,  5465,  5468,  5469,  5472,  5475,  5476,  5481,  5482,
    5487,  5489,  5491,  5493,  5495,  5497,  5499,  5501,  5502,  5504,
    5506,  5510,  5511,  5513,  5515,  5516,  5521,  5522,  5523,  5529,
    5531,  5532,  5536,  5540,  5542,  5545,  5548,  5551,  5554,  5557,
    5560,  5563,  5565,  5567,  5569,  5571,  5573,  5575,  5576,  5578,
    5579,  5583,  5587,  5589,  5590,  5594,  5596,  5599,  5600,  5602,
    5603,  5607,  5611,  5614,  5617,  5621,  5622,  5624,  5626,  5629,
    5630,  5631,  5632,  5633,  5656,  5658,  5660,  5661,  5663,  5664,
    5666,  5668,  5669,  5671,  5673,  5674,  5677,  5680,  5682,  5686,
    5691,  5695,  5699,  5700,  5703,  5706,  5708,  5712,  5716,  5717,
    5722,  5723,  5727,  5729,  5731,  5732,  5736,  5739,  5743,  5745,
    5747,  5750,  5751,  5754,  5758,  5760,  5766,  5768,  5770,  5773,
    5776,  5778,  5780,  5782,  5784,  5786,  5789,  5792,  5794,  5796,
    5798,  5800,  5802,  5804,  5806,  5808,  5811,  5814,  5816,  5818,
    5820,  5822,  5824,  5827,  5830,  5833,  5835,  5837,  5841,  5847,
    5849,  5851,  5853,  5855,  5857,  5861,  5866,  5872,  5874,  5880,
    5884,  5887,  5889,  5893,  5896,  5899,  5904,  5906,  5908,  5910,
    5912,  5914,  5916,  5918,  5920,  5922,  5924,  5926,  5928,  5930,
    5932,  5934,  5938,  5941,  5943,  5945,  5947,  5949,  5951,  5953,
    5955,  5957,  5959,  5961,  5963,  5965,  5967,  5969,  5971,  5973,
    5975,  5977,  5979,  5981,  5983,  5985,  5987,  5989,  5991,  5993,
    5995,  5997,  5999,  6001,  6003,  6005,  6007,  6009,  6011,  6013,
    6015,  6017,  6019,  6021,  6023,  6025,  6027,  6029,  6031,  6033,
    6035,  6037,  6039,  6041,  6043,  6045,  6047,  6049,  6051,  6053,
    6055,  6057,  6059,  6061,  6063,  6065,  6067,  6069,  6071,  6073,
    6075,  6077,  6079,  6081,  6083,  6085,  6087,  6089,  6091,  6093,
    6095,  6097,  6099,  6101,  6103,  6105,  6107,  6109,  6111,  6113,
    6115,  6117,  6119,  6121,  6123,  6125,  6127,  6129,  6131,  6133,
    6135,  6137,  6139,  6141,  6143,  6145,  6147,  6149,  6151,  6153,
    6155,  6157,  6159,  6161,  6163,  6165,  6167,  6169,  6171,  6173,
    6175,  6177,  6179,  6181,  6183,  6185,  6187,  6189,  6191,  6193,
    6195,  6197,  6199,  6201,  6203,  6205,  6207,  6209,  6211,  6213,
    6215,  6217,  6219,  6221,  6223,  6225,  6227,  6229,  6231,  6233,
    6235,  6237,  6239,  6241,  6243,  6245,  6247,  6249,  6251,  6253,
    6255,  6257,  6259,  6261,  6263,  6265,  6267,  6269,  6271,  6273,
    6275,  6277,  6279,  6281,  6283,  6285,  6287,  6289,  6291,  6293,
    6295,  6297,  6299,  6301,  6303,  6305,  6307,  6309,  6311,  6313,
    6315,  6317,  6319,  6321,  6323,  6325,  6327,  6329,  6331,  6333,
    6335,  6337,  6339,  6341,  6343,  6345,  6347,  6349,  6351,  6353,
    6355,  6357,  6359,  6361,  6363,  6365,  6367,  6369,  6371,  6373,
    6375,  6377,  6379,  6381,  6383,  6385,  6387,  6389,  6391,  6393,
    6395,  6397,  6399,  6401,  6403,  6405,  6407,  6409,  6411,  6413,
    6415,  6417,  6419,  6421,  6423,  6425,  6427,  6429,  6431,  6433,
    6435,  6437,  6439,  6441,  6443,  6445,  6447,  6449,  6451,  6453,
    6455,  6457,  6459,  6461,  6463,  6465,  6467,  6469,  6471,  6473,
    6475,  6477,  6479,  6481,  6483,  6485,  6487,  6489,  6491,  6493,
    6495,  6497,  6499,  6501,  6503,  6505,  6507,  6509,  6511,  6513,
    6515,  6517,  6519,  6521,  6523,  6525,  6527,  6529,  6531,  6533,
    6535,  6537,  6539,  6541,  6543,  6545,  6547,  6549,  6551,  6553,
    6555,  6557,  6559,  6561,  6563,  6565,  6567,  6569,  6571,  6573,
    6575,  6577,  6579,  6581,  6583,  6585,  6587,  6589,  6591,  6593,
    6595,  6597,  6599,  6601,  6603,  6605,  6607,  6609,  6611,  6613,
    6615,  6617,  6619,  6621,  6623,  6625,  6627,  6628,  6632,  6633,
    6637,  6638,  6642,  6643,  6647,  6648,  6652,  6655,  6656,  6659,
    6660,  6663,  6664,  6669,  6670,  6674,  6676,  6678,  6680,  6682,
    6683,  6685,  6687,  6689,  6690,  6693,  6696,  6699,  6703,  6707,
    6712,  6719,  6722,  6726,  6730,  6734,  6740,  6742,  6746,  6750,
    6752,  6754,  6758,  6762,  6764,  6768,  6771,  6774,  6777,  6780,
    6783,  6785,  6787,  6792,  6797,  6799,  6801,  6803,  6805,  6807,
    6808,  6813,  6815,  6817,  6819,  6823,  6827,  6829,  6831,  6834,
    6837,  6838,  6842,  6847,  6851,  6852,  6860,  6862,  6865,  6867,
    6869,  6871,  6873,  6875,  6877,  6878,  6884,  6886,  6888,  6890,
    6892,  6894,  6898,  6905,  6912,  6919,  6927,  6933,  6937,  6946,
    6955,  6964,  6971,  6972,  6974,  6976,  6979,  6980,  6982,  6984,
    6988,  6989,  6993,  6994,  6998,  6999,  7003,  7004,  7008,  7010,
    7012,  7014,  7016,  7018,  7020,  7022,  7024,  7026,  7028,  7030,
    7033,  7036,  7038,  7042,  7045,  7048,  7051,  7054,  7057,  7060,
    7063,  7066,  7068,  7070,  7073,  7074,  7076,  7080,  7082,  7085,
    7088,  7091,  7093,  7097,  7101,  7103,  7105,  7109,  7111,  7115,
    7120,  7126,  7131,  7138,  7140,  7141,  7145,  7149,  7151,  7153,
    7154,  7157,  7160,  7163,  7166,  7167,  7170,  7171,  7175,  7178,
    7180,  7183,  7186,  7189,  7192,  7195,  7196,  7200,  7201,  7203,
    7204,  7208,  7211,  7212,  7214,  7217,  7218,  7220,  7225,  7230,
    7236,  7239,  7243,  7244,  7246,  7247,  7252,  7253,  7255,  7257,
    7258,  7260,  7261,  7264,  7267,  7269,  7270,  7272,  7274,  7277,
    7281,  7284,  7285,  7292,  7296,  7297,  7298,  7299,  7301,  7304,
    7306,  7308,  7310,  7312,  7314,  7316,  7318,  7320,  7322,  7325,
    7328,  7332,  7334,  7336,  7338,  7340,  7342,  7344,  7346,  7348,
    7350,  7352,  7354,  7356,  7358,  7359,  7363,  7365,  7368,  7370,
    7373,  7377,  7381,  7385,  7386,  7390,  7394,  7395,  7403,  7404,
    7408,  7410,  7414,  7415,  7419,  7422,  7427,  7428,  7432,  7437,
    7442,  7443,  7444,  7445,  7462,  7471,  7479,  7480,  7481,  7482,
    7483,  7484,  7500,  7501,  7502,  7503,  7504,  7517,  7522,  7527,
    7531,  7536,  7540,  7543,  7545,  7549,  7555,  7557,  7559,  7560,
    7562,  7564,  7565,  7568,  7569,  7570,  7574,  7575,  7578,  7584
};

/* YYRHS -- A `-1'-separated list of the rules' RHS.  */
static const yytype_int16 yyrhs[] =
{
     635,     0,    -1,   151,    -1,    -1,   638,   636,   630,   637,
      -1,   638,   151,    -1,    -1,   151,    -1,   639,    -1,  1497,
      -1,  1005,    -1,  1069,    -1,  1071,    -1,   688,    -1,   651,
      -1,  1072,    -1,  1061,    -1,  1503,    -1,   658,    -1,   640,
      -1,  1314,    -1,  1346,    -1,  1262,    -1,  1264,    -1,   644,
      -1,  1353,    -1,   724,    -1,  1471,    -1,  1462,    -1,   649,
      -1,  1278,    -1,  1567,    -1,  1372,    -1,  1375,    -1,  1454,
      -1,  1077,    -1,  1085,    -1,   841,    -1,  1092,    -1,   642,
      -1,  1368,    -1,  1506,    -1,  1080,    -1,  1064,    -1,  1281,
      -1,  1362,    -1,   723,    -1,  1469,    -1,  1504,    -1,  1505,
      -1,  1104,    -1,  1427,    -1,   716,    -1,  1332,    -1,  1043,
      -1,  1046,    -1,  1325,    -1,  1568,    -1,  1460,    -1,  1306,
      -1,  1374,    -1,  1559,    -1,   641,   396,  1421,    -1,   116,
      -1,   139,    -1,   396,  1421,   187,   643,    -1,  1418,    -1,
     631,  1423,    -1,    -1,   165,  1421,   645,   646,    -1,    -1,
     582,   647,    -1,   647,   626,   648,    -1,   648,    -1,   631,
    1423,    -1,    -1,   206,   650,  1423,    -1,    -1,    56,   300,
     550,   652,   653,    -1,   654,    -1,   653,   626,   654,    -1,
     284,   155,  1417,    -1,   281,   155,  1417,    -1,   301,   155,
    1417,    -1,   287,   155,  1417,    -1,   288,   155,  1242,    -1,
     282,   155,  1242,    -1,   289,   155,  1242,    -1,   283,   155,
    1242,    -1,   298,   155,  1242,    -1,   292,   155,  1417,    -1,
     291,   155,  1417,    -1,   293,   155,  1417,    -1,   294,   155,
    1417,    -1,   297,   155,  1417,    -1,   299,   155,  1242,    -1,
     295,   155,  1417,    -1,   296,   155,  1417,    -1,   302,   155,
    1404,    -1,   220,   155,   624,   655,   625,    -1,   280,   155,
    1242,    -1,   657,    -1,    -1,   656,    -1,   655,   626,   656,
      -1,  1242,    -1,   285,   155,  1417,    -1,   286,   155,  1244,
      -1,   426,   155,  1417,    -1,   427,   155,  1242,    -1,    -1,
      94,   892,   533,   895,  1413,   659,   830,    -1,    -1,    94,
     983,   223,  1421,   987,   362,  1413,   660,   624,  1000,   625,
     988,    -1,    -1,    94,   984,   223,  1421,   986,   362,  1413,
     661,   624,  1000,   625,   989,    -1,    -1,    94,   985,   223,
    1421,   986,   362,  1413,   662,   624,  1000,   625,   990,    -1,
      -1,    94,   103,   895,  1421,   663,   889,    -1,    -1,    94,
     664,  1525,    -1,    94,   579,   681,  1487,    -1,    94,   271,
     200,   794,    -1,    94,   531,   791,    -1,    94,   665,    -1,
     472,  1423,   183,   106,   606,  1423,   367,   624,   666,   625,
      -1,   667,    -1,   666,   626,   667,    -1,   579,  1418,    -1,
     209,  1418,    -1,   103,  1418,    -1,   377,  1418,    -1,   386,
    1418,    -1,   488,  1418,    -1,   393,  1242,    -1,    -1,  1121,
     162,   895,   682,   669,   362,   461,   670,   675,   672,   677,
     138,   678,    -1,    -1,   163,  1125,  1214,   671,   673,   674,
      -1,    22,  1125,    -1,    -1,   147,    -1,   132,   362,   484,
      -1,   132,    -1,    -1,   509,  1125,    -1,    -1,   150,  1125,
      -1,    -1,   676,    -1,   362,    77,   397,    -1,   362,    77,
     350,   397,    -1,    -1,    73,  1418,    -1,    -1,   679,   680,
      -1,   740,    -1,   742,    -1,   738,    -1,   759,    -1,   777,
      -1,   779,    -1,   774,    -1,   744,    -1,   746,    -1,   747,
      -1,   748,    -1,   749,    -1,   751,    -1,    -1,  1421,   632,
    1421,    -1,  1421,    -1,    -1,   683,   685,    -1,    -1,   684,
     686,    -1,    73,  1418,    -1,   250,   505,    -1,   352,   505,
      -1,    87,   505,    -1,   412,   505,   106,    -1,   327,   505,
     106,    -1,   687,    -1,   685,    -1,   129,    -1,  1131,   129,
      -1,   505,   465,   122,    -1,   505,   465,   235,    -1,    -1,
      49,   682,   689,   690,    -1,    -1,   624,   691,   625,    -1,
      -1,   692,    -1,   692,   626,  1125,    -1,  1125,    -1,    -1,
     694,    -1,   694,   626,   696,    -1,   696,    -1,    -1,  1421,
     695,   943,    -1,    -1,   698,    -1,   698,   626,   699,    -1,
     699,    -1,   700,   695,  1421,   943,    -1,    -1,   236,    -1,
     376,    -1,   227,    -1,    -1,   701,   737,   630,    -1,   737,
     630,    -1,   702,   737,   630,    -1,    -1,   703,   704,   630,
      -1,    -1,   119,   735,   705,   943,   736,    -1,   119,  1421,
      80,   184,   712,    -1,    -1,   119,   709,   203,   184,   706,
     710,   737,    -1,   119,  1421,   100,   184,   707,    -1,    -1,
     708,  1104,    -1,   167,    -1,    89,    -1,   711,    -1,   710,
     626,   711,    -1,   715,    -1,  1242,    -1,   713,    -1,   495,
     714,  1419,    -1,    -1,   587,    -1,   712,    -1,  1421,    -1,
     496,    -1,  1131,   186,    -1,   494,    -1,   481,   717,   719,
      -1,  1421,    -1,   713,    -1,    -1,   717,    -1,    -1,   474,
     720,    -1,   722,   155,   721,    -1,   720,   626,   722,   155,
     721,    -1,  1403,    -1,  1152,    -1,  1409,    -1,    63,    -1,
     518,    -1,    84,    -1,    86,    -1,    85,    -1,    54,    -1,
     462,    -1,   535,    -1,    72,    -1,   101,    -1,   318,    -1,
     335,    -1,   441,   718,   719,    -1,   196,   725,   130,   726,
      -1,    -1,    98,    -1,   727,    -1,    80,   731,   732,    -1,
     728,    -1,   727,   626,   728,    -1,   729,   155,   730,    -1,
    1421,    -1,   631,  1423,    -1,   357,    -1,   458,    -1,   721,
      -1,   733,    -1,   732,   626,   733,    -1,   729,   155,   734,
      -1,    63,    -1,   518,    -1,    84,    -1,    86,    -1,    85,
      -1,    54,    -1,   462,    -1,   535,    -1,    72,    -1,   101,
      -1,   318,    -1,   335,    -1,   446,    -1,  1421,    -1,   735,
     626,  1421,    -1,    -1,   120,  1125,    -1,   740,    -1,   742,
      -1,   738,    -1,   759,    -1,   777,    -1,   779,    -1,   774,
      -1,   744,    -1,   746,    -1,   747,    -1,   748,    -1,   749,
      -1,   751,    -1,    -1,   218,   739,   754,   149,   218,    -1,
      -1,   741,   639,    -1,    -1,   448,   743,  1125,    -1,    -1,
     745,   783,    -1,   255,  1422,    -1,   244,  1422,    -1,   365,
    1421,    -1,    -1,   175,   752,  1421,   233,   750,   753,    -1,
      65,  1421,    -1,    -1,   346,   187,    -1,   187,    -1,  1421,
      -1,   753,   626,  1421,    -1,    -1,    -1,    -1,   755,  1125,
     542,   756,   702,   757,   758,    -1,    -1,   146,   754,    -1,
     145,   702,    -1,   760,    -1,   763,    -1,    -1,    -1,    52,
     761,  1125,   762,   765,   773,   149,    52,    -1,    -1,    52,
     764,   766,   773,   149,    52,    -1,   767,    -1,   765,   767,
      -1,   770,    -1,   766,   770,    -1,    -1,    -1,   599,   768,
    1125,   769,   542,   702,    -1,    -1,    -1,   599,   771,  1125,
     772,   542,   702,    -1,    -1,   145,   702,    -1,    -1,  1422,
     633,   775,   783,   776,    -1,    -1,  1422,    -1,    -1,  1422,
     633,   778,   781,   776,    -1,    -1,   780,   781,    -1,    -1,
      30,   782,   703,   701,   149,    -1,   277,   702,   149,   277,
      -1,    -1,    -1,   601,   784,  1125,   138,   785,   702,   149,
     601,    -1,    -1,   436,   702,   575,   786,  1125,   149,   436,
      -1,    29,    -1,     8,    -1,   229,    -1,   576,    -1,   125,
      -1,   816,   818,    -1,   816,    56,   813,   797,    -1,   816,
       6,   813,   792,   801,    -1,    -1,   581,   271,   200,  1421,
      -1,   816,     6,   813,   804,    -1,   816,   139,   813,   804,
      -1,   817,   796,   807,    -1,   817,   796,   810,    -1,     6,
     814,    -1,     6,   815,    -1,    -1,   798,   799,    -1,   800,
      -1,   799,   800,    -1,   799,   626,   800,    -1,   819,    -1,
     820,    -1,   821,    -1,    -1,   802,    -1,   803,    -1,   802,
     803,    -1,   802,   626,   803,    -1,   819,    -1,   820,    -1,
     821,    -1,   822,    -1,   825,    -1,   827,    -1,   828,    -1,
     826,    -1,    -1,   805,    -1,   806,    -1,   805,   806,    -1,
     805,   626,   806,    -1,   819,    -1,   820,    -1,   821,    -1,
     827,    -1,   828,    -1,    -1,   808,    -1,   809,    -1,   808,
     809,    -1,   808,   626,   809,    -1,   819,    -1,   823,    -1,
     824,    -1,   825,    -1,   827,    -1,   828,    -1,   826,    -1,
      -1,   811,    -1,   812,    -1,   811,   812,    -1,   811,   626,
     812,    -1,   819,    -1,   827,    -1,   828,    -1,   105,  1418,
      -1,   565,  1418,    -1,   419,  1418,    -1,  1421,    -1,  1421,
      -1,   413,    -1,   415,    -1,   350,     4,    -1,   225,  1298,
     829,    -1,    24,  1298,   829,    -1,   307,  1298,   829,    -1,
     170,  1298,   829,    -1,   566,  1298,   829,    -1,   420,  1298,
     829,    -1,   347,  1298,  1243,    -1,    73,  1298,  1418,    -1,
    1339,   153,  1298,   903,    -1,   595,    -1,   353,    -1,  1243,
      -1,   215,    -1,   624,   831,    -1,   896,   836,   833,    -1,
     260,  1413,    -1,   624,   260,  1413,   625,    -1,   909,   625,
     896,   836,   833,    -1,    -1,   836,   885,   625,   832,  1510,
      -1,    -1,    -1,  1383,   888,   885,   834,  1507,    -1,    -1,
    1383,   888,   624,   885,   625,   835,  1510,    -1,   837,    -1,
      -1,   838,    -1,    -1,   383,   840,   839,   843,    -1,    -1,
      -1,   383,   842,   843,    -1,    46,   844,   853,   854,   861,
      -1,   846,   248,   624,   847,   625,    -1,    -1,   846,   204,
     845,   851,    -1,   411,   851,    -1,   411,   850,    -1,   265,
     851,    -1,   265,   850,    -1,    -1,   262,    -1,    -1,   848,
      -1,   849,    -1,   848,   626,   849,    -1,  1421,    -1,    70,
     624,   847,   625,    -1,   624,  1121,   859,  1122,   625,    -1,
     624,  1121,   859,  1122,   625,    -1,    -1,   384,  1243,    -1,
      -1,    -1,   522,    46,   846,   204,   852,   855,   860,    -1,
      -1,   522,    46,   846,   248,   624,   857,   625,   856,   860,
      -1,   858,    -1,   857,   626,   858,    -1,  1421,    -1,  1128,
      -1,    -1,   521,  1243,    -1,    -1,   624,   862,   625,    -1,
     863,    -1,   862,   626,   863,    -1,    -1,   383,   864,   865,
     866,   882,   877,    -1,  1421,    -1,    -1,    -1,   586,   257,
     541,   867,   869,    -1,    -1,   586,   236,   868,   870,    -1,
     311,    -1,   872,    -1,   872,    -1,   624,   871,   625,    -1,
     872,    -1,   871,   626,   872,    -1,    -1,    -1,   624,   873,
     875,   874,   625,    -1,   876,    -1,   875,   626,   876,    -1,
     311,    -1,  1128,    -1,    -1,   624,   878,   625,    -1,   879,
      -1,   878,   626,   879,    -1,    -1,   522,   880,   881,   882,
      -1,  1423,    -1,    -1,   883,    -1,   883,   884,    -1,   884,
      -1,   531,  1298,  1423,    -1,  1339,   153,  1298,   903,    -1,
     347,  1298,  1243,    -1,   306,  1298,  1245,    -1,   324,  1298,
    1245,    -1,   106,   131,  1298,  1418,    -1,   223,   131,  1298,
    1418,    -1,    73,  1298,  1418,    -1,    -1,    -1,   466,   886,
    1115,  1119,   887,   907,    -1,    -1,    18,    -1,    -1,   890,
      -1,   891,    -1,   890,   891,    -1,   902,    -1,   901,    -1,
      -1,   893,    -1,   894,    -1,   894,   893,    -1,   536,    -1,
      -1,   218,  1131,   166,    -1,    -1,   898,    -1,   899,    -1,
     899,   897,    -1,   899,    -1,   899,   898,    -1,   899,   626,
     898,    -1,   153,  1298,   903,    -1,   306,  1298,  1244,    -1,
     324,  1298,  1244,    -1,    26,  1298,  1242,    -1,   386,  1298,
    1418,    -1,    73,  1298,  1418,    -1,    25,  1298,  1244,    -1,
     378,  1298,  1242,    -1,   378,  1298,   120,    -1,    60,  1298,
    1242,    -1,   534,  1298,  1242,    -1,   124,  1298,  1242,    -1,
     456,  1298,   905,    -1,    -1,   570,  1298,   900,   624,  1361,
     625,    -1,   901,    -1,   902,    -1,   230,  1298,   906,    -1,
     106,   131,  1298,  1418,    -1,   223,   131,  1298,  1418,    -1,
     531,  1421,    -1,   515,   134,    -1,   515,   316,    -1,    81,
    1298,  1418,    -1,   247,  1298,  1242,    -1,   955,   946,  1298,
     948,    -1,   955,    68,  1298,   954,    -1,  1423,    -1,  1423,
      -1,   120,    -1,   178,    -1,   143,    -1,    78,    -1,   421,
      -1,    76,    -1,   352,    -1,   177,    -1,   251,    -1,  1237,
      -1,  1114,  1118,    -1,   517,    -1,   416,    -1,   118,    -1,
     234,    -1,   910,    -1,   911,    -1,   910,   626,   911,    -1,
     912,    -1,   913,    -1,   918,   914,    -1,   918,   972,    -1,
     978,  1002,   987,   624,  1000,   625,   988,    -1,   984,   981,
    1002,   986,   624,  1000,   625,   989,    -1,   985,   981,  1002,
     986,   624,  1000,   625,   990,    -1,   916,   979,  1002,   987,
     624,  1000,   625,   988,    -1,   916,   183,   248,  1002,   624,
    1000,   625,   972,    -1,   916,   915,    -1,    -1,   915,    -1,
      61,   624,  1125,   625,    -1,    -1,   917,    -1,    83,  1002,
      -1,    -1,  1412,   919,   920,   940,    -1,   928,   938,   934,
      -1,   929,   939,   934,    -1,   180,   930,   934,    -1,    38,
      -1,    38,   937,    -1,    43,    -1,    42,    -1,   924,   937,
     958,    -1,   924,   958,    -1,   925,   937,   959,    -1,   925,
     959,    -1,    33,   937,    -1,    33,    -1,   926,   937,   958,
      -1,   927,   937,   959,    -1,   588,   937,    -1,   613,   938,
     934,    -1,   110,    -1,   546,   932,    -1,   543,   932,    -1,
     107,   932,    -1,   547,    -1,    40,   938,    -1,   923,    -1,
     312,    -1,   273,    -1,   276,   588,    -1,   276,   926,   958,
      -1,   549,   958,    -1,   540,   938,   958,    -1,   314,   958,
      -1,   274,   958,    -1,   118,   930,   934,    -1,   358,   930,
     934,    -1,   178,   930,   934,    -1,    -1,   154,   921,   624,
    1004,   625,   958,    -1,    -1,   474,   922,   624,  1004,   625,
     958,    -1,   276,   958,    -1,   470,    -1,   194,    -1,   193,
      -1,   391,    -1,   332,    -1,   264,    -1,   331,    -1,   392,
      -1,   333,    -1,    59,    -1,   341,    -1,   338,    59,    -1,
     924,   592,    -1,   589,    -1,   338,   589,    -1,   359,    -1,
     341,   589,    -1,   338,    59,   592,    -1,   341,   592,    -1,
     234,    -1,   548,    -1,   486,    -1,   313,    -1,    32,    -1,
     416,    -1,   137,    -1,   137,   395,    -1,    -1,   937,    -1,
     931,    -1,   624,   356,   626,   356,   625,    -1,    -1,   624,
     356,   625,    -1,    -1,   624,   625,    -1,   624,   356,   625,
      -1,    -1,   935,    -1,   935,   936,    -1,   936,    -1,   482,
      -1,   574,    -1,   614,    -1,   624,   275,   625,    -1,   624,
     561,   625,    -1,   624,   117,   625,    -1,   624,   356,   625,
      -1,    -1,   937,    -1,    -1,   931,    -1,    -1,   941,    -1,
     941,   942,    -1,   942,    -1,   355,    -1,  1131,   355,    -1,
     120,   945,    -1,   362,   576,   944,    -1,    25,    -1,   470,
     120,   587,    -1,   971,   248,    -1,   571,    -1,   571,   248,
      -1,    73,  1418,    -1,    68,   952,    -1,   920,   953,    -1,
     351,   933,    -1,   944,    -1,  1402,    -1,    59,   474,    -1,
      58,    -1,  1423,    -1,    33,    -1,   947,    -1,   120,    -1,
      -1,   946,   948,    -1,  1423,    -1,    33,    -1,   950,    -1,
     120,    -1,  1423,    -1,    -1,    68,   954,    -1,   952,    -1,
     120,    -1,    -1,   120,    -1,    20,    -1,    33,    20,    -1,
      20,    33,    -1,   568,    -1,   568,    33,    -1,    33,   568,
      -1,    -1,   956,    -1,   957,    -1,    47,    -1,   946,   947,
     959,    -1,    33,    -1,    33,   946,   947,    -1,    -1,    33,
      -1,    -1,   624,  1243,   961,   625,    -1,    19,    -1,   126,
      -1,   449,    -1,    -1,   962,    -1,   962,   963,    -1,   963,
      -1,  1243,    -1,   965,   964,    -1,   966,    -1,   967,   626,
     966,    -1,   965,   617,   965,    -1,   967,    -1,   968,    -1,
      -1,   258,   969,    -1,    -1,   399,    -1,   422,  1413,   973,
     975,   976,    -1,    -1,   624,   974,   625,    -1,   974,   626,
    1421,    -1,  1421,    -1,    -1,   303,   188,    -1,   303,   382,
      -1,   303,   483,    -1,    -1,   362,   576,   977,    -1,   362,
     125,   977,    -1,   362,   576,   977,   362,   125,   977,    -1,
     362,   125,   977,   362,   576,   977,    -1,   444,    -1,    50,
      -1,   474,   355,    -1,   352,     5,    -1,   474,   120,    -1,
     980,    -1,   399,   248,    -1,   571,   981,    -1,   248,    -1,
     223,    -1,    -1,   980,    -1,   246,    -1,   223,    -1,   222,
      -1,    -1,   571,    -1,   189,    -1,   492,    -1,    -1,   986,
      -1,   986,   994,    -1,    -1,   991,    -1,    -1,   993,    -1,
      -1,   992,    -1,   996,    -1,   991,   996,    -1,   997,    -1,
     992,   997,    -1,   998,    -1,   993,   998,    -1,   582,   999,
      -1,   559,   999,    -1,   247,  1298,  1242,    -1,    73,  1418,
      -1,   995,    -1,   994,    -1,   995,    -1,   995,    -1,   602,
     381,  1416,    -1,    45,    -1,   459,    -1,   204,    -1,  1000,
     626,  1001,  1235,    -1,  1001,  1235,    -1,  1421,    -1,  1421,
     624,   356,   625,    -1,    -1,  1412,    -1,    -1,   632,  1421,
      -1,  1400,    -1,  1004,   626,  1400,    -1,    -1,    13,  1039,
     533,  1413,  1006,  1017,    -1,    -1,    13,   103,  1016,  1007,
     890,    -1,    13,   103,  1421,   577,   106,   131,   337,    -1,
      -1,    13,   401,   682,  1008,   683,    -1,    -1,    13,   190,
     682,  1009,   683,    -1,    -1,    13,  1533,  1528,  1010,  1535,
      -1,    -1,    13,  1528,  1011,  1535,    -1,    -1,    13,  1528,
     162,   682,  1012,  1013,  1014,   672,   677,  1015,    -1,    13,
     531,   793,    -1,    13,   271,   200,   795,    -1,    13,   531,
     790,    -1,    13,   531,   789,    -1,    13,   472,  1423,   367,
     624,   666,   625,    -1,    -1,   362,   461,   670,    -1,   676,
      -1,   362,   461,   670,   676,    -1,    -1,   432,   550,   682,
      -1,    -1,   138,   678,    -1,    -1,  1421,    -1,    -1,   133,
     531,    -1,   221,   531,    -1,  1032,   837,    -1,  1032,  1021,
      -1,  1021,    -1,   838,    -1,  1023,    -1,   139,   383,  1030,
      -1,   417,   383,  1079,  1022,    -1,    -1,   366,   383,  1079,
    1022,  1018,  1079,    -1,    14,   383,  1079,  1022,    -1,    -1,
      61,   383,  1022,  1019,  1074,    -1,    -1,   434,   383,  1079,
    1022,  1020,  1066,    -1,    66,   383,  1079,  1243,    -1,   557,
     383,  1022,    -1,  1026,    -1,   164,   383,  1031,   602,   533,
    1413,   840,    -1,   431,   385,   840,    -1,    12,    -1,  1030,
      -1,    -1,     6,   383,  1079,  1024,  1025,    -1,    -1,   624,
     862,   625,    -1,   384,  1243,    -1,    -1,   433,   383,  1079,
    1027,  1028,    -1,    -1,    -1,  1030,  1029,   233,   624,   862,
     625,    -1,  1031,    -1,  1030,   626,  1031,    -1,  1421,    -1,
    1034,    -1,  1032,   626,  1034,    -1,     6,  1038,    -1,  1033,
     912,  1041,    -1,     6,   913,    -1,  1033,   624,   909,   625,
      -1,    -1,    56,  1038,  1412,  1035,   918,  1041,    -1,    -1,
      -1,   328,  1038,  1412,  1036,   920,   940,  1037,  1041,    -1,
     139,  1038,  1412,  1040,    -1,   139,   183,   248,  1002,    -1,
     139,   399,   248,    -1,   139,   980,  1412,    -1,   132,   246,
      -1,   147,   246,    -1,    13,  1038,  1412,   474,   120,  1402,
      -1,    13,  1038,  1412,   139,   120,    -1,   432,  1042,  1413,
      -1,    91,   550,   946,   948,   953,    -1,   897,    -1,   182,
      -1,  1228,    -1,    -1,    71,    -1,    -1,   219,    -1,    -1,
     444,    -1,    50,    -1,    -1,     8,  1421,    -1,   177,    -1,
      -1,   550,    -1,   155,    -1,    18,    -1,    -1,    -1,   510,
     484,  1055,  1044,  1059,  1045,  1050,    -1,   514,   484,  1055,
      -1,   510,   552,  1047,    -1,    -1,  1048,    -1,  1049,    -1,
    1048,   626,  1049,    -1,   602,    82,   487,    -1,   414,   364,
      -1,   414,   607,    -1,  1051,  1052,  1053,  1054,    -1,    -1,
     579,   155,  1418,    -1,    -1,   386,   155,  1418,    -1,    -1,
     121,   155,  1418,    -1,    -1,   388,   155,  1418,    -1,    -1,
    1056,  1057,    -1,  1058,    -1,  1057,   626,  1058,    -1,    -1,
     506,    -1,   428,    -1,    -1,   575,  1060,    -1,   657,    -1,
    1060,   626,   657,    -1,   498,   155,  1418,    -1,    -1,    60,
    1456,  1062,  1268,  1063,    -1,    -1,   410,    -1,   169,    -1,
      -1,   434,  1079,  1456,  1065,  1268,  1066,    -1,    -1,  1067,
      -1,  1068,    -1,  1068,  1067,    -1,   410,    -1,   169,    -1,
     580,    -1,    -1,    14,  1079,  1456,  1070,  1268,    -1,    34,
    1418,    -1,    -1,    61,  1456,  1073,  1268,  1074,    -1,    -1,
    1075,    -1,  1076,    -1,  1076,  1075,    -1,   410,    -1,   173,
      -1,   315,    -1,   169,    -1,    57,    -1,   184,   577,    -1,
      -1,   366,  1079,  1456,  1078,  1268,    -1,    -1,   354,    -1,
     267,    -1,    -1,   432,  1456,  1081,  1083,    -1,   432,   579,
     681,  1082,    -1,  1424,   550,  1424,    -1,  1082,   626,  1424,
     550,  1424,    -1,  1084,    -1,  1083,   626,  1084,    -1,  1413,
     550,  1413,    -1,    -1,    48,   223,  1086,  1087,   236,  1091,
      -1,  1088,    -1,  1090,    -1,  1089,    -1,  1088,   626,  1089,
      -1,  1413,  1100,    -1,  1413,  1098,  1100,    -1,  1421,    -1,
     120,    -1,    -1,   266,   223,   233,    48,  1093,  1094,    -1,
    1097,    -1,  1095,    -1,  1096,    -1,  1095,   626,  1096,    -1,
    1413,  1100,  1103,    -1,  1413,  1098,  1100,  1103,    -1,    -1,
     383,   840,  1099,   624,  1022,   625,    -1,    -1,  1101,  1102,
      -1,    -1,   980,   624,  1210,   625,    -1,    -1,   219,   254,
      -1,  1105,    -1,   466,  1108,    -1,   624,  1106,   625,  1510,
      -1,   466,  1110,    -1,   624,  1106,   625,    -1,   466,  1189,
      -1,   624,  1107,   625,    -1,    -1,  1110,  1109,  1507,    -1,
      -1,    -1,  1111,  1115,  1119,  1112,  1113,  1118,    -1,  1231,
    1237,    -1,  1257,    -1,  1114,    -1,  1257,  1114,    -1,  1114,
    1257,    -1,   187,  1169,  1220,  1225,  1222,  1231,  1237,  1248,
      -1,   187,   140,  1220,  1237,    -1,    -1,  1116,    -1,  1116,
    1117,    -1,  1117,    -1,  1524,    -1,   503,    -1,   501,    -1,
      -1,   184,   576,    -1,   270,   236,   476,   326,    -1,  1119,
     626,  1120,    -1,  1120,    -1,   619,    -1,  1121,  1407,  1122,
      -1,  1121,  1125,  1122,  1123,    -1,    -1,    -1,    -1,    18,
    1421,    -1,    18,  1418,    -1,  1421,    -1,  1418,    -1,    -1,
     624,   625,    -1,  1125,  1129,  1125,    -1,  1125,   611,  1125,
      -1,  1125,  1130,  1125,    -1,   350,  1125,    -1,  1126,   241,
     556,    -1,  1126,   241,  1131,   556,    -1,  1126,   241,   172,
      -1,  1126,   241,  1131,   172,    -1,  1126,   241,   572,    -1,
    1126,   241,  1131,   572,    -1,  1126,    -1,  1126,   241,   355,
      -1,  1126,   241,  1131,   355,    -1,  1126,   156,  1127,    -1,
    1126,  1133,  1127,    -1,  1126,  1133,  1134,   624,  1519,   625,
      -1,  1127,    -1,  1128,   236,   624,  1519,   625,    -1,  1128,
    1131,   236,   624,  1519,   625,    -1,  1128,   236,   624,  1125,
     625,    -1,  1128,   236,   624,  1125,   626,  1162,   625,    -1,
    1128,  1131,   236,   624,  1125,   625,    -1,  1128,  1131,   236,
     624,  1125,   626,  1162,   625,    -1,  1128,    31,  1128,    16,
    1127,    -1,  1128,  1131,    31,  1128,    16,  1127,    -1,  1128,
     490,   260,  1128,    -1,  1128,   260,  1135,  1224,    -1,  1128,
    1131,   260,  1135,  1224,    -1,  1128,   423,  1128,    -1,  1128,
    1131,   423,  1128,    -1,  1128,    -1,  1128,   615,  1128,    -1,
    1128,   616,  1128,    -1,  1128,   477,  1128,    -1,  1128,   478,
    1128,    -1,  1128,   618,  1128,    -1,  1128,   617,  1128,    -1,
    1128,   618,   232,  1125,  1214,    -1,  1128,   617,   232,  1125,
    1214,    -1,  1128,   619,  1128,    -1,  1128,   620,  1128,    -1,
    1128,   621,  1128,    -1,  1128,   136,  1128,    -1,  1128,   329,
    1128,    -1,  1128,   622,  1128,    -1,  1135,    -1,   373,    -1,
     370,    -1,    16,    -1,    15,    -1,   350,    -1,   349,    -1,
     627,    -1,   349,    -1,   155,    -1,   191,    -1,   202,    -1,
     252,    -1,   279,    -1,   343,    -1,    12,    -1,    17,    -1,
    1409,    -1,  1136,    -1,  1137,    -1,  1140,    -1,  1138,    -1,
    1135,    68,  1423,    -1,  1403,    -1,  1401,    -1,  1152,    -1,
    1148,    -1,  1135,   372,  1135,    -1,   618,  1135,    -1,   617,
    1135,    -1,   623,  1135,    -1,  1132,  1135,    -1,   624,  1519,
     625,    -1,   624,  1125,   625,    -1,   624,  1125,   626,  1162,
     625,    -1,   457,   624,  1125,   626,  1162,   625,    -1,   166,
     624,  1519,   625,    -1,   628,  1421,  1125,   629,    -1,   303,
    1163,     9,   624,  1128,  1142,   625,    -1,    33,  1135,    -1,
      53,   624,  1125,    18,  1160,   625,    -1,    52,  1165,  1167,
    1166,   149,    -1,    91,   624,  1125,   626,  1160,   625,    -1,
      91,   624,  1125,   582,   947,   625,    -1,   120,   624,  1409,
     625,    -1,   586,   624,  1410,   625,    -1,   232,  1125,  1214,
     618,  1125,    -1,    59,   624,  1162,   625,    -1,    59,   624,
    1162,   582,   947,   625,    -1,    99,  1124,    -1,   110,   624,
    1125,   625,    -1,   115,   624,  1125,   625,    -1,   214,   624,
    1125,   625,    -1,   229,   624,  1125,   626,  1125,   626,  1125,
     626,  1125,   625,    -1,   232,   624,  1125,   626,  1125,   625,
      -1,   232,   624,  1125,   626,  1125,   626,  1162,   625,    -1,
     256,   624,  1125,   626,  1125,   625,    -1,   323,   624,  1125,
     625,    -1,   330,   624,  1125,   625,    -1,   451,   624,  1125,
     626,  1125,   625,    -1,   464,   624,  1125,   625,    -1,   546,
     624,  1125,   625,    -1,   543,   624,  1125,   625,    -1,   543,
     624,  1125,   626,  1125,   625,    -1,   555,   624,  1125,   625,
      -1,   555,   624,   253,  1125,   187,  1125,   625,    -1,   555,
     624,   551,  1125,   187,  1125,   625,    -1,   555,   624,    44,
    1125,   187,  1125,   625,    -1,   555,   624,   253,   187,  1125,
     625,    -1,   555,   624,   551,   187,  1125,   625,    -1,   555,
     624,    44,   187,  1125,   625,    -1,   555,   624,  1125,   187,
    1125,   625,    -1,   579,   624,   625,    -1,   613,   624,  1125,
     625,    -1,     7,   624,  1125,   626,  1125,   625,    -1,     7,
     624,  1125,   626,   232,  1125,  1214,   625,    -1,    97,  1124,
      -1,   102,   933,    -1,   108,   624,  1125,   626,   232,  1125,
    1214,   625,    -1,   109,   624,  1125,   626,   232,  1125,  1214,
     625,    -1,   171,   624,  1214,   187,  1125,   625,    -1,   195,
     624,  1216,   626,  1125,   625,    -1,   944,    -1,   394,   624,
    1128,   236,  1125,   625,    -1,   519,   624,  1125,   626,  1125,
     625,    -1,   519,   624,  1125,   626,   232,  1125,  1214,   625,
      -1,   523,   624,  1125,   626,  1125,   626,  1125,   625,    -1,
     523,   624,  1125,   626,  1125,   625,    -1,   523,   624,  1125,
     187,  1125,   184,  1125,   625,    -1,   523,   624,  1125,   187,
    1125,   625,    -1,   529,   933,    -1,   544,   624,  1215,   626,
    1125,   626,  1125,   625,    -1,   545,   624,  1215,   626,  1125,
     626,  1125,   625,    -1,   583,  1124,    -1,   585,   933,    -1,
     584,   933,    -1,    20,   624,  1125,   625,    -1,    58,   624,
    1125,   625,    -1,    66,   624,  1162,   625,    -1,    69,   624,
    1125,   625,    -1,   103,   624,   625,    -1,   218,   624,  1125,
     626,  1125,   626,  1125,   625,    -1,   185,   624,  1125,   626,
    1125,   625,    -1,   185,   624,  1125,   626,  1125,   626,  1125,
     625,    -1,   319,   624,  1125,   625,    -1,   329,   624,  1125,
     626,  1125,   625,    -1,   361,   624,  1125,   625,    -1,   386,
     624,  1125,   625,    -1,   408,   624,  1125,   625,    -1,   436,
     624,  1125,   626,  1125,   625,    -1,   437,   624,  1125,   626,
    1125,   626,  1125,   625,    -1,   449,   624,  1125,   625,    -1,
     458,   624,   625,    -1,   557,   624,  1125,   626,  1125,   625,
      -1,   597,   624,  1125,   625,    -1,   597,   624,  1125,   626,
    1125,   625,    -1,   598,   624,  1125,   970,   625,    -1,   598,
     624,  1125,    18,    59,   960,   970,   625,    -1,   598,   624,
    1125,    18,    33,   960,   625,    -1,   598,   624,  1125,   626,
    1242,   626,  1242,   626,  1242,   625,    -1,  1139,    -1,    87,
     624,  1125,   626,  1125,   625,    -1,   193,   624,  1162,   625,
      -1,   264,   624,  1162,   625,    -1,   331,   624,  1162,   625,
      -1,   332,   624,  1162,   625,    -1,   333,   624,  1162,   625,
      -1,   391,   624,  1125,   626,  1125,   625,    -1,   392,   624,
    1162,   625,    -1,    -1,  1416,   624,  1141,  1145,   625,    -1,
    1421,   632,  1421,   624,  1161,   625,    -1,  1143,  1144,    -1,
     236,    42,   326,    -1,    -1,   236,   339,   250,   326,    -1,
      -1,   602,   409,   168,    -1,    -1,  1146,    -1,  1147,    -1,
    1146,   626,  1147,    -1,  1121,  1125,  1122,  1123,    -1,    27,
     624,  1158,   625,    -1,    27,   624,   135,  1158,   625,    -1,
      36,   624,  1158,   625,    -1,    37,   624,  1158,   625,    -1,
      39,   624,  1158,   625,    -1,    92,   624,  1219,   619,   625,
      -1,    92,   624,  1158,   625,    -1,    -1,    -1,    92,   624,
     135,  1149,  1162,  1150,   625,    -1,   325,   624,  1158,   625,
      -1,   325,   624,   135,  1158,   625,    -1,   308,   624,  1158,
     625,    -1,   308,   624,   135,  1158,   625,    -1,   513,   624,
    1158,   625,    -1,   591,   624,  1158,   625,    -1,   512,   624,
    1158,   625,    -1,   593,   624,  1158,   625,    -1,   524,   624,
    1158,   625,    -1,   524,   624,   135,  1158,   625,    -1,    -1,
     201,   624,  1155,  1151,  1162,  1157,  1156,   625,    -1,    -1,
     631,  1153,  1154,    -1,  1423,   475,  1125,    -1,  1423,    -1,
     631,  1443,  1423,  1003,    -1,    -1,   135,    -1,    -1,   468,
    1400,    -1,    -1,  1232,    -1,    -1,  1219,  1159,  1125,    -1,
      33,   938,    -1,    59,   938,   958,    -1,   341,   938,    -1,
     482,    -1,   482,   234,    -1,   574,    -1,   574,   234,    -1,
     110,    -1,   546,   932,    -1,   107,   932,    -1,   118,   930,
      -1,    -1,  1162,    -1,  1125,    -1,  1162,   626,  1125,    -1,
    1164,    -1,   624,  1164,   625,    -1,  1409,    -1,  1164,   626,
    1409,    -1,    -1,  1125,    -1,    -1,   145,  1125,    -1,   599,
    1125,   542,  1125,    -1,  1167,   599,  1125,   542,  1125,    -1,
    1183,    -1,  1172,    -1,  1171,    -1,  1168,    -1,   628,  1421,
    1168,   629,    -1,  1170,    -1,  1171,   626,  1170,    -1,  1168,
    1180,  1168,    -1,  1168,   516,  1183,    -1,    -1,  1168,  1180,
    1168,   362,  1173,  1125,    -1,    -1,  1168,   516,  1183,   362,
    1174,  1125,    -1,    -1,  1168,  1180,  1168,   582,  1175,   624,
    1213,   625,    -1,  1168,   339,   245,  1183,    -1,    -1,  1168,
     256,  1199,   245,  1168,   362,  1176,  1125,    -1,    -1,  1168,
     256,  1199,   245,  1183,  1177,   582,   624,  1213,   625,    -1,
    1168,   339,   256,  1199,   245,  1183,    -1,    -1,  1168,   451,
    1199,   245,  1168,   362,  1178,  1125,    -1,    -1,  1168,   451,
    1199,   245,  1183,  1179,   582,   624,  1213,   625,    -1,  1168,
     339,   451,  1199,   245,  1183,    -1,   245,    -1,   226,   245,
      -1,    95,   245,    -1,    -1,  1182,    -1,   383,   624,  1213,
     625,   840,    -1,    -1,  1184,  1413,  1181,  1218,  1208,    -1,
    1198,  1197,  1194,    -1,   624,  1197,  1185,   625,  1218,    -1,
    1192,  1511,    -1,    -1,    -1,  1185,   570,  1515,  1186,  1516,
    1187,  1511,    -1,  1189,    -1,    -1,    -1,  1190,  1522,  1119,
    1191,   907,  1118,    -1,    -1,  1197,  1193,  1171,    -1,    -1,
      -1,  1195,  1115,  1119,  1196,   907,    -1,    -1,   466,    -1,
      -1,   374,    -1,    -1,   184,   245,    -1,   184,   371,    46,
      -1,   184,   200,    46,    -1,   182,    -1,   219,    -1,    -1,
    1201,   980,  1200,  1203,   624,  1212,   625,    -1,    -1,   581,
     980,  1200,  1204,   624,  1210,   625,    -1,  1202,    -1,  1205,
    1202,    -1,    -1,    -1,  1207,  1205,    -1,    -1,  1209,  1206,
      -1,    -1,  1212,    -1,  1421,    -1,   399,    -1,  1211,    -1,
    1212,   626,  1211,    -1,  1421,    -1,  1213,   626,  1421,    -1,
    1215,    -1,   111,    -1,   112,    -1,   113,    -1,   114,    -1,
     211,    -1,   212,    -1,   213,    -1,   321,    -1,   322,    -1,
     463,    -1,   612,    -1,   115,    -1,   597,    -1,   214,    -1,
     323,    -1,   330,    -1,   408,    -1,   464,    -1,   319,    -1,
     613,    -1,   110,    -1,   546,    -1,   543,    -1,   107,    -1,
      -1,    18,    -1,   155,    -1,    -1,  1217,  1421,    -1,    -1,
      12,    -1,    -1,    -1,   600,  1221,  1125,    -1,    -1,    -1,
     205,  1223,  1125,    -1,   160,  1135,    -1,    -1,    -1,   200,
      46,  1226,  1227,    -1,  1226,   626,  1408,  1235,    -1,  1408,
    1235,    -1,    -1,   603,    -1,   604,    -1,   371,    46,  1229,
      -1,  1229,   626,  1230,    -1,  1230,    -1,  1410,  1235,    -1,
      -1,  1232,    -1,    -1,   371,    46,  1233,  1234,    -1,  1234,
     626,  1408,  1235,    -1,  1408,  1235,    -1,    -1,    19,    -1,
     126,    -1,    -1,  1238,    -1,    -1,  1238,    -1,   261,  1239,
      -1,  1240,    -1,  1240,   626,  1240,    -1,  1240,   360,  1240,
      -1,  1421,    -1,  1401,    -1,   561,    -1,   275,    -1,   356,
      -1,    -1,   261,  1240,    -1,   356,    -1,   207,    -1,   275,
      -1,   561,    -1,   117,    -1,   179,    -1,   356,    -1,   207,
      -1,   275,    -1,   561,    -1,  1246,    -1,   356,    -1,   561,
      -1,   275,    -1,   117,    -1,   179,    -1,   356,    -1,   561,
      -1,   275,    -1,  1246,    -1,  1247,    -1,   117,    -1,   179,
      -1,    -1,    -1,   401,  1421,  1249,   624,  1250,   625,    -1,
      -1,  1251,    -1,  1251,   626,  1252,    -1,  1252,    -1,  1121,
    1125,  1122,    -1,    -1,  1254,  1255,    -1,  1255,   626,  1256,
      -1,  1256,    -1,   631,  1423,    -1,  1423,    -1,    -1,   233,
    1258,  1259,    -1,    -1,    -1,   375,  1420,  1260,   949,  1261,
    1384,  1387,    -1,   141,  1420,    -1,  1253,    -1,    -1,   138,
    1263,  1162,    -1,    -1,   139,  1274,  1456,  1273,  1265,  1268,
    1040,    -1,    -1,   139,   223,  1421,   362,  1413,  1266,    -1,
     139,   103,  1273,  1421,    -1,   139,   190,  1273,  1421,   632,
    1421,    -1,   139,   190,  1273,  1421,    -1,   139,   401,  1273,
     682,    -1,   139,   579,   681,  1486,    -1,    -1,   139,   594,
    1273,  1267,  1268,  1040,    -1,   139,   162,  1273,   682,    -1,
     139,   554,  1273,   682,    -1,   139,   531,   816,  1275,    -1,
     139,   271,   200,   817,  1275,    -1,   139,   472,  1273,  1423,
      -1,  1269,    -1,  1268,   626,  1269,    -1,  1413,    -1,  1413,
    1181,    -1,  1272,    -1,  1271,   626,  1272,    -1,  1414,    -1,
      -1,   218,   166,    -1,    -1,   536,    -1,    -1,  1276,    -1,
    1277,    -1,  1276,  1277,    -1,  1275,   626,  1277,    -1,   827,
      -1,   828,    -1,    -1,    -1,   229,  1279,  1284,  1039,  1286,
    1280,  1288,  1304,    -1,    -1,    -1,   437,  1282,  1285,  1286,
    1283,  1288,    -1,    -1,   278,    -1,   123,    -1,   208,    -1,
    1313,    -1,   123,    -1,   233,  1287,    -1,  1287,    -1,  1270,
      -1,  1291,    -1,   624,   625,  1291,    -1,   624,  1290,   625,
    1291,    -1,    -1,   474,  1289,  1295,    -1,  1290,   626,  1406,
      -1,  1406,    -1,   586,  1294,    -1,   587,  1294,    -1,    -1,
     885,  1292,  1507,    -1,    -1,   624,   885,   625,  1293,  1510,
      -1,  1294,   626,  1299,    -1,  1299,    -1,  1295,   626,  1296,
      -1,  1296,    -1,  1410,  1297,  1303,    -1,   155,    -1,   475,
      -1,    -1,  1297,    -1,    -1,   624,  1300,  1301,   625,    -1,
      -1,  1302,    -1,  1302,   626,  1303,    -1,  1303,    -1,  1125,
      -1,   120,    -1,    -1,    -1,   362,   142,  1305,   248,   576,
    1311,    -1,    -1,    -1,   576,  1307,  1313,  1039,  1169,   474,
    1309,  1308,  1220,  1231,  1241,    -1,  1309,   626,  1310,    -1,
    1310,    -1,  1410,  1297,  1303,    -1,  1311,   626,  1312,    -1,
    1312,    -1,  1410,  1297,  1303,    -1,    -1,   278,    -1,    -1,
     125,  1315,  1323,  1316,    -1,    -1,   187,  1413,  1181,  1317,
    1220,  1231,  1241,    -1,    -1,  1320,  1318,   187,  1169,  1220,
      -1,    -1,   187,  1271,  1319,   582,  1169,  1220,    -1,  1321,
      -1,  1320,   626,  1321,    -1,  1421,  1322,    -1,  1421,   632,
    1421,  1322,    -1,    -1,   632,   619,    -1,    -1,  1324,  1323,
      -1,   410,    -1,   278,    -1,   219,    -1,    -1,   557,  1327,
    1326,  1269,    -1,    -1,   533,    -1,    -1,  1329,    -1,  1330,
      -1,  1329,   626,  1330,    -1,    93,    -1,   316,    -1,    41,
     239,    -1,    88,   528,    -1,   379,   174,    -1,   240,    -1,
     527,    -1,   491,    -1,    12,    -1,    -1,   184,   409,   356,
      -1,    -1,   479,  1333,  1334,    -1,   104,  1345,    -1,  1341,
     530,  1340,  1345,    -1,  1341,   553,  1340,  1345,    -1,   161,
    1340,  1345,    -1,   533,   511,  1340,  1345,    -1,   365,   530,
    1340,  1345,    -1,   390,    -1,   153,   904,  1337,    -1,   153,
      12,  1337,    -1,  1341,    70,  1342,  1413,  1340,  1345,    -1,
    1338,   272,    -1,   484,   210,    -1,    -1,    34,   161,  1343,
    1344,  1335,  1236,    -1,    -1,   425,   161,  1343,  1344,  1336,
    1236,    -1,   982,  1342,  1413,  1340,  1220,    -1,  1339,   152,
      -1,    23,    -1,    90,    -1,   400,    -1,    92,   624,   619,
     625,   596,    -1,    92,   624,   619,   625,   158,    -1,   596,
    1236,    -1,   158,  1236,    -1,   405,    -1,   404,  1328,  1331,
    1236,    -1,  1442,   511,  1345,    -1,  1341,   403,    -1,  1442,
     590,  1345,    -1,   946,  1345,    -1,    69,  1345,    -1,   199,
      -1,   199,   184,  1424,    -1,    94,   103,   895,  1421,    -1,
      94,   533,  1413,    -1,    94,   594,  1413,    -1,   300,   511,
      -1,   484,   511,    -1,    94,   401,   682,    -1,    94,   190,
     682,    -1,    94,   554,   682,    -1,   401,   511,  1345,    -1,
     190,   511,  1345,    -1,   401,    67,   682,    -1,   190,    67,
     682,    -1,    94,   162,   682,    -1,   511,    -1,   334,    -1,
     272,    -1,   300,    -1,    33,    -1,    -1,   515,    -1,    -1,
    1342,  1421,    -1,    -1,   188,    -1,   187,    -1,   236,    -1,
      -1,   236,  1418,    -1,    -1,   187,  1244,    -1,    -1,   260,
    1418,    -1,   600,  1125,    -1,    -1,  1350,  1413,  1347,  1352,
      -1,    -1,  1350,  1351,  1348,  1349,    -1,  1104,    -1,  1278,
      -1,  1281,    -1,  1306,    -1,  1314,    -1,   126,    -1,   127,
      -1,    -1,   169,    -1,   384,    -1,   185,   155,  1423,    -1,
      -1,  1400,    -1,  1421,    -1,    -1,   181,  1079,  1354,  1355,
      -1,    -1,    -1,  1456,  1356,  1361,  1357,  1358,    -1,  1359,
      -1,    -1,   602,   414,   270,    -1,  1359,   626,  1360,    -1,
    1360,    -1,   157,   272,    -1,   153,   272,    -1,   192,   272,
      -1,   485,   272,    -1,    33,   272,    -1,   424,   272,    -1,
     409,    48,    -1,   210,    -1,   400,    -1,   272,    -1,   511,
      -1,   128,    -1,   442,    -1,    -1,  1268,    -1,    -1,   440,
    1363,  1364,    -1,  1364,   626,  1365,    -1,  1365,    -1,    -1,
     484,  1366,  1367,    -1,   300,    -1,   409,    48,    -1,    -1,
      12,    -1,    -1,   407,  1369,  1370,    -1,  1338,   272,  1371,
      -1,   550,  1418,    -1,    29,  1125,    -1,   249,  1373,  1125,
      -1,    -1,    81,    -1,   409,    -1,   581,  1421,    -1,    -1,
      -1,    -1,    -1,   266,  1380,  1376,  1382,  1381,   224,  1420,
    1377,  1383,   233,   533,  1413,  1181,  1378,   949,  1379,  1390,
    1384,  1387,  1391,  1393,  1396,    -1,   106,    -1,   610,    -1,
      -1,   267,    -1,    -1,    79,    -1,   278,    -1,    -1,   437,
      -1,   219,    -1,    -1,    70,  1385,    -1,  1385,  1386,    -1,
    1386,    -1,   538,    46,  1400,    -1,   369,   148,    46,  1400,
      -1,   148,    46,  1400,    -1,   159,    46,  1400,    -1,    -1,
     263,  1388,    -1,  1388,  1389,    -1,  1389,    -1,   538,    46,
    1400,    -1,   508,    46,  1400,    -1,    -1,   455,   216,    46,
    1400,    -1,    -1,   219,   356,  1392,    -1,   263,    -1,   455,
      -1,    -1,   624,  1394,   625,    -1,   624,   625,    -1,  1394,
     626,  1395,    -1,  1395,    -1,  1410,    -1,   631,  1423,    -1,
      -1,   474,  1397,    -1,  1397,   626,  1398,    -1,  1398,    -1,
    1410,  1297,  1121,  1303,  1122,    -1,   539,    -1,   340,    -1,
     564,   539,    -1,  1399,  1419,    -1,  1419,    -1,   207,    -1,
      35,    -1,   380,    -1,  1403,    -1,   618,  1404,    -1,   617,
    1404,    -1,  1399,    -1,  1404,    -1,  1405,    -1,   355,    -1,
     172,    -1,   556,    -1,   207,    -1,    35,    -1,   564,   207,
      -1,   564,    35,    -1,   356,    -1,   275,    -1,   561,    -1,
     117,    -1,   179,    -1,   110,   539,    -1,   546,   539,    -1,
     543,   539,    -1,  1410,    -1,  1407,    -1,  1421,   632,   619,
      -1,  1421,   632,  1421,   632,   619,    -1,  1125,    -1,  1421,
      -1,  1411,    -1,  1421,    -1,  1411,    -1,  1421,   632,  1421,
      -1,   632,  1421,   632,  1421,    -1,  1421,   632,  1421,   632,
    1421,    -1,  1421,    -1,  1421,   632,  1421,   632,  1421,    -1,
    1421,   632,  1421,    -1,   632,  1421,    -1,  1421,    -1,  1421,
     632,  1421,    -1,   632,  1421,    -1,  1421,  1322,    -1,  1421,
     632,  1421,  1322,    -1,  1421,    -1,   215,    -1,   217,    -1,
    1418,    -1,   539,    -1,   539,    -1,   539,    -1,  1416,    -1,
    1425,    -1,  1416,    -1,  1426,    -1,  1421,    -1,  1418,    -1,
     259,    -1,  1423,    -1,  1423,   631,  1423,    -1,    99,  1124,
      -1,  1426,    -1,    20,    -1,    28,    -1,    30,    -1,    47,
      -1,    48,    -1,    58,    -1,    60,    -1,    65,    -1,    73,
      -1,    75,    -1,    87,    -1,   116,    -1,   138,    -1,   149,
      -1,   165,    -1,   181,    -1,   185,    -1,   203,    -1,   206,
      -1,   209,    -1,   231,    -1,   250,    -1,   352,    -1,   365,
      -1,   367,    -1,   377,    -1,   381,    -1,   393,    -1,   396,
      -1,   431,    -1,   434,    -1,   440,    -1,   443,    -1,   452,
      -1,   460,    -1,   465,    -1,   472,    -1,   482,    -1,   488,
      -1,   484,    -1,   489,    -1,   510,    -1,   514,    -1,   557,
      -1,   568,    -1,   569,    -1,   606,    -1,   609,    -1,   577,
      -1,     5,    -1,     7,    -1,     8,    -1,     9,    -1,    10,
      -1,    11,    -1,    17,    -1,    22,    -1,    23,    -1,    25,
      -1,    24,    -1,    26,    -1,    27,    -1,    34,    -1,    38,
      -1,    41,    -1,    43,    -1,    42,    -1,    45,    -1,    51,
      -1,    54,    -1,    55,    -1,    57,    -1,    62,    -1,    64,
      -1,    63,    -1,    66,    -1,    67,    -1,    69,    -1,    72,
      -1,    70,    -1,    74,    -1,    76,    -1,    77,    -1,    78,
      -1,    79,    -1,    81,    -1,    82,    -1,    84,    -1,    86,
      -1,    85,    -1,    88,    -1,    90,    -1,    93,    -1,    96,
      -1,    98,    -1,   101,    -1,   106,    -1,   105,    -1,   107,
      -1,   110,    -1,   115,    -1,   121,    -1,   122,    -1,   124,
      -1,   128,    -1,   130,    -1,   131,    -1,   132,    -1,   133,
      -1,   134,    -1,   141,    -1,   142,    -1,   143,    -1,   150,
      -1,   154,    -1,   153,    -1,   152,    -1,   157,    -1,   158,
      -1,   160,    -1,   162,    -1,   161,    -1,   163,    -1,   164,
      -1,   168,    -1,   169,    -1,   170,    -1,   174,    -1,   173,
      -1,   186,    -1,   147,    -1,   188,    -1,   176,    -1,   177,
      -1,   178,    -1,   192,    -1,   194,    -1,   193,    -1,   195,
      -1,   199,    -1,   197,    -1,   204,    -1,   210,    -1,   214,
      -1,   216,    -1,   220,    -1,   235,    -1,   221,    -1,   222,
      -1,   225,    -1,   239,    -1,   240,    -1,   242,    -1,   243,
      -1,   230,    -1,   247,    -1,   251,    -1,   254,    -1,   257,
      -1,   258,    -1,   264,    -1,   265,    -1,   267,    -1,   269,
      -1,   271,    -1,   272,    -1,   306,    -1,   300,    -1,   302,
      -1,   284,    -1,   288,    -1,   285,    -1,   286,    -1,   301,
      -1,   287,    -1,   290,    -1,   282,    -1,   289,    -1,   283,
      -1,   298,    -1,   292,    -1,   291,    -1,   293,    -1,   294,
      -1,   295,    -1,   296,    -1,   297,    -1,   280,    -1,   304,
      -1,   305,    -1,   307,    -1,   309,    -1,   310,    -1,   315,
      -1,   316,    -1,   317,    -1,   318,    -1,   319,    -1,   320,
      -1,   323,    -1,   324,    -1,   328,    -1,   326,    -1,   330,
      -1,   331,    -1,   332,    -1,   333,    -1,   334,    -1,   335,
      -1,   337,    -1,   336,    -1,   338,    -1,   341,    -1,   342,
      -1,   346,    -1,   345,    -1,   353,    -1,   347,    -1,   348,
      -1,   357,    -1,   359,    -1,   360,    -1,   361,    -1,   363,
      -1,   364,    -1,   378,    -1,   379,    -1,   382,    -1,   385,
      -1,   384,    -1,   386,    -1,   387,    -1,   388,    -1,   389,
      -1,   390,    -1,   391,    -1,   392,    -1,   397,    -1,   398,
      -1,   400,    -1,   402,    -1,   403,    -1,   404,    -1,   405,
      -1,   406,    -1,   408,    -1,   409,    -1,   410,    -1,   413,
      -1,   417,    -1,   418,    -1,   420,    -1,   419,    -1,   421,
      -1,   424,    -1,   425,    -1,   426,    -1,   427,    -1,   428,
      -1,   430,    -1,   433,    -1,   435,    -1,   438,    -1,   442,
      -1,   445,    -1,   446,    -1,   447,    -1,   449,    -1,   453,
      -1,   454,    -1,   455,    -1,   458,    -1,   456,    -1,   457,
      -1,   459,    -1,   461,    -1,   462,    -1,   464,    -1,   470,
      -1,   469,    -1,   471,    -1,   483,    -1,   476,    -1,   480,
      -1,   485,    -1,   487,    -1,   490,    -1,   491,    -1,   501,
      -1,   500,    -1,   503,    -1,   506,    -1,   509,    -1,   511,
      -1,   515,    -1,   517,    -1,   518,    -1,   519,    -1,   520,
      -1,   522,    -1,   521,    -1,   525,    -1,   526,    -1,   527,
      -1,   528,    -1,   535,    -1,   530,    -1,   534,    -1,   531,
      -1,   536,    -1,   537,    -1,   540,    -1,   541,    -1,   552,
      -1,   553,    -1,   543,    -1,   544,    -1,   545,    -1,   546,
      -1,   558,    -1,   559,    -1,   560,    -1,   190,    -1,   562,
      -1,   563,    -1,   566,    -1,   565,    -1,   572,    -1,   575,
      -1,   579,    -1,   580,    -1,   590,    -1,   594,    -1,   587,
      -1,   596,    -1,   595,    -1,   597,    -1,   605,    -1,   598,
      -1,   608,    -1,   610,    -1,   613,    -1,    -1,   474,  1428,
    1429,    -1,    -1,  1445,  1430,  1435,    -1,    -1,   552,  1431,
    1447,    -1,    -1,  1441,  1432,  1433,    -1,    -1,  1444,  1434,
    1435,    -1,   552,  1447,    -1,    -1,   626,  1436,    -1,    -1,
    1437,  1439,    -1,    -1,  1436,   626,  1438,  1439,    -1,    -1,
    1441,  1440,  1444,    -1,  1445,    -1,   197,    -1,   267,    -1,
     471,    -1,    -1,   197,    -1,   267,    -1,   471,    -1,    -1,
     197,   632,    -1,   267,   632,    -1,   471,   632,    -1,  1446,
    1297,  1453,    -1,  1446,  1297,  1453,    -1,   631,  1423,  1297,
    1125,    -1,   631,   631,  1443,  1446,  1297,  1453,    -1,   946,
     951,    -1,   336,  1297,  1125,    -1,   336,   948,   953,    -1,
     386,  1297,  1452,    -1,   386,   184,  1424,  1297,  1452,    -1,
    1421,    -1,  1421,   632,  1421,    -1,   120,   632,  1421,    -1,
    1448,    -1,  1449,    -1,  1448,   626,  1449,    -1,  1449,   626,
    1448,    -1,  1450,    -1,   242,   258,  1451,    -1,   414,   364,
      -1,   414,   607,    -1,   414,   562,    -1,   414,    74,    -1,
     435,   414,    -1,   469,    -1,   539,    -1,   386,   624,   539,
     625,    -1,   361,   624,   539,   625,    -1,  1125,    -1,   120,
      -1,   362,    -1,    12,    -1,    33,    -1,    -1,   270,  1456,
    1455,  1457,    -1,   533,    -1,   530,    -1,  1458,    -1,  1457,
     626,  1458,    -1,  1413,  1218,  1459,    -1,   414,    -1,   607,
      -1,   278,   607,    -1,   414,   267,    -1,    -1,   573,  1461,
    1456,    -1,   203,  1413,   365,  1218,    -1,   203,  1415,    65,
      -1,    -1,   203,  1415,   414,  1463,  1464,  1220,  1237,    -1,
    1465,    -1,  1421,  1466,    -1,   177,    -1,   346,    -1,   177,
      -1,   346,    -1,   398,    -1,   251,    -1,    -1,  1468,  1467,
     624,  1302,   625,    -1,   155,    -1,   191,    -1,   252,    -1,
     202,    -1,   279,    -1,   450,   681,  1470,    -1,  1474,   362,
    1473,  1485,   187,  1487,    -1,  1474,   362,   190,  1485,   187,
    1487,    -1,  1474,   362,   401,  1485,   187,  1487,    -1,    12,
    1475,   626,   198,   368,   187,  1487,    -1,   406,   362,  1424,
     187,  1487,    -1,   198,   681,  1472,    -1,  1474,   362,  1473,
    1485,   550,  1487,  1492,  1493,    -1,  1474,   362,   190,  1485,
     550,  1487,  1492,  1493,    -1,  1474,   362,   401,  1485,   550,
    1487,  1492,  1493,    -1,   406,   362,  1424,   550,  1487,  1494,
      -1,    -1,   533,    -1,  1476,    -1,    12,  1475,    -1,    -1,
     400,    -1,  1477,    -1,  1476,   626,  1477,    -1,    -1,   466,
    1478,  1489,    -1,    -1,   229,  1479,  1489,    -1,    -1,   576,
    1480,  1489,    -1,    -1,   422,  1481,  1489,    -1,   125,    -1,
     578,    -1,   223,    -1,    13,    -1,    94,    -1,   139,    -1,
     165,    -1,   430,    -1,   480,    -1,   402,    -1,   176,    -1,
     198,   368,    -1,   479,   104,    -1,   525,    -1,    94,   536,
     530,    -1,   270,   530,    -1,   438,   484,    -1,   438,    64,
      -1,    94,   594,    -1,   479,   594,    -1,    94,   454,    -1,
      13,   454,    -1,    94,   579,    -1,   162,    -1,   554,    -1,
      94,   531,    -1,    -1,    16,    -1,  1484,  1482,  1483,    -1,
    1484,    -1,   520,   539,    -1,   243,   539,    -1,    62,   539,
      -1,   619,    -1,  1421,   632,   619,    -1,   619,   632,   619,
      -1,  1413,    -1,  1424,    -1,  1486,   626,  1424,    -1,  1488,
      -1,  1487,   626,  1488,    -1,  1424,   216,    46,   539,    -1,
    1424,   216,    46,   386,   539,    -1,  1424,   216,   602,  1423,
      -1,  1424,   216,   602,  1423,    18,  1418,    -1,  1424,    -1,
      -1,   624,  1490,   625,    -1,  1490,   626,  1491,    -1,  1491,
      -1,  1421,    -1,    -1,   439,  1483,    -1,   439,   507,    -1,
     439,   608,    -1,   439,   348,    -1,    -1,   602,  1495,    -1,
      -1,   602,   198,   368,    -1,  1495,  1496,    -1,  1496,    -1,
     198,   368,    -1,   305,  1242,    -1,   309,  1242,    -1,   304,
    1242,    -1,   310,  1242,    -1,    -1,    30,  1498,  1499,    -1,
      -1,   605,    -1,    -1,    16,   352,    55,    -1,    16,    55,
      -1,    -1,   429,    -1,   352,   429,    -1,    -1,   460,    -1,
      75,  1499,  1500,  1501,    -1,   452,  1499,  1500,  1501,    -1,
     452,  1499,   550,  1502,  1421,    -1,   460,  1421,    -1,   429,
     460,  1421,    -1,    -1,  1508,    -1,    -1,   570,  1515,  1509,
    1105,    -1,    -1,  1508,    -1,  1512,    -1,    -1,  1512,    -1,
      -1,  1513,  1514,    -1,  1232,  1236,    -1,  1238,    -1,    -1,
     135,    -1,    12,    -1,   466,  1188,    -1,   624,  1107,   625,
      -1,  1516,  1511,    -1,    -1,  1517,   570,  1515,  1518,  1516,
    1511,    -1,  1520,  1517,  1521,    -1,    -1,    -1,    -1,  1523,
      -1,  1523,  1524,    -1,  1524,    -1,   516,    -1,   208,    -1,
     135,    -1,   504,    -1,   499,    -1,   500,    -1,   502,    -1,
      12,    -1,  1530,  1526,    -1,  1529,  1527,    -1,  1531,  1528,
    1535,    -1,  1535,    -1,  1543,    -1,  1554,    -1,  1548,    -1,
     668,    -1,  1535,    -1,  1543,    -1,  1554,    -1,  1548,    -1,
    1547,    -1,   668,    -1,  1529,    -1,  1530,    -1,    -1,   122,
     155,  1424,    -1,  1532,    -1,  1532,  1533,    -1,  1533,    -1,
     373,   437,    -1,    11,   155,   563,    -1,    11,   155,   317,
      -1,    11,   155,   537,    -1,    -1,   505,   465,   122,    -1,
     505,   465,   235,    -1,    -1,  1534,   594,  1413,  1536,  1537,
      18,  1539,    -1,    -1,   624,  1538,   625,    -1,  1421,    -1,
    1538,   626,  1421,    -1,    -1,  1540,  1541,  1542,    -1,   466,
    1108,    -1,   624,  1106,   625,  1510,    -1,    -1,   602,    61,
     368,    -1,   602,    51,    61,   368,    -1,   602,   267,    61,
     368,    -1,    -1,    -1,    -1,   554,  1121,   682,   787,   788,
     362,  1121,  1544,  1413,   184,  1121,  1545,   144,   457,  1546,
     737,    -1,    10,  1121,   190,  1421,   447,   908,   489,  1418,
      -1,  1121,   190,  1421,   447,   908,   489,  1418,    -1,    -1,
      -1,    -1,    -1,    -1,  1121,   190,   682,   624,  1549,   693,
     625,  1550,   447,  1551,   943,  1552,   684,  1553,   737,    -1,
      -1,    -1,    -1,    -1,   401,  1121,   682,  1555,   624,  1556,
     697,   625,  1557,   684,  1558,   737,    -1,   609,  1561,  1560,
    1562,    -1,   609,   149,  1560,  1564,    -1,   609,   396,  1560,
      -1,   609,    75,  1560,  1563,    -1,   609,   452,  1560,    -1,
     609,   418,    -1,  1400,    -1,  1400,   626,  1400,    -1,  1400,
     626,  1400,   626,  1242,    -1,    30,    -1,   510,    -1,    -1,
     245,    -1,   445,    -1,    -1,   363,   387,    -1,    -1,    -1,
     526,  1565,  1566,    -1,    -1,   184,   320,    -1,   231,   389,
    1421,   489,  1418,    -1,   569,   389,  1421,    -1
};

/* YYRLINE[YYN] -- source line where rule number YYN was defined.  */
static const yytype_uint16 yyrline[] =
{
       0,  1894,  1894,  1907,  1906,  1931,  1938,  1940,  1944,  1945,
    1950,  1951,  1952,  1953,  1954,  1955,  1956,  1957,  1958,  1959,
    1960,  1961,  1962,  1963,  1964,  1965,  1966,  1967,  1968,  1969,
    1970,  1971,  1972,  1973,  1974,  1975,  1976,  1977,  1978,  1979,
    1980,  1981,  1982,  1983,  1984,  1985,  1986,  1987,  1988,  1989,
    1990,  1991,  1992,  1993,  1994,  1995,  1996,  1997,  1998,  1999,
    2000,  2001,  2005,  2015,  2016,  2020,  2030,  2037,  2048,  2047,
    2058,  2060,  2064,  2065,  2069,  2082,  2081,  2101,  2100,  2118,
    2119,  2123,  2127,  2131,  2135,  2139,  2143,  2147,  2152,  2162,
    2167,  2171,  2175,  2179,  2183,  2187,  2192,  2196,  2201,  2232,
    2237,  2244,  2247,  2249,  2250,  2254,  2268,  2272,  2288,  2292,
    2305,  2304,  2349,  2348,  2360,  2358,  2371,  2369,  2381,  2380,
    2393,  2392,  2400,  2404,  2408,  2412,  2419,  2432,  2433,  2437,
    2441,  2445,  2449,  2453,  2457,  2461,  2469,  2468,  2500,  2499,
    2506,  2513,  2514,  2520,  2526,  2536,  2542,  2548,  2550,  2557,
    2558,  2562,  2568,  2577,  2578,  2586,  2586,  2644,  2645,  2646,
    2647,  2648,  2649,  2650,  2651,  2652,  2653,  2654,  2655,  2656,
    2661,  2675,  2691,  2710,  2711,  2715,  2716,  2721,  2723,  2725,
    2727,  2729,  2731,  2733,  2739,  2740,  2741,  2745,  2749,  2757,
    2756,  2769,  2771,  2774,  2776,  2780,  2784,  2791,  2793,  2797,
    2798,  2803,  2822,  2850,  2852,  2856,  2857,  2861,  2888,  2889,
    2890,  2891,  2895,  2896,  2900,  2901,  2906,  2909,  2936,  2935,
    3000,  3016,  3015,  3072,  3098,  3098,  3121,  3122,  3127,  3129,
    3134,  3156,  3167,  3171,  3193,  3194,  3198,  3202,  3211,  3217,
    3223,  3232,  3247,  3270,  3276,  3277,  3283,  3286,  3290,  3298,
    3318,  3320,  3338,  3344,  3346,  3348,  3350,  3352,  3354,  3356,
    3358,  3360,  3362,  3364,  3366,  3371,  3387,  3403,  3404,  3409,
    3415,  3424,  3430,  3439,  3447,  3455,  3464,  3466,  3475,  3480,
    3486,  3495,  3503,  3505,  3507,  3509,  3511,  3513,  3515,  3517,
    3519,  3521,  3523,  3525,  3527,  3532,  3550,  3571,  3572,  3576,
    3577,  3578,  3579,  3580,  3581,  3582,  3583,  3584,  3585,  3586,
    3587,  3588,  3593,  3592,  3599,  3599,  3656,  3655,  3684,  3684,
    3700,  3753,  3796,  3817,  3816,  3838,  3857,  3859,  3860,  3864,
    3884,  3907,  3909,  3925,  3907,  3944,  3946,  3947,  3951,  3952,
    3957,  3963,  3956,  3984,  3983,  3999,  4000,  4004,  4005,  4010,
    4014,  4009,  4035,  4039,  4034,  4058,  4068,  4073,  4072,  4107,
    4108,  4113,  4112,  4144,  4144,  4159,  4158,  4195,  4207,  4209,
    4206,  4236,  4235,  4256,  4258,  4263,  4265,  4267,  4284,  4289,
    4295,  4302,  4303,  4311,  4317,  4326,  4332,  4338,  4339,  4343,
    4343,  4348,  4349,  4350,  4354,  4355,  4356,  4359,  4361,  4365,
    4366,  4367,  4371,  4372,  4373,  4374,  4375,  4376,  4377,  4378,
    4381,  4383,  4387,  4388,  4389,  4393,  4394,  4395,  4396,  4397,
    4400,  4402,  4406,  4407,  4408,  4412,  4413,  4414,  4415,  4416,
    4417,  4418,  4421,  4423,  4427,  4428,  4429,  4433,  4434,  4435,
    4440,  4448,  4456,  4464,  4476,  4488,  4493,  4498,  4506,  4514,
    4522,  4530,  4538,  4546,  4554,  4567,  4580,  4594,  4599,  4612,
    4613,  4664,  4665,  4668,  4683,  4701,  4706,  4704,  4711,  4713,
    4712,  4716,  4715,  4721,  4758,  4759,  4764,  4763,  4782,  4801,
    4800,  4817,  4821,  4829,  4828,  4831,  4833,  4835,  4837,  4842,
    4843,  4848,  4849,  4853,  4854,  4858,  4877,  4887,  4898,  4907,
    4908,  4924,  4926,  4925,  4930,  4928,  4939,  4940,  4944,  4962,
    4978,  4979,  4995,  5010,  5032,  5033,  5038,  5037,  5061,  5071,
    5093,  5092,  5110,  5109,  5129,  5151,  5155,  5184,  5196,  5197,
    5202,  5213,  5201,  5238,  5239,  5243,  5256,  5277,  5290,  5316,
    5317,  5322,  5321,  5358,  5363,  5364,  5368,  5369,  5373,  5375,
    5381,  5383,  5385,  5387,  5389,  5391,  5401,  5416,  5400,  5430,
    5431,  5435,  5436,  5440,  5441,  5445,  5446,  5450,  5451,  5455,
    5456,  5460,  5464,  5465,  5468,  5470,  5474,  5475,  5479,  5480,
    5481,  5485,  5490,  5495,  5500,  5505,  5510,  5515,  5520,  5535,
    5541,  5546,  5551,  5556,  5562,  5561,  5587,  5588,  5589,  5594,
    5599,  5604,  5606,  5608,  5610,  5616,  5624,  5642,  5659,  5685,
    5703,  5704,  5705,  5706,  5707,  5708,  5712,  5713,  5714,  5718,
    5719,  5723,  5724,  5725,  5726,  5731,  5738,  5739,  5743,  5744,
    5748,  5749,  5756,  5761,  5767,  5773,  5779,  5797,  5803,  5805,
    5809,  5813,  5814,  5818,  5823,  5822,  5845,  5846,  5847,  5848,
    5853,  5857,  5862,  5867,  5871,  5876,  5881,  5887,  5892,  5898,
    5902,  5907,  5912,  5914,  5916,  5918,  5931,  5933,  5938,  5943,
    5955,  5960,  5965,  5970,  5972,  5974,  5976,  5978,  5980,  5982,
    5984,  5987,  5986,  5991,  5990,  5994,  5996,  6005,  6006,  6007,
    6012,  6013,  6014,  6015,  6016,  6020,  6024,  6025,  6029,  6030,
    6034,  6035,  6036,  6037,  6038,  6042,  6043,  6044,  6045,  6046,
    6050,  6055,  6057,  6063,  6064,  6066,  6071,  6081,  6082,  6086,
    6087,  6088,  6096,  6097,  6101,  6102,  6106,  6107,  6108,  6112,
    6113,  6114,  6115,  6118,  6119,  6123,  6124,  6128,  6129,  6133,
    6134,  6138,  6139,  6140,  6141,  6142,  6143,  6149,  6155,  6161,
    6167,  6168,  6185,  6206,  6214,  6215,  6220,  6221,  6225,  6233,
    6237,  6238,  6242,  6243,  6247,  6256,  6260,  6261,  6265,  6273,
    6274,  6278,  6279,  6283,  6284,  6289,  6290,  6294,  6301,  6310,
    6315,  6323,  6324,  6325,  6326,  6327,  6328,  6333,  6341,  6342,
    6347,  6346,  6359,  6360,  6364,  6367,  6368,  6369,  6370,  6374,
    6382,  6389,  6390,  6394,  6404,  6405,  6409,  6410,  6413,  6415,
    6419,  6431,  6432,  6436,  6443,  6456,  6457,  6459,  6461,  6467,
    6472,  6478,  6484,  6491,  6501,  6502,  6503,  6504,  6505,  6509,
    6513,  6514,  6518,  6519,  6523,  6524,  6528,  6529,  6530,  6534,
    6535,  6539,  6543,  6556,  6568,  6569,  6573,  6574,  6578,  6579,
    6583,  6584,  6588,  6589,  6593,  6594,  6598,  6599,  6603,  6604,
    6608,  6610,  6614,  6615,  6619,  6623,  6624,  6637,  6638,  6639,
    6643,  6644,  6648,  6654,  6668,  6669,  6673,  6674,  6678,  6679,
    6687,  6686,  6725,  6724,  6738,  6750,  6749,  6768,  6767,  6786,
    6785,  6804,  6798,  6818,  6817,  6850,  6855,  6860,  6865,  6870,
    6880,  6881,  6882,  6883,  6887,  6888,  6900,  6901,  6905,  6906,
    6909,  6911,  6912,  6913,  6915,  6917,  6918,  6926,  6927,  6931,
    6940,  6938,  6952,  6966,  6965,  6979,  6977,  6991,  6998,  7009,
    7010,  7038,  7045,  7049,  7054,  7053,  7069,  7071,  7076,  7084,
    7083,  7099,  7103,  7102,  7114,  7115,  7119,  7134,  7135,  7139,
    7148,  7152,  7157,  7162,  7161,  7172,  7181,  7171,  7196,  7205,
    7209,  7218,  7227,  7233,  7239,  7248,  7257,  7276,  7297,  7307,
    7311,  7319,  7320,  7324,  7325,  7329,  7330,  7331,  7335,  7336,
    7337,  7341,  7342,  7343,  7344,  7349,  7358,  7348,  7376,  7386,
    7403,  7406,  7413,  7417,  7424,  7428,  7432,  7439,  7444,  7447,
    7454,  7457,  7463,  7466,  7473,  7476,  7483,  7483,  7489,  7490,
    7494,  7495,  7496,  7500,  7501,  7519,  7520,  7521,  7529,  7528,
    7540,  7541,  7542,  7547,  7546,  7568,  7569,  7573,  7574,  7578,
    7579,  7580,  7585,  7584,  7606,  7615,  7614,  7641,  7642,  7646,
    7647,  7651,  7652,  7653,  7654,  7655,  7656,  7661,  7660,  7682,
    7683,  7684,  7689,  7688,  7694,  7701,  7706,  7714,  7715,  7719,
    7733,  7732,  7745,  7746,  7750,  7751,  7755,  7765,  7775,  7776,
    7781,  7780,  7791,  7792,  7796,  7797,  7801,  7811,  7822,  7821,
    7829,  7829,  7840,  7841,  7846,  7847,  7856,  7865,  7866,  7870,
    7875,  7880,  7885,  7890,  7889,  7909,  7917,  7909,  7924,  7925,
    7926,  7927,  7928,  7932,  7939,  7946,  7948,  7959,  7960,  7964,
    7965,  7993,  8023,  8025,  8031,  8041,  8042,  8043,  8058,  8065,
    8091,  8097,  8103,  8104,  8105,  8106,  8107,  8111,  8112,  8117,
    8168,  8175,  8218,  8224,  8230,  8236,  8242,  8248,  8254,  8260,
    8264,  8270,  8276,  8282,  8288,  8294,  8298,  8304,  8314,  8320,
    8328,  8334,  8344,  8350,  8359,  8369,  8375,  8385,  8391,  8400,
    8404,  8410,  8416,  8422,  8428,  8434,  8440,  8446,  8452,  8458,
    8464,  8470,  8476,  8482,  8488,  8492,  8493,  8497,  8498,  8502,
    8503,  8507,  8508,  8512,  8513,  8514,  8515,  8516,  8517,  8521,
    8522,  8526,  8527,  8528,  8529,  8530,  8531,  8543,  8544,  8545,
    8546,  8547,  8553,  8557,  8563,  8569,  8575,  8581,  8583,  8590,
    8597,  8603,  8644,  8653,  8660,  8668,  8674,  8681,  8687,  8701,
    8708,  8724,  8730,  8736,  8744,  8750,  8756,  8762,  8768,  8783,
    8795,  8801,  8807,  8813,  8819,  8825,  8831,  8837,  8843,  8849,
    8855,  8861,  8867,  8873,  8879,  8885,  8891,  8899,  8920,  8927,
    8933,  8940,  8947,  8954,  8961,  8967,  8973,  8978,  8984,  8991,
    8997,  9003,  9009,  9015,  9021,  9039,  9045,  9051,  9058,  9065,
    9080,  9086,  9092,  9098,  9104,  9111,  9117,  9123,  9129,  9135,
    9141,  9147,  9159,  9165,  9171,  9177,  9183,  9191,  9197,  9209,
    9215,  9221,  9229,  9239,  9245,  9261,  9267,  9274,  9281,  9288,
    9295,  9302,  9306,  9326,  9325,  9398,  9440,  9442,  9447,  9448,
    9452,  9453,  9457,  9458,  9462,  9469,  9477,  9503,  9509,  9515,
    9521,  9527,  9533,  9542,  9549,  9551,  9548,  9558,  9569,  9575,
    9581,  9587,  9593,  9599,  9605,  9611,  9617,  9624,  9623,  9642,
    9641,  9656,  9666,  9674,  9690,  9691,  9696,  9701,  9706,  9709,
    9722,  9721,  9738,  9740,  9742,  9744,  9746,  9748,  9750,  9752,
    9754,  9756,  9758,  9763,  9764,  9768,  9775,  9783,  9784,  9788,
    9795,  9803,  9804,  9808,  9809,  9813,  9821,  9832,  9833,  9842,
    9853,  9854,  9860,  9861,  9881,  9883,  9887,  9885,  9902,  9900,
    9918,  9916,  9923,  9932,  9930,  9948,  9947,  9957,  9968,  9966,
    9985,  9984,  9995, 10006, 10007, 10008, 10016, 10017, 10021, 10036,
   10036, 10051, 10091, 10142, 10146, 10151, 10143, 10163, 10183, 10191,
   10183, 10200, 10199, 10222, 10239, 10222, 10246, 10250, 10276, 10277,
   10282, 10285, 10286, 10287, 10291, 10292, 10297, 10296, 10302, 10301,
   10309, 10310, 10313, 10315, 10315, 10319, 10319, 10324, 10325, 10329,
   10331, 10336, 10337, 10341, 10352, 10365, 10366, 10367, 10368, 10369,
   10370, 10371, 10372, 10373, 10374, 10375, 10376, 10380, 10381, 10382,
   10383, 10384, 10385, 10386, 10387, 10388, 10392, 10393, 10394, 10395,
   10398, 10400, 10401, 10405, 10406, 10414, 10416, 10420, 10422, 10421,
   10435, 10438, 10437, 10452, 10458, 10473, 10475, 10479, 10481, 10486,
   10487, 10507, 10532, 10536, 10537, 10541, 10554, 10556, 10561, 10560,
   10595, 10597, 10602, 10603, 10604, 10609, 10615, 10619, 10620, 10624,
   10631, 10638, 10645, 10655, 10673, 10677, 10683, 10689, 10699, 10703,
   10713, 10714, 10715, 10716, 10717, 10718, 10722, 10723, 10724, 10725,
   10726, 10730, 10731, 10732, 10733, 10734, 10738, 10739, 10740, 10741,
   10745, 10750, 10751, 10754, 10757, 10756, 10787, 10788, 10792, 10793,
   10797, 10809, 10809, 10819, 10820, 10824, 10843, 10876, 10875, 10888,
   10896, 10887, 10898, 10910, 10922, 10921, 10939, 10938, 10949, 10949,
   10965, 10972, 10995, 11016, 11028, 11033, 11032, 11042, 11048, 11055,
   11060, 11065, 11075, 11076, 11080, 11091, 11104, 11105, 11109, 11120,
   11121, 11125, 11126, 11129, 11131, 11134, 11135, 11136, 11140, 11141,
   11149, 11157, 11148, 11167, 11174, 11166, 11184, 11196, 11197, 11205,
   11209, 11210, 11221, 11222, 11226, 11235, 11236, 11237, 11239, 11238,
   11249, 11250, 11254, 11255, 11257, 11256, 11260, 11259, 11265, 11266,
   11270, 11271, 11275, 11285, 11286, 11290, 11291, 11296, 11295, 11309,
   11310, 11314, 11319, 11327, 11328, 11336, 11338, 11338, 11346, 11354,
   11345, 11376, 11377, 11381, 11389, 11390, 11394, 11404, 11405, 11412,
   11411, 11427, 11426, 11440, 11439, 11451, 11450, 11464, 11465, 11469,
   11482, 11498, 11499, 11503, 11504, 11508, 11509, 11510, 11515, 11514,
   11536, 11538, 11541, 11543, 11546, 11547, 11550, 11554, 11558, 11562,
   11566, 11570, 11574, 11578, 11582, 11590, 11593, 11603, 11602, 11617,
   11624, 11632, 11640, 11648, 11656, 11664, 11671, 11673, 11675, 11684,
   11688, 11693, 11692, 11698, 11697, 11702, 11711, 11718, 11723, 11728,
   11733, 11735, 11737, 11739, 11741, 11743, 11750, 11758, 11760, 11768,
   11775, 11782, 11792, 11799, 11805, 11814, 11822, 11826, 11830, 11837,
   11844, 11850, 11857, 11864, 11869, 11874, 11882, 11884, 11886, 11891,
   11892, 11895, 11897, 11901, 11902, 11906, 11907, 11911, 11912, 11916,
   11917, 11921, 11922, 11925, 11927, 11934, 11945, 11944, 11960, 11959,
   11966, 11967, 11968, 11969, 11970, 11974, 11975, 11980, 11984, 11990,
   11996, 12018, 12019, 12020, 12035, 12034, 12047, 12056, 12046, 12058,
   12062, 12063, 12077, 12078, 12083, 12085, 12087, 12089, 12091, 12093,
   12095, 12097, 12099, 12101, 12103, 12105, 12107, 12112, 12113, 12118,
   12117, 12127, 12128, 12132, 12132, 12134, 12135, 12139, 12140, 12145,
   12144, 12155, 12159, 12163, 12175, 12185, 12186, 12187, 12193, 12205,
   12217, 12227, 12237, 12204, 12245, 12246, 12250, 12251, 12255, 12256,
   12268, 12272, 12273, 12274, 12277, 12279, 12283, 12284, 12288, 12293,
   12300, 12305, 12312, 12314, 12318, 12319, 12323, 12328, 12336, 12337,
   12340, 12342, 12350, 12352, 12356, 12357, 12358, 12362, 12364, 12369,
   12370, 12379, 12380, 12384, 12385, 12389, 12402, 12426, 12438, 12449,
   12468, 12476, 12488, 12503, 12524, 12525, 12526, 12535, 12536, 12537,
   12538, 12545, 12551, 12557, 12563, 12569, 12598, 12629, 12639, 12649,
   12655, 12664, 12676, 12682, 12688, 12704, 12705, 12709, 12718, 12734,
   12738, 12780, 12784, 12802, 12806, 12885, 12910, 12941, 12942, 12958,
   12968, 12972, 12978, 12984, 12994, 13000, 13009, 13019, 13020, 13050,
   13063, 13079, 13095, 13112, 13113, 13124, 13125, 13136, 13137, 13138,
   13142, 13159, 13181, 13196, 13197, 13198, 13199, 13200, 13201, 13202,
   13203, 13204, 13205, 13206, 13207, 13208, 13209, 13210, 13211, 13212,
   13213, 13214, 13215, 13216, 13217, 13218, 13219, 13220, 13221, 13222,
   13223, 13224, 13225, 13226, 13227, 13228, 13229, 13230, 13231, 13232,
   13233, 13234, 13235, 13236, 13237, 13238, 13239, 13240, 13241, 13242,
   13243, 13244, 13245, 13255, 13256, 13257, 13258, 13259, 13260, 13261,
   13262, 13263, 13264, 13265, 13266, 13267, 13268, 13269, 13270, 13271,
   13272, 13273, 13274, 13275, 13276, 13277, 13278, 13279, 13280, 13281,
   13282, 13283, 13284, 13285, 13286, 13287, 13288, 13289, 13290, 13291,
   13292, 13293, 13294, 13295, 13296, 13297, 13298, 13299, 13304, 13305,
   13306, 13307, 13308, 13309, 13310, 13311, 13312, 13313, 13314, 13315,
   13316, 13317, 13318, 13319, 13320, 13321, 13322, 13323, 13324, 13325,
   13326, 13327, 13328, 13329, 13330, 13331, 13332, 13333, 13334, 13335,
   13336, 13337, 13338, 13339, 13340, 13341, 13342, 13343, 13344, 13345,
   13346, 13347, 13348, 13349, 13350, 13351, 13352, 13353, 13354, 13355,
   13356, 13357, 13358, 13359, 13360, 13361, 13362, 13363, 13364, 13365,
   13366, 13367, 13368, 13369, 13370, 13371, 13372, 13373, 13374, 13375,
   13376, 13377, 13378, 13379, 13380, 13381, 13382, 13383, 13384, 13385,
   13386, 13387, 13388, 13389, 13390, 13391, 13392, 13393, 13394, 13395,
   13396, 13397, 13398, 13399, 13400, 13401, 13402, 13403, 13404, 13405,
   13406, 13407, 13408, 13409, 13410, 13411, 13412, 13413, 13414, 13415,
   13416, 13417, 13418, 13419, 13420, 13421, 13422, 13423, 13424, 13425,
   13426, 13427, 13428, 13429, 13430, 13431, 13432, 13433, 13434, 13435,
   13436, 13437, 13438, 13439, 13440, 13441, 13442, 13443, 13444, 13445,
   13446, 13447, 13448, 13449, 13450, 13451, 13452, 13453, 13454, 13455,
   13456, 13457, 13458, 13459, 13460, 13461, 13462, 13463, 13464, 13465,
   13466, 13467, 13468, 13469, 13470, 13471, 13472, 13473, 13474, 13475,
   13476, 13477, 13478, 13479, 13480, 13481, 13482, 13483, 13484, 13485,
   13486, 13487, 13488, 13489, 13490, 13491, 13492, 13493, 13494, 13495,
   13496, 13497, 13498, 13499, 13500, 13501, 13502, 13503, 13504, 13505,
   13506, 13507, 13508, 13509, 13510, 13511, 13512, 13513, 13514, 13515,
   13516, 13517, 13518, 13519, 13520, 13521, 13522, 13523, 13524, 13525,
   13526, 13527, 13528, 13529, 13530, 13531, 13532, 13533, 13534, 13535,
   13536, 13537, 13538, 13539, 13540, 13541, 13542, 13543, 13544, 13545,
   13546, 13547, 13548, 13549, 13550, 13551, 13563, 13562, 13581, 13580,
   13587, 13586, 13596, 13595, 13606, 13605, 13611, 13619, 13621, 13626,
   13626, 13635, 13634, 13648, 13647, 13652, 13656, 13657, 13658, 13662,
   13663, 13664, 13665, 13669, 13670, 13671, 13672, 13677, 13702, 13730,
   13741, 13754, 13770, 13785, 13807, 13835, 13848, 13875, 13918, 13932,
   13933, 13934, 13935, 13939, 13957, 13975, 13976, 13980, 13981, 13982,
   13983, 13987, 13988, 13997, 14009, 14010, 14011, 14017, 14023, 14035,
   14034, 14050, 14051, 14055, 14056, 14060, 14073, 14074, 14075, 14080,
   14085, 14084, 14104, 14120, 14137, 14136, 14175, 14176, 14180, 14181,
   14185, 14186, 14187, 14188, 14190, 14189, 14203, 14204, 14205, 14206,
   14207, 14213, 14218, 14224, 14235, 14246, 14250, 14260, 14265, 14272,
   14284, 14296, 14305, 14307, 14311, 14312, 14319, 14321, 14325, 14326,
   14331, 14330, 14334, 14333, 14337, 14336, 14340, 14339, 14342, 14343,
   14344, 14345, 14346, 14347, 14348, 14349, 14350, 14351, 14352, 14353,
   14354, 14355, 14356, 14357, 14358, 14359, 14360, 14361, 14362, 14363,
   14364, 14365, 14366, 14367, 14371, 14372, 14376, 14377, 14381, 14391,
   14401, 14414, 14429, 14442, 14455, 14467, 14472, 14480, 14485, 14493,
   14522, 14529, 14537, 14545, 14551, 14555, 14559, 14560, 14564, 14591,
   14593, 14597, 14601, 14605, 14612, 14613, 14617, 14618, 14622, 14623,
   14627, 14628, 14634, 14640, 14646, 14656, 14655, 14665, 14666, 14671,
   14672, 14673, 14678, 14679, 14680, 14684, 14685, 14689, 14701, 14710,
   14720, 14729, 14743, 14744, 14749, 14748, 14764, 14765, 14766, 14769,
   14771, 14775, 14775, 14799, 14800, 14804, 14805, 14806, 14810, 14814,
   14821, 14824, 14822, 14838, 14845, 14866, 14883, 14885, 14889, 14890,
   14894, 14895, 14903, 14904, 14905, 14906, 14912, 14918, 14928, 14930,
   14932, 14937, 14938, 14939, 14940, 14941, 14945, 14946, 14947, 14948,
   14949, 14950, 14960, 14961, 14966, 14979, 14992, 14994, 14996, 15001,
   15006, 15008, 15010, 15016, 15017, 15019, 15025, 15024, 15042, 15043,
   15047, 15052, 15060, 15060, 15085, 15086, 15091, 15092, 15094, 15096,
   15114, 15120, 15125, 15107, 15187, 15205, 15230, 15262, 15266, 15274,
   15297, 15226, 15362, 15386, 15395, 15403, 15361, 15424, 15428, 15432,
   15436, 15440, 15444, 15451, 15458, 15465, 15475, 15476, 15480, 15481,
   15482, 15486, 15487, 15492, 15494, 15493, 15499, 15500, 15504, 15514
};
#endif

#if YYDEBUG || YYERROR_VERBOSE || YYTOKEN_TABLE
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "ABORT_SYM", "ACCESSIBLE_SYM", "ACTION",
  "ADD", "ADDDATE_SYM", "AFTER_SYM", "AGAINST", "AGGREGATE_SYM",
  "ALGORITHM_SYM", "ALL", "ALTER", "ANALYZE_SYM", "AND_AND_SYM", "AND_SYM",
  "ANY_SYM", "AS", "ASC", "ASCII_SYM", "ASENSITIVE_SYM", "AT_SYM",
  "AUTHORS_SYM", "AUTOEXTEND_SIZE_SYM", "AUTO_INC", "AVG_ROW_LENGTH",
  "AVG_SYM", "BACKUP_SYM", "BEFORE_SYM", "BEGIN_SYM", "BETWEEN_SYM",
  "BIGINT", "BINARY", "BINLOG_SYM", "BIN_NUM", "BIT_AND", "BIT_OR",
  "BIT_SYM", "BIT_XOR", "BLOB_SYM", "BLOCK_SYM", "BOOLEAN_SYM", "BOOL_SYM",
  "BOTH", "BTREE_SYM", "BY", "BYTE_SYM", "CACHE_SYM", "CALL_SYM",
  "CASCADE", "CASCADED", "CASE_SYM", "CAST_SYM", "CATALOG_NAME_SYM",
  "CHAIN_SYM", "CHANGE", "CHANGED", "CHARSET", "CHAR_SYM", "CHECKSUM_SYM",
  "CHECK_SYM", "CIPHER_SYM", "CLASS_ORIGIN_SYM", "CLIENT_SYM", "CLOSE_SYM",
  "COALESCE", "CODE_SYM", "COLLATE_SYM", "COLLATION_SYM", "COLUMNS",
  "COLUMN_SYM", "COLUMN_NAME_SYM", "COMMENT_SYM", "COMMITTED_SYM",
  "COMMIT_SYM", "COMPACT_SYM", "COMPLETION_SYM", "COMPRESSED_SYM",
  "CONCURRENT", "CONDITION_SYM", "CONNECTION_SYM", "CONSISTENT_SYM",
  "CONSTRAINT", "CONSTRAINT_CATALOG_SYM", "CONSTRAINT_NAME_SYM",
  "CONSTRAINT_SCHEMA_SYM", "CONTAINS_SYM", "CONTEXT_SYM", "CONTINUE_SYM",
  "CONTRIBUTORS_SYM", "CONVERT_SYM", "COUNT_SYM", "CPU_SYM", "CREATE",
  "CROSS", "CUBE_SYM", "CURDATE", "CURRENT_SYM", "CURRENT_USER",
  "CURSOR_SYM", "CURSOR_NAME_SYM", "CURTIME", "DATABASE", "DATABASES",
  "DATAFILE_SYM", "DATA_SYM", "DATETIME", "DATE_ADD_INTERVAL",
  "DATE_SUB_INTERVAL", "DATE_SYM", "DAY_HOUR_SYM", "DAY_MICROSECOND_SYM",
  "DAY_MINUTE_SYM", "DAY_SECOND_SYM", "DAY_SYM", "DEALLOCATE_SYM",
  "DECIMAL_NUM", "DECIMAL_SYM", "DECLARE_SYM", "DEFAULT",
  "DEFAULT_AUTH_SYM", "DEFINER_SYM", "DELAYED_SYM", "DELAY_KEY_WRITE_SYM",
  "DELETE_SYM", "DESC", "DESCRIBE", "DES_KEY_FILE", "DETERMINISTIC_SYM",
  "DIAGNOSTICS_SYM", "DIRECTORY_SYM", "DISABLE_SYM", "DISCARD", "DISK_SYM",
  "DISTINCT", "DIV_SYM", "DOUBLE_SYM", "DO_SYM", "DROP", "DUAL_SYM",
  "DUMPFILE", "DUPLICATE_SYM", "DYNAMIC_SYM", "EACH_SYM", "ELSE",
  "ELSEIF_SYM", "ENABLE_SYM", "ENCLOSED", "END", "ENDS_SYM",
  "END_OF_INPUT", "ENGINES_SYM", "ENGINE_SYM", "ENUM", "EQ", "EQUAL_SYM",
  "ERROR_SYM", "ERRORS", "ESCAPED", "ESCAPE_SYM", "EVENTS_SYM",
  "EVENT_SYM", "EVERY_SYM", "EXCHANGE_SYM", "EXECUTE_SYM", "EXISTS",
  "EXIT_SYM", "EXPANSION_SYM", "EXTENDED_SYM", "EXTENT_SIZE_SYM",
  "EXTRACT_SYM", "FALSE_SYM", "FAST_SYM", "FAULTS_SYM", "FETCH_SYM",
  "FILE_SYM", "FIRST_SYM", "FIXED_SYM", "FLOAT_NUM", "FLOAT_SYM",
  "FLUSH_SYM", "FORCE_SYM", "FOREIGN", "FOR_SYM", "FORMAT_SYM",
  "FOUND_SYM", "FROM", "FULL", "FULLTEXT_SYM", "FUNCTION_SYM", "GE",
  "GENERAL", "GEOMETRYCOLLECTION", "GEOMETRY_SYM", "GET_FORMAT", "GET_SYM",
  "GLOBAL_SYM", "GRANT", "GRANTS", "GROUP_SYM", "GROUP_CONCAT_SYM",
  "GT_SYM", "HANDLER_SYM", "HASH_SYM", "HAVING", "HELP_SYM", "HEX_NUM",
  "HIGH_PRIORITY", "HOST_SYM", "HOSTS_SYM", "HOUR_MICROSECOND_SYM",
  "HOUR_MINUTE_SYM", "HOUR_SECOND_SYM", "HOUR_SYM", "IDENT",
  "IDENTIFIED_SYM", "IDENT_QUOTED", "IF", "IGNORE_SYM",
  "IGNORE_SERVER_IDS_SYM", "IMPORT", "INDEXES", "INDEX_SYM", "INFILE",
  "INITIAL_SIZE_SYM", "INNER_SYM", "INOUT_SYM", "INSENSITIVE_SYM",
  "INSERT", "INSERT_METHOD", "INSTALL_SYM", "INTERVAL_SYM", "INTO",
  "INT_SYM", "INVOKER_SYM", "IN_SYM", "IO_AFTER_GTIDS", "IO_BEFORE_GTIDS",
  "IO_SYM", "IPC_SYM", "IS", "ISOLATION", "ISSUER_SYM", "ITERATE_SYM",
  "JOIN_SYM", "KEYS", "KEY_BLOCK_SIZE", "KEY_SYM", "KILL_SYM",
  "LANGUAGE_SYM", "LAST_SYM", "LE", "LEADING", "LEAVES", "LEAVE_SYM",
  "LEFT", "LESS_SYM", "LEVEL_SYM", "LEX_HOSTNAME", "LIKE", "LIMIT",
  "LINEAR_SYM", "LINES", "LINESTRING", "LIST_SYM", "LOAD", "LOCAL_SYM",
  "LOCATOR_SYM", "LOCKS_SYM", "LOCK_SYM", "LOGFILE_SYM", "LOGS_SYM",
  "LONGBLOB", "LONGTEXT", "LONG_NUM", "LONG_SYM", "LOOP_SYM",
  "LOW_PRIORITY", "LT", "MASTER_AUTO_POSITION_SYM", "MASTER_BIND_SYM",
  "MASTER_CONNECT_RETRY_SYM", "MASTER_DELAY_SYM", "MASTER_HOST_SYM",
  "MASTER_LOG_FILE_SYM", "MASTER_LOG_POS_SYM", "MASTER_PASSWORD_SYM",
  "MASTER_PORT_SYM", "MASTER_RETRY_COUNT_SYM", "MASTER_SERVER_ID_SYM",
  "MASTER_SSL_CAPATH_SYM", "MASTER_SSL_CA_SYM", "MASTER_SSL_CERT_SYM",
  "MASTER_SSL_CIPHER_SYM", "MASTER_SSL_CRL_SYM", "MASTER_SSL_CRLPATH_SYM",
  "MASTER_SSL_KEY_SYM", "MASTER_SSL_SYM",
  "MASTER_SSL_VERIFY_SERVER_CERT_SYM", "MASTER_SYM", "MASTER_USER_SYM",
  "MASTER_HEARTBEAT_PERIOD_SYM", "MATCH", "MAX_CONNECTIONS_PER_HOUR",
  "MAX_QUERIES_PER_HOUR", "MAX_ROWS", "MAX_SIZE_SYM", "MAX_SYM",
  "MAX_UPDATES_PER_HOUR", "MAX_USER_CONNECTIONS_SYM", "MAX_VALUE_SYM",
  "MEDIUMBLOB", "MEDIUMINT", "MEDIUMTEXT", "MEDIUM_SYM", "MEMORY_SYM",
  "MERGE_SYM", "MESSAGE_TEXT_SYM", "MICROSECOND_SYM", "MIGRATE_SYM",
  "MINUTE_MICROSECOND_SYM", "MINUTE_SECOND_SYM", "MINUTE_SYM", "MIN_ROWS",
  "MIN_SYM", "MODE_SYM", "MODIFIES_SYM", "MODIFY_SYM", "MOD_SYM",
  "MONTH_SYM", "MULTILINESTRING", "MULTIPOINT", "MULTIPOLYGON",
  "MUTEX_SYM", "MYSQL_ERRNO_SYM", "NAMES_SYM", "NAME_SYM", "NATIONAL_SYM",
  "NATURAL", "NCHAR_STRING", "NCHAR_SYM", "NDBCLUSTER_SYM", "NE", "NEG",
  "NEW_SYM", "NEXT_SYM", "NODEGROUP_SYM", "NONE_SYM", "NOT2_SYM",
  "NOT_SYM", "NOW_SYM", "NO_SYM", "NO_WAIT_SYM", "NO_WRITE_TO_BINLOG",
  "NULL_SYM", "NUM", "NUMBER_SYM", "NUMERIC_SYM", "NVARCHAR_SYM",
  "OFFSET_SYM", "OLD_PASSWORD", "ON", "ONE_SYM", "ONLY_SYM", "OPEN_SYM",
  "OPTIMIZE", "OPTIONS_SYM", "OPTION", "OPTIONALLY", "OR2_SYM",
  "ORDER_SYM", "OR_OR_SYM", "OR_SYM", "OUTER", "OUTFILE", "OUT_SYM",
  "OWNER_SYM", "PACK_KEYS_SYM", "PAGE_SYM", "PARAM_MARKER", "PARSER_SYM",
  "PARTIAL", "PARTITION_SYM", "PARTITIONS_SYM", "PARTITIONING_SYM",
  "PASSWORD", "PHASE_SYM", "PLUGIN_DIR_SYM", "PLUGIN_SYM", "PLUGINS_SYM",
  "POINT_SYM", "POLYGON", "PORT_SYM", "POSITION_SYM", "PRECISION",
  "PREPARE_SYM", "PRESERVE_SYM", "PREV_SYM", "PRIMARY_SYM", "PRIVILEGES",
  "PROCEDURE_SYM", "PROCESS", "PROCESSLIST_SYM", "PROFILE_SYM",
  "PROFILES_SYM", "PROXY_SYM", "PURGE", "QUARTER_SYM", "QUERY_SYM",
  "QUICK", "RANGE_SYM", "READS_SYM", "READ_ONLY_SYM", "READ_SYM",
  "READ_WRITE_SYM", "REAL", "REBUILD_SYM", "RECOVER_SYM", "REDOFILE_SYM",
  "REDO_BUFFER_SIZE_SYM", "REDUNDANT_SYM", "REFERENCES", "REGEXP", "RELAY",
  "RELAYLOG_SYM", "RELAY_LOG_FILE_SYM", "RELAY_LOG_POS_SYM",
  "RELAY_THREAD", "RELEASE_SYM", "RELOAD", "REMOVE_SYM", "RENAME",
  "REORGANIZE_SYM", "REPAIR", "REPEATABLE_SYM", "REPEAT_SYM", "REPLACE",
  "REPLICATION", "REQUIRE_SYM", "RESET_SYM", "RESIGNAL_SYM", "RESOURCES",
  "RESTORE_SYM", "RESTRICT", "RESUME_SYM", "RETURNED_SQLSTATE_SYM",
  "RETURNS_SYM", "RETURN_SYM", "REVERSE_SYM", "REVOKE", "RIGHT",
  "ROLLBACK_SYM", "ROLLUP_SYM", "ROUTINE_SYM", "ROWS_SYM",
  "ROW_FORMAT_SYM", "ROW_SYM", "ROW_COUNT_SYM", "RTREE_SYM",
  "SAVEPOINT_SYM", "SCHEDULE_SYM", "SCHEMA_NAME_SYM",
  "SECOND_MICROSECOND_SYM", "SECOND_SYM", "SECURITY_SYM", "SELECT_SYM",
  "SENSITIVE_SYM", "SEPARATOR_SYM", "SERIALIZABLE_SYM", "SERIAL_SYM",
  "SESSION_SYM", "SERVER_SYM", "SERVER_OPTIONS", "SET", "SET_VAR",
  "SHARE_SYM", "SHIFT_LEFT", "SHIFT_RIGHT", "SHOW", "SHUTDOWN",
  "SIGNAL_SYM", "SIGNED_SYM", "SIMPLE_SYM", "SLAVE", "SLOW", "SMALLINT",
  "SNAPSHOT_SYM", "SOCKET_SYM", "SONAME_SYM", "SOUNDS_SYM", "SOURCE_SYM",
  "SPATIAL_SYM", "SPECIFIC_SYM", "SQLEXCEPTION_SYM", "SQLSTATE_SYM",
  "SQLWARNING_SYM", "SQL_AFTER_GTIDS", "SQL_BEFORE_GTIDS",
  "SQL_BIG_RESULT", "SQL_BUFFER_RESULT", "SQL_CACHE_SYM",
  "SQL_CALC_FOUND_ROWS", "SQL_NO_CACHE_SYM", "SQL_SMALL_RESULT", "SQL_SYM",
  "SQL_THREAD", "SSL_SYM", "STARTING", "STARTS_SYM", "START_SYM",
  "STATUS_SYM", "STDDEV_SAMP_SYM", "STD_SYM", "STOP_SYM", "STORAGE_SYM",
  "STRAIGHT_JOIN", "STRING_SYM", "SUBCLASS_ORIGIN_SYM", "SUBDATE_SYM",
  "SUBJECT_SYM", "SUBPARTITIONS_SYM", "SUBPARTITION_SYM", "SUBSTRING",
  "SUM_SYM", "SUPER_SYM", "SUSPEND_SYM", "SWAPS_SYM", "SWITCHES_SYM",
  "SYSDATE", "TABLES", "TABLESPACE", "TABLE_REF_PRIORITY", "TABLE_SYM",
  "TABLE_CHECKSUM_SYM", "TABLE_NAME_SYM", "TEMPORARY", "TEMPTABLE_SYM",
  "TERMINATED", "TEXT_STRING", "TEXT_SYM", "THAN_SYM", "THEN_SYM",
  "TIMESTAMP", "TIMESTAMP_ADD", "TIMESTAMP_DIFF", "TIME_SYM", "TINYBLOB",
  "TINYINT", "TINYTEXT", "TO_SYM", "TRAILING", "TRANSACTION_SYM",
  "TRIGGERS_SYM", "TRIGGER_SYM", "TRIM", "TRUE_SYM", "TRUNCATE_SYM",
  "TYPES_SYM", "TYPE_SYM", "UDF_RETURNS_SYM", "ULONGLONG_NUM",
  "UNCOMMITTED_SYM", "UNDEFINED_SYM", "UNDERSCORE_CHARSET", "UNDOFILE_SYM",
  "UNDO_BUFFER_SIZE_SYM", "UNDO_SYM", "UNICODE_SYM", "UNINSTALL_SYM",
  "UNION_SYM", "UNIQUE_SYM", "UNKNOWN_SYM", "UNLOCK_SYM", "UNSIGNED",
  "UNTIL_SYM", "UPDATE_SYM", "UPGRADE_SYM", "USAGE", "USER", "USE_FRM",
  "USE_SYM", "USING", "UTC_DATE_SYM", "UTC_TIMESTAMP_SYM", "UTC_TIME_SYM",
  "VALUES", "VALUE_SYM", "VARBINARY", "VARCHAR", "VARIABLES",
  "VARIANCE_SYM", "VARYING", "VAR_SAMP_SYM", "VIEW_SYM", "WAIT_SYM",
  "WARNINGS", "WEEK_SYM", "WEIGHT_STRING_SYM", "WHEN_SYM", "WHERE",
  "WHILE_SYM", "WITH", "WITH_CUBE_SYM", "WITH_ROLLUP_SYM", "WORK_SYM",
  "WRAPPER_SYM", "WRITE_SYM", "X509_SYM", "XA_SYM", "XML_SYM", "XOR",
  "YEAR_MONTH_SYM", "YEAR_SYM", "ZEROFILL", "'|'", "'&'", "'-'", "'+'",
  "'*'", "'/'", "'%'", "'^'", "'~'", "'('", "')'", "','", "'!'", "'{'",
  "'}'", "';'", "'@'", "'.'", "':'", "$accept", "query", "@1",
  "opt_end_of_input", "verb_clause", "statement", "deallocate",
  "deallocate_or_drop", "prepare", "prepare_src", "execute", "@2",
  "execute_using", "execute_var_list", "execute_var_ident", "help", "@3",
  "change", "@4", "master_defs", "master_def", "ignore_server_id_list",
  "ignore_server_id", "master_file_def", "create", "@5", "@6", "@7", "@8",
  "@9", "@10", "server_def", "server_options_list", "server_option",
  "event_tail", "@11", "ev_schedule_time", "@12", "opt_ev_status",
  "ev_starts", "ev_ends", "opt_ev_on_completion", "ev_on_completion",
  "opt_ev_comment", "ev_sql_stmt", "@13", "ev_sql_stmt_inner",
  "clear_privileges", "sp_name", "sp_a_chistics", "sp_c_chistics",
  "sp_chistic", "sp_c_chistic", "sp_suid", "call", "@14",
  "opt_sp_cparam_list", "opt_sp_cparams", "sp_cparams", "sp_fdparam_list",
  "sp_fdparams", "sp_init_param", "sp_fdparam", "sp_pdparam_list",
  "sp_pdparams", "sp_pdparam", "sp_opt_inout", "sp_proc_stmts",
  "sp_proc_stmts1", "sp_decls", "sp_decl", "@15", "@16", "sp_cursor_stmt",
  "@17", "sp_handler_type", "sp_hcond_list", "sp_hcond_element", "sp_cond",
  "sqlstate", "opt_value", "sp_hcond", "signal_stmt", "signal_value",
  "opt_signal_value", "opt_set_signal_information",
  "signal_information_item_list", "signal_allowed_expr",
  "signal_condition_information_item_name", "resignal_stmt",
  "get_diagnostics", "which_area", "diagnostics_information",
  "statement_information", "statement_information_item",
  "simple_target_specification", "statement_information_item_name",
  "condition_number", "condition_information",
  "condition_information_item", "condition_information_item_name",
  "sp_decl_idents", "sp_opt_default", "sp_proc_stmt", "sp_proc_stmt_if",
  "@18", "sp_proc_stmt_statement", "@19", "sp_proc_stmt_return", "@20",
  "sp_proc_stmt_unlabeled", "@21", "sp_proc_stmt_leave",
  "sp_proc_stmt_iterate", "sp_proc_stmt_open", "sp_proc_stmt_fetch", "@22",
  "sp_proc_stmt_close", "sp_opt_fetch_noise", "sp_fetch_list", "sp_if",
  "@23", "@24", "@25", "sp_elseifs", "case_stmt_specification",
  "simple_case_stmt", "@26", "@27", "searched_case_stmt", "@28",
  "simple_when_clause_list", "searched_when_clause_list",
  "simple_when_clause", "@29", "@30", "searched_when_clause", "@31", "@32",
  "else_clause_opt", "sp_labeled_control", "@33", "sp_opt_label",
  "sp_labeled_block", "@34", "sp_unlabeled_block", "@35",
  "sp_block_content", "@36", "sp_unlabeled_control", "@37", "@38", "@39",
  "trg_action_time", "trg_event", "change_tablespace_access",
  "change_tablespace_info", "tablespace_info", "opt_logfile_group_name",
  "alter_tablespace_info", "logfile_group_info",
  "alter_logfile_group_info", "add_log_file", "change_ts_option_list",
  "@40", "change_ts_options", "change_ts_option", "tablespace_option_list",
  "tablespace_options", "tablespace_option",
  "alter_tablespace_option_list", "alter_tablespace_options",
  "alter_tablespace_option", "logfile_group_option_list",
  "logfile_group_options", "logfile_group_option",
  "alter_logfile_group_option_list", "alter_logfile_group_options",
  "alter_logfile_group_option", "ts_datafile", "lg_undofile",
  "lg_redofile", "tablespace_name", "logfile_group_name", "ts_access_mode",
  "opt_ts_initial_size", "opt_ts_autoextend_size", "opt_ts_max_size",
  "opt_ts_extent_size", "opt_ts_undo_buffer_size",
  "opt_ts_redo_buffer_size", "opt_ts_nodegroup", "opt_ts_comment",
  "opt_ts_engine", "ts_wait", "size_number", "create2", "create2a", "@41",
  "create3", "@42", "@43", "opt_create_partitioning", "opt_partitioning",
  "partitioning", "@44", "have_partitioning", "partition_entry", "@45",
  "partition", "part_type_def", "@46", "opt_linear", "part_field_list",
  "part_field_item_list", "part_field_item", "part_column_list",
  "part_func", "sub_part_func", "opt_num_parts", "opt_sub_part", "@47",
  "@48", "sub_part_field_list", "sub_part_field_item", "part_func_expr",
  "opt_num_subparts", "part_defs", "part_def_list", "part_definition",
  "@49", "part_name", "opt_part_values", "@50", "@51", "part_func_max",
  "part_values_in", "part_value_list", "part_value_item", "@52", "@53",
  "part_value_item_list", "part_value_expr_item", "opt_sub_partition",
  "sub_part_list", "sub_part_definition", "@54", "sub_name",
  "opt_part_options", "opt_part_option_list", "opt_part_option",
  "create_select", "@55", "@56", "opt_as", "opt_create_database_options",
  "create_database_options", "create_database_option", "opt_table_options",
  "table_options", "table_option", "opt_if_not_exists",
  "opt_create_table_options", "create_table_options_space_separated",
  "create_table_options", "create_table_option", "@57", "default_charset",
  "default_collation", "storage_engines", "known_storage_engines",
  "row_types", "merge_insert_types", "opt_select_from", "udf_type",
  "create_field_list", "field_list", "field_list_item", "column_def",
  "key_def", "opt_check_constraint", "check_constraint", "opt_constraint",
  "constraint", "field_spec", "@58", "type", "@59", "@60", "spatial_type",
  "char", "nchar", "varchar", "nvarchar", "int_type", "real_type",
  "float_options", "precision", "type_datetime_precision",
  "func_datetime_precision", "field_options", "field_opt_list",
  "field_option", "field_length", "opt_field_length", "opt_precision",
  "opt_attribute", "opt_attribute_list", "attribute",
  "type_with_opt_collate", "now", "now_or_signed_literal", "charset",
  "charset_name", "charset_name_or_default", "opt_load_data_charset",
  "old_or_new_charset_name", "old_or_new_charset_name_or_default",
  "collation_name", "opt_collate", "collation_name_or_default",
  "opt_default", "ascii", "unicode", "opt_binary", "opt_bin_mod",
  "ws_nweights", "@61", "ws_level_flag_desc", "ws_level_flag_reverse",
  "ws_level_flags", "ws_level_number", "ws_level_list_item",
  "ws_level_list", "ws_level_range", "ws_level_list_or_range",
  "opt_ws_levels", "opt_primary", "references", "opt_ref_list", "ref_list",
  "opt_match_clause", "opt_on_update_delete", "delete_option",
  "normal_key_type", "constraint_key_type", "key_or_index",
  "opt_key_or_index", "keys_or_index", "opt_unique", "fulltext", "spatial",
  "init_key_options", "key_alg", "normal_key_options",
  "fulltext_key_options", "spatial_key_options", "normal_key_opts",
  "spatial_key_opts", "fulltext_key_opts", "key_using_alg", "all_key_opt",
  "normal_key_opt", "spatial_key_opt", "fulltext_key_opt",
  "btree_or_rtree", "key_list", "key_part", "opt_ident", "opt_component",
  "string_list", "alter", "@62", "@63", "@64", "@65", "@66", "@67", "@68",
  "ev_alter_on_schedule_completion", "opt_ev_rename_to", "opt_ev_sql_stmt",
  "ident_or_empty", "alter_commands", "@69", "@70", "@71",
  "remove_partitioning", "all_or_alt_part_name_list", "add_partition_rule",
  "@72", "add_part_extra", "reorg_partition_rule", "@73",
  "reorg_parts_rule", "@74", "alt_part_name_list", "alt_part_name_item",
  "alter_list", "add_column", "alter_list_item", "@75", "@76", "@77",
  "opt_column", "opt_ignore", "opt_restrict", "opt_place", "opt_to",
  "slave", "@78", "@79", "start", "opt_start_transaction_option_list",
  "start_transaction_option_list", "start_transaction_option",
  "slave_connection_opts", "slave_user_name_opt", "slave_user_pass_opt",
  "slave_plugin_auth_opt", "slave_plugin_dir_opt", "slave_thread_opts",
  "@80", "slave_thread_opt_list", "slave_thread_opt", "slave_until",
  "slave_until_opts", "checksum", "@81", "opt_checksum_type", "repair",
  "@82", "opt_mi_repair_type", "mi_repair_types", "mi_repair_type",
  "analyze", "@83", "binlog_base64_event", "check", "@84",
  "opt_mi_check_type", "mi_check_types", "mi_check_type", "optimize",
  "@85", "opt_no_write_to_binlog", "rename", "@86", "rename_list",
  "table_to_table_list", "table_to_table", "keycache", "@87",
  "keycache_list_or_parts", "keycache_list", "assign_to_keycache",
  "assign_to_keycache_parts", "key_cache_name", "preload", "@88",
  "preload_list_or_parts", "preload_list", "preload_keys",
  "preload_keys_parts", "adm_partition", "@89", "cache_keys_spec", "@90",
  "cache_key_list_or_empty", "opt_ignore_leaves", "select", "select_init",
  "select_paren", "select_paren_derived", "select_init2", "@91",
  "select_part2", "@92", "@93", "select_into", "select_from",
  "select_options", "select_option_list", "select_option",
  "select_lock_type", "select_item_list", "select_item", "remember_name",
  "remember_end", "select_alias", "optional_braces", "expr", "bool_pri",
  "predicate", "bit_expr", "or", "and", "not", "not2", "comp_op",
  "all_or_any", "simple_expr", "function_call_keyword",
  "function_call_nonkeyword", "function_call_conflict",
  "geometry_function", "function_call_generic", "@94", "fulltext_options",
  "opt_natural_language_mode", "opt_query_expansion", "opt_udf_expr_list",
  "udf_expr_list", "udf_expr", "sum_expr", "@95", "@96", "@97", "variable",
  "@98", "variable_aux", "opt_distinct", "opt_gconcat_separator",
  "opt_gorder_clause", "in_sum_expr", "@99", "cast_type", "opt_expr_list",
  "expr_list", "ident_list_arg", "ident_list", "opt_expr", "opt_else",
  "when_list", "table_ref", "join_table_list", "esc_table_ref",
  "derived_table_list", "join_table", "@100", "@101", "@102", "@103",
  "@104", "@105", "@106", "normal_join", "opt_use_partition",
  "use_partition", "table_factor", "@107", "select_derived_union", "@108",
  "@109", "select_init2_derived", "select_part2_derived", "@110", "@111",
  "select_derived", "@112", "select_derived2", "@113", "@114",
  "get_select_lex", "select_derived_init", "opt_outer",
  "index_hint_clause", "index_hint_type", "index_hint_definition", "@115",
  "@116", "index_hints_list", "opt_index_hints_list", "@117",
  "opt_key_definition", "@118", "opt_key_usage_list", "key_usage_element",
  "key_usage_list", "using_list", "interval", "interval_time_stamp",
  "date_time_type", "table_alias", "opt_table_alias", "opt_all",
  "where_clause", "@119", "having_clause", "@120", "opt_escape",
  "group_clause", "group_list", "olap_opt", "alter_order_clause",
  "alter_order_list", "alter_order_item", "opt_order_clause",
  "order_clause", "@121", "order_list", "order_dir",
  "opt_limit_clause_init", "opt_limit_clause", "limit_clause",
  "limit_options", "limit_option", "delete_limit_clause", "ulong_num",
  "real_ulong_num", "ulonglong_num", "real_ulonglong_num", "dec_num_error",
  "dec_num", "procedure_clause", "@122", "procedure_list",
  "procedure_list2", "procedure_item", "select_var_list_init", "@123",
  "select_var_list", "select_var_ident", "into", "@124",
  "into_destination", "@125", "@126", "do", "@127", "drop", "@128", "@129",
  "@130", "table_list", "table_name", "table_name_with_opt_use_partition",
  "table_alias_ref_list", "table_alias_ref", "if_exists", "opt_temporary",
  "drop_ts_options_list", "drop_ts_options", "drop_ts_option", "insert",
  "@131", "@132", "replace", "@133", "@134", "insert_lock_option",
  "replace_lock_option", "insert2", "insert_table", "insert_field_spec",
  "@135", "fields", "insert_values", "@136", "@137", "values_list",
  "ident_eq_list", "ident_eq_value", "equal", "opt_equal", "no_braces",
  "@138", "opt_values", "values", "expr_or_default", "opt_insert_update",
  "@139", "update", "@140", "@141", "update_list", "update_elem",
  "insert_update_list", "insert_update_elem", "opt_low_priority", "delete",
  "@142", "single_multi", "@143", "@144", "@145", "table_wild_list",
  "table_wild_one", "opt_wild", "opt_delete_options", "opt_delete_option",
  "truncate", "@146", "opt_table_sym", "opt_profile_defs", "profile_defs",
  "profile_def", "opt_profile_args", "show", "@147", "show_param", "@148",
  "@149", "show_engine_param", "master_or_binary", "opt_storage", "opt_db",
  "opt_full", "from_or_in", "binlog_in", "binlog_from", "wild_and_where",
  "describe", "@150", "@151", "explanable_command", "describe_command",
  "opt_extended_describe", "opt_describe_column", "flush", "@152",
  "flush_options", "@153", "@154", "opt_with_read_lock",
  "flush_options_list", "flush_option", "opt_table_list", "reset", "@155",
  "reset_options", "reset_option", "@156", "slave_reset_options", "purge",
  "@157", "purge_options", "purge_option", "kill", "kill_option", "use",
  "load", "@158", "@159", "@160", "@161", "data_or_xml", "opt_local",
  "load_data_lock", "opt_duplicate", "opt_field_term", "field_term_list",
  "field_term", "opt_line_term", "line_term_list", "line_term",
  "opt_xml_rows_identified_by", "opt_ignore_lines", "lines_or_rows",
  "opt_field_or_var_spec", "fields_or_vars", "field_or_var",
  "opt_load_data_set_spec", "load_data_set_list", "load_data_set_elem",
  "text_literal", "text_string", "param_marker", "signed_literal",
  "literal", "NUM_literal", "temporal_literal", "insert_ident",
  "table_wild", "order_ident", "simple_ident", "simple_ident_nospvar",
  "simple_ident_q", "field_ident", "table_ident", "table_ident_opt_wild",
  "table_ident_nodb", "IDENT_sys", "TEXT_STRING_sys_nonewline",
  "TEXT_STRING_sys", "TEXT_STRING_literal", "TEXT_STRING_filesystem",
  "ident", "label_ident", "ident_or_text", "user", "keyword", "keyword_sp",
  "set", "@162", "start_option_value_list", "@163", "@164", "@165",
  "start_option_value_list_following_option_type", "@166",
  "option_value_list_continued", "option_value_list", "@167", "@168",
  "option_value", "@169", "option_type", "opt_var_type",
  "opt_var_ident_type", "option_value_following_option_type",
  "option_value_no_option_type", "internal_variable_name",
  "transaction_characteristics", "transaction_access_mode",
  "isolation_level", "transaction_access_mode_types", "isolation_types",
  "text_or_password", "set_expr_or_default", "lock", "@170",
  "table_or_tables", "table_lock_list", "table_lock", "lock_option",
  "unlock", "@171", "handler", "@172", "handler_read_or_scan",
  "handler_scan_function", "handler_rkey_function", "@173",
  "handler_rkey_mode", "revoke", "revoke_command", "grant",
  "grant_command", "opt_table", "grant_privileges", "opt_privileges",
  "object_privilege_list", "object_privilege", "@174", "@175", "@176",
  "@177", "opt_and", "require_list", "require_list_element", "grant_ident",
  "user_list", "grant_list", "grant_user", "opt_column_list",
  "column_list", "column_list_id", "require_clause", "grant_options",
  "opt_grant_option", "grant_option_list", "grant_option", "begin", "@178",
  "opt_work", "opt_chain", "opt_release", "opt_savepoint", "commit",
  "rollback", "savepoint", "release", "union_clause", "union_list", "@179",
  "union_opt", "opt_union_order_or_limit", "union_order_or_limit", "@180",
  "order_or_limit", "union_option", "query_specification",
  "query_expression_body", "@181", "subselect", "subselect_start",
  "subselect_end", "opt_query_expression_options",
  "query_expression_option_list", "query_expression_option",
  "view_or_trigger_or_sp_or_event", "definer_tail", "no_definer_tail",
  "definer_opt", "no_definer", "definer", "view_replace_or_algorithm",
  "view_replace", "view_algorithm", "view_suid", "view_tail", "@182",
  "view_list_opt", "view_list", "view_select", "@183", "view_select_aux",
  "view_check_option", "trigger_tail", "@184", "@185", "@186", "udf_tail",
  "sf_tail", "@187", "@188", "@189", "@190", "@191", "sp_tail", "@192",
  "@193", "@194", "@195", "xa", "xid", "begin_or_start",
  "opt_join_or_resume", "opt_one_phase", "opt_suspend", "@196",
  "opt_migrate", "install", "uninstall", 0
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[YYLEX-NUM] -- Internal token number corresponding to
   token YYLEX-NUM.  */
static const yytype_uint16 yytoknum[] =
{
       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,   794,
     795,   796,   797,   798,   799,   800,   801,   802,   803,   804,
     805,   806,   807,   808,   809,   810,   811,   812,   813,   814,
     815,   816,   817,   818,   819,   820,   821,   822,   823,   824,
     825,   826,   827,   828,   829,   830,   831,   832,   833,   834,
     835,   836,   837,   838,   839,   840,   841,   842,   843,   844,
     845,   846,   847,   848,   849,   850,   851,   852,   853,   854,
     855,   856,   857,   858,   859,   860,   861,   862,   863,   864,
     865,   866,   867,   868,   869,   124,    38,    45,    43,    42,
      47,    37,    94,   126,    40,    41,    44,    33,   123,   125,
      59,    64,    46,    58
};
# endif

/* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_uint16 yyr1[] =
{
       0,   634,   635,   636,   635,   635,   637,   637,   638,   638,
     639,   639,   639,   639,   639,   639,   639,   639,   639,   639,
     639,   639,   639,   639,   639,   639,   639,   639,   639,   639,
     639,   639,   639,   639,   639,   639,   639,   639,   639,   639,
     639,   639,   639,   639,   639,   639,   639,   639,   639,   639,
     639,   639,   639,   639,   639,   639,   639,   639,   639,   639,
     639,   639,   640,   641,   641,   642,   643,   643,   645,   644,
     646,   646,   647,   647,   648,   650,   649,   652,   651,   653,
     653,   654,   654,   654,   654,   654,   654,   654,   654,   654,
     654,   654,   654,   654,   654,   654,   654,   654,   654,   654,
     654,   654,   655,   655,   655,   656,   657,   657,   657,   657,
     659,   658,   660,   658,   661,   658,   662,   658,   663,   658,
     664,   658,   658,   658,   658,   658,   665,   666,   666,   667,
     667,   667,   667,   667,   667,   667,   669,   668,   671,   670,
     670,   672,   672,   672,   672,   673,   673,   674,   674,   675,
     675,   676,   676,   677,   677,   679,   678,   680,   680,   680,
     680,   680,   680,   680,   680,   680,   680,   680,   680,   680,
     681,   682,   682,   683,   683,   684,   684,   685,   685,   685,
     685,   685,   685,   685,   686,   686,   686,   687,   687,   689,
     688,   690,   690,   691,   691,   692,   692,   693,   693,   694,
     694,   695,   696,   697,   697,   698,   698,   699,   700,   700,
     700,   700,   701,   701,   702,   702,   703,   703,   705,   704,
     704,   706,   704,   704,   708,   707,   709,   709,   710,   710,
     711,   712,   712,   713,   714,   714,   715,   715,   715,   715,
     715,   716,   717,   717,   718,   718,   719,   719,   720,   720,
     721,   721,   721,   722,   722,   722,   722,   722,   722,   722,
     722,   722,   722,   722,   722,   723,   724,   725,   725,   726,
     726,   727,   727,   728,   729,   729,   730,   730,   731,   732,
     732,   733,   734,   734,   734,   734,   734,   734,   734,   734,
     734,   734,   734,   734,   734,   735,   735,   736,   736,   737,
     737,   737,   737,   737,   737,   737,   737,   737,   737,   737,
     737,   737,   739,   738,   741,   740,   743,   742,   745,   744,
     746,   747,   748,   750,   749,   751,   752,   752,   752,   753,
     753,   755,   756,   757,   754,   758,   758,   758,   759,   759,
     761,   762,   760,   764,   763,   765,   765,   766,   766,   768,
     769,   767,   771,   772,   770,   773,   773,   775,   774,   776,
     776,   778,   777,   780,   779,   782,   781,   783,   784,   785,
     783,   786,   783,   787,   787,   788,   788,   788,   789,   790,
     791,   792,   792,   793,   793,   794,   795,   796,   796,   798,
     797,   799,   799,   799,   800,   800,   800,   801,   801,   802,
     802,   802,   803,   803,   803,   803,   803,   803,   803,   803,
     804,   804,   805,   805,   805,   806,   806,   806,   806,   806,
     807,   807,   808,   808,   808,   809,   809,   809,   809,   809,
     809,   809,   810,   810,   811,   811,   811,   812,   812,   812,
     813,   814,   815,   816,   817,   818,   818,   818,   819,   820,
     821,   822,   823,   824,   825,   826,   827,   828,   828,   829,
     829,   830,   830,   830,   830,   831,   832,   831,   833,   834,
     833,   835,   833,   836,   837,   837,   839,   838,   840,   842,
     841,   843,   844,   845,   844,   844,   844,   844,   844,   846,
     846,   847,   847,   848,   848,   849,   850,   851,   852,   853,
     853,   854,   855,   854,   856,   854,   857,   857,   858,   859,
     860,   860,   861,   861,   862,   862,   864,   863,   865,   866,
     867,   866,   868,   866,   869,   869,   870,   870,   871,   871,
     873,   874,   872,   875,   875,   876,   876,   877,   877,   878,
     878,   880,   879,   881,   882,   882,   883,   883,   884,   884,
     884,   884,   884,   884,   884,   884,   886,   887,   885,   888,
     888,   889,   889,   890,   890,   891,   891,   892,   892,   893,
     893,   894,   895,   895,   896,   896,   897,   897,   898,   898,
     898,   899,   899,   899,   899,   899,   899,   899,   899,   899,
     899,   899,   899,   899,   900,   899,   899,   899,   899,   899,
     899,   899,   899,   899,   899,   899,   901,   902,   903,   904,
     905,   905,   905,   905,   905,   905,   906,   906,   906,   907,
     907,   908,   908,   908,   908,   909,   910,   910,   911,   911,
     912,   912,   913,   913,   913,   913,   913,   913,   914,   914,
     915,   916,   916,   917,   919,   918,   920,   920,   920,   920,
     920,   920,   920,   920,   920,   920,   920,   920,   920,   920,
     920,   920,   920,   920,   920,   920,   920,   920,   920,   920,
     920,   920,   920,   920,   920,   920,   920,   920,   920,   920,
     920,   921,   920,   922,   920,   920,   920,   923,   923,   923,
     923,   923,   923,   923,   923,   924,   925,   925,   926,   926,
     927,   927,   927,   927,   927,   928,   928,   928,   928,   928,
     929,   929,   929,   930,   930,   930,   931,   932,   932,   933,
     933,   933,   934,   934,   935,   935,   936,   936,   936,   937,
     937,   937,   937,   938,   938,   939,   939,   940,   940,   941,
     941,   942,   942,   942,   942,   942,   942,   942,   942,   942,
     942,   942,   943,   944,   945,   945,   946,   946,   947,   947,
     948,   948,   949,   949,   950,   950,   951,   951,   952,   953,
     953,   954,   954,   955,   955,   956,   956,   956,   957,   957,
     957,   958,   958,   958,   958,   958,   958,   958,   959,   959,
     961,   960,   962,   962,   963,   964,   964,   964,   964,   965,
     966,   967,   967,   968,   969,   969,   970,   970,   971,   971,
     972,   973,   973,   974,   974,   975,   975,   975,   975,   976,
     976,   976,   976,   976,   977,   977,   977,   977,   977,   978,
     979,   979,   980,   980,   981,   981,   982,   982,   982,   983,
     983,   984,   985,   986,   987,   987,   988,   988,   989,   989,
     990,   990,   991,   991,   992,   992,   993,   993,   994,   994,
     995,   995,   996,   996,   997,   998,   998,   999,   999,   999,
    1000,  1000,  1001,  1001,  1002,  1002,  1003,  1003,  1004,  1004,
    1006,  1005,  1007,  1005,  1005,  1008,  1005,  1009,  1005,  1010,
    1005,  1011,  1005,  1012,  1005,  1005,  1005,  1005,  1005,  1005,
    1013,  1013,  1013,  1013,  1014,  1014,  1015,  1015,  1016,  1016,
    1017,  1017,  1017,  1017,  1017,  1017,  1017,  1017,  1017,  1017,
    1018,  1017,  1017,  1019,  1017,  1020,  1017,  1017,  1017,  1017,
    1017,  1021,  1022,  1022,  1024,  1023,  1025,  1025,  1025,  1027,
    1026,  1028,  1029,  1028,  1030,  1030,  1031,  1032,  1032,  1033,
    1034,  1034,  1034,  1035,  1034,  1036,  1037,  1034,  1034,  1034,
    1034,  1034,  1034,  1034,  1034,  1034,  1034,  1034,  1034,  1034,
    1034,  1038,  1038,  1039,  1039,  1040,  1040,  1040,  1041,  1041,
    1041,  1042,  1042,  1042,  1042,  1044,  1045,  1043,  1043,  1046,
    1047,  1047,  1048,  1048,  1049,  1049,  1049,  1050,  1051,  1051,
    1052,  1052,  1053,  1053,  1054,  1054,  1056,  1055,  1057,  1057,
    1058,  1058,  1058,  1059,  1059,  1060,  1060,  1060,  1062,  1061,
    1063,  1063,  1063,  1065,  1064,  1066,  1066,  1067,  1067,  1068,
    1068,  1068,  1070,  1069,  1071,  1073,  1072,  1074,  1074,  1075,
    1075,  1076,  1076,  1076,  1076,  1076,  1076,  1078,  1077,  1079,
    1079,  1079,  1081,  1080,  1080,  1082,  1082,  1083,  1083,  1084,
    1086,  1085,  1087,  1087,  1088,  1088,  1089,  1090,  1091,  1091,
    1093,  1092,  1094,  1094,  1095,  1095,  1096,  1097,  1099,  1098,
    1101,  1100,  1102,  1102,  1103,  1103,  1104,  1105,  1105,  1106,
    1106,  1107,  1107,  1109,  1108,  1111,  1112,  1110,  1113,  1113,
    1113,  1113,  1113,  1114,  1114,  1115,  1115,  1116,  1116,  1117,
    1117,  1117,  1118,  1118,  1118,  1119,  1119,  1119,  1120,  1120,
    1121,  1122,  1123,  1123,  1123,  1123,  1123,  1124,  1124,  1125,
    1125,  1125,  1125,  1125,  1125,  1125,  1125,  1125,  1125,  1125,
    1126,  1126,  1126,  1126,  1126,  1126,  1127,  1127,  1127,  1127,
    1127,  1127,  1127,  1127,  1127,  1127,  1127,  1127,  1127,  1127,
    1128,  1128,  1128,  1128,  1128,  1128,  1128,  1128,  1128,  1128,
    1128,  1128,  1128,  1128,  1128,  1129,  1129,  1130,  1130,  1131,
    1131,  1132,  1132,  1133,  1133,  1133,  1133,  1133,  1133,  1134,
    1134,  1135,  1135,  1135,  1135,  1135,  1135,  1135,  1135,  1135,
    1135,  1135,  1135,  1135,  1135,  1135,  1135,  1135,  1135,  1135,
    1135,  1135,  1135,  1135,  1135,  1135,  1135,  1135,  1135,  1135,
    1135,  1136,  1136,  1136,  1136,  1136,  1136,  1136,  1136,  1136,
    1136,  1136,  1136,  1136,  1136,  1136,  1136,  1136,  1136,  1136,
    1136,  1136,  1136,  1136,  1136,  1136,  1136,  1136,  1137,  1137,
    1137,  1137,  1137,  1137,  1137,  1137,  1137,  1137,  1137,  1137,
    1137,  1137,  1137,  1137,  1137,  1137,  1137,  1137,  1137,  1137,
    1138,  1138,  1138,  1138,  1138,  1138,  1138,  1138,  1138,  1138,
    1138,  1138,  1138,  1138,  1138,  1138,  1138,  1138,  1138,  1138,
    1138,  1138,  1138,  1138,  1138,  1139,  1139,  1139,  1139,  1139,
    1139,  1139,  1139,  1141,  1140,  1140,  1142,  1142,  1143,  1143,
    1144,  1144,  1145,  1145,  1146,  1146,  1147,  1148,  1148,  1148,
    1148,  1148,  1148,  1148,  1149,  1150,  1148,  1148,  1148,  1148,
    1148,  1148,  1148,  1148,  1148,  1148,  1148,  1151,  1148,  1153,
    1152,  1154,  1154,  1154,  1155,  1155,  1156,  1156,  1157,  1157,
    1159,  1158,  1160,  1160,  1160,  1160,  1160,  1160,  1160,  1160,
    1160,  1160,  1160,  1161,  1161,  1162,  1162,  1163,  1163,  1164,
    1164,  1165,  1165,  1166,  1166,  1167,  1167,  1168,  1168,  1169,
    1170,  1170,  1171,  1171,  1172,  1172,  1173,  1172,  1174,  1172,
    1175,  1172,  1172,  1176,  1172,  1177,  1172,  1172,  1178,  1172,
    1179,  1172,  1172,  1180,  1180,  1180,  1181,  1181,  1182,  1184,
    1183,  1183,  1183,  1185,  1186,  1187,  1185,  1188,  1190,  1191,
    1189,  1193,  1192,  1195,  1196,  1194,  1197,  1198,  1199,  1199,
    1200,  1200,  1200,  1200,  1201,  1201,  1203,  1202,  1204,  1202,
    1205,  1205,  1206,  1207,  1206,  1209,  1208,  1210,  1210,  1211,
    1211,  1212,  1212,  1213,  1213,  1214,  1214,  1214,  1214,  1214,
    1214,  1214,  1214,  1214,  1214,  1214,  1214,  1215,  1215,  1215,
    1215,  1215,  1215,  1215,  1215,  1215,  1216,  1216,  1216,  1216,
    1217,  1217,  1217,  1218,  1218,  1219,  1219,  1220,  1221,  1220,
    1222,  1223,  1222,  1224,  1224,  1225,  1225,  1226,  1226,  1227,
    1227,  1227,  1228,  1229,  1229,  1230,  1231,  1231,  1233,  1232,
    1234,  1234,  1235,  1235,  1235,  1236,  1236,  1237,  1237,  1238,
    1239,  1239,  1239,  1240,  1240,  1240,  1240,  1240,  1241,  1241,
    1242,  1242,  1242,  1242,  1242,  1242,  1243,  1243,  1243,  1243,
    1243,  1244,  1244,  1244,  1244,  1244,  1245,  1245,  1245,  1245,
    1246,  1247,  1247,  1248,  1249,  1248,  1250,  1250,  1251,  1251,
    1252,  1254,  1253,  1255,  1255,  1256,  1256,  1258,  1257,  1260,
    1261,  1259,  1259,  1259,  1263,  1262,  1265,  1264,  1266,  1264,
    1264,  1264,  1264,  1264,  1264,  1267,  1264,  1264,  1264,  1264,
    1264,  1264,  1268,  1268,  1269,  1270,  1271,  1271,  1272,  1273,
    1273,  1274,  1274,  1275,  1275,  1276,  1276,  1276,  1277,  1277,
    1279,  1280,  1278,  1282,  1283,  1281,  1284,  1284,  1284,  1284,
    1285,  1285,  1286,  1286,  1287,  1288,  1288,  1288,  1289,  1288,
    1290,  1290,  1291,  1291,  1292,  1291,  1293,  1291,  1294,  1294,
    1295,  1295,  1296,  1297,  1297,  1298,  1298,  1300,  1299,  1301,
    1301,  1302,  1302,  1303,  1303,  1304,  1305,  1304,  1307,  1308,
    1306,  1309,  1309,  1310,  1311,  1311,  1312,  1313,  1313,  1315,
    1314,  1317,  1316,  1318,  1316,  1319,  1316,  1320,  1320,  1321,
    1321,  1322,  1322,  1323,  1323,  1324,  1324,  1324,  1326,  1325,
    1327,  1327,  1328,  1328,  1329,  1329,  1330,  1330,  1330,  1330,
    1330,  1330,  1330,  1330,  1330,  1331,  1331,  1333,  1332,  1334,
    1334,  1334,  1334,  1334,  1334,  1334,  1334,  1334,  1334,  1334,
    1334,  1335,  1334,  1336,  1334,  1334,  1334,  1334,  1334,  1334,
    1334,  1334,  1334,  1334,  1334,  1334,  1334,  1334,  1334,  1334,
    1334,  1334,  1334,  1334,  1334,  1334,  1334,  1334,  1334,  1334,
    1334,  1334,  1334,  1334,  1334,  1334,  1337,  1337,  1337,  1338,
    1338,  1339,  1339,  1340,  1340,  1341,  1341,  1342,  1342,  1343,
    1343,  1344,  1344,  1345,  1345,  1345,  1347,  1346,  1348,  1346,
    1349,  1349,  1349,  1349,  1349,  1350,  1350,  1351,  1351,  1351,
    1351,  1352,  1352,  1352,  1354,  1353,  1356,  1357,  1355,  1355,
    1358,  1358,  1359,  1359,  1360,  1360,  1360,  1360,  1360,  1360,
    1360,  1360,  1360,  1360,  1360,  1360,  1360,  1361,  1361,  1363,
    1362,  1364,  1364,  1366,  1365,  1365,  1365,  1367,  1367,  1369,
    1368,  1370,  1371,  1371,  1372,  1373,  1373,  1373,  1374,  1376,
    1377,  1378,  1379,  1375,  1380,  1380,  1381,  1381,  1382,  1382,
    1382,  1383,  1383,  1383,  1384,  1384,  1385,  1385,  1386,  1386,
    1386,  1386,  1387,  1387,  1388,  1388,  1389,  1389,  1390,  1390,
    1391,  1391,  1392,  1392,  1393,  1393,  1393,  1394,  1394,  1395,
    1395,  1396,  1396,  1397,  1397,  1398,  1399,  1399,  1399,  1399,
    1400,  1400,  1400,  1401,  1402,  1402,  1402,  1403,  1403,  1403,
    1403,  1403,  1403,  1403,  1403,  1403,  1403,  1404,  1404,  1404,
    1404,  1404,  1405,  1405,  1405,  1406,  1406,  1407,  1407,  1408,
    1409,  1409,  1410,  1410,  1411,  1411,  1411,  1412,  1412,  1412,
    1412,  1413,  1413,  1413,  1414,  1414,  1415,  1416,  1416,  1417,
    1418,  1419,  1420,  1421,  1421,  1422,  1422,  1423,  1423,  1423,
    1424,  1424,  1424,  1425,  1425,  1425,  1425,  1425,  1425,  1425,
    1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,
    1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,
    1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,
    1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,  1425,
    1425,  1425,  1425,  1426,  1426,  1426,  1426,  1426,  1426,  1426,
    1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,
    1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,
    1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,
    1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,
    1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,
    1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,
    1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,
    1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,
    1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,
    1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,
    1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,
    1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,
    1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,
    1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,
    1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,
    1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,
    1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,
    1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,
    1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,
    1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,
    1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,
    1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,
    1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,
    1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,
    1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,
    1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,
    1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,
    1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,  1426,
    1426,  1426,  1426,  1426,  1426,  1426,  1428,  1427,  1430,  1429,
    1431,  1429,  1432,  1429,  1434,  1433,  1433,  1435,  1435,  1437,
    1436,  1438,  1436,  1440,  1439,  1439,  1441,  1441,  1441,  1442,
    1442,  1442,  1442,  1443,  1443,  1443,  1443,  1444,  1445,  1445,
    1445,  1445,  1445,  1445,  1445,  1445,  1446,  1446,  1446,  1447,
    1447,  1447,  1447,  1448,  1449,  1450,  1450,  1451,  1451,  1451,
    1451,  1452,  1452,  1452,  1453,  1453,  1453,  1453,  1453,  1455,
    1454,  1456,  1456,  1457,  1457,  1458,  1459,  1459,  1459,  1459,
    1461,  1460,  1462,  1462,  1463,  1462,  1464,  1464,  1465,  1465,
    1466,  1466,  1466,  1466,  1467,  1466,  1468,  1468,  1468,  1468,
    1468,  1469,  1470,  1470,  1470,  1470,  1470,  1471,  1472,  1472,
    1472,  1472,  1473,  1473,  1474,  1474,  1475,  1475,  1476,  1476,
    1478,  1477,  1479,  1477,  1480,  1477,  1481,  1477,  1477,  1477,
    1477,  1477,  1477,  1477,  1477,  1477,  1477,  1477,  1477,  1477,
    1477,  1477,  1477,  1477,  1477,  1477,  1477,  1477,  1477,  1477,
    1477,  1477,  1477,  1477,  1482,  1482,  1483,  1483,  1484,  1484,
    1484,  1485,  1485,  1485,  1485,  1486,  1486,  1487,  1487,  1488,
    1488,  1488,  1488,  1488,  1489,  1489,  1490,  1490,  1491,  1492,
    1492,  1492,  1492,  1492,  1493,  1493,  1494,  1494,  1495,  1495,
    1496,  1496,  1496,  1496,  1496,  1498,  1497,  1499,  1499,  1500,
    1500,  1500,  1501,  1501,  1501,  1502,  1502,  1503,  1504,  1504,
    1505,  1506,  1507,  1507,  1509,  1508,  1510,  1510,  1510,  1511,
    1511,  1513,  1512,  1514,  1514,  1515,  1515,  1515,  1516,  1516,
    1517,  1518,  1517,  1519,  1520,  1521,  1522,  1522,  1523,  1523,
    1524,  1524,  1524,  1524,  1524,  1524,  1524,  1524,  1525,  1525,
    1525,  1526,  1526,  1526,  1526,  1526,  1527,  1527,  1527,  1527,
    1527,  1527,  1528,  1528,  1529,  1530,  1531,  1531,  1531,  1532,
    1533,  1533,  1533,  1534,  1534,  1534,  1536,  1535,  1537,  1537,
    1538,  1538,  1540,  1539,  1541,  1541,  1542,  1542,  1542,  1542,
    1544,  1545,  1546,  1543,  1547,  1547,  1549,  1550,  1551,  1552,
    1553,  1548,  1555,  1556,  1557,  1558,  1554,  1559,  1559,  1559,
    1559,  1559,  1559,  1560,  1560,  1560,  1561,  1561,  1562,  1562,
    1562,  1563,  1563,  1564,  1565,  1564,  1566,  1566,  1567,  1568
};

/* YYR2[YYN] -- Number of symbols composing right hand side of rule YYN.  */
static const yytype_uint8 yyr2[] =
{
       0,     2,     1,     0,     4,     2,     0,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     3,     1,     1,     4,     1,     2,     0,     4,
       0,     2,     3,     1,     2,     0,     3,     0,     5,     1,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     5,
       3,     1,     0,     1,     3,     1,     3,     3,     3,     3,
       0,     7,     0,    12,     0,    12,     0,    12,     0,     6,
       0,     3,     4,     4,     3,     2,    10,     1,     3,     2,
       2,     2,     2,     2,     2,     2,     0,    13,     0,     6,
       2,     0,     1,     3,     1,     0,     2,     0,     2,     0,
       1,     3,     4,     0,     2,     0,     2,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       0,     3,     1,     0,     2,     0,     2,     2,     2,     2,
       2,     3,     3,     1,     1,     1,     2,     3,     3,     0,
       4,     0,     3,     0,     1,     3,     1,     0,     1,     3,
       1,     0,     3,     0,     1,     3,     1,     4,     0,     1,
       1,     1,     0,     3,     2,     3,     0,     3,     0,     5,
       5,     0,     7,     5,     0,     2,     1,     1,     1,     3,
       1,     1,     1,     3,     0,     1,     1,     1,     1,     2,
       1,     3,     1,     1,     0,     1,     0,     2,     3,     5,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     3,     4,     0,     1,     1,
       3,     1,     3,     3,     1,     2,     1,     1,     1,     1,
       3,     3,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     3,     0,     2,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     0,     5,     0,     2,     0,     3,     0,     2,
       2,     2,     2,     0,     6,     2,     0,     2,     1,     1,
       3,     0,     0,     0,     7,     0,     2,     2,     1,     1,
       0,     0,     8,     0,     6,     1,     2,     1,     2,     0,
       0,     6,     0,     0,     6,     0,     2,     0,     5,     0,
       1,     0,     5,     0,     2,     0,     5,     4,     0,     0,
       8,     0,     7,     1,     1,     1,     1,     1,     2,     4,
       5,     0,     4,     4,     4,     3,     3,     2,     2,     0,
       2,     1,     2,     3,     1,     1,     1,     0,     1,     1,
       2,     3,     1,     1,     1,     1,     1,     1,     1,     1,
       0,     1,     1,     2,     3,     1,     1,     1,     1,     1,
       0,     1,     1,     2,     3,     1,     1,     1,     1,     1,
       1,     1,     0,     1,     1,     2,     3,     1,     1,     1,
       2,     2,     2,     1,     1,     1,     1,     2,     3,     3,
       3,     3,     3,     3,     3,     3,     4,     1,     1,     1,
       1,     2,     3,     2,     4,     5,     0,     5,     0,     0,
       5,     0,     7,     1,     0,     1,     0,     4,     0,     0,
       3,     5,     5,     0,     4,     2,     2,     2,     2,     0,
       1,     0,     1,     1,     3,     1,     4,     5,     5,     0,
       2,     0,     0,     7,     0,     9,     1,     3,     1,     1,
       0,     2,     0,     3,     1,     3,     0,     6,     1,     0,
       0,     5,     0,     4,     1,     1,     1,     3,     1,     3,
       0,     0,     5,     1,     3,     1,     1,     0,     3,     1,
       3,     0,     4,     1,     0,     1,     2,     1,     3,     4,
       3,     3,     3,     4,     4,     3,     0,     0,     6,     0,
       1,     0,     1,     1,     2,     1,     1,     0,     1,     1,
       2,     1,     0,     3,     0,     1,     1,     2,     1,     2,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     0,     6,     1,     1,     3,     4,
       4,     2,     2,     2,     3,     3,     4,     4,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       2,     1,     1,     1,     1,     1,     1,     3,     1,     1,
       2,     2,     7,     8,     8,     8,     8,     2,     0,     1,
       4,     0,     1,     2,     0,     4,     3,     3,     3,     1,
       2,     1,     1,     3,     2,     3,     2,     2,     1,     3,
       3,     2,     3,     1,     2,     2,     2,     1,     2,     1,
       1,     1,     2,     3,     2,     3,     2,     2,     3,     3,
       3,     0,     6,     0,     6,     2,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     2,     2,     1,
       2,     1,     2,     3,     2,     1,     1,     1,     1,     1,
       1,     1,     2,     0,     1,     1,     5,     0,     3,     0,
       2,     3,     0,     1,     2,     1,     1,     1,     1,     3,
       3,     3,     3,     0,     1,     0,     1,     0,     1,     2,
       1,     1,     2,     2,     3,     1,     3,     2,     1,     2,
       2,     2,     2,     2,     1,     1,     2,     1,     1,     1,
       1,     1,     0,     2,     1,     1,     1,     1,     1,     0,
       2,     1,     1,     0,     1,     1,     2,     2,     1,     2,
       2,     0,     1,     1,     1,     3,     1,     3,     0,     1,
       0,     4,     1,     1,     1,     0,     1,     2,     1,     1,
       2,     1,     3,     3,     1,     1,     0,     2,     0,     1,
       5,     0,     3,     3,     1,     0,     2,     2,     2,     0,
       3,     3,     6,     6,     1,     1,     2,     2,     2,     1,
       2,     2,     1,     1,     0,     1,     1,     1,     1,     0,
       1,     1,     1,     0,     1,     2,     0,     1,     0,     1,
       0,     1,     1,     2,     1,     2,     1,     2,     2,     2,
       3,     2,     1,     1,     1,     1,     3,     1,     1,     1,
       4,     2,     1,     4,     0,     1,     0,     2,     1,     3,
       0,     6,     0,     5,     7,     0,     5,     0,     5,     0,
       5,     0,     4,     0,    10,     3,     4,     3,     3,     7,
       0,     3,     1,     4,     0,     3,     0,     2,     0,     1,
       0,     2,     2,     2,     2,     1,     1,     1,     3,     4,
       0,     6,     4,     0,     5,     0,     6,     4,     3,     1,
       7,     3,     1,     1,     0,     5,     0,     3,     2,     0,
       5,     0,     0,     6,     1,     3,     1,     1,     3,     2,
       3,     2,     4,     0,     6,     0,     0,     8,     4,     4,
       3,     3,     2,     2,     6,     5,     3,     5,     1,     1,
       1,     0,     1,     0,     1,     0,     1,     1,     0,     2,
       1,     0,     1,     1,     1,     0,     0,     7,     3,     3,
       0,     1,     1,     3,     3,     2,     2,     4,     0,     3,
       0,     3,     0,     3,     0,     3,     0,     2,     1,     3,
       0,     1,     1,     0,     2,     1,     3,     3,     0,     5,
       0,     1,     1,     0,     6,     0,     1,     1,     2,     1,
       1,     1,     0,     5,     2,     0,     5,     0,     1,     1,
       2,     1,     1,     1,     1,     1,     2,     0,     5,     0,
       1,     1,     0,     4,     4,     3,     5,     1,     3,     3,
       0,     6,     1,     1,     1,     3,     2,     3,     1,     1,
       0,     6,     1,     1,     1,     3,     3,     4,     0,     6,
       0,     2,     0,     4,     0,     2,     1,     2,     4,     2,
       3,     2,     3,     0,     3,     0,     0,     6,     2,     1,
       1,     2,     2,     8,     4,     0,     1,     2,     1,     1,
       1,     1,     0,     2,     4,     3,     1,     1,     3,     4,
       0,     0,     0,     2,     2,     1,     1,     0,     2,     3,
       3,     3,     2,     3,     4,     3,     4,     3,     4,     1,
       3,     4,     3,     3,     6,     1,     5,     6,     5,     7,
       6,     8,     5,     6,     4,     4,     5,     3,     4,     1,
       3,     3,     3,     3,     3,     3,     5,     5,     3,     3,
       3,     3,     3,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     3,     1,     1,     1,
       1,     3,     2,     2,     2,     2,     3,     3,     5,     6,
       4,     4,     7,     2,     6,     5,     6,     6,     4,     4,
       5,     4,     6,     2,     4,     4,     4,    10,     6,     8,
       6,     4,     4,     6,     4,     4,     4,     6,     4,     7,
       7,     7,     6,     6,     6,     6,     3,     4,     6,     8,
       2,     2,     8,     8,     6,     6,     1,     6,     6,     8,
       8,     6,     8,     6,     2,     8,     8,     2,     2,     2,
       4,     4,     4,     4,     3,     8,     6,     8,     4,     6,
       4,     4,     4,     6,     8,     4,     3,     6,     4,     6,
       5,     8,     7,    10,     1,     6,     4,     4,     4,     4,
       4,     6,     4,     0,     5,     6,     2,     3,     0,     4,
       0,     3,     0,     1,     1,     3,     4,     4,     5,     4,
       4,     4,     5,     4,     0,     0,     7,     4,     5,     4,
       5,     4,     4,     4,     4,     4,     5,     0,     8,     0,
       3,     3,     1,     4,     0,     1,     0,     2,     0,     1,
       0,     3,     2,     3,     2,     1,     2,     1,     2,     1,
       2,     2,     2,     0,     1,     1,     3,     1,     3,     1,
       3,     0,     1,     0,     2,     4,     5,     1,     1,     1,
       1,     4,     1,     3,     3,     3,     0,     6,     0,     6,
       0,     8,     4,     0,     8,     0,    10,     6,     0,     8,
       0,    10,     6,     1,     2,     2,     0,     1,     5,     0,
       5,     3,     5,     2,     0,     0,     7,     1,     0,     0,
       6,     0,     3,     0,     0,     5,     0,     1,     0,     1,
       0,     2,     3,     3,     1,     1,     0,     7,     0,     7,
       1,     2,     0,     0,     2,     0,     2,     0,     1,     1,
       1,     1,     3,     1,     3,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       0,     1,     1,     0,     2,     0,     1,     0,     0,     3,
       0,     0,     3,     2,     0,     0,     4,     4,     2,     0,
       1,     1,     3,     3,     1,     2,     0,     1,     0,     4,
       4,     2,     0,     1,     1,     0,     1,     0,     1,     2,
       1,     3,     3,     1,     1,     1,     1,     1,     0,     2,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     0,     0,     6,     0,     1,     3,     1,
       3,     0,     2,     3,     1,     2,     1,     0,     3,     0,
       0,     7,     2,     1,     0,     3,     0,     7,     0,     6,
       4,     6,     4,     4,     4,     0,     6,     4,     4,     4,
       5,     4,     1,     3,     1,     2,     1,     3,     1,     0,
       2,     0,     1,     0,     1,     1,     2,     3,     1,     1,
       0,     0,     8,     0,     0,     6,     0,     1,     1,     1,
       1,     1,     2,     1,     1,     1,     3,     4,     0,     3,
       3,     1,     2,     2,     0,     3,     0,     5,     3,     1,
       3,     1,     3,     1,     1,     0,     1,     0,     4,     0,
       1,     3,     1,     1,     1,     0,     0,     6,     0,     0,
      11,     3,     1,     3,     3,     1,     3,     0,     1,     0,
       4,     0,     7,     0,     5,     0,     6,     1,     3,     2,
       4,     0,     2,     0,     2,     1,     1,     1,     0,     4,
       0,     1,     0,     1,     1,     3,     1,     1,     2,     2,
       2,     1,     1,     1,     1,     0,     3,     0,     3,     2,
       4,     4,     3,     4,     4,     1,     3,     3,     6,     2,
       2,     0,     6,     0,     6,     5,     2,     1,     1,     1,
       5,     5,     2,     2,     1,     4,     3,     2,     3,     2,
       2,     1,     3,     4,     3,     3,     2,     2,     3,     3,
       3,     3,     3,     3,     3,     3,     1,     1,     1,     1,
       1,     0,     1,     0,     2,     0,     1,     1,     1,     0,
       2,     0,     2,     0,     2,     2,     0,     4,     0,     4,
       1,     1,     1,     1,     1,     1,     1,     0,     1,     1,
       3,     0,     1,     1,     0,     4,     0,     0,     5,     1,
       0,     3,     3,     1,     2,     2,     2,     2,     2,     2,
       2,     1,     1,     1,     1,     1,     1,     0,     1,     0,
       3,     3,     1,     0,     3,     1,     2,     0,     1,     0,
       3,     3,     2,     2,     3,     0,     1,     1,     2,     0,
       0,     0,     0,    22,     1,     1,     0,     1,     0,     1,
       1,     0,     1,     1,     0,     2,     2,     1,     3,     4,
       3,     3,     0,     2,     2,     1,     3,     3,     0,     4,
       0,     3,     1,     1,     0,     3,     2,     3,     1,     1,
       2,     0,     2,     3,     1,     5,     1,     1,     2,     2,
       1,     1,     1,     1,     1,     2,     2,     1,     1,     1,
       1,     1,     1,     1,     1,     2,     2,     1,     1,     1,
       1,     1,     2,     2,     2,     1,     1,     3,     5,     1,
       1,     1,     1,     1,     3,     4,     5,     1,     5,     3,
       2,     1,     3,     2,     2,     4,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     3,     2,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     0,     3,     0,     3,
       0,     3,     0,     3,     0,     3,     2,     0,     2,     0,
       2,     0,     4,     0,     3,     1,     1,     1,     1,     0,
       1,     1,     1,     0,     2,     2,     2,     3,     3,     4,
       6,     2,     3,     3,     3,     5,     1,     3,     3,     1,
       1,     3,     3,     1,     3,     2,     2,     2,     2,     2,
       1,     1,     4,     4,     1,     1,     1,     1,     1,     0,
       4,     1,     1,     1,     3,     3,     1,     1,     2,     2,
       0,     3,     4,     3,     0,     7,     1,     2,     1,     1,
       1,     1,     1,     1,     0,     5,     1,     1,     1,     1,
       1,     3,     6,     6,     6,     7,     5,     3,     8,     8,
       8,     6,     0,     1,     1,     2,     0,     1,     1,     3,
       0,     3,     0,     3,     0,     3,     0,     3,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     2,
       2,     1,     3,     2,     2,     2,     2,     2,     2,     2,
       2,     1,     1,     2,     0,     1,     3,     1,     2,     2,
       2,     1,     3,     3,     1,     1,     3,     1,     3,     4,
       5,     4,     6,     1,     0,     3,     3,     1,     1,     0,
       2,     2,     2,     2,     0,     2,     0,     3,     2,     1,
       2,     2,     2,     2,     2,     0,     3,     0,     1,     0,
       3,     2,     0,     1,     2,     0,     1,     4,     4,     5,
       2,     3,     0,     1,     0,     4,     0,     1,     1,     0,
       1,     0,     2,     2,     1,     0,     1,     1,     2,     3,
       2,     0,     6,     3,     0,     0,     0,     1,     2,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     2,     2,
       3,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     0,     3,     1,     2,     1,     2,
       3,     3,     3,     0,     3,     3,     0,     7,     0,     3,
       1,     3,     0,     3,     2,     4,     0,     3,     4,     4,
       0,     0,     0,    16,     8,     7,     0,     0,     0,     0,
       0,    15,     0,     0,     0,     0,    12,     4,     4,     3,
       4,     3,     2,     1,     3,     5,     1,     1,     0,     1,
       1,     0,     2,     0,     0,     3,     0,     2,     5,     3
};

/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
   means the default is an error.  */
static const yytype_uint16 yydefact[] =
{
       0,  2554,  1049,  2485,     0,     0,     0,     0,     0,     0,
    2487,   120,    63,  1669,  1785,  1786,  1574,  1601,     2,     0,
    1049,   267,   170,     0,    75,  1610,     0,  1835,     0,     0,
    1049,   479,     0,  1829,     0,     0,  1049,  1613,  1819,   244,
     170,  2487,     0,  1095,  2296,  1707,     0,     0,     0,  1690,
       0,  2370,  1658,     0,     0,     0,     0,     3,     8,    19,
       0,    39,    24,    29,    14,    18,    13,    52,    46,    26,
      37,    10,    54,    55,    16,    43,    11,    12,    15,    35,
      42,    36,    38,    50,  1086,    22,    23,    30,    44,    59,
      20,    56,    53,    21,  1787,    25,    45,    40,    32,    60,
      33,    51,    34,    58,    28,    47,    27,     9,    17,    48,
      49,    41,    61,    31,    57,     0,   908,     0,     0,   974,
       0,     0,     0,     0,     0,   891,  2552,  2553,  2554,  1051,
    1050,     0,  2487,  1940,  1034,  1060,  2003,  2004,  2005,  2006,
    2007,  2008,  2009,  1954,  2010,  2011,  2013,  2012,  2014,  2015,
    1955,  1956,  2016,  2017,  2018,  2020,  2019,  2021,  1957,  1958,
    2022,  2023,  2024,  2025,  1959,  1960,  2026,  2028,  2027,  1961,
    2029,  2030,  2031,  2033,  2032,  1962,  2034,  1963,  2035,  2036,
    2037,  2038,  2039,  2040,  2041,  2043,  2042,  1964,  2044,  2045,
    2046,  2047,  2048,  2049,  2051,  2050,  2052,  2053,  2054,  1965,
    2055,  2056,  2057,  2058,  2059,  2060,  2061,  2062,  2063,  1966,
    2064,  2065,  2066,  2084,  1967,  2067,  2070,  2069,  2068,  2071,
    2072,  2073,  2075,  2074,  2076,  2077,  1968,  2078,  2079,  2080,
    2082,  2081,  2086,  2087,  2088,  1969,  1970,  2083,  2085,  2276,
    2089,  2091,  2090,  2092,  2094,  2093,  1971,  2095,  1972,  1973,
    2096,  2097,  1937,  2098,  1938,  2099,  2101,  2102,  2103,  2108,
    1974,  2100,  2104,  2105,  2106,  2107,  2109,  1975,  2110,  2111,
    2112,  2113,  2114,  2115,  2116,  2117,  2118,  2119,  2141,  2130,
    2132,  2123,  2125,  2126,  2128,  2124,  2131,  2129,  2135,  2134,
    2136,  2137,  2138,  2139,  2140,  2133,  2121,  2127,  2122,  2142,
    2143,  2120,  2144,  2145,  2146,  2147,  2148,  2149,  2150,  2151,
    2152,  2153,  2154,  2156,  2155,  2157,  2158,  2159,  2160,  2161,
    2162,  2164,  2163,  2165,  2166,  2167,  2169,  2168,  2171,  2172,
    1976,  2170,  2173,  2174,  2175,  2176,  2177,  2178,  1977,  1978,
    1979,  2179,  2180,  1980,  2181,  2183,  2182,  2184,  2185,  2186,
    2187,  2188,  2189,  2190,  1981,  1982,  2191,  2192,  2193,  2194,
    2195,  2196,  2197,  2198,  2199,  2200,  2201,  2202,  2203,  2204,
    2206,  2205,  2207,  2208,  2209,  2210,  2211,  2212,  2213,  1983,
    2214,  1984,  2215,  2216,  1985,  2217,  1986,  2218,  2219,  2220,
    2221,  1987,  2222,  2223,  2224,  2226,  2227,  2225,  2228,  1988,
    2229,  2230,  2231,  1989,  2233,  2232,  2234,  1990,  2236,  2237,
    1991,  2235,  1993,  2238,  2239,  1992,  1994,  2240,  2241,  2243,
    2242,  2244,  2245,  2246,  1995,  2247,  1996,  2248,  2249,  2250,
    2251,  2252,  2254,  2253,  2255,  2256,  2257,  2258,  2260,  2262,
    2261,  2259,  2263,  2264,  2265,  2266,  2269,  2270,  2271,  2272,
    2267,  2268,  1997,  2273,  2274,  2275,  2277,  2278,  2280,  2279,
    1998,  1999,  2281,  2282,  2002,  2283,  2284,  2287,  2285,  2286,
    2289,  2288,  2290,  2292,  2291,  2000,  2293,  2001,  2294,  2295,
     189,  1943,   172,  1944,  1953,     0,  2362,  2361,  1018,  1035,
    2488,  2489,   572,   841,     0,     0,   842,     0,   571,   840,
     170,  2554,   125,     0,   568,   569,     0,     0,     0,  1683,
       0,  1599,  1599,  1599,     0,     0,  1599,  1599,     0,  1602,
    1599,   170,  1599,     0,    68,  1794,   268,     0,     0,     0,
       0,     0,  1936,     0,  1616,     0,  1836,  1837,     0,  1844,
       0,  1845,  1839,  2359,     0,     0,     0,     0,     0,   170,
    1052,     0,  1667,     0,   234,   243,   245,   246,   242,     0,
    2489,  2500,  1087,  1093,  1105,     0,  1765,   246,  1006,   990,
    1006,  1691,  1688,     0,     0,  1667,  1838,  2606,     0,     0,
       0,  2602,     0,  2607,     0,  1095,     0,     0,     1,     5,
       0,     0,  2079,  1970,  2183,  1778,  1776,  1931,     0,   882,
     909,     0,   887,     0,   885,  1949,  1948,  1947,     0,   898,
     897,   895,     0,   443,     0,     0,  2563,   889,  1032,  2486,
       0,   191,     0,    77,     0,     0,     0,  2492,     0,     0,
       0,     0,   124,     0,     0,     0,   121,  1120,  1120,  2554,
    2556,  2558,   572,   570,     0,     0,     0,  1687,  1686,  1685,
       0,  1683,  2004,  1954,  2015,     0,  1904,     0,     0,     0,
    1371,     0,  1959,     0,  2029,  2031,  1964,     0,     0,  1127,
    1127,   719,     0,     0,     0,  2053,  2054,  1910,     0,     0,
       0,  1901,  1911,  1970,  2091,  2092,     0,  1903,  2097,     0,
       0,     0,     0,  2114,  1908,     0,     0,  2151,  2153,     0,
       0,  2157,  2158,  2159,  2160,  1887,  1182,     0,   719,  1900,
    1907,  2176,  1893,  2184,  2189,  2190,     0,  2199,     0,     0,
    2221,     0,  2227,  2225,  2231,     0,     0,  2251,     0,     0,
     719,  1886,  2269,  2270,  2271,  2272,     0,  1902,  1997,  1909,
       0,  2283,  1127,   719,   719,     0,     0,     0,  2290,  2292,
    2295,     0,     0,     0,  2524,  1181,     0,  1339,     0,  1256,
    1365,  1139,  1145,  1159,     0,  1174,  1192,  1193,  1195,  1294,
    1194,  1200,  1199,  1575,  1897,  1198,  1197,  1898,  1899,  1191,
    1921,  1943,  1920,     0,     0,     0,     0,     0,     0,     0,
       0,  1603,     0,     0,  1585,  1599,    70,     0,     0,  2406,
    2421,  2422,  2418,  2423,  2441,  2424,  2428,     0,  2420,  2412,
       0,  2427,     0,  2416,  2425,     0,  2410,     0,  2426,  2431,
    2442,  2414,  2419,  2397,     0,  2404,  2408,  1933,  1480,  2373,
    2374,     0,    76,  1618,  1619,  1617,   973,     0,  1834,     0,
    1848,     0,  1047,   489,   480,     0,  1760,  1759,     0,  1830,
    2501,     0,     0,  1023,  1621,  1668,     0,  1620,  1825,     0,
    1823,  1820,  1822,   235,     0,     0,   265,  2406,     0,  2391,
       0,  2495,  2492,  2502,  2537,  2532,  2531,  2534,  2535,  1111,
    2536,  1110,  2533,  2530,  1120,  1106,  1108,  1109,   757,     0,
       0,  2316,  2317,  2164,  2184,  2318,  2267,     0,     0,  2336,
    2297,  2302,  2298,     0,  1727,     0,   757,  1773,  1728,     0,
       0,  1773,     0,  1515,  1763,  1766,     0,  2320,  1741,   838,
     837,   836,  2321,  1759,     0,  1715,  1729,     0,  1692,  1734,
       0,  2322,     0,  1762,     0,  1515,  1773,     0,  1708,     0,
       0,     0,     0,   241,   985,  1010,     0,     0,   989,   991,
     992,   988,     0,  2619,  2371,   973,  1892,  1891,  1941,  2603,
    1890,  2611,  2613,  2599,  2601,  2608,  1089,     0,  2506,     6,
      62,     0,     0,  1791,  2561,  2562,  2560,   773,     0,  1127,
    1950,  2555,   173,   896,     0,   444,   173,     0,     0,     0,
       0,     0,   445,   446,   378,   880,   893,     0,     0,   892,
    2563,     0,     0,  1062,  1064,  1063,  1080,   193,   190,   171,
       0,  1020,  1592,  1594,  1037,  2491,     0,     0,  2493,  2497,
    1180,  1179,     0,   118,   123,     0,     0,     0,  2463,   122,
    2457,  2559,  1120,  1120,  1120,  2551,     0,  2539,  2546,  2547,
    2550,  2549,  2548,  2545,     0,  2538,  2541,  2542,  2544,  2543,
    2563,  2557,     0,   843,   843,   843,     0,  1670,  1673,  1677,
    1681,  1684,     0,     0,  1485,  1213,  1485,  1485,  1485,  1372,
       0,     0,     0,     0,     0,     0,     0,     0,  1485,     0,
    1250,  1223,     0,  1251,     0,     0,     0,  1912,     0,     0,
       0,  2524,     0,     0,     0,     0,  1344,     0,     0,     0,
    2524,     0,     0,     0,     0,     0,  1367,  1369,  1920,  1485,
       0,     0,  1485,     0,     0,     0,     0,     0,  1132,   753,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1485,  1485,     0,     0,  1485,  1264,  1914,
       0,     0,     0,  1913,     0,     0,     0,  1906,  1905,  1888,
       0,  1267,  1269,  1268,     0,  1485,  1485,     0,     0,     0,
    1203,  1202,  1204,     0,     0,     0,     0,     0,     0,  1178,
    1177,  1176,  1175,     0,     0,     0,  1183,     0,  1184,  1185,
       0,  1186,  1187,  1188,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1205,     0,     0,     0,  1889,  1303,     0,
    1600,  1580,  1587,  1582,     0,  1603,  1583,  1591,   458,   457,
    1608,  1609,  1589,  1604,  1605,     0,  1588,  2455,  1584,     0,
    1576,     0,    69,     0,  1815,     0,     0,     0,  1811,  1813,
    1812,     0,     0,  1816,     0,  1814,  1795,  1799,  1803,  1796,
       0,     0,   266,   269,   271,     0,   274,  2407,  2405,  2439,
    2438,  2443,     0,  2440,  2436,  2429,  2464,  2433,     0,  2464,
    2435,  2434,  2464,  2430,  2437,  2464,  2402,     0,  1481,  1482,
       0,  2372,     0,  1932,     0,     0,  1070,  1849,  1850,  1846,
    1480,  2360,  2363,     0,   490,     0,     0,   499,     0,     0,
      65,    66,     0,  1054,     0,  1053,  1057,     0,     0,     0,
    1624,  1614,  1623,  1406,  1826,  1827,     0,   233,   258,   253,
     261,   255,   257,   256,   262,   263,   264,   259,   254,   260,
     247,     0,  2405,     0,  2402,  2496,     0,  2498,  2515,  1094,
    2503,  1117,  1096,  1116,     0,  1107,   756,     0,   759,   761,
    1643,  1644,   760,   769,     0,   758,     0,     0,     0,  2323,
       0,   765,   767,   766,  2331,   764,     0,     0,  2307,     0,
    1769,     0,     0,  1740,     0,   572,     0,     0,     0,     0,
       0,     0,  1709,     0,     0,   609,     0,  1733,  1516,  1767,
    1768,  1773,     0,     0,  1773,     0,  1746,  1763,     0,  1773,
    1704,     0,     0,  1696,  1701,  1697,     0,  1703,  1702,  1705,
    1693,  1694,  1769,  1720,  1747,  1763,  1732,  1739,     0,  1719,
    1726,     0,  1737,  1763,  1763,  1773,  1773,  1013,  1012,  1011,
    1007,  1008,   995,   996,     0,     0,  1689,  1409,     0,     0,
    2600,  2614,  2598,  2609,  2610,  2597,  1090,  2507,  1088,  2508,
       0,     7,     4,  1790,  1780,  1781,  1782,  1783,  1784,  1779,
    1777,  1792,  1793,   774,   773,   563,   566,   565,     0,     0,
    1952,     0,   888,     0,   432,   886,     0,     0,   410,   389,
     410,   447,   773,   900,     0,     0,   890,  1033,     0,     0,
     478,  1080,  1066,  1082,     0,   194,   196,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    78,    79,   101,  1022,  1021,     0,  1019,  1045,  1044,
    1042,     0,  1043,  1041,  1036,  1038,  1039,  2490,  2494,   573,
     773,   420,     0,   381,     0,     0,     0,     0,     0,   572,
       0,     0,  2540,   110,   844,     0,     0,     0,  1675,  1596,
    1406,  1598,  1931,     0,     0,     0,  1679,     0,     0,  1486,
    1485,     0,  1350,     0,     0,     0,     0,  1373,     0,     0,
       0,     0,     0,     0,     0,  1324,     0,  1350,  1128,     0,
     720,  1274,     0,     0,     0,     0,     0,     0,  1456,  1457,
    1458,  1459,  1467,  1460,  1461,  1462,  1469,  1474,  1463,  1464,
    1470,  1471,  1472,  1465,  1473,  1468,  1466,  1475,     0,  1455,
       0,     0,  1479,  1476,  1478,  1477,     0,  1345,  1337,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1485,     0,     0,     0,  1485,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1286,     0,     0,     0,     0,     0,  1485,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1246,
       0,  1923,  1922,     0,     0,     0,   806,     0,  1207,     0,
    1206,  1418,     0,  2509,  2525,     0,  2323,  1340,  1342,     0,
    1130,  1129,  1131,  1142,  1135,  1140,  1133,  1137,     0,  1189,
    2009,  1143,     0,     0,  1171,  2524,  1494,  1172,  1157,  1162,
    1163,     0,  1160,  1161,     0,  1165,     0,  1164,  1168,  1169,
    1170,  1173,     0,     0,     0,     0,  1196,  1201,  1366,  1120,
    1924,     0,  1578,  1590,  1761,  1606,  1645,     0,   975,     0,
       0,    71,    73,  1808,  1805,  1804,  1806,  1810,  1809,  1807,
       0,  1817,  2053,  2269,  2272,   278,     0,   251,   250,   252,
     275,     0,     0,  2432,     0,  2413,     0,  2417,  2411,  2415,
       0,     0,  2403,     0,  2409,  1484,  2087,  2168,     0,  1487,
    2376,  1611,  2618,     0,  1847,     0,     0,     0,  1048,     0,
    1120,   488,   487,   486,   485,     0,   501,   483,     0,    67,
       0,     0,  1831,     0,     0,     0,     0,  1025,  1622,     0,
       0,  1595,  1407,  1828,  1824,  1821,     0,     0,     0,     0,
       0,     0,     0,  2499,  2517,  2516,  2504,  1120,  1506,  1121,
    1121,  1920,  2338,     0,  2333,  2332,     0,     0,     0,  2351,
    2334,     0,     0,  2301,  2339,  2340,  2343,     0,     0,     0,
       0,     0,  2337,  2267,  2303,  2304,     0,  2309,  2299,  2357,
    2358,  2355,  2356,  2354,  2328,     0,  1771,  1774,  1775,     0,
       0,  1755,  1749,  1748,  1744,  1750,  1745,  1758,  1757,  1756,
    1717,  1716,  1526,  1527,  1525,  1519,  1520,  1524,  1523,  1712,
    1764,  1754,  1752,  1742,  1773,  1753,  1751,  1698,  1699,  1700,
       0,  1515,     0,  1771,  1773,  1763,     0,  1773,  1773,  1736,
    1738,     0,   986,  1010,   994,   993,  1427,  1426,     0,  1380,
       0,  1382,  1379,  1378,  1377,     0,  1426,  2604,  2612,  2616,
       0,  1515,  2514,  2512,   564,  1645,  1645,     0,  1951,     0,
       0,     0,     0,     0,     0,     0,   174,   183,     0,     0,
     387,   388,  1645,   386,   433,   434,   437,   438,   439,     0,
       0,     0,     0,     0,     0,     0,     0,   127,   440,  1645,
    1645,   383,   411,   412,   415,   416,   417,   418,   419,   379,
       0,   384,   971,   971,     0,  1645,  1645,   971,  1645,     0,
       0,  1645,  1645,     0,     0,  1645,     0,     0,   971,     0,
    1645,     0,   969,     0,     0,  1645,  1645,  1645,  1645,   971,
       0,     0,  1645,   478,  1645,     0,     0,   981,     0,     0,
    1645,     0,     0,  1645,     0,  1645,   916,   968,   576,   596,
     597,   881,   915,   917,   929,   474,     0,   947,   970,     0,
     902,   904,  2564,  2565,  2566,  1069,  1061,  1068,  1065,  1080,
    1078,  1067,   833,   832,     0,  1081,   192,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1593,  1046,  1040,   119,   773,  1645,  1645,
    1645,  1645,   385,   421,   422,   425,   426,   427,   428,   431,
     429,   430,     0,     0,   397,     0,     0,  2458,     0,  2592,
       0,     0,     0,   172,   574,     0,     0,   845,     0,     0,
       0,     0,     0,  1671,     0,  1934,  1678,  1409,  1682,  1681,
       0,  1270,     0,  1317,     0,  1319,  1320,  1321,     0,     0,
       0,     0,     0,  1271,     0,  1221,  1272,  1273,     0,     0,
       0,     0,  1323,     0,   721,     0,     0,  1224,  1225,  1218,
    1210,     0,     0,  1296,     0,     0,  1226,     0,     0,     0,
       0,     0,  1297,  1368,     0,  1370,  1924,     0,  1329,  1278,
    1231,     0,  1327,     0,  1232,  1298,  1299,  1300,  1280,  1281,
       0,  1302,     0,  1282,     0,     0,  1285,     0,     0,  1234,
    1333,  1331,     0,     0,     0,     0,  1335,  1236,     0,     0,
       0,  1235,     0,     0,     0,     0,     0,     0,     0,  1238,
       0,  1219,  1332,  1334,  1288,     0,     0,     0,     0,     0,
    1247,     0,  2518,  1417,  2526,  1418,     0,     0,  2520,  2510,
    2515,  2523,  1211,     0,     0,  1925,  1136,  1141,  1134,  1138,
    2524,     0,     0,     0,     0,  1155,  1154,     0,     0,     0,
    2524,  1494,  1158,     0,     0,  1313,  1314,  1363,     0,  1581,
    1579,  1607,  1646,     0,  2456,   977,   976,  1586,   975,    74,
       0,  1802,  1818,  1797,     0,   270,   279,   272,   276,   277,
     273,  2468,     0,  2467,     0,  2451,  2454,  1931,     0,     0,
       0,  2386,  2380,  2387,  2389,  2383,  2388,  2390,  2381,  2382,
    2377,  2384,  1488,  1517,     0,  1071,  1073,  1074,  1072,  1080,
       0,     0,  2366,  2367,  2365,  2364,   491,     0,  1551,  1552,
    1537,  1538,  1536,  1539,   500,  1540,  1550,     0,   512,     0,
     491,  1833,  1832,     0,  1055,  1058,  1059,  1030,  1029,  1031,
    1024,  1026,  1027,   556,  1628,     0,     0,     0,  1634,  1615,
    1625,     0,     0,   248,     0,     0,     0,     0,     0,     0,
    1115,  1409,  1567,  1112,  1100,  1517,  1507,  1099,  1122,  1118,
       0,   772,   771,   770,   768,     0,     0,     0,     0,  2345,
    2346,     0,     0,  2324,  2325,  2326,     0,  2329,  2306,  2307,
       0,  2308,     0,  1770,     0,  1721,     0,  1743,     0,     0,
    1714,     0,  1735,  1695,  1723,  1713,  1487,  1763,  1710,  1711,
       0,  1015,  1014,   998,  1009,  1426,  1409,     0,     0,  1403,
    1428,     0,  1428,  1409,  1409,     0,  1409,  1406,  1423,     0,
       0,  2615,  1508,  2513,     0,     0,   884,   177,   180,   178,
       0,   179,     0,     0,   442,   441,     0,  1761,   435,   131,
     130,   132,   133,  1534,  1535,  1531,  1532,  1530,  1533,   135,
     134,   129,   899,     0,     0,     0,  1761,   413,   390,   391,
     394,   395,   396,   972,   874,  1049,   951,     0,   642,   874,
     829,   834,   834,   949,     0,  1049,     0,     0,     0,     0,
       0,  1049,     0,     0,     0,  1645,     0,   962,   911,     0,
       0,     0,     0,     0,   963,     0,     0,   912,  1645,     0,
       0,     0,     0,     0,  1049,     0,     0,   476,     0,  1049,
     478,   984,   983,   982,     0,  1049,  1049,     0,   602,   603,
     601,     0,     0,   594,   577,   773,   913,   475,   914,   641,
       0,   978,   638,   644,  1927,     0,     0,     0,   141,  2568,
       0,  1447,   195,   102,   100,    82,  1939,    86,    88,    81,
     106,  1544,  1545,  1543,  1541,  1542,   107,    84,    85,    87,
      91,    90,    92,    93,    96,    97,    94,    89,    95,    83,
      98,   108,   109,    80,     0,     0,     0,     0,  1761,   423,
       0,     0,  1645,   380,   398,   399,   402,   403,   404,   405,
     406,   409,   407,   408,     0,  2459,  2461,     0,     0,   374,
     373,     0,   136,  2586,     0,     0,   641,   111,   474,   575,
     578,   867,   869,   868,   859,   858,   112,   114,   116,  1597,
    1681,  1409,  1487,  1932,  1487,     0,  1680,     0,     0,  1318,
    1351,     0,  1374,     0,  1215,   733,   733,   717,  1359,   713,
     733,  1355,   717,  1357,     0,     0,     0,     0,     0,  1325,
    1322,     0,     0,     0,     0,     0,  1348,     0,     0,     0,
    1220,     0,  1308,  1330,  1328,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1336,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   795,   801,   804,   805,   807,   799,     0,  1290,  1208,
    1120,  2527,  2529,  1091,     0,  2519,  2521,   876,  1341,     0,
    1152,  1148,     0,  1146,  1493,  1167,  1166,     0,     0,     0,
    1156,  1121,  1304,  1120,     0,  1364,  1926,   456,   608,  1577,
      72,  1800,     0,     0,  2465,     0,  2476,     0,     0,     0,
       0,     0,     0,     0,  2375,  1518,  1655,     0,  1080,  1084,
    1942,  1840,  2368,  2369,     0,   492,   493,   495,  1121,   509,
     489,     0,   481,   484,     0,     0,  1028,  1105,     0,  1647,
    1632,  1639,  1633,     0,     0,     0,  1631,  1916,  1915,  1922,
    2502,     0,  1453,     0,     0,  2396,     0,     0,     0,  2505,
    1487,  1487,  1561,     0,     0,  1097,  1102,  1098,  1101,     0,
    1119,  1126,  1125,  1917,  1924,  2335,     0,     0,     0,     0,
    2350,  2344,  2341,  2342,     0,  2305,  2327,  2311,  2310,  2313,
    2315,  1772,  1515,  1731,  1730,  1522,  1521,  1706,  1515,  1725,
    1773,     0,     0,     0,   987,  1000,     0,  2509,  1421,     0,
    1405,  1404,  1429,     0,  1409,  1428,  1428,     0,  1385,  1384,
    1659,  1662,     0,  1383,  1480,  1411,  1105,  2605,  2617,     0,
     607,   606,   182,   181,   187,   188,   460,   448,   459,   436,
     128,   449,   450,   414,     0,   392,   643,   875,   934,     0,
       0,     0,   834,   637,   874,   843,   835,   874,   874,     0,
       0,   587,   584,   953,   590,   932,   923,   933,   944,   946,
       0,   586,   604,     0,     0,   592,   874,   918,   960,   961,
     975,   581,     0,     0,   617,   618,   616,   598,   605,   582,
     583,   955,     0,  1502,  1504,  1512,   589,   588,     0,   585,
       0,   931,   966,   939,     0,   615,   613,   610,   612,   611,
     614,   593,   591,   928,     0,   971,   971,   948,     0,   625,
     626,   628,   629,  1930,     0,   980,   950,     0,   630,   639,
     631,     0,     0,     0,   151,     0,     0,   901,     0,   144,
     142,   153,     0,     0,     0,  1450,     0,  1451,  1448,  1449,
       0,   103,   105,   455,   454,   453,   452,   424,     0,     0,
       0,  1761,   400,  2460,     0,     0,  2593,   377,   375,   376,
       0,     0,   197,   623,   624,   622,   621,     0,   463,     0,
     461,     0,   473,     0,  1851,   773,   579,     0,     0,     0,
       0,  1487,  1506,  1935,  1674,     0,  1248,  1375,     0,     0,
     734,  1352,   781,     0,  1361,     0,  1362,   715,   714,  1354,
    1356,  1360,  1358,  1214,  1222,  1295,  1217,  1216,     0,     0,
       0,  1254,  1276,     0,  1255,  1346,  1349,     0,     0,  1228,
       0,  1230,     0,     0,  1310,  1279,  1301,  1257,  1283,     0,
    1233,  1209,     0,  1258,     0,  1263,  1261,     0,  1237,     0,
       0,  1244,     0,  1242,     0,  1243,     0,  1245,  1287,  1289,
       0,     0,   806,   792,   793,   794,     0,   796,   798,   800,
       0,     0,  1419,  2528,  1092,     0,     0,  1343,  1144,     0,
    1153,  1150,     0,  1147,  1122,  1315,  1305,     0,  1798,   287,
     282,   290,   284,   286,   285,   291,   292,   293,   294,   288,
     283,   289,   281,   280,  2466,     0,  2401,  2453,  2452,  2469,
    2469,  2469,     0,  1489,     0,  1612,  1075,  1080,  1084,     0,
    1076,  1851,   496,     0,     0,     0,   516,     0,   514,   482,
    1056,  1120,  1629,  1641,     0,  1649,     0,     0,  1626,  1636,
       0,     0,     0,  1635,   478,     0,   249,     0,  2393,  2394,
    2392,  1517,  1495,     0,     0,  1573,     0,  1568,  1113,     0,
    1124,  1123,     0,  2353,  2352,  2348,  2347,  2349,  2330,     0,
       0,  1722,  1724,  1718,  1017,  1016,     0,     0,  1002,  2515,
    1480,  1413,  1409,  1381,  1409,  1392,     0,     0,  1409,  1388,
    1386,  1390,     0,  1487,     0,  1445,  1120,  1919,  1509,  1512,
     393,   936,     0,   874,   830,   831,   843,     0,   843,   843,
       0,     0,   922,     0,  1037,     0,   927,   769,   599,   959,
     958,     0,   600,     0,   920,     0,  1513,  1514,  1505,   477,
     919,   941,   925,  1817,   952,   641,   979,   811,   709,   658,
     649,   733,   652,   651,   695,   717,   663,   713,   711,   681,
     713,   713,   688,   687,   705,   691,   671,   781,   781,   670,
     708,   781,   692,   690,   694,     0,   696,   713,   701,   689,
     693,   710,   686,   683,   707,   733,   717,   717,   667,   706,
     781,     0,   699,   733,   737,   669,   781,   788,     0,     0,
     733,   735,  1929,   152,   140,     0,     0,   903,   905,     0,
       0,   906,  2570,     0,  2572,     0,  1083,     0,    99,     0,
       0,   382,   451,   401,  2462,     0,   208,  1120,     0,     0,
     198,   200,   201,     0,     0,     0,   574,  1853,  1852,   462,
     559,   580,     0,     0,     0,  1681,  1676,  1528,     0,  1376,
       0,     0,     0,     0,   775,   786,   784,   778,     0,   782,
     783,  1353,     0,     0,  1326,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1212,     0,  1306,     0,     0,
       0,     0,     0,     0,  1241,  1239,  1240,   790,  1292,     0,
     803,   797,   795,   802,     0,  1517,  2509,   877,  1149,     0,
    1316,     0,     0,     0,  2474,  2474,  2474,  1654,  1653,     0,
    1652,  1656,  1077,  1085,     0,   494,   497,     0,     0,     0,
     513,     0,   557,     0,     0,     0,  1650,  1638,  2506,  1627,
    1630,  1924,  1408,  1454,  2395,  1104,     0,  1490,  1572,  1569,
       0,  1562,  1564,  1566,     0,  1918,  2312,  2314,   999,     0,
       0,  1004,  1414,  1412,  1422,     0,  1377,  1409,  1409,     0,
    1377,     0,     0,     0,  1661,  1506,  1663,  1410,  1442,  1424,
       0,  1511,     0,     0,   935,     0,     0,     0,     0,     0,
       0,   965,     0,   978,   924,   945,   967,     0,   737,  1049,
    1503,   940,   942,  1025,     0,   627,     0,   815,   657,   650,
     668,   666,   722,   712,     0,   722,   722,   677,   695,   672,
       0,   781,   685,   676,   697,   700,   702,   704,   722,     0,
     781,   665,   664,   674,   661,   722,   745,     0,     0,     0,
     741,     0,   809,     0,   748,   645,   738,   740,     0,     0,
     698,   781,   654,   789,   788,   656,   781,   788,   722,     0,
     736,   722,     0,   138,   143,   154,   155,   894,  2569,     0,
    2567,     0,  1079,  1452,   104,     0,     0,   211,   209,   210,
       0,   204,   206,   201,  2580,     0,  2587,     0,     0,  2585,
     464,   466,   474,   560,     0,     0,  1512,   872,     0,     0,
       0,  1672,  1249,   731,   729,   732,   730,   777,   776,   780,
       0,   779,   788,   718,     0,  1252,  1253,  1277,  1347,  1338,
    1275,     0,  1229,  1307,     0,     0,  1284,  1259,  1262,  1260,
    1265,  1266,     0,  1291,     0,  1112,  1112,   619,  2522,  1151,
    1801,  2477,     0,     0,  2473,  2471,     0,  2472,  2470,  2444,
       0,  2399,  2400,  2398,  2385,     0,     0,     0,  1120,   502,
       0,   519,   518,   515,  1517,  1640,  1642,  1648,  1637,     0,
    1491,  1506,   762,  1565,     0,  1114,  1001,     0,     0,   997,
       0,  1393,     0,  1397,  1402,  1398,     0,  1389,  1387,     0,
    1528,  1446,     0,  1517,  1512,   938,     0,   640,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   964,  1894,
     954,   478,   956,   921,     0,   926,   595,     0,   814,     0,
     819,   726,   727,   728,   678,   723,   725,     0,   680,   648,
     673,   703,   679,     0,   675,   662,   751,   750,   754,   743,
     755,     0,     0,   749,   739,   747,   742,   653,   655,   659,
     660,   646,     0,   647,  1928,   145,   907,   314,  2571,  1095,
       0,  2576,   126,  2584,  2594,   208,     0,     0,   149,     0,
     199,   769,   202,  2506,  1851,     0,   469,   846,     0,   871,
       0,   848,   850,  1529,   787,   785,     0,     0,  1309,  1311,
     791,     0,  1420,   620,  2450,  2449,  2448,  2445,     0,     0,
       0,     0,     0,     0,  2475,  2479,  1651,     0,     0,     0,
     510,     0,   506,   508,     0,   544,   558,  1499,  1512,     0,
    1517,     0,  1570,  1563,  1003,     0,  1415,     0,     0,     0,
       0,     0,  1660,  1434,  1435,     0,     0,  1440,  1444,  1425,
    1510,   937,     0,     0,   846,     0,     0,  1896,  1895,   930,
     978,     0,   812,     0,   816,   817,   818,     0,   810,   724,
       0,   878,     0,   744,   746,     0,   147,   340,     0,   326,
     312,     0,     0,     0,   316,   156,   159,   157,     0,   158,
     164,     0,   165,   166,   167,   168,   169,   160,   338,   339,
     163,   161,   162,     0,  1945,     0,  1946,  2574,     0,     0,
    2573,   175,   205,     0,     0,   141,   150,  2588,   752,   467,
     465,     0,  2502,     0,  1645,   113,   847,   863,   862,   852,
    1512,     0,     0,   115,   849,   865,   856,   117,   851,   864,
     854,   716,  1227,  1293,  2446,  2480,  2483,  2481,  2482,  2484,
    2478,     0,  1406,  1121,     0,   503,   504,     0,   522,     0,
    1645,     0,     0,  1645,  1645,  1645,  1645,   537,   545,   547,
       0,  1500,  1501,     0,  1496,  1498,  1492,  1553,   763,  1854,
    1005,  2509,  1394,     0,  1399,     0,  1391,  1430,  1430,  1441,
       0,   846,   632,   848,   850,   957,     0,   813,     0,     0,
     781,     0,   781,   146,     0,   139,     0,     0,   325,   328,
       0,     0,   331,   321,   320,   322,     0,   315,   314,   314,
     368,   319,   365,   364,   357,  2506,     0,     0,     0,  2595,
     207,  1120,   153,     0,   471,   470,   861,     0,   853,   870,
     873,     0,   857,   855,  1657,  1665,     0,  1841,     0,   511,
     510,   507,     0,   520,     0,  1645,  1645,     0,     0,     0,
       0,     0,   517,   546,  1645,  1512,     0,  1103,     0,  1862,
    1416,     0,     0,     0,  1438,  1436,   636,   635,   633,   634,
       0,   825,     0,   824,     0,   821,   820,   682,   879,   684,
     148,   341,   352,   355,   347,   327,     0,     0,     0,   317,
     314,     0,   301,   299,   300,   306,   307,   308,   309,   310,
     311,   302,   305,   303,   304,   314,     0,   216,     0,     0,
    2575,     0,  2577,     0,   185,   184,   176,     0,   314,  2581,
       0,  2589,  2506,   860,   866,     0,     0,   762,   498,   505,
     530,   523,   526,     0,   555,     0,     0,  1548,  1546,  1547,
     551,  1549,   552,   550,   548,   541,     0,   539,     0,  1497,
    1554,     0,     0,     0,     0,  1855,  1857,     0,  1571,  1396,
    1401,     0,  1431,     0,     0,     0,   943,   827,   828,   826,
       0,     0,     0,     0,   314,   348,     0,   323,     0,     0,
       0,     0,   214,   371,     0,   212,   359,   359,  2578,  2579,
     186,  2596,     0,   155,   175,   472,  1664,  1666,  1842,   530,
       0,   528,     0,   524,   521,   525,   553,   554,     0,   538,
       0,   549,     0,     0,     0,     0,     0,  1856,     0,     0,
    1863,  1865,  1433,  1432,  1447,     0,     0,     0,   349,   355,
     345,   353,   314,     0,     0,   313,   332,   367,   215,     0,
     369,     0,   314,     0,   358,   360,   362,     0,   137,  2590,
    1868,   527,     0,   535,   531,   533,   536,   544,   543,   540,
    1120,  1860,  1861,     0,  1858,     0,     0,  1864,     0,     0,
     823,   822,     0,   346,     0,     0,   344,   324,   329,   314,
       0,   314,   227,   226,     0,   218,   295,   366,     0,   217,
    2582,   314,     0,  1854,   529,     0,     0,   542,     0,     0,
    1557,  1559,  1859,  1867,  1866,  1439,  1437,   350,     0,   314,
       0,   314,     0,   314,     0,     0,     0,     0,     0,   213,
     314,  2591,     0,  1862,   534,   532,  1121,  1555,  1120,     0,
     342,   314,   330,   335,   372,     0,   221,   296,   297,     0,
     224,  2583,     0,  1870,  1560,  1558,   314,   314,   331,   334,
     370,     0,     0,   219,   220,   232,   231,   223,     0,  1869,
       0,  1874,   314,   314,   336,   240,   238,   314,   228,   236,
     230,     0,   237,   298,   225,     0,     0,  1881,     0,   222,
     239,  1872,  1873,  1871,  1876,     0,     0,  1878,  1879,     0,
    1843,   229,  1880,  1875,     0,  1882,  1884,     0,  1877,     0,
    1120,  1883,     0,  1121,  1885
};

/* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
      -1,    56,   590,  1452,    57,    58,    59,    60,    61,  1300,
      62,   796,  1232,  1751,  1752,    63,   533,    64,  1010,  1521,
    1522,  3010,  3011,  1523,    65,  2124,  3047,  3048,  3049,  1540,
     501,   502,  1976,  1977,  1035,  3031,  2997,  3795,  3001,  3906,
    4035,  3945,  2050,  3361,  3796,  3797,  3915,   528,  2122,  1472,
    4059,  1956,  4156,  1957,    66,   621,  1008,  1494,  1495,  3379,
    3380,  3628,  3381,  3620,  3621,  3622,  3623,  4282,  4130,  4225,
    4283,  4356,  4391,  4397,  4398,  4324,  4407,  4408,  4409,  4395,
     864,  4410,    67,   556,   557,   866,  1330,  1765,  1331,    68,
      69,   527,  1252,  1253,  1254,  1255,  2300,  1766,  2295,  2296,
    3162,  4325,  4393,  4131,  4132,  4042,  4133,  3918,  4134,  4046,
    4135,  3921,  4136,  4137,  4138,  4139,  4274,  4140,  4041,  4317,
    4127,  4128,  4319,  4373,  4389,  4141,  3928,  4036,  4212,  3929,
    4037,  4269,  4123,  4270,  4312,  4369,  4124,  4213,  4315,  4216,
    4142,  4148,  4284,  4143,  4149,  4144,  3933,  4053,  4147,  4051,
    4146,  4321,  4279,  2631,  3030,   609,   610,   632,  2114,   611,
    1024,   983,  1474,  1989,  1990,  2488,  2489,  2613,  2614,  2615,
    1981,  1982,  1983,  2102,  2103,  2104,  1963,  1964,  1965,  1478,
    1960,  1961,   612,   984,   994,  1984,  1985,  1986,  2619,  2106,
    2107,  2108,  2109,  1220,  1221,  2897,  2637,  3040,  3813,  3389,
    3952,  4162,  3041,  3042,  2557,  2958,  2060,    70,   545,   844,
    1297,  2349,  1298,  2784,  2785,  2786,  1801,  1802,  3699,  1806,
    2348,  3850,  4080,  3851,  3852,  2788,  3985,  2792,  3187,  3188,
    3469,  3701,  3855,  4173,  4082,  4244,  4171,  4240,  4172,  4242,
    4336,  4294,  4295,  4092,  4186,  4187,  4248,  4297,  3997,  3998,
    3999,  2368,  2797,  3704,  3634,  2096,  1464,  1465,   503,   504,
     505,   629,  2638,  2037,  2639,  2640,  2974,  2039,  2040,  2757,
    1384,  2971,  2947,  3675,  3037,  2978,  2979,  2980,  2981,  2982,
    2988,  2913,  2497,  2498,  2562,  2991,  3811,  3554,  3569,  3345,
    3346,  3347,  3348,  3349,  3350,  3351,  3066,  3067,  3064,  1083,
    3764,  3765,  3766,  3060,  3061,  3601,  3585,  3586,  3587,  3812,
     759,  3779,  3408,  1352,  1353,  3862,  1363,  1364,  2392,  1844,
    2393,  1468,  3409,  3410,  3411,  3595,  3121,  3672,  3127,  3128,
    3129,  2721,  2722,  2723,  2724,  2725,  2239,  3588,  2990,  3547,
    3757,  3760,  3898,  4115,  2499,  2914,  2500,  2917,   937,   506,
    2501,  2502,  1554,  1555,  3955,  3963,  3967,  3956,  3968,  3964,
    3957,  3958,  3959,  3970,  3966,  2644,  3635,  3636,  2906,  3137,
    3900,    71,  1482,   977,   986,   982,  1000,   616,  1483,  2051,
    2568,  3607,   599,  2041,  3539,  3274,  3543,  2042,  2926,  2043,
    3261,  3524,  2044,  3291,  3541,  3754,  2927,  2928,  2045,  2046,
    2047,  3273,  3283,  3890,  2503,   124,  2287,  2986,  2544,    72,
    1427,  2433,    73,   948,   949,   950,  2864,  2865,  3238,  3501,
    3719,   944,   945,  1430,  1431,  1922,  2432,    74,   624,  1527,
      75,  1308,  2360,  2361,  2362,    76,  1001,    77,    78,   625,
    1534,  1535,  1536,    79,  1293,   131,    80,   852,  1303,  1305,
    1306,    81,   620,  1002,  1003,  1004,  1005,  2056,    82,  1793,
    2325,  2326,  2327,  2328,  1491,  2570,  1492,  1493,  2065,  3180,
      83,    84,   587,  2247,   562,   873,   563,   564,  1838,  2383,
    3676,   884,   885,   886,  2825,  1342,  1343,  1344,  2388,  2830,
    1080,   760,   761,   762,   763,  1174,  1175,  3589,   764,  1184,
    1712,   765,   766,   767,   768,   769,   770,  1739,  3093,  3094,
    3427,  2274,  2275,  2276,   771,  2161,  3078,  2175,   772,  1167,
    1697,  1628,  3419,  3085,  1571,  2144,  2674,  2754,  2241,  1105,
    1106,  1070,  2151,  1577,  1929,  1930,  1931,  1932,  1933,  3512,
    3511,  3513,  3867,  3722,  3869,  3726,  2444,  1821,  1822,  1934,
    1935,  2866,  3720,  4011,  2242,  2243,  2244,  3445,  2867,  3242,
    2885,  2886,  3733,  2435,  1936,  2873,  4104,  3876,  3877,  4205,
    4204,  3878,  3731,  3732,  3517,  3518,  3006,  3007,  3008,  2811,
    1618,  1619,  1626,  1280,  1281,  1572,  2323,  2773,  3711,  3859,
    2265,  3487,  3857,  4004,  2048,  2953,  2954,  2385,  2386,  2889,
    3258,  3288,  1387,  3677,  2775,  1895,  1896,  3641,  4396,  2898,
    2586,  4180,  2345,  2346,  4097,  4252,  4339,  4340,  4341,  3215,
    3216,  3491,  3492,  2387,  2822,  3217,  3712,  4009,    85,   510,
      86,  1749,  2280,  1229,  2292,  1012,  1310,  1558,  1559,   784,
     523,  1222,  1223,  1224,    87,   534,  2324,    88,   552,  1819,
     836,   856,  1311,  1312,  2369,  2798,  2805,  2370,  2810,  3478,
    2800,  3192,  3193,  2282,  2283,  2801,  3195,  3475,  3459,  3460,
    3175,  3696,    89,   575,  3253,  2880,  2881,  4074,  4075,   857,
      90,   509,  1057,  2652,  1564,  2132,  1058,  1059,  2135,   650,
     651,    91,   952,   572,  1409,  1410,  1411,  1911,    92,   566,
     938,  2852,  2858,  1890,   848,  1225,  1391,   941,  1392,  1876,
    2415,  1373,    93,   973,   972,  1459,    94,   595,  1460,    95,
     797,  1246,  1761,  2761,  3148,  1247,  1248,  2293,    96,   553,
     861,   862,  1315,  1824,    97,   547,   849,  1812,    98,   538,
      99,   100,   840,  3181,  4167,  4290,   542,  1795,  1289,  3390,
    4099,  4195,  4196,  4198,  4260,  4261,  4333,  4401,  4423,  4417,
    4426,  4427,  4430,  4435,  4436,   774,   959,   775,  3748,   776,
     777,   778,  2806,  2807,  3259,   779,  2808,   780,  2907,  1013,
    1561,   531,   481,  2575,   606,   960,  2781,   782,  3935,   980,
    1028,   483,   484,   101,   565,   900,  1368,  1358,  1367,  1864,
    2409,  1868,  2411,  2412,  3229,  2848,  3230,  2849,   942,  1860,
    1865,  2850,   903,  1853,  1854,  1855,  1856,  2841,  1850,  1874,
     102,   841,   488,  1291,  1292,  2334,   103,   574,   104,  1282,
    1789,  1790,  2320,  2772,  2321,   105,   869,   106,   823,  1783,
     824,  1258,   825,   826,  1272,  1266,  1275,  1269,  3838,  3688,
    3689,  2308,  1228,  1029,  1030,  1775,  2302,  2303,  3454,  3691,
    3166,  3844,  3845,   107,   132,   491,   627,  1019,  1336,   108,
     109,   110,   111,  1339,  1447,  2379,  1448,  2248,  1449,  1450,
    1943,  1836,  1693,  1694,  3135,  1164,  1165,  2251,  2730,  2731,
     887,   636,  1045,  1037,   125,   126,   127,   639,   640,   128,
     998,   999,  2569,  3003,  3363,  3610,  3611,  3801,  3940,  1039,
    3807,  4232,  4360,  1040,  1041,  3032,  3809,  4063,  4234,  4331,
    1042,  2628,  3376,  3941,  4158,   112,   961,   584,  1445,  1440,
    1442,  1939,  2451,   113,   114
};

/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
   STATE-NUM.  */
#define YYPACT_NINF -3735
static const int yypact[] =
{
    3315,  2452,    83, -3735,  -124,   635, 46007,   147,  1236,  1236,
     342,  3828, -3735, -3735, -3735, -3735, -3735,  3254, -3735, 46007,
      83,   884, -3735, 23511, -3735, -3735,   624,   187,   157,  1236,
      83, -3735, 46007, -3735,   576,  1107,    83, -3735, -3735, 41151,
   -3735,   342, 46007, -3735, -3735, -3735, 41151,  -120,   558,   548,
     696, -3735, -3735, 46007,  1689,   722,  1169,  1346, -3735, -3735,
     970, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735,
   -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735,
   -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735,
   -3735, -3735, -3735, -3735, 24122, -3735, -3735, -3735, -3735, -3735,
   -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735,
   -3735, -3735, -3735, -3735, -3735,  1431, 46007,  1441, 46007, -3735,
    1408, 46007, 39330, 46007,  1087,  1537, -3735, -3735,  1661, -3735,
   -3735,  1236,   342, -3735, -3735, -3735, -3735, -3735, -3735, -3735,
   -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735,
   -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735,
   -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735,
   -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735,
   -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735,
   -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735,
   -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735,
   -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735,
   -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735,
   -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735,
   -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735,
   -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735,
   -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735,
   -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735,
   -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735,
   -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735,
   -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735,
   -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735,
   -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735,
   -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735,
   -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735,
   -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735,
   -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735,
   -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735,
   -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735,
   -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735,
   -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735,
   -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735,
   -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735,
   -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735,
   -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735,
   -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735,
   -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735,
   -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735,
   -3735, -3735,  1029, -3735, -3735,  1244, -3735, -3735, -3735, -3735,
   -3735,  1780,  1594, -3735,  1631, 39330, -3735, 46007, -3735, -3735,
   -3735,   181, -3735,  1270, -3735,  1287,  1618,  1630,  1632,   100,
   11113,  1601,  1601,  1601, 46007,  1649,  1601,  1601, 46007, -3735,
    1601, -3735,  1601,  1236, -3735, -3735, -3735,  1730,  3548, 46007,
    1510,   149,  -117, 39330,   210, 46007, -3735, -3735, 11113, -3735,
    1654, -3735, -3735, -3735,  1236,  1837,  1702,   224, 46007, -3735,
   -3735,  1236,   960,    21,  1311, -3735, -3735,  1449, -3735,  3818,
     158, -3735, -3735, -3735,  2440, 25955,  5598,  1449, -3735,  -123,
   -3735, -3735, -3735, 46007,  1236,  1647, -3735, -3735,   267,   267,
     267, -3735,   267, -3735,   267, -3735,   722,  1308, -3735, -3735,
    1307, 46007,  1034,  1786,  1453, -3735, -3735,  1335,   702, -3735,
    1393, 36295, -3735, 46007, -3735, -3735, -3735, -3735,  1605, -3735,
   -3735, -3735,  1387, -3735, 23511, 46007,  1477, -3735, -3735, -3735,
   23511,  1374, 46007, -3735, 23511, 23511,   189,    23,    53, 46007,
   46007,  1824, -3735,  2004, 36295,  1583, -3735,   356,  1268,  1661,
    2011, -3735,  1594, -3735, 46007, 46007, 46007, -3735, -3735, -3735,
   41758,   100,  1391,  1400,  1414, 15509, -3735,  1420,  1422,  1424,
   11113,  1432,  1437,  1455,  1460,  1463,  1468,  1479,  1484,  1489,
    1489,  1502,  1543,  1547,  1561,   484,  1563, -3735,  1582,  1595,
    1628, -3735, -3735,  1637,  1641,  1656,  1658, -3735,  1676,  1678,
    1684, 11741,  1693,  1696, -3735, 20452,  1704,  1712,  1714,  1719,
    1722,  1725,  1729,  1731,  1747, -3735, -3735, 11113,  1502, -3735,
   -3735,  1750, -3735,  1757,  1766,  1768,  1772,  1778,  1790,  1795,
    1797,  1810,  1813,  1820,  1823,  1829,  1840,  1842,  1845,  1847,
    1502, -3735,   887,  1853,  1859,   916,  1868, -3735,  1882, -3735,
     269,  1884,  1489,  1502,  1502,  1886,  1888,  1891,  1894,  1902,
    1908, 15509, 15509, 15509, 11113, -3735, 46007, -3735, 46007, -3735,
    2035,  3346, -3735,  2385, 15509,   183, -3735, -3735, -3735, -3735,
   -3735, -3735, -3735,  1475,  1534, -3735, -3735, -3735, -3735, -3735,
   -3735,  1910,  1513,  1981, 46007, 46007, 46007,  1799, 46007, 46007,
   39330,   839, 46007, 36295, -3735,  1601,  1645,  3435, 29005,  1856,
    1775,  1557, -3735, -3735, -3735, -3735, -3735,  1945, -3735, -3735,
    1720, -3735,  2042, -3735, -3735,   133, -3735,   128, -3735, -3735,
   -3735, -3735, -3735, -3735,  2093,  1700, -3735, -3735,    88, -3735,
   -3735, 46007, -3735, -3735, -3735, -3735,  2121,  1970,  2035,  2474,
     215, 23511, -3735,  1317, -3735,  -190, -3735, -3735,  2265, -3735,
   -3735, 36295, 23511, -3735, -3735, -3735, 21063, -3735, -3735,  2491,
   -3735,  1916, -3735, -3735,  1534,  3851, -3735,  1856,  2195, -3735,
    2197,  2101,    23,  1994, -3735, -3735, -3735, -3735, -3735, -3735,
   -3735, -3735, -3735, -3735,  1949,  2440, -3735, -3735,   258,  2107,
    1941,   364,   428, 33867,   877,   432,    78, 26565, 34474,  1953,
   -3735, -3735, -3735,    86, -3735,  2426, -3735,   634, -3735,  1976,
    1121,   634, 36902,  2344,   199, -3735,   330, -3735,  2423, -3735,
   -3735, -3735, -3735,  2106,  2097, -3735, -3735,   337,  2379, -3735,
    2476, -3735,    68, -3735,  2130,  2344,   634,   199, -3735,  2375,
    2503,   474,  -137, -3735, -3735,   -77,   -69,  2578, -3735,  2039,
   -3735, -3735, 23511, -3735, -3735,  2121, -3735, -3735, -3735,  2041,
   -3735,  2314,  2163, -3735, -3735,   715, -3735,  2092,   730,  2585,
   -3735, 39330,  2253, 37509, -3735, -3735, -3735,  2612,  2632,  1489,
    2119, -3735, -3735, -3735,  2747, -3735, -3735,  2137,  2673,  2673,
    2673,  2772, -3735, -3735, -3735, -3735, -3735,  2316,  2191, -3735,
    1477, 23511,  2552,  2171, -3735, -3735,  2415, 11113, -3735, -3735,
    4773,   653, -3735, -3735,   179, -3735,  2745,  2372, -3735, -3735,
   -3735, -3735,  2636, -3735, -3735,  2747,  2699,  2673,  2590,  2189,
   -3735, -3735, -3735, -3735, -3735, -3735,   233, -3735, -3735, -3735,
   -3735, -3735, -3735, -3735,   265, -3735, -3735, -3735, -3735, -3735,
    1477, -3735, 23511, -3735, -3735, -3735, 23511, -3735,  2190, -3735,
    2193, -3735, 11113, 11113,   333,  2753,  2810,  2810,  2810,  2035,
    2229, 11113, 11113, 11113, 11113, 11113, 11113, 11113,   335,  2205,
   -3735, -3735,   -75, -3735,  2209, 11113, 11113, -3735, 11113, 11113,
   24733, -3735,  4303, 11113, 11113,   314,  2700, 11113, 11113, 11113,
   11113,  2561, 11113, 11113, 24733,  2827,  2213, -3735,  2216,  1095,
   11113, 11113,  1272, 11113, 11113, 11113, 11113, 11113, -3735, -3735,
   11113, 11113, 11113, 11113, 15509, 11113, 11113, 11113, 11113, 11113,
   11113,  2225, 11113,  2810,  2810, 11113, 11113,  1284, -3735, -3735,
   11113,  2689,  2689, -3735, 11113,  7973, 11113, -3735, -3735, -3735,
    2230, -3735, -3735, -3735, 24733,  2810,  2810, 11113, 11113, 11113,
    2753,  2753,  2753,   240,  2233,   816, 11113, 27175,  2222, -3735,
   -3735, -3735, -3735, 11113, 11113, 11113, -3735, 15509, -3735, -3735,
    2363, -3735, -3735, -3735, 12369, 15509, 15509,  2235, 15509, 15509,
   15509, 15509, 15509,  2601, 15509, 15509, 16137, 16765, 15509, 15509,
   15509, 15509,   902,  2753, 39330, 15509, 11113, -3735, -3735, 46007,
   -3735, -3735, -3735,  2236, 23511,   839, -3735, -3735, -3735, -3735,
   -3735, -3735,  2239,   839, -3735,  2714, -3735, -3735,  2243, 23511,
   -3735,  2240, -3735,  2600, -3735,  2602,  2606,  2609, -3735, -3735,
   -3735,  2838,  2618, -3735,  2621, -3735, -3735,  2272, -3735, -3735,
   17393, 39330, -3735,  2276, -3735,  2750, -3735, -3735, -3735, -3735,
   -3735, -3735,  2377, -3735, -3735, -3735,  2285, -3735, 36295,  2285,
   -3735, -3735,  2285, -3735, -3735,  2285,   714,  3801, -3735, -3735,
   46007, -3735, 46614, -3735, 21063,  -124, -3735, -3735, -3735,  2646,
     138,  2290, -3735, 23511, -3735,    74,    74,  2533,  1283, 39330,
   -3735, -3735,   113,  2294,  2371,  2300, -3735,  2382, 23511, 23511,
   -3735, -3735, -3735,  2553, -3735,  2947,    21, -3735, -3735, -3735,
   -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735,
    2334,  2808,  2338, 36295,   766, -3735, 46007, -3735,  1350, -3735,
   -3735, -3735,  2339, -3735, 11113, -3735, -3735, 46007, -3735, -3735,
   -3735, -3735, -3735,  2900, 11113, -3735, 36295,   718,   735,   858,
      86, -3735, -3735, -3735, -3735, -3735, 46007, 42365,  2345,  8601,
    2734,  -124, 11113, -3735,  2353,  1594, 46007, 46007, 46007, 23511,
   46007, 23511, -3735,     3,     3, -3735, 35081, -3735, -3735, -3735,
   -3735,   634, 46007, 46007,   634, 36295, -3735,   199, 46007,   634,
   -3735,  2736,  2454, -3735, -3735, -3735,  2814, -3735, -3735,  2800,
    2364, -3735,  2734, -3735, -3735,   199, -3735, -3735, 23511, -3735,
   -3735,   199, -3735,   199,   199,   634,   634,  2418, -3735, -3735,
    2368, -3735, -3735, -3735,  2510,  -123, -3735,   686,   267,  2623,
   -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735,
    1088, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735,
   -3735, -3735, -3735, -3735,   132, -3735, -3735, -3735,  1843,  2884,
   -3735, 39330,  1593,   -88,   818,  1593,  3021,  -124,  1343, -3735,
    1343, -3735,  3433,  2654,   236, 23511, -3735,  2395, 42972, 23511,
   -3735, -3735, -3735,  1401,  2398,  2405,  2035,  2880,  2882,  2883,
    2886,  2887,  2888,  2890,  2898,  2899,  2903,  2908,  2911,  2913,
    2914,  2915,  2919,  2924,  2927,  2928,  2930,  2933,  2935,  2936,
    2938,  2421, -3735, -3735, -3735, -3735, 23511, -3735, -3735, -3735,
   -3735,  2478, -3735, -3735, -3735, -3735,  1478, -3735, -3735, -3735,
     134,  2278,  2490,  2526,    75, 36295,  2921, 46007, 46007,  1594,
   46007, 46007, -3735, -3735,  -176,  2751,  2752,  2755,  2496, -3735,
    2553, -3735,  1250, 46007,  2939, 30832, -3735,   323,   502, -3735,
    2810,  2500, -3735,  2506,  2515,  2517, 11113,    36,   310,   559,
    1314,  1031,   936,   445,   346, -3735,  2518,  2509, -3735,  2519,
   -3735, -3735,   589,   610,  1179,  1181,  2525,  2529, -3735, -3735,
   -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735,
   -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735,  2948, -3735,
     732,  1113, -3735, -3735, -3735, -3735,  2530, -3735, -3735,  1202,
     753,   813,   300,  2537,   855,  1469,  1474,  2536, 24733, 46007,
    2810,  2532,  1204,  1217,  2810,  2539,   899,  1234,  1492,  1539,
    1566,  1252,  1275,   907,  1572,  3440,  1301,   969,   974,  1306,
     995,  1052, -3735,  1321,  2541,  2542,  1072,   178,  2810,  2543,
     376,  2535,  2545,  1379,  9229,  9857, 10485,  1018,  1074, -3735,
    2544, -3735,  2216,  2554,  2555,   383,   291,  1389, -3735, 11113,
   -3735, -3735,   826,  1145,  2592,   170,   858, -3735,  2703, 46007,
    1978,   143, -3735, -3735, -3735, -3735, -3735, -3735,   692, -3735,
    2557, -3735,  2558,  2066,  2562, 11113,   871,  2562,  3992,  1339,
    1339, 15509,  2484,  3097, 11741,   514, 11741,   514,  2562,  2562,
    2562, -3735, 15509,  2563, 15509, 15509, -3735,  2753,  2035,  2565,
     924, 46007, -3735,  2239,   965, -3735,    86, 36295,    59, 23511,
   39330,  2566, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735,
    3939, 23511,  2650,  2659,  2661, -3735, 29615, -3735, -3735, -3735,
   -3735, 29615,    -4, -3735, 46007, -3735,  2643, -3735, -3735, -3735,
   21674, 21674, -3735, 21674, -3735, -3735,   297,   312,  3449,  2603,
   -3735, -3735, -3735, 23511, -3735,  2980,   725, 23511,  2395,  2582,
   -3735, -3735, -3735, -3735, -3735,  2653,  2685, -3735,  2584, -3735,
   11113,  -124, -3735, 36295, 36295, 23511, 23511,   693, -3735,   942,
    2587, -3735, -3735, -3735, -3735, -3735,  3851, 17393,  3011,  3030,
   21674, 21674, 21674, -3735, -3735, -3735, -3735, -3735,   140,  2035,
   -3735,  2588, -3735, 38116, -3735,  2035,    86,  2595,  2604, -3735,
   -3735,  2967,   580, -3735,  2608,  2610, -3735,  2594,  2597,  2605,
   43579, 11113, -3735,   735, -3735, -3735,    86, -3735, -3735, -3735,
   15509,  1582, -3735,  2035, -3735,  -124,  3040, -3735,  2035,  2607,
   46007, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735,
   -3735, -3735, -3735, -3735, -3735, -3735,   -36, -3735, -3735, -3735,
   -3735, -3735, -3735, -3735,   634, -3735, -3735, -3735, -3735, -3735,
    2826,  2344,  2379,  3040,   634,   199, 23511,   634,   634, -3735,
   -3735,  1960, -3735,   -77, -3735, -3735, -3735, -3735, 46007,  2892,
    2768, -3735,  2619, -3735, -3735, 23511, -3735,  2622, -3735,  3060,
    3201,  2344, -3735, -3735, -3735,    86,    86,  2912, -3735,  -124,
    2746,  2748,  2758,  2760,  2761,  2785, -3735, -3735,  -124,  -124,
   -3735, -3735,    86, -3735,  2009, -3735, -3735, -3735, -3735,  -124,
    -124,  -124,  -124,  2820,  -124,  -124,  1585, -3735, -3735,    86,
      86, -3735,  2271, -3735, -3735, -3735, -3735, -3735, -3735, -3735,
     253, -3735,  2766,  3185,  2877,    86,    86,  3185,    86,  2881,
    2891,    86,    86,  2720,  3140,    86,  3027,  2744,  2940,  3032,
      86,  2893, -3735,  2757,  3150,    86,    86,    86,    86,  3185,
    2901,  3236,    86, -3735,    86,  2907,  2909,   137,  2910,  2922,
      86,   910, 46007,    86,  2923,    86, -3735, -3735,  4595, -3735,
   -3735, -3735, -3735, -3735, -3735,   587, 22287, -3735, -3735,   111,
   -3735,  2851, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735,
   -3735, -3735, -3735, -3735,  2672, -3735, -3735, 11113,  2683,  2820,
    -124,  2820,  2820,  -124,  -124,  1136,  -124,  2820,  2820,  -124,
    -124,  -124,  -124,  -124,  -124,  -124,  2820,  2820,  -124,  1402,
    -124,  2820,  4773, -3735, -3735, -3735, -3735,   146,    86,    86,
      86,    86, -3735,  1879, -3735, -3735, -3735, -3735, -3735, -3735,
   -3735, -3735, 39330,  3024,  2626,   636, 39330, -3735, 46007, -3735,
    1623, 46007,  2684,  -134,  2992,   208,   208, -3735, 23511, 23511,
   23511, 46007,  2728, -3735, 30832, -3735, -3735,   686, -3735,  2679,
   12997, -3735,  2690, -3735, 11113, -3735, -3735, -3735,  1142, 11113,
   11113,  3169,  1323, -3735, 38723, -3735, -3735, -3735, 11113, 38723,
    1323, 11113, -3735,  2694, -3735,  3089,  3092, -3735, -3735, -3735,
   -3735, 11113, 11113, -3735, 11113, 11113, -3735, 11113, 11113, 11113,
   11113, 11113, -3735, -3735, 15509, -3735,  2693,  2701, -3735, -3735,
   -3735,  2702, -3735, 11113, -3735, -3735, -3735, -3735, -3735, -3735,
   11113, -3735, 11113, -3735, 11113, 11113, -3735, 11113, 11113, -3735,
   -3735, -3735, 13625, 11113, 11113,  2705, -3735, -3735, 11113, 11113,
   11113, -3735, 11113,   443, 11113,   644, 11113,  1297, 11113, -3735,
   11113, -3735, -3735, -3735, -3735, 11113,  1499,  2653,  2820,  2710,
   -3735,  1587, -3735, -3735,  2162, -3735,   826,  2711, -3735, -3735,
    1350, -3735, -3735, 39330, 11113, -3735, -3735, -3735, -3735, -3735,
   -3735, 15509,   404,  2715, 15509, -3735,  3992,  2561,  2561,  2089,
   11113,   871,  3992, 11113,  2717,  2718, -3735, 11113, 46007, -3735,
   -3735, -3735, -3735, 39330, -3735, -3735, -3735, -3735,    59, -3735,
    2240, -3735,  2395, -3735,  3186,  2721, -3735, -3735, -3735, -3735,
   -3735, -3735,  1589, -3735, 36295,  2719, -3735,  2724,  2796,  2798,
    2812, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735,
   -3735, -3735, -3735,  2344,   942, -3735,  2732, -3735, -3735,  2415,
    2821,  2762,  3098, -3735, -3735, -3735, 46007, 15509, -3735, -3735,
   -3735, -3735, -3735, -3735, -3735, -3735, -3735,  3320,  2743,  2749,
   46007,  2035, -3735,  2818, -3735, -3735, -3735, -3735, -3735, -3735,
   -3735, -3735,   797, -3735, -3735,  2756,  2756, 19228, -3735, -3735,
   -3735, 46007,  3217, -3735,  3009, 36295,  3192,  3195,  3196,   893,
   -3735,   388, -3735,  1446,  3151,  2344, -3735,  3198, 39937, -3735,
   31439, -3735, -3735, -3735, -3735,   718,  2850,  2852,  1364, -3735,
   -3735,  3152,  2983, -3735, -3735, -3735,    86,  2035, -3735,  2345,
    8601,  2773, 27785, -3735,  1136, -3735,    11, -3735, 35081, 35081,
   -3735,  3045, -3735, -3735, -3735, -3735,  2603,   199, -3735, -3735,
    3250, -3735,  2780,  2833, -3735, -3735,   931,  3170,  3172, -3735,
    3046,   966,  3046,   931,   931, 24733,   686,  2553, -3735,  2820,
    3099, -3735, -3735, -3735, 38116, 35688, -3735, -3735, -3735, -3735,
    3317, -3735,  3318,  1368, -3735, -3735,  2384,    17, -3735, -3735,
   -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735,
   -3735, -3735, -3735,  3021,  2384,  2384,  1709, -3735,   129, -3735,
   -3735, -3735, -3735, -3735, 25344,    83, -3735,   273, -3735, 25344,
   -3735,  1401,  1401, -3735, 25344,    83,  1136,  2820, 25344,  2820,
   44186,    83,  -124,  -124,  2124,    86,  2820, -3735, -3735,  3177,
   46007,  3179, 25344, 25344, -3735, 39330, 46007, -3735,    86,   777,
    2820,  1136,  1136, 25344,    83, 24733,  2759, -3735,  -124,    83,
   -3735, -3735, -3735, -3735, 23511,    83,    83,  3016, -3735, -3735,
   -3735,  2820, 44186, -3735, -3735,  5865, -3735, -3735, -3735, 18617,
   46007,   967,   834, -3735,  2801,   908,  1215,  2895,  1556,  2806,
    2819, 44793,  2035,  2820, -3735, -3735, -3735, -3735, -3735, -3735,
   -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735,
   -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735,
   -3735, -3735, -3735, -3735,  -124,  2653,  2384,  2384,  2056, -3735,
    3067,  3249,    86, -3735,  1648, -3735, -3735, -3735, -3735, -3735,
   -3735, -3735, -3735, -3735,  2897, -3735,  3432,  3004,  2828, -3735,
   -3735,   217, -3735, -3735,  1054, 23511, 18006, -3735,  3072, -3735,
    2671, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735,
    2825,   686,  2603,  1253,  2603,  2841, -3735, 11741,  1412, -3735,
    2035, 11113,  2035,  2059, -3735,  2837,  2837,  2840, -3735,  2845,
    2837,  3228,  2840,  3231,  2846,  2847,  1416,  2848,  2853,  1475,
   -3735, 11113, 11113,  1447,   427,  1491,   -89,  1079,  1084,   451,
   -3735,  1508,  3686, -3735, -3735,  1521,  1548,  1578,  1596,  1103,
    1611,  1613, 11741,  1619,  1245,   467, -3735,  1626,  1116,  1125,
    1708, 11113,  1710, 11113,  1716, 11113,  1741,  1764,  1782,  2859,
    2859,   119, -3735,  2844, -3735, -3735, -3735,  2855, -3735, -3735,
    1949,  2162, -3735, -3735,  2860, -3735, -3735,  2854,  2035,  2863,
   -3735, -3735, 11113, -3735,   183, -3735, -3735, 15509,   486,  2865,
   -3735,  2035, -3735, -3735,  2866,  1475, -3735, -3735, -3735, -3735,
   -3735,  2874,  3551, 29615, -3735, 46007,  -233,  2873, 32046, 36295,
   36295, 36295,  2871, 11113, -3735, -3735,  3135, 23511, -3735,  3279,
   -3735, -3735, -3735, -3735,  2875,  2878, -3735, -3735, -3735,  3992,
    3241,  3125, -3735, -3735,  2894, 36295, -3735,  2440, 24733, -3735,
    2889, -3735,  2889,  1126,  2902,  1629, -3735, -3735, -3735,  2885,
    1994,  1638, -3735, 17393,  3325,  2189, 36295, 36295, 36295, -3735,
    2603,  2603,   120,  2944,  3280, -3735, -3735, -3735, -3735, 45400,
   -3735, -3735, -3735, -3735,  1139, -3735,  2904,  2905,   261,  3118,
   -3735, -3735, -3735, -3735,  8601, -3735, -3735, -3735, -3735, -3735,
   -3735, -3735,  2344, -3735, -3735, -3735, -3735, -3735,  2344, -3735,
     634,  -124,  1664,  3378, -3735,  3149,  -181,  1145, -3735,  2212,
   -3735, -3735, -3735,  3289,   931,  3046,  3046,  3291,  3176,   827,
    2916, -3735,    86, -3735,  1383, -3735,  2440, -3735, -3735, 11113,
   -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735,
   -3735, -3735, -3735, -3735,   253, -3735, -3735, -3735, -3735,  2925,
    3295,  3297,  1401, -3735, 25344, -3735, -3735, 25344, 25344,    52,
   44186, -3735, -3735, -3735, -3735, -3735, -3735,  2932, -3735, -3735,
    2653, -3735, -3735, 35688,  -124, -3735, 25344,  2932, -3735, -3735,
     434, -3735,  2945,  -124, -3735, -3735, -3735, -3735, -3735, -3735,
   -3735, -3735, 44186,  2941, -3735,  1450, -3735, -3735,  1837, -3735,
   44186, -3735, -3735, -3735, 44186, -3735, -3735, -3735, -3735, -3735,
   -3735, -3735, -3735, -3735,  2926,  2839,  1200, -3735,  2929,  2942,
   -3735, -3735, -3735, -3735, 46007, -3735, -3735, 23511, -3735, -3735,
   -3735,  5134, 46007,  3154, -3735, 11113, 11113,  3194, 46007,  3197,
   -3735,  3496, 46007,  3552, 44186, -3735,  2952, -3735,  2953, -3735,
    1650, -3735, -3735, -3735, -3735, -3735, -3735, -3735,  2949, 46007,
    2384,  2245, -3735, -3735,  -124,  1054, -3735, -3735, -3735, -3735,
    3216,  3220, 46007, -3735, -3735, -3735, -3735,  3094, -3735, 23511,
   -3735,  3123, -3735,  2965,   206,  4069, -3735,  2969,  2970,  2977,
   30832,  2603,  3235, -3735, -3735,  2561, -3735,  2035, 11113,   890,
   -3735, -3735,   131,  3246, -3735,   903, -3735, -3735, -3735, -3735,
   -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735,  2966,  2561,
    2561, -3735, -3735, 11113, -3735,  3141, -3735, 11113, 11113, -3735,
   11113, -3735,   901,  2985,  3006, -3735, -3735, -3735, -3735, 11113,
   -3735, -3735,  2561, -3735, 11113, -3735, -3735, 11113, -3735, 11113,
   11113, -3735,  1831, -3735,  1835, -3735,  1850, -3735, -3735, -3735,
    2653,  2986,  3354, -3735, -3735, -3735,  2653,  3164, -3735, -3735,
    2653,  2820,  2339, -3735, -3735,   816, 46007, -3735, -3735,  1663,
   -3735, -3735, 11113, -3735, 39937, -3735, -3735,  3204, -3735, -3735,
   -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735,
   -3735, -3735, -3735, -3735, -3735,  3422, -3735, -3735, -3735,  -122,
    -122,  -122, 14253,  2035,  3480, -3735, -3735, -3735,  3279,  3370,
   -3735,   744, -3735, 46007,  3003,  1305, -3735,  1666, -3735, -3735,
   -3735,  1949,  3005, -3735,    86, 14253,  2756,  3123, -3735, -3735,
    1126, 24733, 31439, -3735, -3735, 46007, -3735, 36295,  2189,  2189,
    2189,  2344,  3429,  2821,  2821, -3735, 28395, -3735, -3735,  3156,
   -3735, -3735, 32653, -3735, -3735, -3735, -3735, -3735, -3735, 27785,
   43579, -3735, -3735, -3735, -3735, -3735,  -124,  3475,  3512,  1350,
    2217, -3735,   686, -3735,   931, -3735,  3393,  3394,   931, -3735,
   -3735, -3735, 24733,  2603, 14253, -3735,  1949,  2035,  3015,  1450,
   -3735,  -111, 11113, 25344, -3735, -3735, -3735,  3019, -3735, -3735,
    3526,  3527, -3735, 25344,  1478, 46007, -3735,  2900, -3735, -3735,
   -3735,  3115, -3735,  5134, -3735, 24733, -3735, -3735, -3735, -3735,
   -3735, 46007, -3735, 23511, -3735, 18617, -3735,  3029, -3735,  2837,
    2837,  2837, -3735, -3735, -3735,  2840, -3735,  2845,  3262, -3735,
    2845,  2845, -3735, -3735, -3735, -3735, -3735,   131,   285, -3735,
   -3735,   131, -3735, -3735, -3735,    67,  1222,  2845, -3735, -3735,
   -3735, -3735, -3735, -3735, -3735,  2837,  2840,  2840, -3735, -3735,
     131,  2837, -3735,  2837,  2784, -3735,   822,    80,  2837,  2837,
    2837,  3034,  3028, -3735,  2035,  2561,  3582, -3735, -3735,  3181,
    -124,  3523, -3735,  1685, -3735,  3041, -3735, 44793, -3735,  2820,
    3021, -3735, -3735, -3735, -3735,  3178,  1062, -3735,  3207,  3044,
    3049, -3735, -3735,  -124,  3047,  3053,  4595, -3735, -3735, -3735,
    3652, -3735, 46007, 46007, 46007,  2679, -3735,  3410,   973,  2035,
    3054,  3058,  3059,  3061,  3655,   153, -3735,  3657, 38723, -3735,
   -3735, -3735,  3066,  1690, -3735,  3068,  3070,  1898,   267,  3071,
    1900,  1135,  1697,  3359,  3442, -3735,  3288, -3735,  1920,  1086,
    1959,  1961,  1972,  2003, -3735, -3735, -3735, -3735, -3735,  3074,
   -3735, -3735,   185, -3735,  3076,  1014,  1145, -3735, -3735,  1699,
   -3735,  3434,  3335,   151,  3103,  3103,  3103,  1582,  2035,  1732,
   -3735, -3735, -3735, -3735,  3473, -3735, -3735,  3085,  3096, 46007,
   -3735,  3125,  2339, 24733, 14253,  3100,  3095, -3735,   730, -3735,
   -3735,  3105, -3735, -3735,  2189, -3735,  3681,  3524, -3735, -3735,
   39330,  3104, -3735, -3735,  3405, -3735, -3735, -3735, -3735,  -124,
    3583,  3352, -3735, -3735,  2619,  3148,  3159,   931,   931,  3166,
    3160, 11113, 11113,  3119, -3735,  3235, -3735, -3735,   268,  2339,
   11113, -3735,  2653,  3125, -3735,  2015,  3124,  3126, 46007,  3127,
    3129, -3735,  2857,   967, -3735, -3735, -3735, 23511,  2784,    83,
   -3735, -3735,  2932,   797,  3133, -3735, 46007,  3451, -3735, -3735,
   -3735, -3735,  -141, -3735,  3136,  -141,  -141, -3735,  2107, -3735,
    3167,   131, -3735, -3735,  3171, -3735, -3735, -3735,  -141,  3138,
     131, -3735, -3735, -3735, -3735,  -141, -3735, 39330,  -124,  2716,
   -3735,  3200, -3735,  3648,  3522, -3735,  2784, -3735,  3525,  3417,
   -3735,   131, -3735, -3735,  3741, -3735,   131,  3741,  -141,  3423,
   -3735,  -141, 46007, -3735, -3735, -3735, -3735, -3735, -3735, 46007,
   -3735,   990, -3735, -3735, -3735,  1738,  -124, -3735, -3735, -3735,
    3153,  3157, -3735, -3735, -3735,  1215, -3735, 46007,  5134, -3735,
   -3735, -3735,  3072, -3735,  1022,  1754,  1450,  3158,  1785,  1800,
   35081, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735,
   38723, -3735,  3741, -3735,  3424, -3735, -3735, -3735, -3735, -3735,
   -3735, 11113, -3735, -3735,  3458,  3618, -3735, -3735, -3735, -3735,
   -3735, -3735,  3162, -3735,  2820,  1446,  1446, -3735, -3735, -3735,
   -3735, -3735,  3253,  3258, -3735, -3735,  3259, -3735, -3735,    95,
    2185, -3735, -3735, -3735, -3735, 14253,  3540,  3260, -3735, -3735,
   46007,  3219, -3735, -3735,  1014, -3735, -3735, -3735, -3735, 11113,
   -3735,  3235,  2124, -3735, 28395, -3735, -3735,  -124,  3647, -3735,
     816, -3735,  3221, -3735, -3735, -3735,  3224,  2035,  2035, 46007,
    3410, -3735,   287,  1014,  1450, -3735,  1802, -3735, 46007, 46007,
    1815, 46007, 46007,  2650,  2659,  2661,  1402,  1402, -3735, -3735,
   -3735, -3735, -3735, -3735,  3574, -3735, -3735,  1854, -3735,   798,
    3447, -3735, -3735, -3735, -3735,  -141, -3735,   267, -3735, -3735,
   -3735, -3735, -3735,   267, -3735, -3735, -3735, -3735, -3735, -3735,
   -3735,  3459,  3233, -3735, -3735, -3735, -3735, -3735, -3735, -3735,
   -3735, -3735,  3189, -3735, -3735,  3312, -3735, 52077, -3735, -3735,
     722,  3222, -3735, -3735, -3735,  1603, 46007, 23511,  3194,  3376,
   -3735,  2900, -3735,   730,   206,  3123, -3735,   250, 46007, -3735,
    3470,   161,   906, -3735, -3735, -3735,  3202,  2027, -3735, -3735,
   -3735,  3203, -3735, -3735, -3735, -3735, -3735, -3735,   214,  3464,
    2820,  2820,  2820,  2820,  2185, -3735, -3735,  3261, 23511, 15509,
    3313,  1860, -3735, -3735,  1559,  2823, -3735,  1114,  1450, 11113,
    2344, 35688, -3735, -3735, -3735,  -124, -3735, 11113,  3212, 11113,
    3214,  1874, -3735, -3735, -3735,  1401,  1401, -3735,   287, -3735,
   -3735, -3735,  1924,  1964,   250,  2007,  2018, -3735, -3735, -3735,
     967,  3215, -3735, 46007, -3735, -3735, -3735,   262, -3735, -3735,
    2028, -3735,  2032, -3735, -3735, 11113,  3690,  3242, 46007,   958,
   -3735, 53291, 53291, 46007, -3735, -3735, -3735, -3735,  4779, -3735,
   -3735,    -8, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735,
   -3735, -3735, -3735,  3813, -3735,  3213, -3735, -3735,  3226,   279,
   -3735, -3735, -3735,  5134,  3661,  1556, -3735, -3735, -3735, -3735,
   -3735,  3227,  1994,  -124,    86, -3735,   250, -3735, -3735, -3735,
    1450,  3229,  3468, -3735,   161, -3735, -3735, -3735,   906, -3735,
   -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735,
   -3735, 24733,  2553, -3735,  2653, -3735, -3735, 46007, -3735,  3319,
      86,  3722,  3725,    86,    86,    86,    86,  3234,  2823, -3735,
    3708, -3735, -3735, 11113, -3735, -3735,  2035,  3461, -3735,  3793,
   -3735,  1145,  2035, 46007,  2035, 46007, -3735,  3684,  3684, -3735,
    3448,   250, -3735,   161,   906, -3735,  3125, -3735,   532,   532,
     131,   267,   131,  2035, 11113, -3735, 11113,  3275, -3735, -3735,
    3688, 46007, -3735, -3735, -3735, -3735, 11113, -3735, 52077, 52077,
   -3735, -3735, -3735, -3735,  3846,   730,  3817,  3511,  3819,  3784,
   -3735, -3735,  3496,  5134, -3735, -3735, -3735,  2820, -3735, -3735,
   -3735,  1286, -3735, -3735,  3255, -3735,    86, -3735,  3257, -3735,
    3313, -3735,  3266, -3735,  -124,    86,    86,  2021,  2021,  2653,
   39330,  3361, -3735, -3735,    86,  1450, 46007, -3735,   810,  3622,
   -3735,  2054,  2068,   982, -3735, -3735, -3735, -3735, -3735, -3735,
    2077, -3735,  3887, -3735,   939,  3531,  3532, -3735, -3735, -3735,
    2035,  2035, -3735,    37, -3735, -3735,  3664,  3749, 11113,  2035,
   49042,  3269, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735,
   -3735, -3735, -3735, -3735, -3735, 52684, 11113, -3735,    -8,  3813,
   -3735,  3535, -3735,  3536, -3735, -3735, -3735,  3777, 52077, -3735,
    3770, -3735,   730, -3735, -3735, 24733, 14253,  2124, -3735, -3735,
    3285, -3735, -3735,  -103, -3735,  -124,  -124, -3735, -3735, -3735,
   -3735, -3735, -3735, -3735, -3735, -3735,  2090, -3735, 39330, -3735,
   -3735,  3864,  3865,  3768,  3875,   810, -3735,  -131, -3735, -3735,
   -3735,  3879, -3735,  3881,  3305,  3306, -3735, -3735, -3735, -3735,
    3356,  3808,  3339, 11113, 52077, -3735,  3785, -3735,  3723,  2081,
    3665,  3314, -3735,  3316,  1498,  3826, 53291, 53291, -3735, -3735,
   -3735, -3735,  3803, -3735, -3735, -3735, -3735, -3735, -3735, -3735,
    2096, -3735, 14881, -3735, -3735, -3735, -3735, -3735, 39330, -3735,
    3361, -3735,  3327,   267,   267,  3907,   267, -3735,  3909,  3910,
    -131, -3735, -3735, -3735, 44793, 44793,   532,   532, -3735,   211,
   -3735,  2035, 49649,  3906, 46007, -3735, -3735, -3735, -3735, 11113,
   -3735, 40544, 50256,  3329, -3735, -3735, -3735,  3505, -3735,  3784,
    3514, -3735,  3285, -3735,  3345, -3735,  3992,  2823, -3735, -3735,
    3348, -3735, -3735,   267, -3735,   267,   267, -3735,  3349,  2099,
   -3735, -3735, 11113, -3735,  3827,  3437, -3735,  3358, -3735, 52077,
    1319, 52077, -3735, -3735,  3779,  3362,  1394, -3735,  3355, -3735,
   -3735, 52077,  3771,  3793, -3735, 14881,  3364, -3735, 11113,  3366,
    3367, -3735, -3735, -3735, -3735, -3735, -3735,  2035,  3940, 52077,
   46007, 47221,  3560, 50863,  3814, 46007,  5134,  3816,  3820, -3735,
   52077, -3735,  3955,  3622, -3735, -3735,  2035, -3735, -3735,  3460,
   -3735, 47828, -3735,  2581, -3735,  3404, -3735, -3735,  3886,  2624,
   -3735, -3735,   267,  3789, -3735, -3735, 52077, 52077, -3735, -3735,
   -3735, 33260, 11113, -3735, -3735, -3735, -3735, -3735,   893, -3735,
    3654,  3387, 48435, 51470, -3735, -3735, -3735, 30225, -3735, -3735,
   -3735,  3833, -3735,  2035, -3735,    45, 19839,  3538, 33260, -3735,
   -3735, -3735, -3735, -3735, -3735, 39330,  2117, -3735, -3735, 24733,
   -3735, -3735, -3735, -3735, 22898,  3395, -3735,    86, -3735, 24733,
   -3735, -3735, 14253, -3735, -3735
};

/* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -3735, -3735, -3735, -3735, -3735,   102, -3735, -3735, -3735, -3735,
   -3735, -3735, -3735, -3735,  1735, -3735, -3735, -3735, -3735, -3735,
    1930, -3735,   657, -1836, -3735, -3735, -3735, -3735, -3735, -3735,
   -3735, -3735,   659,  1549,  3398, -3735,   406, -3735,    92, -3735,
   -3735, -3735, -2907,   -29,  -195, -3735, -3735,   424,    22,  3057,
    -194, -3723, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735,
   -3735,   416,   417, -3735, -3735,   241, -3735, -3735, -1434, -3735,
   -3735, -3735, -3735, -3735, -3735, -3735, -3735,  -373,  -331,  1742,
   -3735, -3735, -3735,  4004, -3735,  3486, -3735, -1747,  2238, -3735,
   -3735, -3735, -3735, -3735,  2295, -1689, -3735, -3735, -3735,  1302,
   -3735, -3735, -3735,  -230,   271, -3735,   275, -3735,   277, -3735,
     278, -3735,   280,   281,   282,   283, -3735,   284, -3735, -3735,
    -312, -3735, -3735, -3735, -3735,   286, -3735, -3735, -3735, -3735,
   -3735, -3735, -3735,  -187, -3735, -3735,   -38, -3735, -3735,  -182,
     292, -3735,  -136,   301, -3735,   303, -3735,   -52, -3735,   -45,
   -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735,
   -3735, -3735,  3079, -3735, -3735, -3735, -2289, -3735, -3735, -2364,
    2625, -3735, -1695, -3735, -3735, -1884, -3735, -3735, -1697,  -605,
   -3735, -3735,  1141,   739, -3735, -1402, -1911, -1907, -3735, -3735,
   -3735, -2023, -2022, -1313, -1251, -2225, -3735, -3735, -3735,   293,
   -3735, -3735, -2557,  2061,  2627, -3735, -1975, -3735, -3735,  1152,
   -3735, -3735,  1318,  1762, -3735,   930,  2822, -1225, -3735, -3735,
   -3735, -3735, -3735, -3735,   135,   270,    40, -3735, -3251,   654,
   -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -2627, -3735,
   -3735, -3735,  -203, -3735, -3735,  -115, -3735, -3735,  -160, -3735,
     141, -2311, -3735, -3735, -3735, -3735,  2598, -1357, -3735,  3635,
   -3735,  -549,   757,  2108, -2465, -1409, -3735,  -895,  -888, -2479,
   -3735, -3735, -3735, -3316,  1119,  1509, -3735,   852,  2102, -1905,
   -3735,  1590, -3735, -3735,   878, -3735, -2744, -3735, -3735, -3735,
     836, -3735,   837, -3735, -3735, -3735, -1258,   805, -2564,  1523,
    -962, -3735,   392, -2411, -2516, -3735,   620, -3735,   574, -3734,
   -3291, -3735,  -560, -2100, -2400,    -5, -3735, -3735,   584, -3101,
    1711, -3735, -3735, -3735, -2950, -3218,  1448, -3735, -3735,  1039,
   -3735, -2725,  1037, -3735, -3735, -3735,  1048, -3735,   154, -3735,
   -3735, -3735, -3735, -2882, -3735, -3735, -1477, -2265, -3735, -3735,
    4160,  4165, -1020, -2666, -2544,   155,   159, -3735, -3735, -3735,
    2630, -2120,   223,   213,   221,  2062,  -791,   369, -2315, -3735,
     418, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735,
   -3735, -3735, -3735, -3735, -3735, -3735, -3735,  2145, -1080, -3735,
   -3735, -3735, -3735, -3735, -3735, -3735, -2424, -2428, -3735, -3735,
    1639, -3735, -3735, -3735, -1856,  -490, -2189, -3259, -3735, -3735,
   -3735, -3735, -3735, -3735, -3735,  2763, -3735, -3735, -3735, -3735,
   -3735,  3625, -3735, -3735,  2269, -3735, -3735, -3735, -3735, -3735,
   -3735, -3735,   656,  1838, -3735, -3735, -3735, -3735, -3735, -3735,
     923,  2665, -3735, -3735, -3735,     2, -3735, -3735, -3735, -3735,
    2387, -3735, -3735, -3735, -3735,  2723, -3735, -3735, -3735, -3735,
   -3735, -3735,  1427, -3735,  1876, -3735, -1447, -3735, -3735,  1028,
    -970,  1828,  -582,  1962,   410, -3735,  3629, -3735, -3735, -3735,
   -1670, -2437, -3735,  3330,  -930, -2371,  2373,  -623, -1833,  1073,
    -432,  3675, -3735, -1124, -1067, -3735, -3735,  -627, -3735, -3735,
   -3735,  -604, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735,
   -3735, -3735, -3735,  1465, -3735, -3735, -3735, -3735, -1200, -3735,
   -3735, -3735, -3735, -3735,  1150, -3735,  2065, -3735,  -441, -3735,
    3112, -3735, -3735, -3735, -2339, -1967,  1773,   979, -3735, -3735,
   -3735, -3735, -3735, -3735, -3735, -3735, -3735, -1549, -3735, -2365,
   -3735, -3735, -3735, -3735, -3735,  1983, -3735, -3735, -3735, -3735,
   -3735, -3735, -3735, -1715, -3735, -1956,   212, -3735,   366, -3735,
   -3735, -3735, -3735, -3735, -3735, -3735,   -19,   879,   -18, -2555,
   -1077,  1607, -3735, -3735, -1267,  3173, -2340, -3735, -3735, -3735,
    1979, -3735, -3735, -3735, -3735, -3735,   968, -2951, -1389, -3735,
   -3735, -3164,  -890, -2271,  -872, -3735, -2354,   519, -1807, -1775,
    -375,   164, -1332, -3735, -3735, -3735, -3735, -3735,  -114, -3735,
   -3735, -3735,   541,  1873, -3735, -3735, -3735, -3735, -3735, -3735,
   -3735, -3735, -3735, -3735,  -550,  -765, -3735, -3735,  2129,  2564,
   -3735,  3048, -3735, -1066,  3290, -3735, -3735,  3292, -3735, -3735,
   -3735, -3735,  2981,  2957,  1937, -3735, -3735, -2307, -3735, -3735,
    1903, -3735,   800,  -885, -1800,  1078, -3735, -3735,  1075, -3188,
   -3735, -3735,  3304, -3735, -3735, -3735,  1025, -3735,   114,  3703,
    3310, -3735, -3735, -3735, -3735, -3735, -3735,  2722, -1048,  3632,
   -3735, -3735, -3735, -3735, -3735, -3735,  2374, -3735, -3735, -3735,
   -3735, -3735, -3735,  2906,  3721,  -563, -1321, -3735,  -766,  2876,
    2378,  -869, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735,
   -3735, -3735, -3735, -3735, -3735, -3735,  2534,  1000, -3735, -3735,
   -3735,  2979, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735,
   -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735,  1115,
     -24, -3735,   115,   -51, -3735,    51, -3735, -3735, -3735, -3735,
   -3735,  -119, -3735, -3735,  -125, -3735,  -953, -1361,   738, -1229,
   -2040, -3735,  1117,  2975, -3337,  -664, -1117, -1125, -1988,   112,
   -3735, -3735,  3363,  2153,    96,  -419,  -447,    -6, -2790,   -95,
    -562, -3735, -1791, -3735, -3735, -3735, -3735, -3735, -3735, -3735,
   -3735,  1913, -3735, -3735, -3735,  1094, -3735,  3759, -3735,  2629,
    1097,  3763, -1324,  2466,  1929,  1931, -3735, -3735,  1938, -2238,
   -3735, -3735,   191, -3735,  2540, -3735, -3735, -3735, -3735, -3735,
   -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735, -3735,  3000,
    3781,  3469, -3735,  3064, -3735, -3735, -3735, -3735, -3735,   500,
   -3735,  1278, -3735, -2079,  2797,   788, -3735,  1580,  -402,  -672,
   -3735, -3735,   503, -3735, -3735,   964,  3786,  3478, -3735, -3735,
   -3735, -3735, -3735, -2742,  -863, -3735, -3374, -2797, -1674, -3735,
   -3735, -2166, -3015, -3735, -3735, -1029, -3735, -3735, -3735, -3735,
   -2004, -3735, -3735, -3735,    49,  3850,  3852, -3735, -3735,   536,
   -3735,   403, -3735, -3735, -3735, -3735, -3735, -3735, -3735,  3714,
   -3735, -3735, -3735, -3735,  3716, -3735, -3735, -3735, -3735, -3735,
    3718, -3735, -3735, -3735, -3735, -3735,  1560, -3735, -3735, -3735,
   -3735, -3735, -3735, -3735, -3735
};

/* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
   positive, shift that token.  If negative, reduce the rule which
   number is the opposite.  If zero, do what YYDEFACT says.
   If YYTABLE_NINF, syntax error.  */
#define YYTABLE_NINF -2564
static const yytype_int16 yytable[] =
{
     482,  1022,  1454,   940,   967,   898,   936,  2389,  1354,  1357,
    1340,  2133,  1566,   524,  1036,  1044,  2064,   532,  1369,  2249,
    1461,  1768,   525,  1796,  1633,  1897,   546,   608,   480,  1681,
    2344,  1107,   544,   558,  1556,  1557,   561,  1680,   551,   981,
     558,  1388,  1382,  1866,  2061,  1416,  2941,   576,  2537,  2600,
    1767,  1065,  2774,  1703,  2675,  2891,  2804,  1655,  2563,  2677,
    1711,  1941,  1597,  1388,  2855,  2856,  3516,  1417,  3203,   773,
    3241,  1804,  1966,  2038,  1011,  1014,  1904,  2294,  2878,  2491,
    2373,  3044,  1466,  2492,  2736,  2431,  2859,  2496,   597,  1467,
    3357,  2620,  2621,  1052,  1914,  3521,  2937,  2869,  2942,  2759,
     134,  3397,  1917,  1918,  3708,  2879,  1278,  1944,  3071,  2285,
     600,  3837,   482,  3593,  2827,   482,   607,   613,  1713,  1714,
    3446,  2115,  1717,  1718,  1719,  1720,  3564,  1722,  1723,  1725,
    1727,  1728,  1729,  1730,  1731,   530,  1202,  2504,  3123,  2105,
     602,  2508,  1810,   604,  1799,  2454,  2455,  1160,  1161,  1162,
    3062,  3404,  2523,  1979,  3069,  2541,  1278,  1745,  1169,  1170,
    1203,  1967,  2466,  2533,  3405,  1987,  2479,  1987,  2384,  2853,
    2654,  1418,  2846,  3648,   626,  3046,  3536,   617,  3406,  2484,
    2485,  2149,  4214,  3734,  2915,  1169,  1170,  1436,  2565,   906,
     889,  3270,   115,  1169,  1170,  2506,  2507,  1270,  2509,  2905,
     489,  2512,  2513,  2617,  3123,  2516,   596,  2618,  4243,  4060,
    2525,   906,   889,  3682,   829,  2529,  2530,  2531,  2532,  2609,
     543,  2448,  2536,  1968,  2538,  2766,   550,  1988,  2110,  1988,
    2547,  1227,  1273,  2551,  3953,  2553,  1528,  2918,  1081, -1483,
    2732,  1350,  1962,  1279,  1015,  3124, -2447,  3344, -1931,  3267,
    3022,  1204,  1463,  2641,  1463,  1169,  1170,   846,  3068,  2901,
    2902,  3213,  2574,   539,  2577,  2578,  1463,  2468,   536,  4048,
    2588,  2589,  3736,  3522,  3750,  1887,  3682,  1979,  1413,  2597,
    2598,  1589,  1940,  -883,  2602,  -561,  3706,  2487,  3778,  1304,
    2111,   946,  2542,  1279,  1287,  1432,  2815,  -562,  2604,  2605,
    2606,  2607,   956,   117,  1147,  3404,  1169,  1170,  4421,  2236,
    1151,  3124,  3052,  2634,  3054,  1169,  1170,  3453,  3405,   647,
   -2300,   858,   618,  3953,  2418,  1169,  1170,  2381,  2152,  4161,
    4056,  1958,  3406,   833,  2909,  3225,  4155,  1888,  1169,  1170,
    4057,  3761,  3027,   906,  3558,  1569,  1284,  1569,  1529,   133,
     129,  1428,  1530,  2298,  1962,  1207,  4214,  -468,  2052,  3132,
    3191,  1169,  1170,  1531,   568,  2213,  1032,  3557,  3562,  3165,
    1218,  3563,  3858,  2382,  1425,  1017,  3788,  4258,   648,  3790,
     540,  3015,  3016,  2125,  1479,  1480,  1389,  4028,  3856,  3239,
    3573,  1169,  1170,  1545,  3683,  1549,  3592,  1393,  1169,  1170,
     631,  3440,  1020,  1021,  1398,  3442,  2126,  4259,  3954,  1546,
    1547,  1548,  2642, -1959,  2821,   133, -1483,  3879,   834,  1169,
    1170,  1622,  1543,  1550,  1623,  3387,  1596,  1549,  4049,  1429,
     859,  2727,   569,  3762,  3825,  1390,  1980,   130,   832,  3949,
    1107,  1299,  1169,  1170,  3240,  1317,  3028,   485, -2378,  3256,
   -1443,  1487,  1018,  1426,  2299,  1551,  2910,  3683,  1169,  1170,
    1169,  1170,  2726, -2379,   559,  1437,  1169,  1170,  1570,  3873,
    1585,  2053,  3819,  3763,   957,  1861,  1148,  1959,  1962,   947,
    3211,  3212,  1169,  1170,  2285,  1937,  2877, -1443,   835,   607,
    3903,   613, -2300,  1288,  1532,  3214,  3198,  3954,   622,  3684,
    4422,  1169,  1170,  2286,  1545,   860,  3874,  3846,   787,  3245,
     649,  1940,   613,  3523,  1889,   831,  2919,  1169,  1170, -2094,
    2923,  4239,  1899,   827,   847,  1902,  3271,   607,  2820,   837,
    1906,  2522,   933,  3277,  2939,  2940,  2406,  1206,  1433,  3538,
    1171,  1016,   850,  1172,  1421,  2951,  4058,  1470,  1171,  2237,
    1590,  1172, -1483,  1708,   635,  1205,  1919,  1920, -2378,   899,
    1980,  1351,  1966,   830,  3730,  2961,  4155,   953,  3125,  1466,
    3880,  2563,  2566, -2379,  1169,  1170,  1467,  2491,  1942,  1414,
    3391,  2492,  4111, -2116,  1716,   970,  1769, -2234,  2490,  1533,
    2419,  2620,  2621,  4050,  2426,   607,   537,   985,  1768,  3266,
    3527,  1737,  3268,  3269,  1169,  1170,  3228,  2854,   597,   482,
    1171,  3770,  1219,  1172,   597,  3260,  1009,  1271,   597,   597,
    3774,  3279,  4378,  1023,   985,  1169,  1170,  1767,   607,  2038,
    2711,  4025,  1580,  1581,  3125,  2150,  4122,   996,  1053,  1054,
    1055,  3787,  2887,  3388,  1060,  1466,  3789,  3265,  2563,  3678,
    1186,  1967,  1467,  1621,  2266,  1916,  3565,  3373,  3685,  1169,
    1170,  1171,  1635,  1811,  1172,  2269,  4095,  2643,  2272,  1987,
    1171,  3686,  2911,  1172,  1648,  1649,  1650,  2116,  2281,  1748,
    1171,  4150,  1654,  1172,  3051,  1526,  2263,  2543,  1050,  1108,
    3169,  3170,  3171,  1171,  4005,  1217,  1172, -2447,  1800,  3407,
    2922,  2105,  2924,  2617,  3059,  3866,  1776,  2618,   871,  2935,
    3948,  3396,  2616,  1968,   795,  2934,  1171,  2828, -1483,  1172,
    2868,  3649,  1274,  2948,  3017, -2447,   995,  3133,  2943,  2957,
    3385,  1988,  1006, -1959,  3686,   842,  3126,  3208,  3209,  3210,
    1944,  3551,   853,  1798,  2972, -1483,  1171,  1169,  1170,  1172,
    1166,  3280,  1168,  1171,  1173,  2904,  1172,  1033,  1817,  3687,
    3860,  2093,  -883,  3962,  -561,   954,  3012,   541,  1169,  1170,
    2899,  1829,  3571,  3572,  1171,  4110,  -562,  1172,  1211,   482,
    1213,  1173,   985,   482,   607,  3550,   482,   607,  4235,  1173,
    2110,  2903,  1256,  3029,  1846,  3372,  4069,  1171,  1355,  2252,
    1172,  2622,  1360,  1365,  2214,  1526,   958,  1212,  1149,  2125,
    4268,  1216,  3020,  1171,  1226,  1171,  1172,  1385,  1172,  3570,
    3472,  1171,  1524,  3226,  1172,  1283,  1880,  3575,  1169,  1170,
    3014,  2713,  2126,  1903,  3598,   597,  -468,  1171,  4029, -2094,
    1172,  1394,  3404,  1189,  2912,   607,   597,  3535,  1399, -1443,
     597,  1173,  2111,  3407,  1926,  3405,  1171,  1624,   135,  1172,
    1625,   997,  2357,  2623,  2256,  1688,  1689,  3542,  3875,  3406,
    1169,  1170,  1171,  3559,  3342,  1172,  1453,  1422,  2286,  3506,
     906,   889,  2779,  3510,  4112,  3519,  2804,   607,  3548,  3549,
   -1959,   607,   607,  3479,  1371,  2909,  3068, -2378,  2884,  3068,
    3068,  3946,  1173, -2116,  1780,  3505,   607, -2234,  1946,  3509,
    1034,  1173, -2379,  3515,  1169,  1170,  3068,  2238,  3144,  3246,
    3247,  1173,  1169,  1170,   634,  1688,  2179, -2378,  2159,  1171,
    3574,  4189,  1172,  1732,  1173,  3591,  3594,  3596,  3597,  1204,
    3485,  1301, -2379,  3423,  2399,   793,   597,   490,  3526,  2140,
   -2563,  1169,  1170,  1290,  2944,  3184,  1830,  1173,  4191,  1171,
    1443,  2395,  1172,  3387,  1307,   607,  2357,  1462,  1313,  4192,
    2023, -1761,  2160,   851,  2185,  2984,  4113,  1851,  4237,  3953,
    1171,  2410,   526,  1172,  1169,  1170,  3894,  1173,  1249,  1169,
    1170, -2511, -1761,  2491,  1173,   597, -2094,  2492,  2620,  2621,
    2121,  2217,  2218,  2331,  1423,   560,  4114,  3400,  2234,  2235,
    1169,  1170,  1927,   535,  1171,  1173,  1928,  1172,  2026,   974,
    3400,  2422,  2624,  1087,  2916,  2916,  3235,  1424,  2945,  2741,
    2742,  2264,  1350,  1169,  1170,  2420,   548,   641,  1173,  1388,
    1038,  1046,   570,  1962,  2548,  2425,   597,  2257,  2428,  2429,
    1562,  2453,  3082,  3083,  1173,  1857,  1173,  1897,  1897,  4208,
   -2116,  1356,  1173,  1525, -2234,  1966,  3206,  1169,  1170,  1388,
    2496,  2158,  1698,  3502,  2294,  3814,  3089,  3090,  1173,  1847,
    4117,   571,  4119,   854,  1108,   573,  2490,  1169,  1170,  1169,
    1170,  2656,  3106,  3107,  1169,  1170,   619,  1173,  1108,  1169,
    1170, -2511,  1171,  2358,  1848,  1172,  2860,  1569,  1088,  1736,
    2617,  3141,  3142,  1173,  2618,  1781,  2273,  2692,  1169,  1170,
    2523,  4043,  4044,  1171,  2793,  1858,  1172,  2141,  3484,  2946,
    2271,  1169,  1170,  1198,  1199,  1200,  1201,  2740,  1733,  2332,
    1169,  1170,  3723,  3724,  2985,  4039,  2038,  4116,  1682,  1852,
    1169,  1170,  1926,  3954,  1967,  3276,  1770,  1169,  1170, -1788,
    1444,   607,  1734,  1769,  1553,  3401,  2441,  1831,  1560,   588,
    1173,  1218,  3033,  1987,  3871,  2625,  1051,  2337,  3401,  4193,
    3895,  3388,  4201,  1171,  2153,  2284,  1172,  2400,   585,  3250,
    2745,  2746,  1218,  2249,  1169,  1170,  1169,  1170,   607,  2288,
    1173,  2381,  1466,  1740,  1809,  2228,  2105,  2358,   597,  1467,
    4065,  2874,  2616,  2555,  4100,  2165,  1968,  1169,  1170,  1169,
    1170,  1173,  2875,   597,  1375,  1171,  2549,  4202,  1172,  3482,
    1640,  2739,  1169,  1170,  1372,  1988,  2166,  2995,   855,   975,
    3424,  2749,  1681,  1205,  1108,   607,  3402,  1782,  2258,  1169,
    1170,  2353,  2354,  2581,  4443,  1173,  2987,  1849,  2993,  3413,
    1169,  1170,   607, -1788,  2259,   976,  1065,  1169,  1170,  1171,
    2789,  2493,  1172,  2359,  1785,  1386,  1788,  1171,   597,  1526,
    1172,  3896,  1691,  1376,  1569,  2563,  3823,   597,  3034,  3617,
    1169,  1170,  2245,   607,  4209,  2110,  1569,  3086,  3618,  1782,
    1338,  2622,   597,   597,  4040,  2994,  1171,  2563,  3652,  1172,
    1927,  1377,  1169,  1170,  1928,  2582,  1169,  1170,  1218,  1526,
    1681,  1169,  1170,  3816,  3444,  1735,  1742,   607,  2882,  1859,
    1833,  3178,  2333,   933,  1169,  1170,  1169,  1170,  1841,  1171,
    4022,  1842,  1172,  1173,  1171,  3437,   586,  1172,  4194,  1386,
     607,  2726,  1351,  4203,   933,  2726,  2665,  2111,  2172,    43,
    1862,   899,  1834,  2623,  1173,  1171,   591,  1979,  1172,  1025,
     482,   482,   482,   597,   482,   597,  1948,  2359,  2996,  2177,
    1898,  1792,  2666,  2519,  4310,  4311,  1900,   482,  1171,   607,
    3407,  1172,   482,   988,  1169,  1170,  1313,  1926,  1881,  1882,
    1883,  1278,  1885,  1486,  1169,  1170, -2511,  1644,  2363,  3251,
    1681,  2583,   597,  1219,  3590,  1901,  2364,  2876,  2955,  1668,
    1905,  1313,  1171,  2062,  1173,  1172,  1139,  1169,  1170,  3104,
    2667,  1169,  1170,  2668,  1219,  2916,  4285,  4285,  3619,  2178,
    1692,  2669,  1171,   989,  1171,  1172,  3059,  1172,  2063,  1171,
    2246,  3403,  1172,  1552,  1171,  1143,  3799,  1172,  4101,  1940,
    4102,  4008,  1169,  1170,  3403,   607,  1173,  1877,  4352,  3286,
    3035, -1788,  2973,  1171,  4357,  1186,  1172,  4107, -1483,   597,
     933,  2181,  2057,   597,  2715,  1835,  1171,  1807,  2363,  1172,
    2894,  1884,  2584,  1886,  4358,  1171, -1761,   589,  1172,  2522,
   -1788,   252,  2490,   254,  3951,  1171,  1169,  1170,  1172,  3467,
    1173,  1140,  1171,  1169,  1170,  1172, -2511,    55,  1173,   677,
     597,  2844,  1378,  1169,  1170,  2193,   990,  1215,  2365,  2366,
    1915,  1808,  2719,  2200, -1483,  1528,  1169,  1170,  1279,   607,
    1144,   482,   482,  4241,  2123,   482,  4245,  1173,  2277,  1171,
    3824,  1171,  1172,  3468,  1172,  1927,  2278,  1060,  2720,  2139,
    1219,  2157,  3012,  1169,  1170, -1483,  2367, -1483,  1962,  2119,
    2120,  3036,  1171,  1978,  1171,  1172,  3287,  1172, -1789,  1294,
    1173,   682,  1295, -1483,  1768,  1173,   598,  1171, -1483,  4007,
    1172,  2180,  2363,  1169,  1170,  2204,   601,  2054,  3642,  2521,
    2205,  2059, -1483,  2895,  1171,  3053,  1173,  1172,   603, -1483,
   -1788,  1169,  1170,  1767,  3800,  1171, -1483,  3255,  1172,  2616,
     614,  2207,  1171,  3140,  2062,  1172,  1169,  1170, -1483,  1173,
    2823,  2629,  1108,  2186,  1169,  1170,  4280,   486,   633, -1483,
     487,  1169,  1170,  2229, -1483,  1171,  3815,  1529,  1172,  2063,
    1980,  1530,  2630, -1483,  1379,  2289,  2156,  1206, -1788,   791,
    2744,   622,  1531,  1173,  2670,  4334,  1949,  1171,  1189,  1033,
    1172,  1171,  1979,  1681,  1172,  1380,  1171,   694,  2208,  1172,
    1950,  3194, -1789,  1173,  2661,  1173,   549,  -203,  2999,  1171,
    1173,  1171,  1172,  2255,  1172,  1173,  1218,  2585,  2212,   615,
    2230,  3965,  3969,  3000,  2180,  3087,  3887,  3888,  2622,  4251,
    3088,  3667,  2365,  2366,  1173,  1381,  2824,  4001,  4002,   577,
    2679,  2098, -1483,  1169,  1170,  1169,  1170,  1173,  1296,  3099,
    2779,  1169,  1170,  1979,  2686,  2279,  1173,   991,  2173,  1206,
    4003,   607,  3109,   597,   607, -1483,  1173,  3735,  2394,  1171,
    3197,  3110,  1172,  1173, -1483,   597,  1169,  1170,   710,  1171,
    1256,  3661,  1172,  2277,   578,  1256,   486,  2701,  2301,   487,
    2623,  3222,  2249,   997,  2307,  2307,  3889,  2307,  2838,  1169,
    1170,   555,  1171,   117, -1483,  1172,  1171,   597,   555,  1172,
    1173,   597,  1173,  1532,   623,  3988,   626,  1169,  1170,  2839,
     992, -1761,   993,   642,  2167,  2671,  2168,   607,   607,   597,
     597,  3566,   628,  1173,  3567,  1173,  3989,  1171,  2612,   783,
    1172,  1108,  1034,   498,  2307,  2307,  2307,  2176,  1173,  2189,
    3617,   630, -1681,  2840, -1483, -1681,  2755,   607,   579,  3618,
    3272,   644,  2190,  1951,  3965,  1173,  1169,  1170,  3969,   788,
    1169,  1170,   898,   645,   899,   646,  1173, -1483,   933,  2194,
     798,  1171, -2563,  1173,  1172,  1169,  1170,  3831,  1171,  2672,
    3105,  1172,  3284,  1962,  2417,   828, -1681,  2198,  1171, -1681,
    3290,  1172,  2134,   843,  3292,  2655,  1173,   839,  1533,   845,
   -1789,  1171,  2306,  2306,  1172,  2306,  2154,  2673,   863, -1483,
    2199,   906,   889,  3965,  3969,  2329,  1866,  2352,  1173,  1290,
     597,  1945,  1173,  1169,  1170,  1169,  1170,  1173,  1171, -1789,
    1952,  1172,  2436,   865,  3365,   855,  2203,  1307,  2356,   597,
    1173,  2206,  1173,   968,  1962,  1169,  1170,   969,  1219,  2155,
    1206,   971,  2306,  2306,  2306,  1953,  2209,  1340,  1171,  1503,
    1504,  1172,  2098, -1483,  2933,  1980,  1196,  1197,  1198,  1199,
    1200,  1201,  3231,   739, -1483, -1483,  1171,   831,  3232,  1172,
     978,  2413,   987,  3503,  1169,  1170,  1169,  1170,  3398,  3619,
    1388,  1171,   997, -1483,  1172, -1483,  1388,  1169,  1170,  1171,
    1173,  3233,  1172,  1169,  1170,  2099,  1171,  3254,  1007,  1172,
    1173,  1218,  3415,  3416,  2221,  1954,  3936,  1026, -1483, -1483,
    1027,  1260, -1483, -1483,  2240,  1062,  1980,  2610,  1169,  1170,
    1031,  2626,   115,  1173,  1063,  3429,  2550,  1173,  2427, -1789,
    1169,  1170, -1761,  3976,  3977,  3978,  3979,  3056,  1064,  2851,
    2564,  3075,  1169,  1170,  1066,  2457,  1067,  2447,  1068,  3552,
    1169,  1170,  3555,  3556,  2464,  2465,  1071,  1777,  1173,  1355,
    1778,  1072,  1218,  1779,  1355,  2469,  2470,  2471,  2472,  3568,
    2480,  2481,  3081,   958,  1169,  1170,  1681, -1789,  1171,  1073,
    1171,  1172,  2261,  1172,  1074,   580,  1171,  1075,  1261,  1172,
    1519,  1520,  1076,  1262,  2182,  1206,  1169,  1170,  1955,  2183,
    1638,  1206,  1173,  1077,  1962,  2747,   607,   581,  1078,  1173,
     607,  1171,  2627,  1079,  1172,   482,  3084,  2195,  1206,  1173,
    3936,  3936,   597,   597,   597,  2650,  1082,  1681,  2653,  2098,
    2273,  2921,  1173,  3091,  1171,  2882,  1263,  1172,  2338,   962,
     963,   582,   964,  2632,   965,  1209,  3095,  1210,   607,  1769,
    4078,  1264,  1171,   607,  4067,  1172,  2949,  2950,  2737,  1173,
    1681,  1214, -1761,   933,  2196,  1206,  2576,  1084,  2955,  2576,
    2576,  1085,  2576,  3096,   874,  2576,  2576,  2576,  2576,  2576,
    2576,  2576,   906,   889,  2576,  1086,  2576,  1089,  2758,  1173,
    4084,  2197,  1206,  4087,  4088,  4089,  4090,  2201,  1206,   583,
    2339,  1171,  1186,  3097,  1172,  1171,  1090,  1173,  1172,  4079,
    2482,  2483,  2729,  1206,  2764,  2765,  1573,  1574,  1575,  1091,
    1171,  3098,  1173,  1172,   933,  1186,  2099,  1231,  1586,  1259,
    1173,  1119,  1218,  3190,  1962,  1278,  3100,  1173,  3101,  1206,
    2646,  2647,  2648,  1219,  3103,  1503,  1504,   607,  3529,  3530,
    1267,  3108,  1092,  1138,  3200,  3201,  1257,  3936,  3936,  1641,
    4163,  1093,  1645,  3204,  3205,  1094,  1152,  1153,  1171,  1979,
    1171,  1172,  2756,  1172,  3021,  3368,  3369,   607,  3603,  1897,
    1095,  1962,  1096,  1664,  1665,  4175,  4176,  1669,  3448,  1206,
    1171,  3470,  3471,  1172,  4188,  1979,  4177,   875,   607,  2100,
    1097,  3139,  1098,  3749,  1219,  1683,  1684,  2437,  1099,  3474,
    3608,  3609, -1483,  1265,  4183,  3645,  3654,  1102,  2098,  1173,
    1103,  1173,  3662,  1206,  3679,  1206,  1277,  1173,  1109,  1171,
    2787,  1171,  1172,  3111,  1172,  3113,  1110,  2249,  1111,  3936,
     119,  3115,  1171,  1112,  2787,  1172,  1113,  3053,  1681,  1114,
    3749,  2098,  1173,  1115,  3936,  1116,  3194,  3694,  3695,  2394,
    1355,  2809,  1218,  3802,  2483,  2812,  3117,  3936, -1483,   607,
     876,  1117,  1279,  1171,  1120,  1173,  1172,  4178,    13,  3817,
    3818,  1121,  2832,  3839,  2834,  1171,  1519,  1520,  1172,  3118,
    1122,  1400,  1123,  1173,   933,  1189,  1124,  1171,  4017,  4018,
    1172, -1483,  1125,  2099,  1268,  1171,   899,  3119,  1172,  1218,
    3821,  3818,  1898,  1898,  1126,  2612,  1185, -1483,  1189,  1127,
    1401,  1128, -1483,  3936, -1761,  3822,  3818,  3881,  3471,  1171,
    2758, -1761,  1172,  4077,  1129,  3936,  3936,  1130,  2438,  1682,
    3884,  3818,  1173, -1483,  1131,  2101,  1173,  1132,   607,   607,
   -1483,  1171,   874,  1133,  1172,  1276,  3434,  2439,  2430,  1285,
    3435,  1173, -1483,   115,  1134,  3658,  1135,  1402,  2440,  1136,
    1962,  1137,  1403, -1483,  1219,  3436,  2100,  1141, -1483,  3892,
    3893,  3936,    25,  1142,  2831,  3986,  3987, -1483,  2564,  3840,
    3841,  3936,  1145,  2564,  3842,  3843,  1962,  2908,  2564,  4016,
    3205,  2338,  2564,  1962,  2929,  2608,  1146,  2920,  1150,  1173,
    1154,  1173,  1155,  2930,  2929,  1156,  2564,  2564,  1157,   607,
    2929,  1186,  1286,  3657,   933,  3660,  1158,  2564,  3936,  1682,
    3936,  1173,  1159,  4384,  1208,  1704,  2952,  1302,   597,  1314,
    3936,  2960,  1316,  1191,  1192,  3666,  2929,  2963,  2964,  4020,
    3818,  2441,  1980,  2564,  2983,   116, -1483,  1333,  3936,  1334,
    3936,  1335,  3936,  2339,  1338,  3009,  1191,  1192,  1341,  3936,
    1173,   933,  1173,  1347,   117,   875,  1169,  1170,  1980, -1483,
    3936,  1346,  4179,  1173,  3668,  1366,  3669,  1370, -1483,  4021,
    3818,  2340,  2099,  3768,  3769,  3936,  3936,  3670,  1218,  2896,
    1374,  3058,  3638,  3639,  1219,  1386,  3772,  1395,  2931,  2932,
    4444,  3936,  3936,  3775,  1173,  4145,  3936,  1396, -1483,  1404,
    1186,  1187,  2101,  4276,  1218,  2099,  1173,  1397,  3671,   597,
    2564,  1218,  4023,  3818,  2959,  2467,  3791,  1412,  1173,  3793,
    3737,  1415,   118,  4024,  3818,  1188,  1173,  1419,   876,  3422,
    1979,  1219,  3972,  4030,  4031,  1420,  2962,  4032,  4031,  2341,
    1434,   877,   878,  2442,   880,  1435,   882,  1438, -1483,   898,
    1173,   119,  1598,  1599,  1600,  1601,  1602,  1439,   883,  4199,
    3205,  1194,  1195,  1196,  1197,  1198,  1199,  1200,  1201,  1441,
      37, -1483,  1173,  4200,  3205,  1405,  1995,  1996,  2100,  2098,
    3013,  3449,  4206,  3471,  1194,  1195,  1196,  1197,  1198,  1199,
    1200,  1201,  1020,  1021,  1189,  4249,  4250,  1446,  1705,    43,
    2142,  4291,  4292,   120,  4346,  3367,  4387,  4388,  2443,  -773,
    -773,  1998,  1463, -1483,  1020,  1021,  1451,  3740,  1469,  -773,
    2342,  2473,  4433,  4434,  2001,  3832,  3833,  3038,  1671,  1672,
    1471,   656,  2002,  1473,  3624,  4181,  4181,  1256,  1406,  2301,
     933,  1476,  1283,   607,   607,   607,  3488,  3489,  3455,  3456,
    2338,   597,  1603,  1604,  1605,  1606,  1481,  2004,  1477, -1761,
    4272,  1484,  2789,  3692,  3693,  1485,   933, -1483,  1488,   607,
    2187,  1463,  1682,   933,  2191,  2005,  2612,  1489,  1490, -1483,
    1537,  1538,  1539,  2474,  1602,  1542,  1544,  1108,  1190,  3576,
     607,   607,   607,  1189,  3901,  1545,  1563, -1483,  2215, -1483,
    3901,  1204,  1569,  3221,  2010,  1565,  3743,  -641,  1576,    52,
    1588,  2475,  2339,   677,  1591,  1627,  1637,  2493,  1355,  1638,
    1219,  3243, -1483, -1483,  2101,  3650, -1483, -1483,  1639,  2494,
    1662,  1962,  3577,   121,  1699,  1679,  1681,  3578,  1690,  1715,
    2340,  1721,  1191,  1192,  4076,  1744,  1219,  1746,  1741,  1747,
    1407,  1750,  1753,  1219,  1754,  1193,  2473,    55,  1755,  2956,
    1607,  1756,  1608,  1609,  1610,  4351,  1757,  4353,   681,  3177,
    1758,  1611,   656,  1759,  2014,   682,  3990,  2486,  1760,  2476,
    -641,  2015,  1771,  1606,  3579,  1772,  1408,  1773,  2564,  1774,
    2493,  2564,  2564,  1794,  2929,  4371,  1797,  1805,  2016,  1706,
    1813,  1814,  2494,   687,   122,  3220,  1815,   607,  2341,  3991,
    2564,  1171,  1816,  1980,  1172,  1707,  1820,  2473,  2474,   877,
     878,   879,   880,   881,   882,  2343,  2929,  3882,  3883,  -641,
    3885,  3886,  4402,  4403,  2929,   493,   883,  3234,  2929,  1823,
    1826,  1191,  1192,  1827,  1828,  1837,  2475,  3743,  1843,  1612,
    1875,  1867,  1879,  2099,   677,  1907, -1761,  2017,  3296,  1218,
    2477,   597,  1908,   123,  1910,  -973,  3352,  2437,  1909,  2062,
    1912,   694,   482,  1921,  1923,  2018,  3362,  1924,  2929,  2474,
    1194,  1195,  1196,  1197,  1198,  1199,  1200,  1201,  1607,  2342,
    1938,  2493,  1610,  3371,  2063,  1947,  2049,  1995,  1996,  1611,
    3358,  1526,  -641,  2066,  1613,  1614,  3382,  2475,   493,   681,
    3278,  2067,  -808,   597,  2476,  2068,   682,  2069,  2070,  3282,
    1681,  2071,  2072,  2073,  3395,  2074,  3992,  2092,  4076,  2022,
    -773,  -773,  1998,  2075,  2076,  2094,   705,  2024,  2077,  2309,
    -773,  2310,  2062,  2078,   687,  2001,  2079,   708,  2080,  2081,
    2082,   709,   710,  2002,  2083,  3849,   785,   786,  4118,  2084,
     789,   790,  2085,  2086,   792,  2087,   794,  2063,  2088,  1340,
    2089,  2090,  2965,  2091,  2966,  2476,  2112,  1612,  2004,  3297,
    1195,  1196,  1197,  1198,  1199,  1200,  1201,  2113,  2376,  2377,
    2378,  2118,  1463,  2128,  2129,  2477,  2005,  2130,  2438,   554,
    3374,  3493,  2131,  2519,  1969,  2143,  2137,  2030,  2163,  3993,
    3447,  2145,   694,  1020,  1021,  2171,  2967,  2439,  2832,  3580,
    2146,   933,  2147,  2162,  2164,  2010,  3581,  3994,  2440,  2495,
    2169,  3384,  3861,  1614,  2170,  2180,  2174,  2188,  1615,  2968,
    2184,  2219,  2250,  2062,  2192,  -641,  2210,  2211,  2216,  2231,
    3995,  2220,  1173,  1616,  1617,  4296,  2477,  2787,  2254,  2232,
    2233, -1190,  2260,  3582,  1201,  2478,  2031,  2270,  2063,  1087,
   -1312,  4166,  2290,  2304,  2969,  2809,  3481,   705,  1139,  3483,
    1143,   607,  2032,  2322,  2330,  2033,  2336,  2347,  2350,  2374,
     607,  2371,   709,   710,  2343,  2014,  2756,  2375,  3938,  2396,
    2390,  1219,  2015,   899,   899,  2398,  2403,  2414,  2397,  2404,
    1970,  2441,  2416,  1186,  2401,  2421,  2402,  2405,  -641,  2016,
    2831,  2035,  2445,  2437,  2450,  2446,  1682,  2452,  2449,  2456,
    2463,  2458,  2635,  2459,  3583,   731,  2493,  2564,   496,  3744,
    2505,  2437,  3745,  2460,  2510,  2461,  2462,  2564,  4296,  2929,
    2514,  2515,   737,  2517,  2511,  2518,  2526,   739,  2524,  1682,
     740,  2528,  2535,  2567,  2534,  2929,  1615,   597,  2527,  2564,
    2539,  1681,  4000,  2545,  2540,  2611,  2571,  3045,  2017,  4428,
    4301,  4302,  1617,  4304,  1681,  2546,  2552,  2573,  2633,  1681,
    2651,  2655,  4437,  1355,  1681,  2659,  2018,  4428,  2664,  2680,
    2478,  2681,  4437,  2520,  2682,  2278,  2693,  2694,     1,     2,
    2706,   496,  3498,  3746,  3747,  2728,  2735,  -641,   933,  2521,
    2743,  2762,  2752,  2442,  2753,     3,  2769,  2763,  2770,     4,
    4342,  2767,  4343,  4344,  3996,  3584,  2768,   511,  2777,  1230,
    2780,  3009,  2771,     5,     6,  2783,  2790,  2791,  2795,  2782,
    2022,     7,  2813,  1800,  2438,     8,     9,  2814,  2024,  2816,
    2799,  2478,  2817,  2818,  2382,  2381,  3637,  3637,  3637,  2836,
      10,  2837,  2438,  2439,  1851,  3713,   731,  1852,  1971,  2847,
    3744,  2857,   607,  3745,  2440,  2861,  2862,  1972,  2443,    11,
    -641,  2439,  2863,   737,  1973,  2870,   512,  2871,   739,  2888,
    2872,   740,  2440,  2892,  2893,  2936,  1189,  2938,  4414,  4399,
    3002,    12,  4157,  2992,  3018,  4000,  3023,  2970,  4159,  1992,
      13,    14,    15,  3004,   513,  2998,  1993,  1994,  2030,  3019,
    3024,  3025,  3026,    16,    17,  2023,  3605,  3050,  1995,  1996,
    2138,  3059,  3070,  3702,  3063,  3072,    18,  1682,  1233,  3065,
    3130,  3073,  3074,  3076,  3746,  3747,  3147,   514,  3077,  3629,
      19,  3131,  2394,  3120,   607,  3134,  3136,  2441,  3138,  1997,
    3143,  3146,  3167,  1998,  1999,  3172,    20,  3174,  3179,  2000,
    3182,  1176,  1177,  1294,  3183,  2441,  2001,  2031,  3186,  1974,
    3721,    21,  3207,    22,  2002,  3196,  3219,  3202,    23,  3189,
    3218,    24,  3637,  2032,  2003,   515,  2033,  3199,  3725,  3223,
    3224,   597,  3227,  3236,  3244,  3237,  3248,  1178,  3249,  2004,
    3758,  3753,  3252,  3263,    25,  3264,    26,  3281,  1179,  3262,
    3293,  3353,  4440,  1463,  3294,  1355,  3356,  2005,  3275,  3359,
     799,   800,  2035,  1234,    27,  2006,  2007,  3285,  3295,  3360,
    3364,   607,  2008,  3370,  1191,  1192,  1186,  3366,  3377,  3367,
    2009,    28,  3378,  3383,  -910,    29,  2010,  1180,  1235,  2363,
    3386,  3414,  1236,  3392,  3393,  3716,  3794,  2011,  1181,  2442,
    1975,  3394,  3412,  3798,  2311,  3149,  1940,  3861,  3426,  3418,
    3425,  3438,  2237,  3125,  3150,  2012,  2636,  2442,  3451,  3493,
    3452,  3382,  3461,  3151,  3463,  1182,  2312,  1237,  3466,  3486,
    3499,  3473,  3494,  3500,  1898,  3152,  3153,  3154,  3507,  3508,
    2313,  3520,   801,  3528,   607,  1238,  3531,  3532,  3537,  3751,
     -64,  2314,  3155,  3546,  2013,   516,  2014,  3553,  3599,  2565,
    3602,  3606,  4157,  2015,  2443,  3604,  3612,  3616,  3625,  3626,
    3633,  3640,  3630,   802,  3777,  3627,  2202,  4338,  3631,  3643,
    2016,    30,  2443,  3644,  3645,  3663,  3646,   803,  3647,  1183,
    3651,  3653,  3664,  3655,  3853,  3656,  3659,  3665,    31,  3673,
    2315,  2316,  3674,  3681,  3680,  3690,  3697,  1239,   607,  3698,
     804,    32,  3803,   805,  1196,  1197,  1198,  1199,  1200,  1201,
    3700,  3695,    33,  2812,   806,  3707,   517,  3709,  2317,  3710,
    3714,  3715,  3637,  3637,  4000,  3637,  3637,  3222,  3717,  2017,
    3718, -1395, -1400,  3729,    34,  4338,   807,    35,  3738,    36,
    3739,  3741,    37,  3742,  3759,    38,    39,  2018,  3756,  3590,
    3767,  2019,  3773,  3771,  4411,    40,  1355,    41,  3782,  1189,
    3783,   808,  3786,  3785,  3593,    42,  3781,   809,  3804,  3792,
    3826,    43,  3820,  3805,  3828,   518,  3829,  3830,  3847,    44,
     519,  4411,  3834,  3848,    45,  2318,    46,  3835,  3836,  2020,
    3943,   597,  3865,  3868,  2021,  3854,  3870,  3891,   520,  3897,
     708,  2022,  3637,  3864,   800,  3654,  2023,  4442,   810,  2024,
    3904,  3905,  1186,  3947,  3939,    47,  3961,  3971,  3973,    48,
     867,   800,  3975,   521,  3984,  1240,  4013,  3981,  4015,  4026,
    4034,  -343,   597,  4052,  1241,  4061,  4054,  2319,   522,  4071,
    2025,  4055,  4064,  4085,  4070,   607,  4086,  1949,  4091,  1242,
    4083,  4094,  4096,  4098,  2026,  2027,  2028,  2029,  4103,  3156,
    2987,  1950,    49,   781,  4122,  4125,  -361,  1243,  4151,  4152,
    4153,  4165,  4168,  4185,    50,  4197,  3157,  4027,    51,  2030,
    4170,    52,  4207,  4210,  4211,   801,    53,  4217,  4218,  4222,
    4221,   781,  4038,  4228,  4229,  1318,  4230,  4045,  4233,  4239,
    4253,  4254,   801,  4154,  1319,  4221,  4255,  1191,  1192,  3944,
    1244,  4256,  3092,  1320,    54,  4262,   802,  4263,  4231,  4264,
    4265,   492,  4266,  4267,  4273,  1321,  1322,  1323,  4268,    55,
     803,  4275,  4277,   802,  4278,  4281,  1245,  4287,  2031, -2282,
     811,  4300,  1324,  4303,   812,  4305,  4306,   803,  4316,  4329,
    3982,  4010,  4330,   804,  2032,   486,   805,  2033,   487,  4332,
     813,  4335,  1233, -1556,  4345,  1682,  4348,   806,   814,  4349,
     804,  3853,  4354,   805,  4350,  4359,   815,  4362,  4355,  4365,
    2034,  4367,  4370,  4368,   806,  4184,  4374,  3158,  4376,   807,
    4379,  4382,  4386,  2035,  4380,  4390,  4392,  2812,  4400,  2812,
    4415,  4416,  4429,  3159,   816,  1189,   807,   493,   781,  4420,
    4047,  4439,  2603,   781,   808,  2760,  3614,   817,   818,  3615,
     809,  3808,  2900,  4160,  1951,  4126,  1043,  4062,  4288,  3806,
    4289,   808,  4221,  1475,  3810,  4431,  3942,   809,  4394,  4066,
     567,  -839,  4328,   943,   781,  1194,  1195,  1196,  1197,  1198,
    1199,  1200,  1201,  -910,  2372,  3163,  2297,  1234,  3916,  3160,
     781,   810,  3917,   819,  3919,  3920,  4404,  3922,  3923,  3924,
    3925,  3926,  4313,  3927,   607,  4215,  3161,  4314,   810,  3930,
    4190,  4286,  1235,  2758,  1995,  1996,  1236,  4227,  3931,   494,
    3932,  4361,   820,  4226,  1541,  1991,  2556,  3950,  3185,  2036,
    3289,  1952,  2794,  3465,   781,   781,   781,   781,  1803,  3983,
    4169,  4221,  4081,  4221,   821,  3703,   822,   781,  1186,  1998,
    4381,  1237,  4364,  1020,  1021,  4299,  1953,  4337,  2097,  4093,
     643,  4221,  2001,  3632,  3375,  3043,  2554,  3545,  2561,  1238,
    2002,  3533,  2989,  4298,  3560,  3561,  3600,  3899,  3752,  1682,
    3784,  3776,  4238,  1191,  1192,  2890,  3441,  3443,  3122,  1325,
    3439,   507,  4221,  4221,  4106,  2004,   508,  4419,  4108,  4068,
    4174,  4073,   607,  4109,  2127,  4072,  1326,  3960,  2645,  1463,
    2558,  3902,  2434,  2005,  2977,   951,  1954,  3534,  1925,  3755,
    2796,  2095,  2355,   811,  3176,  2778,  3462,  2819,  2734,  3937,
    2380,  1239,  2058,   838,   966,  1345,  1636,  3450,  3145,  2883,
     811,  3504,  2010,   813,   868,  2678,  2579,  2580,  2733,  2587,
    4105,   814,  2590,  2591,  2592,  2593,  2594,  2595,  2596,   815,
     813,  2599,   607,  2601,  4019,  4308,  3613,  4309,   814,  3872,
    2750,  1587,  4182,  3540,  4385,  3863,   815,  2826,  3009,  3009,
    2649,  2776,  1455,  1743,  1456,  1791,  1818,   816,  4318,  2802,
    3476,  4246,  4247,  3705,  3477,  4326,  1457,  3514,   955,  4236,
     817,   818,  1458,  1061,   816,  2136,  2423,   939,  1913,  1955,
    1891,  2424,  2014,  3544,  2291,  1825,  3464,   817,   818,  2015,
     495,  1194,  1195,  1196,  1197,  1198,  1199,  1200,  1201,  4363,
    4257,  4307,  4383,  1327,  4441,  4438,  2016,  3780,  3480,  1840,
     496,  1189,  2845,  3496,   901,  2253,   819,  3497,   902,  2408,
    4432,  2843,  2842,  2835,  1832,  1069,  1332,  2335,  3974,  1240,
     870,  1784,  2117,   819,  4372,  3164,   872,  3980,  1241,  4377,
    1337,   637,  1047,   638,  1048,   820,  1049,     0,     0,   497,
       0,  -567,     0,  1242,   498,     0,  1101,     0,     0,  1328,
     781,     0,   820,     0,     0,  2017,     0,   821,     0,   822,
       0,  1243,  1118,     0,     0,  4412,  1329,     0,     0,     0,
       0,     0,     0,  2018,   821,     0,   822,     0,     0,   499,
       0,     0,     0,     0,     0,     0,     0,   500,     0,     0,
    1682,     0,  4412,     0,  1598,  1599,  1600,  1601,  1602,   607,
       0,     0,     0,  1682,  1244,   781,   781,     0,  1682,  1163,
       0,     0,     0,  1682,   781,   781,   781,   781,   781,   781,
     781,     0,     0,     0,     0,     0,     0,  2022,   781,   781,
    1245,   781,   781,     0,     0,  2024,   781,   781,     0,     0,
     781,   781,   781,   781,     0,   781,   781,     0,     0,  1191,
    1192,     0,     0,   781,   781,     0,   781,   781,   781,   781,
     781,     0,     0,   781,   781,   781,   781,   781,   781,   781,
     781,   781,   781,   781,     0,   781,     0,     0,   781,   781,
       0,     0,     0,   781,     0,     0,     0,   781,   781,   781,
       0,     0,     0,     0,  1603,  1604,  1605,  1606,     0,     0,
     781,   781,   781,     0,     0,  2030,     0,     0,     0,   781,
       0,     0,     0,     0,     0,     0,   781,   781,   781,     0,
     781,     0,     0,     0,     0,     0,     0,   781,   781,   781,
       0,   781,   781,   781,   781,   781,     0,   781,   781,   781,
     781,   781,   781,   781,   781,     0,     0,     0,   781,   781,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2031,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2032,     0,     0,  2033,     0,     0,     0,  1194,  1195,  1196,
    1197,  1198,  1199,  1200,  1201,     0,     0,     0,     0,     0,
    1995,  1996,  1607,     0,  1608,  1609,  1610,     0,     0,     0,
       0,     0,     0,  1611,     0,     0,     0,     0,     0,  2035,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  -773,  -773,  1998,     0,     0,     0,     0,
       0,     0,     0,  -773,     0,     0,     0,     0,  2001,     0,
       0,     0,     0,     0,     0,     0,  2002,     0,     0,     0,
       0,     0,  1496,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2004,     0,     0,     0,     0,     0,   781,     0,     0,
       0,  1612,     0,     0,     0,  1463,     0,   781,     0,  2005,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   781,     0,     0,   781,     0,  1567,  1568,     0,
       0,     0,     0,     0,     0,     0,  1578,  1579,  2010,     0,
    1582,  1583,  1584,     0,     0,     0,     0,     0,     0,     0,
    1592,  1593,     0,  1594,  1595,     0,  1613,  1614,  1620,     0,
       0,     0,  1629,  1630,  1631,  1632,     0,  1634,     0,     0,
       0,     0,     0,     0,     0,  1642,  1643,     0,  1646,  1647,
       0,     0,     1,     2,     0,  1651,  1652,  1653,     0,     0,
    1656,  1657,  1658,  1659,  1660,  1661,     0,  1663,     0,     0,
    1666,  1667,     0,     4,     0,  1670,     0,     0,  2014,  1673,
    1677,  1678,     0,     0,     0,  2015,     0,     5,     6,     0,
       0,     0,  1685,  1686,  1687,     7,     0,     0,     0,     8,
       9,  1695,  2016,     0,     0,     0,     0,     0,  1700,  1701,
    1702,     0,     0,     0,    10,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    11,     0,     0,     0,     0,     0,     0,
       0,  1738,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    12,     0,     0,     0,     0,
    1615,  2017,     0,     0,    13,    14,    15,     0,     0,     0,
       0,     0,     0,     0,     0,  1616,  1617,    16,    17,  2018,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   781,
       0,     0,     0,     0,    19,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      20,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2022,     0,    21,     0,    22,     0,     0,
       0,  2024,    23,     0,     0,    24,     0,     0,     0,     0,
       0,     0,     0,  1497,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    25,     0,
      26,     0,     0,     0,     0,     0,     0,     0,     0,  1839,
       0,     0,     0,     0,     0,     0,     0,     0,    27,  1845,
       0,     0,     0,     0,     0,     0,     0,   781,   781,   781,
       0,     0,     0,     0,  1873,    28,     0,  1878,     0,    29,
       0,  2030,   781,  1498,  1499,  1500,  1501,  1502,  1503,  1504,
    1505,  1506,  1507,     0,  1508,  1509,  1510,  1511,  1512,  1513,
    1514,  1515,  1516,     0,  1517,  1518,     0,     0,   781,     0,
       0,     0,     0,     0,   781,     0,     0,   781,     0,   781,
       0,     0,     0,     0,     0,   781,     0,   781,   781,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2031,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2032,     0,     0,  2033,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    30,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    31,     0,     0,  2035,  3298,  3299,     0,     0,
       0,     0,  3300,   781,  3301,    32,  3302,  3303,     0,     0,
       0,     0,     0,     0,     0,     0,    33,     0,     0,     0,
       0,     0,     0,  3304,     0,     0,     0,     0,     0,  1519,
    1520,     0,     0,     0,     0,     0,     0,     0,    34,     0,
       0,    35,     0,    36,     0,     0,    37,     0,     0,    38,
      39,     0,     0,     0,   781,     0,     0,     0,     0,    40,
       0,    41,     0,   781,     0,     0,     0,     0,     0,    42,
       0,  3305,     0,     0,  3306,    43,     0,     0,     0,     0,
       0,  2148,  3307,    44,     0,     0,     0,     0,    45,     0,
      46,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3308,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3309,    47,
       0,     0,     0,    48,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3310,     0,  3311,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3312,  3313,     0,
       0,     0,     0,     0,     0,     0,    49,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    50,  2223,
    2225,  2227,    51,     0,     0,    52,     0,     0,     0,     0,
      53,     0,     0,     0,     0,     0,     0,     0,  3314,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    54,     0,
    2262,     0,     0,     0,     0,     0,     0,     0,  3315,  2267,
       0,  2268,     0,    55,     0,     0,     0,  3316,  3317,     0,
    3318,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     781,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3319,  3320,  3321,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3322,  3323,  3324,     0,     0,
       0,     0,  3325,     0,     0,  3326,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2351,     0,     0,     0,     0,
       0,     0,  3327,  3328,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   781,     0,     0,     0,   781,     0,     0,
       0,     0,   781,   781,     0,     0,     0,     0,     0,     0,
       0,   781,     0,     0,   781,  3329,  3330,     0,     0,     0,
       0,     0,     0,     0,   781,   781,  2407,   781,   781,     0,
     781,   781,   781,   781,   781,     0,     0,   781,     0,     0,
    3331,     0,     0,     0,     0,     0,   781,     0,     0,     0,
       0,     0,     0,   781,     0,   781,     0,   781,   781,     0,
     781,   781,     0,     0,     0,   781,   781,   781,     0,     0,
       0,   781,   781,   781,     0,   781,     0,   781,     0,   781,
       0,   781,     0,   781,     0,     0,     0,     0,   781,     0,
       0,     0,     0,     0,  3332,     0,     0,     0,  3333,     0,
       0,     0,     0,     0,     0,     0,     0,   781,     0,     0,
    3334,   904,     0,     0,   781,     0,     0,   781,     0,     0,
       0,   846,   905,   781,     0,     0,   781,     0,     0,     0,
     781,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   906,   889,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   907,     0,     0,
       0,     0,     0,     0,  3335,     0,     0,  3336,     0,     0,
    3337,  3338,  3339,  3340,     0,     0,     0,     0,   908,     0,
     909,     0,   910,     0,     0,     0,     0,     0,     0,     0,
     781,     0,   911,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3341,  3342,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2572,     0,     0,     0,     0,  3343,     0,     0,
   -1761,   912,     0,     0,     0,     0,   913,     0,     0,   914,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   781,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   915,     0,   916,     0,
       0,     0,     0,     0,     0,   917,     0,   918,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2658,     0,     0,     0,  2660,
     919,   920,     0,     0,  2662,  2663,     0,     0,     0,     0,
       0,     0,     0,  2676,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   921,     0,  2683,  2684,     0,  2685,
       0,     0,  2687,  2688,  2689,  2690,  2691,     0,     0,     0,
       0,     0,     0,     0,     0,   922,     0,     0,  2695,     0,
       0,  2975,     0,     0,     0,  2696,     0,  2697,  1993,  2698,
    2699,     0,  2700,     0,     0,     0,     0,  2703,  2704,  2705,
    1995,  1996,     0,  2707,  2708,  2709,     0,  2710,   923,  2712,
       0,  2714,     0,  2716,     0,  2717,     0,     0,     0,     0,
    2718,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1997,     0,     0,     0,  1998,     0,     0,     0,  2738,
       0,     0,     0,     0,     0,     0,     0,     0,  2001,     0,
       0,     0,     0,     0,     0,  2748,  2002,     0,  2751,     0,
       0,     0,     0,     0,     0,     0,  2003,     0,     0,     0,
       0,     0,     0,   924,     0,     0,     0,     0,     0,     0,
       0,  2004,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1463,     0,     0,   925,  2005,
       0,     0,     0,     0,     0,     0,     0,  2006,   926,   927,
       0,     0,   928,   929,  2976,     0,     0,     0,     0,     0,
       0,     0,  2009,     0,     0,     0,     0,     0,  2010,     0,
     781,     0,     0,   930,   781,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   781,   781,     0,  2012,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   781,     0,     0,     0,   931,
       0,     0,     0,     0,   781,     0,   781,     0,   781,     0,
       0,     0,   932,     0,     0,  1873,     0,     0,  2014,     0,
       0,     0,     0,     0,     0,  2015,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   781,     0,     0,     0, -2319,
     781,     0,  2016,   933,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   934,     0,     0,     0,     0,   781,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2017,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0, -2319,  2018,
       0,     0,     0,  2019,   935,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   781,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2021,     0,     0,     0,
       0,     0,     0,  2022,     0,     0,     0,     0,     0,     0,
       0,  2024,   781,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2027,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2030,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3055,     0,     0,     0,  3057,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3079,  3080,   781,   781,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3102,     0,     0,
    2031,     0,     0,     0,     0,     0,  3112,     0,  3114,     0,
    3116,     0,     0,     0,     0,     0,  2032,     0,     0,  2033,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   781,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2035,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   781,     0,  3173,     0,
     781,   781,     0,   781,     0,     0,     0,     0,     0,     0,
       0,     0,   781,     0,     0,     0,     0,   781,     0,     0,
     781,     0,   781,   781,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   781,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1873,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   781,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   781,     0,
       0,     0,     0,     0,  3257,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   781,     0,     0,
       0,     0,     0,     0,     0,   781,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3354,  3355,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3399,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3417,     0,
       0,     0,  3420,  3421,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3428,     0,     0,     0,     0,  3430,
       0,     0,  3431,     0,  3432,  3433,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   781,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3458,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3458,     0,     0,     0,   781,   781,     0,     0,     0,     0,
       0,     0,     0,   781,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3458,
       0,     0,     0,     0,     0,     0,     0,  3525,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   781,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   781,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   781,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3458,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3934,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3727,  3728,     0,     0,
       0,     0,     0,     0,     0,  3257,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   781,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   781,     0,     0,     0,     0,     0,     0,     0,
     781,     0,   781,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   781,     0,
       0,     0,     0,     0,  3934,  3934,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3827,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   781,     0,     0,     0,
    3458,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3257,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   781,     0,   781,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   781,
       0,  3934,  3934,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4164,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   781,     0,  3934,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3934,   781,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3934,     0,     0,     0,     0,     0,     0,     0,   781,
       0,     0,     0,     0,  4006,     0,     0,     0,     0,     0,
       0,     0,  4012,     0,  4014,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   781,  3934,     0,     0,
    4033,     0,     0,     0,     0,     0,     0,     0,     0,  3934,
    3934,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   781,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3934,     0,     0,     0,     0,
       0,     0,   781,     0,     0,  3934,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   781,     0,     0,  3257,     0,
       0,     0,  3934,     0,  3934,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3934,     0,     0,     0,   781,     0,
       0,   781,     0,     0,     0,     0,     0,     0,     0,  4120,
       0,  4121,  3934,     0,  3934,     0,  3934,     0,     0,     0,
       0,  4129,     0,  3934,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3934,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3934,
    3934,     0,     0,     0,     0,   781,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3934,  3934,     0,     0,     0,
    3934,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4219,     0,   781,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4224,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3458,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4271,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4320,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   136,     0,
     652,   138,   139,   140,   141,     0,     0,  4347,     0,     0,
     142,     0,     0,   653,     0,   144,   145,   146,   147,   148,
     654,   150,     0,   151,     0,     0,   655,   152,   656,   657,
     658,   153,   659,  4366,   154,   155,   156,  1674,   157,     0,
     158,   159,     0,     0,   160,   660,   661,   161,   162,     0,
     163,   662,   663,   165,     0,   166,   167,   168,   169,   664,
     171,     0,   665,   173,     0,   174,   175,   176,   177,   178,
     179,   180,   181,     0,   182,   183,     0,   184,   185,   186,
     666,   188,     0,   189,   667,   668,   190,  4413,     0,   191,
     669,   192,   670,     0,   193,   671,   672,     0,   194,   195,
     196,   673,   674,   675,     0,     0,     0,     0,   676,   199,
     677,     0,     0,   678,   200,   201,     0,   202,     0,     0,
       0,   203,     0,   204,   205,   206,   207,   208,     0,     0,
       0,   209,     0,     0,   210,   211,   212,  3458,     0,     0,
     213,     0,   214,   215,     0,   216,   217,   218,     0,     0,
     219,   220,     0,   221,   222,   223,   224,   225,   226,   679,
       0,   227,   228,   229,   680,   681,   230,   231,     0,   232,
     233,   234,   682,     0,   235,     0,     0,     0,   683,   237,
       0,   238,     0,   239,     0,   240,   684,   242,   685,     0,
     244,     0,   245,     0,   686,     0,   246,   247,     0,   248,
     687,     0,   249,   250,     0,     0,     0,   688,   252,   253,
     254,   689,     0,   255,   256,   257,     0,     0,   258,     0,
       0,     0,   690,   259,   260,   691,     0,     0,   261,     0,
       0,     0,   262,   263,     0,   264,   265,     0,     0,     0,
     266,     0,     0,   267,   268,     0,  1675,   269,     0,   692,
     270,   271,     0,     0,     0,     0,     0,   693,   273,     0,
     274,     0,   275,     0,   276,   277,     0,     0,   694,     0,
       0,     0,     0,   278,     0,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,     0,   296,   297,   298,   695,   299,   300,   301,
     302,   696,   303,   304,     0,     0,     0,     0,   305,   306,
     307,   308,   697,   310,     0,     0,   698,   312,   699,   313,
       0,   314,   700,   701,   702,   703,   704,   319,   320,   321,
     322,   323,     0,   705,   324,   325,     0,     0,   326,   327,
     328,   329,   706,   707,   708,   330,   331,     0,   709,   710,
     332,     0,   333,   334,   711,     0,   336,   337,   338,     0,
     339,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     340,   341,   342,   712,   343,   344,     0,   345,   346,   713,
     348,   349,   350,   351,   714,   715,   354,   716,     0,   355,
     356,   357,     0,   358,     0,   359,   360,   361,   362,   363,
       0,   717,   365,   366,     0,     0,   367,     0,     0,     0,
     368,   369,   370,   371,   372,     0,     0,   373,   374,   375,
     376,   377,     0,   378,   379,     0,   380,   381,   382,   718,
     719,   383,     0,   384,     0,   385,   386,     0,   387,   388,
     389,     0,   720,     0,   721,   391,   392,   393,   394,   395,
     722,   723,   398,   399,   400,   401,     0,   724,   403,     0,
       0,     0,   404,   405,   406,   407,     0,     0,     0,   408,
       0,     0,     0,   409,     0,   410,   411,   412,   413,     0,
     414,   415,   416,   417,   418,     0,     0,     0,     0,     0,
       0,     0,     0,   419,   420,     0,   421,     0,     0,   422,
       0,     0,   423,   424,   425,   725,   726,   426,   427,     0,
     428,   429,   727,   431,   432,   433,   728,   729,   434,   435,
     436,   437,   730,   438,   439,     0,     0,   440,   441,   442,
     443,     0,   731,   444,   445,     0,   732,   733,   734,   735,
       0,     0,     0,     0,  1676,   450,   451,     0,   736,   737,
     738,   453,   454,   455,   739,   456,   457,   740,   458,   459,
       0,   460,   461,     0,     0,   462,     0,     0,   463,     0,
     464,     0,   741,   466,     0,     0,   742,   743,   744,   745,
     467,     0,     0,   468,   746,     0,   747,   469,   470,   471,
     748,   749,     0,     0,     0,     0,     0,     0,   474,   475,
       0,   476,   477,   478,     0,     0,   750,     0,     0,     0,
     751,   752,     0,     0,     0,     0,   753,   754,     0,     0,
     755,   756,     0,     0,   757,   758,   136,     0,   652,   138,
     139,   140,   141,  1869,     0,     0,     0,     0,   142,     0,
       0,   653,     0,   144,   145,   146,   147,   148,   654,   150,
       0,   151,     0,     0,  1870,   152,   656,   657,   658,   153,
     659,     0,   154,   155,   156,     0,   157,     0,   158,   159,
       0,     0,   160,   660,   661,   161,   162,     0,   163,   662,
     663,   165,     0,   166,   167,   168,   169,   664,   171,     0,
     665,   173,     0,   174,   175,   176,   177,   178,   179,   180,
     181,     0,   182,   183,     0,   184,   185,   186,   666,   188,
       0,   189,   667,   668,   190,     0,     0,   191,   669,   192,
     670,     0,   193,   671,   672,     0,   194,   195,   196,   673,
     674,   675,     0,     0,     0,     0,   676,   199,   677,     0,
       0,  1871,   200,   201,     0,   202,     0,     0,     0,   203,
       0,   204,   205,   206,   207,   208,     0,     0,     0,   209,
       0,     0,   210,   211,   212,     0,     0,     0,   213,     0,
     214,   215,     0,   216,   217,   218,     0,     0,   219,   220,
       0,   221,   222,   223,   224,   225,   226,   679,     0,   227,
     228,   229,   680,   681,   230,   231,     0,   232,   233,   234,
     682,     0,   235,     0,     0,     0,   683,   237,     0,   238,
       0,   239,     0,   240,   684,   242,   685,     0,   244,     0,
     245,     0,   686,     0,   246,   247,     0,   248,   687,     0,
     249,   250,     0,     0,     0,   688,   252,   253,   254,   689,
       0,   255,   256,   257,     0,     0,   258,     0,     0,     0,
     690,   259,   260,   691,     0,     0,   261,     0,     0,     0,
     262,   263,     0,   264,   265,     0,     0,     0,   266,     0,
       0,   267,   268,     0,     0,   269,     0,   692,   270,   271,
       0,     0,     0,     0,     0,   693,   273,     0,   274,     0,
     275,     0,   276,   277,     0,     0,   694,     0,     0,     0,
       0,   278,     0,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
       0,   296,   297,   298,   695,   299,   300,   301,   302,   696,
     303,   304,     0,     0,     0,     0,   305,   306,   307,   308,
     697,   310,     0,     0,   698,   312,   699,   313,     0,   314,
     700,   701,   702,   703,   704,   319,   320,   321,   322,   323,
       0,   705,   324,   325,     0,     0,   326,   327,   328,   329,
     706,   707,   708,   330,   331,     0,   709,   710,   332,     0,
     333,   334,   711,  1872,   336,   337,   338,     0,   339,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   340,   341,
     342,   712,   343,   344,     0,   345,   346,   713,   348,   349,
     350,   351,   714,   715,   354,   716,     0,   355,   356,   357,
       0,   358,     0,   359,   360,   361,   362,   363,     0,   717,
     365,   366,     0,     0,   367,     0,     0,     0,   368,   369,
     370,   371,   372,     0,     0,   373,   374,   375,   376,   377,
       0,   378,   379,     0,   380,   381,   382,   718,   719,   383,
       0,   384,     0,   385,   386,     0,   387,   388,   389,     0,
     720,     0,   721,   391,   392,   393,   394,   395,   722,   723,
     398,   399,   400,   401,     0,   724,   403,     0,     0,     0,
     404,   405,   406,   407,     0,     0,     0,   408,     0,     0,
       0,   409,     0,   410,   411,   412,   413,     0,   414,   415,
     416,   417,   418,     0,     0,     0,     0,     0,     0,     0,
       0,   419,   420,     0,   421,     0,     0,   422,     0,     0,
     423,   424,   425,   725,   726,   426,   427,     0,   428,   429,
     727,   431,   432,   433,   728,   729,   434,   435,   436,   437,
     730,   438,   439,     0,     0,   440,   441,   442,   443,     0,
     731,   444,   445,     0,   732,   733,   734,   735,     0,     0,
       0,     0,     0,   450,   451,     0,   736,   737,   738,   453,
     454,   455,   739,   456,   457,   740,   458,   459,     0,   460,
     461,     0,     0,   462,     0,     0,   463,     0,   464,     0,
     741,   466,     0,     0,   742,   743,   744,   745,   467,     0,
       0,   468,   746,     0,   747,   469,   470,   471,   748,   749,
       0,     0,     0,     0,     0,     0,   474,   475,     0,   476,
     477,   478,     0,     0,   750,     0,     0,     0,   751,   752,
       0,     0,     0,     0,   753,   754,     0,     0,   755,   756,
       0,     0,   757,   758,   136,     0,   652,   138,   139,   140,
     141,     0,     0,     0,     0,     0,   142,     0,     0,   653,
       0,   144,   145,   146,   147,   148,   654,   150,     0,   151,
       0,     0,   655,   152,   656,   657,   658,   153,   659,     0,
     154,   155,   156,     0,   157,     0,   158,   159,     0,     0,
     160,   660,   661,   161,   162,     0,   163,   662,   663,   165,
       0,   166,   167,   168,   169,   664,   171,     0,   665,   173,
       0,   174,   175,   176,   177,   178,   179,   180,   181,     0,
     182,   183,     0,   184,   185,   186,   666,   188,     0,   189,
     667,   668,   190,     0,     0,   191,   669,   192,   670,     0,
     193,   671,   672,     0,   194,   195,   196,   673,   674,   675,
       0,     0,     0,     0,   676,   199,   677,     0,     0,   678,
     200,   201,     0,   202,     0,     0,     0,   203,     0,   204,
     205,   206,   207,   208,     0,     0,     0,   209,     0,     0,
     210,   211,   212,     0,     0,     0,   213,     0,   214,   215,
       0,   216,   217,   218,     0,     0,   219,   220,     0,   221,
     222,   223,   224,   225,   226,   679,     0,   227,   228,   229,
     680,   681,   230,   231,     0,   232,   233,   234,   682,     0,
     235,     0,     0,     0,   683,   237,  2222,   238,     0,   239,
       0,   240,   684,   242,   685,     0,   244,     0,   245,     0,
     686,     0,   246,   247,     0,   248,   687,     0,   249,   250,
       0,     0,     0,   688,   252,   253,   254,   689,     0,   255,
     256,   257,     0,     0,   258,     0,     0,     0,   690,   259,
     260,   691,     0,     0,   261,     0,     0,     0,   262,   263,
       0,   264,   265,     0,     0,     0,   266,     0,     0,   267,
     268,     0,     0,   269,     0,   692,   270,   271,     0,     0,
       0,     0,     0,   693,   273,     0,   274,     0,   275,     0,
     276,   277,     0,     0,   694,     0,     0,     0,     0,   278,
       0,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,     0,   296,
     297,   298,   695,   299,   300,   301,   302,   696,   303,   304,
       0,     0,     0,     0,   305,   306,   307,   308,   697,   310,
       0,     0,   698,   312,   699,   313,     0,   314,   700,   701,
     702,   703,   704,   319,   320,   321,   322,   323,     0,   705,
     324,   325,     0,     0,   326,   327,   328,   329,   706,   707,
     708,   330,   331,     0,   709,   710,   332,     0,   333,   334,
     711,     0,   336,   337,   338,     0,   339,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   340,   341,   342,   712,
     343,   344,     0,   345,   346,   713,   348,   349,   350,   351,
     714,   715,   354,   716,     0,   355,   356,   357,     0,   358,
       0,   359,   360,   361,   362,   363,     0,   717,   365,   366,
       0,     0,   367,     0,     0,     0,   368,   369,   370,   371,
     372,     0,     0,   373,   374,   375,   376,   377,     0,   378,
     379,     0,   380,   381,   382,   718,   719,   383,     0,   384,
       0,   385,   386,     0,   387,   388,   389,     0,   720,     0,
     721,   391,   392,   393,   394,   395,   722,   723,   398,   399,
     400,   401,     0,   724,   403,     0,     0,     0,   404,   405,
     406,   407,     0,     0,     0,   408,     0,     0,     0,   409,
       0,   410,   411,   412,   413,     0,   414,   415,   416,   417,
     418,     0,     0,     0,     0,     0,     0,     0,     0,   419,
     420,     0,   421,     0,     0,   422,     0,     0,   423,   424,
     425,   725,   726,   426,   427,     0,   428,   429,   727,   431,
     432,   433,   728,   729,   434,   435,   436,   437,   730,   438,
     439,     0,     0,   440,   441,   442,   443,     0,   731,   444,
     445,     0,   732,   733,   734,   735,     0,     0,     0,     0,
       0,   450,   451,     0,   736,   737,   738,   453,   454,   455,
     739,   456,   457,   740,   458,   459,     0,   460,   461,     0,
       0,   462,     0,     0,   463,     0,   464,     0,   741,   466,
       0,     0,   742,   743,   744,   745,   467,     0,     0,   468,
     746,     0,   747,   469,   470,   471,   748,   749,     0,     0,
       0,     0,     0,     0,   474,   475,     0,   476,   477,   478,
       0,     0,   750,     0,     0,     0,   751,   752,     0,     0,
       0,     0,   753,   754,     0,     0,   755,   756,     0,     0,
     757,   758,   136,     0,   652,   138,   139,   140,   141,     0,
       0,     0,     0,     0,   142,     0,     0,   653,     0,   144,
     145,   146,   147,   148,   654,   150,     0,   151,     0,     0,
     655,   152,   656,   657,   658,   153,   659,     0,   154,   155,
     156,     0,   157,     0,   158,   159,     0,     0,   160,   660,
     661,   161,   162,     0,   163,   662,   663,   165,     0,   166,
     167,   168,   169,   664,   171,     0,   665,   173,     0,   174,
     175,   176,   177,   178,   179,   180,   181,     0,   182,   183,
       0,   184,   185,   186,   666,   188,     0,   189,   667,   668,
     190,     0,     0,   191,   669,   192,   670,     0,   193,   671,
     672,     0,   194,   195,   196,   673,   674,   675,     0,     0,
       0,     0,   676,   199,   677,     0,     0,   678,   200,   201,
       0,   202,     0,     0,     0,   203,     0,   204,   205,   206,
     207,   208,     0,     0,     0,   209,     0,     0,   210,   211,
     212,     0,     0,     0,   213,     0,   214,   215,     0,   216,
     217,   218,     0,     0,   219,   220,     0,   221,   222,   223,
     224,   225,   226,   679,     0,   227,   228,   229,   680,   681,
     230,   231,     0,   232,   233,   234,   682,     0,   235,     0,
       0,     0,   683,   237,  2224,   238,     0,   239,     0,   240,
     684,   242,   685,     0,   244,     0,   245,     0,   686,     0,
     246,   247,     0,   248,   687,     0,   249,   250,     0,     0,
       0,   688,   252,   253,   254,   689,     0,   255,   256,   257,
       0,     0,   258,     0,     0,     0,   690,   259,   260,   691,
       0,     0,   261,     0,     0,     0,   262,   263,     0,   264,
     265,     0,     0,     0,   266,     0,     0,   267,   268,     0,
       0,   269,     0,   692,   270,   271,     0,     0,     0,     0,
       0,   693,   273,     0,   274,     0,   275,     0,   276,   277,
       0,     0,   694,     0,     0,     0,     0,   278,     0,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,     0,   296,   297,   298,
     695,   299,   300,   301,   302,   696,   303,   304,     0,     0,
       0,     0,   305,   306,   307,   308,   697,   310,     0,     0,
     698,   312,   699,   313,     0,   314,   700,   701,   702,   703,
     704,   319,   320,   321,   322,   323,     0,   705,   324,   325,
       0,     0,   326,   327,   328,   329,   706,   707,   708,   330,
     331,     0,   709,   710,   332,     0,   333,   334,   711,     0,
     336,   337,   338,     0,   339,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   340,   341,   342,   712,   343,   344,
       0,   345,   346,   713,   348,   349,   350,   351,   714,   715,
     354,   716,     0,   355,   356,   357,     0,   358,     0,   359,
     360,   361,   362,   363,     0,   717,   365,   366,     0,     0,
     367,     0,     0,     0,   368,   369,   370,   371,   372,     0,
       0,   373,   374,   375,   376,   377,     0,   378,   379,     0,
     380,   381,   382,   718,   719,   383,     0,   384,     0,   385,
     386,     0,   387,   388,   389,     0,   720,     0,   721,   391,
     392,   393,   394,   395,   722,   723,   398,   399,   400,   401,
       0,   724,   403,     0,     0,     0,   404,   405,   406,   407,
       0,     0,     0,   408,     0,     0,     0,   409,     0,   410,
     411,   412,   413,     0,   414,   415,   416,   417,   418,     0,
       0,     0,     0,     0,     0,     0,     0,   419,   420,     0,
     421,     0,     0,   422,     0,     0,   423,   424,   425,   725,
     726,   426,   427,     0,   428,   429,   727,   431,   432,   433,
     728,   729,   434,   435,   436,   437,   730,   438,   439,     0,
       0,   440,   441,   442,   443,     0,   731,   444,   445,     0,
     732,   733,   734,   735,     0,     0,     0,     0,     0,   450,
     451,     0,   736,   737,   738,   453,   454,   455,   739,   456,
     457,   740,   458,   459,     0,   460,   461,     0,     0,   462,
       0,     0,   463,     0,   464,     0,   741,   466,     0,     0,
     742,   743,   744,   745,   467,     0,     0,   468,   746,     0,
     747,   469,   470,   471,   748,   749,     0,     0,     0,     0,
       0,     0,   474,   475,     0,   476,   477,   478,     0,     0,
     750,     0,     0,     0,   751,   752,     0,     0,     0,     0,
     753,   754,     0,     0,   755,   756,     0,     0,   757,   758,
     136,     0,   652,   138,   139,   140,   141,     0,     0,     0,
       0,     0,   142,     0,     0,   653,     0,   144,   145,   146,
     147,   148,   654,   150,     0,   151,     0,     0,   655,   152,
     656,   657,   658,   153,   659,     0,   154,   155,   156,     0,
     157,     0,   158,   159,     0,     0,   160,   660,   661,   161,
     162,     0,   163,   662,   663,   165,     0,   166,   167,   168,
     169,   664,   171,     0,   665,   173,     0,   174,   175,   176,
     177,   178,   179,   180,   181,     0,   182,   183,     0,   184,
     185,   186,   666,   188,     0,   189,   667,   668,   190,     0,
       0,   191,   669,   192,   670,     0,   193,   671,   672,     0,
     194,   195,   196,   673,   674,   675,     0,     0,     0,     0,
     676,   199,   677,     0,     0,   678,   200,   201,     0,   202,
       0,     0,     0,   203,     0,   204,   205,   206,   207,   208,
       0,     0,     0,   209,     0,     0,   210,   211,   212,     0,
       0,     0,   213,     0,   214,   215,     0,   216,   217,   218,
       0,     0,   219,   220,     0,   221,   222,   223,   224,   225,
     226,   679,     0,   227,   228,   229,   680,   681,   230,   231,
       0,   232,   233,   234,   682,     0,   235,     0,     0,     0,
     683,   237,  2226,   238,     0,   239,     0,   240,   684,   242,
     685,     0,   244,     0,   245,     0,   686,     0,   246,   247,
       0,   248,   687,     0,   249,   250,     0,     0,     0,   688,
     252,   253,   254,   689,     0,   255,   256,   257,     0,     0,
     258,     0,     0,     0,   690,   259,   260,   691,     0,     0,
     261,     0,     0,     0,   262,   263,     0,   264,   265,     0,
       0,     0,   266,     0,     0,   267,   268,     0,     0,   269,
       0,   692,   270,   271,     0,     0,     0,     0,     0,   693,
     273,     0,   274,     0,   275,     0,   276,   277,     0,     0,
     694,     0,     0,     0,     0,   278,     0,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,     0,   296,   297,   298,   695,   299,
     300,   301,   302,   696,   303,   304,     0,     0,     0,     0,
     305,   306,   307,   308,   697,   310,     0,     0,   698,   312,
     699,   313,     0,   314,   700,   701,   702,   703,   704,   319,
     320,   321,   322,   323,     0,   705,   324,   325,     0,     0,
     326,   327,   328,   329,   706,   707,   708,   330,   331,     0,
     709,   710,   332,     0,   333,   334,   711,     0,   336,   337,
     338,     0,   339,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   340,   341,   342,   712,   343,   344,     0,   345,
     346,   713,   348,   349,   350,   351,   714,   715,   354,   716,
       0,   355,   356,   357,     0,   358,     0,   359,   360,   361,
     362,   363,     0,   717,   365,   366,     0,     0,   367,     0,
       0,     0,   368,   369,   370,   371,   372,     0,     0,   373,
     374,   375,   376,   377,     0,   378,   379,     0,   380,   381,
     382,   718,   719,   383,     0,   384,     0,   385,   386,     0,
     387,   388,   389,     0,   720,     0,   721,   391,   392,   393,
     394,   395,   722,   723,   398,   399,   400,   401,     0,   724,
     403,     0,     0,     0,   404,   405,   406,   407,     0,     0,
       0,   408,     0,     0,     0,   409,     0,   410,   411,   412,
     413,     0,   414,   415,   416,   417,   418,     0,     0,     0,
       0,     0,     0,     0,     0,   419,   420,     0,   421,     0,
       0,   422,     0,     0,   423,   424,   425,   725,   726,   426,
     427,     0,   428,   429,   727,   431,   432,   433,   728,   729,
     434,   435,   436,   437,   730,   438,   439,     0,     0,   440,
     441,   442,   443,     0,   731,   444,   445,     0,   732,   733,
     734,   735,     0,     0,     0,     0,     0,   450,   451,     0,
     736,   737,   738,   453,   454,   455,   739,   456,   457,   740,
     458,   459,     0,   460,   461,     0,     0,   462,     0,     0,
     463,     0,   464,     0,   741,   466,     0,     0,   742,   743,
     744,   745,   467,     0,     0,   468,   746,     0,   747,   469,
     470,   471,   748,   749,     0,     0,     0,     0,     0,     0,
     474,   475,     0,   476,   477,   478,     0,     0,   750,     0,
       0,     0,   751,   752,     0,     0,     0,     0,   753,   754,
       0,     0,   755,   756,     0,     0,   757,   758,   136,     0,
     652,   138,   139,   140,   141,     0,     0,     0,     0,     0,
     142,     0,     0,   653,     0,   144,   145,   146,   147,   148,
     654,   150,     0,   151,     0,     0,   655,   152,   656,   657,
     658,   153,   659,     0,   154,   155,   156,     0,   157,     0,
     158,   159,     0,     0,   160,   660,   661,   161,   162,     0,
     163,   662,   663,   165,     0,   166,   167,   168,   169,   664,
     171,     0,   665,   173,     0,   174,   175,   176,   177,   178,
     179,   180,   181,     0,   182,   183,     0,   184,   185,   186,
     666,   188,     0,   189,   667,   668,   190,     0,     0,   191,
     669,   192,   670,     0,   193,   671,   672,     0,   194,   195,
     196,   673,   674,   675,     0,     0,     0,     0,   676,   199,
     677,     0,     0,   678,   200,   201,     0,   202,     0,     0,
       0,   203,     0,   204,   205,   206,   207,   208,     0,     0,
       0,   209,     0,     0,   210,   211,   212,     0,     0,     0,
     213,     0,   214,   215,     0,   216,   217,   218,     0,     0,
     219,   220,     0,   221,   222,   223,   224,   225,   226,   679,
       0,   227,   228,   229,   680,   681,   230,   231,     0,   232,
     233,   234,   682,     0,   235,     0,     0,     0,   683,   237,
       0,   238,     0,   239,     0,   240,   684,   242,   685,     0,
     244,     0,   245,     0,   686,     0,   246,   247,     0,   248,
     687,     0,   249,   250,     0,     0,     0,   688,   252,   253,
     254,   689,     0,   255,   256,   257,     0,     0,   258,     0,
       0,     0,   690,   259,   260,   691,     0,     0,   261,     0,
       0,     0,   262,   263,     0,   264,   265,     0,     0,     0,
     266,     0,     0,   267,   268,     0,     0,   269,     0,   692,
     270,   271,     0,     0,     0,     0,     0,   693,   273,     0,
     274,     0,   275,     0,   276,   277,     0,     0,   694,     0,
       0,     0,     0,   278,     0,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,     0,   296,   297,   298,   695,   299,   300,   301,
     302,   696,   303,   304,     0,     0,     0,     0,   305,   306,
     307,   308,   697,   310,     0,     0,   698,   312,   699,   313,
       0,   314,   700,   701,   702,   703,   704,   319,   320,   321,
     322,   323,     0,   705,   324,   325,     0,     0,   326,   327,
     328,   329,   706,   707,   708,   330,   331,     0,   709,   710,
     332,     0,   333,   334,   711,     0,   336,   337,   338,     0,
     339,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     340,   341,   342,   712,   343,   344,     0,   345,   346,   713,
     348,   349,   350,   351,   714,   715,   354,   716,     0,   355,
     356,   357,     0,   358,     0,   359,   360,   361,   362,   363,
       0,   717,   365,   366,     0,     0,   367,     0,     0,     0,
     368,   369,   370,   371,   372,     0,     0,   373,   374,   375,
     376,   377,     0,   378,   379,     0,   380,   381,   382,   718,
     719,   383,     0,   384,     0,   385,   386,     0,   387,   388,
     389,     0,   720,     0,   721,   391,   392,   393,   394,   395,
     722,   723,   398,   399,   400,   401,     0,   724,   403,     0,
       0,     0,   404,   405,   406,   407,     0,     0,     0,   408,
       0,     0,     0,   409,     0,   410,   411,   412,   413,     0,
     414,   415,   416,   417,   418,     0,     0,     0,     0,     0,
       0,     0,     0,   419,   420,     0,   421,     0,     0,   422,
       0,     0,   423,   424,   425,   725,   726,   426,   427,     0,
     428,   429,   727,   431,   432,   433,   728,   729,   434,   435,
     436,   437,   730,   438,   439,     0,     0,   440,   441,   442,
     443,     0,   731,   444,   445,     0,   732,   733,   734,   735,
       0,     0,     0,     0,     0,   450,   451,     0,   736,   737,
     738,   453,   454,   455,   739,   456,   457,   740,   458,   459,
       0,   460,   461,     0,     0,   462,     0,     0,   463,     0,
     464,     0,   741,   466,     0,     0,   742,   743,   744,   745,
     467,     0,     0,   468,   746,     0,   747,   469,   470,   471,
     748,   749,     0,     0,     0,     0,     0,     0,   474,   475,
       0,   476,   477,   478,     0,     0,   750,     0,     0,     0,
     751,   752,     0,     0,     0,     0,   753,   754,     0,     0,
     755,   756,     0,     0,   757,   758,   136,     0,   652,   138,
     139,   140,   141,     0,     0,     0,     0,     0,   142,     0,
       0,   653,     0,   144,   145,   146,   147,   148,   654,   150,
       0,   151,     0,     0,   655,   152,   656,   657,   658,   153,
     659,     0,   154,   155,   156,     0,   157,     0,   158,   159,
       0,     0,   160,   660,   661,   161,   162,     0,   163,   662,
     663,   165,     0,   166,   167,   168,   169,   664,   171,     0,
     665,   173,     0,   174,   175,   176,   177,   178,   179,   180,
     181,     0,   182,   183,     0,   184,   185,   186,   666,   188,
       0,   189,   667,   668,   190,     0,     0,   191,   669,   192,
     670,     0,   193,   671,   672,     0,   194,   195,   196,   673,
     674,   675,     0,     0,     0,     0,   676,   199,   677,     0,
       0,   678,   200,   201,     0,   202,     0,     0,     0,   203,
       0,   204,   205,   206,   207,   208,     0,     0,     0,   209,
       0,     0,   210,   211,   212,     0,     0,     0,   213,     0,
     214,   215,     0,   216,   217,   218,     0,     0,   219,   220,
       0,   221,   222,   223,   224,   225,   226,   679,     0,   227,
     228,   229,   680,   681,   230,   231,     0,   232,   233,   234,
     682,     0,   235,     0,     0,     0,   683,   237,     0,   238,
       0,   239,     0,   240,   684,   242,   685,     0,   244,     0,
     245,     0,   686,     0,   246,   247,     0,   248,   687,     0,
     249,   250,     0,     0,     0,   688,   252,   253,   254,   689,
       0,   255,   256,   257,     0,     0,   258,     0,     0,     0,
     690,   259,   260,   691,     0,     0,   261,     0,     0,     0,
     262,   263,     0,   264,   265,     0,     0,     0,   266,     0,
       0,   267,   268,     0,     0,   269,     0,   692,   270,   271,
       0,     0,     0,     0,     0,   693,   273,     0,   274,     0,
     275,     0,   276,   277,     0,     0,   694,     0,     0,     0,
       0,   278,     0,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
       0,   296,   297,   298,   695,   299,   300,   301,   302,   696,
     303,   304,     0,     0,     0,     0,   305,   306,   307,   308,
     697,   310,     0,     0,   698,   312,   699,   313,     0,   314,
     700,   701,   702,   703,   704,   319,   320,   321,   322,   323,
       0,   705,   324,   325,     0,     0,   326,   327,   328,   329,
     706,   707,   708,   330,   331,     0,   709,   710,   332,     0,
     333,   334,   711,     0,   336,   337,   338,     0,   339,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   340,   341,
     342,   712,   343,   344,     0,   345,   346,   713,   348,   349,
     350,   351,   714,   715,   354,   716,     0,   355,   356,   357,
       0,   358,     0,   359,   360,   361,   362,   363,     0,   717,
     365,   366,     0,     0,   367,     0,     0,     0,   368,   369,
     370,   371,   372,     0,     0,   373,   374,   375,   376,   377,
       0,   378,   379,     0,   380,   381,   382,   718,   719,   383,
       0,   384,     0,   385,   386,     0,   387,   388,   389,     0,
     720,     0,   721,   391,   392,   393,   394,   395,   722,   723,
     398,   399,   400,   401,     0,   724,   403,     0,     0,     0,
     404,   405,   406,   407,     0,     0,     0,   408,     0,     0,
       0,   409,     0,   410,   411,   412,   413,     0,   414,   415,
     416,   417,   418,     0,     0,     0,     0,     0,     0,     0,
       0,   419,   420,     0,   421,     0,     0,   422,     0,     0,
     423,   424,   425,   725,   726,   426,   427,     0,   428,   429,
     727,   431,   432,   433,   728,   729,   434,   435,   436,   437,
     730,   438,   439,     0,     0,   440,   441,   442,   443,     0,
     731,   444,   445,     0,   732,   733,   734,   735,     0,     0,
       0,     0,     0,   450,   451,     0,   736,   737,   738,   453,
     454,   455,   739,   456,   457,   740,   458,   459,     0,   460,
     461,     0,     0,   462,     0,     0,   463,     0,   464,     0,
     741,   466,     0,     0,   742,   743,   744,   745,   467,     0,
       0,   468,   746,     0,   747,   469,   470,   471,   748,   749,
       0,     0,     0,     0,     0,     0,   474,   475,     0,   476,
     477,   478,     0,     0,   750,     0,     0,     0,   751,   752,
       0,     0,     0,     0,   753,  1100,     0,     0,   755,   756,
       0,     0,   757,   758,   136,     0,   652,   138,   139,   140,
     141,  1709,     0,     0,     0,     0,  1710,     0,     0,   653,
       0,   144,   145,   146,   147,   148,   654,   150,     0,   151,
       0,     0,   655,   152,   656,   657,   658,   153,   659,     0,
     154,   155,   156,     0,   157,     0,   158,   159,     0,     0,
     160,   660,   661,   161,   162,     0,   163,   662,   663,   165,
       0,   166,   167,   168,   169,   664,   171,     0,   665,   173,
       0,   174,   175,   176,   177,   178,   179,   180,   181,     0,
     182,   183,     0,   184,   185,   186,   666,   188,     0,   189,
     667,   668,   190,     0,     0,   191,   669,   192,   670,     0,
     193,   671,   672,     0,   194,   195,   196,   673,   674,   675,
       0,     0,     0,     0,   676,   199,   677,     0,     0,   678,
     200,   201,     0,   202,     0,     0,     0,   203,     0,   204,
     205,   206,   207,   208,     0,     0,     0,   209,     0,     0,
     210,   211,   212,     0,     0,     0,   213,     0,   214,   215,
       0,   216,   217,   218,     0,     0,   219,   220,     0,   221,
     222,   223,   224,   225,   226,   679,     0,   227,   228,   229,
     680,   681,   230,   231,     0,   232,   233,   234,   682,     0,
     235,     0,     0,     0,   683,   237,     0,   238,     0,   239,
       0,   240,   684,   242,   685,     0,   244,     0,   245,     0,
     686,     0,   246,   247,     0,   248,   687,     0,   249,   250,
       0,     0,     0,   688,   252,   253,   254,   689,     0,   255,
     256,   257,     0,     0,   258,     0,     0,     0,   690,   259,
     260,   691,     0,     0,   261,     0,     0,     0,   262,   263,
       0,   264,   265,     0,     0,     0,   266,     0,     0,   267,
     268,     0,     0,   269,     0,   692,   270,   271,     0,     0,
       0,     0,     0,   693,   273,     0,   274,     0,   275,     0,
     276,   277,     0,     0,   694,     0,     0,     0,     0,   278,
       0,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,     0,   296,
     297,   298,   695,   299,   300,   301,   302,   696,   303,   304,
       0,     0,     0,     0,   305,   306,   307,   308,   697,   310,
       0,     0,   698,   312,   699,   313,     0,   314,   700,   701,
     702,   703,   704,   319,   320,   321,   322,   323,     0,   705,
     324,   325,     0,     0,   326,   327,   328,   329,   706,     0,
     708,   330,   331,     0,   709,   710,   332,     0,   333,   334,
     711,     0,   336,   337,   338,     0,   339,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   340,   341,   342,   712,
     343,   344,     0,   345,   346,   713,   348,   349,   350,   351,
     714,   715,   354,   716,     0,   355,   356,   357,     0,   358,
       0,   359,   360,   361,   362,   363,     0,   717,   365,   366,
       0,     0,   367,     0,     0,     0,   368,   369,   370,   371,
     372,     0,     0,   373,   374,   375,   376,   377,     0,   378,
     379,     0,   380,   381,   382,   718,   719,   383,     0,   384,
       0,   385,   386,     0,   387,   388,   389,     0,   720,     0,
     721,   391,   392,   393,   394,   395,   722,   723,   398,   399,
     400,   401,     0,   724,   403,     0,     0,     0,   404,   405,
     406,   407,     0,     0,     0,   408,     0,     0,     0,   409,
       0,   410,   411,   412,   413,     0,   414,   415,   416,   417,
     418,     0,     0,     0,     0,     0,     0,     0,     0,   419,
     420,     0,   421,     0,     0,   422,     0,     0,   423,   424,
     425,   725,   726,   426,   427,     0,   428,   429,   727,   431,
     432,   433,   728,   729,   434,   435,   436,   437,   730,   438,
     439,     0,     0,   440,   441,   442,   443,     0,   731,   444,
     445,     0,   732,   733,   734,   735,     0,     0,     0,     0,
       0,   450,   451,     0,   736,   737,   738,   453,   454,   455,
     739,   456,   457,   740,   458,   459,     0,   460,   461,     0,
       0,   462,     0,     0,   463,     0,   464,     0,   741,   466,
       0,     0,   742,   743,   744,   745,   467,     0,     0,   468,
     746,     0,   747,   469,   470,   471,   748,   749,     0,     0,
       0,     0,     0,     0,   474,   475,     0,   476,   477,   478,
       0,     0,   750,     0,     0,     0,   751,   752,     0,     0,
       0,     0,   753,   754,     0,     0,   755,   756,     0,     0,
     757,   758,   136,     0,   652,   138,   139,   140,   141,     0,
       0,     0,     0,     0,   142,     0,     0,   653,     0,   144,
     145,   146,   147,   148,   654,   150,     0,   151,     0,     0,
     655,   152,   656,   657,   658,   153,   659,     0,   154,   155,
     156,     0,   157,     0,   158,   159,     0,     0,   160,   660,
     661,   161,   162,     0,   163,   662,   663,   165,     0,   166,
     167,   168,   169,   664,   171,     0,   665,   173,     0,   174,
     175,   176,   177,   178,   179,   180,   181,     0,   182,   183,
       0,   184,   185,   186,   666,   188,     0,   189,   667,   668,
     190,     0,     0,   191,   669,   192,   670,     0,   193,   671,
     672,     0,   194,   195,   196,   673,   674,   675,     0,     0,
       0,     0,   676,   199,   677,     0,     0,   678,   200,   201,
       0,   202,     0,     0,     0,   203,     0,   204,   205,   206,
     207,   208,     0,     0,     0,   209,     0,     0,   210,   211,
     212,     0,     0,     0,   213,     0,   214,   215,     0,   216,
     217,   218,     0,     0,   219,   220,     0,   221,   222,   223,
     224,   225,   226,   679,     0,   227,   228,   229,   680,   681,
     230,   231,     0,   232,   233,   234,   682,     0,   235,     0,
       0,     0,   683,   237,     0,   238,     0,   239,     0,   240,
     684,   242,   685,     0,   244,     0,   245,     0,   686,     0,
     246,   247,     0,   248,   687,     0,   249,   250,     0,     0,
       0,   688,   252,   253,   254,   689,     0,   255,   256,   257,
       0,     0,   258,     0,     0,     0,   690,   259,   260,  2657,
       0,     0,   261,     0,     0,     0,   262,   263,     0,   264,
     265,     0,     0,     0,   266,     0,     0,   267,   268,     0,
       0,   269,     0,   692,   270,   271,     0,     0,     0,     0,
       0,   693,   273,     0,   274,     0,   275,     0,   276,   277,
       0,     0,   694,     0,     0,     0,     0,   278,     0,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,     0,   296,   297,   298,
     695,   299,   300,   301,   302,   696,   303,   304,     0,     0,
       0,     0,   305,   306,   307,   308,   697,   310,     0,     0,
     698,   312,   699,   313,     0,   314,   700,   701,   702,   703,
     704,   319,   320,   321,   322,   323,     0,   705,   324,   325,
       0,     0,   326,   327,   328,   329,   706,   707,   708,   330,
     331,     0,   709,   710,   332,     0,   333,   334,   711,     0,
     336,   337,   338,     0,   339,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   340,   341,   342,   712,   343,   344,
       0,   345,   346,   713,   348,   349,   350,   351,   714,   715,
     354,   716,     0,   355,   356,   357,     0,   358,     0,   359,
     360,   361,   362,   363,     0,   717,   365,   366,     0,     0,
     367,     0,     0,     0,   368,   369,   370,   371,   372,     0,
       0,   373,   374,   375,   376,   377,     0,   378,   379,     0,
     380,   381,   382,   718,   719,   383,     0,   384,     0,   385,
     386,     0,   387,   388,   389,     0,   720,     0,   721,   391,
     392,   393,   394,   395,   722,   723,   398,   399,   400,   401,
       0,   724,   403,     0,     0,     0,   404,   405,   406,   407,
       0,     0,     0,   408,     0,     0,     0,   409,     0,   410,
     411,   412,   413,     0,   414,   415,   416,   417,   418,     0,
       0,     0,     0,     0,     0,     0,     0,   419,   420,     0,
     421,     0,     0,   422,     0,     0,   423,   424,   425,   725,
     726,   426,   427,     0,   428,   429,   727,   431,   432,   433,
     728,   729,   434,   435,   436,   437,   730,   438,   439,     0,
       0,   440,   441,   442,   443,     0,   731,   444,   445,     0,
     732,   733,   734,   735,     0,     0,     0,     0,     0,   450,
     451,     0,   736,   737,   738,   453,   454,   455,   739,   456,
     457,   740,   458,   459,     0,   460,   461,     0,     0,   462,
       0,     0,   463,     0,   464,     0,   741,   466,     0,     0,
     742,   743,   744,   745,   467,     0,     0,   468,   746,     0,
     747,   469,   470,   471,   748,   749,     0,     0,     0,     0,
       0,     0,   474,   475,     0,   476,   477,   478,     0,     0,
     750,     0,     0,     0,   751,   752,     0,     0,     0,     0,
     753,   754,     0,     0,   755,   756,     0,     0,   757,   758,
     136,     0,   652,   138,   139,   140,   141,     0,     0,     0,
       0,     0,   142,     0,     0,   653,     0,   144,   145,   146,
     147,   148,   654,   150,     0,   151,     0,     0,   655,   152,
     656,   657,   658,   153,   659,     0,   154,   155,   156,     0,
     157,     0,   158,   159,     0,     0,   160,   660,   661,   161,
     162,     0,   163,   662,   663,   165,     0,   166,   167,   168,
     169,   664,   171,     0,   665,   173,     0,   174,   175,   176,
     177,   178,   179,   180,   181,     0,   182,   183,     0,   184,
     185,   186,   666,   188,     0,   189,   667,   668,   190,     0,
       0,   191,   669,   192,   670,     0,   193,   671,   672,     0,
     194,   195,   196,   673,   674,   675,     0,     0,     0,     0,
     676,   199,   677,     0,     0,   678,   200,   201,     0,   202,
       0,     0,     0,   203,     0,   204,   205,   206,   207,   208,
       0,     0,     0,   209,     0,     0,   210,   211,   212,     0,
       0,     0,   213,     0,   214,   215,     0,   216,   217,   218,
       0,     0,   219,   220,     0,   221,   222,   223,   224,   225,
     226,   679,     0,   227,   228,   229,   680,   681,   230,   231,
       0,   232,   233,   234,   682,     0,   235,     0,     0,     0,
     683,   237,     0,   238,     0,   239,     0,   240,   684,   242,
     685,     0,   244,     0,   245,     0,   686,     0,   246,   247,
       0,   248,   687,     0,   249,   250,     0,     0,     0,   688,
     252,   253,   254,   689,     0,   255,   256,   257,     0,     0,
     258,     0,     0,     0,   690,   259,   260,  2702,     0,     0,
     261,     0,     0,     0,   262,   263,     0,   264,   265,     0,
       0,     0,   266,     0,     0,   267,   268,     0,     0,   269,
       0,   692,   270,   271,     0,     0,     0,     0,     0,   693,
     273,     0,   274,     0,   275,     0,   276,   277,     0,     0,
     694,     0,     0,     0,     0,   278,     0,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,     0,   296,   297,   298,   695,   299,
     300,   301,   302,   696,   303,   304,     0,     0,     0,     0,
     305,   306,   307,   308,   697,   310,     0,     0,   698,   312,
     699,   313,     0,   314,   700,   701,   702,   703,   704,   319,
     320,   321,   322,   323,     0,   705,   324,   325,     0,     0,
     326,   327,   328,   329,   706,   707,   708,   330,   331,     0,
     709,   710,   332,     0,   333,   334,   711,     0,   336,   337,
     338,     0,   339,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   340,   341,   342,   712,   343,   344,     0,   345,
     346,   713,   348,   349,   350,   351,   714,   715,   354,   716,
       0,   355,   356,   357,     0,   358,     0,   359,   360,   361,
     362,   363,     0,   717,   365,   366,     0,     0,   367,     0,
       0,     0,   368,   369,   370,   371,   372,     0,     0,   373,
     374,   375,   376,   377,     0,   378,   379,     0,   380,   381,
     382,   718,   719,   383,     0,   384,     0,   385,   386,     0,
     387,   388,   389,     0,   720,     0,   721,   391,   392,   393,
     394,   395,   722,   723,   398,   399,   400,   401,     0,   724,
     403,     0,     0,     0,   404,   405,   406,   407,     0,     0,
       0,   408,     0,     0,     0,   409,     0,   410,   411,   412,
     413,     0,   414,   415,   416,   417,   418,     0,     0,     0,
       0,     0,     0,     0,     0,   419,   420,     0,   421,     0,
       0,   422,     0,     0,   423,   424,   425,   725,   726,   426,
     427,     0,   428,   429,   727,   431,   432,   433,   728,   729,
     434,   435,   436,   437,   730,   438,   439,     0,     0,   440,
     441,   442,   443,     0,   731,   444,   445,     0,   732,   733,
     734,   735,     0,     0,     0,     0,     0,   450,   451,     0,
     736,   737,   738,   453,   454,   455,   739,   456,   457,   740,
     458,   459,     0,   460,   461,     0,     0,   462,     0,     0,
     463,     0,   464,     0,   741,   466,     0,     0,   742,   743,
     744,   745,   467,     0,     0,   468,   746,     0,   747,   469,
     470,   471,   748,   749,     0,     0,     0,     0,     0,     0,
     474,   475,     0,   476,   477,   478,     0,     0,   750,     0,
       0,     0,   751,   752,     0,     0,     0,     0,   753,   754,
       0,     0,   755,   756,     0,     0,   757,   758,   136,     0,
     652,   138,   139,   140,   141,     0,     0,     0,     0,     0,
     142,     0,     0,   653,     0,   144,   145,   146,   147,   148,
     654,   150,     0,   151,     0,     0,   655,   152,   656,   657,
     658,   153,   659,     0,   154,   155,   156,     0,   157,     0,
     158,   159,     0,     0,   160,   660,   661,   161,   162,     0,
     163,   662,   663,   165,     0,   166,   167,   168,   169,   664,
     171,     0,   665,   173,     0,   174,   175,   176,   177,   178,
     179,   180,   181,     0,   182,   183,     0,   184,   185,   186,
     666,   188,     0,   189,   667,   668,   190,     0,     0,   191,
     669,   192,   670,     0,   193,   671,   672,     0,   194,   195,
     196,   673,   674,   675,     0,     0,     0,     0,   676,   199,
     677,     0,     0,  3457,   200,   201,     0,   202,     0,     0,
       0,   203,     0,   204,   205,   206,   207,   208,     0,     0,
       0,   209,     0,     0,   210,   211,   212,     0,     0,     0,
     213,     0,   214,   215,     0,   216,   217,   218,     0,     0,
     219,   220,     0,   221,   222,   223,   224,   225,   226,   679,
       0,   227,   228,   229,   680,   681,   230,   231,     0,   232,
     233,   234,   682,     0,   235,     0,     0,     0,   683,   237,
       0,   238,     0,   239,     0,   240,   684,   242,   685,     0,
     244,     0,   245,     0,   686,     0,   246,   247,     0,   248,
     687,     0,   249,   250,     0,     0,     0,   688,   252,   253,
     254,   689,     0,   255,   256,   257,     0,     0,   258,     0,
       0,     0,   690,   259,   260,   691,     0,     0,   261,     0,
       0,     0,   262,   263,     0,   264,   265,     0,     0,     0,
     266,     0,     0,   267,   268,     0,     0,   269,     0,   692,
     270,   271,     0,     0,     0,     0,     0,   693,   273,     0,
     274,     0,   275,     0,   276,   277,     0,     0,   694,     0,
       0,     0,     0,   278,     0,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,     0,   296,   297,   298,   695,   299,   300,   301,
     302,   696,   303,   304,     0,     0,     0,     0,   305,   306,
     307,   308,   697,   310,     0,     0,   698,   312,   699,   313,
       0,   314,   700,   701,   702,   703,   704,   319,   320,   321,
     322,   323,     0,   705,   324,   325,     0,     0,   326,   327,
     328,   329,   706,   707,   708,   330,   331,     0,   709,   710,
     332,     0,   333,   334,   711,     0,   336,   337,   338,     0,
     339,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     340,   341,   342,   712,   343,   344,     0,   345,   346,   713,
     348,   349,   350,   351,   714,   715,   354,   716,     0,   355,
     356,   357,     0,   358,     0,   359,   360,   361,   362,   363,
       0,   717,   365,   366,     0,     0,   367,     0,     0,     0,
     368,   369,   370,   371,   372,     0,     0,   373,   374,   375,
     376,   377,     0,   378,   379,     0,   380,   381,   382,   718,
     719,   383,     0,   384,     0,   385,   386,     0,   387,   388,
     389,     0,   720,     0,   721,   391,   392,   393,   394,   395,
     722,   723,   398,   399,   400,   401,     0,   724,   403,     0,
       0,     0,   404,   405,   406,   407,     0,     0,     0,   408,
       0,     0,     0,   409,     0,   410,   411,   412,   413,     0,
     414,   415,   416,   417,   418,     0,     0,     0,     0,     0,
       0,     0,     0,   419,   420,     0,   421,     0,     0,   422,
       0,     0,   423,   424,   425,   725,   726,   426,   427,     0,
     428,   429,   727,   431,   432,   433,   728,   729,   434,   435,
     436,   437,   730,   438,   439,     0,     0,   440,   441,   442,
     443,     0,   731,   444,   445,     0,   732,   733,   734,   735,
       0,     0,     0,     0,     0,   450,   451,     0,   736,   737,
     738,   453,   454,   455,   739,   456,   457,   740,   458,   459,
       0,   460,   461,     0,     0,   462,     0,     0,   463,     0,
     464,     0,   741,   466,     0,     0,   742,   743,   744,   745,
     467,     0,     0,   468,   746,     0,   747,   469,   470,   471,
     748,   749,     0,     0,     0,     0,     0,     0,   474,   475,
       0,   476,   477,   478,     0,     0,   750,     0,     0,     0,
     751,   752,     0,     0,     0,     0,   753,   754,     0,     0,
     755,   756,     0,     0,   757,   758,   136,     0,   652,   138,
     139,   140,   141,     0,     0,     0,     0,     0,   142,     0,
       0,   653,     0,   144,   145,   146,   147,   148,   654,   150,
       0,   151,     0,     0,   655,   152,   656,   657,   658,   153,
     659,     0,   154,   155,   156,     0,   157,     0,   158,   159,
       0,     0,   160,   660,   661,   161,   162,     0,   163,   662,
     663,   165,     0,   166,   167,   168,   169,   664,   171,     0,
     665,   173,     0,   174,   175,   176,   177,   178,   179,   180,
     181,     0,   182,   183,     0,   184,   185,   186,   666,   188,
       0,   189,   667,   668,   190,     0,     0,   191,   669,   192,
     670,     0,   193,   671,   672,     0,   194,   195,   196,   673,
     674,   675,     0,     0,     0,     0,   676,   199,   677,     0,
       0,   678,   200,   201,     0,   202,     0,     0,     0,   203,
       0,   204,   205,   206,   207,   208,     0,     0,     0,   209,
       0,     0,   210,   211,   212,     0,     0,     0,   213,     0,
     214,   215,     0,   216,   217,   218,     0,     0,   219,   220,
       0,   221,   222,   223,   224,   225,   226,   679,     0,   227,
     228,   229,   680,   681,   230,   231,     0,   232,   233,   234,
     682,     0,   235,     0,     0,     0,   683,   237,     0,   238,
       0,   239,     0,   240,   684,   242,   685,     0,   244,     0,
     245,     0,   686,     0,   246,   247,     0,   248,   687,     0,
     249,   250,     0,     0,     0,   688,   252,   253,   254,   689,
       0,   255,   256,   257,     0,     0,   258,     0,     0,     0,
     690,   259,   260,   691,     0,     0,   261,     0,     0,     0,
     262,   263,     0,   264,   265,     0,     0,     0,   266,     0,
       0,   267,   268,     0,     0,   269,     0,   692,   270,   271,
       0,     0,     0,     0,     0,   693,   273,     0,   274,     0,
     275,     0,   276,   277,     0,     0,   694,     0,     0,     0,
       0,   278,     0,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
       0,   296,   297,   298,   695,   299,   300,   301,   302,   696,
     303,   304,  4293,     0,     0,     0,   305,   306,   307,   308,
     697,   310,     0,     0,   698,   312,   699,   313,     0,   314,
     700,   701,   702,   703,   704,   319,   320,   321,   322,   323,
       0,   705,   324,   325,     0,     0,   326,   327,   328,   329,
     706,     0,   708,   330,   331,     0,   709,   710,   332,     0,
     333,   334,   711,     0,   336,   337,   338,     0,   339,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   340,   341,
     342,   712,   343,   344,     0,   345,   346,   713,   348,   349,
     350,   351,   714,   715,   354,   716,     0,   355,   356,   357,
       0,   358,     0,   359,   360,   361,   362,   363,     0,   717,
     365,   366,     0,     0,   367,     0,     0,     0,   368,   369,
     370,   371,   372,     0,     0,   373,   374,   375,   376,   377,
       0,   378,   379,     0,   380,   381,   382,   718,   719,   383,
       0,   384,     0,   385,   386,     0,   387,   388,   389,     0,
     720,     0,   721,   391,   392,   393,   394,   395,   722,   723,
     398,   399,   400,   401,     0,   724,   403,     0,     0,     0,
     404,   405,   406,   407,     0,     0,     0,   408,     0,     0,
       0,   409,     0,   410,   411,   412,   413,     0,   414,   415,
     416,   417,   418,     0,     0,     0,     0,     0,     0,     0,
       0,   419,   420,     0,   421,     0,     0,   422,     0,     0,
     423,   424,   425,   725,   726,   426,   427,     0,   428,   429,
     727,   431,   432,   433,   728,   729,   434,   435,   436,   437,
     730,   438,   439,     0,     0,   440,   441,   442,   443,     0,
     731,   444,   445,     0,   732,   733,   734,   735,     0,     0,
       0,     0,     0,   450,   451,     0,   736,   737,   738,   453,
     454,   455,   739,   456,   457,   740,   458,   459,     0,   460,
     461,     0,     0,   462,     0,     0,   463,     0,   464,     0,
     741,   466,     0,     0,   742,   743,   744,   745,   467,     0,
       0,   468,   746,     0,   747,   469,   470,   471,   748,   749,
       0,     0,     0,     0,     0,     0,   474,   475,     0,   476,
     477,   478,     0,     0,   750,     0,     0,     0,   751,   752,
       0,     0,     0,     0,   753,   754,     0,     0,   755,   756,
       0,     0,   757,   758,   136,     0,   652,   138,   139,   140,
     141,     0,     0,     0,     0,     0,   142,     0,     0,   653,
       0,   144,   145,   146,   147,   148,   654,   150,     0,   151,
       0,     0,   655,   152,   656,   657,   658,   153,   659,     0,
     154,   155,   156,     0,   157,     0,   158,   159,     0,     0,
     160,   660,   661,   161,   162,     0,   163,   662,   663,   165,
       0,   166,   167,   168,   169,   664,   171,     0,   665,   173,
       0,   174,   175,   176,   177,   178,   179,   180,   181,     0,
     182,   183,     0,   184,   185,   186,   666,   188,     0,   189,
     667,   668,   190,     0,     0,   191,   669,   192,   670,     0,
     193,   671,   672,     0,   194,   195,   196,   673,   674,   675,
       0,     0,     0,     0,   676,   199,   677,     0,     0,   678,
     200,   201,     0,   202,     0,     0,     0,   203,     0,   204,
     205,   206,   207,   208,     0,     0,     0,   209,     0,     0,
     210,   211,   212,     0,     0,     0,   213,     0,   214,   215,
       0,   216,   217,   218,     0,     0,   219,   220,     0,   221,
     222,   223,   224,   225,   226,   679,     0,   227,   228,   229,
     680,   681,   230,   231,     0,   232,   233,   234,   682,     0,
     235,     0,     0,     0,   683,   237,     0,   238,     0,   239,
       0,   240,   684,   242,   685,     0,   244,     0,   245,     0,
     686,     0,   246,   247,     0,   248,   687,     0,   249,   250,
       0,     0,     0,   688,   252,   253,   254,   689,     0,   255,
     256,   257,     0,     0,   258,     0,     0,     0,   690,   259,
     260,   691,     0,     0,   261,     0,     0,     0,   262,   263,
       0,   264,   265,     0,     0,     0,   266,     0,     0,   267,
     268,     0,     0,   269,     0,   692,   270,   271,     0,     0,
       0,     0,     0,   693,   273,     0,   274,     0,   275,     0,
     276,   277,     0,     0,   694,     0,     0,     0,     0,   278,
       0,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,     0,   296,
     297,   298,   695,   299,   300,   301,   302,   696,   303,   304,
       0,     0,     0,     0,   305,   306,   307,   308,   697,   310,
       0,     0,   698,   312,   699,   313,     0,   314,   700,   701,
     702,   703,   704,   319,   320,   321,   322,   323,     0,   705,
     324,   325,     0,     0,   326,   327,   328,   329,   706,     0,
     708,   330,   331,     0,   709,   710,   332,     0,   333,   334,
     711,     0,   336,   337,   338,     0,   339,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   340,   341,   342,   712,
     343,   344,     0,   345,   346,   713,   348,   349,   350,   351,
     714,   715,   354,   716,     0,   355,   356,   357,     0,   358,
       0,   359,   360,   361,   362,   363,     0,   717,   365,   366,
       0,     0,   367,     0,     0,     0,   368,   369,   370,   371,
     372,     0,     0,   373,   374,   375,   376,   377,     0,   378,
     379,     0,   380,   381,   382,   718,   719,   383,     0,   384,
       0,   385,   386,     0,   387,   388,   389,     0,   720,     0,
     721,   391,   392,   393,   394,   395,   722,   723,   398,   399,
     400,   401,     0,   724,   403,     0,     0,     0,   404,   405,
     406,   407,     0,     0,     0,   408,     0,     0,     0,   409,
       0,   410,   411,   412,   413,     0,   414,   415,   416,   417,
     418,     0,     0,     0,     0,     0,     0,     0,     0,   419,
     420,     0,   421,     0,     0,   422,     0,     0,   423,   424,
     425,   725,   726,   426,   427,     0,   428,   429,   727,   431,
     432,   433,   728,   729,   434,   435,   436,   437,   730,   438,
     439,     0,     0,   440,   441,   442,   443,     0,   731,   444,
     445,     0,   732,   733,   734,   735,     0,     0,     0,     0,
       0,   450,   451,     0,   736,   737,   738,   453,   454,   455,
     739,   456,   457,   740,   458,   459,     0,   460,   461,     0,
       0,   462,     0,     0,   463,     0,   464,     0,   741,   466,
       0,     0,   742,   743,   744,   745,   467,     0,     0,   468,
     746,     0,   747,   469,   470,   471,   748,   749,     0,     0,
       0,     0,     0,     0,   474,   475,     0,   476,   477,   478,
       0,     0,   750,     0,     0,     0,   751,   752,     0,     0,
       0,     0,   753,   754,     0,     0,   755,   756,     0,     0,
     757,   758,   136,     0,   652,   138,   139,   140,   141,     0,
       0,     0,     0,     0,   142,     0,     0,   653,     0,   144,
     145,   146,   147,   148,   654,   150,     0,   151,     0,     0,
     655,   152,   656,   657,   658,   153,   659,     0,   154,   155,
     156,     0,   157,     0,   158,   159,     0,     0,   160,   660,
     661,   161,   162,     0,   163,   662,   663,   165,     0,   166,
     167,   168,   169,   664,   171,     0,   665,   173,     0,   174,
     175,   176,   177,   178,   179,   180,   181,     0,   182,   183,
       0,   184,   185,   186,   666,   188,     0,   189,   667,   668,
     190,     0,     0,   191,   669,   192,   670,     0,   193,   671,
     672,     0,   194,   195,   196,   673,   674,   675,     0,     0,
       0,     0,   676,   199,   677,     0,     0,   678,   200,   201,
       0,   202,     0,     0,     0,   203,     0,   204,   205,   206,
     207,   208,     0,     0,     0,   209,     0,     0,   210,   211,
     212,     0,     0,     0,   213,     0,   214,   215,     0,   216,
     217,   218,     0,     0,   219,   220,     0,   221,   222,   223,
     224,   225,   226,   679,     0,   227,   228,   229,   680,   681,
     230,   231,     0,   232,   233,   234,   682,     0,   235,     0,
       0,     0,   683,   237,     0,   238,     0,   239,     0,   240,
     684,   242,   685,     0,   244,     0,   245,     0,   686,     0,
     246,   247,     0,   248,   687,     0,   249,   250,     0,     0,
       0,   688,   252,   253,   254,   689,     0,   255,   256,   257,
       0,     0,   258,     0,     0,     0,   690,   259,   260,  1724,
       0,     0,   261,     0,     0,     0,   262,   263,     0,   264,
     265,     0,     0,     0,   266,     0,     0,   267,   268,     0,
       0,   269,     0,   692,   270,   271,     0,     0,     0,     0,
       0,   693,   273,     0,   274,     0,   275,     0,   276,   277,
       0,     0,   694,     0,     0,     0,     0,   278,     0,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,     0,   296,   297,   298,
     695,   299,   300,   301,   302,   696,   303,   304,     0,     0,
       0,     0,   305,   306,   307,   308,   697,   310,     0,     0,
     698,   312,   699,   313,     0,   314,   700,   701,   702,   703,
     704,   319,   320,   321,   322,   323,     0,   705,   324,   325,
       0,     0,   326,   327,   328,   329,   706,     0,   708,   330,
     331,     0,   709,   710,   332,     0,   333,   334,   711,     0,
     336,   337,   338,     0,   339,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   340,   341,   342,   712,   343,   344,
       0,   345,   346,   713,   348,   349,   350,   351,   714,   715,
     354,   716,     0,   355,   356,   357,     0,   358,     0,   359,
     360,   361,   362,   363,     0,   717,   365,   366,     0,     0,
     367,     0,     0,     0,   368,   369,   370,   371,   372,     0,
       0,   373,   374,   375,   376,   377,     0,   378,   379,     0,
     380,   381,   382,   718,   719,   383,     0,   384,     0,   385,
     386,     0,   387,   388,   389,     0,   720,     0,   721,   391,
     392,   393,   394,   395,   722,   723,   398,   399,   400,   401,
       0,   724,   403,     0,     0,     0,   404,   405,   406,   407,
       0,     0,     0,   408,     0,     0,     0,   409,     0,   410,
     411,   412,   413,     0,   414,   415,   416,   417,   418,     0,
       0,     0,     0,     0,     0,     0,     0,   419,   420,     0,
     421,     0,     0,   422,     0,     0,   423,   424,   425,   725,
     726,   426,   427,     0,   428,   429,   727,   431,   432,   433,
     728,   729,   434,   435,   436,   437,   730,   438,   439,     0,
       0,   440,   441,   442,   443,     0,   731,   444,   445,     0,
     732,   733,   734,   735,     0,     0,     0,     0,     0,   450,
     451,     0,   736,   737,   738,   453,   454,   455,   739,   456,
     457,   740,   458,   459,     0,   460,   461,     0,     0,   462,
       0,     0,   463,     0,   464,     0,   741,   466,     0,     0,
     742,   743,   744,   745,   467,     0,     0,   468,   746,     0,
     747,   469,   470,   471,   748,   749,     0,     0,     0,     0,
       0,     0,   474,   475,     0,   476,   477,   478,     0,     0,
     750,     0,     0,     0,   751,   752,     0,     0,     0,     0,
     753,   754,     0,     0,   755,   756,     0,     0,   757,   758,
     136,     0,   652,   138,   139,   140,   141,     0,     0,     0,
       0,     0,   142,     0,     0,   653,     0,   144,   145,   146,
     147,   148,   654,   150,     0,   151,     0,     0,   655,   152,
     656,   657,   658,   153,   659,     0,   154,   155,   156,     0,
     157,     0,   158,   159,     0,     0,   160,   660,   661,   161,
     162,     0,   163,   662,   663,   165,     0,   166,   167,   168,
     169,   664,   171,     0,   665,   173,     0,   174,   175,   176,
     177,   178,   179,   180,   181,     0,   182,   183,     0,   184,
     185,   186,   666,   188,     0,   189,   667,   668,   190,     0,
       0,   191,   669,   192,   670,     0,   193,   671,   672,     0,
     194,   195,   196,   673,   674,   675,     0,     0,     0,     0,
     676,   199,   677,     0,     0,   678,   200,   201,     0,   202,
       0,     0,     0,   203,     0,   204,   205,   206,   207,   208,
       0,     0,     0,   209,     0,     0,   210,   211,   212,     0,
       0,     0,   213,     0,   214,   215,     0,   216,   217,   218,
       0,     0,   219,   220,     0,   221,   222,   223,   224,   225,
     226,   679,     0,   227,   228,   229,   680,   681,   230,   231,
       0,   232,   233,   234,   682,     0,   235,     0,     0,     0,
     683,   237,     0,   238,     0,   239,     0,   240,   684,   242,
     685,     0,   244,     0,   245,     0,   686,     0,   246,   247,
       0,   248,   687,     0,   249,   250,     0,     0,     0,   688,
     252,   253,   254,   689,     0,   255,   256,   257,     0,     0,
     258,     0,     0,     0,   690,   259,   260,  1726,     0,     0,
     261,     0,     0,     0,   262,   263,     0,   264,   265,     0,
       0,     0,   266,     0,     0,   267,   268,     0,     0,   269,
       0,   692,   270,   271,     0,     0,     0,     0,     0,   693,
     273,     0,   274,     0,   275,     0,   276,   277,     0,     0,
     694,     0,     0,     0,     0,   278,     0,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,     0,   296,   297,   298,   695,   299,
     300,   301,   302,   696,   303,   304,     0,     0,     0,     0,
     305,   306,   307,   308,   697,   310,     0,     0,   698,   312,
     699,   313,     0,   314,   700,   701,   702,   703,   704,   319,
     320,   321,   322,   323,     0,   705,   324,   325,     0,     0,
     326,   327,   328,   329,   706,     0,   708,   330,   331,     0,
     709,   710,   332,     0,   333,   334,   711,     0,   336,   337,
     338,     0,   339,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   340,   341,   342,   712,   343,   344,     0,   345,
     346,   713,   348,   349,   350,   351,   714,   715,   354,   716,
       0,   355,   356,   357,     0,   358,     0,   359,   360,   361,
     362,   363,     0,   717,   365,   366,     0,     0,   367,     0,
       0,     0,   368,   369,   370,   371,   372,     0,     0,   373,
     374,   375,   376,   377,     0,   378,   379,     0,   380,   381,
     382,   718,   719,   383,     0,   384,     0,   385,   386,     0,
     387,   388,   389,     0,   720,     0,   721,   391,   392,   393,
     394,   395,   722,   723,   398,   399,   400,   401,     0,   724,
     403,     0,     0,     0,   404,   405,   406,   407,     0,     0,
       0,   408,     0,     0,     0,   409,     0,   410,   411,   412,
     413,     0,   414,   415,   416,   417,   418,     0,     0,     0,
       0,     0,     0,     0,     0,   419,   420,     0,   421,     0,
       0,   422,     0,     0,   423,   424,   425,   725,   726,   426,
     427,     0,   428,   429,   727,   431,   432,   433,   728,   729,
     434,   435,   436,   437,   730,   438,   439,     0,     0,   440,
     441,   442,   443,     0,   731,   444,   445,     0,   732,   733,
     734,   735,     0,     0,     0,     0,     0,   450,   451,     0,
     736,   737,   738,   453,   454,   455,   739,   456,   457,   740,
     458,   459,     0,   460,   461,     0,     0,   462,     0,     0,
     463,     0,   464,     0,   741,   466,     0,     0,   742,   743,
     744,   745,   467,     0,     0,   468,   746,     0,   747,   469,
     470,   471,   748,   749,     0,     0,     0,     0,     0,     0,
     474,   475,     0,   476,   477,   478,     0,     0,   750,     0,
       0,     0,   751,   752,     0,     0,     0,     0,   753,   754,
       0,     0,   755,   756,     0,     0,   757,   758,   136,     0,
     137,   138,   139,   140,   141,     0,     0,     0,     0,     0,
     142,     0,     0,   143,     0,   144,   145,   146,   147,   148,
     149,   150,     0,   151,     0,     0,     0,   152,   656,     0,
       0,   153,     0,     0,   154,   155,   156,     0,   157,     0,
     158,   159,     0,     0,   160,     0,     0,   161,   162,     0,
     163,   164,     0,   165,     0,   166,   167,   168,   169,   170,
     171,     0,   172,   173,     0,   174,   175,   176,   177,   178,
     179,   180,   181,     0,   182,   183,     0,   184,   185,   186,
     187,   188,     0,   189,     0,     0,   190,     0,     0,   191,
       0,   192,     0,     0,   193,     0,     0,     0,   194,   195,
     196,     0,     0,  1762,     0,     0,     0,     0,   198,   199,
     677,     0,     0,     0,   200,   201,     0,   202,     0,     0,
       0,   203,     0,   204,   205,   206,   207,   208,     0,     0,
       0,   209,     0,     0,   210,   211,   212,     0,     0,     0,
     213,     0,   214,   215,     0,   216,   217,   218,     0,     0,
     219,   220,     0,   221,   222,   223,   224,   225,   226,     0,
       0,   227,   228,   229,     0,   681,   230,   231,     0,   232,
     233,   234,   682,     0,   235,     0,     0,     0,   236,   237,
       0,   238,     0,   239,     0,   240,   241,   242,   243,     0,
     244,     0,   245,     0,     0,     0,   246,   247,     0,   248,
     687,     0,   249,   250,     0,     0,     0,   251,   252,   253,
     254,     0,     0,   255,   256,   257,     0,     0,   258,     0,
       0,     0,     0,   259,   260,     0,     0,     0,   261,     0,
       0,     0,   262,   263,     0,   264,   265,     0,     0,     0,
     266,     0,     0,   267,   268,     0,     0,   269,     0,     0,
     270,   271,     0,     0,     0,     0,     0,   272,   273,     0,
     274,     0,   275,     0,   276,   277,     0,     0,   694,     0,
       0,     0,     0,   278,     0,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,     0,   296,   297,   298,     0,   299,   300,   301,
     302,     0,   303,   304,     0,     0,     0,     0,   305,   306,
     307,   308,   309,   310,     0,     0,   311,   312,     0,   313,
       0,   314,     0,   315,   316,   317,   318,   319,   320,   321,
     322,   323,     0,   705,   324,   325,     0,     0,   326,   327,
     328,   329,     0,     0,     0,   330,   331,     0,   709,   710,
     332,     0,   333,   334,   335,     0,   336,   337,   338,     0,
     339,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     340,   341,   342,     0,   343,   344,     0,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,     0,     0,   355,
     356,   357,     0,   358,     0,   359,   360,   361,   362,   363,
       0,   364,   365,   366,     0,     0,   367,     0,     0,     0,
     368,   369,   370,   371,   372,     0,     0,   373,   374,   375,
     376,   377,     0,   378,   379,     0,   380,   381,   382,     0,
       0,   383,     0,   384,     0,   385,   386,     0,   387,   388,
     389,     0,   390,     0,     0,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,     0,   402,   403,     0,
       0,     0,   404,   405,   406,   407,     0,     0,     0,   408,
       0,     0,     0,   409,     0,   410,   411,   412,   413,     0,
     414,   415,   416,   417,   418,     0,     0,     0,     0,     0,
       0,     0,     0,   419,   420,     0,   421,     0,     0,   422,
       0,     0,   423,   424,   425,     0,     0,   426,   427,     0,
     428,   429,   430,   431,   432,   433,     0,     0,   434,   435,
     436,   437,     0,   438,   439,     0,     0,   440,   441,   442,
     443,     0,   731,   444,   445,     0,  1763,   447,   448,  1764,
       0,     0,     0,     0,     0,   450,   451,     0,     0,   737,
     452,   453,   454,   455,   739,   456,   457,   740,   458,   459,
       0,   460,   461,     0,     0,   462,     0,     0,   463,     0,
     464,     0,   465,   466,     0,     0,     0,     0,     0,     0,
     467,     0,     0,   468,     0,     0,     0,   469,   470,   471,
     472,   473,     0,     0,     0,     0,     0,     0,   474,   475,
       0,   476,   477,   478,     0,     0,   479,     0,     0,     0,
       0,   136,     0,   137,   138,   139,   140,   141,     0,     0,
       0,     0,     0,   142,   757,   758,   143,     0,   144,   145,
     146,   147,   148,   149,   150,     0,   151,     0,     0,     0,
     152,     0,     0,     0,   153,     0,     0,   154,   155,   156,
       0,   157,     0,   158,   159,     0,     0,   160,     0,     0,
     161,   162,     0,   163,   164,     0,   165,     0,   166,   167,
     168,   169,   170,   171,     0,   172,   173,     0,   174,   175,
     176,   177,   178,   179,   180,   181,     0,   182,   183,  2494,
     184,   185,   186,   187,   188,     0,   189,     0,     0,   190,
       0,     0,   191,     0,   192,     0,     0,   193,     0,     0,
       0,   194,   195,   196,     0,     0,   197,     0,     0,     0,
       0,   198,   199,     0,     0,     0,     0,   200,   201,     0,
     202,     0,     0,     0,   203,     0,   204,   205,   206,   207,
     208,     0,     0,     0,   209,     0,     0,   210,   211,   212,
       0,     0,     0,   213,     0,   214,   215,     0,   216,   217,
     218,     0,     0,   219,   220,     0,   221,   222,   223,   224,
     225,   226,     0,     0,   227,   228,   229,     0,     0,   230,
     231,     0,   232,   233,   234,     0,     0,   235,     0,     0,
       0,   236,   237,     0,   238,   493,   239,     0,   240,   241,
     242,   243,     0,   244,     0,   245,     0,     0,     0,   246,
     247,     0,   248,     0,     0,   249,   250,     0,     0,     0,
     251,   252,   253,   254,     0,     0,   255,   256,   257,  2062,
       0,   258,     0,     0,     0,     0,   259,   260,     0,     0,
       0,   261,     0,     0,     0,   262,   263,     0,   264,   265,
       0,     0,     0,   266,  2063,     0,   267,   268,     0,     0,
     269,     0,     0,   270,   271,     0,  3039,     0,     0,     0,
     272,   273,     0,   274,     0,   275,     0,   276,   277,     0,
       0,     0,     0,     0,     0,     0,   278,     0,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,     0,   296,   297,   298,     0,
     299,   300,   301,   302,     0,   303,   304,     0,     0,     0,
       0,   305,   306,   307,   308,   309,   310,     0,     0,   311,
     312,     0,   313,     0,   314,     0,   315,   316,   317,   318,
     319,   320,   321,   322,   323,     0,     0,   324,   325,     0,
       0,   326,   327,   328,   329,     0,     0,     0,   330,   331,
       0,     0,     0,   332,     0,   333,   334,   335,     0,   336,
     337,   338,     0,   339,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   340,   341,   342,     0,   343,   344,  2023,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
       0,     0,   355,   356,   357,     0,   358,     0,   359,   360,
     361,   362,   363,     0,   364,   365,   366,     0,     0,   367,
       0,     0,     0,   368,   369,   370,   371,   372,     0,     0,
     373,   374,   375,   376,   377,     0,   378,   379,     0,   380,
     381,   382,     0,     0,   383,     0,   384,     0,   385,   386,
       0,   387,   388,   389,     0,   390,     0,     0,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,     0,
     402,   403,  -474,     0,     0,   404,   405,   406,   407,     0,
       0,     0,   408,     0,     0,     0,   409,     0,   410,   411,
     412,   413,     0,   414,   415,   416,   417,   418,   496,     0,
       0,     0,     0,     0,     0,     0,   419,   420,     0,   421,
       0,     0,   422,     0,     0,   423,   424,   425,     0,     0,
     426,   427,     0,   428,   429,   430,   431,   432,   433,     0,
       0,   434,   435,   436,   437,     0,   438,   439,     0,     0,
     440,   441,   442,   443,     0,     0,   444,   445,     0,   446,
     447,   448,   449,     0,     0,     0,     0,     0,   450,   451,
       0,     0,     0,   452,   453,   454,   455,     0,   456,   457,
       0,   458,   459,     0,   460,   461,     0,     0,   462,     0,
       0,   463,     0,   464,     0,   465,   466,     0,     0,     0,
       0,     0,     0,   467,     0,     0,   468,     0,     0,     0,
     469,   470,   471,   472,   473,     0,     0,     0,     0,     0,
       0,   474,   475,     0,   476,   477,   478,     0,     0,   479,
       0,     0,   136,     0,   137,   138,   139,   140,   141,     0,
       0,     0,     0,     0,   142,     0,     0,   143,  2560,   144,
     145,   146,   147,   148,   149,   150,     0,   151,     0,     0,
       0,   152,     0,     0,     0,   153,     0,     0,   154,   155,
     156,     0,   157,     0,   158,   159,     0,     0,   160,     0,
       0,   161,   162,     0,   163,   164,     0,   165,     0,   166,
     167,   168,   169,   170,   171,     0,   172,   173,     0,   174,
     175,   176,   177,   178,   179,   180,   181,     0,   182,   183,
    2494,   184,   185,   186,   187,   188,     0,   189,     0,     0,
     190,     0,     0,   191,     0,   192,     0,     0,   193,     0,
       0,     0,   194,   195,   196,     0,     0,   197,     0,     0,
       0,     0,   198,   199,     0,     0,     0,     0,   200,   201,
       0,   202,     0,     0,     0,   203,     0,   204,   205,   206,
     207,   208,     0,     0,     0,   209,     0,     0,   210,   211,
     212,     0,     0,     0,   213,     0,   214,   215,     0,   216,
     217,   218,     0,     0,   219,   220,     0,   221,   222,   223,
     224,   225,   226,     0,     0,   227,   228,   229,     0,     0,
     230,   231,     0,   232,   233,   234,     0,     0,   235,     0,
       0,     0,   236,   237,     0,   238,   493,   239,     0,   240,
     241,   242,   243,     0,   244,     0,   245,     0,     0,     0,
     246,   247,     0,   248,     0,     0,   249,   250,     0,     0,
       0,   251,   252,   253,   254,     0,     0,   255,   256,   257,
    2062,     0,   258,     0,     0,     0,     0,   259,   260,     0,
       0,     0,   261,     0,     0,     0,   262,   263,     0,   264,
     265,     0,     0,     0,   266,  2063,     0,   267,   268,     0,
       0,   269,     0,     0,   270,   271,     0,     0,     0,     0,
       0,   272,   273,     0,   274,     0,   275,     0,   276,   277,
       0,     0,     0,     0,     0,     0,     0,   278,     0,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,     0,   296,   297,   298,
       0,   299,   300,   301,   302,     0,   303,   304,     0,     0,
       0,     0,   305,   306,   307,   308,   309,   310,     0,     0,
     311,   312,     0,   313,     0,   314,     0,   315,   316,   317,
     318,   319,   320,   321,   322,   323,     0,     0,   324,   325,
       0,     0,   326,   327,   328,   329,     0,     0,     0,   330,
     331,     0,     0,     0,   332,     0,   333,   334,   335,     0,
     336,   337,   338,     0,   339,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   340,   341,   342,     0,   343,   344,
       0,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,     0,     0,   355,   356,   357,     0,   358,     0,   359,
     360,   361,   362,   363,     0,   364,   365,   366,     0,     0,
     367,     0,     0,     0,   368,   369,   370,   371,   372,     0,
       0,   373,   374,   375,   376,   377,     0,   378,   379,     0,
     380,   381,   382,     0,     0,   383,     0,   384,     0,   385,
     386,     0,   387,   388,   389,     0,   390,     0,     0,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
       0,   402,   403,     0,     0,     0,   404,   405,   406,   407,
       0,     0,     0,   408,     0,     0,     0,   409,     0,   410,
     411,   412,   413,     0,   414,   415,   416,   417,   418,   496,
       0,     0,     0,     0,     0,     0,     0,   419,   420,     0,
     421,     0,     0,   422,     0,     0,   423,   424,   425,     0,
       0,   426,   427,     0,   428,   429,   430,   431,   432,   433,
       0,     0,   434,   435,   436,   437,     0,   438,   439,     0,
       0,   440,   441,   442,   443,     0,     0,   444,   445,     0,
     446,   447,   448,   449,     0,     0,     0,     0,     0,   450,
     451,     0,     0,     0,   452,   453,   454,   455,     0,   456,
     457,     0,   458,   459,     0,   460,   461,     0,     0,   462,
       0,     0,   463,     0,   464,     0,   465,   466,     0,     0,
       0,     0,     0,     0,   467,     0,     0,   468,     0,     0,
       0,   469,   470,   471,   472,   473,     0,     0,     0,     0,
       0,     0,   474,   475,     0,   476,   477,   478,     0,     0,
     479,     0,     0,   136,     0,   137,   138,   139,   140,   141,
       0,     0,     0,     0,     0,   142,     0,     0,   143,  2560,
     144,   145,   146,   147,   148,   149,   150,     0,   151,     0,
       0,     0,   152,     0,     0,     0,   153,     0,     0,   154,
     155,   156,     0,   157,     0,   158,   159,     0,     0,   160,
       0,     0,   161,   162,     0,   163,   164,     0,   165,     0,
     166,   167,   168,   169,   170,   171,     0,   172,   173,     0,
     174,   175,   176,   177,   178,   179,   180,   181,     0,   182,
     183,     0,   184,   185,   186,   187,   188,     0,   189,     0,
       0,   190,     0,     0,   191,     0,   192,     0,     0,   193,
       0,     0,     0,   194,   195,   196,     0,     0,   197,     0,
       0,     0,     0,   198,   199,     0,     0,     0,     0,   200,
     201,     0,   202,     0,     0,     0,   203,     0,   204,   205,
     206,   207,   208,     0,     0,     0,   209,     0,     0,   210,
     211,   212,     0,     0,     0,   213,     0,   214,   215,     0,
     216,   217,   218,     0,     0,   219,   220,     0,   221,   222,
     223,   224,   225,   226,     0,     0,   227,   228,   229,     0,
       0,   230,   231,     0,   232,   233,   234,     0,     0,   235,
       0,     0,     0,   236,   237,     0,   238,     0,   239,     0,
     240,   241,   242,   243,     0,   244,     0,   245,     0,     0,
       0,   246,   247,     0,   248,     0,     0,   249,   250,     0,
       0,     0,   251,   252,   253,   254,     0,     0,   255,   256,
     257,     0,     0,   258,     0,     0,     0,     0,   259,   260,
       0,     0,     0,   261,     0,     0,     0,   262,   263,     0,
     264,   265,     0,     0,     0,   266,     0,     0,   267,   268,
       0,     0,   269,     0,     0,   270,   271,     0,     0,     0,
       0,     0,   272,   273,     0,   274,     0,   275,     0,   276,
     277,     0,     0,     0,     0,     0,     0,     0,   278,     0,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,     0,   296,   297,
     298,     0,   299,   300,   301,   302,     0,   303,   304,     0,
       0,     0,     0,   305,   306,   307,   308,   309,   310,     0,
       0,   311,   312,     0,   313,     0,   314,     0,   315,   316,
     317,   318,   319,   320,   321,   322,   323,     0,     0,   324,
     325,     0,     0,   326,   327,   328,   329,     0,     0,     0,
     330,   331,     0,     0,     0,   332,     0,   333,   334,   335,
       0,   336,   337,   338,     0,   339,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   340,   341,   342,     0,   343,
     344,     0,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,     0,     0,   355,   356,   357,     0,   358,     0,
     359,   360,   361,   362,   363,     0,   364,   365,   366,     0,
       0,   367,     0,     0,     0,   368,   369,   370,   371,   372,
       0,     0,   373,   374,   375,   376,   377,     0,   378,   379,
       0,   380,   381,   382,     0,     0,   383,     0,   384,     0,
     385,   386,     0,   387,   388,   389,     0,   390,     0,     0,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,     0,   402,   403,  2363,     0,     0,   404,   405,   406,
     407,     0,     0,     0,   408,     0,     0,     0,   409,     0,
     410,   411,   412,   413,     0,   414,   415,   416,   417,   418,
       0,     0,     0,     0,     0,     0,     0,     0,   419,   420,
       0,   421,     0,     0,   422,     0,     0,   423,   424,   425,
       0,     0,   426,   427,     0,   428,   429,   430,   431,   432,
     433,     0,     0,   434,   435,   436,   437,     0,   438,   439,
       0,     0,   440,   441,   442,   443,     0,     0,   444,   445,
       0,   446,   447,   448,   449,     0,     0,     0,     0,     0,
     450,   451,     0,     0,     0,   452,   453,   454,   455,     0,
     456,   457,     0,   458,   459,     0,   460,   461,     0,     0,
     462,     0,     0,   463,     0,   464,     0,   465,   466,     0,
       0,     0,     0,     0,     0,   467,     0,     0,   468,     0,
       0,     0,   469,   470,   471,   472,   473,     0,     0,     0,
       0,     0,     0,   474,   475,     0,   476,   477,   478,     0,
       0,   479,     0,     0,   136,     0,   137,   138,   139,   140,
     141,     0,     0,  2803,     0,     0,   142,     0,     0,   143,
     758,   144,   145,   146,   147,   148,   149,   150,     0,   151,
       0,     0,     0,   152,     0,     0,     0,   153,     0,     0,
     154,   155,   156,     0,   157,     0,   158,   159,     0,     0,
     160,     0,     0,   161,   162,     0,   163,   164,     0,   165,
       0,   166,   167,   168,   169,   170,   171,     0,   172,   173,
       0,   174,   175,   176,   177,   178,   179,   180,   181,     0,
     182,   183,     0,   184,   185,   186,   187,   188,     0,   189,
       0,     0,   190,     0,     0,   191,     0,   192,     0,     0,
     193,     0,     0,     0,   194,   195,   196,     0,     0,   197,
       0,     0,     0,     0,   198,   199,     0,     0,     0,     0,
     200,   201,     0,   202,     0,     0,     0,   203,     0,   204,
     205,   206,   207,   208,     0,     0,     0,   209,     0,     0,
     210,   211,   212,     0,     0,     0,   213,     0,   214,   215,
       0,   216,   217,   218,     0,     0,   219,   220,     0,   221,
     222,   223,   224,   225,   226,     0,     0,   227,   228,   229,
       0,     0,   230,   231,     0,   232,   233,   234,     0,     0,
     235,     0,     0,     0,   236,   237,     0,   238,     0,   239,
       0,   240,   241,   242,   243,     0,   244,     0,   245,     0,
       0,     0,   246,   247,     0,   248,     0,     0,   249,   250,
       0,     0,     0,   251,   252,   253,   254,     0,     0,   255,
     256,   257,     0,     0,   258,     0,     0,     0,     0,   259,
     260,     0,     0,     0,   261,     0,     0,     0,   262,   263,
       0,   264,   265,     0,     0,     0,   266,     0,     0,   267,
     268,     0,     0,   269,     0,     0,   270,   271,     0,     0,
       0,     0,     0,   272,   273,     0,   274,     0,   275,     0,
     276,   277,     0,     0,     0,     0,     0,     0,     0,   278,
       0,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,     0,   296,
     297,   298,     0,   299,   300,   301,   302,     0,   303,   304,
       0,     0,     0,     0,   305,   306,   307,   308,   309,   310,
       0,     0,   311,   312,     0,   313,     0,   314,     0,   315,
     316,   317,   318,   319,   320,   321,   322,   323,     0,     0,
     324,   325,     0,     0,   326,   327,   328,   329,     0,     0,
       0,   330,   331,     0,     0,     0,   332,     0,   333,   334,
     335,     0,   336,   337,   338,     0,   339,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   340,   341,   342,     0,
     343,   344,     0,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,     0,     0,   355,   356,   357,     0,   358,
       0,   359,   360,   361,   362,   363,     0,   364,   365,   366,
       0,     0,   367,     0,     0,     0,   368,   369,   370,   371,
     372,     0,     0,   373,   374,   375,   376,   377,     0,   378,
     379,     0,   380,   381,   382,     0,     0,   383,     0,   384,
       0,   385,   386,     0,   387,   388,   389,     0,   390,     0,
       0,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,     0,   402,   403,     0,     0,     0,   404,   405,
     406,   407,     0,     0,     0,   408,     0,     0,     0,   409,
       0,   410,   411,   412,   413,     0,   414,   415,   416,   417,
     418,     0,     0,     0,     0,     0,     0,     0,     0,   419,
     420,     0,   421,     0,     0,   422,     0,     0,   423,   424,
     425,     0,     0,   426,   427,     0,   428,   429,   430,   431,
     432,   433,     0,     0,   434,   435,   436,   437,     0,   438,
     439,     0,     0,   440,   441,   442,   443,     0,     0,   444,
     445,     0,   446,   447,   448,   449,     0,     0,     0,     0,
       0,   450,   451,     0,     0,     0,   452,   453,   454,   455,
       0,   456,   457,     0,   458,   459,     0,   460,   461,     0,
       0,   462,     0,     0,   463,     0,   464,     0,   465,   466,
       0,     0,     0,     0,     0,     0,   467,     0,     0,   468,
       0,     0,     0,   469,   470,   471,   472,   473,     0,     0,
       0,     0,     0,     0,   474,   475,     0,   476,   477,   478,
       0,     0,   479,     0,     0,     0,     0,   136,     0,   137,
     138,   139,   140,   141,  4424,     0,     0,     0,     0,   142,
    4425,   758,   143,     0,   144,   145,   146,   147,   148,   149,
     150,     0,   151,     0,     0,     0,   152,     0,     0,     0,
     153,     0,     0,   154,   155,   156,     0,   157,     0,   158,
     159,     0,     0,   160,     0,     0,   161,   162,     0,   163,
     164,     0,   165,     0,   166,   167,   168,   169,   170,   171,
       0,   172,   173,     0,   174,   175,   176,   177,   178,   179,
     180,   181,     0,   182,   183,     0,   184,   185,   186,   187,
     188,     0,   189,     0,     0,   190,     0,     0,   191,     0,
     192,     0,     0,   193,     0,     0,     0,   194,   195,   196,
       0,     0,   197,     0,     0,     0,     0,   198,   199,     0,
       0,     0,     0,   200,   201,     0,   202,     0,     0,     0,
     203,     0,   204,   205,   206,   207,   208,     0,     0,     0,
     209,     0,     0,   210,   211,   212,     0,     0,     0,   213,
       0,   214,   215,     0,   216,   217,   218,     0,     0,   219,
     220,     0,   221,   222,   223,   224,   225,   226,     0,     0,
     227,   228,   229,     0,     0,   230,   231,     0,   232,   233,
     234,     0,     0,   235,     0,     0,     0,   236,   237,     0,
     238,     0,   239,     0,   240,   241,   242,   243,     0,   244,
       0,   245,     0,     0,     0,   246,   247,     0,   248,     0,
       0,   249,   250,     0,     0,     0,   251,   252,   253,   254,
       0,     0,   255,   256,   257,     0,     0,   258,     0,     0,
       0,     0,   259,   260,     0,     0,     0,   261,     0,     0,
       0,   262,   263,     0,   264,   265,     0,     0,     0,   266,
       0,     0,   267,   268,     0,     0,   269,     0,     0,   270,
     271,     0,     0,     0,     0,     0,   272,   273,     0,   274,
       0,   275,     0,   276,   277,     0,     0,     0,     0,     0,
       0,     0,   278,     0,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,     0,   296,   297,   298,     0,   299,   300,   301,   302,
       0,   303,   304,     0,     0,     0,     0,   305,   306,   307,
     308,   309,   310,     0,     0,   311,   312,     0,   313,     0,
     314,     0,   315,   316,   317,   318,   319,   320,   321,   322,
     323,     0,     0,   324,   325,     0,     0,   326,   327,   328,
     329,     0,     0,     0,   330,   331,     0,     0,     0,   332,
       0,   333,   334,   335,     0,   336,   337,   338,     0,   339,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   340,
     341,   342,     0,   343,   344,     0,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,     0,     0,   355,   356,
     357,     0,   358,     0,   359,   360,   361,   362,   363,     0,
     364,   365,   366,     0,     0,   367,     0,     0,     0,   368,
     369,   370,   371,   372,     0,     0,   373,   374,   375,   376,
     377,     0,   378,   379,     0,   380,   381,   382,     0,     0,
     383,     0,   384,     0,   385,   386,     0,   387,   388,   389,
       0,   390,     0,     0,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,     0,   402,   403,     0,     0,
       0,   404,   405,   406,   407,     0,     0,     0,   408,     0,
       0,     0,   409,     0,   410,   411,   412,   413,     0,   414,
     415,   416,   417,   418,     0,     0,     0,     0,     0,     0,
       0,     0,   419,   420,     0,   421,     0,     0,   422,     0,
       0,   423,   424,   425,     0,     0,   426,   427,     0,   428,
     429,   430,   431,   432,   433,     0,     0,   434,   435,   436,
     437,     0,   438,   439,     0,     0,   440,   441,   442,   443,
       0,     0,   444,   445,     0,   446,   447,   448,   449,     0,
       0,     0,     0,     0,   450,   451,     0,     0,     0,   452,
     453,   454,   455,     0,   456,   457,     0,   458,   459,     0,
     460,   461,     0,     0,   462,     0,     0,   463,     0,   464,
       0,   465,   466,     0,     0,     0,     0,     0,     0,   467,
       0,     0,   468,     0,     0,     0,   469,   470,   471,   472,
     473,     0,     0,     0,     0,     0,     0,   474,   475,     0,
     476,   477,   478,     0,     0,   479,     0,     0,   136,     0,
     137,   138,   139,   140,   141,     0,  1104,     0,     0,     0,
     142,     0,     0,   143,   758,   144,   145,   146,   147,   148,
     149,   150,     0,   151,     0,     0,     0,   152,     0,     0,
       0,   153,     0,     0,   154,   155,   156,     0,   157,     0,
     158,   159,     0,     0,   160,     0,     0,   161,   162,     0,
     163,   164,     0,   165,     0,   166,   167,   168,   169,   170,
     171,     0,   172,   173,     0,   174,   175,   176,   177,   178,
     179,   180,   181,     0,   182,   183,     0,   184,   185,   186,
     187,   188,     0,   189,     0,     0,   190,     0,     0,   191,
       0,   192,     0,     0,   193,     0,     0,     0,   194,   195,
     196,     0,     0,   197,     0,     0,     0,     0,   198,   199,
       0,     0,     0,     0,   200,   201,     0,   202,     0,     0,
       0,   203,     0,   204,   205,   206,   207,   208,     0,     0,
       0,   209,     0,     0,   210,   211,   212,     0,     0,     0,
     213,     0,   214,   215,     0,   216,   217,   218,     0,     0,
     219,   220,     0,   221,   222,   223,   224,   225,   226,     0,
       0,   227,   228,   229,     0,     0,   230,   231,     0,   232,
     233,   234,     0,     0,   235,     0,     0,     0,   236,   237,
       0,   238,     0,   239,     0,   240,   241,   242,   243,     0,
     244,     0,   245,     0,     0,     0,   246,   247,     0,   248,
       0,     0,   249,   250,     0,     0,     0,   251,   252,   253,
     254,     0,     0,   255,   256,   257,     0,     0,   258,     0,
       0,     0,     0,   259,   260,     0,  1309,     0,   261,     0,
       0,     0,   262,   263,     0,   264,   265,     0,     0,     0,
     266,     0,     0,   267,   268,     0,     0,   269,     0,     0,
     270,   271,     0,     0,     0,     0,     0,   272,   273,     0,
     274,     0,   275,     0,   276,   277,     0,     0,     0,     0,
       0,     0,     0,   278,     0,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,     0,   296,   297,   298,     0,   299,   300,   301,
     302,     0,   303,   304,     0,     0,     0,     0,   305,   306,
     307,   308,   309,   310,     0,     0,   311,   312,     0,   313,
       0,   314,     0,   315,   316,   317,   318,   319,   320,   321,
     322,   323,     0,     0,   324,   325,     0,     0,   326,   327,
     328,   329,     0,     0,     0,   330,   331,     0,     0,     0,
     332,     0,   333,   334,   335,     0,   336,   337,   338,     0,
     339,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     340,   341,   342,     0,   343,   344,     0,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,     0,     0,   355,
     356,   357,     0,   358,     0,   359,   360,   361,   362,   363,
       0,   364,   365,   366,     0,     0,   367,     0,     0,     0,
     368,   369,   370,   371,   372,     0,     0,   373,   374,   375,
     376,   377,     0,   378,   379,     0,   380,   381,   382,     0,
       0,   383,     0,   384,     0,   385,   386,     0,   387,   388,
     389,     0,   390,     0,     0,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,     0,   402,   403,     0,
       0,     0,   404,   405,   406,   407,     0,     0,     0,   408,
       0,     0,     0,   409,     0,   410,   411,   412,   413,     0,
     414,   415,   416,   417,   418,     0,     0,     0,     0,     0,
       0,     0,     0,   419,   420,     0,   421,     0,     0,   422,
       0,     0,   423,   424,   425,     0,     0,   426,   427,     0,
     428,   429,   430,   431,   432,   433,     0,     0,   434,   435,
     436,   437,     0,   438,   439,     0,     0,   440,   441,   442,
     443,     0,     0,   444,   445,     0,   446,   447,   448,   449,
       0,     0,     0,     0,     0,   450,   451,     0,     0,     0,
     452,   453,   454,   455,     0,   456,   457,     0,   458,   459,
       0,   460,   461,     0,     0,   462,     0,     0,   463,     0,
     464,     0,   465,   466,     0,     0,     0,     0,     0,     0,
     467,     0,     0,   468,     0,     0,     0,   469,   470,   471,
     472,   473,     0,     0,     0,     0,     0,     0,   474,   475,
       0,   476,   477,   478,     0,     0,   479,     0,     0,   136,
       0,   137,   138,   139,   140,   141,     0,     0,     0,     0,
       0,   142,     0,     0,   143,   529,   144,   145,   146,   147,
     148,   149,   150,     0,   151,     0,     0,     0,   152,     0,
       0,     0,   153,     0,     0,   154,   155,   156,     0,   157,
       0,   158,   159,     0,     0,   160,     0,     0,   161,   162,
       0,   163,   164,     0,   165,     0,   166,   167,   168,   169,
     170,   171,     0,   172,   173,     0,   174,   175,   176,   177,
     178,   179,   180,   181,     0,   182,   183,     0,   184,   185,
     186,   187,   188,     0,   189,     0,     0,   190,     0,     0,
     191,     0,   192,     0,     0,   193,     0,     0,     0,   194,
     195,   196,     0,     0,   197,     0,     0,     0,     0,   198,
     199,     0,     0,     0,     0,   200,   201,     0,   202,     0,
       0,     0,   203,     0,   204,   205,   206,   207,   208,     0,
       0,     0,   209,     0,     0,   210,   211,   212,     0,     0,
       0,   213,     0,   214,   215,     0,   216,   217,   218,     0,
       0,   219,   220,     0,   221,   222,   223,   224,   225,   226,
       0,     0,   227,   228,   229,     0,     0,   230,   231,     0,
     232,   233,   234,     0,     0,   235,     0,     0,     0,   236,
     237,     0,   238,     0,   239,     0,   240,   241,   242,   243,
       0,   244,     0,   245,     0,     0,     0,   246,   247,     0,
     248,     0,     0,   249,   250,     0,     0,     0,   251,   252,
     253,   254,     0,     0,   255,   256,   257,     0,     0,   258,
       0,     0,     0,     0,   259,   260,     0,     0,     0,   261,
       0,     0,     0,   262,   263,     0,   264,   265,     0,     0,
       0,   266,     0,     0,   267,   268,     0,     0,   269,     0,
       0,   270,   271,     0,     0,     0,     0,     0,   272,   273,
       0,   274,     0,   275,     0,   276,   277,     0,     0,     0,
       0,     0,     0,     0,   278,     0,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,     0,   296,   297,   298,     0,   299,   300,
     301,   302,     0,   303,   304,     0,     0,     0,     0,   305,
     306,   307,   308,   309,   310,     0,     0,   311,   312,     0,
     313,     0,   314,     0,   315,   316,   317,   318,   319,   320,
     321,   322,   323,     0,     0,   324,   325,     0,     0,   326,
     327,   328,   329,     0,     0,     0,   330,   331,     0,     0,
       0,   332,     0,   333,   334,   335,     0,   336,   337,   338,
       0,   339,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   340,   341,   342,     0,   343,   344,     0,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,     0,     0,
     355,   356,   357,     0,   358,     0,   359,   360,   361,   362,
     363,     0,   364,   365,   366,     0,     0,   367,     0,     0,
       0,   368,   369,   370,   371,   372,     0,     0,   373,   374,
     375,   376,   377,     0,   378,   379,     0,   380,   381,   382,
       0,     0,   383,     0,   384,     0,   385,   386,     0,   387,
     388,   389,     0,   390,     0,     0,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,     0,   402,   403,
       0,     0,     0,   404,   405,   406,   407,     0,     0,     0,
     408,     0,     0,     0,   409,     0,   410,   411,   412,   413,
       0,   414,   415,   416,   417,   418,     0,     0,     0,     0,
       0,     0,     0,     0,   419,   420,     0,   421,     0,     0,
     422,     0,     0,   423,   424,   425,     0,     0,   426,   427,
       0,   428,   429,   430,   431,   432,   433,     0,     0,   434,
     435,   436,   437,     0,   438,   439,     0,     0,   440,   441,
     442,   443,     0,     0,   444,   445,     0,   446,   447,   448,
     449,     0,     0,     0,     0,     0,   450,   451,     0,     0,
       0,   452,   453,   454,   455,     0,   456,   457,     0,   458,
     459,     0,   460,   461,     0,     0,   462,     0,     0,   463,
       0,   464,     0,   465,   466,     0,     0,     0,     0,     0,
       0,   467,     0,     0,   468,     0,     0,     0,   469,   470,
     471,   472,   473,     0,     0,     0,     0,     0,     0,   474,
     475,     0,   476,   477,   478,     0,     0,   479,     0,     0,
       0,     0,   136,  2305,   137,   138,   139,   140,   141,     0,
       0,     0,     0,     0,   142,     0,   529,   143,     0,   144,
     145,   146,   147,   148,   149,   150,     0,   151,     0,     0,
       0,   152,     0,     0,     0,   153,     0,     0,   154,   155,
     156,     0,   157,     0,   158,   159,     0,     0,   160,     0,
       0,   161,   162,     0,   163,   164,     0,   165,     0,   166,
     167,   168,   169,   170,   171,     0,   172,   173,     0,   174,
     175,   176,   177,   178,   179,   180,   181,     0,   182,   183,
       0,   184,   185,   186,   187,   188,     0,   189,     0,     0,
     190,     0,     0,   191,     0,   192,     0,     0,   193,     0,
       0,     0,   194,   195,   196,     0,     0,   197,     0,     0,
       0,     0,   198,   199,     0,     0,     0,     0,   200,   201,
       0,   202,     0,     0,     0,   203,     0,   204,   205,   206,
     207,   208,     0,     0,     0,   209,     0,     0,   210,   211,
     212,     0,     0,     0,   213,     0,   214,   215,     0,   216,
     217,   218,     0,     0,   219,   220,     0,   221,   222,   223,
     224,   225,   226,     0,     0,   227,   228,   229,     0,     0,
     230,   231,     0,   232,   233,   234,     0,     0,   235,     0,
       0,     0,   236,   237,     0,   238,     0,   239,     0,   240,
     241,   242,   243,     0,   244,     0,   245,     0,     0,     0,
     246,   247,     0,   248,     0,     0,   249,   250,     0,     0,
       0,   251,   252,   253,   254,     0,     0,   255,   256,   257,
       0,     0,   258,     0,     0,     0,     0,   259,   260,     0,
       0,     0,   261,     0,     0,     0,   262,   263,     0,   264,
     265,     0,     0,     0,   266,     0,     0,   267,   268,     0,
       0,   269,     0,     0,   270,   271,     0,     0,     0,     0,
       0,   272,   273,     0,   274,     0,   275,     0,   276,   277,
       0,     0,     0,     0,     0,     0,     0,   278,     0,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,     0,   296,   297,   298,
       0,   299,   300,   301,   302,     0,   303,   304,     0,     0,
       0,     0,   305,   306,   307,   308,   309,   310,     0,     0,
     311,   312,     0,   313,     0,   314,     0,   315,   316,   317,
     318,   319,   320,   321,   322,   323,     0,     0,   324,   325,
       0,     0,   326,   327,   328,   329,     0,     0,     0,   330,
     331,     0,     0,     0,   332,     0,   333,   334,   335,     0,
     336,   337,   338,     0,   339,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   340,   341,   342,     0,   343,   344,
       0,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,     0,     0,   355,   356,   357,     0,   358,     0,   359,
     360,   361,   362,   363,     0,   364,   365,   366,     0,     0,
     367,     0,     0,     0,   368,   369,   370,   371,   372,     0,
       0,   373,   374,   375,   376,   377,     0,   378,   379,     0,
     380,   381,   382,     0,     0,   383,     0,   384,     0,   385,
     386,     0,   387,   388,   389,     0,   390,     0,     0,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
       0,   402,   403,     0,     0,     0,   404,   405,   406,   407,
       0,     0,     0,   408,     0,     0,     0,   409,     0,   410,
     411,   412,   413,     0,   414,   415,   416,   417,   418,     0,
       0,     0,     0,     0,     0,     0,     0,   419,   420,     0,
     421,     0,     0,   422,     0,     0,   423,   424,   425,     0,
       0,   426,   427,     0,   428,   429,   430,   431,   432,   433,
       0,     0,   434,   435,   436,   437,     0,   438,   439,     0,
       0,   440,   441,   442,   443,     0,     0,   444,   445,     0,
     446,   447,   448,   449,     0,     0,     0,     0,     0,   450,
     451,     0,     0,     0,   452,   453,   454,   455,     0,   456,
     457,     0,   458,   459,     0,   460,   461,     0,     0,   462,
       0,     0,   463,     0,   464,     0,   465,   466,     0,     0,
       0,     0,     0,     0,   467,     0,     0,   468,     0,     0,
       0,   469,   470,   471,   472,   473,     0,     0,     0,     0,
       0,     0,   474,   475,     0,   476,   477,   478,     0,     0,
     479,     0,     0,   136,     0,   137,   138,   139,   140,   141,
       0,  2559,     0,     0,     0,   142,     0,     0,   143,  2560,
     144,   145,   146,   147,   148,   149,   150,     0,   151,     0,
       0,     0,   152,     0,     0,     0,   153,     0,     0,   154,
     155,   156,     0,   157,     0,   158,   159,     0,     0,   160,
       0,     0,   161,   162,     0,   163,   164,     0,   165,     0,
     166,   167,   168,   169,   170,   171,     0,   172,   173,     0,
     174,   175,   176,   177,   178,   179,   180,   181,     0,   182,
     183,     0,   184,   185,   186,   187,   188,     0,   189,     0,
       0,   190,     0,     0,   191,     0,   192,     0,     0,   193,
       0,     0,     0,   194,   195,   196,     0,     0,   197,     0,
       0,     0,     0,   198,   199,     0,     0,     0,     0,   200,
     201,     0,   202,     0,     0,     0,   203,     0,   204,   205,
     206,   207,   208,     0,     0,     0,   209,     0,     0,   210,
     211,   212,     0,     0,     0,   213,     0,   214,   215,     0,
     216,   217,   218,     0,     0,   219,   220,     0,   221,   222,
     223,   224,   225,   226,     0,     0,   227,   228,   229,     0,
       0,   230,   231,     0,   232,   233,   234,     0,     0,   235,
       0,     0,     0,   236,   237,     0,   238,     0,   239,     0,
     240,   241,   242,   243,     0,   244,     0,   245,     0,     0,
       0,   246,   247,     0,   248,     0,     0,   249,   250,     0,
       0,     0,   251,   252,   253,   254,     0,     0,   255,   256,
     257,     0,     0,   258,     0,     0,     0,     0,   259,   260,
       0,     0,     0,   261,     0,     0,     0,   262,   263,     0,
     264,   265,     0,     0,     0,   266,     0,     0,   267,   268,
       0,     0,   269,     0,     0,   270,   271,     0,     0,     0,
       0,     0,   272,   273,     0,   274,     0,   275,     0,   276,
     277,     0,     0,     0,     0,     0,     0,     0,   278,     0,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,     0,   296,   297,
     298,     0,   299,   300,   301,   302,     0,   303,   304,     0,
       0,     0,     0,   305,   306,   307,   308,   309,   310,     0,
       0,   311,   312,     0,   313,     0,   314,     0,   315,   316,
     317,   318,   319,   320,   321,   322,   323,     0,     0,   324,
     325,     0,     0,   326,   327,   328,   329,     0,     0,     0,
     330,   331,     0,     0,     0,   332,     0,   333,   334,   335,
       0,   336,   337,   338,     0,   339,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   340,   341,   342,     0,   343,
     344,     0,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,     0,     0,   355,   356,   357,     0,   358,     0,
     359,   360,   361,   362,   363,     0,   364,   365,   366,     0,
       0,   367,     0,     0,     0,   368,   369,   370,   371,   372,
       0,     0,   373,   374,   375,   376,   377,     0,   378,   379,
       0,   380,   381,   382,     0,     0,   383,     0,   384,     0,
     385,   386,     0,   387,   388,   389,     0,   390,     0,     0,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,     0,   402,   403,     0,     0,     0,   404,   405,   406,
     407,     0,     0,     0,   408,     0,     0,     0,   409,     0,
     410,   411,   412,   413,     0,   414,   415,   416,   417,   418,
       0,     0,     0,     0,     0,     0,     0,     0,   419,   420,
       0,   421,     0,     0,   422,     0,     0,   423,   424,   425,
       0,     0,   426,   427,     0,   428,   429,   430,   431,   432,
     433,     0,     0,   434,   435,   436,   437,     0,   438,   439,
       0,     0,   440,   441,   442,   443,     0,     0,   444,   445,
       0,   446,   447,   448,   449,     0,     0,     0,     0,     0,
     450,   451,     0,     0,     0,   452,   453,   454,   455,     0,
     456,   457,     0,   458,   459,     0,   460,   461,     0,     0,
     462,     0,     0,   463,     0,   464,     0,   465,   466,     0,
       0,     0,     0,     0,     0,   467,     0,     0,   468,     0,
       0,     0,   469,   470,   471,   472,   473,     0,     0,     0,
       0,     0,     0,   474,   475,     0,   476,   477,   478,     0,
       0,   479,     0,     0,     0,     0,   136,     0,   137,   138,
     139,   140,   141,     0,     0,     0,     0,     0,   142,  4425,
     758,   143,     0,   144,   145,   146,   147,   148,   149,   150,
       0,   151,     0,     0,     0,   152,     0,     0,     0,   153,
       0,     0,   154,   155,   156,     0,   157,     0,   158,   159,
       0,     0,   160,     0,     0,   161,   162,     0,   163,   164,
       0,   165,     0,   166,   167,   168,   169,   170,   171,     0,
     172,   173,     0,   174,   175,   176,   177,   178,   179,   180,
     181,     0,   182,   183,     0,   184,   185,   186,   187,   188,
       0,   189,     0,     0,   190,     0,     0,   191,     0,   192,
       0,     0,   193,     0,     0,     0,   194,   195,   196,     0,
       0,   197,     0,     0,     0,     0,   198,   199,     0,     0,
       0,     0,   200,   201,     0,   202,     0,     0,     0,   203,
       0,   204,   205,   206,   207,   208,     0,     0,     0,   209,
       0,     0,   210,   211,   212,     0,     0,     0,   213,     0,
     214,   215,     0,   216,   217,   218,     0,     0,   219,   220,
       0,   221,   222,   223,   224,   225,   226,     0,     0,   227,
     228,   229,     0,     0,   230,   231,     0,   232,   233,   234,
       0,     0,   235,     0,     0,     0,   236,   237,     0,   238,
       0,   239,     0,   240,   241,   242,   243,     0,   244,     0,
     245,     0,     0,     0,   246,   247,     0,   248,     0,     0,
     249,   250,     0,     0,     0,   251,   252,   253,   254,     0,
       0,   255,   256,   257,     0,     0,   258,     0,     0,     0,
       0,   259,   260,     0,     0,     0,   261,     0,     0,     0,
     262,   263,     0,   264,   265,     0,     0,     0,   266,     0,
       0,   267,   268,     0,     0,   269,     0,     0,   270,   271,
       0,     0,     0,     0,     0,   272,   273,     0,   274,     0,
     275,     0,   276,   277,     0,     0,     0,     0,     0,     0,
       0,   278,     0,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
       0,   296,   297,   298,     0,   299,   300,   301,   302,     0,
     303,   304,     0,     0,     0,     0,   305,   306,   307,   308,
     309,   310,     0,     0,   311,   312,     0,   313,     0,   314,
       0,   315,   316,   317,   318,   319,   320,   321,   322,   323,
       0,     0,   324,   325,     0,     0,   326,   327,   328,   329,
       0,     0,     0,   330,   331,     0,     0,     0,   332,     0,
     333,   334,   335,     0,   336,   337,   338,     0,   339,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   340,   341,
     342,     0,   343,   344,     0,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,     0,   355,   356,   357,
       0,   358,     0,   359,   360,   361,   362,   363,     0,   364,
     365,   366,     0,     0,   367,     0,     0,     0,   368,   369,
     370,   371,   372,     0,     0,   373,   374,   375,   376,   377,
       0,   378,   379,     0,   380,   381,   382,     0,     0,   383,
       0,   384,     0,   385,   386,     0,   387,   388,   389,     0,
     390,     0,     0,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,     0,   402,   403,     0,     0,     0,
     404,   405,   406,   407,     0,     0,     0,   408,     0,     0,
       0,   409,     0,   410,   411,   412,   413,     0,   414,   415,
     416,   417,   418,     0,     0,     0,     0,     0,     0,     0,
       0,   419,   420,     0,   421,     0,     0,   422,     0,     0,
     423,   424,   425,     0,     0,   426,   427,     0,   428,   429,
     430,   431,   432,   433,     0,     0,   434,   435,   436,   437,
       0,   438,   439,     0,     0,   440,   441,   442,   443,     0,
       0,   444,   445,     0,   446,   447,   448,   449,     0,     0,
       0,     0,     0,   450,   451,     0,     0,     0,   452,   453,
     454,   455,     0,   456,   457,     0,   458,   459,     0,   460,
     461,     0,     0,   462,     0,     0,   463,     0,   464,     0,
     465,   466,     0,     0,     0,     0,     0,     0,   467,     0,
       0,   468,     0,     0,     0,   469,   470,   471,   472,   473,
       0,     0,     0,     0,     0,     0,   474,   475,     0,   476,
     477,   478,     0,     0,   479,     0,     0,   136,     0,   137,
     138,   139,   140,   141,     0,     0,     0,     0,     0,   142,
       0,     0,   143,   529,   144,   145,   146,   147,   148,   149,
     150,     0,   151,     0,     0,     0,   152,     0,     0,     0,
     153,     0,     0,   154,   155,   156,     0,   157,     0,   158,
     159,     0,     0,   160,     0,     0,   161,   162,     0,   163,
     164,     0,   165,     0,   166,   167,   168,   169,   170,   171,
       0,   172,   173,     0,   174,   175,   176,   177,   178,   179,
     180,   181,     0,   182,   183,     0,   184,   185,   186,   187,
     188,     0,   189,     0,     0,   190,     0,     0,   191,     0,
     192,     0,     0,   193,     0,     0,     0,   194,   195,   196,
       0,     0,   197,     0,     0,     0,     0,   198,   199,     0,
       0,     0,     0,   200,   201,     0,   202,     0,     0,     0,
     203,     0,   204,   205,   206,   207,   208,     0,     0,     0,
     209,     0,     0,   210,   211,   212,     0,     0,     0,   213,
       0,   214,   215,     0,   216,   217,   218,     0,     0,   219,
     220,     0,   221,   222,   223,   224,   225,   226,     0,     0,
     227,   592,   229,     0,     0,   230,   231,     0,   232,   233,
     234,     0,     0,   235,     0,     0,     0,   593,   237,     0,
     238,     0,   239,     0,   240,   241,   242,   243,     0,   244,
       0,   245,     0,     0,     0,   246,   247,     0,   248,     0,
       0,   249,   250,     0,     0,     0,   251,   252,   253,   254,
       0,     0,   255,   256,   257,     0,     0,   258,     0,     0,
       0,     0,   259,   260,     0,     0,     0,   261,     0,     0,
       0,   262,   263,     0,   264,   265,     0,     0,     0,   266,
       0,     0,   267,   268,     0,     0,   269,     0,     0,   270,
     271,     0,     0,     0,     0,     0,   272,   273,     0,   274,
       0,   275,     0,   276,   277,     0,     0,     0,     0,     0,
       0,     0,   278,     0,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,     0,   296,   297,   298,     0,   299,   300,   301,   302,
       0,   303,   304,     0,     0,     0,     0,   305,   306,   307,
     308,   309,   310,     0,     0,   311,   312,     0,   313,     0,
     314,     0,   315,   316,   317,   318,   319,   320,   321,   322,
     323,     0,     0,   324,   325,     0,     0,   326,   327,   328,
     329,     0,     0,     0,   330,   331,     0,     0,     0,   332,
       0,   333,   334,   335,     0,   336,   337,   338,     0,   339,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   340,
     341,   342,     0,   343,   344,     0,   594,   346,   347,   348,
     349,   350,   351,   352,   353,   354,     0,     0,   355,   356,
     357,     0,   358,     0,   359,   360,   361,   362,   363,     0,
     364,   365,   366,     0,     0,   367,     0,     0,     0,   368,
     369,   370,   371,   372,     0,     0,   373,   374,   375,   376,
     377,     0,   378,   379,     0,   380,   381,   382,     0,     0,
     383,     0,   384,     0,   385,   386,     0,   387,   388,   389,
       0,   390,     0,     0,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,     0,   402,   403,     0,     0,
       0,   404,   405,   406,   407,     0,     0,     0,   408,     0,
       0,     0,   409,     0,   410,   411,   412,   413,     0,   414,
     415,   416,   417,   418,     0,     0,     0,     0,     0,     0,
       0,     0,   419,   420,     0,   421,     0,     0,   422,     0,
       0,   423,   424,   425,     0,     0,   426,   427,     0,   428,
     429,   430,   431,   432,   433,     0,     0,   434,   435,   436,
     437,     0,   438,   439,     0,     0,   440,   441,   442,   443,
       0,     0,   444,   445,     0,   446,   447,   448,   449,     0,
       0,     0,     0,     0,   450,   451,     0,     0,     0,   452,
     453,   454,   455,     0,   456,   457,     0,   458,   459,     0,
     460,   461,     0,     0,   462,     0,     0,   463,     0,   464,
       0,   465,   466,     0,     0,     0,     0,     0,     0,   467,
       0,     0,   468,     0,     0,     0,   469,   470,   471,   472,
     473,     0,     0,     0,     0,     0,     0,   474,   475,     0,
     476,   477,   478,     0,     0,   479,     0,     0,   136,     0,
     137,   138,   139,   140,   141,     0,     0,     0,     0,     0,
     142,     0,     0,   143,   529,   144,   145,   146,   147,   148,
     149,   150,     0,   151,     0,     0,     0,   152,     0,     0,
       0,   153,     0,     0,   154,   155,   156,     0,   157,     0,
     158,   159,     0,     0,   160,     0,     0,   161,   162,     0,
     163,   164,     0,   165,     0,   166,   167,   168,   169,   170,
     171,     0,   172,   173,     0,   174,   175,   176,   177,   178,
     179,   180,   181,     0,   182,   183,     0,   184,   185,   186,
     187,   188,     0,   189,     0,     0,   190,     0,     0,   191,
       0,   192,     0,     0,   193,     0,     0,     0,   194,   195,
     196,     0,     0,   197,     0,     0,     0,     0,   198,   199,
       0,     0,     0,     0,   200,   201,     0,   202,     0,     0,
       0,   203,     0,   204,   205,   206,   207,   208,     0,     0,
       0,   209,     0,     0,   210,   211,   212,     0,     0,     0,
     213,     0,   214,   215,     0,   216,   217,   218,     0,     0,
     219,   220,     0,   221,   222,   223,   224,   225,   226,     0,
       0,   227,   228,   229,     0,     0,   230,   231,     0,   232,
     233,   234,     0,     0,   235,     0,     0,     0,   236,   237,
       0,   238,     0,   239,     0,   240,   241,   242,   243,     0,
     244,     0,   245,     0,     0,     0,   246,   247,     0,   248,
       0,     0,   249,   250,     0,     0,     0,   251,   252,   253,
     254,     0,     0,   255,   256,   257,     0,     0,   258,     0,
       0,     0,     0,   259,   260,     0,     0,     0,   261,     0,
       0,     0,   262,   263,     0,   264,   265,     0,     0,     0,
     266,     0,     0,   267,   268,     0,     0,   269,     0,     0,
     270,   271,     0,     0,     0,     0,     0,   272,   273,     0,
     274,     0,   275,     0,   276,   277,     0,     0,     0,     0,
       0,     0,     0,   278,     0,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,     0,   296,   297,   298,     0,   299,   300,   301,
     302,     0,   303,   304,     0,     0,     0,     0,   305,   306,
     307,   308,   309,   310,     0,     0,   311,   312,     0,   313,
       0,   314,     0,   315,   316,   317,   318,   319,   320,   321,
     322,   323,     0,     0,   324,   325,     0,     0,   326,   327,
     328,   329,     0,     0,     0,   330,   331,     0,     0,     0,
     332,     0,   333,   334,   335,     0,   336,   337,   338,     0,
     339,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     340,   341,   342,     0,   343,   344,     0,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,     0,     0,   355,
     356,   357,     0,   358,     0,   359,   360,   361,   362,   363,
       0,   364,   365,   366,     0,     0,   367,     0,     0,     0,
     368,   369,   370,   371,   372,     0,     0,   373,   374,   375,
     376,   377,     0,   378,   379,     0,   380,   381,   382,     0,
       0,   383,     0,   384,     0,   385,   386,     0,   387,   388,
     389,     0,   390,     0,     0,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,     0,   402,   403,     0,
       0,     0,   404,   405,   406,   407,     0,     0,     0,   408,
       0,     0,     0,   409,     0,   410,   411,   412,   413,     0,
     414,   415,   416,   417,   418,     0,     0,     0,     0,     0,
       0,     0,     0,   419,   420,     0,   421,     0,     0,   422,
       0,     0,   423,   424,   425,     0,     0,   426,   427,     0,
     428,   429,   430,   431,   432,   433,     0,     0,   434,   435,
     436,   437,     0,   438,   439,     0,     0,   440,   441,   442,
     443,     0,     0,   444,   445,     0,   446,   447,   448,   449,
       0,     0,     0,     0,     0,   450,   451,     0,     0,     0,
     452,   453,   454,   455,     0,   456,   457,     0,   458,   459,
       0,   460,   461,     0,     0,   462,     0,     0,   463,     0,
     464,     0,   465,   466,     0,     0,     0,     0,     0,     0,
     467,     0,     0,   468,     0,     0,     0,   469,   470,   471,
     472,   473,     0,     0,     0,     0,     0,     0,   474,   475,
       0,   476,   477,   478,     0,     0,   479,     0,     0,   136,
       0,   137,   138,   139,   140,   141,     0,     0,     0,     0,
       0,   142,     0,     0,   143,   758,   144,   145,   146,   147,
     148,   149,   150,     0,   151,     0,     0,     0,   152,     0,
       0,     0,   153,     0,     0,   154,   155,   156,     0,   157,
       0,   158,   159,     0,     0,   160,     0,     0,   161,   162,
       0,   163,   164,     0,   165,     0,   166,   167,   168,   169,
     170,   171,     0,   172,   173,     0,   174,   175,   176,   177,
     178,   179,   180,   181,     0,   182,   183,     0,   184,   185,
     186,   187,   188,     0,   189,     0,     0,   190,     0,     0,
     191,     0,   192,     0,     0,   193,     0,     0,     0,   194,
     195,   196,     0,     0,   197,     0,     0,     0,     0,   198,
     199,     0,     0,     0,     0,   200,   201,     0,   202,     0,
       0,     0,   203,     0,   204,   205,   206,   207,   208,     0,
       0,     0,   209,     0,     0,   210,   211,   212,     0,     0,
       0,   213,     0,   214,   215,     0,   216,   217,   218,     0,
       0,   219,   220,     0,   221,   222,   223,   224,   225,   226,
       0,     0,   227,   228,   229,     0,     0,   230,   231,     0,
     232,   233,   234,     0,     0,   235,     0,     0,     0,   236,
     237,     0,   238,     0,   239,     0,   240,   241,   242,   243,
       0,   244,     0,   245,     0,     0,     0,   246,   247,     0,
     248,     0,     0,   249,   250,     0,     0,     0,   251,   252,
     253,   254,     0,     0,   255,   256,   257,     0,     0,   258,
       0,     0,     0,     0,   259,   260,     0,     0,     0,   261,
       0,     0,     0,   262,   263,     0,   264,   265,     0,     0,
       0,   266,     0,     0,   267,   268,     0,     0,   269,     0,
       0,   270,   271,     0,     0,     0,     0,     0,   272,   273,
       0,   274,     0,   275,     0,   276,   277,     0,     0,     0,
       0,     0,     0,     0,   278,     0,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,     0,   296,   297,   298,     0,   299,   300,
     301,   302,     0,   303,   304,     0,     0,     0,     0,   305,
     306,   307,   308,   309,   310,     0,     0,   311,   312,     0,
     313,     0,   314,     0,   315,   316,   317,   318,   319,   320,
     321,   322,   323,     0,     0,   324,   325,     0,     0,   326,
     327,   328,   329,     0,     0,     0,   330,   331,     0,     0,
       0,   332,     0,   333,   334,   335,     0,   336,   337,   338,
       0,   339,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   340,   341,   342,     0,   343,   344,     0,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,     0,     0,
     355,   356,   357,     0,   358,     0,   359,   360,   361,   362,
     363,     0,   364,   365,   366,     0,     0,   367,     0,     0,
       0,   368,   369,   370,   371,   372,     0,     0,   373,   374,
     375,   376,   377,     0,   378,   379,     0,   380,   381,   382,
       0,     0,   383,     0,   384,     0,   385,   386,     0,   387,
     388,   389,     0,   390,     0,     0,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,     0,   402,   403,
       0,     0,     0,   404,   405,   406,   407,     0,     0,     0,
     408,     0,     0,     0,   409,     0,   410,   411,   412,   413,
       0,   414,   415,   416,   417,   418,     0,     0,     0,     0,
       0,     0,     0,     0,   419,   420,     0,   421,     0,     0,
     422,     0,     0,   423,   424,   425,     0,     0,   426,   427,
       0,   428,   429,   430,   431,   432,   433,     0,     0,   434,
     435,   436,   437,     0,   438,   439,     0,     0,   440,   441,
     442,   443,     0,     0,   444,   445,     0,   446,   447,   448,
     449,     0,     0,     0,     0,     0,   450,   451,     0,     0,
       0,   452,   453,   454,   455,     0,   456,   457,     0,   458,
     459,     0,   460,   461,     0,     0,   462,     0,     0,   463,
       0,   464,     0,   465,   466,     0,     0,     0,     0,     0,
       0,   467,     0,     0,   468,     0,     0,     0,   469,   470,
     471,   472,   473,     0,     0,     0,     0,     0,     0,   474,
     475,     0,   476,   477,   478,     0,     0,   479,     0,     0,
     136,     0,   137,   138,   139,   140,   141,     0,     0,     0,
       0,     0,   142,     0,     0,   143,  2560,   144,   145,   146,
     147,   148,   149,   150,     0,   151,     0,     0,     0,   152,
       0,     0,     0,   153,     0,     0,   154,   155,   156,     0,
     157,     0,   158,   159,     0,     0,   160,     0,     0,   161,
     162,     0,   163,   888,   889,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,     0,   174,   175,   176,
     177,   178,   179,   180,   181,     0,   182,   183,     0,   184,
     185,   186,   187,   188,     0,   189,     0,     0,   190,     0,
       0,   191,     0,   192,     0,     0,   193,     0,     0,     0,
     194,   195,   196,     0,     0,   197,     0,     0,     0,     0,
     198,   199,     0,     0,     0,   890,   200,   201,     0,   202,
       0,     0,     0,   203,     0,   204,   205,   206,   207,   208,
       0,     0,     0,   209,     0,     0,   210,   211,   212,     0,
       0,     0,   213,     0,   214,   215,     0,   216,   217,   218,
       0,     0,   219,   220,     0,   221,   222,   223,   224,   225,
     226,     0,     0,   227,   228,   229,     0,     0,   230,   231,
       0,   232,   233,   234,     0,     0,   235,     0,     0,     0,
     236,   237,     0,   238,     0,   239,     0,   240,   241,   242,
     243,     0,   891,     0,   245,     0,     0,     0,   246,   247,
       0,   248,     0,     0,   249,   250,     0,     0,     0,   251,
     252,   253,   254,     0,     0,   255,   256,   257,     0,     0,
     258,     0,     0,     0,     0,   259,   260,     0,     0,     0,
     261,     0,     0,     0,   262,   263,     0,   264,   265,     0,
       0,     0,   266,     0,     0,   267,   268,     0,     0,   269,
       0,     0,   270,   271,     0,     0,     0,     0,     0,   272,
     273,     0,   892,     0,   275,     0,   276,   277,     0,     0,
       0,     0,     0,     0,     0,   278,     0,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,     0,   296,   297,   298,     0,   299,
     300,   301,   302,     0,   303,   304,     0,     0,     0,     0,
     305,   306,   307,   308,   309,   310,     0,     0,   311,   312,
       0,   313,     0,   314,     0,   315,   316,   317,   318,   319,
     320,   893,   322,   323,     0,     0,   324,   325,     0,     0,
     326,   327,   328,   329,     0,     0,     0,   330,   331,     0,
       0,     0,   332,     0,   333,   334,   335,     0,   336,   337,
     338,     0,   339,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   340,   341,   342,     0,   343,   344,     0,   345,
     346,   894,   348,   349,   350,   351,   352,   353,   354,     0,
       0,   355,   356,   357,     0,   358,     0,   359,   360,   361,
     362,   363,     0,   364,   365,   366,     0,     0,   367,     0,
       0,     0,   368,   369,   370,   371,   372,     0,     0,   373,
     374,   375,   376,   377,     0,   378,   379,     0,   380,   381,
     382,     0,     0,   383,     0,   384,     0,   385,   386,     0,
     387,   388,   389,     0,   390,     0,     0,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,     0,   402,
     403,     0,     0,     0,   404,   405,   895,   407,     0,     0,
       0,   408,     0,     0,     0,   409,     0,   410,   411,   412,
     413,     0,   414,   415,   416,   417,   418,     0,     0,     0,
       0,     0,     0,     0,     0,   419,   420,     0,   421,     0,
       0,   422,     0,     0,   423,   424,   425,     0,     0,   426,
     427,     0,   428,   429,   430,   431,   432,   433,     0,     0,
     434,   435,   436,   437,     0,   438,   439,     0,     0,   440,
     441,   442,   443,     0,     0,   444,   445,     0,   446,   447,
     448,   449,     0,     0,     0,     0,     0,   896,   451,     0,
       0,     0,   452,   453,   454,   455,     0,   456,   457,     0,
     458,   459,     0,   460,   461,     0,     0,   462,     0,     0,
     463,     0,   464,     0,   465,   466,     0,     0,     0,     0,
       0,     0,   467,     0,     0,   468,     0,     0,     0,   469,
     470,   471,   472,   473,     0,     0,     0,     0,     0,     0,
     474,   475,     0,   476,   477,   478,     0,     0,   479,     0,
     136,     0,   137,   138,   139,   140,   141,     0,     0,     0,
       0,     0,   142,     0,     0,   143,   897,   144,   145,   146,
     147,   148,   149,   150,     0,   151,     0,     0,     0,   152,
       0,     0,     0,   153,     0,     0,   154,   155,   156,     0,
     157,     0,   158,   159,     0,     0,   160,     0,     0,   161,
     162,     0,   163,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,     0,   174,   175,   176,
     177,   178,   179,   180,   181,     0,   182,   183,     0,   184,
     185,   186,   187,   188,     0,   189,     0,     0,   190,     0,
       0,   191,     0,   192,     0,     0,   193,     0,     0,     0,
     194,   195,   196,     0,     0,   197,     0,     0,     0,     0,
     198,   199,     0,     0,     0,     0,   200,   201,     0,   202,
       0,     0,     0,   203,     0,   204,   205,   206,   207,   208,
       0,     0,     0,   209,     0,     0,   210,   211,   212,     0,
       0,     0,   213,     0,   214,   215,     0,   216,   217,   218,
       0,     0,   219,   220,     0,   221,   222,   223,   224,   225,
     226,     0,     0,   227,   228,   229,     0,     0,   230,   231,
       0,   232,   233,   234,     0,     0,   235,     0,     0,     0,
     236,   237,     0,   238,     0,   239,     0,   240,   241,   242,
     243,     0,   244,     0,   245,     0,     0,     0,   246,   247,
       0,   248,     0,     0,   249,   250,     0,     0,     0,   251,
     252,   253,   254,     0,     0,   255,   256,   257,     0,     0,
     258,     0,     0,     0,     0,   259,   260,     0,     0,     0,
     261,     0,     0,     0,   262,   263,     0,   264,   265,     0,
       0,     0,   266,     0,     0,   267,   268,     0,     0,   269,
       0,     0,   270,   271,   605,     0,     0,     0,     0,   272,
     273,     0,   274,     0,   275,     0,   276,   277,     0,     0,
       0,     0,     0,     0,     0,   278,     0,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,     0,   296,   297,   298,     0,   299,
     300,   301,   302,     0,   303,   304,     0,     0,     0,     0,
     305,   306,   307,   308,   309,   310,     0,     0,   311,   312,
       0,   313,     0,   314,     0,   315,   316,   317,   318,   319,
     320,   321,   322,   323,     0,     0,   324,   325,     0,     0,
     326,   327,   328,   329,     0,     0,     0,   330,   331,     0,
       0,     0,   332,     0,   333,   334,   335,     0,   336,   337,
     338,     0,   339,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   340,   341,   342,     0,   343,   344,     0,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,     0,
       0,   355,   356,   357,     0,   358,     0,   359,   360,   361,
     362,   363,     0,   364,   365,   366,     0,     0,   367,     0,
       0,     0,   368,   369,   370,   371,   372,     0,     0,   373,
     374,   375,   376,   377,     0,   378,   379,     0,   380,   381,
     382,     0,     0,   383,     0,   384,     0,   385,   386,     0,
     387,   388,   389,     0,   390,     0,     0,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,     0,   402,
     403,     0,     0,     0,   404,   405,   406,   407,     0,     0,
       0,   408,     0,     0,     0,   409,     0,   410,   411,   412,
     413,     0,   414,   415,   416,   417,   418,     0,     0,     0,
       0,     0,     0,     0,     0,   419,   420,     0,   421,     0,
       0,   422,     0,     0,   423,   424,   425,     0,     0,   426,
     427,     0,   428,   429,   430,   431,   432,   433,     0,     0,
     434,   435,   436,   437,     0,   438,   439,     0,     0,   440,
     441,   442,   443,     0,   133,   444,   445,     0,   446,   447,
     448,   449,     0,     0,     0,     0,     0,   450,   451,     0,
       0,     0,   452,   453,   454,   455,     0,   456,   457,     0,
     458,   459,     0,   460,   461,     0,     0,   462,     0,     0,
     463,     0,   464,     0,   465,   466,     0,     0,     0,     0,
       0,     0,   467,     0,     0,   468,     0,     0,     0,   469,
     470,   471,   472,   473,     0,     0,     0,     0,     0,     0,
     474,   475,     0,   476,   477,   478,     0,     0,   479,     0,
     136,     0,   137,   138,   139,   140,   141,     0,     0,     0,
       0,     0,   142,     0,     0,   143,  1359,   144,   145,   146,
     147,   148,   149,   150,     0,   151,     0,     0,     0,   152,
       0,     0,     0,   153,     0,     0,   154,   155,   156,     0,
     157,     0,   158,   159,     0,     0,   160,     0,     0,   161,
     162,     0,   163,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,     0,   174,   175,   176,
     177,   178,   179,   180,   181,     0,   182,   183,     0,   184,
     185,   186,   187,   188,     0,   189,     0,     0,   190,     0,
       0,   191,     0,   192,     0,     0,   193,     0,     0,     0,
     194,   195,   196,     0,     0,   197,     0,     0,     0,     0,
     198,   199,     0,     0,     0,     0,   200,   201,     0,   202,
       0,     0,     0,   203,     0,   204,   205,   206,   207,   208,
       0,     0,     0,   209,     0,     0,   210,   211,   212,     0,
       0,     0,   213,     0,   214,   215,     0,   216,   217,   218,
       0,     0,   219,   220,     0,   221,   222,   223,   224,   225,
     226,     0,     0,   227,   228,   229,     0,     0,   230,   231,
       0,   232,   233,   234,     0,     0,   235,     0,     0,     0,
     236,   237,     0,   238,     0,   239,     0,   240,   241,   242,
     243,     0,   244,     0,   245,     0,     0,     0,   246,   247,
       0,   248,     0,     0,   249,   250,     0,     0,     0,   251,
     252,   253,   254,     0,     0,   255,   256,   257,     0,     0,
     258,     0,     0,     0,     0,   259,   260,     0,     0,     0,
     261,     0,     0,     0,   262,   263,     0,   264,   265,     0,
       0,     0,   266,     0,     0,   267,   268,     0,     0,   269,
       0,     0,   270,   271,   605,     0,     0,     0,     0,   272,
     273,     0,   274,     0,   275,     0,   276,   277,     0,     0,
       0,     0,     0,     0,     0,   278,     0,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,     0,   296,   297,   298,     0,   299,
     300,   301,   302,     0,   303,   304,     0,     0,     0,     0,
     305,   306,   307,   308,   309,   310,     0,     0,   311,   312,
       0,   313,     0,   314,     0,   315,   316,   317,   318,   319,
     320,   321,   322,   323,     0,     0,   324,   325,     0,     0,
     326,   327,   328,   329,     0,     0,     0,   330,   331,     0,
       0,     0,   332,     0,   333,   334,   335,     0,   336,   337,
     338,     0,   339,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   340,   341,   342,     0,   343,   344,     0,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,     0,
       0,   355,   356,   357,     0,   358,     0,   359,   360,   361,
     362,   363,     0,   364,   365,   366,     0,     0,   367,     0,
       0,     0,   368,   369,   370,   371,   372,     0,     0,   373,
     374,   375,   376,   377,     0,   378,   379,     0,   380,   381,
     382,     0,     0,   383,     0,   384,     0,   385,   386,     0,
     387,   388,   389,     0,   390,     0,     0,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,     0,   402,
     403,     0,     0,     0,   404,   405,   406,   407,     0,     0,
       0,   408,     0,     0,     0,   409,     0,   410,   411,   412,
     413,     0,   414,   415,   416,   417,   418,     0,     0,     0,
       0,     0,     0,     0,     0,   419,   420,     0,   421,     0,
       0,   422,     0,     0,   423,   424,   425,     0,     0,   426,
     427,     0,   428,   429,   430,   431,   432,   433,     0,     0,
     434,   435,   436,   437,     0,   438,   439,     0,     0,   440,
     441,   442,   443,     0,   133,   444,   445,     0,   446,   447,
     448,   449,     0,     0,     0,     0,     0,   450,   451,     0,
       0,     0,   452,   453,   454,   455,     0,   456,   457,     0,
     458,   459,     0,   460,   461,     0,     0,   462,     0,     0,
     463,     0,   464,     0,   465,   466,     0,     0,     0,     0,
       0,     0,   467,     0,     0,   468,     0,     0,     0,   469,
     470,   471,   472,   473,     0,     0,     0,     0,     0,     0,
     474,   475,     0,   476,   477,   478,     0,     0,   479,     0,
     136,     0,   137,   138,   139,   140,   141,     0,     0,     0,
       0,     0,   142,     0,     0,   143,  1696,   144,   145,   146,
     147,   148,   149,   150,     0,   151,     0,     0,     0,   152,
       0,     0,     0,   153,     0,     0,   154,   155,   156,     0,
     157,     0,   158,   159,     0,     0,   160,     0,     0,   161,
     162,     0,   163,   888,   889,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,     0,   174,   175,   176,
     177,   178,   179,   180,   181,     0,   182,   183,     0,   184,
     185,   186,   187,   188,     0,   189,     0,     0,   190,     0,
       0,   191,     0,   192,     0,     0,   193,     0,     0,     0,
     194,   195,   196,     0,     0,   197,     0,     0,     0,     0,
     198,   199,     0,     0,     0,   890,   200,   201,     0,   202,
       0,     0,     0,   203,     0,   204,   205,   206,   207,   208,
       0,     0,     0,   209,     0,     0,   210,   211,   212,     0,
       0,     0,   213,     0,   214,   215,     0,   216,   217,   218,
       0,     0,   219,   220,     0,   221,   222,   223,   224,   225,
     226,     0,     0,   227,   228,   229,     0,     0,   230,   231,
       0,   232,   233,   234,     0,     0,   235,     0,     0,     0,
     236,   237,     0,   238,     0,   239,     0,   240,   241,   242,
     243,     0,   891,     0,   245,     0,     0,     0,   246,   247,
       0,   248,     0,     0,   249,   250,     0,     0,     0,   251,
     252,   253,   254,     0,     0,   255,   256,   257,     0,     0,
     258,     0,     0,     0,     0,   259,   260,     0,     0,     0,
     261,     0,     0,     0,   262,   263,     0,   264,   265,     0,
       0,     0,   266,     0,     0,   267,   268,     0,     0,   269,
       0,     0,   270,   271,     0,     0,     0,     0,     0,   272,
     273,     0,   892,     0,   275,     0,   276,   277,     0,     0,
       0,     0,     0,     0,     0,   278,     0,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,     0,   296,   297,   298,     0,   299,
     300,   301,   302,     0,   303,   304,     0,     0,     0,     0,
     305,   306,   307,   308,   309,   310,     0,     0,   311,   312,
       0,   313,     0,   314,     0,   315,   316,   317,   318,   319,
     320,   893,   322,   323,     0,     0,   324,   325,     0,     0,
     326,   327,   328,   329,     0,     0,     0,   330,   331,     0,
       0,     0,   332,     0,   333,   334,   335,     0,   336,   337,
     338,     0,   339,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   340,   341,   342,     0,   343,   344,     0,   345,
     346,   894,   348,   349,   350,   351,   352,   353,   354,     0,
       0,   355,   356,   357,     0,   358,     0,   359,   360,   361,
     362,   363,     0,   364,   365,   366,     0,     0,   367,     0,
       0,     0,   368,   369,   370,   371,   372,     0,     0,   373,
     374,   375,   376,   377,     0,   378,   379,     0,   380,   381,
     382,     0,     0,   383,     0,   384,     0,   385,   386,     0,
     387,   388,   389,     0,   390,     0,     0,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,     0,   402,
     403,     0,     0,     0,   404,   405,   895,   407,     0,     0,
       0,   408,     0,     0,     0,   409,     0,   410,   411,   412,
     413,     0,   414,   415,   416,   417,   418,     0,     0,     0,
       0,     0,     0,     0,     0,   419,   420,     0,   421,     0,
       0,   422,     0,     0,   423,   424,   425,     0,     0,   426,
     427,     0,   428,   429,   430,   431,   432,   433,     0,     0,
     434,   435,   436,   437,     0,   438,   439,     0,     0,   440,
     441,   442,   443,     0,     0,   444,   445,     0,   446,   447,
     448,   449,     0,     0,     0,     0,     0,   450,   451,     0,
       0,     0,   452,   453,   454,   455,     0,   456,   457,     0,
     458,   459,     0,   460,   461,     0,     0,   462,     0,     0,
     463,     0,   464,     0,   465,   466,     0,     0,     0,     0,
       0,     0,   467,     0,     0,   468,     0,     0,     0,   469,
     470,   471,   472,   473,     0,     0,     0,     0,     0,     0,
     474,   475,     0,   476,   477,   478,     0,     0,   479,     0,
     136,     0,   137,   138,   139,   140,   141,     0,     0,     0,
       0,     0,   142,     0,     0,   143,   897,   144,   145,   146,
     147,   148,   149,   150,     0,   151,     0,     0,     0,   152,
       0,     0,     0,   153,     0,     0,   154,   155,   156,     0,
     157,     0,   158,   159,     0,     0,   160,     0,     0,   161,
     162,     0,   163,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,     0,   174,   175,   176,
     177,   178,   179,   180,   181,     0,   182,   183,     0,   184,
     185,   186,   187,   188,     0,   189,     0,     0,   190,     0,
       0,   191,     0,   192,     0,     0,   193,     0,     0,     0,
     194,   195,   196,     0,     0,   197,     0,     0,     0,     0,
     198,   199,     0,     0,     0,     0,   200,   201,     0,   202,
       0,     0,     0,   203,     0,   204,   205,   206,   207,   208,
       0,     0,     0,   209,     0,     0,   210,   211,   212,     0,
       0,     0,   213,     0,   214,   215,     0,   216,   217,   218,
       0,     0,   219,   220,     0,   221,   222,   223,   224,   225,
     226,     0,     0,   227,   228,   229,     0,     0,   230,   231,
       0,   232,   233,   234,     0,     0,   235,     0,     0,     0,
     236,   237,     0,   238,     0,   239,     0,   240,   241,   242,
     243,     0,   244,     0,   245,     0,     0,     0,   246,   247,
       0,   248,     0,     0,   249,   250,     0,     0,     0,   251,
     252,   253,   254,     0,     0,   255,   256,   257,     0,     0,
     258,     0,     0,     0,     0,   259,   260,     0,     0,     0,
     261,     0,     0,     0,   262,   263,     0,   264,   265,     0,
       0,     0,   266,     0,     0,   267,   268,     0,     0,   269,
       0,     0,   270,   271,   605,     0,     0,     0,     0,   272,
     273,     0,   274,     0,   275,     0,   276,   277,     0,     0,
       0,     0,     0,     0,     0,   278,     0,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,     0,   296,   297,   298,     0,   299,
     300,   301,   302,     0,   303,   304,     0,     0,     0,     0,
     305,   306,   307,   308,   309,   310,     0,     0,   311,   312,
       0,   313,     0,   314,     0,   315,   316,   317,   318,   319,
     320,   321,   322,   323,     0,     0,   324,   325,     0,     0,
     326,   327,   328,   329,     0,     0,     0,   330,   331,     0,
       0,     0,   332,     0,   333,   334,   335,     0,   336,   337,
     338,     0,   339,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   340,   341,   342,     0,   343,   344,     0,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,     0,
       0,   355,   356,   357,     0,   358,     0,   359,   360,   361,
     362,   363,     0,   364,   365,   366,     0,     0,   367,     0,
       0,     0,   368,   369,   370,   371,   372,     0,     0,   373,
     374,   375,   376,   377,     0,   378,   379,     0,   380,   381,
     382,     0,     0,   383,     0,   384,     0,   385,   386,     0,
     387,   388,   389,     0,   390,     0,     0,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,     0,   402,
     403,     0,     0,     0,   404,   405,   406,   407,     0,     0,
       0,   408,     0,     0,     0,   409,     0,   410,   411,   412,
     413,     0,   414,   415,   416,   417,   418,     0,     0,     0,
       0,     0,     0,     0,     0,   419,   420,     0,   421,     0,
       0,   422,     0,     0,   423,   424,   425,     0,     0,   426,
     427,     0,   428,   429,   430,   431,   432,   433,     0,     0,
     434,   435,   436,   437,     0,   438,   439,     0,     0,   440,
     441,   442,   443,     0,   133,   444,   445,     0,   446,   447,
     448,   449,     0,     0,     0,     0,     0,   450,   451,     0,
       0,     0,   452,   453,   454,   455,     0,   456,   457,     0,
     458,   459,     0,   460,   461,     0,     0,   462,     0,     0,
     463,     0,   464,     0,   465,   466,     0,     0,     0,     0,
       0,     0,   467,     0,     0,   468,     0,     0,     0,   469,
     470,   471,   472,   473,     0,     0,     0,     0,     0,     0,
     474,   475,     0,   476,   477,   478,     0,     0,   479,     0,
     136,     0,   137,   138,   139,   140,   141,     0,     0,     0,
       0,     0,   142,     0,     0,   143,  3490,   144,   145,   146,
     147,   148,   149,   150,     0,   151,     0,     0,     0,   152,
       0,     0,     0,   153,     0,     0,   154,   155,   156,     0,
     157,     0,   158,   159,     0,     0,   160,     0,     0,   161,
     162,     0,   163,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,     0,   174,   175,   176,
     177,   178,   179,   180,   181,  1250,   182,   183,     0,   184,
     185,   186,   187,   188,     0,   189,     0,     0,   190,     0,
       0,   191,     0,   192,     0,     0,   193,     0,     0,     0,
     194,   195,   196,     0,     0,   197,     0,     0,     0,     0,
     198,   199,     0,     0,     0,     0,   200,   201,     0,   202,
       0,     0,     0,   203,     0,   204,   205,   206,   207,   208,
       0,     0,     0,   209,     0,     0,   210,   211,   212,     0,
       0,     0,   213,     0,   214,   215,     0,   216,   217,   218,
       0,     0,   219,   220,     0,   221,   222,   223,   224,   225,
     226,     0,     0,   227,   228,   229,     0,     0,   230,   231,
       0,   232,   233,   234,     0,     0,   235,     0,     0,     0,
     236,   237,     0,   238,     0,   239,     0,   240,   241,   242,
     243,     0,   244,     0,   245,     0,     0,     0,   246,   247,
       0,   248,     0,     0,   249,   250,     0,     0,     0,   251,
     252,   253,   254,     0,     0,   255,   256,   257,     0,     0,
     258,     0,     0,     0,     0,   259,   260,     0,     0,     0,
     261,     0,     0,     0,   262,   263,     0,   264,   265,     0,
       0,     0,   266,     0,     0,   267,   268,     0,     0,   269,
       0,     0,   270,   271,     0,     0,     0,     0,     0,   272,
     273,     0,   274,     0,   275,     0,   276,   277,     0,     0,
       0,     0,     0,     0,     0,   278,     0,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,     0,   296,   297,   298,     0,   299,
     300,   301,   302,     0,   303,   304,     0,     0,     0,     0,
     305,   306,   307,   308,   309,   310,     0,     0,   311,   312,
       0,   313,     0,   314,     0,   315,   316,   317,   318,   319,
     320,   321,   322,   323,     0,     0,   324,   325,     0,     0,
     326,   327,   328,   329,     0,     0,     0,   330,   331,     0,
       0,     0,   332,     0,   333,   334,   335,     0,   336,   337,
     338,     0,   339,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   340,   341,   342,     0,   343,   344,     0,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,     0,
       0,   355,   356,   357,     0,   358,     0,   359,   360,   361,
     362,   363,     0,   364,   365,   366,     0,     0,   367,     0,
       0,     0,   368,   369,   370,   371,   372,     0,     0,   373,
     374,   375,   376,   377,     0,   378,   379,     0,   380,   381,
     382,     0,     0,   383,     0,   384,     0,   385,   386,     0,
     387,   388,   389,     0,   390,     0,     0,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,     0,   402,
     403,     0,     0,     0,   404,   405,   406,   407,     0,     0,
       0,   408,     0,     0,     0,   409,     0,   410,   411,   412,
     413,     0,   414,   415,   416,   417,   418,     0,     0,     0,
       0,     0,     0,     0,     0,   419,   420,     0,   421,     0,
       0,   422,     0,     0,   423,   424,   425,     0,     0,   426,
     427,     0,   428,   429,   430,   431,   432,   433,     0,     0,
     434,   435,   436,   437,     0,   438,   439,     0,     0,   440,
     441,   442,   443,     0,     0,   444,   445,     0,   446,   447,
     448,   449,     0,     0,     0,     0,     0,   450,   451,     0,
       0,     0,   452,   453,   454,   455,     0,   456,   457,     0,
     458,   459,     0,   460,   461,     0,     0,   462,     0,     0,
     463,     0,   464,     0,   465,   466,     0,     0,     0,     0,
       0,     0,   467,     0,     0,   468,     0,     0,     0,   469,
     470,   471,   472,   473,     0,     0,     0,     0,     0,     0,
     474,   475,     0,   476,   477,   478,     0,     0,   479,     0,
     136,     0,   137,   138,   139,   140,   141,     0,     0,     0,
       0,     0,   142,     0,     0,   143,  1251,   144,   145,   146,
     147,   148,   149,   150,     0,   151,     0,     0,     0,   152,
       0,     0,     0,   153,     0,     0,   154,   155,   156,     0,
     157,     0,   158,   159,     0,     0,   160,     0,     0,   161,
     162,     0,   163,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,     0,   174,   175,   176,
     177,   178,   179,   180,   181,     0,   182,   183,     0,   184,
     185,   186,   187,   188,     0,   189,     0,     0,   190,     0,
       0,   191,     0,   192,     0,     0,   193,     0,     0,     0,
     194,   195,   196,     0,     0,   197,     0,     0,     0,     0,
     198,   199,     0,     0,     0,     0,   200,   201,     0,   202,
       0,     0,     0,   203,     0,   204,   205,   206,   207,   208,
       0,     0,     0,   209,     0,     0,   210,   211,   212,     0,
       0,     0,   213,     0,   214,   215,     0,   216,   217,   218,
       0,     0,   219,   220,     0,   221,   222,   223,   224,   225,
     226,     0,     0,   227,   228,   229,     0,     0,   230,   231,
       0,   232,   233,   234,     0,     0,   235,     0,     0,     0,
     236,   237,     0,   238,     0,   239,     0,   240,   241,   242,
     243,     0,   244,     0,   245,     0,     0,     0,   246,   247,
       0,   248,     0,     0,   249,   250,     0,     0,     0,   251,
     252,   253,   254,     0,     0,   255,   256,   257,     0,     0,
     258,     0,     0,     0,     0,   259,   260,     0,     0,     0,
     261,     0,     0,     0,   262,   263,     0,   264,   265,     0,
       0,     0,   266,     0,     0,   267,   268,     0,     0,   269,
       0,     0,   270,   271,     0,     0,     0,     0,     0,   272,
     273,     0,   274,     0,   275,     0,   276,   277,     0,     0,
       0,     0,     0,     0,     0,   278,     0,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,     0,   296,   297,   298,     0,   299,
     300,   301,   302,     0,   303,   304,     0,     0,     0,     0,
     305,   306,   307,   308,   309,   310,     0,     0,   311,   312,
       0,   313,     0,   314,     0,   315,   316,   317,   318,   319,
     320,   321,   322,   323,     0,     0,   324,   325,     0,     0,
     326,   327,   328,   329,     0,     0,     0,   330,   331,     0,
       0,     0,   332,     0,   333,   334,   335,     0,   336,   337,
     338,     0,   339,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   340,   341,   342,     0,   343,   344,     0,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,     0,
       0,   355,   356,   357,     0,   358,     0,   359,   360,   361,
     362,   363,     0,   364,   365,   366,     0,     0,   367,     0,
       0,     0,   368,   369,   370,   371,   372,     0,     0,   373,
     374,   375,   376,   377,     0,   378,   379,     0,   380,   381,
     382,     0,     0,   383,     0,   384,     0,   385,   386,     0,
     387,   388,   389,     0,   390,     0,     0,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,     0,   402,
     403,     0,     0,     0,   404,   405,   406,   407,     0,     0,
       0,   408,     0,     0,     0,   409,     0,   410,   411,   412,
     413,     0,   414,   415,   416,   417,   418,     0,     0,     0,
       0,     0,     0,     0,     0,   419,   420,     0,   421,     0,
       0,   422,     0,     0,   423,   424,   425,     0,     0,   426,
     427,     0,   428,   429,   430,   431,   432,   433,     0,     0,
     434,   435,   436,   437,     0,   438,   439,     0,     0,   440,
     441,   442,   443,     0,     0,   444,   445,     0,   446,   447,
     448,   449,     0,     0,     0,     0,     0,   450,   451,     0,
       0,     0,   452,   453,   454,   455,     0,   456,   457,     0,
     458,   459,     0,   460,   461,     0,     0,   462,     0,     0,
     463,     0,   464,     0,   465,   466,     0,     0,     0,     0,
       0,     0,   467,     0,     0,   468,     0,     0,     0,   469,
     470,   471,   472,   473,     0,     0,     0,     0,     0,     0,
     474,   475,     0,   476,   477,   478,     0,     0,   479,     0,
     136,     0,   137,   138,   139,   140,   141,     0,     0,     0,
       0,     0,   142,     0,     0,     0,  1251,   144,   145,   146,
     147,   148,   149,     0,     0,  -363,     0,     0,     0,   152,
       0,     0,     0,   153,     0,     0,   154,   155,   156,     0,
     157,     0,     0,     0,     0,     0,   160,  3907,     0,   161,
     162,     0,   163,     0,     0,     0,     0,   166,   167,   168,
    3908,   170,   171,     0,   172,   173,     0,   174,     0,   176,
       0,   178,   179,   180,   181,     0,   182,   183,     0,   184,
     185,   186,     0,   188,     0,   189,     0,     0,   190,     0,
       0,   191,     0,   192,     0,     0,   193,     0,     0,     0,
     194,   195,   196,     0,     0,   197,     0,     0,     0,     0,
     198,     0,     0,     0,     0,     0,   200,   201,     0,   202,
       0,     0,     0,   203,     0,   204,   205,   206,   207,   208,
       0,     0,     0,     0,     0,     0,   210,   211,   212,     0,
       0,     0,   213,     0,     0,   215,     0,   216,   217,   218,
       0,     0,   219,   220,     0,   221,   222,   223,   224,   225,
       0,     0,     0,   227,   228,   229,     0,     0,   230,   231,
    3909,   232,   233,   234,     0,     0,     0,     0,     0,     0,
       0,   237,     0,   238,     0,   239,     0,   240,   241,   242,
     243,     0,   244,     0,   245,     0,     0,     0,     0,   247,
       0,     0,     0,     0,     0,   250,     0,     0,     0,   251,
     252,   253,   254,  3910,     0,   255,   256,   257,     0,     0,
     258,     0,     0,     0,     0,   259,     0,     0,     0,     0,
     261,     0,     0,     0,   262,   263,     0,   264,   265,  3911,
       0,     0,   266,     0,     0,     0,   268,     0,     0,   269,
    3912,     0,   270,   271,     0,     0,     0,     0,     0,   272,
     273,     0,   274,     0,   275,     0,   276,   277,     0,     0,
       0,     0,  -318,     0,     0,   278,     0,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,     0,   296,   297,   298,     0,   299,
     300,   301,   302,     0,   303,   304,     0,     0,     0,     0,
     305,   306,   307,   308,   309,   310,     0,     0,   311,   312,
       0,   313,     0,   314,     0,   315,   316,   317,   318,   319,
     320,   321,   322,   323,     0,     0,   324,   325,     0,     0,
     326,   327,   328,   329,     0,     0,     0,     0,   331,     0,
       0,     0,   332,     0,   333,   334,   335,     0,   336,   337,
    3913,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   341,   342,     0,     0,   344,     0,   345,
     346,   347,   348,   349,   350,   351,   352,   353,     0,     0,
       0,     0,   356,   357,     0,   358,     0,   359,   360,   361,
     362,   363,     0,   364,   365,   366,     0,     0,   367,     0,
       0,     0,   368,   369,   370,   371,   372,     0,     0,   373,
     374,   375,   376,   377,     0,   378,     0,     0,   380,     0,
     382,  -318,     0,   383,     0,     0,     0,   385,     0,     0,
     387,   388,   389,  3914,   390,     0,     0,     0,   392,   393,
     394,   395,   396,   397,   398,     0,   400,   401,     0,   402,
       0,     0,     0,     0,   404,   405,   406,     0,     0,     0,
       0,   408,     0,     0,     0,   409,     0,     0,   411,     0,
     413,     0,   414,     0,     0,   417,   418,     0,     0,     0,
       0,     0,     0,     0,     0,   419,   420,     0,   421,     0,
       0,   422,     0,     0,   423,     0,   425,     0,     0,     0,
     427,     0,   428,   429,   430,   431,   432,   433,     0,     0,
     434,   435,   436,   437,     0,   438,   439,     0,     0,   440,
     441,   442,   443,     0,     0,   444,   445,     0,   446,   447,
     448,   449,     0,     0,     0,     0,     0,   450,   451,     0,
       0,     0,     0,   453,   454,   455,     0,   456,   457,     0,
     458,   459,     0,     0,     0,     0,     0,   462,     0,     0,
     463,     0,     0,     0,   465,   466,     0,     0,     0,     0,
       0,     0,   467,     0,     0,   468,     0,     0,     0,   469,
     470,   471,   472,   473,     0,     0,  -318,     0,     0,     0,
     474,     0,     0,   476,     0,   478,     0,   136,   479,   137,
     138,   139,   140,   141,     0,     0,     0,     0,     0,   142,
       0,  4418,   143,     0,   144,   145,   146,   147,   148,   149,
     150,     0,   151,     0,     0,     0,   152,     0,     0,     0,
     153,     0,     0,   154,   155,   156,     0,   157,     0,   158,
     159,     0,     0,   160,     0,     0,   161,   162,     0,   163,
     164,     0,   165,     0,   166,   167,   168,   169,   170,   171,
       0,   172,   173,     0,   174,   175,   176,   177,   178,   179,
     180,   181,     0,   182,   183,     0,   184,   185,   186,   187,
     188,     0,   189,     0,     0,   190,     0,     0,   191,     0,
     192,     0,     0,   193,     0,     0,     0,   194,   195,   196,
       0,     0,   197,     0,     0,     0,     0,   198,   199,     0,
       0,     0,     0,   200,   201,     0,   202,     0,     0,     0,
     203,     0,   204,   205,   206,   207,   208,     0,     0,     0,
     209,     0,     0,   210,   211,   212,     0,     0,     0,   213,
       0,   214,   215,     0,   216,   217,   218,     0,     0,   219,
     220,     0,   221,   222,   223,   224,   225,   226,     0,     0,
     227,   228,   229,     0,     0,   230,   231,     0,   232,   233,
     234,     0,     0,   235,     0,     0,     0,   236,   237,     0,
     238,     0,   239,     0,   240,   241,   242,   243,     0,   244,
       0,   245,     0,     0,     0,   246,   247,     0,   248,     0,
       0,   249,   250,     0,     0,     0,   251,   252,   253,   254,
       0,     0,   255,   256,   257,     0,     0,   258,     0,     0,
       0,     0,   259,   260,     0,     0,     0,   261,     0,     0,
       0,   262,   263,     0,   264,   265,     0,     0,     0,   266,
       0,     0,   267,   268,     0,     0,   269,     0,     0,   270,
     271,     0,     0,     0,     0,     0,   272,   273,     0,   274,
       0,   275,     0,   276,   277,     0,     0,     0,     0,     0,
       0,     0,   278,     0,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,     0,   296,   297,   298,     0,   299,   300,   301,   302,
       0,   303,   304,     0,     0,     0,     0,   305,   306,   307,
     308,   309,   310,     0,     0,   311,   312,     0,   313,     0,
     314,     0,   315,   316,   317,   318,   319,   320,   321,   322,
     323,     0,     0,   324,   325,     0,     0,   326,   327,   328,
     329,     0,     0,     0,   330,   331,     0,     0,     0,   332,
       0,   333,   334,   335,     0,   336,   337,   338,     0,   339,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   340,
     341,   342,     0,   343,   344,     0,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,     0,     0,   355,   356,
     357,     0,   358,     0,   359,   360,   361,   362,   363,     0,
     364,   365,   366,     0,     0,   367,     0,     0,     0,   368,
     369,   370,   371,   372,     0,     0,   373,   374,   375,   376,
     377,     0,   378,   379,     0,   380,   381,   382,     0,     0,
     383,     0,   384,     0,   385,   386,     0,   387,   388,   389,
       0,   390,     0,     0,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,     0,   402,   403,     0,     0,
       0,   404,   405,   406,   407,     0,     0,     0,   408,     0,
       0,     0,   409,     0,   410,   411,   412,   413,     0,   414,
     415,   416,   417,   418,     0,     0,     0,     0,     0,     0,
       0,     0,   419,   420,     0,   421,     0,     0,   422,     0,
       0,   423,   424,   425,     0,     0,   426,   427,     0,   428,
     429,   430,   431,   432,   433,     0,     0,   434,   435,   436,
     437,     0,   438,   439,     0,     0,   440,   441,   442,   443,
       0,     0,   444,   445,     0,   446,   447,   448,   449,     0,
       0,     0,     0,     0,   450,   451,     0,     0,     0,   452,
     453,   454,   455,     0,   456,   457,     0,   458,   459,     0,
     460,   461,     0,     0,   462,     0,     0,   463,     0,   464,
       0,   465,   466,     0,     0,     0,     0,     0,     0,   467,
       0,     0,   468,     0,     0,     0,   469,   470,   471,   472,
     473,     0,     0,     0,     0,     0,     0,   474,   475,     0,
     476,   477,   478,     0,   136,   479,   137,   138,   139,   140,
     141,  2138,     0,     0,     0,     0,   142,     0,     0,   143,
       0,   144,   145,   146,   147,   148,   149,   150,     0,   151,
       0,     0,     0,   152,     0,     0,     0,   153,     0,     0,
     154,   155,   156,     0,   157,     0,   158,   159,     0,     0,
     160,     0,     0,   161,   162,     0,   163,   164,     0,   165,
       0,   166,   167,   168,   169,   170,   171,     0,   172,   173,
       0,   174,   175,   176,   177,   178,   179,   180,   181,     0,
     182,   183,     0,   184,   185,   186,   187,   188,     0,   189,
       0,     0,   190,     0,     0,   191,     0,   192,     0,     0,
     193,     0,     0,     0,   194,   195,   196,     0,     0,   197,
       0,     0,     0,     0,   198,   199,     0,     0,     0,     0,
     200,   201,     0,   202,     0,     0,     0,   203,     0,   204,
     205,   206,   207,   208,     0,     0,     0,   209,     0,     0,
     210,   211,   212,     0,     0,     0,   213,     0,   214,   215,
       0,   216,   217,   218,     0,     0,   219,   220,     0,   221,
     222,   223,   224,   225,   226,     0,     0,   227,   228,   229,
       0,     0,   230,   231,     0,   232,   233,   234,     0,     0,
     235,     0,     0,     0,   236,   237,     0,   238,     0,   239,
       0,   240,   241,   242,   243,     0,   244,     0,   245,     0,
       0,     0,   246,   247,     0,   248,     0,     0,   249,   250,
       0,     0,     0,   251,   252,   253,   254,     0,     0,   255,
     256,   257,     0,     0,   258,     0,     0,     0,     0,   259,
     260,     0,     0,     0,   261,     0,     0,     0,   262,   263,
       0,   264,   265,     0,     0,     0,   266,     0,     0,   267,
     268,     0,     0,   269,     0,     0,   270,   271,     0,     0,
       0,     0,     0,   272,   273,     0,   274,     0,   275,     0,
     276,   277,     0,     0,     0,     0,     0,     0,     0,   278,
       0,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,     0,   296,
     297,   298,     0,   299,   300,   301,   302,     0,   303,   304,
       0,     0,     0,     0,   305,   306,   307,   308,   309,   310,
       0,     0,   311,   312,     0,   313,     0,   314,     0,   315,
     316,   317,   318,   319,   320,   321,   322,   323,     0,     0,
     324,   325,     0,     0,   326,   327,   328,   329,     0,     0,
       0,   330,   331,     0,     0,     0,   332,     0,   333,   334,
     335,     0,   336,   337,   338,     0,   339,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   340,   341,   342,     0,
     343,   344,     0,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,     0,     0,   355,   356,   357,     0,   358,
       0,   359,   360,   361,   362,   363,     0,   364,   365,   366,
       0,     0,   367,     0,     0,     0,   368,   369,   370,   371,
     372,     0,     0,   373,   374,   375,   376,   377,     0,   378,
     379,     0,   380,   381,   382,     0,     0,   383,     0,   384,
       0,   385,   386,     0,   387,   388,   389,     0,   390,     0,
       0,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,     0,   402,   403,     0,     0,     0,   404,   405,
     406,   407,     0,     0,     0,   408,     0,     0,     0,   409,
       0,   410,   411,   412,   413,     0,   414,   415,   416,   417,
     418,     0,     0,     0,     0,     0,     0,     0,     0,   419,
     420,     0,   421,     0,     0,   422,     0,     0,   423,   424,
     425,     0,     0,   426,   427,     0,   428,   429,   430,   431,
     432,   433,     0,     0,   434,   435,   436,   437,     0,   438,
     439,     0,     0,   440,   441,   442,   443,     0,     0,   444,
     445,     0,   446,   447,   448,   449,     0,     0,     0,     0,
       0,   450,   451,     0,     0,     0,   452,   453,   454,   455,
       0,   456,   457,     0,   458,   459,     0,   460,   461,     0,
       0,   462,     0,     0,   463,     0,   464,     0,   465,   466,
       0,     0,     0,     0,     0,     0,   467,     0,     0,   468,
       0,     0,     0,   469,   470,   471,   472,   473,     0,     0,
       0,     0,     0,     0,   474,   475,     0,   476,   477,   478,
       0,   136,   479,   137,   138,   139,   140,   141,  2833,     0,
       0,     0,     0,   142,     0,     0,   143,     0,   144,   145,
     146,   147,   148,   149,   150,     0,   151,     0,     0,     0,
     152,     0,     0,     0,   153,     0,     0,   154,   155,   156,
       0,   157,     0,   158,   159,     0,     0,   160,     0,     0,
     161,   162,     0,   163,   164,     0,   165,     0,   166,   167,
     168,   169,   170,   171,     0,   172,   173,     0,   174,   175,
     176,   177,   178,   179,   180,   181,     0,   182,   183,     0,
     184,   185,   186,   187,   188,     0,   189,     0,     0,   190,
       0,     0,   191,     0,   192,     0,     0,   193,     0,     0,
       0,   194,   195,   196,     0,     0,   197,     0,     0,     0,
       0,   198,   199,     0,     0,     0,     0,   200,   201,     0,
     202,     0,     0,     0,   203,     0,   204,   205,   206,   207,
     208,     0,     0,     0,   209,     0,     0,   210,   211,   212,
       0,     0,     0,   213,     0,   214,   215,     0,   216,   217,
     218,     0,     0,   219,   220,     0,   221,   222,   223,   224,
     225,   226,     0,     0,   227,   228,   229,     0,     0,   230,
     231,     0,   232,   233,   234,     0,     0,   235,     0,     0,
       0,   236,   237,     0,   238,     0,   239,     0,   240,   241,
     242,   243,     0,   244,     0,   245,     0,     0,     0,   246,
     247,     0,   248,     0,     0,   249,   250,     0,     0,     0,
     251,   252,   253,   254,     0,     0,   255,   256,   257,     0,
       0,   258,     0,     0,     0,     0,   259,   260,     0,     0,
       0,   261,     0,     0,     0,   262,   263,     0,   264,   265,
       0,     0,     0,   266,     0,     0,   267,   268,     0,     0,
     269,     0,     0,   270,   271,     0,     0,     0,     0,     0,
     272,   273,     0,   274,     0,   275,     0,   276,   277,     0,
       0,     0,     0,     0,     0,     0,   278,     0,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,     0,   296,   297,   298,     0,
     299,   300,   301,   302,     0,   303,   304,     0,     0,     0,
       0,   305,   306,   307,   308,   309,   310,     0,     0,   311,
     312,     0,   313,     0,   314,     0,   315,   316,   317,   318,
     319,   320,   321,   322,   323,     0,     0,   324,   325,     0,
       0,   326,   327,   328,   329,     0,     0,     0,   330,   331,
       0,     0,     0,   332,     0,   333,   334,   335,     0,   336,
     337,   338,     0,   339,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   340,   341,   342,     0,   343,   344,     0,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
       0,     0,   355,   356,   357,     0,   358,     0,   359,   360,
     361,   362,   363,     0,   364,   365,   366,     0,     0,   367,
       0,     0,     0,   368,   369,   370,   371,   372,     0,     0,
     373,   374,   375,   376,   377,     0,   378,   379,     0,   380,
     381,   382,     0,     0,   383,     0,   384,     0,   385,   386,
       0,   387,   388,   389,     0,   390,     0,     0,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,     0,
     402,   403,     0,     0,     0,   404,   405,   406,   407,     0,
       0,     0,   408,     0,     0,     0,   409,     0,   410,   411,
     412,   413,     0,   414,   415,   416,   417,   418,     0,     0,
       0,     0,     0,     0,     0,     0,   419,   420,     0,   421,
       0,     0,   422,     0,     0,   423,   424,   425,     0,     0,
     426,   427,     0,   428,   429,   430,   431,   432,   433,     0,
       0,   434,   435,   436,   437,     0,   438,   439,     0,     0,
     440,   441,   442,   443,     0,     0,   444,   445,     0,   446,
     447,   448,   449,     0,     0,     0,     0,     0,   450,   451,
       0,     0,     0,   452,   453,   454,   455,     0,   456,   457,
       0,   458,   459,     0,   460,   461,     0,     0,   462,     0,
       0,   463,     0,   464,     0,   465,   466,     0,     0,     0,
       0,     0,     0,   467,     0,     0,   468,     0,     0,     0,
     469,   470,   471,   472,   473,     0,     0,     0,     0,     0,
       0,   474,   475,     0,   476,   477,   478,     0,   136,   479,
     137,   138,   139,   140,   141,  3168,     0,     0,     0,     0,
     142,     0,     0,   143,     0,   144,   145,   146,   147,   148,
     149,   150,     0,   151,     0,     0,     0,   152,     0,     0,
       0,   153,     0,     0,   154,   155,   156,     0,   157,     0,
     158,   159,     0,     0,   160,     0,     0,   161,   162,     0,
     163,   164,     0,   165,     0,   166,   167,   168,   169,   170,
     171,     0,   172,   173,     0,   174,   175,   176,   177,   178,
     179,   180,   181,     0,   182,   183,     0,   184,   185,   186,
     187,   188,     0,   189,     0,     0,   190,     0,     0,   191,
       0,   192,     0,     0,   193,     0,     0,     0,   194,   195,
     196,     0,     0,   197,     0,     0,     0,     0,   198,   199,
       0,     0,     0,     0,   200,   201,     0,   202,     0,     0,
       0,   203,     0,   204,   205,   206,   207,   208,     0,     0,
       0,   209,     0,     0,   210,   211,   212,     0,     0,     0,
     213,     0,   214,   215,     0,   216,   217,   218,     0,     0,
     219,   220,     0,   221,   222,   223,   224,   225,   226,     0,
       0,   227,   228,   229,     0,     0,   230,   231,     0,   232,
     233,   234,     0,     0,   235,     0,     0,     0,   236,   237,
       0,   238,     0,   239,     0,   240,   241,   242,   243,     0,
     244,     0,   245,     0,     0,     0,   246,   247,     0,   248,
       0,     0,   249,   250,     0,     0,     0,   251,   252,   253,
     254,     0,     0,   255,   256,   257,     0,     0,   258,     0,
       0,     0,     0,   259,   260,     0,     0,     0,   261,     0,
       0,     0,   262,   263,     0,   264,   265,     0,     0,     0,
     266,     0,     0,   267,   268,     0,     0,   269,     0,     0,
     270,   271,     0,     0,     0,     0,     0,   272,   273,     0,
     274,     0,   275,     0,   276,   277,     0,     0,     0,     0,
       0,     0,     0,   278,     0,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,     0,   296,   297,   298,     0,   299,   300,   301,
     302,     0,   303,   304,     0,     0,     0,     0,   305,   306,
     307,   308,   309,   310,     0,     0,   311,   312,     0,   313,
       0,   314,     0,   315,   316,   317,   318,   319,   320,   321,
     322,   323,     0,     0,   324,   325,     0,     0,   326,   327,
     328,   329,     0,     0,     0,   330,   331,     0,     0,     0,
     332,     0,   333,   334,   335,     0,   336,   337,   338,     0,
     339,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     340,   341,   342,     0,   343,   344,     0,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,     0,     0,   355,
     356,   357,     0,   358,     0,   359,   360,   361,   362,   363,
       0,   364,   365,   366,     0,     0,   367,     0,     0,     0,
     368,   369,   370,   371,   372,     0,     0,   373,   374,   375,
     376,   377,     0,   378,   379,     0,   380,   381,   382,     0,
       0,   383,     0,   384,     0,   385,   386,     0,   387,   388,
     389,     0,   390,     0,     0,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,     0,   402,   403,     0,
       0,     0,   404,   405,   406,   407,     0,     0,     0,   408,
       0,     0,     0,   409,     0,   410,   411,   412,   413,     0,
     414,   415,   416,   417,   418,     0,     0,     0,     0,     0,
       0,     0,     0,   419,   420,     0,   421,     0,     0,   422,
       0,     0,   423,   424,   425,     0,     0,   426,   427,     0,
     428,   429,   430,   431,   432,   433,     0,     0,   434,   435,
     436,   437,     0,   438,   439,     0,     0,   440,   441,   442,
     443,     0,     0,   444,   445,     0,   446,   447,   448,   449,
       0,     0,     0,     0,     0,   450,   451,     0,     0,     0,
     452,   453,   454,   455,     0,   456,   457,     0,   458,   459,
       0,   460,   461,     0,     0,   462,     0,     0,   463,     0,
     464,     0,   465,   466,     0,     0,     0,     0,     0,     0,
     467,     0,     0,   468,     0,     0,     0,   469,   470,   471,
     472,   473,     0,     0,     0,     0,     0,     0,   474,   475,
       0,   476,   477,   478,     0,   136,   479,   137,   138,   139,
     140,   141,  3495,     0,     0,     0,     0,   142,     0,     0,
     143,     0,   144,   145,   146,   147,   148,   149,   150,     0,
     151,     0,     0,     0,   152,     0,     0,     0,   153,     0,
       0,   154,   155,   156,     0,   157,     0,   158,   159,     0,
       0,   160,     0,     0,   161,   162,     0,   163,   164,     0,
     165,     0,   166,   167,   168,   169,   170,   171,     0,   172,
     173,     0,   174,   175,   176,   177,   178,   179,   180,   181,
       0,   182,   183,     0,   184,   185,   186,   187,   188,     0,
     189,     0,     0,   190,     0,     0,   191,     0,   192,     0,
       0,   193,     0,     0,     0,   194,   195,   196,     0,     0,
     197,     0,     0,     0,     0,   198,   199,  2473,     0,     0,
       0,   200,   201,     0,   202,     0,     0,     0,   203,     0,
     204,   205,   206,   207,   208,     0,     0,     0,   209,     0,
       0,   210,   211,   212,     0,     0,     0,   213,     0,   214,
     215,     0,   216,   217,   218,     0,     0,   219,   220,     0,
     221,   222,   223,   224,   225,   226,     0,     0,   227,   228,
     229,     0,     0,   230,   231,     0,   232,   233,   234,  2474,
       0,   235,     0,     0,     0,   236,   237,     0,   238,     0,
     239,     0,   240,   241,   242,   243,     0,   244,     0,   245,
       0,     0,     0,   246,   247,     0,   248,  2475,     0,   249,
     250,     0,     0,     0,   251,   252,   253,   254,     0,     0,
     255,   256,   257,     0,     0,   258,     0,     0,     0,     0,
     259,   260,     0,     0,     0,   261,     0,     0,     0,   262,
     263,     0,   264,   265,     0,     0,     0,   266,     0,     0,
     267,   268,     0,     0,   269,     0,     0,   270,   271,     0,
       0,     0,     0,     0,   272,   273,     0,   274,     0,   275,
       0,   276,   277,     0,     0,  2476,     0,     0,     0,     0,
     278,     0,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,     0,
     296,   297,   298,     0,   299,   300,   301,   302,     0,   303,
     304,     0,     0,     0,     0,   305,   306,   307,   308,   309,
     310,     0,     0,   311,   312,     0,   313,     0,   314,     0,
     315,   316,   317,   318,   319,   320,   321,   322,   323,     0,
       0,   324,   325,     0,     0,   326,   327,   328,   329,  1020,
    1021,     0,   330,   331,     0,     0,  2477,   332,     0,   333,
     334,   335,     0,   336,   337,   338,     0,   339,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   340,   341,   342,
       0,   343,   344,     0,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,     0,     0,   355,   356,   357,     0,
     358,     0,   359,   360,   361,   362,   363,     0,   364,   365,
     366,     0,     0,   367,     0,     0,     0,   368,   369,   370,
     371,   372,     0,     0,   373,   374,   375,   376,   377,     0,
     378,   379,     0,   380,   381,   382,     0,     0,   383,     0,
     384,     0,   385,   386,     0,   387,   388,   389,     0,   390,
       0,     0,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,     0,   402,   403,     0,     0,     0,   404,
     405,   406,   407,     0,     0,     0,   408,     0,     0,     0,
     409,     0,   410,   411,   412,   413,     0,   414,   415,   416,
     417,   418,     0,     0,  4405,   554,  4406,     0,     0,     0,
     419,   420,     0,   421,     0,     0,   422,     0,     0,   423,
     424,   425,     0,     0,   426,   427,     0,   428,   429,   430,
     431,   432,   433,     0,     0,   434,   435,   436,   437,     0,
     438,   439,     0,     0,   440,   441,   442,   443,     0,     0,
     444,   445,     0,   446,   447,   448,   449,     0,     0,     0,
       0,     0,   450,   451,     0,     0,     0,   452,   453,   454,
     455,  2478,   456,   457,     0,   458,   459,     0,   460,   461,
       0,     0,   462,     0,     0,   463,     0,   464,     0,   465,
     466,     0,     0,     0,     0,     0,     0,   467,     0,     0,
     468,     0,     0,     0,   469,   470,   471,   472,   473,     0,
       0,     0,     0,     0,     0,   474,   475,     0,   476,   477,
     478,     0,   136,   479,   137,   138,   139,   140,   141,     0,
       0,     0,     0,     0,   142,     0,     0,   143,     0,   144,
     145,   146,   147,   148,   149,   150,     0,   151,     0,     0,
    1348,   152,     0,     0,     0,   153,     0,     0,   154,   155,
     156,     0,   157,     0,   158,   159,     0,     0,   160,     0,
       0,   161,   162,     0,   163,   164,     0,   165,     0,   166,
     167,   168,   169,   170,   171,     0,   172,   173,     0,   174,
     175,   176,   177,   178,   179,   180,   181,     0,   182,   183,
       0,   184,   185,   186,   187,   188,     0,   189,     0,     0,
     190,     0,     0,   191,     0,   192,     0,     0,   193,     0,
       0,     0,   194,   195,   196,     0,     0,   197,     0,     0,
       0,     0,   198,   199,     0,     0,     0,  1349,   200,   201,
       0,   202,     0,     0,     0,   203,     0,   204,   205,   206,
     207,   208,     0,     0,     0,   209,     0,     0,   210,   211,
     212,     0,     0,     0,   213,     0,   214,   215,     0,   216,
     217,   218,  1350,     0,   219,   220,     0,   221,   222,   223,
     224,   225,   226,     0,     0,   227,   228,   229,     0,     0,
     230,   231,     0,   232,   233,   234,     0,     0,   235,     0,
       0,     0,   236,   237,     0,   238,     0,   239,     0,   240,
     241,   242,   243,     0,   244,     0,   245,     0,     0,     0,
     246,   247,     0,   248,     0,     0,   249,   250,     0,     0,
       0,   251,   252,   253,   254,     0,     0,   255,   256,   257,
       0,     0,   258,     0,     0,     0,     0,   259,   260,     0,
       0,     0,   261,     0,     0,     0,   262,   263,     0,   264,
     265,     0,     0,     0,   266,     0,     0,   267,   268,     0,
       0,   269,     0,     0,   270,   271,   605,     0,     0,     0,
       0,   272,   273,     0,   274,     0,   275,     0,   276,   277,
       0,     0,     0,     0,     0,     0,     0,   278,     0,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,     0,   296,   297,   298,
       0,   299,   300,   301,   302,     0,   303,   304,     0,     0,
       0,     0,   305,   306,   307,   308,   309,   310,     0,     0,
     311,   312,     0,   313,     0,   314,     0,   315,   316,   317,
     318,   319,   320,   321,   322,   323,     0,     0,   324,   325,
       0,     0,   326,   327,   328,   329,     0,     0,     0,   330,
     331,     0,     0,     0,   332,     0,   333,   334,   335,     0,
     336,   337,   338,     0,   339,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   340,   341,   342,     0,   343,   344,
       0,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,     0,     0,   355,   356,   357,     0,   358,     0,   359,
     360,   361,   362,   363,     0,   364,   365,   366,     0,     0,
     367,     0,     0,     0,   368,   369,   370,   371,   372,     0,
       0,   373,   374,   375,   376,   377,     0,   378,   379,     0,
     380,   381,   382,     0,     0,   383,     0,   384,     0,   385,
     386,     0,   387,   388,   389,     0,   390,     0,     0,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
       0,   402,   403,     0,     0,     0,   404,   405,   406,   407,
       0,     0,  1351,   408,     0,     0,     0,   409,     0,   410,
     411,   412,   413,     0,   414,   415,   416,   417,   418,     0,
       0,     0,     0,     0,     0,     0,     0,   419,   420,     0,
     421,     0,     0,   422,     0,     0,   423,   424,   425,     0,
       0,   426,   427,     0,   428,   429,   430,   431,   432,   433,
       0,     0,   434,   435,   436,   437,     0,   438,   439,     0,
       0,   440,   441,   442,   443,     0,   133,   444,   445,     0,
     446,   447,   448,   449,     0,     0,     0,     0,     0,   450,
     451,     0,     0,     0,   452,   453,   454,   455,     0,   456,
     457,     0,   458,   459,     0,   460,   461,     0,     0,   462,
       0,     0,   463,     0,   464,     0,   465,   466,     0,     0,
       0,     0,     0,     0,   467,     0,     0,   468,     0,     0,
       0,   469,   470,   471,   472,   473,     0,     0,     0,     0,
       0,     0,   474,   475,     0,   476,   477,   478,     0,   136,
     479,   137,   138,   139,   140,   141,     0,     0,     0,     0,
       0,   142,     0,     0,   143,     0,   144,   145,   146,   147,
     148,   149,   150,     0,   151,     0,     0,  1361,   152,     0,
       0,     0,   153,     0,     0,   154,   155,   156,     0,   157,
       0,   158,   159,     0,     0,   160,     0,     0,   161,   162,
       0,   163,   164,     0,   165,     0,   166,   167,   168,   169,
     170,   171,     0,   172,   173,     0,   174,   175,   176,   177,
     178,   179,   180,   181,     0,   182,   183,     0,   184,   185,
     186,   187,   188,     0,   189,     0,     0,   190,     0,     0,
     191,     0,   192,     0,     0,   193,     0,     0,     0,   194,
     195,   196,     0,     0,   197,     0,     0,     0,     0,   198,
     199,     0,     0,     0,  1362,   200,   201,     0,   202,     0,
       0,     0,   203,     0,   204,   205,   206,   207,   208,     0,
       0,     0,   209,     0,     0,   210,   211,   212,     0,     0,
       0,   213,     0,   214,   215,     0,   216,   217,   218,     0,
       0,   219,   220,     0,   221,   222,   223,   224,   225,   226,
       0,     0,   227,   228,   229,     0,     0,   230,   231,     0,
     232,   233,   234,     0,     0,   235,     0,     0,     0,   236,
     237,     0,   238,     0,   239,     0,   240,   241,   242,   243,
       0,   244,     0,   245,     0,     0,     0,   246,   247,     0,
     248,     0,     0,   249,   250,     0,     0,     0,   251,   252,
     253,   254,     0,     0,   255,   256,   257,     0,     0,   258,
       0,     0,     0,     0,   259,   260,     0,     0,     0,   261,
       0,     0,     0,   262,   263,     0,   264,   265,     0,     0,
       0,   266,     0,     0,   267,   268,     0,     0,   269,     0,
       0,   270,   271,   605,     0,     0,     0,     0,   272,   273,
       0,   274,     0,   275,     0,   276,   277,     0,     0,     0,
       0,     0,     0,     0,   278,     0,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,     0,   296,   297,   298,     0,   299,   300,
     301,   302,     0,   303,   304,     0,     0,     0,     0,   305,
     306,   307,   308,   309,   310,     0,     0,   311,   312,     0,
     313,     0,   314,     0,   315,   316,   317,   318,   319,   320,
     321,   322,   323,     0,     0,   324,   325,     0,     0,   326,
     327,   328,   329,     0,     0,     0,   330,   331,     0,     0,
       0,   332,     0,   333,   334,   335,     0,   336,   337,   338,
       0,   339,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   340,   341,   342,     0,   343,   344,     0,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,     0,     0,
     355,   356,   357,     0,   358,     0,   359,   360,   361,   362,
     363,     0,   364,   365,   366,     0,     0,   367,     0,     0,
       0,   368,   369,   370,   371,   372,     0,     0,   373,   374,
     375,   376,   377,     0,   378,   379,     0,   380,   381,   382,
       0,     0,   383,     0,   384,     0,   385,   386,     0,   387,
     388,   389,     0,   390,     0,     0,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,     0,   402,   403,
       0,     0,     0,   404,   405,   406,   407,     0,     0,     0,
     408,     0,     0,     0,   409,     0,   410,   411,   412,   413,
       0,   414,   415,   416,   417,   418,     0,     0,     0,     0,
       0,     0,     0,     0,   419,   420,     0,   421,     0,     0,
     422,     0,     0,   423,   424,   425,     0,     0,   426,   427,
       0,   428,   429,   430,   431,   432,   433,     0,     0,   434,
     435,   436,   437,     0,   438,   439,     0,     0,   440,   441,
     442,   443,     0,   133,   444,   445,     0,   446,   447,   448,
     449,     0,     0,     0,     0,     0,   450,   451,     0,     0,
       0,   452,   453,   454,   455,     0,   456,   457,     0,   458,
     459,     0,   460,   461,     0,     0,   462,     0,     0,   463,
       0,   464,     0,   465,   466,     0,     0,     0,     0,     0,
       0,   467,     0,     0,   468,     0,     0,     0,   469,   470,
     471,   472,   473,     0,     0,     0,     0,     0,     0,   474,
     475,     0,   476,   477,   478,     0,   136,   479,   137,   138,
     139,   140,   141,     0,     0,     0,     0,     0,   142,     0,
       0,   143,     0,   144,   145,   146,   147,   148,   149,   150,
       0,   151,     0,     0,     0,   152,     0,     0,     0,   153,
       0,     0,   154,   155,   156,     0,   157,     0,   158,   159,
       0,     0,   160,     0,     0,   161,   162,     0,   163,   164,
       0,   165,     0,   166,   167,   168,   169,   170,   171,     0,
     172,   173,     0,   174,   175,   176,   177,   178,   179,   180,
     181,     0,   182,   183,     0,   184,   185,   186,   187,   188,
       0,   189,     0,     0,   190,     0,     0,   191,     0,   192,
       0,     0,   193,     0,     0,     0,   194,   195,   196,     0,
       0,   197,     0,     0,     0,     0,   198,   199,     0,     0,
       0,     0,   200,   201,     0,   202,     0,     0,     0,   203,
       0,   204,   205,   206,   207,   208,     0,     0,     0,   209,
       0,     0,   210,   211,   212,     0,     0,     0,   213,     0,
     214,   215,     0,   216,   217,   218,     0,     0,   219,   220,
       0,   221,   222,   223,   224,   225,   226,     0,     0,   227,
     228,   229,     0,     0,   230,   231,     0,   232,   233,   234,
       0,     0,   235,     0,     0,     0,   236,   237,     0,   238,
       0,   239,     0,   240,   241,   242,   243,     0,   244,     0,
     245,     0,     0,     0,   246,   247,     0,   248,     0,     0,
     249,   250,     0,     0,     0,   251,   252,   253,   254,     0,
       0,   255,   256,   257,     0,     0,   258,     0,     0,     0,
       0,   259,   260,     0,     0,     0,   261,     0,     0,     0,
     262,   263,     0,   264,   265,     0,     0,     0,   266,     0,
       0,   267,   268,     0,     0,   269,     0,     0,   270,   271,
       0,     0,     0,     0,     0,   272,   273,     0,   274,     0,
     275,     0,   276,   277,     0,     0,  1892,     0,     0,     0,
       0,   278,     0,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
       0,   296,   297,   298,     0,   299,   300,   301,   302,     0,
     303,   304,     0,     0,     0,     0,   305,   306,   307,   308,
     309,   310,     0,     0,   311,   312,     0,   313,     0,   314,
       0,   315,   316,   317,   318,   319,   320,   321,   322,   323,
       0,     0,   324,   325,     0,     0,   326,   327,   328,   329,
       0,     0,     0,   330,   331,     0,     0,  1893,   332,     0,
     333,   334,   335,     0,   336,   337,   338,     0,   339,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   340,   341,
     342,   712,   343,   344,     0,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,     0,   355,   356,   357,
       0,   358,     0,   359,   360,   361,   362,   363,     0,   364,
     365,   366,     0,     0,   367,     0,     0,     0,   368,   369,
     370,   371,   372,     0,     0,   373,   374,   375,   376,   377,
       0,   378,   379,     0,   380,   381,   382,     0,     0,   383,
       0,   384,     0,   385,   386,     0,   387,   388,   389,     0,
     390,     0,     0,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,     0,   402,   403,     0,     0,     0,
     404,   405,   406,   407,     0,     0,     0,   408,     0,     0,
       0,   409,     0,   410,   411,   412,   413,     0,   414,   415,
     416,   417,   418,     0,     0,     0,     0,     0,     0,     0,
       0,   419,   420,     0,   421,     0,     0,   422,     0,     0,
     423,   424,   425,     0,     0,   426,   427,     0,   428,   429,
     430,   431,   432,   433,     0,     0,   434,   435,   436,   437,
       0,   438,   439,     0,     0,   440,   441,   442,   443,     0,
       0,   444,   445,     0,   446,   447,   448,   449,     0,     0,
       0,     0,     0,   450,   451,     0,     0,     0,   452,   453,
     454,   455,  1894,   456,   457,     0,   458,   459,     0,   460,
     461,     0,     0,   462,     0,     0,   463,     0,   464,     0,
     465,   466,     0,     0,     0,     0,     0,     0,   467,     0,
       0,   468,     0,     0,     0,   469,   470,   471,   472,   473,
       0,     0,     0,     0,     0,     0,   474,   475,     0,   476,
     477,   478,     0,   136,   479,   137,   138,   139,   140,   141,
       0,     0,     0,     0,     0,   142,     0,     0,   143,     0,
     144,   145,   146,   147,   148,   149,   150,     0,   151,     0,
       0,  1348,   152,     0,     0,     0,   153,     0,     0,   154,
     155,   156,     0,   157,     0,   158,   159,     0,     0,   160,
       0,     0,   161,   162,     0,   163,   164,     0,   165,     0,
     166,   167,   168,   169,   170,   171,     0,   172,   173,     0,
     174,   175,   176,   177,   178,   179,   180,   181,     0,   182,
     183,     0,   184,   185,   186,   187,   188,     0,   189,     0,
       0,   190,     0,     0,   191,     0,   192,     0,     0,   193,
       0,     0,     0,   194,   195,   196,     0,     0,   197,     0,
       0,     0,     0,   198,   199,     0,     0,     0,  1349,   200,
     201,     0,   202,     0,     0,     0,   203,     0,   204,   205,
     206,   207,   208,     0,     0,     0,   209,     0,     0,   210,
     211,   212,     0,     0,     0,   213,     0,   214,   215,     0,
     216,   217,   218,     0,     0,   219,   220,     0,   221,   222,
     223,   224,   225,   226,     0,     0,   227,   228,   229,     0,
       0,   230,   231,     0,   232,   233,   234,     0,     0,   235,
       0,     0,     0,   236,   237,     0,   238,     0,   239,     0,
     240,   241,   242,   243,     0,   244,     0,   245,     0,     0,
       0,   246,   247,     0,   248,     0,     0,   249,   250,     0,
       0,     0,   251,   252,   253,   254,     0,     0,   255,   256,
     257,     0,     0,   258,     0,     0,     0,     0,   259,   260,
       0,     0,     0,   261,     0,     0,     0,   262,   263,     0,
     264,   265,     0,     0,     0,   266,     0,     0,   267,   268,
       0,     0,   269,     0,     0,   270,   271,   605,     0,     0,
       0,     0,   272,   273,     0,   274,     0,   275,     0,   276,
     277,     0,     0,     0,     0,     0,     0,     0,   278,     0,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,     0,   296,   297,
     298,     0,   299,   300,   301,   302,     0,   303,   304,     0,
       0,     0,     0,   305,   306,   307,   308,   309,   310,     0,
       0,   311,   312,     0,   313,     0,   314,     0,   315,   316,
     317,   318,   319,   320,   321,   322,   323,     0,     0,   324,
     325,     0,     0,   326,   327,   328,   329,     0,     0,     0,
     330,   331,     0,     0,     0,   332,     0,   333,   334,   335,
       0,   336,   337,   338,     0,   339,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   340,   341,   342,     0,   343,
     344,     0,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,     0,     0,   355,   356,   357,     0,   358,     0,
     359,   360,   361,   362,   363,     0,   364,   365,   366,     0,
       0,   367,     0,     0,     0,   368,   369,   370,   371,   372,
       0,     0,   373,   374,   375,   376,   377,     0,   378,   379,
       0,   380,   381,   382,     0,     0,   383,     0,   384,     0,
     385,   386,     0,   387,   388,   389,     0,   390,     0,     0,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,     0,   402,   403,     0,     0,     0,   404,   405,   406,
     407,     0,     0,     0,   408,     0,     0,     0,   409,     0,
     410,   411,   412,   413,     0,   414,   415,   416,   417,   418,
       0,     0,     0,     0,     0,     0,     0,     0,   419,   420,
       0,   421,     0,     0,   422,     0,     0,   423,   424,   425,
       0,     0,   426,   427,     0,   428,   429,   430,   431,   432,
     433,     0,     0,   434,   435,   436,   437,     0,   438,   439,
       0,     0,   440,   441,   442,   443,     0,   133,   444,   445,
       0,   446,   447,   448,   449,     0,     0,     0,     0,     0,
     450,   451,     0,     0,     0,   452,   453,   454,   455,     0,
     456,   457,     0,   458,   459,     0,   460,   461,     0,     0,
     462,     0,     0,   463,     0,   464,     0,   465,   466,     0,
       0,     0,     0,     0,     0,   467,     0,     0,   468,     0,
       0,     0,   469,   470,   471,   472,   473,     0,     0,     0,
       0,     0,     0,   474,   475,     0,   476,   477,   478,     0,
     136,   479,   137,   138,   139,   140,   141,     0,     0,     0,
       0,     0,   142,     0,     0,   143,     0,   144,   145,   146,
     147,   148,   149,   150,     0,   151,     0,     0,     0,   152,
       0,     0,     0,   153,     0,     0,   154,   155,   156,     0,
     157,     0,   158,   159,     0,     0,   160,     0,     0,   161,
     162,     0,   163,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,     0,   174,   175,   176,
     177,   178,   179,   180,   181,     0,   182,   183,     0,   184,
     185,   186,   187,   188,     0,   189,     0,     0,   190,     0,
       0,   191,     0,   192,   979,     0,   193,     0,     0,     0,
     194,   195,   196,     0,     0,   197,     0,     0,     0,     0,
     198,   199,     0,     0,     0,     0,   200,   201,     0,   202,
       0,     0,     0,   203,     0,   204,   205,   206,   207,   208,
       0,     0,     0,   209,     0,     0,   210,   211,   212,     0,
       0,     0,   213,     0,   214,   215,     0,   216,   217,   218,
       0,     0,   219,   220,     0,   221,   222,   223,   224,   225,
     226,     0,     0,   227,   228,   229,     0,     0,   230,   231,
       0,   232,   233,   234,     0,     0,   235,     0,     0,     0,
     236,   237,     0,   238,     0,   239,     0,   240,   241,   242,
     243,     0,   244,     0,   245,     0,     0,     0,   246,   247,
       0,   248,     0,     0,   249,   250,     0,     0,     0,   251,
     252,   253,   254,     0,     0,   255,   256,   257,     0,     0,
     258,     0,     0,     0,     0,   259,   260,     0,     0,     0,
     261,     0,     0,     0,   262,   263,     0,   264,   265,     0,
       0,     0,   266,     0,     0,   267,   268,     0,     0,   269,
       0,     0,   270,   271,   605,     0,     0,     0,     0,   272,
     273,     0,   274,     0,   275,     0,   276,   277,     0,     0,
       0,     0,     0,     0,     0,   278,     0,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,     0,   296,   297,   298,     0,   299,
     300,   301,   302,     0,   303,   304,     0,     0,     0,     0,
     305,   306,   307,   308,   309,   310,     0,     0,   311,   312,
       0,   313,     0,   314,     0,   315,   316,   317,   318,   319,
     320,   321,   322,   323,     0,     0,   324,   325,     0,     0,
     326,   327,   328,   329,     0,     0,     0,   330,   331,     0,
       0,     0,   332,     0,   333,   334,   335,     0,   336,   337,
     338,     0,   339,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   340,   341,   342,     0,   343,   344,     0,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,     0,
       0,   355,   356,   357,     0,   358,     0,   359,   360,   361,
     362,   363,     0,   364,   365,   366,     0,     0,   367,     0,
       0,     0,   368,   369,   370,   371,   372,     0,     0,   373,
     374,   375,   376,   377,     0,   378,   379,     0,   380,   381,
     382,     0,     0,   383,     0,   384,     0,   385,   386,     0,
     387,   388,   389,     0,   390,     0,     0,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,     0,   402,
     403,     0,     0,     0,   404,   405,   406,   407,     0,     0,
       0,   408,     0,     0,     0,   409,     0,   410,   411,   412,
     413,     0,   414,   415,   416,   417,   418,     0,     0,     0,
       0,     0,     0,     0,     0,   419,   420,     0,   421,     0,
       0,   422,     0,     0,   423,   424,   425,     0,     0,   426,
     427,     0,   428,   429,   430,   431,   432,   433,     0,     0,
     434,   435,   436,   437,     0,   438,   439,     0,     0,   440,
     441,   442,   443,     0,   133,   444,   445,     0,   446,   447,
     448,   449,     0,     0,     0,     0,     0,   450,   451,     0,
       0,     0,   452,   453,   454,   455,     0,   456,   457,     0,
     458,   459,     0,   460,   461,     0,     0,   462,     0,     0,
     463,     0,   464,     0,   465,   466,     0,     0,     0,     0,
       0,     0,   467,     0,     0,   468,     0,     0,     0,   469,
     470,   471,   472,   473,     0,     0,     0,     0,     0,     0,
     474,   475,     0,   476,   477,   478,     0,   136,   479,   137,
     138,   139,   140,   141,  1383,     0,     0,     0,     0,   142,
       0,     0,   143,     0,   144,   145,   146,   147,   148,   149,
     150,     0,   151,     0,     0,     0,   152,     0,     0,     0,
     153,     0,     0,   154,   155,   156,     0,   157,     0,   158,
     159,     0,     0,   160,     0,     0,   161,   162,     0,   163,
     164,     0,   165,     0,   166,   167,   168,   169,   170,   171,
       0,   172,   173,     0,   174,   175,   176,   177,   178,   179,
     180,   181,     0,   182,   183,     0,   184,   185,   186,   187,
     188,     0,   189,     0,     0,   190,     0,     0,   191,     0,
     192,     0,     0,   193,     0,     0,     0,   194,   195,   196,
       0,     0,   197,     0,     0,     0,     0,   198,   199,     0,
       0,     0,     0,   200,   201,     0,   202,     0,     0,     0,
     203,     0,   204,   205,   206,   207,   208,     0,     0,     0,
     209,     0,     0,   210,   211,   212,     0,     0,     0,   213,
       0,   214,   215,     0,   216,   217,   218,     0,     0,   219,
     220,     0,   221,   222,   223,   224,   225,   226,     0,     0,
     227,   228,   229,     0,     0,   230,   231,     0,   232,   233,
     234,     0,     0,   235,     0,     0,     0,   236,   237,     0,
     238,     0,   239,     0,   240,   241,   242,   243,     0,   244,
       0,   245,     0,     0,     0,   246,   247,     0,   248,     0,
       0,   249,   250,     0,     0,     0,   251,   252,   253,   254,
       0,     0,   255,   256,   257,     0,     0,   258,     0,     0,
       0,     0,   259,   260,     0,     0,     0,   261,     0,     0,
       0,   262,   263,     0,   264,   265,     0,     0,     0,   266,
       0,     0,   267,   268,     0,     0,   269,     0,     0,   270,
     271,   605,     0,     0,     0,     0,   272,   273,     0,   274,
       0,   275,     0,   276,   277,     0,     0,     0,     0,     0,
       0,     0,   278,     0,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,     0,   296,   297,   298,     0,   299,   300,   301,   302,
       0,   303,   304,     0,     0,     0,     0,   305,   306,   307,
     308,   309,   310,     0,     0,   311,   312,     0,   313,     0,
     314,     0,   315,   316,   317,   318,   319,   320,   321,   322,
     323,     0,     0,   324,   325,     0,     0,   326,   327,   328,
     329,     0,     0,     0,   330,   331,     0,     0,     0,   332,
       0,   333,   334,   335,     0,   336,   337,   338,     0,   339,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   340,
     341,   342,     0,   343,   344,     0,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,     0,     0,   355,   356,
     357,     0,   358,     0,   359,   360,   361,   362,   363,     0,
     364,   365,   366,     0,     0,   367,     0,     0,     0,   368,
     369,   370,   371,   372,     0,     0,   373,   374,   375,   376,
     377,     0,   378,   379,     0,   380,   381,   382,     0,     0,
     383,     0,   384,     0,   385,   386,     0,   387,   388,   389,
       0,   390,     0,     0,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,     0,   402,   403,     0,     0,
       0,   404,   405,   406,   407,     0,     0,     0,   408,     0,
       0,     0,   409,     0,   410,   411,   412,   413,     0,   414,
     415,   416,   417,   418,     0,     0,     0,     0,     0,     0,
       0,     0,   419,   420,     0,   421,     0,     0,   422,     0,
       0,   423,   424,   425,     0,     0,   426,   427,     0,   428,
     429,   430,   431,   432,   433,     0,     0,   434,   435,   436,
     437,     0,   438,   439,     0,     0,   440,   441,   442,   443,
       0,   133,   444,   445,     0,   446,   447,   448,   449,     0,
       0,     0,     0,     0,   450,   451,     0,     0,     0,   452,
     453,   454,   455,     0,   456,   457,     0,   458,   459,     0,
     460,   461,     0,     0,   462,     0,     0,   463,     0,   464,
       0,   465,   466,     0,     0,     0,     0,     0,     0,   467,
       0,     0,   468,     0,     0,     0,   469,   470,   471,   472,
     473,     0,     0,     0,     0,     0,     0,   474,   475,     0,
     476,   477,   478,     0,   136,   479,   137,   138,   139,   140,
     141,     0,     0,     0,     0,     0,   142,     0,     0,   143,
       0,   144,   145,   146,   147,   148,   149,   150,     0,   151,
       0,     0,     0,   152,   956,     0,     0,   153,     0,     0,
     154,   155,   156,     0,   157,     0,   158,   159,     0,     0,
     160,     0,     0,   161,   162,     0,   163,   164,     0,   165,
       0,   166,   167,   168,   169,   170,   171,     0,   172,   173,
       0,   174,   175,   176,   177,   178,   179,   180,   181,     0,
     182,   183,     0,   184,   185,   186,   187,   188,     0,   189,
       0,     0,   190,     0,     0,   191,     0,   192,     0,     0,
     193,     0,     0,     0,   194,   195,   196,     0,     0,   197,
       0,     0,     0,     0,   198,   199,     0,     0,     0,     0,
     200,   201,     0,   202,     0,     0,     0,   203,     0,   204,
     205,   206,   207,   208,     0,     0,     0,   209,     0,     0,
     210,   211,   212,     0,     0,     0,   213,     0,   214,   215,
       0,   216,   217,   218,     0,     0,   219,   220,     0,   221,
     222,   223,   224,   225,   226,     0,     0,   227,   228,   229,
       0,     0,   230,   231,     0,   232,   233,   234,     0,     0,
     235,     0,     0,     0,   236,   237,     0,   238,     0,   239,
       0,   240,   241,   242,   243,     0,   244,     0,   245,     0,
       0,     0,   246,   247,     0,   248,   957,     0,   249,   250,
       0,     0,     0,   251,   252,   253,   254,     0,     0,   255,
     256,   257,     0,     0,   258,     0,     0,     0,     0,   259,
     260,     0,     0,     0,   261,     0,     0,     0,   262,   263,
       0,   264,   265,     0,     0,     0,   266,     0,     0,   267,
     268,     0,     0,   269,     0,     0,   270,   271,     0,     0,
       0,     0,     0,   272,   273,     0,   274,     0,   275,     0,
     276,   277,     0,     0,     0,     0,     0,     0,     0,   278,
       0,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,     0,   296,
     297,   298,     0,   299,   300,   301,   302,     0,   303,   304,
       0,     0,     0,     0,   305,   306,   307,   308,   309,   310,
       0,     0,   311,   312,     0,   313,     0,   314,     0,   315,
     316,   317,   318,   319,   320,   321,   322,   323,     0,     0,
     324,   325,     0,     0,   326,   327,   328,   329,     0,     0,
       0,   330,   331,     0,     0,     0,   332,     0,   333,   334,
     335,     0,   336,   337,   338,     0,   339,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   340,   341,   342,     0,
     343,   344,     0,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,     0,     0,   355,   356,   357,     0,   358,
       0,   359,   360,   361,   362,   363,     0,   364,   365,   366,
       0,     0,   367,     0,     0,     0,   368,   369,   370,   371,
     372,     0,     0,   373,   374,   375,   376,   377,     0,   378,
     379,     0,   380,   381,   382,     0,     0,   383,     0,   384,
       0,   385,   386,     0,   387,   388,   389,     0,   390,     0,
       0,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,     0,   402,   403,     0,     0,     0,   404,   405,
     406,   407,     0,     0,     0,   408,     0,     0,     0,   409,
       0,   410,   411,   412,   413,     0,   414,   415,   416,   417,
     418,     0,     0,     0,     0,     0,     0,     0,     0,   419,
     420,     0,   421,     0,     0,   422,     0,     0,   423,   424,
     425,     0,     0,   426,   427,     0,   428,   429,   430,   431,
     432,   433,     0,     0,   434,   435,   436,   437,     0,   438,
     439,     0,     0,   440,   441,   442,   443,     0,   958,   444,
     445,     0,   446,   447,   448,   449,     0,     0,     0,     0,
       0,   450,   451,     0,     0,     0,   452,   453,   454,   455,
       0,   456,   457,     0,   458,   459,     0,   460,   461,     0,
       0,   462,     0,     0,   463,     0,   464,     0,   465,   466,
       0,     0,     0,     0,     0,     0,   467,     0,     0,   468,
       0,     0,     0,   469,   470,   471,   472,   473,     0,     0,
       0,     0,     0,     0,   474,   475,     0,   476,   477,   478,
       0,   136,   479,   137,   138,   139,   140,   141,     0,     0,
       0,     0,     0,   142,     0,     0,   143,     0,   144,   145,
     146,   147,   148,   149,   150,     0,   151,     0,     0,     0,
     152,     0,     0,     0,   153,     0,     0,   154,   155,   156,
       0,   157,     0,   158,   159,     0,     0,   160,     0,     0,
     161,   162,     0,   163,   164,     0,   165,     0,   166,   167,
     168,   169,   170,   171,     0,   172,   173,     0,   174,   175,
     176,   177,   178,   179,   180,   181,     0,   182,   183,     0,
     184,   185,   186,   187,   188,     0,   189,     0,     0,   190,
       0,     0,   191,     0,   192,     0,     0,   193,     0,     0,
       0,   194,   195,   196,     0,     0,   197,     0,     0,     0,
       0,   198,   199,     0,     0,     0,  2391,   200,   201,     0,
     202,     0,     0,     0,   203,     0,   204,   205,   206,   207,
     208,     0,     0,     0,   209,     0,     0,   210,   211,   212,
       0,     0,     0,   213,     0,   214,   215,     0,   216,   217,
     218,     0,     0,   219,   220,     0,   221,   222,   223,   224,
     225,   226,     0,     0,   227,   228,   229,     0,     0,   230,
     231,     0,   232,   233,   234,     0,     0,   235,     0,     0,
       0,   236,   237,     0,   238,     0,   239,     0,   240,   241,
     242,   243,     0,   244,     0,   245,     0,     0,     0,   246,
     247,     0,   248,     0,     0,   249,   250,     0,     0,     0,
     251,   252,   253,   254,     0,     0,   255,   256,   257,     0,
       0,   258,     0,     0,     0,     0,   259,   260,     0,     0,
       0,   261,     0,     0,     0,   262,   263,     0,   264,   265,
       0,     0,     0,   266,     0,     0,   267,   268,     0,     0,
     269,     0,     0,   270,   271,   605,     0,     0,     0,     0,
     272,   273,     0,   274,     0,   275,     0,   276,   277,     0,
       0,     0,     0,     0,     0,     0,   278,     0,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,     0,   296,   297,   298,     0,
     299,   300,   301,   302,     0,   303,   304,     0,     0,     0,
       0,   305,   306,   307,   308,   309,   310,     0,     0,   311,
     312,     0,   313,     0,   314,     0,   315,   316,   317,   318,
     319,   320,   321,   322,   323,     0,     0,   324,   325,     0,
       0,   326,   327,   328,   329,     0,     0,     0,   330,   331,
       0,     0,     0,   332,     0,   333,   334,   335,     0,   336,
     337,   338,     0,   339,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   340,   341,   342,     0,   343,   344,     0,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
       0,     0,   355,   356,   357,     0,   358,     0,   359,   360,
     361,   362,   363,     0,   364,   365,   366,     0,     0,   367,
       0,     0,     0,   368,   369,   370,   371,   372,     0,     0,
     373,   374,   375,   376,   377,     0,   378,   379,     0,   380,
     381,   382,     0,     0,   383,     0,   384,     0,   385,   386,
       0,   387,   388,   389,     0,   390,     0,     0,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,     0,
     402,   403,     0,     0,     0,   404,   405,   406,   407,     0,
       0,     0,   408,     0,     0,     0,   409,     0,   410,   411,
     412,   413,     0,   414,   415,   416,   417,   418,     0,     0,
       0,     0,     0,     0,     0,     0,   419,   420,     0,   421,
       0,     0,   422,     0,     0,   423,   424,   425,     0,     0,
     426,   427,     0,   428,   429,   430,   431,   432,   433,     0,
       0,   434,   435,   436,   437,     0,   438,   439,     0,     0,
     440,   441,   442,   443,     0,   133,   444,   445,     0,   446,
     447,   448,   449,     0,     0,     0,     0,     0,   450,   451,
       0,     0,     0,   452,   453,   454,   455,     0,   456,   457,
       0,   458,   459,     0,   460,   461,     0,     0,   462,     0,
       0,   463,     0,   464,     0,   465,   466,     0,     0,     0,
       0,     0,     0,   467,     0,     0,   468,     0,     0,     0,
     469,   470,   471,   472,   473,     0,     0,     0,     0,     0,
       0,   474,   475,     0,   476,   477,   478,     0,   136,   479,
     137,   138,   139,   140,   141,     0,     0,     0,     0,     0,
     142,     0,     0,   143,     0,   144,   145,   146,   147,   148,
     149,   150,     0,   151,     0,     0,  1348,   152,     0,     0,
       0,   153,     0,     0,   154,   155,   156,     0,   157,     0,
     158,   159,     0,     0,   160,     0,     0,   161,   162,     0,
     163,   164,     0,   165,     0,   166,   167,   168,   169,   170,
     171,     0,   172,   173,     0,   174,   175,   176,   177,   178,
     179,   180,   181,     0,   182,   183,     0,   184,   185,   186,
     187,   188,     0,   189,     0,     0,   190,     0,     0,   191,
       0,   192,     0,     0,   193,     0,     0,     0,   194,   195,
     196,     0,     0,   197,     0,     0,     0,     0,   198,   199,
       0,     0,     0,     0,   200,   201,     0,   202,     0,     0,
       0,   203,     0,   204,   205,   206,   207,   208,     0,     0,
       0,   209,     0,     0,   210,   211,   212,     0,     0,     0,
     213,     0,   214,   215,     0,   216,   217,   218,     0,     0,
     219,   220,     0,   221,   222,   223,   224,   225,   226,     0,
       0,   227,   228,   229,     0,     0,   230,   231,     0,   232,
     233,   234,     0,     0,   235,     0,     0,     0,   236,   237,
       0,   238,     0,   239,     0,   240,   241,   242,   243,     0,
     244,     0,   245,     0,     0,     0,   246,   247,     0,   248,
       0,     0,   249,   250,     0,     0,     0,   251,   252,   253,
     254,     0,     0,   255,   256,   257,     0,     0,   258,     0,
       0,     0,     0,   259,   260,     0,     0,     0,   261,     0,
       0,     0,   262,   263,     0,   264,   265,     0,     0,     0,
     266,     0,     0,   267,   268,     0,     0,   269,     0,     0,
     270,   271,   605,     0,     0,     0,     0,   272,   273,     0,
     274,     0,   275,     0,   276,   277,     0,     0,     0,     0,
       0,     0,     0,   278,     0,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,     0,   296,   297,   298,     0,   299,   300,   301,
     302,     0,   303,   304,     0,     0,     0,     0,   305,   306,
     307,   308,   309,   310,     0,     0,   311,   312,     0,   313,
       0,   314,     0,   315,   316,   317,   318,   319,   320,   321,
     322,   323,     0,     0,   324,   325,     0,     0,   326,   327,
     328,   329,     0,     0,     0,   330,   331,     0,     0,     0,
     332,     0,   333,   334,   335,     0,   336,   337,   338,     0,
     339,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     340,   341,   342,     0,   343,   344,     0,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,     0,     0,   355,
     356,   357,     0,   358,     0,   359,   360,   361,   362,   363,
       0,   364,   365,   366,     0,     0,   367,     0,     0,     0,
     368,   369,   370,   371,   372,     0,     0,   373,   374,   375,
     376,   377,     0,   378,   379,     0,   380,   381,   382,     0,
       0,   383,     0,   384,     0,   385,   386,     0,   387,   388,
     389,     0,   390,     0,     0,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,     0,   402,   403,     0,
       0,     0,   404,   405,   406,   407,     0,     0,     0,   408,
       0,     0,     0,   409,     0,   410,   411,   412,   413,     0,
     414,   415,   416,   417,   418,     0,     0,     0,     0,     0,
       0,     0,     0,   419,   420,     0,   421,     0,     0,   422,
       0,     0,   423,   424,   425,     0,     0,   426,   427,     0,
     428,   429,   430,   431,   432,   433,     0,     0,   434,   435,
     436,   437,     0,   438,   439,     0,     0,   440,   441,   442,
     443,     0,   133,   444,   445,     0,   446,   447,   448,   449,
       0,     0,     0,     0,     0,   450,   451,     0,     0,     0,
     452,   453,   454,   455,     0,   456,   457,     0,   458,   459,
       0,   460,   461,     0,     0,   462,     0,     0,   463,     0,
     464,     0,   465,   466,     0,     0,     0,     0,     0,     0,
     467,     0,     0,   468,     0,     0,     0,   469,   470,   471,
     472,   473,     0,     0,     0,     0,     0,     0,   474,   475,
       0,   476,   477,   478,     0,   136,   479,   137,   138,   139,
     140,   141,     0,     0,     0,     0,     0,   142,     0,     0,
     143,     0,   144,   145,   146,   147,   148,   149,   150,     0,
     151,     0,     0,     0,   152,     0,     0,     0,   153,     0,
       0,   154,   155,   156,     0,   157,     0,   158,   159,     0,
       0,   160,     0,     0,   161,   162,     0,   163,   164,     0,
     165,     0,   166,   167,   168,   169,   170,   171,     0,   172,
     173,     0,   174,   175,   176,   177,   178,   179,   180,   181,
       0,   182,   183,     0,   184,   185,   186,   187,   188,     0,
     189,     0,     0,   190,     0,     0,   191,     0,   192,     0,
       0,   193,     0,     0,     0,   194,   195,   196,     0,     0,
     197,     0,     0,     0,     0,   198,   199,     0,     0,     0,
       0,   200,   201,     0,   202,     0,     0,     0,   203,     0,
     204,   205,   206,   207,   208,     0,     0,     0,   209,     0,
       0,   210,   211,   212,     0,     0,     0,   213,     0,   214,
     215,     0,   216,   217,   218,     0,     0,   219,   220,     0,
     221,   222,   223,   224,   225,   226,     0,     0,   227,   228,
     229,     0,     0,   230,   231,     0,   232,   233,   234,     0,
       0,   235,     0,     0,     0,   236,   237,     0,   238,     0,
     239,     0,   240,   241,   242,   243,     0,   244,     0,   245,
       0,     0,     0,   246,   247,     0,   248,     0,     0,   249,
     250,     0,     0,     0,   251,   252,   253,   254,     0,     0,
     255,   256,   257,     0,     0,   258,     0,     0,     0,     0,
     259,   260,     0,     0,     0,   261,     0,     0,     0,   262,
     263,     0,   264,   265,     0,     0,     0,   266,     0,     0,
     267,   268,     0,     0,   269,     0,     0,   270,   271,   605,
       0,     0,     0,     0,   272,   273,     0,   274,     0,   275,
       0,   276,   277,     0,     0,     0,     0,     0,     0,     0,
     278,     0,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,     0,
     296,   297,   298,     0,   299,   300,   301,   302,     0,   303,
     304,     0,     0,     0,     0,   305,   306,   307,   308,   309,
     310,     0,     0,   311,   312,     0,   313,     0,   314,     0,
     315,   316,   317,   318,   319,   320,   321,   322,   323,     0,
       0,   324,   325,     0,     0,   326,   327,   328,   329,     0,
       0,     0,   330,   331,     0,     0,     0,   332,     0,   333,
     334,   335,     0,   336,   337,   338,     0,   339,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   340,   341,   342,
       0,   343,   344,     0,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,     0,     0,   355,   356,   357,     0,
     358,     0,   359,   360,   361,   362,   363,     0,   364,   365,
     366,     0,     0,   367,     0,     0,     0,   368,   369,   370,
     371,   372,     0,     0,   373,   374,   375,   376,   377,     0,
     378,   379,     0,   380,   381,   382,     0,     0,   383,     0,
     384,     0,   385,   386,     0,   387,   388,   389,     0,   390,
       0,     0,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,     0,   402,   403,     0,     0,     0,   404,
     405,   406,   407,     0,     0,     0,   408,     0,     0,     0,
     409,     0,   410,   411,   412,   413,     0,   414,   415,   416,
     417,   418,     0,     0,     0,     0,     0,     0,     0,     0,
     419,   420,     0,   421,     0,     0,   422,     0,     0,   423,
     424,   425,     0,     0,   426,   427,     0,   428,   429,   430,
     431,   432,   433,     0,     0,   434,   435,   436,   437,     0,
     438,   439,     0,     0,   440,   441,   442,   443,     0,   133,
     444,   445,     0,   446,   447,   448,   449,     0,     0,     0,
       0,     0,   450,   451,     0,     0,     0,   452,   453,   454,
     455,     0,   456,   457,     0,   458,   459,     0,   460,   461,
       0,     0,   462,     0,     0,   463,     0,   464,     0,   465,
     466,     0,     0,     0,     0,     0,     0,   467,     0,     0,
     468,     0,     0,     0,   469,   470,   471,   472,   473,     0,
       0,     0,     0,     0,     0,   474,   475,     0,   476,   477,
     478,     0,   136,   479,   137,   138,   139,   140,   141,     0,
       0,     0,     0,     0,   142,  2829,     0,   143,     0,   144,
     145,   146,   147,   148,   149,   150,     0,   151,     0,     0,
       0,   152,     0,     0,     0,   153,     0,     0,   154,   155,
     156,     0,   157,     0,   158,   159,     0,     0,   160,     0,
       0,   161,   162,     0,   163,   164,     0,   165,     0,   166,
     167,   168,   169,   170,   171,     0,   172,   173,     0,   174,
     175,   176,   177,   178,   179,   180,   181,     0,   182,   183,
       0,   184,   185,   186,   187,   188,     0,   189,     0,     0,
     190,     0,     0,   191,     0,   192,     0,     0,   193,     0,
       0,     0,   194,   195,   196,     0,     0,   197,     0,     0,
       0,     0,   198,   199,     0,     0,     0,     0,   200,   201,
       0,   202,     0,     0,     0,   203,     0,   204,   205,   206,
     207,   208,     0,     0,     0,   209,     0,     0,   210,   211,
     212,     0,     0,     0,   213,     0,   214,   215,     0,   216,
     217,   218,     0,     0,   219,   220,     0,   221,   222,   223,
     224,   225,   226,     0,     0,   227,   228,   229,     0,     0,
     230,   231,     0,   232,   233,   234,     0,     0,   235,     0,
       0,     0,   236,   237,     0,   238,     0,   239,     0,   240,
     241,   242,   243,     0,   244,     0,   245,     0,     0,     0,
     246,   247,     0,   248,     0,     0,   249,   250,     0,     0,
       0,   251,   252,   253,   254,     0,     0,   255,   256,   257,
       0,     0,   258,     0,     0,     0,     0,   259,   260,     0,
       0,     0,   261,     0,     0,     0,   262,   263,     0,   264,
     265,     0,     0,     0,   266,     0,     0,   267,   268,     0,
       0,   269,     0,     0,   270,   271,     0,     0,     0,     0,
       0,   272,   273,     0,   274,     0,   275,     0,   276,   277,
       0,     0,     0,     0,     0,     0,     0,   278,     0,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,     0,   296,   297,   298,
       0,   299,   300,   301,   302,     0,   303,   304,     0,     0,
       0,     0,   305,   306,   307,   308,   309,   310,     0,     0,
     311,   312,     0,   313,     0,   314,     0,   315,   316,   317,
     318,   319,   320,   321,   322,   323,     0,     0,   324,   325,
       0,     0,   326,   327,   328,   329,     0,     0,     0,   330,
     331,     0,     0,     0,   332,     0,   333,   334,   335,     0,
     336,   337,   338,     0,   339,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   340,   341,   342,     0,   343,   344,
       0,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,     0,     0,   355,   356,   357,     0,   358,     0,   359,
     360,   361,   362,   363,     0,   364,   365,   366,     0,     0,
     367,     0,     0,     0,   368,   369,   370,   371,   372,     0,
       0,   373,   374,   375,   376,   377,     0,   378,   379,     0,
     380,   381,   382,     0,     0,   383,     0,   384,     0,   385,
     386,     0,   387,   388,   389,     0,   390,     0,     0,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
       0,   402,   403,     0,     0,     0,   404,   405,   406,   407,
       0,     0,     0,   408,     0,     0,     0,   409,     0,   410,
     411,   412,   413,     0,   414,   415,   416,   417,   418,     0,
       0,     0,     0,     0,     0,     0,     0,   419,   420,     0,
     421,     0,     0,   422,     0,     0,   423,   424,   425,     0,
       0,   426,   427,     0,   428,   429,   430,   431,   432,   433,
       0,     0,   434,   435,   436,   437,     0,   438,   439,     0,
       0,   440,   441,   442,   443,     0,   133,   444,   445,     0,
     446,   447,   448,   449,     0,     0,     0,     0,     0,   450,
     451,     0,     0,     0,   452,   453,   454,   455,     0,   456,
     457,     0,   458,   459,     0,   460,   461,     0,     0,   462,
       0,     0,   463,     0,   464,     0,   465,   466,     0,     0,
       0,     0,     0,     0,   467,     0,     0,   468,     0,     0,
       0,   469,   470,   471,   472,   473,     0,     0,     0,     0,
       0,     0,   474,   475,     0,   476,   477,   478,     0,   136,
     479,   137,   138,   139,   140,   141,     0,     0,     0,     0,
       0,   142,     0,     0,   143,     0,   144,   145,   146,   147,
     148,   149,   150,     0,   151,     0,     0,     0,   152,     0,
       0,     0,   153,     0,     0,   154,   155,   156,     0,   157,
       0,   158,   159,     0,     0,   160,     0,     0,   161,   162,
       0,   163,   164,     0,   165,     0,   166,   167,   168,   169,
     170,   171,     0,   172,   173,     0,   174,   175,   176,   177,
     178,   179,   180,   181,     0,   182,   183,     0,   184,   185,
     186,   187,   188,  4322,   189,     0,     0,   190,     0,     0,
     191,     0,   192,     0,     0,   193,     0,     0,     0,   194,
     195,   196,     0,     0,   197,     0,     0,     0,     0,   198,
     199,     0,     0,     0,     0,   200,   201,     0,   202,     0,
       0,     0,   203,     0,   204,   205,   206,   207,   208,     0,
       0,     0,   209,     0,     0,   210,   211,   212,     0,     0,
       0,   213,     0,   214,   215,     0,   216,   217,   218,     0,
       0,   219,   220,     0,   221,   222,   223,   224,   225,   226,
       0,  4323,   227,   228,   229,     0,     0,   230,   231,     0,
     232,   233,   234,     0,     0,   235,     0,     0,     0,   236,
     237,     0,   238,     0,   239,     0,   240,   241,   242,   243,
       0,   244,     0,   245,     0,     0,     0,   246,   247,     0,
     248,     0,     0,   249,   250,     0,     0,     0,   251,   252,
     253,   254,     0,     0,   255,   256,   257,     0,     0,   258,
       0,     0,     0,     0,   259,   260,     0,     0,     0,   261,
       0,     0,     0,   262,   263,     0,   264,   265,     0,     0,
       0,   266,     0,     0,   267,   268,     0,     0,   269,     0,
       0,   270,   271,     0,     0,     0,     0,     0,   272,   273,
       0,   274,     0,   275,     0,   276,   277,     0,     0,     0,
       0,     0,     0,     0,   278,     0,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,     0,   296,   297,   298,     0,   299,   300,
     301,   302,     0,   303,   304,     0,     0,     0,     0,   305,
     306,   307,   308,   309,   310,     0,     0,   311,   312,     0,
     313,     0,   314,     0,   315,   316,   317,   318,   319,   320,
     321,   322,   323,     0,     0,   324,   325,     0,     0,   326,
     327,   328,   329,     0,     0,     0,   330,   331,     0,     0,
       0,   332,     0,   333,   334,   335,     0,   336,   337,   338,
       0,   339,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   340,   341,   342,     0,   343,   344,     0,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,     0,     0,
     355,   356,   357,     0,   358,     0,   359,   360,   361,   362,
     363,     0,   364,   365,   366,     0,     0,   367,     0,     0,
       0,   368,   369,   370,   371,   372,     0,     0,   373,   374,
     375,   376,   377,     0,   378,   379,     0,   380,   381,   382,
       0,     0,   383,     0,   384,     0,   385,   386,     0,   387,
     388,   389,     0,   390,     0,     0,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,     0,   402,   403,
       0,     0,     0,   404,   405,   406,   407,     0,     0,     0,
     408,     0,     0,     0,   409,     0,   410,   411,   412,   413,
       0,   414,   415,   416,   417,   418,     0,     0,     0,     0,
       0,     0,     0,     0,   419,   420,     0,   421,     0,     0,
     422,     0,     0,   423,   424,   425,     0,     0,   426,   427,
       0,   428,   429,   430,   431,   432,   433,     0,     0,   434,
     435,   436,   437,     0,   438,   439,     0,     0,   440,   441,
     442,   443,     0,     0,   444,   445,     0,   446,   447,   448,
     449,     0,     0,     0,     0,     0,   450,   451,     0,     0,
       0,   452,   453,   454,   455,     0,   456,   457,     0,   458,
     459,     0,   460,   461,     0,     0,   462,     0,     0,   463,
       0,   464,     0,   465,   466,     0,     0,     0,     0,     0,
       0,   467,     0,     0,   468,     0,     0,     0,   469,   470,
     471,   472,   473,     0,     0,     0,     0,     0,     0,   474,
     475,     0,   476,   477,   478,     0,   136,   479,   137,   138,
     139,   140,   141,     0,     0,     0,     0,     0,   142,     0,
       0,   143,     0,   144,   145,   146,   147,   148,   149,   150,
       0,   151,     0,     0,     0,   152,     0,     0,     0,   153,
       0,     0,   154,   155,   156,     0,   157,     0,   158,   159,
       0,     0,   160,     0,     0,   161,   162,     0,   163,   164,
       0,   165,     0,   166,   167,   168,   169,   170,   171,     0,
     172,   173,     0,   174,   175,   176,   177,   178,   179,   180,
     181,     0,   182,   183,     0,   184,   185,   186,   187,   188,
       0,   189,     0,     0,   190,     0,     0,   191,     0,   192,
       0,     0,   193,     0,     0,     0,   194,   195,   196,     0,
       0,   197,     0,     0,     0,     0,   198,   199,     0,     0,
       0,     0,   200,   201,     0,   202,     0,     0,     0,   203,
       0,   204,   205,   206,   207,   208,     0,     0,     0,   209,
       0,     0,   210,   211,   212,     0,     0,     0,   213,     0,
     214,   215,     0,   216,   217,   218,     0,     0,   219,   220,
       0,   221,   222,   223,   224,   225,   226,     0,     0,   227,
     228,   229,     0,     0,   230,   231,     0,   232,   233,   234,
       0,     0,   235,     0,     0,     0,   236,   237,     0,   238,
       0,   239,     0,   240,   241,   242,   243,     0,   244,     0,
     245,     0,     0,     0,   246,   247,     0,   248,     0,     0,
     249,   250,     0,     0,     0,   251,   252,   253,   254,     0,
       0,   255,   256,   257,     0,     0,   258,     0,     0,     0,
       0,   259,   260,     0,     0,     0,   261,     0,     0,     0,
     262,   263,     0,   264,   265,     0,     0,     0,   266,     0,
       0,   267,   268,     0,     0,   269,     0,     0,   270,   271,
       0,     0,     0,     0,     0,   272,   273,     0,   274,     0,
     275,     0,   276,   277,     0,     0,     0,     0,     0,     0,
       0,   278,     0,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
       0,   296,   297,   298,     0,   299,   300,   301,   302,     0,
     303,   304,     0,     0,     0,     0,   305,   306,   307,   308,
     309,   310,     0,     0,   311,   312,     0,   313,     0,   314,
       0,   315,   316,   317,   318,   319,   320,   321,   322,   323,
       0,     0,   324,   325,     0,     0,   326,   327,   328,   329,
       0,     0,     0,   330,   331,     0,     0,     0,   332,     0,
     333,   334,   335,     0,   336,   337,   338,     0,   339,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   340,   341,
     342,     0,   343,   344,     0,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,     0,     0,   355,   356,   357,
       0,   358,     0,   359,   360,   361,   362,   363,     0,   364,
     365,   366,     0,     0,   367,     0,     0,     0,   368,   369,
     370,   371,   372,     0,     0,   373,   374,   375,   376,   377,
       0,   378,   379,     0,   380,   381,   382,     0,     0,   383,
       0,   384,     0,   385,   386,     0,   387,   388,   389,     0,
     390,     0,     0,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,     0,   402,   403,     0,     0,     0,
     404,   405,   406,   407,     0,     0,     0,   408,     0,     0,
       0,   409,     0,   410,   411,   412,   413,     0,   414,   415,
     416,   417,   418,     0,     0,     0,   554,     0,     0,     0,
       0,   419,   420,     0,   421,     0,     0,   422,     0,     0,
     423,   424,   425,     0,     0,   426,   427,     0,   428,   429,
     430,   431,   432,   433,     0,     0,   434,   435,   436,   437,
       0,   438,   439,     0,     0,   440,   441,   442,   443,     0,
       0,   444,   445,     0,   446,   447,   448,   449,     0,     0,
       0,     0,     0,   450,   451,     0,     0,     0,   452,   453,
     454,   455,     0,   456,   457,     0,   458,   459,     0,   460,
     461,     0,     0,   462,     0,     0,   463,     0,   464,     0,
     465,   466,     0,     0,     0,     0,     0,     0,   467,     0,
       0,   468,     0,     0,     0,   469,   470,   471,   472,   473,
       0,     0,     0,     0,     0,     0,   474,   475,     0,   476,
     477,   478,     0,   136,   479,   137,   138,   139,   140,   141,
       0,     0,     0,     0,     0,   142,     0,     0,   143,     0,
     144,   145,   146,   147,   148,   149,   150,     0,   151,     0,
       0,     0,   152,     0,     0,     0,   153,     0,     0,   154,
     155,   156,     0,   157,     0,   158,   159,     0,     0,   160,
       0,     0,   161,   162,     0,   163,   164,     0,   165,     0,
     166,   167,   168,   169,   170,   171,     0,   172,   173,     0,
     174,   175,   176,   177,   178,   179,   180,   181,     0,   182,
     183,     0,   184,   185,   186,   187,   188,     0,   189,     0,
       0,   190,     0,     0,   191,     0,   192,     0,     0,   193,
       0,     0,     0,   194,   195,   196,     0,     0,   197,     0,
       0,     0,     0,   198,   199,     0,     0,     0,     0,   200,
     201,     0,   202,     0,     0,     0,   203,     0,   204,   205,
     206,   207,   208,     0,     0,     0,   209,     0,     0,   210,
     211,   212,     0,     0,     0,   213,     0,   214,   215,     0,
     216,   217,   218,     0,     0,   219,   220,     0,   221,   222,
     223,   224,   225,   226,     0,     0,   227,   228,   229,     0,
       0,   230,   231,     0,   232,   233,   234,     0,     0,   235,
       0,     0,     0,   236,   237,  1056,   238,     0,   239,     0,
     240,   241,   242,   243,     0,   244,     0,   245,     0,     0,
       0,   246,   247,     0,   248,     0,     0,   249,   250,     0,
       0,     0,   251,   252,   253,   254,     0,     0,   255,   256,
     257,     0,     0,   258,     0,     0,     0,     0,   259,   260,
       0,     0,     0,   261,     0,     0,     0,   262,   263,     0,
     264,   265,     0,     0,     0,   266,     0,     0,   267,   268,
       0,     0,   269,     0,     0,   270,   271,     0,     0,     0,
       0,     0,   272,   273,     0,   274,     0,   275,     0,   276,
     277,     0,     0,     0,     0,     0,     0,     0,   278,     0,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,     0,   296,   297,
     298,     0,   299,   300,   301,   302,     0,   303,   304,     0,
       0,     0,     0,   305,   306,   307,   308,   309,   310,     0,
       0,   311,   312,     0,   313,     0,   314,     0,   315,   316,
     317,   318,   319,   320,   321,   322,   323,     0,     0,   324,
     325,     0,     0,   326,   327,   328,   329,     0,     0,     0,
     330,   331,     0,     0,     0,   332,     0,   333,   334,   335,
       0,   336,   337,   338,     0,   339,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   340,   341,   342,     0,   343,
     344,     0,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,     0,     0,   355,   356,   357,     0,   358,     0,
     359,   360,   361,   362,   363,     0,   364,   365,   366,     0,
       0,   367,     0,     0,     0,   368,   369,   370,   371,   372,
       0,     0,   373,   374,   375,   376,   377,     0,   378,   379,
       0,   380,   381,   382,     0,     0,   383,     0,   384,     0,
     385,   386,     0,   387,   388,   389,     0,   390,     0,     0,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,     0,   402,   403,     0,     0,     0,   404,   405,   406,
     407,     0,     0,     0,   408,     0,     0,     0,   409,     0,
     410,   411,   412,   413,     0,   414,   415,   416,   417,   418,
       0,     0,     0,     0,     0,     0,     0,     0,   419,   420,
       0,   421,     0,     0,   422,     0,     0,   423,   424,   425,
       0,     0,   426,   427,     0,   428,   429,   430,   431,   432,
     433,     0,     0,   434,   435,   436,   437,     0,   438,   439,
       0,     0,   440,   441,   442,   443,     0,     0,   444,   445,
       0,   446,   447,   448,   449,     0,     0,     0,     0,     0,
     450,   451,     0,     0,     0,   452,   453,   454,   455,     0,
     456,   457,     0,   458,   459,     0,   460,   461,     0,     0,
     462,     0,     0,   463,     0,   464,     0,   465,   466,     0,
       0,     0,     0,     0,     0,   467,     0,     0,   468,     0,
       0,     0,   469,   470,   471,   472,   473,     0,     0,     0,
       0,     0,     0,   474,   475,     0,   476,   477,   478,     0,
     136,   479,   137,   138,   139,   140,   141,     0,     0,     0,
       0,     0,   142,     0,     0,   143,     0,   144,   145,   146,
     147,   148,   149,   150,     0,   151,     0,     0,     0,   152,
       0,     0,     0,   153,     0,     0,   154,   155,   156,     0,
     157,     0,   158,   159,     0,     0,   160,     0,     0,   161,
     162,     0,   163,   164,     0,   165,     0,   166,   167,   168,
     169,   170,   171,     0,   172,   173,     0,   174,   175,   176,
     177,   178,   179,   180,   181,     0,   182,   183,     0,   184,
     185,   186,   187,   188,     0,   189,     0,     0,   190,     0,
       0,   191,     0,   192,     0,     0,   193,     0,     0,     0,
     194,   195,   196,     0,     0,   197,     0,     0,     0,     0,
     198,   199,     0,     0,     0,   890,   200,   201,     0,   202,
       0,     0,     0,   203,     0,   204,   205,   206,   207,   208,
       0,     0,     0,   209,     0,     0,   210,   211,   212,     0,
       0,     0,   213,     0,   214,   215,     0,   216,   217,   218,
       0,     0,   219,   220,     0,   221,   222,   223,   224,   225,
     226,     0,     0,   227,   228,   229,     0,     0,   230,   231,
       0,   232,   233,   234,     0,     0,   235,     0,     0,     0,
     236,   237,     0,   238,     0,   239,     0,   240,   241,   242,
     243,     0,   244,     0,   245,     0,     0,     0,   246,   247,
       0,   248,     0,     0,   249,   250,     0,     0,     0,   251,
     252,   253,   254,     0,     0,   255,   256,   257,     0,     0,
     258,     0,     0,     0,     0,   259,   260,     0,     0,     0,
     261,     0,     0,     0,   262,   263,     0,   264,   265,     0,
       0,     0,   266,     0,     0,   267,   268,     0,     0,   269,
       0,     0,   270,   271,     0,     0,     0,     0,     0,   272,
     273,     0,   274,     0,   275,     0,   276,   277,     0,     0,
       0,     0,     0,     0,     0,   278,     0,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,     0,   296,   297,   298,     0,   299,
     300,   301,   302,     0,   303,   304,     0,     0,     0,     0,
     305,   306,   307,   308,   309,   310,     0,     0,   311,   312,
       0,   313,     0,   314,     0,   315,   316,   317,   318,   319,
     320,   321,   322,   323,     0,     0,   324,   325,     0,     0,
     326,   327,   328,   329,     0,     0,     0,   330,   331,     0,
       0,     0,   332,     0,   333,   334,   335,     0,   336,   337,
     338,     0,   339,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   340,   341,   342,     0,   343,   344,     0,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,     0,
       0,   355,   356,   357,     0,   358,     0,   359,   360,   361,
     362,   363,     0,   364,   365,   366,     0,     0,   367,     0,
       0,     0,   368,   369,   370,   371,   372,     0,     0,   373,
     374,   375,   376,   377,     0,   378,   379,     0,   380,   381,
     382,     0,     0,   383,     0,   384,     0,   385,   386,     0,
     387,   388,   389,     0,   390,     0,     0,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,     0,   402,
     403,     0,     0,     0,   404,   405,   406,   407,     0,     0,
       0,   408,     0,     0,     0,   409,     0,   410,   411,   412,
     413,     0,   414,   415,   416,   417,   418,     0,     0,     0,
       0,     0,     0,     0,     0,   419,   420,     0,   421,     0,
       0,   422,     0,     0,   423,   424,   425,     0,     0,   426,
     427,     0,   428,   429,   430,   431,   432,   433,     0,     0,
     434,   435,   436,   437,     0,   438,   439,     0,     0,   440,
     441,   442,   443,     0,     0,   444,   445,     0,   446,   447,
     448,   449,     0,     0,     0,     0,     0,  1863,   451,     0,
       0,     0,   452,   453,   454,   455,     0,   456,   457,     0,
     458,   459,     0,   460,   461,     0,     0,   462,     0,     0,
     463,     0,   464,     0,   465,   466,     0,     0,     0,     0,
       0,     0,   467,     0,     0,   468,     0,     0,     0,   469,
     470,   471,   472,   473,     0,     0,     0,     0,     0,     0,
     474,   475,     0,   476,   477,   478,     0,   136,   479,   137,
     138,   139,   140,   141,     0,     0,     0,     0,     0,   142,
       0,     0,   143,     0,   144,   145,   146,   147,   148,   149,
     150,     0,   151,     0,     0,     0,   152,     0,     0,     0,
     153,     0,     0,   154,   155,   156,     0,   157,     0,   158,
     159,     0,     0,   160,     0,     0,   161,   162,     0,   163,
     164,     0,   165,     0,   166,   167,   168,   169,   170,   171,
       0,   172,   173,     0,   174,   175,   176,   177,   178,   179,
     180,   181,     0,   182,   183,     0,   184,   185,   186,   187,
     188,     0,   189,     0,     0,   190,     0,     0,   191,     0,
     192,     0,     0,   193,     0,     0,     0,   194,   195,   196,
       0,     0,   197,     0,     0,     0,     0,   198,   199,     0,
       0,     0,  2055,   200,   201,     0,   202,     0,     0,     0,
     203,     0,   204,   205,   206,   207,   208,     0,     0,     0,
     209,     0,     0,   210,   211,   212,     0,     0,     0,   213,
       0,   214,   215,     0,   216,   217,   218,     0,     0,   219,
     220,     0,   221,   222,   223,   224,   225,   226,     0,     0,
     227,   228,   229,     0,     0,   230,   231,     0,   232,   233,
     234,     0,     0,   235,     0,     0,     0,   236,   237,     0,
     238,     0,   239,     0,   240,   241,   242,   243,     0,   244,
       0,   245,     0,     0,     0,   246,   247,     0,   248,     0,
       0,   249,   250,     0,     0,     0,   251,   252,   253,   254,
       0,     0,   255,   256,   257,     0,     0,   258,     0,     0,
       0,     0,   259,   260,     0,     0,     0,   261,     0,     0,
       0,   262,   263,     0,   264,   265,     0,     0,     0,   266,
       0,     0,   267,   268,     0,     0,   269,     0,     0,   270,
     271,     0,     0,     0,     0,     0,   272,   273,     0,   274,
       0,   275,     0,   276,   277,     0,     0,     0,     0,     0,
       0,     0,   278,     0,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,     0,   296,   297,   298,     0,   299,   300,   301,   302,
       0,   303,   304,     0,     0,     0,     0,   305,   306,   307,
     308,   309,   310,     0,     0,   311,   312,     0,   313,     0,
     314,     0,   315,   316,   317,   318,   319,   320,   321,   322,
     323,     0,     0,   324,   325,     0,     0,   326,   327,   328,
     329,     0,     0,     0,   330,   331,     0,     0,     0,   332,
       0,   333,   334,   335,     0,   336,   337,   338,     0,   339,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   340,
     341,   342,     0,   343,   344,     0,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,     0,     0,   355,   356,
     357,     0,   358,     0,   359,   360,   361,   362,   363,     0,
     364,   365,   366,     0,     0,   367,     0,     0,     0,   368,
     369,   370,   371,   372,     0,     0,   373,   374,   375,   376,
     377,     0,   378,   379,     0,   380,   381,   382,     0,     0,
     383,     0,   384,     0,   385,   386,     0,   387,   388,   389,
       0,   390,     0,     0,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,     0,   402,   403,     0,     0,
       0,   404,   405,   406,   407,     0,     0,     0,   408,     0,
       0,     0,   409,     0,   410,   411,   412,   413,     0,   414,
     415,   416,   417,   418,     0,     0,     0,     0,     0,     0,
       0,     0,   419,   420,     0,   421,     0,     0,   422,     0,
       0,   423,   424,   425,     0,     0,   426,   427,     0,   428,
     429,   430,   431,   432,   433,     0,     0,   434,   435,   436,
     437,     0,   438,   439,     0,     0,   440,   441,   442,   443,
       0,     0,   444,   445,     0,   446,   447,   448,   449,     0,
       0,     0,     0,     0,   450,   451,     0,     0,     0,   452,
     453,   454,   455,     0,   456,   457,     0,   458,   459,     0,
     460,   461,     0,     0,   462,     0,     0,   463,     0,   464,
       0,   465,   466,     0,     0,     0,     0,     0,     0,   467,
       0,     0,   468,     0,     0,     0,   469,   470,   471,   472,
     473,     0,     0,     0,     0,     0,     0,   474,   475,     0,
     476,   477,   478,     0,   136,   479,   137,   138,   139,   140,
     141,     0,     0,     0,     0,     0,   142,     0,     0,   143,
       0,   144,   145,   146,   147,   148,   149,   150,     0,   151,
       0,     0,     0,   152,     0,     0,     0,   153,     0,     0,
     154,   155,   156,     0,   157,     0,   158,   159,     0,     0,
     160,     0,     0,   161,   162,     0,   163,   164,     0,   165,
       0,   166,   167,   168,   169,   170,   171,     0,   172,   173,
       0,   174,   175,   176,   177,   178,   179,   180,   181,     0,
     182,   183,     0,   184,   185,   186,   187,   188,     0,   189,
       0,     0,   190,     0,     0,   191,     0,   192,     0,     0,
     193,     0,     0,     0,   194,   195,   196,     0,     0,   197,
       0,     0,     0,     0,   198,   199,     0,     0,     0,   890,
     200,   201,     0,   202,     0,     0,     0,   203,     0,   204,
     205,   206,   207,   208,     0,     0,     0,   209,     0,     0,
     210,   211,   212,     0,     0,     0,   213,     0,   214,   215,
       0,   216,   217,   218,     0,     0,   219,   220,     0,   221,
     222,   223,   224,   225,   226,     0,     0,   227,   228,   229,
       0,     0,   230,   231,     0,   232,   233,   234,     0,     0,
     235,     0,     0,     0,   236,   237,     0,   238,     0,   239,
       0,   240,   241,   242,   243,     0,   244,     0,   245,     0,
       0,     0,   246,   247,     0,   248,     0,     0,   249,   250,
       0,     0,     0,   251,   252,   253,   254,     0,     0,   255,
     256,   257,     0,     0,   258,     0,     0,     0,     0,   259,
     260,     0,     0,     0,   261,     0,     0,     0,   262,   263,
       0,   264,   265,     0,     0,     0,   266,     0,     0,   267,
     268,     0,     0,   269,     0,     0,   270,   271,     0,     0,
       0,     0,     0,   272,   273,     0,   274,     0,   275,     0,
     276,   277,     0,     0,     0,     0,     0,     0,     0,   278,
       0,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,     0,   296,
     297,   298,     0,   299,   300,   301,   302,     0,   303,   304,
       0,     0,     0,     0,   305,   306,   307,   308,   309,   310,
       0,     0,   311,   312,     0,   313,     0,   314,     0,   315,
     316,   317,   318,   319,   320,   321,   322,   323,     0,     0,
     324,   325,     0,     0,   326,   327,   328,   329,     0,     0,
       0,   330,   331,     0,     0,     0,   332,     0,   333,   334,
     335,     0,   336,   337,   338,     0,   339,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   340,   341,   342,     0,
     343,   344,     0,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,     0,     0,   355,   356,   357,     0,   358,
       0,   359,   360,   361,   362,   363,     0,   364,   365,   366,
       0,     0,   367,     0,     0,     0,   368,   369,   370,   371,
     372,     0,     0,   373,   374,   375,   376,   377,     0,   378,
     379,     0,   380,   381,   382,     0,     0,   383,     0,   384,
       0,   385,   386,     0,   387,   388,   389,     0,   390,     0,
       0,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,     0,   402,   403,     0,     0,     0,   404,   405,
     406,   407,     0,     0,     0,   408,     0,     0,     0,   409,
       0,   410,   411,   412,   413,     0,   414,   415,   416,   417,
     418,     0,     0,     0,     0,     0,     0,     0,     0,   419,
     420,     0,   421,     0,     0,   422,     0,     0,   423,   424,
     425,     0,     0,   426,   427,     0,   428,   429,   430,   431,
     432,   433,     0,     0,   434,   435,   436,   437,     0,   438,
     439,     0,     0,   440,   441,   442,   443,     0,     0,   444,
     445,     0,   446,   447,   448,   449,     0,     0,     0,     0,
       0,   450,   451,     0,     0,     0,   452,   453,   454,   455,
       0,   456,   457,     0,   458,   459,     0,   460,   461,     0,
       0,   462,     0,     0,   463,     0,   464,     0,   465,   466,
       0,     0,     0,     0,     0,     0,   467,     0,     0,   468,
       0,     0,     0,   469,   470,   471,   472,   473,     0,     0,
       0,     0,     0,     0,   474,   475,     0,   476,   477,   478,
       0,   136,   479,   137,   138,   139,   140,   141,  2925,     0,
       0,     0,     0,   142,     0,     0,   143,     0,   144,   145,
     146,   147,   148,   149,   150,     0,   151,     0,     0,     0,
     152,     0,     0,     0,   153,     0,     0,   154,   155,   156,
       0,   157,     0,   158,   159,     0,     0,   160,     0,     0,
     161,   162,     0,   163,   164,     0,   165,     0,   166,   167,
     168,   169,   170,   171,     0,   172,   173,     0,   174,   175,
     176,   177,   178,   179,   180,   181,     0,   182,   183,     0,
     184,   185,   186,   187,   188,     0,   189,     0,     0,   190,
       0,     0,   191,     0,   192,     0,     0,   193,     0,     0,
       0,   194,   195,   196,     0,     0,   197,     0,     0,     0,
       0,   198,   199,     0,     0,     0,     0,   200,   201,     0,
     202,     0,     0,     0,   203,     0,   204,   205,   206,   207,
     208,     0,     0,     0,   209,     0,     0,   210,   211,   212,
       0,     0,     0,   213,     0,   214,   215,     0,   216,   217,
     218,     0,     0,   219,   220,     0,   221,   222,   223,   224,
     225,   226,     0,     0,   227,   228,   229,     0,     0,   230,
     231,     0,   232,   233,   234,     0,     0,   235,     0,     0,
       0,   236,   237,     0,   238,     0,   239,     0,   240,   241,
     242,   243,     0,   244,     0,   245,     0,     0,     0,   246,
     247,     0,   248,     0,     0,   249,   250,     0,     0,     0,
     251,   252,   253,   254,     0,     0,   255,   256,   257,     0,
       0,   258,     0,     0,     0,     0,   259,   260,     0,     0,
       0,   261,     0,     0,     0,   262,   263,     0,   264,   265,
       0,     0,     0,   266,     0,     0,   267,   268,     0,     0,
     269,     0,     0,   270,   271,     0,     0,     0,     0,     0,
     272,   273,     0,   274,     0,   275,     0,   276,   277,     0,
       0,     0,     0,     0,     0,     0,   278,     0,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,     0,   296,   297,   298,     0,
     299,   300,   301,   302,     0,   303,   304,     0,     0,     0,
       0,   305,   306,   307,   308,   309,   310,     0,     0,   311,
     312,     0,   313,     0,   314,     0,   315,   316,   317,   318,
     319,   320,   321,   322,   323,     0,     0,   324,   325,     0,
       0,   326,   327,   328,   329,     0,     0,     0,   330,   331,
       0,     0,     0,   332,     0,   333,   334,   335,     0,   336,
     337,   338,     0,   339,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   340,   341,   342,     0,   343,   344,     0,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
       0,     0,   355,   356,   357,     0,   358,     0,   359,   360,
     361,   362,   363,     0,   364,   365,   366,     0,     0,   367,
       0,     0,     0,   368,   369,   370,   371,   372,     0,     0,
     373,   374,   375,   376,   377,     0,   378,   379,     0,   380,
     381,   382,     0,     0,   383,     0,   384,     0,   385,   386,
       0,   387,   388,   389,     0,   390,     0,     0,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,     0,
     402,   403,     0,     0,     0,   404,   405,   406,   407,     0,
       0,     0,   408,     0,     0,     0,   409,     0,   410,   411,
     412,   413,     0,   414,   415,   416,   417,   418,     0,     0,
       0,     0,     0,     0,     0,     0,   419,   420,     0,   421,
       0,     0,   422,     0,     0,   423,   424,   425,     0,     0,
     426,   427,     0,   428,   429,   430,   431,   432,   433,     0,
       0,   434,   435,   436,   437,     0,   438,   439,     0,     0,
     440,   441,   442,   443,     0,     0,   444,   445,     0,   446,
     447,   448,   449,     0,     0,     0,     0,     0,   450,   451,
       0,     0,     0,   452,   453,   454,   455,     0,   456,   457,
       0,   458,   459,     0,   460,   461,     0,     0,   462,     0,
       0,   463,     0,   464,     0,   465,   466,     0,     0,     0,
       0,     0,     0,   467,     0,     0,   468,     0,     0,     0,
     469,   470,   471,   472,   473,     0,     0,     0,     0,     0,
       0,   474,   475,     0,   476,   477,   478,     0,   136,   479,
     137,   138,   139,   140,   141,     0,     0,     0,     0,     0,
     142,     0,     0,   143,     0,   144,   145,   146,   147,   148,
     149,   150,     0,   151,     0,     0,     0,   152,     0,     0,
       0,   153,     0,     0,   154,   155,   156,     0,   157,     0,
     158,   159,     0,     0,   160,     0,     0,   161,   162,     0,
     163,   164,     0,   165,     0,   166,   167,   168,   169,   170,
     171,     0,   172,   173,     0,   174,   175,   176,   177,   178,
     179,   180,   181,     0,   182,   183,     0,   184,   185,   186,
     187,   188,     0,   189,     0,     0,   190,     0,     0,   191,
       0,   192,     0,     0,   193,     0,     0,     0,   194,   195,
     196,     0,     0,   197,     0,     0,     0,     0,   198,   199,
       0,     0,     0,     0,   200,   201,     0,   202,     0,     0,
       0,   203,     0,   204,   205,   206,   207,   208,     0,     0,
       0,   209,     0,     0,   210,   211,   212,     0,     0,     0,
     213,     0,   214,   215,     0,   216,   217,   218,     0,     0,
     219,   220,     0,   221,   222,   223,   224,   225,   226,     0,
       0,   227,   228,   229,     0,     0,   230,   231,     0,   232,
     233,   234,     0,     0,   235,     0,     0,     0,   236,   237,
       0,   238,     0,   239,     0,   240,   241,   242,   243,     0,
     244,     0,   245,     0,     0,     0,   246,   247,     0,   248,
       0,     0,   249,   250,     0,     0,     0,   251,   252,   253,
     254,     0,     0,   255,   256,   257,     0,     0,   258,     0,
       0,     0,     0,   259,   260,     0,     0,     0,   261,     0,
       0,     0,   262,   263,     0,   264,   265,     0,     0,     0,
     266,     0,     0,   267,   268,     0,     0,   269,     0,     0,
     270,   271,     0,     0,     0,     0,     0,   272,   273,     0,
     274,     0,   275,     0,   276,   277,     0,     0,     0,     0,
       0,     0,     0,   278,     0,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,     0,   296,   297,   298,     0,   299,   300,   301,
     302,     0,   303,   304,     0,     0,     0,     0,   305,   306,
     307,   308,   309,   310,     0,     0,   311,   312,     0,   313,
       0,   314,     0,   315,   316,   317,   318,   319,   320,   321,
     322,   323,     0,     0,   324,   325,     0,     0,   326,   327,
     328,   329,     0,     0,     0,   330,   331,     0,     0,     0,
     332,     0,   333,   334,   335,     0,   336,   337,   338,     0,
     339,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     340,   341,   342,     0,   343,   344,     0,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,     0,     0,   355,
     356,   357,  3005,   358,     0,   359,   360,   361,   362,   363,
       0,   364,   365,   366,     0,     0,   367,     0,     0,     0,
     368,   369,   370,   371,   372,     0,     0,   373,   374,   375,
     376,   377,     0,   378,   379,     0,   380,   381,   382,     0,
       0,   383,     0,   384,     0,   385,   386,     0,   387,   388,
     389,     0,   390,     0,     0,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,     0,   402,   403,     0,
       0,     0,   404,   405,   406,   407,     0,     0,     0,   408,
       0,     0,     0,   409,     0,   410,   411,   412,   413,     0,
     414,   415,   416,   417,   418,     0,     0,     0,     0,     0,
       0,     0,     0,   419,   420,     0,   421,     0,     0,   422,
       0,     0,   423,   424,   425,     0,     0,   426,   427,     0,
     428,   429,   430,   431,   432,   433,     0,     0,   434,   435,
     436,   437,     0,   438,   439,     0,     0,   440,   441,   442,
     443,     0,     0,   444,   445,     0,   446,   447,   448,   449,
       0,     0,     0,     0,     0,   450,   451,     0,     0,     0,
     452,   453,   454,   455,     0,   456,   457,     0,   458,   459,
       0,   460,   461,     0,     0,   462,     0,     0,   463,     0,
     464,     0,   465,   466,     0,     0,     0,     0,     0,     0,
     467,     0,     0,   468,     0,     0,     0,   469,   470,   471,
     472,   473,     0,     0,     0,     0,     0,     0,   474,   475,
       0,   476,   477,   478,     0,   136,   479,   137,   138,   139,
     140,   141,     0,     0,     0,     0,     0,   142,     0,     0,
     143,     0,   144,   145,   146,   147,   148,   149,   150,     0,
     151,     0,     0,     0,   152,     0,     0,     0,   153,     0,
       0,   154,   155,   156,     0,   157,     0,   158,   159,     0,
       0,   160,     0,     0,   161,   162,     0,   163,   164,     0,
     165,     0,   166,   167,   168,   169,   170,   171,     0,   172,
     173,     0,   174,   175,   176,   177,   178,   179,   180,   181,
       0,   182,   183,     0,   184,   185,   186,   187,   188,     0,
     189,     0,     0,   190,     0,     0,   191,     0,   192,     0,
       0,   193,     0,     0,     0,   194,   195,   196,     0,     0,
     197,     0,     0,     0,     0,   198,   199,     0,     0,     0,
       0,   200,   201,     0,   202,     0,     0,     0,   203,     0,
     204,   205,   206,   207,   208,     0,     0,     0,   209,     0,
       0,   210,   211,   212,     0,     0,     0,   213,     0,   214,
     215,     0,   216,   217,   218,     0,     0,   219,   220,     0,
     221,   222,   223,   224,   225,   226,     0,     0,   227,   228,
     229,     0,     0,   230,   231,     0,   232,   233,   234,     0,
       0,   235,     0,     0,     0,   236,   237,     0,   238,     0,
     239,     0,   240,   241,   242,   243,     0,   244,     0,   245,
       0,     0,     0,   246,   247,     0,   248,     0,     0,   249,
     250,     0,     0,     0,   251,   252,   253,   254,     0,     0,
     255,   256,   257,     0,     0,   258,     0,     0,     0,     0,
     259,   260,     0,     0,     0,   261,     0,     0,     0,   262,
     263,     0,   264,   265,     0,     0,     0,   266,     0,     0,
     267,   268,     0,     0,   269,     0,     0,   270,   271,     0,
       0,     0,     0,     0,   272,   273,     0,   274,     0,   275,
       0,   276,   277,     0,     0,     0,     0,     0,     0,     0,
     278,     0,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,     0,
     296,   297,   298,     0,   299,   300,   301,   302,     0,   303,
     304,     0,     0,     0,     0,   305,   306,   307,   308,   309,
     310,     0,     0,   311,   312,     0,   313,     0,   314,     0,
     315,   316,   317,   318,   319,   320,   321,   322,   323,     0,
       0,   324,   325,     0,     0,   326,   327,   328,   329,     0,
       0,     0,   330,   331,     0,     0,     0,   332,     0,   333,
     334,   335,     0,   336,   337,   338,     0,   339,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   340,   341,   342,
       0,   343,   344,     0,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,     0,     0,   355,   356,   357,     0,
     358,     0,   359,   360,   361,   362,   363,     0,   364,   365,
     366,     0,     0,   367,     0,     0,     0,   368,   369,   370,
     371,   372,     0,     0,   373,   374,   375,   376,   377,     0,
     378,   379,     0,   380,   381,   382,     0,     0,   383,     0,
     384,     0,   385,   386,     0,   387,   388,   389,     0,   390,
       0,     0,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,     0,   402,   403,     0,     0,     0,   404,
     405,   406,   407,     0,     0,     0,   408,     0,     0,     0,
     409,     0,   410,   411,   412,   413,     0,   414,   415,   416,
     417,   418,     0,     0,     0,     0,     0,     0,     0,     0,
     419,   420,     0,   421,     0,     0,   422,     0,     0,   423,
     424,   425,     0,     0,   426,   427,     0,   428,   429,   430,
     431,   432,   433,     0,     0,   434,   435,   436,   437,     0,
     438,   439,     0,     0,   440,   441,   442,   443,     0,   133,
     444,   445,     0,   446,   447,   448,   449,     0,     0,     0,
       0,     0,   450,   451,     0,     0,     0,   452,   453,   454,
     455,     0,   456,   457,     0,   458,   459,     0,   460,   461,
       0,     0,   462,     0,     0,   463,     0,   464,     0,   465,
     466,     0,     0,     0,     0,     0,     0,   467,     0,     0,
     468,     0,     0,     0,   469,   470,   471,   472,   473,     0,
       0,     0,     0,     0,     0,   474,   475,     0,   476,   477,
     478,     0,   136,   479,   137,   138,   139,   140,   141,     0,
       0,     0,     0,     0,   142,     0,     0,   143,     0,   144,
     145,   146,   147,   148,   149,   150,     0,   151,     0,     0,
       0,   152,     0,     0,     0,   153,     0,     0,   154,   155,
     156,     0,   157,     0,   158,   159,     0,     0,   160,     0,
       0,   161,   162,     0,   163,   164,     0,   165,     0,   166,
     167,   168,   169,   170,   171,     0,   172,   173,     0,   174,
     175,   176,   177,   178,   179,   180,   181,     0,   182,   183,
       0,   184,   185,   186,   187,   188,     0,   189,     0,     0,
     190,     0,     0,   191,     0,   192,     0,     0,   193,     0,
       0,     0,   194,   195,   196,     0,     0,   197,     0,     0,
       0,     0,   198,   199,     0,     0,     0,     0,   200,   201,
       0,   202,     0,     0,     0,   203,     0,   204,   205,   206,
     207,   208,     0,     0,     0,   209,     0,     0,   210,   211,
     212,     0,     0,     0,   213,     0,   214,   215,     0,   216,
     217,   218,     0,     0,   219,   220,     0,   221,   222,   223,
     224,   225,   226,     0,     0,   227,   228,   229,     0,     0,
     230,   231,     0,   232,   233,   234,     0,     0,   235,     0,
       0,     0,   236,   237,     0,   238,     0,   239,     0,   240,
     241,   242,   243,     0,   244,     0,   245,     0,     0,     0,
     246,   247,     0,   248,     0,     0,   249,   250,     0,     0,
       0,   251,   252,   253,   254,     0,     0,   255,   256,   257,
       0,     0,   258,     0,     0,     0,     0,   259,   260,     0,
       0,     0,   261,     0,     0,     0,   262,   263,     0,   264,
     265,     0,     0,     0,   266,     0,     0,   267,   268,     0,
       0,   269,     0,     0,   270,   271,     0,     0,     0,     0,
       0,   272,   273,     0,   274,     0,   275,     0,   276,   277,
       0,     0,     0,     0,     0,     0,     0,   278,     0,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,     0,   296,   297,   298,
       0,   299,   300,   301,   302,     0,   303,   304,     0,     0,
       0,     0,   305,   306,   307,   308,   309,   310,     0,     0,
     311,   312,     0,   313,     0,   314,     0,   315,   316,   317,
     318,   319,   320,   321,   322,   323,     0,     0,   324,   325,
       0,     0,   326,   327,   328,   329,     0,     0,     0,   330,
     331,     0,     0,     0,   332,     0,   333,   334,   335,     0,
     336,   337,   338,     0,   339,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   340,   341,   342,     0,   343,   344,
       0,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,     0,     0,   355,   356,   357,     0,   358,     0,   359,
     360,   361,   362,   363,     0,   364,   365,   366,     0,     0,
     367,     0,     0,     0,   368,   369,   370,   371,   372,     0,
       0,   373,   374,   375,   376,   377,     0,   378,   379,     0,
     380,   381,   382,     0,     0,   383,     0,   384,     0,   385,
     386,     0,   387,   388,   389,     0,   390,     0,     0,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
       0,   402,   403,     0,     0,     0,   404,   405,   406,   407,
       0,     0,     0,   408,     0,     0,     0,   409,     0,   410,
     411,   412,   413,     0,   414,   415,   416,   417,   418,     0,
       0,     0,     0,     0,     0,     0,     0,   419,   420,     0,
     421,     0,     0,   422,     0,     0,   423,   424,   425,     0,
       0,   426,   427,     0,   428,   429,   430,   431,   432,   433,
       0,     0,   434,   435,   436,   437,     0,   438,   439,     0,
       0,   440,   441,   442,   443,     0,     0,   444,   445,     0,
     446,   447,   448,   449,     0,     0,     0,     0,     0,   450,
     451,     0,     0,     0,   452,   453,   454,   455,     0,   456,
     457,     0,   458,   459,     0,   460,   461,     0,     0,   462,
       0,     0,   463,     0,   464,     0,   465,   466,     0,     0,
       0,     0,     0,     0,   467,     0,     0,   468,     0,     0,
       0,   469,   470,   471,   472,   473,     0,     0,     0,     0,
       0,     0,   474,   475,     0,   476,   477,   478,     0,   136,
     479,   137,   138,   139,   140,   141,     0,     0,     0,     0,
       0,   142,     0,     0,   143,     0,   144,   145,   146,   147,
     148,   149,   150,     0,   151,     0,     0,     0,   152,     0,
       0,     0,   153,     0,     0,   154,   155,   156,     0,   157,
       0,   158,   159,     0,     0,   160,     0,     0,   161,   162,
       0,   163,   164,     0,   165,     0,   166,   167,   168,   169,
     170,   171,     0,   172,   173,     0,   174,   175,   176,   177,
     178,   179,   180,   181,     0,   182,   183,     0,   184,   185,
     186,   187,   188,     0,   189,     0,     0,   190,     0,     0,
     191,     0,   192,     0,     0,   193,     0,     0,     0,   194,
     195,   196,     0,     0,   197,     0,     0,     0,     0,   198,
     199,     0,     0,     0,     0,   200,   201,     0,   202,     0,
       0,     0,   203,     0,   204,   205,   206,   207,   208,     0,
       0,     0,   209,     0,     0,   210,   211,   212,     0,     0,
       0,   213,     0,   214,   215,     0,   216,   217,   218,     0,
       0,   219,   220,     0,   221,   222,   223,   224,   225,   226,
       0,     0,   227,   228,   229,     0,     0,   230,   231,     0,
     232,  1786,   234,     0,     0,   235,     0,     0,     0,   236,
     237,     0,   238,     0,   239,     0,   240,   241,   242,   243,
       0,   244,     0,   245,     0,     0,     0,   246,   247,     0,
     248,     0,     0,   249,   250,     0,     0,     0,   251,   252,
     253,   254,     0,     0,   255,   256,   257,     0,     0,   258,
       0,     0,     0,     0,   259,   260,     0,     0,     0,   261,
       0,     0,     0,   262,   263,     0,   264,   265,     0,     0,
       0,   266,     0,     0,   267,   268,     0,     0,   269,     0,
       0,   270,   271,     0,     0,     0,     0,     0,   272,   273,
       0,   274,     0,   275,     0,   276,   277,     0,     0,     0,
       0,     0,     0,     0,   278,     0,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,     0,   296,   297,   298,     0,   299,   300,
     301,   302,     0,   303,   304,     0,     0,     0,     0,   305,
     306,   307,   308,   309,   310,     0,     0,   311,   312,     0,
     313,     0,   314,     0,   315,   316,   317,   318,   319,   320,
     321,   322,   323,     0,     0,   324,   325,     0,     0,   326,
    1787,   328,   329,     0,     0,     0,   330,   331,     0,     0,
       0,   332,     0,   333,   334,   335,     0,   336,   337,   338,
       0,   339,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   340,   341,   342,     0,   343,   344,     0,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,     0,     0,
     355,   356,   357,     0,   358,     0,   359,   360,   361,   362,
     363,     0,   364,   365,   366,     0,     0,   367,     0,     0,
       0,   368,   369,   370,   371,   372,     0,     0,   373,   374,
     375,   376,   377,     0,   378,   379,     0,   380,   381,   382,
       0,     0,   383,     0,   384,     0,   385,   386,     0,   387,
     388,   389,     0,   390,     0,     0,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,     0,   402,   403,
       0,     0,     0,   404,   405,   406,   407,     0,     0,     0,
     408,     0,     0,     0,   409,     0,   410,   411,   412,   413,
       0,   414,   415,   416,   417,   418,     0,     0,     0,     0,
       0,     0,     0,     0,   419,   420,     0,   421,     0,     0,
     422,     0,     0,   423,   424,   425,     0,     0,   426,   427,
       0,   428,   429,   430,   431,   432,   433,     0,     0,   434,
     435,   436,   437,     0,   438,   439,     0,     0,   440,   441,
     442,   443,     0,     0,   444,   445,     0,   446,   447,   448,
     449,     0,     0,     0,     0,     0,   450,   451,     0,     0,
       0,   452,   453,   454,   455,     0,   456,   457,     0,   458,
     459,     0,   460,   461,     0,     0,   462,     0,     0,   463,
       0,   464,     0,   465,   466,     0,     0,     0,     0,     0,
       0,   467,     0,     0,   468,     0,     0,     0,   469,   470,
     471,   472,   473,     0,     0,     0,     0,     0,     0,   474,
     475,     0,   476,   477,   478,     0,   136,   479,   137,   138,
     139,   140,   141,     0,     0,     0,     0,     0,   142,     0,
       0,     0,     0,   144,   145,   146,   147,   148,   149,     0,
       0,  -363,     0,     0,     0,   152,     0,     0,     0,   153,
       0,     0,   154,   155,   156,     0,   157,     0,     0,     0,
       0,     0,   160,  3907,     0,   161,   162,     0,   163,     0,
       0,     0,     0,   166,   167,   168,  3908,   170,   171,     0,
     172,   173,     0,   174,     0,   176,     0,   178,   179,   180,
     181,     0,   182,   183,     0,   184,   185,   186,     0,   188,
       0,   189,     0,     0,   190,     0,     0,   191,     0,   192,
       0,     0,   193,     0,     0,     0,   194,   195,   196,     0,
       0,   197,     0,     0,     0,     0,   198,     0,     0,     0,
       0,     0,   200,   201,     0,   202,     0,     0,     0,   203,
       0,   204,   205,   206,   207,   208,     0,     0,     0,     0,
       0,     0,   210,   211,   212,     0,  -333,  -333,   213,     0,
    -333,   215,     0,   216,   217,   218,     0,     0,   219,   220,
       0,   221,   222,   223,   224,   225,     0,     0,     0,   227,
     228,   229,     0,     0,   230,   231,  3909,   232,   233,   234,
       0,     0,     0,     0,     0,     0,     0,   237,     0,   238,
       0,   239,     0,   240,   241,   242,   243,     0,   244,     0,
     245,     0,     0,     0,     0,   247,     0,     0,     0,     0,
       0,   250,     0,     0,     0,   251,   252,   253,   254,  3910,
       0,   255,   256,   257,     0,     0,   258,     0,     0,     0,
       0,   259,     0,     0,     0,     0,   261,     0,     0,     0,
     262,   263,     0,   264,   265,  3911,     0,     0,   266,     0,
       0,     0,   268,     0,     0,   269,  3912,     0,   270,   271,
       0,     0,     0,     0,     0,   272,   273,     0,   274,     0,
     275,     0,   276,   277,     0,     0,     0,     0,  -318,     0,
       0,   278,     0,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
       0,   296,   297,   298,     0,   299,   300,   301,   302,     0,
     303,   304,     0,     0,     0,     0,   305,   306,   307,   308,
     309,   310,     0,     0,   311,   312,     0,   313,     0,   314,
       0,   315,   316,   317,   318,   319,   320,   321,   322,   323,
       0,     0,   324,   325,     0,     0,   326,   327,   328,   329,
       0,     0,     0,     0,   331,     0,     0,     0,   332,     0,
     333,   334,   335,     0,   336,   337,  3913,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   341,
     342,     0,     0,   344,     0,   345,   346,   347,   348,   349,
     350,   351,   352,   353,     0,     0,     0,     0,   356,   357,
       0,   358,     0,   359,   360,   361,   362,   363,     0,   364,
     365,   366,     0,     0,   367,     0,     0,     0,   368,   369,
     370,   371,   372,     0,     0,   373,   374,   375,   376,   377,
       0,   378,     0,     0,   380,     0,   382,  -318,     0,   383,
       0,     0,     0,   385,     0,     0,   387,   388,   389,  3914,
     390,     0,     0,     0,   392,   393,   394,   395,   396,   397,
     398,     0,   400,   401,     0,   402,     0,     0,     0,     0,
     404,   405,   406,     0,     0,     0,     0,   408,     0,     0,
       0,   409,     0,     0,   411,     0,   413,     0,   414,     0,
       0,   417,   418,     0,     0,     0,     0,     0,     0,     0,
       0,   419,   420,     0,   421,     0,     0,   422,     0,     0,
     423,     0,   425,     0,     0,     0,   427,     0,   428,   429,
     430,   431,   432,   433,     0,     0,   434,   435,   436,   437,
       0,   438,   439,     0,     0,   440,   441,   442,   443,     0,
       0,   444,   445,     0,   446,   447,   448,   449,     0,     0,
       0,     0,     0,   450,   451,     0,     0,     0,     0,   453,
     454,   455,     0,   456,   457,     0,   458,   459,     0,     0,
       0,     0,     0,   462,     0,     0,   463,     0,     0,     0,
     465,   466,     0,     0,     0,     0,     0,     0,   467,     0,
       0,   468,     0,     0,     0,   469,   470,   471,   472,   473,
       0,     0,  -318,     0,     0,     0,   474,     0,     0,   476,
       0,   478,     0,   136,   479,   137,   138,   139,   140,   141,
       0,     0,     0,     0,     0,   142,     0,     0,     0,     0,
     144,   145,   146,   147,   148,   149,     0,     0,  -363,     0,
       0,     0,   152,     0,     0,     0,   153,     0,     0,   154,
     155,   156,     0,   157,     0,     0,     0,     0,     0,   160,
    3907,     0,   161,   162,     0,   163,     0,     0,     0,     0,
     166,   167,   168,  3908,   170,   171,     0,   172,   173,     0,
     174,     0,   176,     0,   178,   179,   180,   181,     0,   182,
     183,     0,   184,   185,   186,     0,   188,     0,   189,     0,
       0,   190,     0,     0,   191,     0,   192,     0,     0,   193,
       0,     0,     0,   194,   195,   196,     0,     0,   197,     0,
       0,     0,     0,   198,     0,     0,     0,     0,     0,   200,
     201,     0,   202,     0,     0,     0,   203,     0,   204,   205,
     206,   207,   208,     0,     0,     0,     0,     0,     0,   210,
     211,   212,     0,  -354,     0,   213,     0,  -354,   215,     0,
     216,   217,   218,     0,     0,   219,   220,     0,   221,   222,
     223,   224,   225,     0,     0,     0,   227,   228,   229,     0,
       0,   230,   231,  3909,   232,   233,   234,     0,     0,     0,
       0,     0,     0,     0,   237,     0,   238,     0,   239,     0,
     240,   241,   242,   243,     0,   244,     0,   245,     0,     0,
       0,     0,   247,     0,     0,     0,     0,     0,   250,     0,
       0,     0,   251,   252,   253,   254,  3910,     0,   255,   256,
     257,     0,     0,   258,     0,     0,     0,     0,   259,     0,
       0,     0,     0,   261,     0,     0,     0,   262,   263,     0,
     264,   265,  3911,     0,     0,   266,     0,     0,     0,   268,
       0,     0,   269,  3912,     0,   270,   271,     0,     0,     0,
       0,     0,   272,   273,     0,   274,     0,   275,     0,   276,
     277,     0,     0,     0,     0,  -318,     0,     0,   278,     0,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,     0,   296,   297,
     298,     0,   299,   300,   301,   302,     0,   303,   304,     0,
       0,     0,     0,   305,   306,   307,   308,   309,   310,     0,
       0,   311,   312,     0,   313,     0,   314,     0,   315,   316,
     317,   318,   319,   320,   321,   322,   323,     0,     0,   324,
     325,     0,     0,   326,   327,   328,   329,     0,     0,     0,
       0,   331,     0,     0,     0,   332,     0,   333,   334,   335,
       0,   336,   337,  3913,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   341,   342,     0,     0,
     344,     0,   345,   346,   347,   348,   349,   350,   351,   352,
     353,     0,     0,     0,     0,   356,   357,     0,   358,     0,
     359,   360,   361,   362,   363,     0,   364,   365,   366,     0,
       0,   367,     0,     0,     0,   368,   369,   370,   371,   372,
       0,     0,   373,   374,   375,   376,   377,     0,   378,     0,
       0,   380,     0,   382,  -318,     0,   383,     0,     0,     0,
     385,     0,     0,   387,   388,   389,  3914,   390,     0,     0,
       0,   392,   393,   394,   395,   396,   397,   398,     0,   400,
     401,     0,   402,     0,     0,     0,     0,   404,   405,   406,
       0,     0,     0,     0,   408,     0,     0,     0,   409,     0,
       0,   411,     0,   413,     0,   414,     0,     0,   417,   418,
       0,     0,     0,     0,     0,     0,     0,     0,   419,   420,
       0,   421,     0,     0,   422,     0,     0,   423,     0,   425,
       0,     0,     0,   427,     0,   428,   429,   430,   431,   432,
     433,     0,     0,   434,   435,   436,   437,     0,   438,   439,
       0,     0,   440,   441,   442,   443,     0,     0,   444,   445,
       0,   446,   447,   448,   449,     0,     0,     0,     0,     0,
     450,   451,     0,     0,     0,     0,   453,   454,   455,     0,
     456,   457,     0,   458,   459,     0,     0,     0,     0,     0,
     462,     0,     0,   463,     0,     0,     0,   465,   466,     0,
       0,     0,     0,     0,     0,   467,     0,     0,   468,     0,
       0,     0,   469,   470,   471,   472,   473,  -354,     0,  -318,
       0,     0,     0,   474,     0,     0,   476,     0,   478,     0,
     136,   479,   137,   138,   139,   140,   141,     0,     0,     0,
       0,     0,   142,     0,     0,     0,     0,   144,   145,   146,
     147,   148,   149,     0,     0,  -363,     0,     0,     0,   152,
       0,     0,     0,   153,     0,     0,   154,   155,   156,     0,
     157,     0,     0,     0,     0,     0,   160,  3907,     0,   161,
     162,     0,   163,     0,     0,     0,     0,   166,   167,   168,
    3908,   170,   171,     0,   172,   173,     0,   174,     0,   176,
       0,   178,   179,   180,   181,     0,   182,   183,     0,   184,
     185,   186,     0,   188,     0,   189,     0,     0,   190,     0,
       0,   191,     0,   192,     0,     0,   193,     0,     0,     0,
     194,   195,   196,     0,     0,   197,     0,     0,     0,     0,
     198,     0,     0,     0,     0,     0,   200,   201,     0,   202,
       0,     0,     0,   203,     0,   204,   205,   206,   207,   208,
       0,     0,     0,     0,     0,     0,   210,   211,   212,     0,
    -351,     0,   213,     0,  -351,   215,     0,   216,   217,   218,
       0,     0,   219,   220,     0,   221,   222,   223,   224,   225,
       0,     0,     0,   227,   228,   229,     0,     0,   230,   231,
    3909,   232,   233,   234,     0,     0,     0,     0,     0,     0,
       0,   237,     0,   238,     0,   239,     0,   240,   241,   242,
     243,     0,   244,     0,   245,     0,     0,     0,     0,   247,
       0,     0,     0,     0,     0,   250,     0,     0,     0,   251,
     252,   253,   254,  3910,     0,   255,   256,   257,     0,     0,
     258,     0,     0,     0,     0,   259,     0,     0,     0,     0,
     261,     0,     0,     0,   262,   263,     0,   264,   265,  3911,
       0,     0,   266,     0,     0,     0,   268,     0,     0,   269,
    3912,     0,   270,   271,     0,     0,     0,     0,     0,   272,
     273,     0,   274,     0,   275,     0,   276,   277,     0,     0,
       0,     0,  -318,     0,     0,   278,     0,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,     0,   296,   297,   298,     0,   299,
     300,   301,   302,     0,   303,   304,     0,     0,     0,     0,
     305,   306,   307,   308,   309,   310,     0,     0,   311,   312,
       0,   313,     0,   314,     0,   315,   316,   317,   318,   319,
     320,   321,   322,   323,     0,     0,   324,   325,     0,     0,
     326,   327,   328,   329,     0,     0,     0,     0,   331,     0,
       0,     0,   332,     0,   333,   334,   335,     0,   336,   337,
    3913,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   341,   342,     0,     0,   344,     0,   345,
     346,   347,   348,   349,   350,   351,   352,   353,     0,     0,
       0,     0,   356,   357,     0,   358,     0,   359,   360,   361,
     362,   363,     0,   364,   365,   366,     0,     0,   367,     0,
       0,     0,   368,   369,   370,   371,   372,     0,     0,   373,
     374,   375,   376,   377,     0,   378,     0,     0,   380,     0,
     382,  -318,     0,   383,     0,     0,     0,   385,     0,     0,
     387,   388,   389,  3914,   390,     0,     0,     0,   392,   393,
     394,   395,   396,   397,   398,     0,   400,   401,     0,   402,
       0,     0,     0,     0,   404,   405,   406,     0,     0,     0,
       0,   408,     0,     0,     0,   409,     0,     0,   411,     0,
     413,     0,   414,     0,     0,   417,   418,     0,     0,     0,
       0,     0,     0,     0,     0,   419,   420,     0,   421,     0,
       0,   422,     0,     0,   423,     0,   425,     0,     0,     0,
     427,     0,   428,   429,   430,   431,   432,   433,     0,     0,
     434,   435,   436,   437,     0,   438,   439,     0,     0,   440,
     441,   442,   443,     0,     0,   444,   445,     0,   446,   447,
     448,   449,     0,     0,     0,     0,     0,   450,   451,     0,
       0,     0,     0,   453,   454,   455,     0,   456,   457,     0,
     458,   459,     0,     0,     0,     0,     0,   462,     0,     0,
     463,     0,     0,     0,   465,   466,     0,     0,     0,     0,
       0,     0,   467,     0,     0,   468,     0,     0,     0,   469,
     470,   471,   472,   473,  -351,     0,  -318,     0,     0,     0,
     474,     0,     0,   476,     0,   478,     0,   136,   479,   137,
     138,   139,   140,   141,     0,     0,     0,     0,     0,   142,
       0,     0,     0,     0,   144,   145,   146,   147,   148,   149,
       0,     0,  -363,     0,     0,     0,   152,     0,     0,     0,
     153,     0,     0,   154,   155,   156,     0,   157,     0,     0,
       0,     0,     0,   160,  3907,     0,   161,   162,     0,   163,
       0,     0,     0,     0,   166,   167,   168,  3908,   170,   171,
       0,   172,   173,     0,   174,     0,   176,     0,   178,   179,
     180,   181,     0,   182,   183,     0,   184,   185,   186,     0,
     188,     0,   189,     0,     0,   190,     0,     0,   191,     0,
     192,     0,     0,   193,     0,     0,     0,   194,   195,   196,
       0,     0,   197,     0,     0,     0,     0,   198,     0,     0,
       0,     0,     0,   200,   201,     0,   202,     0,     0,     0,
     203,     0,   204,   205,   206,   207,   208,     0,     0,     0,
       0,     0,     0,   210,   211,   212,     0,     0,     0,   213,
       0,  4220,   215,     0,   216,   217,   218,     0,     0,   219,
     220,     0,   221,   222,   223,   224,   225,     0,     0,     0,
     227,   228,   229,     0,     0,   230,   231,  3909,   232,   233,
     234,     0,     0,     0,     0,     0,     0,     0,   237,     0,
     238,     0,   239,     0,   240,   241,   242,   243,     0,   244,
       0,   245,     0,     0,     0,     0,   247,     0,     0,     0,
       0,     0,   250,     0,     0,     0,   251,   252,   253,   254,
    3910,     0,   255,   256,   257,     0,     0,   258,     0,     0,
       0,     0,   259,     0,     0,     0,     0,   261,     0,     0,
       0,   262,   263,     0,   264,   265,  3911,     0,     0,   266,
       0,     0,     0,   268,     0,     0,   269,  3912,     0,   270,
     271,     0,     0,     0,     0,     0,   272,   273,     0,   274,
       0,   275,     0,   276,   277,     0,     0,     0,     0,  -318,
       0,     0,   278,     0,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,     0,   296,   297,   298,     0,   299,   300,   301,   302,
       0,   303,   304,     0,     0,     0,     0,   305,   306,   307,
     308,   309,   310,     0,     0,   311,   312,     0,   313,     0,
     314,     0,   315,   316,   317,   318,   319,   320,   321,   322,
     323,     0,     0,   324,   325,     0,     0,   326,   327,   328,
     329,     0,     0,     0,     0,   331,     0,     0,     0,   332,
       0,   333,   334,   335,     0,   336,   337,  3913,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     341,   342,     0,     0,   344,     0,   345,   346,   347,   348,
     349,   350,   351,   352,   353,     0,     0,     0,     0,   356,
     357,     0,   358,     0,   359,   360,   361,   362,   363,     0,
     364,   365,   366,     0,     0,   367,     0,     0,     0,   368,
     369,   370,   371,   372,     0,     0,   373,   374,   375,   376,
     377,     0,   378,     0,     0,   380,     0,   382,  -318,     0,
     383,     0,     0,     0,   385,     0,     0,   387,   388,   389,
    3914,   390,     0,     0,     0,   392,   393,   394,   395,   396,
     397,   398,     0,   400,   401,     0,   402,     0,     0,     0,
       0,   404,   405,   406,     0,     0,     0,     0,   408,     0,
       0,     0,   409,     0,     0,   411,     0,   413,     0,   414,
       0,     0,   417,   418,     0,     0,     0,     0,     0,     0,
       0,     0,   419,   420,     0,   421,     0,     0,   422,     0,
       0,   423,     0,   425,     0,     0,     0,   427,     0,   428,
     429,   430,   431,   432,   433,     0,     0,   434,   435,   436,
     437,     0,   438,   439,     0,     0,   440,   441,   442,   443,
       0,     0,   444,   445,     0,   446,   447,   448,   449,     0,
       0,     0,     0,     0,   450,   451,     0,     0,     0,     0,
     453,   454,   455,     0,   456,   457,     0,   458,   459,     0,
       0,     0,     0,     0,   462,     0,     0,   463,     0,     0,
       0,   465,   466,     0,     0,     0,     0,     0,     0,   467,
       0,     0,   468,     0,     0,     0,   469,   470,   471,   472,
     473,     0,     0,  -318,     0,     0,     0,   474,     0,     0,
     476,     0,   478,     0,   136,   479,   137,   138,   139,   140,
     141,     0,     0,     0,     0,     0,   142,     0,     0,     0,
       0,   144,   145,   146,   147,   148,   149,     0,     0,  -363,
       0,     0,     0,   152,     0,     0,     0,   153,     0,     0,
     154,   155,   156,     0,   157,     0,     0,     0,     0,     0,
     160,  3907,     0,   161,   162,     0,   163,     0,     0,     0,
       0,   166,   167,   168,  3908,   170,   171,     0,   172,   173,
       0,   174,     0,   176,     0,   178,   179,   180,   181,     0,
     182,   183,     0,   184,   185,   186,     0,   188,     0,   189,
       0,     0,   190,     0,     0,   191,     0,   192,     0,     0,
     193,     0,     0,     0,   194,   195,   196,     0,     0,   197,
       0,     0,     0,     0,   198,     0,     0,     0,     0,     0,
     200,   201,     0,   202,     0,     0,     0,   203,     0,   204,
     205,   206,   207,   208,     0,     0,     0,     0,     0,     0,
     210,   211,   212,     0,     0,     0,   213,     0,  -356,   215,
       0,   216,   217,   218,     0,     0,   219,   220,     0,   221,
     222,   223,   224,   225,     0,     0,     0,   227,   228,   229,
       0,     0,   230,   231,  3909,   232,   233,   234,     0,     0,
       0,     0,     0,     0,     0,   237,     0,   238,     0,   239,
       0,   240,   241,   242,   243,     0,   244,     0,   245,     0,
       0,     0,     0,   247,     0,     0,     0,     0,     0,   250,
       0,     0,     0,   251,   252,   253,   254,  3910,     0,   255,
     256,   257,     0,     0,   258,     0,     0,     0,     0,   259,
       0,     0,     0,     0,   261,     0,     0,     0,   262,   263,
       0,   264,   265,  3911,     0,     0,   266,     0,     0,     0,
     268,     0,     0,   269,  3912,     0,   270,   271,     0,     0,
       0,     0,     0,   272,   273,     0,   274,     0,   275,     0,
     276,   277,     0,     0,     0,     0,  -318,     0,     0,   278,
       0,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,     0,   296,
     297,   298,     0,   299,   300,   301,   302,     0,   303,   304,
       0,     0,     0,     0,   305,   306,   307,   308,   309,   310,
       0,     0,   311,   312,     0,   313,     0,   314,     0,   315,
     316,   317,   318,   319,   320,   321,   322,   323,     0,     0,
     324,   325,     0,     0,   326,   327,   328,   329,     0,     0,
       0,     0,   331,     0,     0,     0,   332,     0,   333,   334,
     335,     0,   336,   337,  3913,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   341,   342,     0,
       0,   344,     0,   345,   346,   347,   348,   349,   350,   351,
     352,   353,     0,     0,     0,     0,   356,   357,     0,   358,
       0,   359,   360,   361,   362,   363,     0,   364,   365,   366,
       0,     0,   367,     0,     0,     0,   368,   369,   370,   371,
     372,     0,     0,   373,   374,   375,   376,   377,     0,   378,
       0,     0,   380,     0,   382,  -318,     0,   383,     0,     0,
       0,   385,     0,     0,   387,   388,   389,  3914,   390,     0,
       0,     0,   392,   393,   394,   395,   396,   397,   398,     0,
     400,   401,     0,   402,     0,     0,     0,     0,   404,   405,
     406,     0,     0,     0,     0,   408,     0,     0,     0,   409,
       0,     0,   411,     0,   413,     0,   414,     0,     0,   417,
     418,     0,     0,     0,     0,     0,     0,     0,     0,   419,
     420,     0,   421,     0,     0,   422,     0,     0,   423,     0,
     425,     0,     0,     0,   427,     0,   428,   429,   430,   431,
     432,   433,     0,     0,   434,   435,   436,   437,     0,   438,
     439,     0,     0,   440,   441,   442,   443,     0,     0,   444,
     445,     0,   446,   447,   448,   449,     0,     0,     0,     0,
       0,   450,   451,     0,     0,     0,     0,   453,   454,   455,
       0,   456,   457,     0,   458,   459,     0,     0,     0,     0,
       0,   462,     0,     0,   463,     0,     0,     0,   465,   466,
       0,     0,     0,     0,     0,     0,   467,     0,     0,   468,
       0,     0,     0,   469,   470,   471,   472,   473,     0,     0,
    -318,     0,     0,     0,   474,     0,     0,   476,     0,   478,
       0,   136,   479,   137,   138,   139,   140,   141,     0,     0,
       0,     0,     0,   142,     0,     0,     0,     0,   144,   145,
     146,   147,   148,   149,     0,     0,  -363,     0,     0,     0,
     152,     0,     0,     0,   153,     0,     0,   154,   155,   156,
       0,   157,     0,     0,     0,     0,     0,   160,  3907,     0,
     161,   162,     0,   163,     0,     0,     0,     0,   166,   167,
     168,  3908,   170,   171,     0,   172,   173,     0,   174,     0,
     176,     0,   178,   179,   180,   181,     0,   182,   183,     0,
     184,   185,   186,     0,   188,     0,   189,     0,     0,   190,
       0,     0,   191,     0,   192,     0,     0,   193,     0,     0,
       0,   194,   195,   196,     0,     0,   197,     0,     0,     0,
       0,   198,     0,     0,     0,     0,     0,   200,   201,     0,
     202,     0,     0,     0,   203,     0,   204,   205,   206,   207,
     208,     0,     0,     0,     0,     0,     0,   210,   211,   212,
       0,     0,     0,   213,     0,  4327,   215,     0,   216,   217,
     218,     0,     0,   219,   220,     0,   221,   222,   223,   224,
     225,     0,     0,     0,   227,   228,   229,     0,     0,   230,
     231,  3909,   232,   233,   234,     0,     0,     0,     0,     0,
       0,     0,   237,     0,   238,     0,   239,     0,   240,   241,
     242,   243,     0,   244,     0,   245,     0,     0,     0,     0,
     247,     0,     0,     0,     0,     0,   250,     0,     0,     0,
     251,   252,   253,   254,  3910,     0,   255,   256,   257,     0,
       0,   258,     0,     0,     0,     0,   259,     0,     0,     0,
       0,   261,     0,     0,     0,   262,   263,     0,   264,   265,
    3911,     0,     0,   266,     0,     0,     0,   268,     0,     0,
     269,  3912,     0,   270,   271,     0,     0,     0,     0,     0,
     272,   273,     0,   274,     0,   275,     0,   276,   277,     0,
       0,     0,     0,  -318,     0,     0,   278,     0,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,     0,   296,   297,   298,     0,
     299,   300,   301,   302,     0,   303,   304,     0,     0,     0,
       0,   305,   306,   307,   308,   309,   310,     0,     0,   311,
     312,     0,   313,     0,   314,     0,   315,   316,   317,   318,
     319,   320,   321,   322,   323,     0,     0,   324,   325,     0,
       0,   326,   327,   328,   329,     0,     0,     0,     0,   331,
       0,     0,     0,   332,     0,   333,   334,   335,     0,   336,
     337,  3913,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   341,   342,     0,     0,   344,     0,
     345,   346,   347,   348,   349,   350,   351,   352,   353,     0,
       0,     0,     0,   356,   357,     0,   358,     0,   359,   360,
     361,   362,   363,     0,   364,   365,   366,     0,     0,   367,
       0,     0,     0,   368,   369,   370,   371,   372,     0,     0,
     373,   374,   375,   376,   377,     0,   378,     0,     0,   380,
       0,   382,  -318,     0,   383,     0,     0,     0,   385,     0,
       0,   387,   388,   389,  3914,   390,     0,     0,     0,   392,
     393,   394,   395,   396,   397,   398,     0,   400,   401,     0,
     402,     0,     0,     0,     0,   404,   405,   406,     0,     0,
       0,     0,   408,     0,     0,     0,   409,     0,     0,   411,
       0,   413,     0,   414,     0,     0,   417,   418,     0,     0,
       0,     0,     0,     0,     0,     0,   419,   420,     0,   421,
       0,     0,   422,     0,     0,   423,     0,   425,     0,     0,
       0,   427,     0,   428,   429,   430,   431,   432,   433,     0,
       0,   434,   435,   436,   437,     0,   438,   439,     0,     0,
     440,   441,   442,   443,     0,     0,   444,   445,     0,   446,
     447,   448,   449,     0,     0,     0,     0,     0,   450,   451,
       0,     0,     0,     0,   453,   454,   455,     0,   456,   457,
       0,   458,   459,     0,     0,     0,     0,     0,   462,     0,
       0,   463,     0,     0,     0,   465,   466,     0,     0,     0,
       0,     0,     0,   467,     0,     0,   468,     0,     0,     0,
     469,   470,   471,   472,   473,     0,     0,  -318,     0,     0,
       0,   474,     0,     0,   476,     0,   478,     0,   136,   479,
     137,   138,   139,   140,   141,     0,     0,     0,     0,     0,
     142,     0,     0,     0,     0,   144,   145,   146,   147,   148,
     149,     0,     0,  -363,     0,     0,     0,   152,     0,     0,
       0,   153,     0,     0,   154,   155,   156,     0,   157,     0,
       0,     0,     0,     0,   160,  3907,     0,   161,   162,     0,
     163,     0,     0,     0,     0,   166,   167,   168,  3908,   170,
     171,     0,   172,   173,     0,   174,     0,   176,     0,   178,
     179,   180,   181,     0,   182,   183,     0,   184,   185,   186,
       0,   188,     0,   189,     0,     0,   190,     0,     0,   191,
       0,   192,     0,     0,   193,     0,     0,     0,   194,   195,
     196,     0,     0,   197,     0,     0,     0,     0,   198,     0,
       0,     0,     0,     0,   200,   201,     0,   202,     0,     0,
       0,   203,     0,   204,   205,   206,   207,   208,     0,     0,
       0,     0,     0,     0,   210,   211,   212,     0,     0,     0,
     213,     0,  4375,   215,     0,   216,   217,   218,     0,     0,
     219,   220,     0,   221,   222,   223,   224,   225,     0,     0,
       0,   227,   228,   229,     0,     0,   230,   231,  3909,   232,
     233,   234,     0,     0,     0,     0,     0,     0,     0,   237,
       0,   238,     0,   239,     0,   240,   241,   242,   243,     0,
     244,     0,   245,     0,     0,     0,     0,   247,     0,     0,
       0,     0,     0,   250,     0,     0,     0,   251,   252,   253,
     254,  3910,     0,   255,   256,   257,     0,     0,   258,     0,
       0,     0,     0,   259,     0,     0,     0,     0,   261,     0,
       0,     0,   262,   263,     0,   264,   265,  3911,     0,     0,
     266,     0,     0,     0,   268,     0,     0,   269,  3912,     0,
     270,   271,     0,     0,     0,     0,     0,   272,   273,     0,
     274,     0,   275,     0,   276,   277,     0,     0,     0,     0,
    -318,     0,     0,   278,     0,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,     0,   296,   297,   298,     0,   299,   300,   301,
     302,     0,   303,   304,     0,     0,     0,     0,   305,   306,
     307,   308,   309,   310,     0,     0,   311,   312,     0,   313,
       0,   314,     0,   315,   316,   317,   318,   319,   320,   321,
     322,   323,     0,     0,   324,   325,     0,     0,   326,   327,
     328,   329,     0,     0,     0,     0,   331,     0,     0,     0,
     332,     0,   333,   334,   335,     0,   336,   337,  3913,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   341,   342,     0,     0,   344,     0,   345,   346,   347,
     348,   349,   350,   351,   352,   353,     0,     0,     0,     0,
     356,   357,     0,   358,     0,   359,   360,   361,   362,   363,
       0,   364,   365,   366,     0,     0,   367,     0,     0,     0,
     368,   369,   370,   371,   372,     0,     0,   373,   374,   375,
     376,   377,     0,   378,     0,     0,   380,     0,   382,  -318,
       0,   383,     0,     0,     0,   385,     0,     0,   387,   388,
     389,  3914,   390,     0,     0,     0,   392,   393,   394,   395,
     396,   397,   398,     0,   400,   401,     0,   402,     0,     0,
       0,     0,   404,   405,   406,     0,     0,     0,     0,   408,
       0,     0,     0,   409,     0,     0,   411,     0,   413,     0,
     414,     0,     0,   417,   418,     0,     0,     0,     0,     0,
       0,     0,     0,   419,   420,     0,   421,     0,     0,   422,
       0,     0,   423,     0,   425,     0,     0,     0,   427,     0,
     428,   429,   430,   431,   432,   433,     0,     0,   434,   435,
     436,   437,     0,   438,   439,     0,     0,   440,   441,   442,
     443,     0,     0,   444,   445,     0,   446,   447,   448,   449,
       0,     0,     0,     0,     0,   450,   451,     0,     0,     0,
       0,   453,   454,   455,     0,   456,   457,     0,   458,   459,
       0,     0,     0,     0,     0,   462,     0,     0,   463,     0,
       0,     0,   465,   466,     0,     0,     0,     0,     0,     0,
     467,     0,     0,   468,     0,     0,     0,   469,   470,   471,
     472,   473,     0,     0,  -318,     0,     0,     0,   474,     0,
       0,   476,     0,   478,     0,   136,   479,   137,   138,   139,
     140,   141,     0,     0,     0,     0,     0,   142,     0,     0,
       0,     0,   144,   145,   146,   147,   148,   149,     0,     0,
    -363,     0,     0,     0,   152,     0,     0,     0,   153,     0,
       0,   154,   155,   156,     0,   157,     0,     0,     0,     0,
       0,   160,  3907,     0,   161,   162,     0,   163,     0,     0,
       0,     0,   166,   167,   168,  3908,   170,   171,     0,   172,
     173,     0,   174,     0,   176,     0,   178,   179,   180,   181,
       0,   182,   183,     0,   184,   185,   186,     0,   188,     0,
     189,     0,     0,   190,     0,     0,   191,     0,   192,     0,
       0,   193,     0,     0,     0,   194,   195,   196,     0,     0,
     197,     0,     0,     0,     0,   198,     0,     0,     0,     0,
       0,   200,   201,     0,   202,     0,     0,     0,   203,     0,
     204,   205,   206,   207,   208,     0,     0,     0,     0,     0,
       0,   210,   211,   212,     0,     0,     0,   213,     0,  -337,
     215,     0,   216,   217,   218,     0,     0,   219,   220,     0,
     221,   222,   223,   224,   225,     0,     0,     0,   227,   228,
     229,     0,     0,   230,   231,  3909,   232,   233,   234,     0,
       0,     0,     0,     0,     0,     0,   237,     0,   238,     0,
     239,     0,   240,   241,   242,   243,     0,   244,     0,   245,
       0,     0,     0,     0,   247,     0,     0,     0,     0,     0,
     250,     0,     0,     0,   251,   252,   253,   254,  3910,     0,
     255,   256,   257,     0,     0,   258,     0,     0,     0,     0,
     259,     0,     0,     0,     0,   261,     0,     0,     0,   262,
     263,     0,   264,   265,  3911,     0,     0,   266,     0,     0,
       0,   268,     0,     0,   269,  3912,     0,   270,   271,     0,
       0,     0,     0,     0,   272,   273,     0,   274,     0,   275,
       0,   276,   277,     0,     0,     0,     0,  -318,     0,     0,
     278,     0,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,     0,
     296,   297,   298,     0,   299,   300,   301,   302,     0,   303,
     304,     0,     0,     0,     0,   305,   306,   307,   308,   309,
     310,     0,     0,   311,   312,     0,   313,     0,   314,     0,
     315,   316,   317,   318,   319,   320,   321,   322,   323,     0,
       0,   324,   325,     0,     0,   326,   327,   328,   329,     0,
       0,     0,     0,   331,     0,     0,     0,   332,     0,   333,
     334,   335,     0,   336,   337,  3913,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   341,   342,
       0,     0,   344,     0,   345,   346,   347,   348,   349,   350,
     351,   352,   353,     0,     0,     0,     0,   356,   357,     0,
     358,     0,   359,   360,   361,   362,   363,     0,   364,   365,
     366,     0,     0,   367,     0,     0,     0,   368,   369,   370,
     371,   372,     0,     0,   373,   374,   375,   376,   377,     0,
     378,     0,     0,   380,     0,   382,  -318,     0,   383,     0,
       0,     0,   385,     0,     0,   387,   388,   389,  3914,   390,
       0,     0,     0,   392,   393,   394,   395,   396,   397,   398,
       0,   400,   401,     0,   402,     0,     0,     0,     0,   404,
     405,   406,     0,     0,     0,     0,   408,     0,     0,     0,
     409,     0,     0,   411,     0,   413,     0,   414,     0,     0,
     417,   418,     0,     0,     0,     0,     0,     0,     0,     0,
     419,   420,     0,   421,     0,     0,   422,     0,     0,   423,
       0,   425,     0,     0,     0,   427,     0,   428,   429,   430,
     431,   432,   433,     0,     0,   434,   435,   436,   437,     0,
     438,   439,     0,     0,   440,   441,   442,   443,     0,     0,
     444,   445,     0,   446,   447,   448,   449,     0,     0,     0,
       0,     0,   450,   451,     0,     0,     0,     0,   453,   454,
     455,     0,   456,   457,     0,   458,   459,     0,     0,     0,
       0,     0,   462,     0,     0,   463,     0,     0,     0,   465,
     466,     0,     0,     0,     0,     0,     0,   467,     0,     0,
     468,     0,     0,     0,   469,   470,   471,   472,   473,     0,
       0,  -318,     0,     0,     0,   474,     0,     0,   476,     0,
     478,     0,   136,   479,   137,   138,   139,   140,   141,     0,
       0,     0,     0,     0,   142,     0,     0,     0,     0,   144,
     145,   146,   147,   148,   149,     0,     0,  -363,     0,     0,
       0,   152,     0,     0,     0,   153,     0,     0,   154,   155,
     156,     0,   157,     0,     0,     0,     0,     0,   160,  3907,
       0,   161,   162,     0,   163,     0,     0,     0,     0,   166,
     167,   168,  3908,   170,   171,     0,   172,   173,     0,   174,
       0,   176,     0,   178,   179,   180,   181,     0,   182,   183,
       0,   184,   185,   186,     0,   188,     0,   189,     0,     0,
     190,     0,     0,   191,     0,   192,     0,     0,   193,     0,
       0,     0,   194,   195,   196,     0,     0,   197,     0,     0,
       0,     0,   198,     0,     0,     0,     0,     0,   200,   201,
       0,   202,     0,     0,     0,   203,     0,   204,   205,   206,
     207,   208,     0,     0,     0,     0,     0,     0,   210,   211,
     212,     0,     0,     0,   213,     0,     0,   215,     0,   216,
     217,   218,     0,     0,   219,   220,     0,   221,   222,   223,
     224,   225,     0,     0,     0,   227,   228,   229,     0,     0,
     230,   231,  3909,   232,   233,   234,     0,     0,     0,     0,
       0,     0,     0,   237,     0,   238,     0,   239,     0,   240,
     241,   242,   243,     0,   244,     0,   245,     0,     0,     0,
       0,   247,     0,     0,     0,     0,     0,   250,     0,     0,
       0,   251,   252,   253,   254,  3910,     0,   255,   256,   257,
       0,     0,   258,     0,     0,     0,     0,   259,     0,     0,
       0,     0,   261,     0,     0,     0,   262,   263,     0,   264,
     265,  3911,     0,     0,   266,     0,     0,     0,   268,     0,
       0,   269,  3912,     0,   270,   271,     0,     0,     0,     0,
       0,   272,   273,     0,   274,     0,   275,     0,   276,   277,
       0,     0,     0,     0,  -318,     0,     0,   278,     0,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,     0,   296,   297,   298,
       0,   299,   300,   301,   302,     0,   303,   304,     0,     0,
       0,     0,   305,   306,   307,   308,   309,   310,     0,     0,
     311,   312,     0,   313,     0,   314,     0,   315,   316,   317,
     318,   319,   320,   321,   322,   323,     0,     0,   324,   325,
       0,     0,   326,   327,   328,   329,     0,     0,     0,     0,
     331,     0,     0,     0,   332,     0,   333,   334,   335,     0,
     336,   337,  3913,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   341,   342,     0,     0,   344,
       0,   345,   346,   347,   348,   349,   350,   351,   352,   353,
       0,     0,     0,     0,   356,   357,     0,   358,     0,   359,
     360,   361,   362,   363,     0,   364,   365,   366,     0,     0,
     367,     0,     0,     0,   368,   369,   370,   371,   372,     0,
       0,   373,   374,   375,   376,   377,     0,   378,     0,     0,
     380,     0,   382,  -318,     0,   383,     0,     0,     0,   385,
       0,     0,   387,   388,   389,  3914,   390,     0,     0,     0,
     392,   393,   394,   395,   396,   397,   398,     0,   400,   401,
       0,   402,     0,     0,     0,     0,   404,   405,   406,     0,
       0,     0,     0,   408,     0,     0,     0,   409,     0,     0,
     411,     0,   413,     0,   414,     0,     0,   417,   418,     0,
       0,     0,     0,     0,     0,     0,     0,   419,   420,     0,
     421,     0,     0,   422,     0,     0,   423,     0,   425,     0,
       0,     0,   427,     0,   428,   429,   430,   431,   432,   433,
       0,     0,   434,   435,   436,   437,     0,   438,   439,     0,
       0,   440,   441,   442,   443,     0,     0,   444,   445,     0,
     446,   447,   448,   449,     0,     0,     0,     0,     0,   450,
     451,     0,     0,     0,     0,   453,   454,   455,     0,   456,
     457,     0,   458,   459,     0,     0,     0,     0,     0,   462,
       0,     0,   463,     0,     0,     0,   465,   466,     0,     0,
       0,     0,     0,     0,   467,     0,     0,   468,     0,     0,
       0,   469,   470,   471,   472,   473,     0,     0,  -318,     0,
       0,     0,   474,     0,     0,   476,     0,   478,     0,   136,
     479,   137,   138,   139,   140,   141,     0,     0,     0,     0,
       0,   142,     0,     0,     0,     0,   144,   145,   146,   147,
     148,   149,     0,     0,  -363,     0,     0,     0,   152,     0,
       0,     0,   153,     0,     0,   154,   155,   156,     0,   157,
       0,     0,     0,     0,     0,   160,  3907,     0,   161,   162,
       0,   163,     0,     0,     0,     0,   166,   167,   168,  3908,
     170,   171,     0,   172,   173,     0,   174,     0,   176,     0,
     178,   179,   180,   181,     0,   182,   183,     0,   184,   185,
     186,     0,   188,     0,   189,     0,     0,   190,     0,     0,
     191,     0,   192,     0,     0,   193,     0,     0,     0,   194,
     195,   196,     0,     0,   197,     0,     0,     0,     0,   198,
       0,     0,     0,     0,     0,   200,   201,     0,   202,     0,
       0,     0,   203,     0,   204,   205,   206,   207,   208,     0,
       0,     0,     0,     0,     0,   210,   211,   212,     0,     0,
       0,   213,     0,     0,   215,     0,   216,   217,   218,     0,
       0,   219,   220,     0,   221,   222,   223,   224,   225,     0,
       0,     0,   227,   228,   229,     0,     0,   230,   231,  3909,
     232,   233,   234,     0,     0,     0,     0,     0,     0,     0,
     237,     0,   238,     0,   239,     0,   240,   241,   242,   243,
       0,   244,     0,   245,     0,     0,     0,     0,   247,     0,
       0,     0,     0,     0,   250,     0,     0,     0,   251,   252,
     253,   254,  3910,     0,   255,   256,   257,     0,     0,   258,
       0,     0,     0,     0,   259,     0,     0,     0,     0,   261,
       0,     0,     0,   262,   263,     0,   264,   265,  3911,     0,
       0,   266,     0,     0,     0,   268,     0,     0,   269,  3912,
       0,   270,   271,     0,     0,     0,     0,     0,   272,   273,
       0,   274,     0,   275,     0,   276,   277,     0,     0,     0,
       0,  -318,     0,     0,   278,     0,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,     0,   296,   297,   298,     0,   299,   300,
     301,   302,     0,   303,   304,     0,     0,     0,     0,   305,
     306,   307,   308,   309,   310,     0,     0,   311,   312,     0,
     313,     0,   314,     0,   315,   316,   317,   318,   319,   320,
     321,   322,   323,     0,     0,   324,   325,     0,     0,   326,
     327,   328,   329,     0,     0,     0,     0,   331,     0,     0,
       0,   332,     0,   333,   334,   335,     0,   336,   337,  3913,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   341,   342,     0,     0,   344,     0,   345,   346,
     347,   348,   349,   350,   351,   352,   353,     0,     0,     0,
       0,   356,   357,     0,   358,     0,   359,   360,   361,   362,
     363,     0,   364,   365,   366,     0,     0,   367,     0,     0,
       0,   368,   369,   370,   371,   372,     0,     0,   373,   374,
     375,   376,   377,     0,   378,     0,     0,   380,     0,   382,
    -318,     0,   383,     0,     0,     0,   385,     0,     0,   387,
     388,   389,  3914,   390,     0,     0,     0,   392,   393,   394,
     395,   396,   397,   398,     0,   400,   401,     0,   402,     0,
       0,     0,     0,   404,   405,   406,     0,     0,     0,     0,
     408,     0,     0,     0,   409,     0,     0,   411,     0,   413,
       0,   414,     0,     0,   417,   418,     0,     0,     0,     0,
       0,     0,     0,     0,   419,   420,     0,   421,     0,     0,
     422,     0,     0,   423,     0,   425,     0,     0,     0,   427,
       0,   428,   429,   430,   431,   432,   433,     0,     0,   434,
     435,   436,   437,     0,   438,   439,     0,     0,   440,   441,
     442,   443,     0,     0,   444,   445,     0,   446,   447,   448,
     449,     0,     0,     0,     0,     0,   450,   451,     0,     0,
       0,     0,   453,   454,   455,     0,   456,   457,     0,   458,
     459,     0,     0,     0,     0,     0,   462,     0,     0,  4223,
       0,     0,     0,   465,   466,     0,     0,     0,     0,     0,
       0,   467,     0,     0,   468,     0,     0,     0,   469,   470,
     471,   472,   473,     0,     0,  -318,     0,     0,     0,   474,
       0,     0,   476,     0,   478,     0,   136,   479,   137,   138,
     139,   140,   141,     0,     0,     0,     0,     0,   142,     0,
       0,     0,     0,   144,   145,   146,   147,   148,   149,     0,
       0,     0,     0,     0,     0,   152,     0,     0,     0,   153,
       0,     0,   154,   155,   156,     0,   157,     0,     0,     0,
       0,     0,   160,     0,     0,   161,   162,     0,   163,     0,
       0,     0,     0,   166,   167,   168,     0,   170,   171,     0,
     172,   173,     0,   174,     0,   176,     0,   178,   179,   180,
     181,     0,   182,   183,     0,   184,   185,   186,     0,   188,
       0,   189,     0,     0,   190,     0,     0,   191,     0,   192,
       0,     0,   193,     0,     0,     0,   194,   195,   196,     0,
       0,   197,     0,     0,     0,     0,   198,     0,     0,     0,
       0,     0,   200,   201,     0,   202,     0,     0,     0,   203,
       0,   204,   205,   206,   207,   208,     0,     0,     0,     0,
       0,     0,   210,   211,   212,     0,     0,     0,   213,     0,
       0,   215,     0,   216,   217,   218,     0,     0,   219,   220,
       0,   221,   222,   223,   224,   225,     0,     0,     0,   227,
     228,   229,     0,     0,   230,   231,     0,   232,   233,   234,
       0,     0,     0,     0,     0,     0,     0,   237,     0,   238,
       0,   239,     0,   240,   241,   242,   243,     0,   244,     0,
     245,     0,     0,     0,     0,   247,     0,     0,     0,     0,
       0,   250,     0,     0,     0,   251,   252,   253,   254,     0,
       0,   255,   256,   257,     0,     0,   258,     0,     0,     0,
       0,   259,     0,     0,     0,     0,   261,     0,     0,     0,
     262,   263,     0,   264,   265,     0,     0,     0,   266,     0,
       0,     0,   268,     0,     0,   269,     0,     0,   270,   271,
       0,     0,     0,     0,     0,   272,   273,     0,   274,     0,
     275,     0,   276,   277,     0,     0,     0,     0,     0,     0,
       0,   278,     0,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
       0,   296,   297,   298,     0,   299,   300,   301,   302,     0,
     303,   304,     0,     0,     0,     0,   305,   306,   307,   308,
     309,   310,     0,     0,   311,   312,     0,   313,     0,   314,
       0,   315,   316,   317,   318,   319,   320,   321,   322,   323,
       0,     0,   324,   325,     0,     0,   326,   327,   328,   329,
       0,     0,     0,     0,   331,     0,     0,     0,   332,     0,
     333,   334,   335,     0,   336,   337,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   341,
     342,     0,     0,   344,     0,   345,   346,   347,   348,   349,
     350,   351,   352,   353,     0,     0,     0,     0,   356,   357,
       0,   358,     0,   359,   360,   361,   362,   363,     0,   364,
     365,   366,     0,     0,   367,     0,     0,     0,   368,   369,
     370,   371,   372,     0,     0,   373,   374,   375,   376,   377,
       0,   378,     0,     0,   380,     0,   382,     0,     0,   383,
       0,     0,     0,   385,     0,     0,   387,   388,   389,     0,
     390,     0,     0,     0,   392,   393,   394,   395,   396,   397,
     398,     0,   400,   401,     0,   402,     0,     0,     0,     0,
     404,   405,   406,     0,     0,     0,     0,   408,     0,     0,
       0,   409,     0,     0,   411,     0,   413,     0,   414,     0,
       0,   417,   418,     0,     0,     0,     0,     0,     0,     0,
       0,   419,   420,     0,   421,     0,     0,   422,     0,     0,
     423,     0,   425,     0,     0,     0,   427,     0,   428,   429,
     430,   431,   432,   433,     0,     0,   434,   435,   436,   437,
       0,   438,   439,     0,     0,   440,   441,   442,   443,     0,
       0,   444,   445,     0,   446,   447,   448,   449,     0,     0,
       0,     0,     0,   450,   451,     0,     0,     0,     0,   453,
     454,   455,     0,   456,   457,     0,   458,   459,     0,     0,
       0,     0,     0,   462,     0,     0,   463,     0,     0,     0,
     465,   466,     0,     0,     0,     0,     0,     0,   467,     0,
       0,   468,     0,     0,     0,   469,   470,   471,   472,   473,
       0,     0,     0,     0,     0,     0,   474,     0,     0,   476,
       0,   478,     0,     0,   479
};

static const yytype_int16 yycheck[] =
{
       6,   628,   972,   566,   586,   565,   566,  1840,   893,   894,
     873,  1560,  1060,    19,   637,   638,  1493,    23,   903,  1693,
     973,  1250,    20,  1290,  1101,  1386,    32,   122,     6,  1154,
    1805,   695,    30,    39,  1054,  1055,    42,  1154,    36,   601,
      46,   913,   911,  1367,  1491,   935,  2525,    53,  2023,  2089,
    1250,   655,  2323,  1177,  2154,  2455,  2367,  1124,  2046,  2159,
    1184,  1450,  1091,   935,  2418,  2419,  3254,   936,  2810,   510,
    2867,  1296,  1474,  1482,   624,   625,  1397,  1766,  2443,  1990,
    1827,  2638,   977,  1990,  2250,  1921,  2426,  1992,    94,   977,
    2997,  2114,  2114,   642,  1415,  3259,  2520,  2436,  2526,  2288,
       4,  3052,  1423,  1424,  3478,  2444,    18,  1464,  2672,    50,
     116,    16,   118,    33,  2385,   121,   122,   123,  1185,  1186,
    3135,    46,  1189,  1190,  1191,  1192,    59,  1194,  1195,  1196,
    1197,  1198,  1199,  1200,  1201,    23,   763,  1993,    19,  1541,
     118,  1997,    29,   121,    70,  1945,  1946,   751,   752,   753,
    2666,    20,  2008,    24,  2670,    18,    18,  1223,    15,    16,
     764,  1474,  1962,  2019,    33,  1478,  1973,  1480,  1838,   158,
    2137,   937,  2410,    20,    16,  2640,  3277,   128,    47,  1979,
    1980,   145,   145,  3520,  2499,    15,    16,   952,    77,    58,
      59,   139,    11,    15,    16,  1995,  1996,    64,  1998,  2488,
       9,  2001,  2002,  2114,    19,  2005,    94,  2114,   311,  3943,
    2010,    58,    59,    62,    65,  2015,  2016,  2017,  2018,  2103,
      29,  1936,  2022,  1474,  2024,  2304,    35,  1478,  1541,  1480,
    2030,   793,   104,  2033,    73,  2035,    57,  2502,   670,   151,
    2244,   155,   225,   155,    55,   126,   151,  2991,   365,  2915,
    2614,    68,   120,    45,   120,    15,    16,    33,  2669,  2484,
    2485,   141,  2069,   106,  2071,  2072,   120,  1964,    81,   277,
    2077,  2078,  3523,   384,  3533,   272,    62,    24,   210,  2086,
    2087,   356,   371,   151,  2091,   151,  3474,  1982,  3579,   851,
    1541,   414,   155,   155,    79,   364,  2375,   151,  2098,  2099,
    2100,  2101,    35,   122,    35,    20,    15,    16,   263,    18,
     742,   126,  2652,   447,  2654,    15,    16,   439,    33,   219,
     242,   300,   131,    73,   360,    15,    16,   187,    18,  4063,
      51,   419,    47,   123,    61,    74,  4059,   334,    15,    16,
      61,   482,   125,    58,    59,    12,   836,    12,   169,   539,
     267,   428,   173,   357,   225,   774,   145,   151,   122,  2730,
    2797,    15,    16,   184,   484,   187,    10,  3317,  3318,   602,
     353,  3321,  3709,   233,   511,   352,  3594,   508,   278,  3597,
     223,  2606,  2607,   559,   989,   990,   187,   125,  3704,   570,
    3340,    15,    16,   626,   243,   162,  3346,    67,    15,    16,
     495,  3126,   349,   350,    67,  3130,   582,   538,   247,  1032,
    1033,  1034,   204,   155,  2381,   539,   278,  3733,   208,    15,
      16,   107,  1027,   190,   110,   219,  1090,   162,   436,   506,
     409,  2238,   552,   574,  3652,   236,   307,   354,   533,  3813,
    1104,   631,    15,    16,   625,   864,   229,   300,   151,  2886,
     182,  1001,   429,   590,   458,   190,   183,   243,    15,    16,
      15,    16,  2237,   151,    40,   955,    15,    16,   135,   182,
     135,   235,  3636,   614,   207,  1360,   207,   565,   225,   602,
    2820,  2821,    15,    16,    50,  1438,  2442,   219,   278,   495,
    3781,   497,   414,   278,   315,   375,  2803,   247,   632,   348,
     455,    15,    16,   444,   626,   484,   219,  3695,   514,  2874,
     410,   371,   518,   624,   511,   632,  2504,    15,    16,   155,
    2508,   624,  1391,   529,   300,  1394,   474,   533,   140,   535,
    1399,  2008,   515,  2933,  2522,  2523,  1860,   626,   607,  3283,
     370,   352,   548,   373,    70,  2533,   267,   979,   370,   258,
     625,   373,   414,  1180,   373,   372,  1425,  1426,   261,   565,
     307,   475,  1964,   414,  3515,  2540,  4289,   573,   449,  1464,
    3734,  2559,   461,   261,    15,    16,  1464,  2488,  1450,   511,
    3045,  2488,    50,   155,  1188,   591,  1250,   155,  1990,   410,
     626,  2614,  2614,   601,  1915,   601,   409,   603,  1827,  2914,
    3266,  1205,  2917,  2918,    15,    16,  2844,   596,   614,   615,
     370,  3561,   595,   373,   620,  2904,   622,   484,   624,   625,
    3570,  2936,  4356,   629,   630,    15,    16,  1827,   634,  2038,
     187,  3890,  1073,  1074,   449,   599,   599,   615,   644,   645,
     646,  3591,  2449,   437,   650,  1540,  3596,  2912,  2636,  3446,
     136,  1964,  1540,  1094,  1721,  1421,   589,  3021,   507,    15,
      16,   370,  1103,   550,   373,  1732,  4003,   459,  1735,  1982,
     370,   520,   399,   373,  1115,  1116,  1117,   602,  1744,  1229,
     370,  4055,  1123,   373,  2651,   626,  1715,   550,   639,   695,
    2769,  2770,  2771,   370,  3858,   790,   373,   602,   624,   568,
    2507,  2103,  2509,  2614,   624,  3720,  1268,  2614,   550,  2516,
    3811,  3051,  2114,  1964,   523,  2515,   370,  2387,   630,   373,
    2435,   568,   594,  2530,  2608,   630,   614,  2731,  2528,  2536,
    3041,  1982,   620,   475,   520,   544,   617,  2816,  2817,  2818,
    2097,  3305,   551,  1293,  2551,   607,   370,    15,    16,   373,
     756,  2940,   758,   370,   611,   626,   373,   401,  1308,   608,
    3711,  1526,   630,   602,   630,   574,  2573,   610,    15,    16,
    2467,  1333,  3336,  3337,   370,  4026,   630,   373,   784,   785,
     786,   611,   788,   789,   790,  3301,   792,   793,  4162,   611,
    2103,  2486,   798,   576,  1356,  3020,  3960,   370,   893,   629,
     373,  2114,   897,   898,   626,   626,   539,   785,   539,   559,
     599,   789,  2612,   370,   792,   370,   373,   912,   373,  3335,
    3191,   370,   169,   562,   373,   831,  1375,  3343,    15,    16,
    2605,   187,   582,  1395,  3350,   841,   630,   370,   576,   475,
     373,   511,    20,   329,   571,   851,   852,  3275,   511,   581,
     856,   611,  2103,   568,   466,    33,   370,   543,   223,   373,
     546,   505,   169,  2114,   172,   625,   626,  3291,   581,    47,
      15,    16,   370,   588,   589,   373,   971,   403,   444,  3244,
      58,    59,  2329,  3248,   352,  3256,  3197,   893,  3299,  3300,
     632,   897,   898,  3200,   260,    61,  3307,   600,  2447,  3310,
    3311,  3808,   611,   475,   190,  3244,   912,   475,  1468,  3248,
     554,   611,   600,  3253,    15,    16,  3327,   626,  2751,  2875,
    2876,   611,    15,    16,   500,   625,   626,   630,   582,   370,
    3341,  4095,   373,    31,   611,  3346,  3347,  3348,  3349,    68,
    3211,   845,   630,    42,   364,   521,   952,   605,  3263,   626,
     594,    15,    16,   841,   177,  2788,   190,   611,   148,   370,
     245,  1846,   373,   219,   852,   971,   169,   973,   856,   159,
     383,   153,   626,   549,  1638,     8,   444,   242,  4166,    73,
     370,  1866,    98,   373,    15,    16,   188,   611,   797,    15,
      16,   261,   153,  2904,   611,  1001,   632,  2904,  3021,  3021,
    1549,   625,   626,   278,   530,    41,   474,   117,   625,   626,
      15,    16,   624,   389,   370,   611,   628,   373,   431,   317,
     117,  1911,   386,   539,  2501,  2502,  2862,   553,   251,   625,
     626,   160,   155,    15,    16,  1904,   460,   501,   611,  1911,
     637,   638,   484,   225,   134,  1914,  1052,   355,  1917,  1918,
    1056,  1941,   625,   626,   611,   197,   611,  2418,  2419,   120,
     632,   184,   611,   410,   632,  2467,  2813,    15,    16,  1941,
    2975,   626,  1167,  3239,  2763,  3632,   625,   626,   611,   361,
    4030,   533,  4032,   123,  1090,   389,  2488,    15,    16,    15,
      16,  2139,   625,   626,    15,    16,   132,   611,  1104,    15,
      16,   371,   370,   410,   386,   373,  2427,    12,   624,  1204,
    3021,   625,   626,   611,  3021,   401,  1739,  2184,    15,    16,
    2976,  3911,  3912,   370,  2349,   267,   373,   625,  3207,   352,
    1734,    15,    16,   619,   620,   621,   622,  2261,   236,   414,
      15,    16,  3507,  3508,   177,   187,  2555,  4029,  1154,   414,
      15,    16,   466,   247,  2467,  2930,  1251,    15,    16,   125,
     445,  1167,   260,  1827,  1052,   275,   339,   401,  1056,     0,
     611,   353,   118,  2486,  3729,   539,   640,  1800,   275,   369,
     382,   437,   200,   370,   625,  1747,   373,   607,   466,   362,
    2267,  2268,   353,  2867,    15,    16,    15,    16,  1204,  1749,
     611,   187,  2097,  1209,  1299,   187,  2608,   410,  1214,  2097,
    3952,   245,  2614,   626,  4011,   626,  2467,    15,    16,    15,
      16,   611,   256,  1229,   103,   370,   316,   245,   373,  3204,
     135,  2260,    15,    16,   600,  2486,   626,    22,   278,   537,
     339,  2270,  2367,   372,  1250,  1251,   356,   533,   556,    15,
      16,  1813,  1814,   117,  4442,   611,   422,   539,   350,   356,
      15,    16,  1268,   229,   572,   563,  1870,    15,    16,   370,
    2337,    71,   373,   580,  1280,   261,  1282,   370,  1284,   626,
     373,   483,   466,   162,    12,  3273,  3640,  1293,   234,   227,
      15,    16,   466,  1299,   355,  2608,    12,  2686,   236,   533,
     570,  2614,  1308,  1309,   346,   397,   370,  3295,  3408,   373,
     624,   190,    15,    16,   628,   179,    15,    16,   353,   626,
    2445,    15,    16,  3634,  3131,   423,  1214,  1333,  2445,   471,
    1336,  2778,   607,   515,    15,    16,    15,    16,  1344,   370,
    3884,  1347,   373,   611,   370,  3120,   624,   373,   538,   261,
    1356,  3126,   475,   371,   515,  3130,    33,  2608,   626,   466,
    1366,  1367,    12,  2614,   611,   370,   396,    24,   373,   630,
    1376,  1377,  1378,  1379,  1380,  1381,  1471,   580,   163,   626,
    1386,  1285,    59,   183,  4266,  4267,  1392,  1393,   370,  1395,
     568,   373,  1398,     6,    15,    16,  1284,   466,  1376,  1377,
    1378,    18,  1380,  1000,    15,    16,   261,   135,   466,   582,
    2535,   275,  1418,   595,   592,  1393,   474,   451,  2535,   135,
    1398,  1309,   370,   223,   611,   373,   539,    15,    16,   184,
     107,    15,    16,   110,   595,  2912,  4226,  4227,   376,   626,
     624,   118,   370,    56,   370,   373,   624,   373,   248,   370,
     624,   561,   373,  1050,   370,   539,   466,   373,  4013,   371,
    4015,  3861,    15,    16,   561,  1471,   611,  1371,   149,    19,
     416,   437,  2552,   370,    80,   136,   373,  4021,    95,  1485,
     515,   626,  1488,  1489,   187,   135,   370,   204,   466,   373,
     122,  1379,   356,  1381,   100,   370,   153,   151,   373,  2976,
     466,   215,  2904,   217,  3815,   370,    15,    16,   373,   204,
     611,   624,   370,    15,    16,   373,   371,   624,   611,   117,
    1526,  2406,   401,    15,    16,   626,   139,   788,   586,   587,
    1418,   248,    33,   626,   151,    57,    15,    16,   155,  1545,
     624,  1547,  1548,  4170,  1550,  1551,  4173,   611,   624,   370,
    3650,   370,   373,   248,   373,   624,   632,  1563,    59,  1565,
     595,   625,  3369,    15,    16,   182,   624,   184,   225,  1547,
    1548,   517,   370,  1477,   370,   373,   126,   373,   125,   262,
     611,   179,   265,   200,  2813,   611,   155,   370,   205,  3860,
     373,   618,   466,    15,    16,   626,   155,  1485,   625,   399,
     626,  1489,   219,   235,   370,  2653,   611,   373,   200,   226,
     576,    15,    16,  2813,   624,   370,   233,  2884,   373,  3021,
     533,   626,   370,  2747,   223,   373,    15,    16,   245,   611,
     184,     8,  1638,  1639,    15,    16,   138,   530,   497,   256,
     533,    15,    16,   625,   261,   370,   624,   169,   373,   248,
     307,   173,    29,   270,   533,  1750,   625,   626,   624,   518,
    2264,   632,   184,   611,   341,  4292,    73,   370,   329,   401,
     373,   370,    24,  2798,   373,   554,   370,   275,   626,   373,
      87,  2798,   229,   611,   542,   611,   579,   625,   132,   370,
     611,   370,   373,  1699,   373,   611,   353,   561,   626,   162,
     626,  3821,  3822,   147,   618,   626,  3746,  3747,  3021,  4188,
     626,   625,   586,   587,   611,   594,   270,   603,   604,    30,
    2161,    73,   339,    15,    16,    15,    16,   611,   411,   626,
    3177,    15,    16,    24,  2175,  1741,   611,   350,   625,   626,
     626,  1747,   626,  1749,  1750,   362,   611,  3522,  1843,   370,
     624,   626,   373,   611,   371,  1761,    15,    16,   356,   370,
    1766,   626,   373,   624,    75,  1771,   530,  2208,  1774,   533,
    3021,   632,  3446,   505,  1780,  1781,  3751,  1783,   414,    15,
      16,    39,   370,   122,   401,   373,   370,  1793,    46,   373,
     611,  1797,   611,   315,   550,   236,    16,    15,    16,   435,
     413,   153,   415,   533,   625,   482,   625,  1813,  1814,  1815,
    1816,   589,   218,   611,   592,   611,   257,   370,   170,   218,
     373,  1827,   554,   536,  1830,  1831,  1832,   625,   611,   625,
     227,   200,   582,   469,   451,   582,  2277,  1843,   149,   236,
    2920,   223,   625,   250,  3964,   611,    15,    16,  3968,   200,
      15,    16,  2412,   223,  1860,   223,   611,   474,   515,   625,
     130,   370,   594,   611,   373,    15,    16,  3674,   370,   546,
     625,   373,  2952,   225,  1880,   365,   626,   625,   370,   626,
    2960,   373,   632,    46,  2964,   632,   611,   233,   410,   187,
     437,   370,  1780,  1781,   373,  1783,   582,   574,   587,   516,
     625,    58,    59,  4023,  4024,  1793,  3230,  1811,   611,  1797,
    1916,    68,   611,    15,    16,    15,    16,   611,   370,   466,
     327,   373,  1928,   474,  3004,   278,   625,  1815,  1816,  1935,
     611,   625,   611,   625,   225,    15,    16,   630,   595,   625,
     626,   155,  1830,  1831,  1832,   352,   625,  2810,   370,   285,
     286,   373,    73,   570,  2514,   307,   617,   618,   619,   620,
     621,   622,  2852,   561,   581,   582,   370,   632,  2858,   373,
     577,  1875,   367,  3240,    15,    16,    15,    16,  3055,   376,
    2852,   370,   505,   600,   373,   602,  2858,    15,    16,   370,
     611,  2860,   373,    15,    16,   347,   370,  2882,   624,   373,
     611,   353,  3079,  3080,   625,   412,  3797,   183,   625,   626,
       6,   454,   629,   630,   625,   624,   307,  2112,    15,    16,
     437,  2116,    11,   611,   624,  3102,  2032,   611,  1916,   576,
      15,    16,   153,  3840,  3841,  3842,  3843,   625,   624,  2414,
    2046,   625,    15,    16,   624,  1949,   624,  1935,   624,  3307,
      15,    16,  3310,  3311,  1958,  1959,   624,  1269,   611,  2154,
    1272,   624,   353,  1275,  2159,  1969,  1970,  1971,  1972,  3327,
    1974,  1975,   625,   539,    15,    16,  3201,   624,   370,   624,
     370,   373,    16,   373,   624,   396,   370,   624,   531,   373,
     426,   427,   624,   536,   625,   626,    15,    16,   505,   625,
     626,   626,   611,   624,   225,    16,  2112,   418,   624,   611,
    2116,   370,  2118,   624,   373,  2121,   625,   625,   626,   611,
    3911,  3912,  2128,  2129,  2130,  2131,   624,  3252,  2134,    73,
    2753,  2506,   611,   625,   370,  3252,   579,   373,   117,   579,
     580,   452,   582,  2121,   584,   632,   625,   166,  2154,  2813,
    3983,   594,   370,  2159,  3954,   373,  2531,  2532,  2253,   611,
    3285,   362,   153,   515,   625,   626,  2070,   624,  3285,  2073,
    2074,   624,  2076,   625,    12,  2079,  2080,  2081,  2082,  2083,
    2084,  2085,    58,    59,  2088,   624,  2090,   624,  2283,   611,
    3990,   625,   626,  3993,  3994,  3995,  3996,   625,   626,   510,
     179,   370,   136,   625,   373,   370,   624,   611,   373,  3984,
     625,   626,   625,   626,   625,   626,  1066,  1067,  1068,   624,
     370,   625,   611,   373,   515,   136,   347,   582,  1078,   454,
     611,   708,   353,  2795,   225,    18,   625,   611,   625,   626,
    2128,  2129,  2130,   595,   625,   285,   286,  2253,  3268,  3269,
     530,   625,   624,   730,   625,   626,   400,  4048,  4049,  1109,
    4067,   624,  1112,   625,   626,   624,   743,   744,   370,    24,
     370,   373,  2278,   373,   626,   625,   626,  2283,  3355,  3640,
     624,   225,   624,  1133,  1134,  4085,  4086,  1137,   625,   626,
     370,   625,   626,   373,  4094,    24,   275,   135,  2304,   420,
     624,  2742,   624,  3532,   595,  1155,  1156,    95,   624,  3194,
     625,   626,    95,   368,  4089,   625,   626,   624,    73,   611,
     624,   611,   625,   626,   625,   626,   626,   611,   624,   370,
    2336,   370,   373,   625,   373,   625,   624,  4011,   624,  4130,
     219,   625,   370,   624,  2350,   373,   624,  3395,  3473,   624,
    3579,    73,   611,   624,  4145,   624,  3473,   625,   626,  2454,
    2455,  2367,   353,   625,   626,  2371,   625,  4158,   151,  2375,
     208,   624,   155,   370,   624,   611,   373,   356,   125,   625,
     626,   624,  2388,   198,  2390,   370,   426,   427,   373,   625,
     624,    12,   624,   611,   515,   329,   624,   370,  3875,  3876,
     373,   184,   624,   347,   362,   370,  2412,   625,   373,   353,
     625,   626,  2418,  2419,   624,   170,    31,   200,   329,   624,
      41,   624,   205,  4214,   153,   625,   626,   625,   626,   370,
    2525,   153,   373,  3982,   624,  4226,  4227,   624,   226,  2445,
     625,   626,   611,   226,   624,   566,   611,   624,  2454,  2455,
     233,   370,    12,   624,   373,   362,   625,   245,   498,   489,
     625,   611,   245,    11,   624,  3418,   624,    88,   256,   624,
     225,   624,    93,   256,   595,   625,   420,   624,   261,   625,
     626,  4272,   229,   624,  2388,   625,   626,   270,  2494,   304,
     305,  4282,   624,  2499,   309,   310,   225,  2495,  2504,   625,
     626,   117,  2508,   225,  2510,   626,   624,  2505,   624,   611,
     624,   611,   624,  2511,  2520,   624,  2522,  2523,   624,  2525,
    2526,   136,    48,   625,   515,   625,   624,  2533,  4319,  2535,
    4321,   611,   624,  4366,   624,   172,  2534,   272,  2544,    48,
    4331,  2539,   626,   477,   478,   625,  2552,  2545,  2546,   625,
     626,   339,   307,  2559,  2560,   103,   339,   362,  4349,   362,
    4351,   460,  4353,   179,   570,  2571,   477,   478,   619,  4360,
     611,   515,   611,   632,   122,   135,    15,    16,   307,   362,
    4371,   474,   561,   611,   625,   632,   625,   161,   371,   625,
     626,   207,   347,  3555,  3556,  4386,  4387,   625,   353,   215,
     624,   542,  3393,  3394,   595,   261,  3568,   184,  2512,  2513,
    4443,  4402,  4403,  3575,   611,  4049,  4407,   511,   401,   240,
     136,   236,   566,   542,   353,   347,   611,   530,   625,  2635,
    2636,   353,   625,   626,  2538,   626,  3598,   161,   611,  3601,
     625,   511,   190,   625,   626,   260,   611,   272,   208,  3090,
      24,   595,   625,   625,   626,   152,  2544,   625,   626,   275,
      82,   499,   500,   451,   502,   626,   504,   626,   451,  3229,
     611,   219,   111,   112,   113,   114,   115,   363,   516,   625,
     626,   615,   616,   617,   618,   619,   620,   621,   622,   526,
     437,   474,   611,   625,   626,   316,    25,    26,   420,    73,
    2604,  3142,   625,   626,   615,   616,   617,   618,   619,   620,
     621,   622,   349,   350,   329,   625,   626,   625,   355,   466,
    1570,   625,   626,   271,   625,   626,   145,   146,   516,    58,
      59,    60,   120,   516,   349,   350,   151,  3528,   106,    68,
     356,   117,   625,   626,    73,  3675,  3676,  2635,  1141,  1142,
     631,    35,    81,     6,  3377,  4087,  4088,  2763,   379,  2765,
     515,   624,  2768,  2769,  2770,  2771,  3213,  3214,  3170,  3171,
     117,  2777,   211,   212,   213,   214,     4,   106,   105,   153,
    4214,   465,  3849,  3455,  3456,   594,   515,   570,   236,  2795,
    1640,   120,  2798,   515,  1644,   124,   170,   626,   383,   582,
      55,   429,   166,   179,   115,   106,   216,  2813,   423,    25,
    2816,  2817,  2818,   329,  3767,   626,   626,   600,  1668,   602,
    3773,    68,    12,  2829,   153,   632,   110,    61,   599,   576,
     625,   207,   179,   117,   625,   135,     9,    71,  2933,   626,
     595,   629,   625,   626,   566,  3405,   629,   630,   632,    83,
     625,   225,    68,   401,   632,   625,  3981,    73,   625,   624,
     207,   260,   477,   478,  3981,   626,   595,   153,   632,   626,
     491,   631,   272,   595,   272,   490,   117,   624,   272,   120,
     319,   272,   321,   322,   323,  4319,    48,  4321,   172,  2777,
     272,   330,    35,   272,   223,   179,    73,   626,   626,   275,
      61,   230,   626,   214,   120,   155,   527,   530,  2914,   624,
      71,  2917,  2918,   267,  2920,  4349,   626,   384,   247,   556,
     626,   550,    83,   207,   472,  2829,   626,  2933,   275,   106,
    2936,   370,   550,   307,   373,   572,   383,   117,   179,   499,
     500,   501,   502,   503,   504,   561,  2952,  3738,  3739,   183,
    3741,  3742,  4386,  4387,  2960,   189,   516,  2861,  2964,    12,
     626,   477,   478,   155,   626,   626,   207,   110,    68,   408,
     236,   626,   619,   347,   117,   239,   153,   306,  2984,   353,
     356,  2987,   528,   531,   184,   533,  2992,    95,   174,   223,
     626,   275,  2998,   575,   626,   324,  3002,   487,  3004,   179,
     615,   616,   617,   618,   619,   620,   621,   622,   319,   356,
     387,    71,   323,  3019,   248,   131,   362,    25,    26,   330,
    2998,   626,   183,   625,   463,   464,  3032,   207,   189,   172,
    2934,   626,   248,  3039,   275,   155,   179,   155,   155,  2943,
    4165,   155,   155,   155,  3050,   155,   223,   626,  4165,   378,
      58,    59,    60,   155,   155,   577,   340,   386,   155,  1781,
      68,  1783,   223,   155,   207,    73,   155,   351,   155,   155,
     155,   355,   356,    81,   155,  3698,   512,   513,  4031,   155,
     516,   517,   155,   155,   520,   155,   522,   248,   155,  3952,
     155,   155,    76,   155,    78,   275,   606,   408,   106,  2987,
     616,   617,   618,   619,   620,   621,   622,   581,  1830,  1831,
    1832,   190,   120,   362,   362,   356,   124,   362,   226,   495,
    3024,  3216,   626,   183,   103,   625,   187,   456,   619,   306,
    3136,   625,   275,   349,   350,   187,   120,   245,  3144,   355,
     625,   515,   625,   625,   625,   153,   362,   324,   256,   383,
     625,  3039,  3712,   464,   625,   618,   626,   625,   597,   143,
     624,   626,   570,   223,   625,   399,   625,   625,   625,   625,
     347,   626,   611,   612,   613,  4242,   356,  3183,   475,   625,
     625,   624,   624,   399,   622,   561,   515,   624,   248,   539,
     625,  4076,   626,   550,   178,  3201,  3202,   340,   539,  3205,
     539,  3207,   531,   600,   224,   534,   624,   522,   624,   198,
    3216,   624,   355,   356,   561,   223,  3222,   187,  3800,   624,
     632,   595,   230,  3229,  3230,   258,   632,   187,   624,   632,
     209,   339,   625,   136,   626,   409,   626,   632,   399,   247,
    3144,   570,   474,    95,   184,   626,  3252,    46,   626,   337,
     465,   505,   260,   505,   470,   539,    71,  3263,   492,   543,
     383,    95,   546,   505,   383,   505,   505,  3273,  4335,  3275,
     550,   131,   556,   246,   383,   531,   383,   561,   246,  3285,
     564,   131,    46,   432,   383,  3291,   597,  3293,   531,  3295,
     383,  4416,  3855,   383,   385,   271,   624,   626,   306,  4416,
    4253,  4254,   613,  4256,  4429,   383,   383,   624,   624,  4434,
     582,   632,  4429,  3408,  4439,   625,   324,  4434,   149,   625,
     561,   232,  4439,   383,   232,   632,   625,   625,    13,    14,
     625,   492,  3236,   617,   618,   625,   625,   571,   515,   399,
     625,   155,   625,   451,   626,    30,   550,   626,   550,    34,
    4303,   632,  4305,  4306,   531,   571,   632,   103,   626,   795,
     539,  3367,   550,    48,    49,   267,    46,   624,   550,   607,
     378,    56,   155,   624,   226,    60,    61,   368,   386,   187,
     624,   561,   187,   187,   233,   187,  3392,  3393,  3394,   539,
      75,   539,   226,   245,   242,  3490,   539,   414,   377,   626,
     543,   356,  3408,   546,   256,   155,   626,   386,   516,    94,
     571,   245,   579,   556,   393,   245,   162,   245,   561,   320,
     374,   564,   256,   106,   106,   248,   329,   248,  4398,  4382,
     624,   116,  4059,   632,   367,  3998,   539,   421,  4061,     6,
     125,   126,   127,   624,   190,   550,    13,    14,   456,   200,
      18,   447,   624,   138,   139,   383,  3360,   632,    25,    26,
     619,   624,   234,  3469,   624,   234,   151,  3473,    33,   624,
     626,   625,   625,   625,   617,   618,   602,   223,   625,  3383,
     165,   626,  3577,   624,  3490,   625,   632,   339,   625,    56,
     625,   625,   619,    60,    61,   624,   181,   362,   219,    66,
     625,   155,   156,   262,   626,   339,    73,   515,   383,   488,
     362,   196,   187,   198,    81,   626,   236,   632,   203,   625,
     576,   206,  3528,   531,    91,   271,   534,   625,   362,   625,
     625,  3537,   414,   155,   245,   386,   245,   191,   362,   106,
    3546,  3539,   626,   248,   229,   248,   231,   602,   202,   624,
     624,   397,  4437,   120,   625,  3650,   362,   124,   626,   362,
      12,    13,   570,   128,   249,   132,   133,   626,   626,    73,
      18,  3577,   139,   624,   477,   478,   136,   625,   362,   626,
     147,   266,   362,   489,   151,   270,   153,   241,   153,   466,
     625,   625,   157,   624,   624,  3499,  3602,   164,   252,   451,
     579,   624,   356,  3609,   155,    54,   371,  4167,   602,   468,
     625,   625,   258,   449,    63,   182,   624,   451,   414,  3714,
     198,  3627,   142,    72,   254,   279,   177,   192,   625,   200,
     155,   626,   476,   121,  3640,    84,    85,    86,   245,   245,
     191,   626,    94,   624,  3650,   210,   120,   120,   533,  3537,
     396,   202,   101,   624,   221,   401,   223,   395,   624,    77,
     632,   138,  4289,   230,   516,   484,   625,   489,   461,   625,
      18,   261,   625,   125,  3578,   626,   236,  4300,   625,   625,
     247,   366,   516,   625,   625,   326,   625,   139,    33,   343,
      33,   625,   250,   625,  3700,   625,   625,   409,   383,   625,
     251,   252,   626,   368,   270,   602,   233,   272,  3714,   624,
     162,   396,  3616,   165,   617,   618,   619,   620,   621,   622,
     624,   626,   407,  3729,   176,   625,   472,    46,   279,   205,
     626,   326,  3738,  3739,  4297,  3741,  3742,   632,   155,   306,
     388,   582,   582,   624,   429,  4368,   198,   432,   624,   434,
     624,   624,   437,   624,   303,   440,   441,   324,   625,   592,
     624,   328,   624,   592,  4391,   450,  3861,   452,   120,   329,
     248,   223,   355,   248,    33,   460,   576,   229,   625,   356,
     356,   466,   624,   626,   326,   531,   168,   625,   248,   474,
     536,  4418,   539,   533,   479,   346,   481,   539,   539,   366,
    3806,  3807,   155,   582,   371,   586,   582,   233,   554,   362,
     351,   378,  3818,  3717,    13,   626,   383,  4440,   270,   386,
     587,   509,   136,   447,   602,   510,   356,   625,   625,   514,
      12,    13,   368,   579,   521,   400,   624,   576,   624,   624,
     150,   599,  3848,    30,   409,   184,   633,   398,   594,   381,
     417,   625,   625,   131,   625,  3861,   131,    73,   624,   424,
     541,   153,   401,    70,   431,   432,   433,   434,   184,   318,
     422,    87,   557,   510,   599,   187,    30,   442,    61,   368,
      61,   626,   625,   522,   569,   263,   335,  3893,   573,   456,
     624,   576,     5,   362,   362,    94,   581,   233,   149,   630,
    4130,   538,  3908,   368,   368,    54,   129,  3913,   138,   624,
      46,    46,    94,   129,    63,  4145,   148,   477,   478,  3807,
     485,    46,   236,    72,   609,    46,   125,    46,  4158,   624,
     624,   103,   576,   125,   149,    84,    85,    86,   599,   624,
     139,   218,   277,   125,   630,   119,   511,   144,   515,   633,
     402,   624,   101,    46,   406,    46,    46,   139,    52,   630,
    3848,  3865,   457,   162,   531,   530,   165,   534,   533,   455,
     422,   626,    33,   625,   625,  3981,   149,   176,   430,   542,
     162,  3987,   203,   165,   626,   630,   438,   216,   626,   625,
     557,   625,    52,   626,   176,  4090,   436,   446,   184,   198,
     184,    46,   542,   570,   184,   601,   120,  4013,   219,  4015,
     356,   624,   474,   462,   466,   329,   198,   189,   655,   186,
    3918,   626,  2092,   660,   223,  2290,  3369,   479,   480,  3370,
     229,  3625,  2483,  4062,   250,  4041,   638,  3945,  4233,  3623,
    4234,   223,  4272,   986,  3627,  4418,  3805,   229,  4379,  3953,
      46,   223,  4282,   567,   691,   615,   616,   617,   618,   619,
     620,   621,   622,   630,  1826,  2763,  1771,   128,  3797,   518,
     707,   270,  3797,   525,  3797,  3797,  4388,  3797,  3797,  3797,
    3797,  3797,  4269,  3797,  4090,  4123,   535,  4269,   270,  3797,
    4096,  4227,   153,  4188,    25,    26,   157,  4149,  3797,   271,
    3797,  4331,   554,  4148,  1025,  1480,  2045,  3814,  2790,  1482,
    2958,   327,  2350,  3183,   751,   752,   753,   754,  1296,  3849,
    4080,  4351,  3987,  4353,   576,  3471,   578,   764,   136,    60,
    4360,   192,  4335,   349,   350,  4250,   352,  4297,  1540,  3998,
     505,  4371,    73,  3386,  3025,  2636,  2038,  3295,  2046,   210,
      81,  3273,  2562,  4248,  3318,  3318,  3351,  3765,  3538,  4165,
    3586,  3577,  4167,   477,   478,  2454,  3127,  3130,  2720,   318,
    3122,    11,  4402,  4403,  4020,   106,    11,  4407,  4023,  3956,
    4084,  3968,  4188,  4024,  1554,  3964,   335,  3818,  2126,   120,
    2045,  3773,  1923,   124,  2555,   570,   412,  3274,  1435,  3543,
    2362,  1536,  1815,   402,  2777,  2329,  3178,  2379,  2246,  3799,
    1837,   272,  1489,   538,   585,   885,  1104,  3144,  2753,  2446,
     402,  3242,   153,   422,   406,  2160,  2073,  2074,  2245,  2076,
    4018,   430,  2079,  2080,  2081,  2082,  2083,  2084,  2085,   438,
     422,  2088,  4248,  2090,  3878,  4264,  3367,  4265,   430,  3730,
    2271,  1078,  4088,  3285,  4368,  3714,   438,  2384,  4264,  4265,
    2131,  2324,   972,  1215,   972,  1284,  1309,   466,  4274,  2366,
    3195,  4175,  4176,  3473,  3196,  4281,   972,  3252,   575,  4165,
     479,   480,   972,   651,   466,  1563,  1912,   566,  1412,   505,
    1384,  1913,   223,  3293,  1760,  1316,  3181,   479,   480,   230,
     472,   615,   616,   617,   618,   619,   620,   621,   622,  4333,
    4195,  4260,  4363,   462,  4439,  4434,   247,  3579,  3201,  1344,
     492,   329,  2409,  3229,   565,  1696,   525,  3230,   565,  1863,
    4425,  2402,  2401,  2395,  1334,   660,   867,  1797,  3838,   400,
     559,  1277,  1545,   525,  4350,  2765,   560,  3844,   409,  4355,
     872,   501,   638,   501,   638,   554,   638,    -1,    -1,   531,
      -1,   533,    -1,   424,   536,    -1,   691,    -1,    -1,   518,
    1007,    -1,   554,    -1,    -1,   306,    -1,   576,    -1,   578,
      -1,   442,   707,    -1,    -1,  4391,   535,    -1,    -1,    -1,
      -1,    -1,    -1,   324,   576,    -1,   578,    -1,    -1,   571,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   579,    -1,    -1,
    4416,    -1,  4418,    -1,   111,   112,   113,   114,   115,  4425,
      -1,    -1,    -1,  4429,   485,  1062,  1063,    -1,  4434,   754,
      -1,    -1,    -1,  4439,  1071,  1072,  1073,  1074,  1075,  1076,
    1077,    -1,    -1,    -1,    -1,    -1,    -1,   378,  1085,  1086,
     511,  1088,  1089,    -1,    -1,   386,  1093,  1094,    -1,    -1,
    1097,  1098,  1099,  1100,    -1,  1102,  1103,    -1,    -1,   477,
     478,    -1,    -1,  1110,  1111,    -1,  1113,  1114,  1115,  1116,
    1117,    -1,    -1,  1120,  1121,  1122,  1123,  1124,  1125,  1126,
    1127,  1128,  1129,  1130,    -1,  1132,    -1,    -1,  1135,  1136,
      -1,    -1,    -1,  1140,    -1,    -1,    -1,  1144,  1145,  1146,
      -1,    -1,    -1,    -1,   211,   212,   213,   214,    -1,    -1,
    1157,  1158,  1159,    -1,    -1,   456,    -1,    -1,    -1,  1166,
      -1,    -1,    -1,    -1,    -1,    -1,  1173,  1174,  1175,    -1,
    1177,    -1,    -1,    -1,    -1,    -1,    -1,  1184,  1185,  1186,
      -1,  1188,  1189,  1190,  1191,  1192,    -1,  1194,  1195,  1196,
    1197,  1198,  1199,  1200,  1201,    -1,    -1,    -1,  1205,  1206,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   515,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     531,    -1,    -1,   534,    -1,    -1,    -1,   615,   616,   617,
     618,   619,   620,   621,   622,    -1,    -1,    -1,    -1,    -1,
      25,    26,   319,    -1,   321,   322,   323,    -1,    -1,    -1,
      -1,    -1,    -1,   330,    -1,    -1,    -1,    -1,    -1,   570,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    58,    59,    60,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    68,    -1,    -1,    -1,    -1,    73,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    81,    -1,    -1,    -1,
      -1,    -1,  1007,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   106,    -1,    -1,    -1,    -1,    -1,  1344,    -1,    -1,
      -1,   408,    -1,    -1,    -1,   120,    -1,  1354,    -1,   124,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1369,    -1,    -1,  1372,    -1,  1062,  1063,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1071,  1072,   153,    -1,
    1075,  1076,  1077,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1085,  1086,    -1,  1088,  1089,    -1,   463,   464,  1093,    -1,
      -1,    -1,  1097,  1098,  1099,  1100,    -1,  1102,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1110,  1111,    -1,  1113,  1114,
      -1,    -1,    13,    14,    -1,  1120,  1121,  1122,    -1,    -1,
    1125,  1126,  1127,  1128,  1129,  1130,    -1,  1132,    -1,    -1,
    1135,  1136,    -1,    34,    -1,  1140,    -1,    -1,   223,  1144,
    1145,  1146,    -1,    -1,    -1,   230,    -1,    48,    49,    -1,
      -1,    -1,  1157,  1158,  1159,    56,    -1,    -1,    -1,    60,
      61,  1166,   247,    -1,    -1,    -1,    -1,    -1,  1173,  1174,
    1175,    -1,    -1,    -1,    75,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    94,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1206,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,
     597,   306,    -1,    -1,   125,   126,   127,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   612,   613,   138,   139,   324,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1576,
      -1,    -1,    -1,    -1,   165,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     181,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   378,    -1,   196,    -1,   198,    -1,    -1,
      -1,   386,   203,    -1,    -1,   206,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   220,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   229,    -1,
     231,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1344,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   249,  1354,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1674,  1675,  1676,
      -1,    -1,    -1,    -1,  1369,   266,    -1,  1372,    -1,   270,
      -1,   456,  1689,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,    -1,   291,   292,   293,   294,   295,   296,
     297,   298,   299,    -1,   301,   302,    -1,    -1,  1715,    -1,
      -1,    -1,    -1,    -1,  1721,    -1,    -1,  1724,    -1,  1726,
      -1,    -1,    -1,    -1,    -1,  1732,    -1,  1734,  1735,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     515,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   531,    -1,    -1,   534,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   366,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   383,    -1,    -1,   570,    32,    33,    -1,    -1,
      -1,    -1,    38,  1810,    40,   396,    42,    43,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   407,    -1,    -1,    -1,
      -1,    -1,    -1,    59,    -1,    -1,    -1,    -1,    -1,   426,
     427,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   429,    -1,
      -1,   432,    -1,   434,    -1,    -1,   437,    -1,    -1,   440,
     441,    -1,    -1,    -1,  1861,    -1,    -1,    -1,    -1,   450,
      -1,   452,    -1,  1870,    -1,    -1,    -1,    -1,    -1,   460,
      -1,   107,    -1,    -1,   110,   466,    -1,    -1,    -1,    -1,
      -1,  1576,   118,   474,    -1,    -1,    -1,    -1,   479,    -1,
     481,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   137,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   154,   510,
      -1,    -1,    -1,   514,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   178,    -1,   180,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   193,   194,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   557,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   569,  1674,
    1675,  1676,   573,    -1,    -1,   576,    -1,    -1,    -1,    -1,
     581,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   234,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   609,    -1,
    1715,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   264,  1724,
      -1,  1726,    -1,   624,    -1,    -1,    -1,   273,   274,    -1,
     276,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2067,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   312,   313,   314,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   331,   332,   333,    -1,    -1,
      -1,    -1,   338,    -1,    -1,   341,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1810,    -1,    -1,    -1,    -1,
      -1,    -1,   358,   359,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2140,    -1,    -1,    -1,  2144,    -1,    -1,
      -1,    -1,  2149,  2150,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2158,    -1,    -1,  2161,   391,   392,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2171,  2172,  1861,  2174,  2175,    -1,
    2177,  2178,  2179,  2180,  2181,    -1,    -1,  2184,    -1,    -1,
     416,    -1,    -1,    -1,    -1,    -1,  2193,    -1,    -1,    -1,
      -1,    -1,    -1,  2200,    -1,  2202,    -1,  2204,  2205,    -1,
    2207,  2208,    -1,    -1,    -1,  2212,  2213,  2214,    -1,    -1,
      -1,  2218,  2219,  2220,    -1,  2222,    -1,  2224,    -1,  2226,
      -1,  2228,    -1,  2230,    -1,    -1,    -1,    -1,  2235,    -1,
      -1,    -1,    -1,    -1,   470,    -1,    -1,    -1,   474,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2254,    -1,    -1,
     486,    23,    -1,    -1,  2261,    -1,    -1,  2264,    -1,    -1,
      -1,    33,    34,  2270,    -1,    -1,  2273,    -1,    -1,    -1,
    2277,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    58,    59,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    69,    -1,    -1,
      -1,    -1,    -1,    -1,   540,    -1,    -1,   543,    -1,    -1,
     546,   547,   548,   549,    -1,    -1,    -1,    -1,    90,    -1,
      92,    -1,    94,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2337,    -1,   104,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   588,   589,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2067,    -1,    -1,    -1,    -1,   613,    -1,    -1,
     152,   153,    -1,    -1,    -1,    -1,   158,    -1,    -1,   161,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2410,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   188,    -1,   190,    -1,
      -1,    -1,    -1,    -1,    -1,   197,    -1,   199,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2140,    -1,    -1,    -1,  2144,
     222,   223,    -1,    -1,  2149,  2150,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2158,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   246,    -1,  2171,  2172,    -1,  2174,
      -1,    -1,  2177,  2178,  2179,  2180,  2181,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   267,    -1,    -1,  2193,    -1,
      -1,     6,    -1,    -1,    -1,  2200,    -1,  2202,    13,  2204,
    2205,    -1,  2207,    -1,    -1,    -1,    -1,  2212,  2213,  2214,
      25,    26,    -1,  2218,  2219,  2220,    -1,  2222,   300,  2224,
      -1,  2226,    -1,  2228,    -1,  2230,    -1,    -1,    -1,    -1,
    2235,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    56,    -1,    -1,    -1,    60,    -1,    -1,    -1,  2254,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    73,    -1,
      -1,    -1,    -1,    -1,    -1,  2270,    81,    -1,  2273,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    91,    -1,    -1,    -1,
      -1,    -1,    -1,   365,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   106,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   120,    -1,    -1,   390,   124,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   132,   400,   401,
      -1,    -1,   404,   405,   139,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   147,    -1,    -1,    -1,    -1,    -1,   153,    -1,
    2657,    -1,    -1,   425,  2661,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2681,  2682,    -1,   182,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2702,    -1,    -1,    -1,   471,
      -1,    -1,    -1,    -1,  2711,    -1,  2713,    -1,  2715,    -1,
      -1,    -1,   484,    -1,    -1,  2410,    -1,    -1,   223,    -1,
      -1,    -1,    -1,    -1,    -1,   230,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2742,    -1,    -1,    -1,   511,
    2747,    -1,   247,   515,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   533,    -1,    -1,    -1,    -1,  2773,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   306,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   590,   324,
      -1,    -1,    -1,   328,   596,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2844,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   371,    -1,    -1,    -1,
      -1,    -1,    -1,   378,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   386,  2889,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   432,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   456,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2657,    -1,    -1,    -1,  2661,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2681,  2682,  2995,  2996,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2702,    -1,    -1,
     515,    -1,    -1,    -1,    -1,    -1,  2711,    -1,  2713,    -1,
    2715,    -1,    -1,    -1,    -1,    -1,   531,    -1,    -1,   534,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3058,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   570,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3083,    -1,  2773,    -1,
    3087,  3088,    -1,  3090,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3099,    -1,    -1,    -1,    -1,  3104,    -1,    -1,
    3107,    -1,  3109,  3110,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3142,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2844,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3172,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3195,    -1,
      -1,    -1,    -1,    -1,  2889,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3254,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3262,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2995,  2996,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3058,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3083,    -1,
      -1,    -1,  3087,  3088,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3099,    -1,    -1,    -1,    -1,  3104,
      -1,    -1,  3107,    -1,  3109,  3110,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3474,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3172,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3195,    -1,    -1,    -1,  3511,  3512,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3520,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3254,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3262,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3661,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3695,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3709,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3474,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3797,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3511,  3512,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3520,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3849,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3859,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3867,    -1,  3869,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3905,    -1,
      -1,    -1,    -1,    -1,  3911,  3912,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3661,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4003,    -1,    -1,    -1,
    3695,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3709,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4034,    -1,  4036,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4046,
      -1,  4048,  4049,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4071,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4128,    -1,  4130,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4145,  4146,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4158,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4166,
      -1,    -1,    -1,    -1,  3859,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3867,    -1,  3869,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4213,  4214,    -1,    -1,
    3905,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4226,
    4227,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4242,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4272,    -1,    -1,    -1,    -1,
      -1,    -1,  4279,    -1,    -1,  4282,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4312,    -1,    -1,  4003,    -1,
      -1,    -1,  4319,    -1,  4321,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4331,    -1,    -1,    -1,  4335,    -1,
      -1,  4338,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4034,
      -1,  4036,  4349,    -1,  4351,    -1,  4353,    -1,    -1,    -1,
      -1,  4046,    -1,  4360,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4371,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4386,
    4387,    -1,    -1,    -1,    -1,  4392,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4402,  4403,    -1,    -1,    -1,
    4407,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4128,    -1,  4442,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4146,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4166,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4213,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4279,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     5,    -1,
       7,     8,     9,    10,    11,    -1,    -1,  4312,    -1,    -1,
      17,    -1,    -1,    20,    -1,    22,    23,    24,    25,    26,
      27,    28,    -1,    30,    -1,    -1,    33,    34,    35,    36,
      37,    38,    39,  4338,    41,    42,    43,    44,    45,    -1,
      47,    48,    -1,    -1,    51,    52,    53,    54,    55,    -1,
      57,    58,    59,    60,    -1,    62,    63,    64,    65,    66,
      67,    -1,    69,    70,    -1,    72,    73,    74,    75,    76,
      77,    78,    79,    -1,    81,    82,    -1,    84,    85,    86,
      87,    88,    -1,    90,    91,    92,    93,  4392,    -1,    96,
      97,    98,    99,    -1,   101,   102,   103,    -1,   105,   106,
     107,   108,   109,   110,    -1,    -1,    -1,    -1,   115,   116,
     117,    -1,    -1,   120,   121,   122,    -1,   124,    -1,    -1,
      -1,   128,    -1,   130,   131,   132,   133,   134,    -1,    -1,
      -1,   138,    -1,    -1,   141,   142,   143,  4442,    -1,    -1,
     147,    -1,   149,   150,    -1,   152,   153,   154,    -1,    -1,
     157,   158,    -1,   160,   161,   162,   163,   164,   165,   166,
      -1,   168,   169,   170,   171,   172,   173,   174,    -1,   176,
     177,   178,   179,    -1,   181,    -1,    -1,    -1,   185,   186,
      -1,   188,    -1,   190,    -1,   192,   193,   194,   195,    -1,
     197,    -1,   199,    -1,   201,    -1,   203,   204,    -1,   206,
     207,    -1,   209,   210,    -1,    -1,    -1,   214,   215,   216,
     217,   218,    -1,   220,   221,   222,    -1,    -1,   225,    -1,
      -1,    -1,   229,   230,   231,   232,    -1,    -1,   235,    -1,
      -1,    -1,   239,   240,    -1,   242,   243,    -1,    -1,    -1,
     247,    -1,    -1,   250,   251,    -1,   253,   254,    -1,   256,
     257,   258,    -1,    -1,    -1,    -1,    -1,   264,   265,    -1,
     267,    -1,   269,    -1,   271,   272,    -1,    -1,   275,    -1,
      -1,    -1,    -1,   280,    -1,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,    -1,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,    -1,    -1,    -1,    -1,   315,   316,
     317,   318,   319,   320,    -1,    -1,   323,   324,   325,   326,
      -1,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,    -1,   340,   341,   342,    -1,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,   355,   356,
     357,    -1,   359,   360,   361,    -1,   363,   364,   365,    -1,
     367,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     377,   378,   379,   380,   381,   382,    -1,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,    -1,   396,
     397,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
      -1,   408,   409,   410,    -1,    -1,   413,    -1,    -1,    -1,
     417,   418,   419,   420,   421,    -1,    -1,   424,   425,   426,
     427,   428,    -1,   430,   431,    -1,   433,   434,   435,   436,
     437,   438,    -1,   440,    -1,   442,   443,    -1,   445,   446,
     447,    -1,   449,    -1,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,    -1,   464,   465,    -1,
      -1,    -1,   469,   470,   471,   472,    -1,    -1,    -1,   476,
      -1,    -1,    -1,   480,    -1,   482,   483,   484,   485,    -1,
     487,   488,   489,   490,   491,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   500,   501,    -1,   503,    -1,    -1,   506,
      -1,    -1,   509,   510,   511,   512,   513,   514,   515,    -1,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,    -1,    -1,   534,   535,   536,
     537,    -1,   539,   540,   541,    -1,   543,   544,   545,   546,
      -1,    -1,    -1,    -1,   551,   552,   553,    -1,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
      -1,   568,   569,    -1,    -1,   572,    -1,    -1,   575,    -1,
     577,    -1,   579,   580,    -1,    -1,   583,   584,   585,   586,
     587,    -1,    -1,   590,   591,    -1,   593,   594,   595,   596,
     597,   598,    -1,    -1,    -1,    -1,    -1,    -1,   605,   606,
      -1,   608,   609,   610,    -1,    -1,   613,    -1,    -1,    -1,
     617,   618,    -1,    -1,    -1,    -1,   623,   624,    -1,    -1,
     627,   628,    -1,    -1,   631,   632,     5,    -1,     7,     8,
       9,    10,    11,    12,    -1,    -1,    -1,    -1,    17,    -1,
      -1,    20,    -1,    22,    23,    24,    25,    26,    27,    28,
      -1,    30,    -1,    -1,    33,    34,    35,    36,    37,    38,
      39,    -1,    41,    42,    43,    -1,    45,    -1,    47,    48,
      -1,    -1,    51,    52,    53,    54,    55,    -1,    57,    58,
      59,    60,    -1,    62,    63,    64,    65,    66,    67,    -1,
      69,    70,    -1,    72,    73,    74,    75,    76,    77,    78,
      79,    -1,    81,    82,    -1,    84,    85,    86,    87,    88,
      -1,    90,    91,    92,    93,    -1,    -1,    96,    97,    98,
      99,    -1,   101,   102,   103,    -1,   105,   106,   107,   108,
     109,   110,    -1,    -1,    -1,    -1,   115,   116,   117,    -1,
      -1,   120,   121,   122,    -1,   124,    -1,    -1,    -1,   128,
      -1,   130,   131,   132,   133,   134,    -1,    -1,    -1,   138,
      -1,    -1,   141,   142,   143,    -1,    -1,    -1,   147,    -1,
     149,   150,    -1,   152,   153,   154,    -1,    -1,   157,   158,
      -1,   160,   161,   162,   163,   164,   165,   166,    -1,   168,
     169,   170,   171,   172,   173,   174,    -1,   176,   177,   178,
     179,    -1,   181,    -1,    -1,    -1,   185,   186,    -1,   188,
      -1,   190,    -1,   192,   193,   194,   195,    -1,   197,    -1,
     199,    -1,   201,    -1,   203,   204,    -1,   206,   207,    -1,
     209,   210,    -1,    -1,    -1,   214,   215,   216,   217,   218,
      -1,   220,   221,   222,    -1,    -1,   225,    -1,    -1,    -1,
     229,   230,   231,   232,    -1,    -1,   235,    -1,    -1,    -1,
     239,   240,    -1,   242,   243,    -1,    -1,    -1,   247,    -1,
      -1,   250,   251,    -1,    -1,   254,    -1,   256,   257,   258,
      -1,    -1,    -1,    -1,    -1,   264,   265,    -1,   267,    -1,
     269,    -1,   271,   272,    -1,    -1,   275,    -1,    -1,    -1,
      -1,   280,    -1,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
      -1,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,    -1,    -1,    -1,    -1,   315,   316,   317,   318,
     319,   320,    -1,    -1,   323,   324,   325,   326,    -1,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
      -1,   340,   341,   342,    -1,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,   355,   356,   357,    -1,
     359,   360,   361,   362,   363,   364,   365,    -1,   367,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   377,   378,
     379,   380,   381,   382,    -1,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,    -1,   396,   397,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,    -1,   408,
     409,   410,    -1,    -1,   413,    -1,    -1,    -1,   417,   418,
     419,   420,   421,    -1,    -1,   424,   425,   426,   427,   428,
      -1,   430,   431,    -1,   433,   434,   435,   436,   437,   438,
      -1,   440,    -1,   442,   443,    -1,   445,   446,   447,    -1,
     449,    -1,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,    -1,   464,   465,    -1,    -1,    -1,
     469,   470,   471,   472,    -1,    -1,    -1,   476,    -1,    -1,
      -1,   480,    -1,   482,   483,   484,   485,    -1,   487,   488,
     489,   490,   491,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   500,   501,    -1,   503,    -1,    -1,   506,    -1,    -1,
     509,   510,   511,   512,   513,   514,   515,    -1,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,    -1,    -1,   534,   535,   536,   537,    -1,
     539,   540,   541,    -1,   543,   544,   545,   546,    -1,    -1,
      -1,    -1,    -1,   552,   553,    -1,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,    -1,   568,
     569,    -1,    -1,   572,    -1,    -1,   575,    -1,   577,    -1,
     579,   580,    -1,    -1,   583,   584,   585,   586,   587,    -1,
      -1,   590,   591,    -1,   593,   594,   595,   596,   597,   598,
      -1,    -1,    -1,    -1,    -1,    -1,   605,   606,    -1,   608,
     609,   610,    -1,    -1,   613,    -1,    -1,    -1,   617,   618,
      -1,    -1,    -1,    -1,   623,   624,    -1,    -1,   627,   628,
      -1,    -1,   631,   632,     5,    -1,     7,     8,     9,    10,
      11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,    20,
      -1,    22,    23,    24,    25,    26,    27,    28,    -1,    30,
      -1,    -1,    33,    34,    35,    36,    37,    38,    39,    -1,
      41,    42,    43,    -1,    45,    -1,    47,    48,    -1,    -1,
      51,    52,    53,    54,    55,    -1,    57,    58,    59,    60,
      -1,    62,    63,    64,    65,    66,    67,    -1,    69,    70,
      -1,    72,    73,    74,    75,    76,    77,    78,    79,    -1,
      81,    82,    -1,    84,    85,    86,    87,    88,    -1,    90,
      91,    92,    93,    -1,    -1,    96,    97,    98,    99,    -1,
     101,   102,   103,    -1,   105,   106,   107,   108,   109,   110,
      -1,    -1,    -1,    -1,   115,   116,   117,    -1,    -1,   120,
     121,   122,    -1,   124,    -1,    -1,    -1,   128,    -1,   130,
     131,   132,   133,   134,    -1,    -1,    -1,   138,    -1,    -1,
     141,   142,   143,    -1,    -1,    -1,   147,    -1,   149,   150,
      -1,   152,   153,   154,    -1,    -1,   157,   158,    -1,   160,
     161,   162,   163,   164,   165,   166,    -1,   168,   169,   170,
     171,   172,   173,   174,    -1,   176,   177,   178,   179,    -1,
     181,    -1,    -1,    -1,   185,   186,   187,   188,    -1,   190,
      -1,   192,   193,   194,   195,    -1,   197,    -1,   199,    -1,
     201,    -1,   203,   204,    -1,   206,   207,    -1,   209,   210,
      -1,    -1,    -1,   214,   215,   216,   217,   218,    -1,   220,
     221,   222,    -1,    -1,   225,    -1,    -1,    -1,   229,   230,
     231,   232,    -1,    -1,   235,    -1,    -1,    -1,   239,   240,
      -1,   242,   243,    -1,    -1,    -1,   247,    -1,    -1,   250,
     251,    -1,    -1,   254,    -1,   256,   257,   258,    -1,    -1,
      -1,    -1,    -1,   264,   265,    -1,   267,    -1,   269,    -1,
     271,   272,    -1,    -1,   275,    -1,    -1,    -1,    -1,   280,
      -1,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,    -1,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
      -1,    -1,    -1,    -1,   315,   316,   317,   318,   319,   320,
      -1,    -1,   323,   324,   325,   326,    -1,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,    -1,   340,
     341,   342,    -1,    -1,   345,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,   355,   356,   357,    -1,   359,   360,
     361,    -1,   363,   364,   365,    -1,   367,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   377,   378,   379,   380,
     381,   382,    -1,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,    -1,   396,   397,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,    -1,   408,   409,   410,
      -1,    -1,   413,    -1,    -1,    -1,   417,   418,   419,   420,
     421,    -1,    -1,   424,   425,   426,   427,   428,    -1,   430,
     431,    -1,   433,   434,   435,   436,   437,   438,    -1,   440,
      -1,   442,   443,    -1,   445,   446,   447,    -1,   449,    -1,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,    -1,   464,   465,    -1,    -1,    -1,   469,   470,
     471,   472,    -1,    -1,    -1,   476,    -1,    -1,    -1,   480,
      -1,   482,   483,   484,   485,    -1,   487,   488,   489,   490,
     491,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   500,
     501,    -1,   503,    -1,    -1,   506,    -1,    -1,   509,   510,
     511,   512,   513,   514,   515,    -1,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,    -1,    -1,   534,   535,   536,   537,    -1,   539,   540,
     541,    -1,   543,   544,   545,   546,    -1,    -1,    -1,    -1,
      -1,   552,   553,    -1,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,    -1,   568,   569,    -1,
      -1,   572,    -1,    -1,   575,    -1,   577,    -1,   579,   580,
      -1,    -1,   583,   584,   585,   586,   587,    -1,    -1,   590,
     591,    -1,   593,   594,   595,   596,   597,   598,    -1,    -1,
      -1,    -1,    -1,    -1,   605,   606,    -1,   608,   609,   610,
      -1,    -1,   613,    -1,    -1,    -1,   617,   618,    -1,    -1,
      -1,    -1,   623,   624,    -1,    -1,   627,   628,    -1,    -1,
     631,   632,     5,    -1,     7,     8,     9,    10,    11,    -1,
      -1,    -1,    -1,    -1,    17,    -1,    -1,    20,    -1,    22,
      23,    24,    25,    26,    27,    28,    -1,    30,    -1,    -1,
      33,    34,    35,    36,    37,    38,    39,    -1,    41,    42,
      43,    -1,    45,    -1,    47,    48,    -1,    -1,    51,    52,
      53,    54,    55,    -1,    57,    58,    59,    60,    -1,    62,
      63,    64,    65,    66,    67,    -1,    69,    70,    -1,    72,
      73,    74,    75,    76,    77,    78,    79,    -1,    81,    82,
      -1,    84,    85,    86,    87,    88,    -1,    90,    91,    92,
      93,    -1,    -1,    96,    97,    98,    99,    -1,   101,   102,
     103,    -1,   105,   106,   107,   108,   109,   110,    -1,    -1,
      -1,    -1,   115,   116,   117,    -1,    -1,   120,   121,   122,
      -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,
     133,   134,    -1,    -1,    -1,   138,    -1,    -1,   141,   142,
     143,    -1,    -1,    -1,   147,    -1,   149,   150,    -1,   152,
     153,   154,    -1,    -1,   157,   158,    -1,   160,   161,   162,
     163,   164,   165,   166,    -1,   168,   169,   170,   171,   172,
     173,   174,    -1,   176,   177,   178,   179,    -1,   181,    -1,
      -1,    -1,   185,   186,   187,   188,    -1,   190,    -1,   192,
     193,   194,   195,    -1,   197,    -1,   199,    -1,   201,    -1,
     203,   204,    -1,   206,   207,    -1,   209,   210,    -1,    -1,
      -1,   214,   215,   216,   217,   218,    -1,   220,   221,   222,
      -1,    -1,   225,    -1,    -1,    -1,   229,   230,   231,   232,
      -1,    -1,   235,    -1,    -1,    -1,   239,   240,    -1,   242,
     243,    -1,    -1,    -1,   247,    -1,    -1,   250,   251,    -1,
      -1,   254,    -1,   256,   257,   258,    -1,    -1,    -1,    -1,
      -1,   264,   265,    -1,   267,    -1,   269,    -1,   271,   272,
      -1,    -1,   275,    -1,    -1,    -1,    -1,   280,    -1,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,    -1,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,    -1,    -1,
      -1,    -1,   315,   316,   317,   318,   319,   320,    -1,    -1,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,   340,   341,   342,
      -1,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,   355,   356,   357,    -1,   359,   360,   361,    -1,
     363,   364,   365,    -1,   367,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   377,   378,   379,   380,   381,   382,
      -1,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,    -1,   396,   397,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,    -1,   408,   409,   410,    -1,    -1,
     413,    -1,    -1,    -1,   417,   418,   419,   420,   421,    -1,
      -1,   424,   425,   426,   427,   428,    -1,   430,   431,    -1,
     433,   434,   435,   436,   437,   438,    -1,   440,    -1,   442,
     443,    -1,   445,   446,   447,    -1,   449,    -1,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
      -1,   464,   465,    -1,    -1,    -1,   469,   470,   471,   472,
      -1,    -1,    -1,   476,    -1,    -1,    -1,   480,    -1,   482,
     483,   484,   485,    -1,   487,   488,   489,   490,   491,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   500,   501,    -1,
     503,    -1,    -1,   506,    -1,    -1,   509,   510,   511,   512,
     513,   514,   515,    -1,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,    -1,
      -1,   534,   535,   536,   537,    -1,   539,   540,   541,    -1,
     543,   544,   545,   546,    -1,    -1,    -1,    -1,    -1,   552,
     553,    -1,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,    -1,   568,   569,    -1,    -1,   572,
      -1,    -1,   575,    -1,   577,    -1,   579,   580,    -1,    -1,
     583,   584,   585,   586,   587,    -1,    -1,   590,   591,    -1,
     593,   594,   595,   596,   597,   598,    -1,    -1,    -1,    -1,
      -1,    -1,   605,   606,    -1,   608,   609,   610,    -1,    -1,
     613,    -1,    -1,    -1,   617,   618,    -1,    -1,    -1,    -1,
     623,   624,    -1,    -1,   627,   628,    -1,    -1,   631,   632,
       5,    -1,     7,     8,     9,    10,    11,    -1,    -1,    -1,
      -1,    -1,    17,    -1,    -1,    20,    -1,    22,    23,    24,
      25,    26,    27,    28,    -1,    30,    -1,    -1,    33,    34,
      35,    36,    37,    38,    39,    -1,    41,    42,    43,    -1,
      45,    -1,    47,    48,    -1,    -1,    51,    52,    53,    54,
      55,    -1,    57,    58,    59,    60,    -1,    62,    63,    64,
      65,    66,    67,    -1,    69,    70,    -1,    72,    73,    74,
      75,    76,    77,    78,    79,    -1,    81,    82,    -1,    84,
      85,    86,    87,    88,    -1,    90,    91,    92,    93,    -1,
      -1,    96,    97,    98,    99,    -1,   101,   102,   103,    -1,
     105,   106,   107,   108,   109,   110,    -1,    -1,    -1,    -1,
     115,   116,   117,    -1,    -1,   120,   121,   122,    -1,   124,
      -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,   134,
      -1,    -1,    -1,   138,    -1,    -1,   141,   142,   143,    -1,
      -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,   154,
      -1,    -1,   157,   158,    -1,   160,   161,   162,   163,   164,
     165,   166,    -1,   168,   169,   170,   171,   172,   173,   174,
      -1,   176,   177,   178,   179,    -1,   181,    -1,    -1,    -1,
     185,   186,   187,   188,    -1,   190,    -1,   192,   193,   194,
     195,    -1,   197,    -1,   199,    -1,   201,    -1,   203,   204,
      -1,   206,   207,    -1,   209,   210,    -1,    -1,    -1,   214,
     215,   216,   217,   218,    -1,   220,   221,   222,    -1,    -1,
     225,    -1,    -1,    -1,   229,   230,   231,   232,    -1,    -1,
     235,    -1,    -1,    -1,   239,   240,    -1,   242,   243,    -1,
      -1,    -1,   247,    -1,    -1,   250,   251,    -1,    -1,   254,
      -1,   256,   257,   258,    -1,    -1,    -1,    -1,    -1,   264,
     265,    -1,   267,    -1,   269,    -1,   271,   272,    -1,    -1,
     275,    -1,    -1,    -1,    -1,   280,    -1,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,    -1,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,    -1,    -1,    -1,    -1,
     315,   316,   317,   318,   319,   320,    -1,    -1,   323,   324,
     325,   326,    -1,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,    -1,   340,   341,   342,    -1,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
     355,   356,   357,    -1,   359,   360,   361,    -1,   363,   364,
     365,    -1,   367,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   377,   378,   379,   380,   381,   382,    -1,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
      -1,   396,   397,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,    -1,   408,   409,   410,    -1,    -1,   413,    -1,
      -1,    -1,   417,   418,   419,   420,   421,    -1,    -1,   424,
     425,   426,   427,   428,    -1,   430,   431,    -1,   433,   434,
     435,   436,   437,   438,    -1,   440,    -1,   442,   443,    -1,
     445,   446,   447,    -1,   449,    -1,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,    -1,   464,
     465,    -1,    -1,    -1,   469,   470,   471,   472,    -1,    -1,
      -1,   476,    -1,    -1,    -1,   480,    -1,   482,   483,   484,
     485,    -1,   487,   488,   489,   490,   491,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   500,   501,    -1,   503,    -1,
      -1,   506,    -1,    -1,   509,   510,   511,   512,   513,   514,
     515,    -1,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,    -1,    -1,   534,
     535,   536,   537,    -1,   539,   540,   541,    -1,   543,   544,
     545,   546,    -1,    -1,    -1,    -1,    -1,   552,   553,    -1,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,    -1,   568,   569,    -1,    -1,   572,    -1,    -1,
     575,    -1,   577,    -1,   579,   580,    -1,    -1,   583,   584,
     585,   586,   587,    -1,    -1,   590,   591,    -1,   593,   594,
     595,   596,   597,   598,    -1,    -1,    -1,    -1,    -1,    -1,
     605,   606,    -1,   608,   609,   610,    -1,    -1,   613,    -1,
      -1,    -1,   617,   618,    -1,    -1,    -1,    -1,   623,   624,
      -1,    -1,   627,   628,    -1,    -1,   631,   632,     5,    -1,
       7,     8,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,
      17,    -1,    -1,    20,    -1,    22,    23,    24,    25,    26,
      27,    28,    -1,    30,    -1,    -1,    33,    34,    35,    36,
      37,    38,    39,    -1,    41,    42,    43,    -1,    45,    -1,
      47,    48,    -1,    -1,    51,    52,    53,    54,    55,    -1,
      57,    58,    59,    60,    -1,    62,    63,    64,    65,    66,
      67,    -1,    69,    70,    -1,    72,    73,    74,    75,    76,
      77,    78,    79,    -1,    81,    82,    -1,    84,    85,    86,
      87,    88,    -1,    90,    91,    92,    93,    -1,    -1,    96,
      97,    98,    99,    -1,   101,   102,   103,    -1,   105,   106,
     107,   108,   109,   110,    -1,    -1,    -1,    -1,   115,   116,
     117,    -1,    -1,   120,   121,   122,    -1,   124,    -1,    -1,
      -1,   128,    -1,   130,   131,   132,   133,   134,    -1,    -1,
      -1,   138,    -1,    -1,   141,   142,   143,    -1,    -1,    -1,
     147,    -1,   149,   150,    -1,   152,   153,   154,    -1,    -1,
     157,   158,    -1,   160,   161,   162,   163,   164,   165,   166,
      -1,   168,   169,   170,   171,   172,   173,   174,    -1,   176,
     177,   178,   179,    -1,   181,    -1,    -1,    -1,   185,   186,
      -1,   188,    -1,   190,    -1,   192,   193,   194,   195,    -1,
     197,    -1,   199,    -1,   201,    -1,   203,   204,    -1,   206,
     207,    -1,   209,   210,    -1,    -1,    -1,   214,   215,   216,
     217,   218,    -1,   220,   221,   222,    -1,    -1,   225,    -1,
      -1,    -1,   229,   230,   231,   232,    -1,    -1,   235,    -1,
      -1,    -1,   239,   240,    -1,   242,   243,    -1,    -1,    -1,
     247,    -1,    -1,   250,   251,    -1,    -1,   254,    -1,   256,
     257,   258,    -1,    -1,    -1,    -1,    -1,   264,   265,    -1,
     267,    -1,   269,    -1,   271,   272,    -1,    -1,   275,    -1,
      -1,    -1,    -1,   280,    -1,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,    -1,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,    -1,    -1,    -1,    -1,   315,   316,
     317,   318,   319,   320,    -1,    -1,   323,   324,   325,   326,
      -1,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,    -1,   340,   341,   342,    -1,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,   355,   356,
     357,    -1,   359,   360,   361,    -1,   363,   364,   365,    -1,
     367,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     377,   378,   379,   380,   381,   382,    -1,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,    -1,   396,
     397,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
      -1,   408,   409,   410,    -1,    -1,   413,    -1,    -1,    -1,
     417,   418,   419,   420,   421,    -1,    -1,   424,   425,   426,
     427,   428,    -1,   430,   431,    -1,   433,   434,   435,   436,
     437,   438,    -1,   440,    -1,   442,   443,    -1,   445,   446,
     447,    -1,   449,    -1,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,    -1,   464,   465,    -1,
      -1,    -1,   469,   470,   471,   472,    -1,    -1,    -1,   476,
      -1,    -1,    -1,   480,    -1,   482,   483,   484,   485,    -1,
     487,   488,   489,   490,   491,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   500,   501,    -1,   503,    -1,    -1,   506,
      -1,    -1,   509,   510,   511,   512,   513,   514,   515,    -1,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,    -1,    -1,   534,   535,   536,
     537,    -1,   539,   540,   541,    -1,   543,   544,   545,   546,
      -1,    -1,    -1,    -1,    -1,   552,   553,    -1,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
      -1,   568,   569,    -1,    -1,   572,    -1,    -1,   575,    -1,
     577,    -1,   579,   580,    -1,    -1,   583,   584,   585,   586,
     587,    -1,    -1,   590,   591,    -1,   593,   594,   595,   596,
     597,   598,    -1,    -1,    -1,    -1,    -1,    -1,   605,   606,
      -1,   608,   609,   610,    -1,    -1,   613,    -1,    -1,    -1,
     617,   618,    -1,    -1,    -1,    -1,   623,   624,    -1,    -1,
     627,   628,    -1,    -1,   631,   632,     5,    -1,     7,     8,
       9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,
      -1,    20,    -1,    22,    23,    24,    25,    26,    27,    28,
      -1,    30,    -1,    -1,    33,    34,    35,    36,    37,    38,
      39,    -1,    41,    42,    43,    -1,    45,    -1,    47,    48,
      -1,    -1,    51,    52,    53,    54,    55,    -1,    57,    58,
      59,    60,    -1,    62,    63,    64,    65,    66,    67,    -1,
      69,    70,    -1,    72,    73,    74,    75,    76,    77,    78,
      79,    -1,    81,    82,    -1,    84,    85,    86,    87,    88,
      -1,    90,    91,    92,    93,    -1,    -1,    96,    97,    98,
      99,    -1,   101,   102,   103,    -1,   105,   106,   107,   108,
     109,   110,    -1,    -1,    -1,    -1,   115,   116,   117,    -1,
      -1,   120,   121,   122,    -1,   124,    -1,    -1,    -1,   128,
      -1,   130,   131,   132,   133,   134,    -1,    -1,    -1,   138,
      -1,    -1,   141,   142,   143,    -1,    -1,    -1,   147,    -1,
     149,   150,    -1,   152,   153,   154,    -1,    -1,   157,   158,
      -1,   160,   161,   162,   163,   164,   165,   166,    -1,   168,
     169,   170,   171,   172,   173,   174,    -1,   176,   177,   178,
     179,    -1,   181,    -1,    -1,    -1,   185,   186,    -1,   188,
      -1,   190,    -1,   192,   193,   194,   195,    -1,   197,    -1,
     199,    -1,   201,    -1,   203,   204,    -1,   206,   207,    -1,
     209,   210,    -1,    -1,    -1,   214,   215,   216,   217,   218,
      -1,   220,   221,   222,    -1,    -1,   225,    -1,    -1,    -1,
     229,   230,   231,   232,    -1,    -1,   235,    -1,    -1,    -1,
     239,   240,    -1,   242,   243,    -1,    -1,    -1,   247,    -1,
      -1,   250,   251,    -1,    -1,   254,    -1,   256,   257,   258,
      -1,    -1,    -1,    -1,    -1,   264,   265,    -1,   267,    -1,
     269,    -1,   271,   272,    -1,    -1,   275,    -1,    -1,    -1,
      -1,   280,    -1,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
      -1,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,    -1,    -1,    -1,    -1,   315,   316,   317,   318,
     319,   320,    -1,    -1,   323,   324,   325,   326,    -1,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
      -1,   340,   341,   342,    -1,    -1,   345,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,   355,   356,   357,    -1,
     359,   360,   361,    -1,   363,   364,   365,    -1,   367,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   377,   378,
     379,   380,   381,   382,    -1,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,    -1,   396,   397,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,    -1,   408,
     409,   410,    -1,    -1,   413,    -1,    -1,    -1,   417,   418,
     419,   420,   421,    -1,    -1,   424,   425,   426,   427,   428,
      -1,   430,   431,    -1,   433,   434,   435,   436,   437,   438,
      -1,   440,    -1,   442,   443,    -1,   445,   446,   447,    -1,
     449,    -1,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,    -1,   464,   465,    -1,    -1,    -1,
     469,   470,   471,   472,    -1,    -1,    -1,   476,    -1,    -1,
      -1,   480,    -1,   482,   483,   484,   485,    -1,   487,   488,
     489,   490,   491,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   500,   501,    -1,   503,    -1,    -1,   506,    -1,    -1,
     509,   510,   511,   512,   513,   514,   515,    -1,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,    -1,    -1,   534,   535,   536,   537,    -1,
     539,   540,   541,    -1,   543,   544,   545,   546,    -1,    -1,
      -1,    -1,    -1,   552,   553,    -1,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,    -1,   568,
     569,    -1,    -1,   572,    -1,    -1,   575,    -1,   577,    -1,
     579,   580,    -1,    -1,   583,   584,   585,   586,   587,    -1,
      -1,   590,   591,    -1,   593,   594,   595,   596,   597,   598,
      -1,    -1,    -1,    -1,    -1,    -1,   605,   606,    -1,   608,
     609,   610,    -1,    -1,   613,    -1,    -1,    -1,   617,   618,
      -1,    -1,    -1,    -1,   623,   624,    -1,    -1,   627,   628,
      -1,    -1,   631,   632,     5,    -1,     7,     8,     9,    10,
      11,    12,    -1,    -1,    -1,    -1,    17,    -1,    -1,    20,
      -1,    22,    23,    24,    25,    26,    27,    28,    -1,    30,
      -1,    -1,    33,    34,    35,    36,    37,    38,    39,    -1,
      41,    42,    43,    -1,    45,    -1,    47,    48,    -1,    -1,
      51,    52,    53,    54,    55,    -1,    57,    58,    59,    60,
      -1,    62,    63,    64,    65,    66,    67,    -1,    69,    70,
      -1,    72,    73,    74,    75,    76,    77,    78,    79,    -1,
      81,    82,    -1,    84,    85,    86,    87,    88,    -1,    90,
      91,    92,    93,    -1,    -1,    96,    97,    98,    99,    -1,
     101,   102,   103,    -1,   105,   106,   107,   108,   109,   110,
      -1,    -1,    -1,    -1,   115,   116,   117,    -1,    -1,   120,
     121,   122,    -1,   124,    -1,    -1,    -1,   128,    -1,   130,
     131,   132,   133,   134,    -1,    -1,    -1,   138,    -1,    -1,
     141,   142,   143,    -1,    -1,    -1,   147,    -1,   149,   150,
      -1,   152,   153,   154,    -1,    -1,   157,   158,    -1,   160,
     161,   162,   163,   164,   165,   166,    -1,   168,   169,   170,
     171,   172,   173,   174,    -1,   176,   177,   178,   179,    -1,
     181,    -1,    -1,    -1,   185,   186,    -1,   188,    -1,   190,
      -1,   192,   193,   194,   195,    -1,   197,    -1,   199,    -1,
     201,    -1,   203,   204,    -1,   206,   207,    -1,   209,   210,
      -1,    -1,    -1,   214,   215,   216,   217,   218,    -1,   220,
     221,   222,    -1,    -1,   225,    -1,    -1,    -1,   229,   230,
     231,   232,    -1,    -1,   235,    -1,    -1,    -1,   239,   240,
      -1,   242,   243,    -1,    -1,    -1,   247,    -1,    -1,   250,
     251,    -1,    -1,   254,    -1,   256,   257,   258,    -1,    -1,
      -1,    -1,    -1,   264,   265,    -1,   267,    -1,   269,    -1,
     271,   272,    -1,    -1,   275,    -1,    -1,    -1,    -1,   280,
      -1,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,    -1,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
      -1,    -1,    -1,    -1,   315,   316,   317,   318,   319,   320,
      -1,    -1,   323,   324,   325,   326,    -1,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,    -1,   340,
     341,   342,    -1,    -1,   345,   346,   347,   348,   349,    -1,
     351,   352,   353,    -1,   355,   356,   357,    -1,   359,   360,
     361,    -1,   363,   364,   365,    -1,   367,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   377,   378,   379,   380,
     381,   382,    -1,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,    -1,   396,   397,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,    -1,   408,   409,   410,
      -1,    -1,   413,    -1,    -1,    -1,   417,   418,   419,   420,
     421,    -1,    -1,   424,   425,   426,   427,   428,    -1,   430,
     431,    -1,   433,   434,   435,   436,   437,   438,    -1,   440,
      -1,   442,   443,    -1,   445,   446,   447,    -1,   449,    -1,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,    -1,   464,   465,    -1,    -1,    -1,   469,   470,
     471,   472,    -1,    -1,    -1,   476,    -1,    -1,    -1,   480,
      -1,   482,   483,   484,   485,    -1,   487,   488,   489,   490,
     491,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   500,
     501,    -1,   503,    -1,    -1,   506,    -1,    -1,   509,   510,
     511,   512,   513,   514,   515,    -1,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,    -1,    -1,   534,   535,   536,   537,    -1,   539,   540,
     541,    -1,   543,   544,   545,   546,    -1,    -1,    -1,    -1,
      -1,   552,   553,    -1,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,    -1,   568,   569,    -1,
      -1,   572,    -1,    -1,   575,    -1,   577,    -1,   579,   580,
      -1,    -1,   583,   584,   585,   586,   587,    -1,    -1,   590,
     591,    -1,   593,   594,   595,   596,   597,   598,    -1,    -1,
      -1,    -1,    -1,    -1,   605,   606,    -1,   608,   609,   610,
      -1,    -1,   613,    -1,    -1,    -1,   617,   618,    -1,    -1,
      -1,    -1,   623,   624,    -1,    -1,   627,   628,    -1,    -1,
     631,   632,     5,    -1,     7,     8,     9,    10,    11,    -1,
      -1,    -1,    -1,    -1,    17,    -1,    -1,    20,    -1,    22,
      23,    24,    25,    26,    27,    28,    -1,    30,    -1,    -1,
      33,    34,    35,    36,    37,    38,    39,    -1,    41,    42,
      43,    -1,    45,    -1,    47,    48,    -1,    -1,    51,    52,
      53,    54,    55,    -1,    57,    58,    59,    60,    -1,    62,
      63,    64,    65,    66,    67,    -1,    69,    70,    -1,    72,
      73,    74,    75,    76,    77,    78,    79,    -1,    81,    82,
      -1,    84,    85,    86,    87,    88,    -1,    90,    91,    92,
      93,    -1,    -1,    96,    97,    98,    99,    -1,   101,   102,
     103,    -1,   105,   106,   107,   108,   109,   110,    -1,    -1,
      -1,    -1,   115,   116,   117,    -1,    -1,   120,   121,   122,
      -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,
     133,   134,    -1,    -1,    -1,   138,    -1,    -1,   141,   142,
     143,    -1,    -1,    -1,   147,    -1,   149,   150,    -1,   152,
     153,   154,    -1,    -1,   157,   158,    -1,   160,   161,   162,
     163,   164,   165,   166,    -1,   168,   169,   170,   171,   172,
     173,   174,    -1,   176,   177,   178,   179,    -1,   181,    -1,
      -1,    -1,   185,   186,    -1,   188,    -1,   190,    -1,   192,
     193,   194,   195,    -1,   197,    -1,   199,    -1,   201,    -1,
     203,   204,    -1,   206,   207,    -1,   209,   210,    -1,    -1,
      -1,   214,   215,   216,   217,   218,    -1,   220,   221,   222,
      -1,    -1,   225,    -1,    -1,    -1,   229,   230,   231,   232,
      -1,    -1,   235,    -1,    -1,    -1,   239,   240,    -1,   242,
     243,    -1,    -1,    -1,   247,    -1,    -1,   250,   251,    -1,
      -1,   254,    -1,   256,   257,   258,    -1,    -1,    -1,    -1,
      -1,   264,   265,    -1,   267,    -1,   269,    -1,   271,   272,
      -1,    -1,   275,    -1,    -1,    -1,    -1,   280,    -1,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,    -1,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,    -1,    -1,
      -1,    -1,   315,   316,   317,   318,   319,   320,    -1,    -1,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,   340,   341,   342,
      -1,    -1,   345,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,   355,   356,   357,    -1,   359,   360,   361,    -1,
     363,   364,   365,    -1,   367,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   377,   378,   379,   380,   381,   382,
      -1,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,    -1,   396,   397,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,    -1,   408,   409,   410,    -1,    -1,
     413,    -1,    -1,    -1,   417,   418,   419,   420,   421,    -1,
      -1,   424,   425,   426,   427,   428,    -1,   430,   431,    -1,
     433,   434,   435,   436,   437,   438,    -1,   440,    -1,   442,
     443,    -1,   445,   446,   447,    -1,   449,    -1,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
      -1,   464,   465,    -1,    -1,    -1,   469,   470,   471,   472,
      -1,    -1,    -1,   476,    -1,    -1,    -1,   480,    -1,   482,
     483,   484,   485,    -1,   487,   488,   489,   490,   491,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   500,   501,    -1,
     503,    -1,    -1,   506,    -1,    -1,   509,   510,   511,   512,
     513,   514,   515,    -1,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,    -1,
      -1,   534,   535,   536,   537,    -1,   539,   540,   541,    -1,
     543,   544,   545,   546,    -1,    -1,    -1,    -1,    -1,   552,
     553,    -1,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,    -1,   568,   569,    -1,    -1,   572,
      -1,    -1,   575,    -1,   577,    -1,   579,   580,    -1,    -1,
     583,   584,   585,   586,   587,    -1,    -1,   590,   591,    -1,
     593,   594,   595,   596,   597,   598,    -1,    -1,    -1,    -1,
      -1,    -1,   605,   606,    -1,   608,   609,   610,    -1,    -1,
     613,    -1,    -1,    -1,   617,   618,    -1,    -1,    -1,    -1,
     623,   624,    -1,    -1,   627,   628,    -1,    -1,   631,   632,
       5,    -1,     7,     8,     9,    10,    11,    -1,    -1,    -1,
      -1,    -1,    17,    -1,    -1,    20,    -1,    22,    23,    24,
      25,    26,    27,    28,    -1,    30,    -1,    -1,    33,    34,
      35,    36,    37,    38,    39,    -1,    41,    42,    43,    -1,
      45,    -1,    47,    48,    -1,    -1,    51,    52,    53,    54,
      55,    -1,    57,    58,    59,    60,    -1,    62,    63,    64,
      65,    66,    67,    -1,    69,    70,    -1,    72,    73,    74,
      75,    76,    77,    78,    79,    -1,    81,    82,    -1,    84,
      85,    86,    87,    88,    -1,    90,    91,    92,    93,    -1,
      -1,    96,    97,    98,    99,    -1,   101,   102,   103,    -1,
     105,   106,   107,   108,   109,   110,    -1,    -1,    -1,    -1,
     115,   116,   117,    -1,    -1,   120,   121,   122,    -1,   124,
      -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,   134,
      -1,    -1,    -1,   138,    -1,    -1,   141,   142,   143,    -1,
      -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,   154,
      -1,    -1,   157,   158,    -1,   160,   161,   162,   163,   164,
     165,   166,    -1,   168,   169,   170,   171,   172,   173,   174,
      -1,   176,   177,   178,   179,    -1,   181,    -1,    -1,    -1,
     185,   186,    -1,   188,    -1,   190,    -1,   192,   193,   194,
     195,    -1,   197,    -1,   199,    -1,   201,    -1,   203,   204,
      -1,   206,   207,    -1,   209,   210,    -1,    -1,    -1,   214,
     215,   216,   217,   218,    -1,   220,   221,   222,    -1,    -1,
     225,    -1,    -1,    -1,   229,   230,   231,   232,    -1,    -1,
     235,    -1,    -1,    -1,   239,   240,    -1,   242,   243,    -1,
      -1,    -1,   247,    -1,    -1,   250,   251,    -1,    -1,   254,
      -1,   256,   257,   258,    -1,    -1,    -1,    -1,    -1,   264,
     265,    -1,   267,    -1,   269,    -1,   271,   272,    -1,    -1,
     275,    -1,    -1,    -1,    -1,   280,    -1,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,    -1,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,    -1,    -1,    -1,    -1,
     315,   316,   317,   318,   319,   320,    -1,    -1,   323,   324,
     325,   326,    -1,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,    -1,   340,   341,   342,    -1,    -1,
     345,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
     355,   356,   357,    -1,   359,   360,   361,    -1,   363,   364,
     365,    -1,   367,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   377,   378,   379,   380,   381,   382,    -1,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
      -1,   396,   397,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,    -1,   408,   409,   410,    -1,    -1,   413,    -1,
      -1,    -1,   417,   418,   419,   420,   421,    -1,    -1,   424,
     425,   426,   427,   428,    -1,   430,   431,    -1,   433,   434,
     435,   436,   437,   438,    -1,   440,    -1,   442,   443,    -1,
     445,   446,   447,    -1,   449,    -1,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,    -1,   464,
     465,    -1,    -1,    -1,   469,   470,   471,   472,    -1,    -1,
      -1,   476,    -1,    -1,    -1,   480,    -1,   482,   483,   484,
     485,    -1,   487,   488,   489,   490,   491,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   500,   501,    -1,   503,    -1,
      -1,   506,    -1,    -1,   509,   510,   511,   512,   513,   514,
     515,    -1,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,    -1,    -1,   534,
     535,   536,   537,    -1,   539,   540,   541,    -1,   543,   544,
     545,   546,    -1,    -1,    -1,    -1,    -1,   552,   553,    -1,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,    -1,   568,   569,    -1,    -1,   572,    -1,    -1,
     575,    -1,   577,    -1,   579,   580,    -1,    -1,   583,   584,
     585,   586,   587,    -1,    -1,   590,   591,    -1,   593,   594,
     595,   596,   597,   598,    -1,    -1,    -1,    -1,    -1,    -1,
     605,   606,    -1,   608,   609,   610,    -1,    -1,   613,    -1,
      -1,    -1,   617,   618,    -1,    -1,    -1,    -1,   623,   624,
      -1,    -1,   627,   628,    -1,    -1,   631,   632,     5,    -1,
       7,     8,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,
      17,    -1,    -1,    20,    -1,    22,    23,    24,    25,    26,
      27,    28,    -1,    30,    -1,    -1,    33,    34,    35,    36,
      37,    38,    39,    -1,    41,    42,    43,    -1,    45,    -1,
      47,    48,    -1,    -1,    51,    52,    53,    54,    55,    -1,
      57,    58,    59,    60,    -1,    62,    63,    64,    65,    66,
      67,    -1,    69,    70,    -1,    72,    73,    74,    75,    76,
      77,    78,    79,    -1,    81,    82,    -1,    84,    85,    86,
      87,    88,    -1,    90,    91,    92,    93,    -1,    -1,    96,
      97,    98,    99,    -1,   101,   102,   103,    -1,   105,   106,
     107,   108,   109,   110,    -1,    -1,    -1,    -1,   115,   116,
     117,    -1,    -1,   120,   121,   122,    -1,   124,    -1,    -1,
      -1,   128,    -1,   130,   131,   132,   133,   134,    -1,    -1,
      -1,   138,    -1,    -1,   141,   142,   143,    -1,    -1,    -1,
     147,    -1,   149,   150,    -1,   152,   153,   154,    -1,    -1,
     157,   158,    -1,   160,   161,   162,   163,   164,   165,   166,
      -1,   168,   169,   170,   171,   172,   173,   174,    -1,   176,
     177,   178,   179,    -1,   181,    -1,    -1,    -1,   185,   186,
      -1,   188,    -1,   190,    -1,   192,   193,   194,   195,    -1,
     197,    -1,   199,    -1,   201,    -1,   203,   204,    -1,   206,
     207,    -1,   209,   210,    -1,    -1,    -1,   214,   215,   216,
     217,   218,    -1,   220,   221,   222,    -1,    -1,   225,    -1,
      -1,    -1,   229,   230,   231,   232,    -1,    -1,   235,    -1,
      -1,    -1,   239,   240,    -1,   242,   243,    -1,    -1,    -1,
     247,    -1,    -1,   250,   251,    -1,    -1,   254,    -1,   256,
     257,   258,    -1,    -1,    -1,    -1,    -1,   264,   265,    -1,
     267,    -1,   269,    -1,   271,   272,    -1,    -1,   275,    -1,
      -1,    -1,    -1,   280,    -1,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,    -1,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,    -1,    -1,    -1,    -1,   315,   316,
     317,   318,   319,   320,    -1,    -1,   323,   324,   325,   326,
      -1,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,    -1,   340,   341,   342,    -1,    -1,   345,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,   355,   356,
     357,    -1,   359,   360,   361,    -1,   363,   364,   365,    -1,
     367,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     377,   378,   379,   380,   381,   382,    -1,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,    -1,   396,
     397,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
      -1,   408,   409,   410,    -1,    -1,   413,    -1,    -1,    -1,
     417,   418,   419,   420,   421,    -1,    -1,   424,   425,   426,
     427,   428,    -1,   430,   431,    -1,   433,   434,   435,   436,
     437,   438,    -1,   440,    -1,   442,   443,    -1,   445,   446,
     447,    -1,   449,    -1,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,    -1,   464,   465,    -1,
      -1,    -1,   469,   470,   471,   472,    -1,    -1,    -1,   476,
      -1,    -1,    -1,   480,    -1,   482,   483,   484,   485,    -1,
     487,   488,   489,   490,   491,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   500,   501,    -1,   503,    -1,    -1,   506,
      -1,    -1,   509,   510,   511,   512,   513,   514,   515,    -1,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,    -1,    -1,   534,   535,   536,
     537,    -1,   539,   540,   541,    -1,   543,   544,   545,   546,
      -1,    -1,    -1,    -1,    -1,   552,   553,    -1,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
      -1,   568,   569,    -1,    -1,   572,    -1,    -1,   575,    -1,
     577,    -1,   579,   580,    -1,    -1,   583,   584,   585,   586,
     587,    -1,    -1,   590,   591,    -1,   593,   594,   595,   596,
     597,   598,    -1,    -1,    -1,    -1,    -1,    -1,   605,   606,
      -1,   608,   609,   610,    -1,    -1,   613,    -1,    -1,    -1,
     617,   618,    -1,    -1,    -1,    -1,   623,   624,    -1,    -1,
     627,   628,    -1,    -1,   631,   632,     5,    -1,     7,     8,
       9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,
      -1,    20,    -1,    22,    23,    24,    25,    26,    27,    28,
      -1,    30,    -1,    -1,    33,    34,    35,    36,    37,    38,
      39,    -1,    41,    42,    43,    -1,    45,    -1,    47,    48,
      -1,    -1,    51,    52,    53,    54,    55,    -1,    57,    58,
      59,    60,    -1,    62,    63,    64,    65,    66,    67,    -1,
      69,    70,    -1,    72,    73,    74,    75,    76,    77,    78,
      79,    -1,    81,    82,    -1,    84,    85,    86,    87,    88,
      -1,    90,    91,    92,    93,    -1,    -1,    96,    97,    98,
      99,    -1,   101,   102,   103,    -1,   105,   106,   107,   108,
     109,   110,    -1,    -1,    -1,    -1,   115,   116,   117,    -1,
      -1,   120,   121,   122,    -1,   124,    -1,    -1,    -1,   128,
      -1,   130,   131,   132,   133,   134,    -1,    -1,    -1,   138,
      -1,    -1,   141,   142,   143,    -1,    -1,    -1,   147,    -1,
     149,   150,    -1,   152,   153,   154,    -1,    -1,   157,   158,
      -1,   160,   161,   162,   163,   164,   165,   166,    -1,   168,
     169,   170,   171,   172,   173,   174,    -1,   176,   177,   178,
     179,    -1,   181,    -1,    -1,    -1,   185,   186,    -1,   188,
      -1,   190,    -1,   192,   193,   194,   195,    -1,   197,    -1,
     199,    -1,   201,    -1,   203,   204,    -1,   206,   207,    -1,
     209,   210,    -1,    -1,    -1,   214,   215,   216,   217,   218,
      -1,   220,   221,   222,    -1,    -1,   225,    -1,    -1,    -1,
     229,   230,   231,   232,    -1,    -1,   235,    -1,    -1,    -1,
     239,   240,    -1,   242,   243,    -1,    -1,    -1,   247,    -1,
      -1,   250,   251,    -1,    -1,   254,    -1,   256,   257,   258,
      -1,    -1,    -1,    -1,    -1,   264,   265,    -1,   267,    -1,
     269,    -1,   271,   272,    -1,    -1,   275,    -1,    -1,    -1,
      -1,   280,    -1,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
      -1,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,    -1,    -1,    -1,   315,   316,   317,   318,
     319,   320,    -1,    -1,   323,   324,   325,   326,    -1,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
      -1,   340,   341,   342,    -1,    -1,   345,   346,   347,   348,
     349,    -1,   351,   352,   353,    -1,   355,   356,   357,    -1,
     359,   360,   361,    -1,   363,   364,   365,    -1,   367,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   377,   378,
     379,   380,   381,   382,    -1,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,    -1,   396,   397,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,    -1,   408,
     409,   410,    -1,    -1,   413,    -1,    -1,    -1,   417,   418,
     419,   420,   421,    -1,    -1,   424,   425,   426,   427,   428,
      -1,   430,   431,    -1,   433,   434,   435,   436,   437,   438,
      -1,   440,    -1,   442,   443,    -1,   445,   446,   447,    -1,
     449,    -1,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,    -1,   464,   465,    -1,    -1,    -1,
     469,   470,   471,   472,    -1,    -1,    -1,   476,    -1,    -1,
      -1,   480,    -1,   482,   483,   484,   485,    -1,   487,   488,
     489,   490,   491,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   500,   501,    -1,   503,    -1,    -1,   506,    -1,    -1,
     509,   510,   511,   512,   513,   514,   515,    -1,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,    -1,    -1,   534,   535,   536,   537,    -1,
     539,   540,   541,    -1,   543,   544,   545,   546,    -1,    -1,
      -1,    -1,    -1,   552,   553,    -1,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,    -1,   568,
     569,    -1,    -1,   572,    -1,    -1,   575,    -1,   577,    -1,
     579,   580,    -1,    -1,   583,   584,   585,   586,   587,    -1,
      -1,   590,   591,    -1,   593,   594,   595,   596,   597,   598,
      -1,    -1,    -1,    -1,    -1,    -1,   605,   606,    -1,   608,
     609,   610,    -1,    -1,   613,    -1,    -1,    -1,   617,   618,
      -1,    -1,    -1,    -1,   623,   624,    -1,    -1,   627,   628,
      -1,    -1,   631,   632,     5,    -1,     7,     8,     9,    10,
      11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,    20,
      -1,    22,    23,    24,    25,    26,    27,    28,    -1,    30,
      -1,    -1,    33,    34,    35,    36,    37,    38,    39,    -1,
      41,    42,    43,    -1,    45,    -1,    47,    48,    -1,    -1,
      51,    52,    53,    54,    55,    -1,    57,    58,    59,    60,
      -1,    62,    63,    64,    65,    66,    67,    -1,    69,    70,
      -1,    72,    73,    74,    75,    76,    77,    78,    79,    -1,
      81,    82,    -1,    84,    85,    86,    87,    88,    -1,    90,
      91,    92,    93,    -1,    -1,    96,    97,    98,    99,    -1,
     101,   102,   103,    -1,   105,   106,   107,   108,   109,   110,
      -1,    -1,    -1,    -1,   115,   116,   117,    -1,    -1,   120,
     121,   122,    -1,   124,    -1,    -1,    -1,   128,    -1,   130,
     131,   132,   133,   134,    -1,    -1,    -1,   138,    -1,    -1,
     141,   142,   143,    -1,    -1,    -1,   147,    -1,   149,   150,
      -1,   152,   153,   154,    -1,    -1,   157,   158,    -1,   160,
     161,   162,   163,   164,   165,   166,    -1,   168,   169,   170,
     171,   172,   173,   174,    -1,   176,   177,   178,   179,    -1,
     181,    -1,    -1,    -1,   185,   186,    -1,   188,    -1,   190,
      -1,   192,   193,   194,   195,    -1,   197,    -1,   199,    -1,
     201,    -1,   203,   204,    -1,   206,   207,    -1,   209,   210,
      -1,    -1,    -1,   214,   215,   216,   217,   218,    -1,   220,
     221,   222,    -1,    -1,   225,    -1,    -1,    -1,   229,   230,
     231,   232,    -1,    -1,   235,    -1,    -1,    -1,   239,   240,
      -1,   242,   243,    -1,    -1,    -1,   247,    -1,    -1,   250,
     251,    -1,    -1,   254,    -1,   256,   257,   258,    -1,    -1,
      -1,    -1,    -1,   264,   265,    -1,   267,    -1,   269,    -1,
     271,   272,    -1,    -1,   275,    -1,    -1,    -1,    -1,   280,
      -1,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,    -1,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
      -1,    -1,    -1,    -1,   315,   316,   317,   318,   319,   320,
      -1,    -1,   323,   324,   325,   326,    -1,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,    -1,   340,
     341,   342,    -1,    -1,   345,   346,   347,   348,   349,    -1,
     351,   352,   353,    -1,   355,   356,   357,    -1,   359,   360,
     361,    -1,   363,   364,   365,    -1,   367,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   377,   378,   379,   380,
     381,   382,    -1,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,    -1,   396,   397,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,    -1,   408,   409,   410,
      -1,    -1,   413,    -1,    -1,    -1,   417,   418,   419,   420,
     421,    -1,    -1,   424,   425,   426,   427,   428,    -1,   430,
     431,    -1,   433,   434,   435,   436,   437,   438,    -1,   440,
      -1,   442,   443,    -1,   445,   446,   447,    -1,   449,    -1,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,    -1,   464,   465,    -1,    -1,    -1,   469,   470,
     471,   472,    -1,    -1,    -1,   476,    -1,    -1,    -1,   480,
      -1,   482,   483,   484,   485,    -1,   487,   488,   489,   490,
     491,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   500,
     501,    -1,   503,    -1,    -1,   506,    -1,    -1,   509,   510,
     511,   512,   513,   514,   515,    -1,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,    -1,    -1,   534,   535,   536,   537,    -1,   539,   540,
     541,    -1,   543,   544,   545,   546,    -1,    -1,    -1,    -1,
      -1,   552,   553,    -1,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,    -1,   568,   569,    -1,
      -1,   572,    -1,    -1,   575,    -1,   577,    -1,   579,   580,
      -1,    -1,   583,   584,   585,   586,   587,    -1,    -1,   590,
     591,    -1,   593,   594,   595,   596,   597,   598,    -1,    -1,
      -1,    -1,    -1,    -1,   605,   606,    -1,   608,   609,   610,
      -1,    -1,   613,    -1,    -1,    -1,   617,   618,    -1,    -1,
      -1,    -1,   623,   624,    -1,    -1,   627,   628,    -1,    -1,
     631,   632,     5,    -1,     7,     8,     9,    10,    11,    -1,
      -1,    -1,    -1,    -1,    17,    -1,    -1,    20,    -1,    22,
      23,    24,    25,    26,    27,    28,    -1,    30,    -1,    -1,
      33,    34,    35,    36,    37,    38,    39,    -1,    41,    42,
      43,    -1,    45,    -1,    47,    48,    -1,    -1,    51,    52,
      53,    54,    55,    -1,    57,    58,    59,    60,    -1,    62,
      63,    64,    65,    66,    67,    -1,    69,    70,    -1,    72,
      73,    74,    75,    76,    77,    78,    79,    -1,    81,    82,
      -1,    84,    85,    86,    87,    88,    -1,    90,    91,    92,
      93,    -1,    -1,    96,    97,    98,    99,    -1,   101,   102,
     103,    -1,   105,   106,   107,   108,   109,   110,    -1,    -1,
      -1,    -1,   115,   116,   117,    -1,    -1,   120,   121,   122,
      -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,
     133,   134,    -1,    -1,    -1,   138,    -1,    -1,   141,   142,
     143,    -1,    -1,    -1,   147,    -1,   149,   150,    -1,   152,
     153,   154,    -1,    -1,   157,   158,    -1,   160,   161,   162,
     163,   164,   165,   166,    -1,   168,   169,   170,   171,   172,
     173,   174,    -1,   176,   177,   178,   179,    -1,   181,    -1,
      -1,    -1,   185,   186,    -1,   188,    -1,   190,    -1,   192,
     193,   194,   195,    -1,   197,    -1,   199,    -1,   201,    -1,
     203,   204,    -1,   206,   207,    -1,   209,   210,    -1,    -1,
      -1,   214,   215,   216,   217,   218,    -1,   220,   221,   222,
      -1,    -1,   225,    -1,    -1,    -1,   229,   230,   231,   232,
      -1,    -1,   235,    -1,    -1,    -1,   239,   240,    -1,   242,
     243,    -1,    -1,    -1,   247,    -1,    -1,   250,   251,    -1,
      -1,   254,    -1,   256,   257,   258,    -1,    -1,    -1,    -1,
      -1,   264,   265,    -1,   267,    -1,   269,    -1,   271,   272,
      -1,    -1,   275,    -1,    -1,    -1,    -1,   280,    -1,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,    -1,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,    -1,    -1,
      -1,    -1,   315,   316,   317,   318,   319,   320,    -1,    -1,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,   340,   341,   342,
      -1,    -1,   345,   346,   347,   348,   349,    -1,   351,   352,
     353,    -1,   355,   356,   357,    -1,   359,   360,   361,    -1,
     363,   364,   365,    -1,   367,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   377,   378,   379,   380,   381,   382,
      -1,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,    -1,   396,   397,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,    -1,   408,   409,   410,    -1,    -1,
     413,    -1,    -1,    -1,   417,   418,   419,   420,   421,    -1,
      -1,   424,   425,   426,   427,   428,    -1,   430,   431,    -1,
     433,   434,   435,   436,   437,   438,    -1,   440,    -1,   442,
     443,    -1,   445,   446,   447,    -1,   449,    -1,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
      -1,   464,   465,    -1,    -1,    -1,   469,   470,   471,   472,
      -1,    -1,    -1,   476,    -1,    -1,    -1,   480,    -1,   482,
     483,   484,   485,    -1,   487,   488,   489,   490,   491,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   500,   501,    -1,
     503,    -1,    -1,   506,    -1,    -1,   509,   510,   511,   512,
     513,   514,   515,    -1,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,    -1,
      -1,   534,   535,   536,   537,    -1,   539,   540,   541,    -1,
     543,   544,   545,   546,    -1,    -1,    -1,    -1,    -1,   552,
     553,    -1,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,    -1,   568,   569,    -1,    -1,   572,
      -1,    -1,   575,    -1,   577,    -1,   579,   580,    -1,    -1,
     583,   584,   585,   586,   587,    -1,    -1,   590,   591,    -1,
     593,   594,   595,   596,   597,   598,    -1,    -1,    -1,    -1,
      -1,    -1,   605,   606,    -1,   608,   609,   610,    -1,    -1,
     613,    -1,    -1,    -1,   617,   618,    -1,    -1,    -1,    -1,
     623,   624,    -1,    -1,   627,   628,    -1,    -1,   631,   632,
       5,    -1,     7,     8,     9,    10,    11,    -1,    -1,    -1,
      -1,    -1,    17,    -1,    -1,    20,    -1,    22,    23,    24,
      25,    26,    27,    28,    -1,    30,    -1,    -1,    33,    34,
      35,    36,    37,    38,    39,    -1,    41,    42,    43,    -1,
      45,    -1,    47,    48,    -1,    -1,    51,    52,    53,    54,
      55,    -1,    57,    58,    59,    60,    -1,    62,    63,    64,
      65,    66,    67,    -1,    69,    70,    -1,    72,    73,    74,
      75,    76,    77,    78,    79,    -1,    81,    82,    -1,    84,
      85,    86,    87,    88,    -1,    90,    91,    92,    93,    -1,
      -1,    96,    97,    98,    99,    -1,   101,   102,   103,    -1,
     105,   106,   107,   108,   109,   110,    -1,    -1,    -1,    -1,
     115,   116,   117,    -1,    -1,   120,   121,   122,    -1,   124,
      -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,   134,
      -1,    -1,    -1,   138,    -1,    -1,   141,   142,   143,    -1,
      -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,   154,
      -1,    -1,   157,   158,    -1,   160,   161,   162,   163,   164,
     165,   166,    -1,   168,   169,   170,   171,   172,   173,   174,
      -1,   176,   177,   178,   179,    -1,   181,    -1,    -1,    -1,
     185,   186,    -1,   188,    -1,   190,    -1,   192,   193,   194,
     195,    -1,   197,    -1,   199,    -1,   201,    -1,   203,   204,
      -1,   206,   207,    -1,   209,   210,    -1,    -1,    -1,   214,
     215,   216,   217,   218,    -1,   220,   221,   222,    -1,    -1,
     225,    -1,    -1,    -1,   229,   230,   231,   232,    -1,    -1,
     235,    -1,    -1,    -1,   239,   240,    -1,   242,   243,    -1,
      -1,    -1,   247,    -1,    -1,   250,   251,    -1,    -1,   254,
      -1,   256,   257,   258,    -1,    -1,    -1,    -1,    -1,   264,
     265,    -1,   267,    -1,   269,    -1,   271,   272,    -1,    -1,
     275,    -1,    -1,    -1,    -1,   280,    -1,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,    -1,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,    -1,    -1,    -1,    -1,
     315,   316,   317,   318,   319,   320,    -1,    -1,   323,   324,
     325,   326,    -1,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,    -1,   340,   341,   342,    -1,    -1,
     345,   346,   347,   348,   349,    -1,   351,   352,   353,    -1,
     355,   356,   357,    -1,   359,   360,   361,    -1,   363,   364,
     365,    -1,   367,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   377,   378,   379,   380,   381,   382,    -1,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
      -1,   396,   397,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,    -1,   408,   409,   410,    -1,    -1,   413,    -1,
      -1,    -1,   417,   418,   419,   420,   421,    -1,    -1,   424,
     425,   426,   427,   428,    -1,   430,   431,    -1,   433,   434,
     435,   436,   437,   438,    -1,   440,    -1,   442,   443,    -1,
     445,   446,   447,    -1,   449,    -1,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,    -1,   464,
     465,    -1,    -1,    -1,   469,   470,   471,   472,    -1,    -1,
      -1,   476,    -1,    -1,    -1,   480,    -1,   482,   483,   484,
     485,    -1,   487,   488,   489,   490,   491,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   500,   501,    -1,   503,    -1,
      -1,   506,    -1,    -1,   509,   510,   511,   512,   513,   514,
     515,    -1,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,    -1,    -1,   534,
     535,   536,   537,    -1,   539,   540,   541,    -1,   543,   544,
     545,   546,    -1,    -1,    -1,    -1,    -1,   552,   553,    -1,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,    -1,   568,   569,    -1,    -1,   572,    -1,    -1,
     575,    -1,   577,    -1,   579,   580,    -1,    -1,   583,   584,
     585,   586,   587,    -1,    -1,   590,   591,    -1,   593,   594,
     595,   596,   597,   598,    -1,    -1,    -1,    -1,    -1,    -1,
     605,   606,    -1,   608,   609,   610,    -1,    -1,   613,    -1,
      -1,    -1,   617,   618,    -1,    -1,    -1,    -1,   623,   624,
      -1,    -1,   627,   628,    -1,    -1,   631,   632,     5,    -1,
       7,     8,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,
      17,    -1,    -1,    20,    -1,    22,    23,    24,    25,    26,
      27,    28,    -1,    30,    -1,    -1,    -1,    34,    35,    -1,
      -1,    38,    -1,    -1,    41,    42,    43,    -1,    45,    -1,
      47,    48,    -1,    -1,    51,    -1,    -1,    54,    55,    -1,
      57,    58,    -1,    60,    -1,    62,    63,    64,    65,    66,
      67,    -1,    69,    70,    -1,    72,    73,    74,    75,    76,
      77,    78,    79,    -1,    81,    82,    -1,    84,    85,    86,
      87,    88,    -1,    90,    -1,    -1,    93,    -1,    -1,    96,
      -1,    98,    -1,    -1,   101,    -1,    -1,    -1,   105,   106,
     107,    -1,    -1,   110,    -1,    -1,    -1,    -1,   115,   116,
     117,    -1,    -1,    -1,   121,   122,    -1,   124,    -1,    -1,
      -1,   128,    -1,   130,   131,   132,   133,   134,    -1,    -1,
      -1,   138,    -1,    -1,   141,   142,   143,    -1,    -1,    -1,
     147,    -1,   149,   150,    -1,   152,   153,   154,    -1,    -1,
     157,   158,    -1,   160,   161,   162,   163,   164,   165,    -1,
      -1,   168,   169,   170,    -1,   172,   173,   174,    -1,   176,
     177,   178,   179,    -1,   181,    -1,    -1,    -1,   185,   186,
      -1,   188,    -1,   190,    -1,   192,   193,   194,   195,    -1,
     197,    -1,   199,    -1,    -1,    -1,   203,   204,    -1,   206,
     207,    -1,   209,   210,    -1,    -1,    -1,   214,   215,   216,
     217,    -1,    -1,   220,   221,   222,    -1,    -1,   225,    -1,
      -1,    -1,    -1,   230,   231,    -1,    -1,    -1,   235,    -1,
      -1,    -1,   239,   240,    -1,   242,   243,    -1,    -1,    -1,
     247,    -1,    -1,   250,   251,    -1,    -1,   254,    -1,    -1,
     257,   258,    -1,    -1,    -1,    -1,    -1,   264,   265,    -1,
     267,    -1,   269,    -1,   271,   272,    -1,    -1,   275,    -1,
      -1,    -1,    -1,   280,    -1,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,    -1,   300,   301,   302,    -1,   304,   305,   306,
     307,    -1,   309,   310,    -1,    -1,    -1,    -1,   315,   316,
     317,   318,   319,   320,    -1,    -1,   323,   324,    -1,   326,
      -1,   328,    -1,   330,   331,   332,   333,   334,   335,   336,
     337,   338,    -1,   340,   341,   342,    -1,    -1,   345,   346,
     347,   348,    -1,    -1,    -1,   352,   353,    -1,   355,   356,
     357,    -1,   359,   360,   361,    -1,   363,   364,   365,    -1,
     367,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     377,   378,   379,    -1,   381,   382,    -1,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,    -1,    -1,   396,
     397,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
      -1,   408,   409,   410,    -1,    -1,   413,    -1,    -1,    -1,
     417,   418,   419,   420,   421,    -1,    -1,   424,   425,   426,
     427,   428,    -1,   430,   431,    -1,   433,   434,   435,    -1,
      -1,   438,    -1,   440,    -1,   442,   443,    -1,   445,   446,
     447,    -1,   449,    -1,    -1,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,    -1,   464,   465,    -1,
      -1,    -1,   469,   470,   471,   472,    -1,    -1,    -1,   476,
      -1,    -1,    -1,   480,    -1,   482,   483,   484,   485,    -1,
     487,   488,   489,   490,   491,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   500,   501,    -1,   503,    -1,    -1,   506,
      -1,    -1,   509,   510,   511,    -1,    -1,   514,   515,    -1,
     517,   518,   519,   520,   521,   522,    -1,    -1,   525,   526,
     527,   528,    -1,   530,   531,    -1,    -1,   534,   535,   536,
     537,    -1,   539,   540,   541,    -1,   543,   544,   545,   546,
      -1,    -1,    -1,    -1,    -1,   552,   553,    -1,    -1,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
      -1,   568,   569,    -1,    -1,   572,    -1,    -1,   575,    -1,
     577,    -1,   579,   580,    -1,    -1,    -1,    -1,    -1,    -1,
     587,    -1,    -1,   590,    -1,    -1,    -1,   594,   595,   596,
     597,   598,    -1,    -1,    -1,    -1,    -1,    -1,   605,   606,
      -1,   608,   609,   610,    -1,    -1,   613,    -1,    -1,    -1,
      -1,     5,    -1,     7,     8,     9,    10,    11,    -1,    -1,
      -1,    -1,    -1,    17,   631,   632,    20,    -1,    22,    23,
      24,    25,    26,    27,    28,    -1,    30,    -1,    -1,    -1,
      34,    -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,
      -1,    45,    -1,    47,    48,    -1,    -1,    51,    -1,    -1,
      54,    55,    -1,    57,    58,    -1,    60,    -1,    62,    63,
      64,    65,    66,    67,    -1,    69,    70,    -1,    72,    73,
      74,    75,    76,    77,    78,    79,    -1,    81,    82,    83,
      84,    85,    86,    87,    88,    -1,    90,    -1,    -1,    93,
      -1,    -1,    96,    -1,    98,    -1,    -1,   101,    -1,    -1,
      -1,   105,   106,   107,    -1,    -1,   110,    -1,    -1,    -1,
      -1,   115,   116,    -1,    -1,    -1,    -1,   121,   122,    -1,
     124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,
     134,    -1,    -1,    -1,   138,    -1,    -1,   141,   142,   143,
      -1,    -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,
     154,    -1,    -1,   157,   158,    -1,   160,   161,   162,   163,
     164,   165,    -1,    -1,   168,   169,   170,    -1,    -1,   173,
     174,    -1,   176,   177,   178,    -1,    -1,   181,    -1,    -1,
      -1,   185,   186,    -1,   188,   189,   190,    -1,   192,   193,
     194,   195,    -1,   197,    -1,   199,    -1,    -1,    -1,   203,
     204,    -1,   206,    -1,    -1,   209,   210,    -1,    -1,    -1,
     214,   215,   216,   217,    -1,    -1,   220,   221,   222,   223,
      -1,   225,    -1,    -1,    -1,    -1,   230,   231,    -1,    -1,
      -1,   235,    -1,    -1,    -1,   239,   240,    -1,   242,   243,
      -1,    -1,    -1,   247,   248,    -1,   250,   251,    -1,    -1,
     254,    -1,    -1,   257,   258,    -1,   260,    -1,    -1,    -1,
     264,   265,    -1,   267,    -1,   269,    -1,   271,   272,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   280,    -1,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,    -1,   300,   301,   302,    -1,
     304,   305,   306,   307,    -1,   309,   310,    -1,    -1,    -1,
      -1,   315,   316,   317,   318,   319,   320,    -1,    -1,   323,
     324,    -1,   326,    -1,   328,    -1,   330,   331,   332,   333,
     334,   335,   336,   337,   338,    -1,    -1,   341,   342,    -1,
      -1,   345,   346,   347,   348,    -1,    -1,    -1,   352,   353,
      -1,    -1,    -1,   357,    -1,   359,   360,   361,    -1,   363,
     364,   365,    -1,   367,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   377,   378,   379,    -1,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
      -1,    -1,   396,   397,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,    -1,   408,   409,   410,    -1,    -1,   413,
      -1,    -1,    -1,   417,   418,   419,   420,   421,    -1,    -1,
     424,   425,   426,   427,   428,    -1,   430,   431,    -1,   433,
     434,   435,    -1,    -1,   438,    -1,   440,    -1,   442,   443,
      -1,   445,   446,   447,    -1,   449,    -1,    -1,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,    -1,
     464,   465,   466,    -1,    -1,   469,   470,   471,   472,    -1,
      -1,    -1,   476,    -1,    -1,    -1,   480,    -1,   482,   483,
     484,   485,    -1,   487,   488,   489,   490,   491,   492,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   500,   501,    -1,   503,
      -1,    -1,   506,    -1,    -1,   509,   510,   511,    -1,    -1,
     514,   515,    -1,   517,   518,   519,   520,   521,   522,    -1,
      -1,   525,   526,   527,   528,    -1,   530,   531,    -1,    -1,
     534,   535,   536,   537,    -1,    -1,   540,   541,    -1,   543,
     544,   545,   546,    -1,    -1,    -1,    -1,    -1,   552,   553,
      -1,    -1,    -1,   557,   558,   559,   560,    -1,   562,   563,
      -1,   565,   566,    -1,   568,   569,    -1,    -1,   572,    -1,
      -1,   575,    -1,   577,    -1,   579,   580,    -1,    -1,    -1,
      -1,    -1,    -1,   587,    -1,    -1,   590,    -1,    -1,    -1,
     594,   595,   596,   597,   598,    -1,    -1,    -1,    -1,    -1,
      -1,   605,   606,    -1,   608,   609,   610,    -1,    -1,   613,
      -1,    -1,     5,    -1,     7,     8,     9,    10,    11,    -1,
      -1,    -1,    -1,    -1,    17,    -1,    -1,    20,   632,    22,
      23,    24,    25,    26,    27,    28,    -1,    30,    -1,    -1,
      -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    41,    42,
      43,    -1,    45,    -1,    47,    48,    -1,    -1,    51,    -1,
      -1,    54,    55,    -1,    57,    58,    -1,    60,    -1,    62,
      63,    64,    65,    66,    67,    -1,    69,    70,    -1,    72,
      73,    74,    75,    76,    77,    78,    79,    -1,    81,    82,
      83,    84,    85,    86,    87,    88,    -1,    90,    -1,    -1,
      93,    -1,    -1,    96,    -1,    98,    -1,    -1,   101,    -1,
      -1,    -1,   105,   106,   107,    -1,    -1,   110,    -1,    -1,
      -1,    -1,   115,   116,    -1,    -1,    -1,    -1,   121,   122,
      -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,
     133,   134,    -1,    -1,    -1,   138,    -1,    -1,   141,   142,
     143,    -1,    -1,    -1,   147,    -1,   149,   150,    -1,   152,
     153,   154,    -1,    -1,   157,   158,    -1,   160,   161,   162,
     163,   164,   165,    -1,    -1,   168,   169,   170,    -1,    -1,
     173,   174,    -1,   176,   177,   178,    -1,    -1,   181,    -1,
      -1,    -1,   185,   186,    -1,   188,   189,   190,    -1,   192,
     193,   194,   195,    -1,   197,    -1,   199,    -1,    -1,    -1,
     203,   204,    -1,   206,    -1,    -1,   209,   210,    -1,    -1,
      -1,   214,   215,   216,   217,    -1,    -1,   220,   221,   222,
     223,    -1,   225,    -1,    -1,    -1,    -1,   230,   231,    -1,
      -1,    -1,   235,    -1,    -1,    -1,   239,   240,    -1,   242,
     243,    -1,    -1,    -1,   247,   248,    -1,   250,   251,    -1,
      -1,   254,    -1,    -1,   257,   258,    -1,    -1,    -1,    -1,
      -1,   264,   265,    -1,   267,    -1,   269,    -1,   271,   272,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,    -1,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,    -1,   300,   301,   302,
      -1,   304,   305,   306,   307,    -1,   309,   310,    -1,    -1,
      -1,    -1,   315,   316,   317,   318,   319,   320,    -1,    -1,
     323,   324,    -1,   326,    -1,   328,    -1,   330,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,    -1,   341,   342,
      -1,    -1,   345,   346,   347,   348,    -1,    -1,    -1,   352,
     353,    -1,    -1,    -1,   357,    -1,   359,   360,   361,    -1,
     363,   364,   365,    -1,   367,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   377,   378,   379,    -1,   381,   382,
      -1,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,    -1,    -1,   396,   397,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,    -1,   408,   409,   410,    -1,    -1,
     413,    -1,    -1,    -1,   417,   418,   419,   420,   421,    -1,
      -1,   424,   425,   426,   427,   428,    -1,   430,   431,    -1,
     433,   434,   435,    -1,    -1,   438,    -1,   440,    -1,   442,
     443,    -1,   445,   446,   447,    -1,   449,    -1,    -1,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
      -1,   464,   465,    -1,    -1,    -1,   469,   470,   471,   472,
      -1,    -1,    -1,   476,    -1,    -1,    -1,   480,    -1,   482,
     483,   484,   485,    -1,   487,   488,   489,   490,   491,   492,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   500,   501,    -1,
     503,    -1,    -1,   506,    -1,    -1,   509,   510,   511,    -1,
      -1,   514,   515,    -1,   517,   518,   519,   520,   521,   522,
      -1,    -1,   525,   526,   527,   528,    -1,   530,   531,    -1,
      -1,   534,   535,   536,   537,    -1,    -1,   540,   541,    -1,
     543,   544,   545,   546,    -1,    -1,    -1,    -1,    -1,   552,
     553,    -1,    -1,    -1,   557,   558,   559,   560,    -1,   562,
     563,    -1,   565,   566,    -1,   568,   569,    -1,    -1,   572,
      -1,    -1,   575,    -1,   577,    -1,   579,   580,    -1,    -1,
      -1,    -1,    -1,    -1,   587,    -1,    -1,   590,    -1,    -1,
      -1,   594,   595,   596,   597,   598,    -1,    -1,    -1,    -1,
      -1,    -1,   605,   606,    -1,   608,   609,   610,    -1,    -1,
     613,    -1,    -1,     5,    -1,     7,     8,     9,    10,    11,
      -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,    20,   632,
      22,    23,    24,    25,    26,    27,    28,    -1,    30,    -1,
      -1,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    41,
      42,    43,    -1,    45,    -1,    47,    48,    -1,    -1,    51,
      -1,    -1,    54,    55,    -1,    57,    58,    -1,    60,    -1,
      62,    63,    64,    65,    66,    67,    -1,    69,    70,    -1,
      72,    73,    74,    75,    76,    77,    78,    79,    -1,    81,
      82,    -1,    84,    85,    86,    87,    88,    -1,    90,    -1,
      -1,    93,    -1,    -1,    96,    -1,    98,    -1,    -1,   101,
      -1,    -1,    -1,   105,   106,   107,    -1,    -1,   110,    -1,
      -1,    -1,    -1,   115,   116,    -1,    -1,    -1,    -1,   121,
     122,    -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,
     132,   133,   134,    -1,    -1,    -1,   138,    -1,    -1,   141,
     142,   143,    -1,    -1,    -1,   147,    -1,   149,   150,    -1,
     152,   153,   154,    -1,    -1,   157,   158,    -1,   160,   161,
     162,   163,   164,   165,    -1,    -1,   168,   169,   170,    -1,
      -1,   173,   174,    -1,   176,   177,   178,    -1,    -1,   181,
      -1,    -1,    -1,   185,   186,    -1,   188,    -1,   190,    -1,
     192,   193,   194,   195,    -1,   197,    -1,   199,    -1,    -1,
      -1,   203,   204,    -1,   206,    -1,    -1,   209,   210,    -1,
      -1,    -1,   214,   215,   216,   217,    -1,    -1,   220,   221,
     222,    -1,    -1,   225,    -1,    -1,    -1,    -1,   230,   231,
      -1,    -1,    -1,   235,    -1,    -1,    -1,   239,   240,    -1,
     242,   243,    -1,    -1,    -1,   247,    -1,    -1,   250,   251,
      -1,    -1,   254,    -1,    -1,   257,   258,    -1,    -1,    -1,
      -1,    -1,   264,   265,    -1,   267,    -1,   269,    -1,   271,
     272,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,    -1,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,    -1,   300,   301,
     302,    -1,   304,   305,   306,   307,    -1,   309,   310,    -1,
      -1,    -1,    -1,   315,   316,   317,   318,   319,   320,    -1,
      -1,   323,   324,    -1,   326,    -1,   328,    -1,   330,   331,
     332,   333,   334,   335,   336,   337,   338,    -1,    -1,   341,
     342,    -1,    -1,   345,   346,   347,   348,    -1,    -1,    -1,
     352,   353,    -1,    -1,    -1,   357,    -1,   359,   360,   361,
      -1,   363,   364,   365,    -1,   367,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   377,   378,   379,    -1,   381,
     382,    -1,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,    -1,    -1,   396,   397,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,    -1,   408,   409,   410,    -1,
      -1,   413,    -1,    -1,    -1,   417,   418,   419,   420,   421,
      -1,    -1,   424,   425,   426,   427,   428,    -1,   430,   431,
      -1,   433,   434,   435,    -1,    -1,   438,    -1,   440,    -1,
     442,   443,    -1,   445,   446,   447,    -1,   449,    -1,    -1,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,    -1,   464,   465,   466,    -1,    -1,   469,   470,   471,
     472,    -1,    -1,    -1,   476,    -1,    -1,    -1,   480,    -1,
     482,   483,   484,   485,    -1,   487,   488,   489,   490,   491,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   500,   501,
      -1,   503,    -1,    -1,   506,    -1,    -1,   509,   510,   511,
      -1,    -1,   514,   515,    -1,   517,   518,   519,   520,   521,
     522,    -1,    -1,   525,   526,   527,   528,    -1,   530,   531,
      -1,    -1,   534,   535,   536,   537,    -1,    -1,   540,   541,
      -1,   543,   544,   545,   546,    -1,    -1,    -1,    -1,    -1,
     552,   553,    -1,    -1,    -1,   557,   558,   559,   560,    -1,
     562,   563,    -1,   565,   566,    -1,   568,   569,    -1,    -1,
     572,    -1,    -1,   575,    -1,   577,    -1,   579,   580,    -1,
      -1,    -1,    -1,    -1,    -1,   587,    -1,    -1,   590,    -1,
      -1,    -1,   594,   595,   596,   597,   598,    -1,    -1,    -1,
      -1,    -1,    -1,   605,   606,    -1,   608,   609,   610,    -1,
      -1,   613,    -1,    -1,     5,    -1,     7,     8,     9,    10,
      11,    -1,    -1,   625,    -1,    -1,    17,    -1,    -1,    20,
     632,    22,    23,    24,    25,    26,    27,    28,    -1,    30,
      -1,    -1,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,
      41,    42,    43,    -1,    45,    -1,    47,    48,    -1,    -1,
      51,    -1,    -1,    54,    55,    -1,    57,    58,    -1,    60,
      -1,    62,    63,    64,    65,    66,    67,    -1,    69,    70,
      -1,    72,    73,    74,    75,    76,    77,    78,    79,    -1,
      81,    82,    -1,    84,    85,    86,    87,    88,    -1,    90,
      -1,    -1,    93,    -1,    -1,    96,    -1,    98,    -1,    -1,
     101,    -1,    -1,    -1,   105,   106,   107,    -1,    -1,   110,
      -1,    -1,    -1,    -1,   115,   116,    -1,    -1,    -1,    -1,
     121,   122,    -1,   124,    -1,    -1,    -1,   128,    -1,   130,
     131,   132,   133,   134,    -1,    -1,    -1,   138,    -1,    -1,
     141,   142,   143,    -1,    -1,    -1,   147,    -1,   149,   150,
      -1,   152,   153,   154,    -1,    -1,   157,   158,    -1,   160,
     161,   162,   163,   164,   165,    -1,    -1,   168,   169,   170,
      -1,    -1,   173,   174,    -1,   176,   177,   178,    -1,    -1,
     181,    -1,    -1,    -1,   185,   186,    -1,   188,    -1,   190,
      -1,   192,   193,   194,   195,    -1,   197,    -1,   199,    -1,
      -1,    -1,   203,   204,    -1,   206,    -1,    -1,   209,   210,
      -1,    -1,    -1,   214,   215,   216,   217,    -1,    -1,   220,
     221,   222,    -1,    -1,   225,    -1,    -1,    -1,    -1,   230,
     231,    -1,    -1,    -1,   235,    -1,    -1,    -1,   239,   240,
      -1,   242,   243,    -1,    -1,    -1,   247,    -1,    -1,   250,
     251,    -1,    -1,   254,    -1,    -1,   257,   258,    -1,    -1,
      -1,    -1,    -1,   264,   265,    -1,   267,    -1,   269,    -1,
     271,   272,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,
      -1,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,    -1,   300,
     301,   302,    -1,   304,   305,   306,   307,    -1,   309,   310,
      -1,    -1,    -1,    -1,   315,   316,   317,   318,   319,   320,
      -1,    -1,   323,   324,    -1,   326,    -1,   328,    -1,   330,
     331,   332,   333,   334,   335,   336,   337,   338,    -1,    -1,
     341,   342,    -1,    -1,   345,   346,   347,   348,    -1,    -1,
      -1,   352,   353,    -1,    -1,    -1,   357,    -1,   359,   360,
     361,    -1,   363,   364,   365,    -1,   367,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   377,   378,   379,    -1,
     381,   382,    -1,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,    -1,    -1,   396,   397,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,    -1,   408,   409,   410,
      -1,    -1,   413,    -1,    -1,    -1,   417,   418,   419,   420,
     421,    -1,    -1,   424,   425,   426,   427,   428,    -1,   430,
     431,    -1,   433,   434,   435,    -1,    -1,   438,    -1,   440,
      -1,   442,   443,    -1,   445,   446,   447,    -1,   449,    -1,
      -1,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,    -1,   464,   465,    -1,    -1,    -1,   469,   470,
     471,   472,    -1,    -1,    -1,   476,    -1,    -1,    -1,   480,
      -1,   482,   483,   484,   485,    -1,   487,   488,   489,   490,
     491,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   500,
     501,    -1,   503,    -1,    -1,   506,    -1,    -1,   509,   510,
     511,    -1,    -1,   514,   515,    -1,   517,   518,   519,   520,
     521,   522,    -1,    -1,   525,   526,   527,   528,    -1,   530,
     531,    -1,    -1,   534,   535,   536,   537,    -1,    -1,   540,
     541,    -1,   543,   544,   545,   546,    -1,    -1,    -1,    -1,
      -1,   552,   553,    -1,    -1,    -1,   557,   558,   559,   560,
      -1,   562,   563,    -1,   565,   566,    -1,   568,   569,    -1,
      -1,   572,    -1,    -1,   575,    -1,   577,    -1,   579,   580,
      -1,    -1,    -1,    -1,    -1,    -1,   587,    -1,    -1,   590,
      -1,    -1,    -1,   594,   595,   596,   597,   598,    -1,    -1,
      -1,    -1,    -1,    -1,   605,   606,    -1,   608,   609,   610,
      -1,    -1,   613,    -1,    -1,    -1,    -1,     5,    -1,     7,
       8,     9,    10,    11,   625,    -1,    -1,    -1,    -1,    17,
     631,   632,    20,    -1,    22,    23,    24,    25,    26,    27,
      28,    -1,    30,    -1,    -1,    -1,    34,    -1,    -1,    -1,
      38,    -1,    -1,    41,    42,    43,    -1,    45,    -1,    47,
      48,    -1,    -1,    51,    -1,    -1,    54,    55,    -1,    57,
      58,    -1,    60,    -1,    62,    63,    64,    65,    66,    67,
      -1,    69,    70,    -1,    72,    73,    74,    75,    76,    77,
      78,    79,    -1,    81,    82,    -1,    84,    85,    86,    87,
      88,    -1,    90,    -1,    -1,    93,    -1,    -1,    96,    -1,
      98,    -1,    -1,   101,    -1,    -1,    -1,   105,   106,   107,
      -1,    -1,   110,    -1,    -1,    -1,    -1,   115,   116,    -1,
      -1,    -1,    -1,   121,   122,    -1,   124,    -1,    -1,    -1,
     128,    -1,   130,   131,   132,   133,   134,    -1,    -1,    -1,
     138,    -1,    -1,   141,   142,   143,    -1,    -1,    -1,   147,
      -1,   149,   150,    -1,   152,   153,   154,    -1,    -1,   157,
     158,    -1,   160,   161,   162,   163,   164,   165,    -1,    -1,
     168,   169,   170,    -1,    -1,   173,   174,    -1,   176,   177,
     178,    -1,    -1,   181,    -1,    -1,    -1,   185,   186,    -1,
     188,    -1,   190,    -1,   192,   193,   194,   195,    -1,   197,
      -1,   199,    -1,    -1,    -1,   203,   204,    -1,   206,    -1,
      -1,   209,   210,    -1,    -1,    -1,   214,   215,   216,   217,
      -1,    -1,   220,   221,   222,    -1,    -1,   225,    -1,    -1,
      -1,    -1,   230,   231,    -1,    -1,    -1,   235,    -1,    -1,
      -1,   239,   240,    -1,   242,   243,    -1,    -1,    -1,   247,
      -1,    -1,   250,   251,    -1,    -1,   254,    -1,    -1,   257,
     258,    -1,    -1,    -1,    -1,    -1,   264,   265,    -1,   267,
      -1,   269,    -1,   271,   272,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   280,    -1,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,    -1,   300,   301,   302,    -1,   304,   305,   306,   307,
      -1,   309,   310,    -1,    -1,    -1,    -1,   315,   316,   317,
     318,   319,   320,    -1,    -1,   323,   324,    -1,   326,    -1,
     328,    -1,   330,   331,   332,   333,   334,   335,   336,   337,
     338,    -1,    -1,   341,   342,    -1,    -1,   345,   346,   347,
     348,    -1,    -1,    -1,   352,   353,    -1,    -1,    -1,   357,
      -1,   359,   360,   361,    -1,   363,   364,   365,    -1,   367,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   377,
     378,   379,    -1,   381,   382,    -1,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,    -1,    -1,   396,   397,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,    -1,
     408,   409,   410,    -1,    -1,   413,    -1,    -1,    -1,   417,
     418,   419,   420,   421,    -1,    -1,   424,   425,   426,   427,
     428,    -1,   430,   431,    -1,   433,   434,   435,    -1,    -1,
     438,    -1,   440,    -1,   442,   443,    -1,   445,   446,   447,
      -1,   449,    -1,    -1,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,    -1,   464,   465,    -1,    -1,
      -1,   469,   470,   471,   472,    -1,    -1,    -1,   476,    -1,
      -1,    -1,   480,    -1,   482,   483,   484,   485,    -1,   487,
     488,   489,   490,   491,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   500,   501,    -1,   503,    -1,    -1,   506,    -1,
      -1,   509,   510,   511,    -1,    -1,   514,   515,    -1,   517,
     518,   519,   520,   521,   522,    -1,    -1,   525,   526,   527,
     528,    -1,   530,   531,    -1,    -1,   534,   535,   536,   537,
      -1,    -1,   540,   541,    -1,   543,   544,   545,   546,    -1,
      -1,    -1,    -1,    -1,   552,   553,    -1,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,   565,   566,    -1,
     568,   569,    -1,    -1,   572,    -1,    -1,   575,    -1,   577,
      -1,   579,   580,    -1,    -1,    -1,    -1,    -1,    -1,   587,
      -1,    -1,   590,    -1,    -1,    -1,   594,   595,   596,   597,
     598,    -1,    -1,    -1,    -1,    -1,    -1,   605,   606,    -1,
     608,   609,   610,    -1,    -1,   613,    -1,    -1,     5,    -1,
       7,     8,     9,    10,    11,    -1,   624,    -1,    -1,    -1,
      17,    -1,    -1,    20,   632,    22,    23,    24,    25,    26,
      27,    28,    -1,    30,    -1,    -1,    -1,    34,    -1,    -1,
      -1,    38,    -1,    -1,    41,    42,    43,    -1,    45,    -1,
      47,    48,    -1,    -1,    51,    -1,    -1,    54,    55,    -1,
      57,    58,    -1,    60,    -1,    62,    63,    64,    65,    66,
      67,    -1,    69,    70,    -1,    72,    73,    74,    75,    76,
      77,    78,    79,    -1,    81,    82,    -1,    84,    85,    86,
      87,    88,    -1,    90,    -1,    -1,    93,    -1,    -1,    96,
      -1,    98,    -1,    -1,   101,    -1,    -1,    -1,   105,   106,
     107,    -1,    -1,   110,    -1,    -1,    -1,    -1,   115,   116,
      -1,    -1,    -1,    -1,   121,   122,    -1,   124,    -1,    -1,
      -1,   128,    -1,   130,   131,   132,   133,   134,    -1,    -1,
      -1,   138,    -1,    -1,   141,   142,   143,    -1,    -1,    -1,
     147,    -1,   149,   150,    -1,   152,   153,   154,    -1,    -1,
     157,   158,    -1,   160,   161,   162,   163,   164,   165,    -1,
      -1,   168,   169,   170,    -1,    -1,   173,   174,    -1,   176,
     177,   178,    -1,    -1,   181,    -1,    -1,    -1,   185,   186,
      -1,   188,    -1,   190,    -1,   192,   193,   194,   195,    -1,
     197,    -1,   199,    -1,    -1,    -1,   203,   204,    -1,   206,
      -1,    -1,   209,   210,    -1,    -1,    -1,   214,   215,   216,
     217,    -1,    -1,   220,   221,   222,    -1,    -1,   225,    -1,
      -1,    -1,    -1,   230,   231,    -1,   233,    -1,   235,    -1,
      -1,    -1,   239,   240,    -1,   242,   243,    -1,    -1,    -1,
     247,    -1,    -1,   250,   251,    -1,    -1,   254,    -1,    -1,
     257,   258,    -1,    -1,    -1,    -1,    -1,   264,   265,    -1,
     267,    -1,   269,    -1,   271,   272,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   280,    -1,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,    -1,   300,   301,   302,    -1,   304,   305,   306,
     307,    -1,   309,   310,    -1,    -1,    -1,    -1,   315,   316,
     317,   318,   319,   320,    -1,    -1,   323,   324,    -1,   326,
      -1,   328,    -1,   330,   331,   332,   333,   334,   335,   336,
     337,   338,    -1,    -1,   341,   342,    -1,    -1,   345,   346,
     347,   348,    -1,    -1,    -1,   352,   353,    -1,    -1,    -1,
     357,    -1,   359,   360,   361,    -1,   363,   364,   365,    -1,
     367,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     377,   378,   379,    -1,   381,   382,    -1,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,    -1,    -1,   396,
     397,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
      -1,   408,   409,   410,    -1,    -1,   413,    -1,    -1,    -1,
     417,   418,   419,   420,   421,    -1,    -1,   424,   425,   426,
     427,   428,    -1,   430,   431,    -1,   433,   434,   435,    -1,
      -1,   438,    -1,   440,    -1,   442,   443,    -1,   445,   446,
     447,    -1,   449,    -1,    -1,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,    -1,   464,   465,    -1,
      -1,    -1,   469,   470,   471,   472,    -1,    -1,    -1,   476,
      -1,    -1,    -1,   480,    -1,   482,   483,   484,   485,    -1,
     487,   488,   489,   490,   491,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   500,   501,    -1,   503,    -1,    -1,   506,
      -1,    -1,   509,   510,   511,    -1,    -1,   514,   515,    -1,
     517,   518,   519,   520,   521,   522,    -1,    -1,   525,   526,
     527,   528,    -1,   530,   531,    -1,    -1,   534,   535,   536,
     537,    -1,    -1,   540,   541,    -1,   543,   544,   545,   546,
      -1,    -1,    -1,    -1,    -1,   552,   553,    -1,    -1,    -1,
     557,   558,   559,   560,    -1,   562,   563,    -1,   565,   566,
      -1,   568,   569,    -1,    -1,   572,    -1,    -1,   575,    -1,
     577,    -1,   579,   580,    -1,    -1,    -1,    -1,    -1,    -1,
     587,    -1,    -1,   590,    -1,    -1,    -1,   594,   595,   596,
     597,   598,    -1,    -1,    -1,    -1,    -1,    -1,   605,   606,
      -1,   608,   609,   610,    -1,    -1,   613,    -1,    -1,     5,
      -1,     7,     8,     9,    10,    11,    -1,    -1,    -1,    -1,
      -1,    17,    -1,    -1,    20,   632,    22,    23,    24,    25,
      26,    27,    28,    -1,    30,    -1,    -1,    -1,    34,    -1,
      -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,    45,
      -1,    47,    48,    -1,    -1,    51,    -1,    -1,    54,    55,
      -1,    57,    58,    -1,    60,    -1,    62,    63,    64,    65,
      66,    67,    -1,    69,    70,    -1,    72,    73,    74,    75,
      76,    77,    78,    79,    -1,    81,    82,    -1,    84,    85,
      86,    87,    88,    -1,    90,    -1,    -1,    93,    -1,    -1,
      96,    -1,    98,    -1,    -1,   101,    -1,    -1,    -1,   105,
     106,   107,    -1,    -1,   110,    -1,    -1,    -1,    -1,   115,
     116,    -1,    -1,    -1,    -1,   121,   122,    -1,   124,    -1,
      -1,    -1,   128,    -1,   130,   131,   132,   133,   134,    -1,
      -1,    -1,   138,    -1,    -1,   141,   142,   143,    -1,    -1,
      -1,   147,    -1,   149,   150,    -1,   152,   153,   154,    -1,
      -1,   157,   158,    -1,   160,   161,   162,   163,   164,   165,
      -1,    -1,   168,   169,   170,    -1,    -1,   173,   174,    -1,
     176,   177,   178,    -1,    -1,   181,    -1,    -1,    -1,   185,
     186,    -1,   188,    -1,   190,    -1,   192,   193,   194,   195,
      -1,   197,    -1,   199,    -1,    -1,    -1,   203,   204,    -1,
     206,    -1,    -1,   209,   210,    -1,    -1,    -1,   214,   215,
     216,   217,    -1,    -1,   220,   221,   222,    -1,    -1,   225,
      -1,    -1,    -1,    -1,   230,   231,    -1,    -1,    -1,   235,
      -1,    -1,    -1,   239,   240,    -1,   242,   243,    -1,    -1,
      -1,   247,    -1,    -1,   250,   251,    -1,    -1,   254,    -1,
      -1,   257,   258,    -1,    -1,    -1,    -1,    -1,   264,   265,
      -1,   267,    -1,   269,    -1,   271,   272,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   280,    -1,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,    -1,   300,   301,   302,    -1,   304,   305,
     306,   307,    -1,   309,   310,    -1,    -1,    -1,    -1,   315,
     316,   317,   318,   319,   320,    -1,    -1,   323,   324,    -1,
     326,    -1,   328,    -1,   330,   331,   332,   333,   334,   335,
     336,   337,   338,    -1,    -1,   341,   342,    -1,    -1,   345,
     346,   347,   348,    -1,    -1,    -1,   352,   353,    -1,    -1,
      -1,   357,    -1,   359,   360,   361,    -1,   363,   364,   365,
      -1,   367,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   377,   378,   379,    -1,   381,   382,    -1,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,    -1,    -1,
     396,   397,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,    -1,   408,   409,   410,    -1,    -1,   413,    -1,    -1,
      -1,   417,   418,   419,   420,   421,    -1,    -1,   424,   425,
     426,   427,   428,    -1,   430,   431,    -1,   433,   434,   435,
      -1,    -1,   438,    -1,   440,    -1,   442,   443,    -1,   445,
     446,   447,    -1,   449,    -1,    -1,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,    -1,   464,   465,
      -1,    -1,    -1,   469,   470,   471,   472,    -1,    -1,    -1,
     476,    -1,    -1,    -1,   480,    -1,   482,   483,   484,   485,
      -1,   487,   488,   489,   490,   491,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   500,   501,    -1,   503,    -1,    -1,
     506,    -1,    -1,   509,   510,   511,    -1,    -1,   514,   515,
      -1,   517,   518,   519,   520,   521,   522,    -1,    -1,   525,
     526,   527,   528,    -1,   530,   531,    -1,    -1,   534,   535,
     536,   537,    -1,    -1,   540,   541,    -1,   543,   544,   545,
     546,    -1,    -1,    -1,    -1,    -1,   552,   553,    -1,    -1,
      -1,   557,   558,   559,   560,    -1,   562,   563,    -1,   565,
     566,    -1,   568,   569,    -1,    -1,   572,    -1,    -1,   575,
      -1,   577,    -1,   579,   580,    -1,    -1,    -1,    -1,    -1,
      -1,   587,    -1,    -1,   590,    -1,    -1,    -1,   594,   595,
     596,   597,   598,    -1,    -1,    -1,    -1,    -1,    -1,   605,
     606,    -1,   608,   609,   610,    -1,    -1,   613,    -1,    -1,
      -1,    -1,     5,   619,     7,     8,     9,    10,    11,    -1,
      -1,    -1,    -1,    -1,    17,    -1,   632,    20,    -1,    22,
      23,    24,    25,    26,    27,    28,    -1,    30,    -1,    -1,
      -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    41,    42,
      43,    -1,    45,    -1,    47,    48,    -1,    -1,    51,    -1,
      -1,    54,    55,    -1,    57,    58,    -1,    60,    -1,    62,
      63,    64,    65,    66,    67,    -1,    69,    70,    -1,    72,
      73,    74,    75,    76,    77,    78,    79,    -1,    81,    82,
      -1,    84,    85,    86,    87,    88,    -1,    90,    -1,    -1,
      93,    -1,    -1,    96,    -1,    98,    -1,    -1,   101,    -1,
      -1,    -1,   105,   106,   107,    -1,    -1,   110,    -1,    -1,
      -1,    -1,   115,   116,    -1,    -1,    -1,    -1,   121,   122,
      -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,
     133,   134,    -1,    -1,    -1,   138,    -1,    -1,   141,   142,
     143,    -1,    -1,    -1,   147,    -1,   149,   150,    -1,   152,
     153,   154,    -1,    -1,   157,   158,    -1,   160,   161,   162,
     163,   164,   165,    -1,    -1,   168,   169,   170,    -1,    -1,
     173,   174,    -1,   176,   177,   178,    -1,    -1,   181,    -1,
      -1,    -1,   185,   186,    -1,   188,    -1,   190,    -1,   192,
     193,   194,   195,    -1,   197,    -1,   199,    -1,    -1,    -1,
     203,   204,    -1,   206,    -1,    -1,   209,   210,    -1,    -1,
      -1,   214,   215,   216,   217,    -1,    -1,   220,   221,   222,
      -1,    -1,   225,    -1,    -1,    -1,    -1,   230,   231,    -1,
      -1,    -1,   235,    -1,    -1,    -1,   239,   240,    -1,   242,
     243,    -1,    -1,    -1,   247,    -1,    -1,   250,   251,    -1,
      -1,   254,    -1,    -1,   257,   258,    -1,    -1,    -1,    -1,
      -1,   264,   265,    -1,   267,    -1,   269,    -1,   271,   272,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,    -1,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,    -1,   300,   301,   302,
      -1,   304,   305,   306,   307,    -1,   309,   310,    -1,    -1,
      -1,    -1,   315,   316,   317,   318,   319,   320,    -1,    -1,
     323,   324,    -1,   326,    -1,   328,    -1,   330,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,    -1,   341,   342,
      -1,    -1,   345,   346,   347,   348,    -1,    -1,    -1,   352,
     353,    -1,    -1,    -1,   357,    -1,   359,   360,   361,    -1,
     363,   364,   365,    -1,   367,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   377,   378,   379,    -1,   381,   382,
      -1,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,    -1,    -1,   396,   397,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,    -1,   408,   409,   410,    -1,    -1,
     413,    -1,    -1,    -1,   417,   418,   419,   420,   421,    -1,
      -1,   424,   425,   426,   427,   428,    -1,   430,   431,    -1,
     433,   434,   435,    -1,    -1,   438,    -1,   440,    -1,   442,
     443,    -1,   445,   446,   447,    -1,   449,    -1,    -1,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
      -1,   464,   465,    -1,    -1,    -1,   469,   470,   471,   472,
      -1,    -1,    -1,   476,    -1,    -1,    -1,   480,    -1,   482,
     483,   484,   485,    -1,   487,   488,   489,   490,   491,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   500,   501,    -1,
     503,    -1,    -1,   506,    -1,    -1,   509,   510,   511,    -1,
      -1,   514,   515,    -1,   517,   518,   519,   520,   521,   522,
      -1,    -1,   525,   526,   527,   528,    -1,   530,   531,    -1,
      -1,   534,   535,   536,   537,    -1,    -1,   540,   541,    -1,
     543,   544,   545,   546,    -1,    -1,    -1,    -1,    -1,   552,
     553,    -1,    -1,    -1,   557,   558,   559,   560,    -1,   562,
     563,    -1,   565,   566,    -1,   568,   569,    -1,    -1,   572,
      -1,    -1,   575,    -1,   577,    -1,   579,   580,    -1,    -1,
      -1,    -1,    -1,    -1,   587,    -1,    -1,   590,    -1,    -1,
      -1,   594,   595,   596,   597,   598,    -1,    -1,    -1,    -1,
      -1,    -1,   605,   606,    -1,   608,   609,   610,    -1,    -1,
     613,    -1,    -1,     5,    -1,     7,     8,     9,    10,    11,
      -1,   624,    -1,    -1,    -1,    17,    -1,    -1,    20,   632,
      22,    23,    24,    25,    26,    27,    28,    -1,    30,    -1,
      -1,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    41,
      42,    43,    -1,    45,    -1,    47,    48,    -1,    -1,    51,
      -1,    -1,    54,    55,    -1,    57,    58,    -1,    60,    -1,
      62,    63,    64,    65,    66,    67,    -1,    69,    70,    -1,
      72,    73,    74,    75,    76,    77,    78,    79,    -1,    81,
      82,    -1,    84,    85,    86,    87,    88,    -1,    90,    -1,
      -1,    93,    -1,    -1,    96,    -1,    98,    -1,    -1,   101,
      -1,    -1,    -1,   105,   106,   107,    -1,    -1,   110,    -1,
      -1,    -1,    -1,   115,   116,    -1,    -1,    -1,    -1,   121,
     122,    -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,
     132,   133,   134,    -1,    -1,    -1,   138,    -1,    -1,   141,
     142,   143,    -1,    -1,    -1,   147,    -1,   149,   150,    -1,
     152,   153,   154,    -1,    -1,   157,   158,    -1,   160,   161,
     162,   163,   164,   165,    -1,    -1,   168,   169,   170,    -1,
      -1,   173,   174,    -1,   176,   177,   178,    -1,    -1,   181,
      -1,    -1,    -1,   185,   186,    -1,   188,    -1,   190,    -1,
     192,   193,   194,   195,    -1,   197,    -1,   199,    -1,    -1,
      -1,   203,   204,    -1,   206,    -1,    -1,   209,   210,    -1,
      -1,    -1,   214,   215,   216,   217,    -1,    -1,   220,   221,
     222,    -1,    -1,   225,    -1,    -1,    -1,    -1,   230,   231,
      -1,    -1,    -1,   235,    -1,    -1,    -1,   239,   240,    -1,
     242,   243,    -1,    -1,    -1,   247,    -1,    -1,   250,   251,
      -1,    -1,   254,    -1,    -1,   257,   258,    -1,    -1,    -1,
      -1,    -1,   264,   265,    -1,   267,    -1,   269,    -1,   271,
     272,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,    -1,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,    -1,   300,   301,
     302,    -1,   304,   305,   306,   307,    -1,   309,   310,    -1,
      -1,    -1,    -1,   315,   316,   317,   318,   319,   320,    -1,
      -1,   323,   324,    -1,   326,    -1,   328,    -1,   330,   331,
     332,   333,   334,   335,   336,   337,   338,    -1,    -1,   341,
     342,    -1,    -1,   345,   346,   347,   348,    -1,    -1,    -1,
     352,   353,    -1,    -1,    -1,   357,    -1,   359,   360,   361,
      -1,   363,   364,   365,    -1,   367,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   377,   378,   379,    -1,   381,
     382,    -1,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,    -1,    -1,   396,   397,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,    -1,   408,   409,   410,    -1,
      -1,   413,    -1,    -1,    -1,   417,   418,   419,   420,   421,
      -1,    -1,   424,   425,   426,   427,   428,    -1,   430,   431,
      -1,   433,   434,   435,    -1,    -1,   438,    -1,   440,    -1,
     442,   443,    -1,   445,   446,   447,    -1,   449,    -1,    -1,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,    -1,   464,   465,    -1,    -1,    -1,   469,   470,   471,
     472,    -1,    -1,    -1,   476,    -1,    -1,    -1,   480,    -1,
     482,   483,   484,   485,    -1,   487,   488,   489,   490,   491,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   500,   501,
      -1,   503,    -1,    -1,   506,    -1,    -1,   509,   510,   511,
      -1,    -1,   514,   515,    -1,   517,   518,   519,   520,   521,
     522,    -1,    -1,   525,   526,   527,   528,    -1,   530,   531,
      -1,    -1,   534,   535,   536,   537,    -1,    -1,   540,   541,
      -1,   543,   544,   545,   546,    -1,    -1,    -1,    -1,    -1,
     552,   553,    -1,    -1,    -1,   557,   558,   559,   560,    -1,
     562,   563,    -1,   565,   566,    -1,   568,   569,    -1,    -1,
     572,    -1,    -1,   575,    -1,   577,    -1,   579,   580,    -1,
      -1,    -1,    -1,    -1,    -1,   587,    -1,    -1,   590,    -1,
      -1,    -1,   594,   595,   596,   597,   598,    -1,    -1,    -1,
      -1,    -1,    -1,   605,   606,    -1,   608,   609,   610,    -1,
      -1,   613,    -1,    -1,    -1,    -1,     5,    -1,     7,     8,
       9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,   631,
     632,    20,    -1,    22,    23,    24,    25,    26,    27,    28,
      -1,    30,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,
      -1,    -1,    41,    42,    43,    -1,    45,    -1,    47,    48,
      -1,    -1,    51,    -1,    -1,    54,    55,    -1,    57,    58,
      -1,    60,    -1,    62,    63,    64,    65,    66,    67,    -1,
      69,    70,    -1,    72,    73,    74,    75,    76,    77,    78,
      79,    -1,    81,    82,    -1,    84,    85,    86,    87,    88,
      -1,    90,    -1,    -1,    93,    -1,    -1,    96,    -1,    98,
      -1,    -1,   101,    -1,    -1,    -1,   105,   106,   107,    -1,
      -1,   110,    -1,    -1,    -1,    -1,   115,   116,    -1,    -1,
      -1,    -1,   121,   122,    -1,   124,    -1,    -1,    -1,   128,
      -1,   130,   131,   132,   133,   134,    -1,    -1,    -1,   138,
      -1,    -1,   141,   142,   143,    -1,    -1,    -1,   147,    -1,
     149,   150,    -1,   152,   153,   154,    -1,    -1,   157,   158,
      -1,   160,   161,   162,   163,   164,   165,    -1,    -1,   168,
     169,   170,    -1,    -1,   173,   174,    -1,   176,   177,   178,
      -1,    -1,   181,    -1,    -1,    -1,   185,   186,    -1,   188,
      -1,   190,    -1,   192,   193,   194,   195,    -1,   197,    -1,
     199,    -1,    -1,    -1,   203,   204,    -1,   206,    -1,    -1,
     209,   210,    -1,    -1,    -1,   214,   215,   216,   217,    -1,
      -1,   220,   221,   222,    -1,    -1,   225,    -1,    -1,    -1,
      -1,   230,   231,    -1,    -1,    -1,   235,    -1,    -1,    -1,
     239,   240,    -1,   242,   243,    -1,    -1,    -1,   247,    -1,
      -1,   250,   251,    -1,    -1,   254,    -1,    -1,   257,   258,
      -1,    -1,    -1,    -1,    -1,   264,   265,    -1,   267,    -1,
     269,    -1,   271,   272,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   280,    -1,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
      -1,   300,   301,   302,    -1,   304,   305,   306,   307,    -1,
     309,   310,    -1,    -1,    -1,    -1,   315,   316,   317,   318,
     319,   320,    -1,    -1,   323,   324,    -1,   326,    -1,   328,
      -1,   330,   331,   332,   333,   334,   335,   336,   337,   338,
      -1,    -1,   341,   342,    -1,    -1,   345,   346,   347,   348,
      -1,    -1,    -1,   352,   353,    -1,    -1,    -1,   357,    -1,
     359,   360,   361,    -1,   363,   364,   365,    -1,   367,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   377,   378,
     379,    -1,   381,   382,    -1,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,    -1,    -1,   396,   397,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,    -1,   408,
     409,   410,    -1,    -1,   413,    -1,    -1,    -1,   417,   418,
     419,   420,   421,    -1,    -1,   424,   425,   426,   427,   428,
      -1,   430,   431,    -1,   433,   434,   435,    -1,    -1,   438,
      -1,   440,    -1,   442,   443,    -1,   445,   446,   447,    -1,
     449,    -1,    -1,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,    -1,   464,   465,    -1,    -1,    -1,
     469,   470,   471,   472,    -1,    -1,    -1,   476,    -1,    -1,
      -1,   480,    -1,   482,   483,   484,   485,    -1,   487,   488,
     489,   490,   491,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   500,   501,    -1,   503,    -1,    -1,   506,    -1,    -1,
     509,   510,   511,    -1,    -1,   514,   515,    -1,   517,   518,
     519,   520,   521,   522,    -1,    -1,   525,   526,   527,   528,
      -1,   530,   531,    -1,    -1,   534,   535,   536,   537,    -1,
      -1,   540,   541,    -1,   543,   544,   545,   546,    -1,    -1,
      -1,    -1,    -1,   552,   553,    -1,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,   565,   566,    -1,   568,
     569,    -1,    -1,   572,    -1,    -1,   575,    -1,   577,    -1,
     579,   580,    -1,    -1,    -1,    -1,    -1,    -1,   587,    -1,
      -1,   590,    -1,    -1,    -1,   594,   595,   596,   597,   598,
      -1,    -1,    -1,    -1,    -1,    -1,   605,   606,    -1,   608,
     609,   610,    -1,    -1,   613,    -1,    -1,     5,    -1,     7,
       8,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,
      -1,    -1,    20,   632,    22,    23,    24,    25,    26,    27,
      28,    -1,    30,    -1,    -1,    -1,    34,    -1,    -1,    -1,
      38,    -1,    -1,    41,    42,    43,    -1,    45,    -1,    47,
      48,    -1,    -1,    51,    -1,    -1,    54,    55,    -1,    57,
      58,    -1,    60,    -1,    62,    63,    64,    65,    66,    67,
      -1,    69,    70,    -1,    72,    73,    74,    75,    76,    77,
      78,    79,    -1,    81,    82,    -1,    84,    85,    86,    87,
      88,    -1,    90,    -1,    -1,    93,    -1,    -1,    96,    -1,
      98,    -1,    -1,   101,    -1,    -1,    -1,   105,   106,   107,
      -1,    -1,   110,    -1,    -1,    -1,    -1,   115,   116,    -1,
      -1,    -1,    -1,   121,   122,    -1,   124,    -1,    -1,    -1,
     128,    -1,   130,   131,   132,   133,   134,    -1,    -1,    -1,
     138,    -1,    -1,   141,   142,   143,    -1,    -1,    -1,   147,
      -1,   149,   150,    -1,   152,   153,   154,    -1,    -1,   157,
     158,    -1,   160,   161,   162,   163,   164,   165,    -1,    -1,
     168,   169,   170,    -1,    -1,   173,   174,    -1,   176,   177,
     178,    -1,    -1,   181,    -1,    -1,    -1,   185,   186,    -1,
     188,    -1,   190,    -1,   192,   193,   194,   195,    -1,   197,
      -1,   199,    -1,    -1,    -1,   203,   204,    -1,   206,    -1,
      -1,   209,   210,    -1,    -1,    -1,   214,   215,   216,   217,
      -1,    -1,   220,   221,   222,    -1,    -1,   225,    -1,    -1,
      -1,    -1,   230,   231,    -1,    -1,    -1,   235,    -1,    -1,
      -1,   239,   240,    -1,   242,   243,    -1,    -1,    -1,   247,
      -1,    -1,   250,   251,    -1,    -1,   254,    -1,    -1,   257,
     258,    -1,    -1,    -1,    -1,    -1,   264,   265,    -1,   267,
      -1,   269,    -1,   271,   272,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   280,    -1,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,    -1,   300,   301,   302,    -1,   304,   305,   306,   307,
      -1,   309,   310,    -1,    -1,    -1,    -1,   315,   316,   317,
     318,   319,   320,    -1,    -1,   323,   324,    -1,   326,    -1,
     328,    -1,   330,   331,   332,   333,   334,   335,   336,   337,
     338,    -1,    -1,   341,   342,    -1,    -1,   345,   346,   347,
     348,    -1,    -1,    -1,   352,   353,    -1,    -1,    -1,   357,
      -1,   359,   360,   361,    -1,   363,   364,   365,    -1,   367,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   377,
     378,   379,    -1,   381,   382,    -1,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,    -1,    -1,   396,   397,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,    -1,
     408,   409,   410,    -1,    -1,   413,    -1,    -1,    -1,   417,
     418,   419,   420,   421,    -1,    -1,   424,   425,   426,   427,
     428,    -1,   430,   431,    -1,   433,   434,   435,    -1,    -1,
     438,    -1,   440,    -1,   442,   443,    -1,   445,   446,   447,
      -1,   449,    -1,    -1,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,    -1,   464,   465,    -1,    -1,
      -1,   469,   470,   471,   472,    -1,    -1,    -1,   476,    -1,
      -1,    -1,   480,    -1,   482,   483,   484,   485,    -1,   487,
     488,   489,   490,   491,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   500,   501,    -1,   503,    -1,    -1,   506,    -1,
      -1,   509,   510,   511,    -1,    -1,   514,   515,    -1,   517,
     518,   519,   520,   521,   522,    -1,    -1,   525,   526,   527,
     528,    -1,   530,   531,    -1,    -1,   534,   535,   536,   537,
      -1,    -1,   540,   541,    -1,   543,   544,   545,   546,    -1,
      -1,    -1,    -1,    -1,   552,   553,    -1,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,   565,   566,    -1,
     568,   569,    -1,    -1,   572,    -1,    -1,   575,    -1,   577,
      -1,   579,   580,    -1,    -1,    -1,    -1,    -1,    -1,   587,
      -1,    -1,   590,    -1,    -1,    -1,   594,   595,   596,   597,
     598,    -1,    -1,    -1,    -1,    -1,    -1,   605,   606,    -1,
     608,   609,   610,    -1,    -1,   613,    -1,    -1,     5,    -1,
       7,     8,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,
      17,    -1,    -1,    20,   632,    22,    23,    24,    25,    26,
      27,    28,    -1,    30,    -1,    -1,    -1,    34,    -1,    -1,
      -1,    38,    -1,    -1,    41,    42,    43,    -1,    45,    -1,
      47,    48,    -1,    -1,    51,    -1,    -1,    54,    55,    -1,
      57,    58,    -1,    60,    -1,    62,    63,    64,    65,    66,
      67,    -1,    69,    70,    -1,    72,    73,    74,    75,    76,
      77,    78,    79,    -1,    81,    82,    -1,    84,    85,    86,
      87,    88,    -1,    90,    -1,    -1,    93,    -1,    -1,    96,
      -1,    98,    -1,    -1,   101,    -1,    -1,    -1,   105,   106,
     107,    -1,    -1,   110,    -1,    -1,    -1,    -1,   115,   116,
      -1,    -1,    -1,    -1,   121,   122,    -1,   124,    -1,    -1,
      -1,   128,    -1,   130,   131,   132,   133,   134,    -1,    -1,
      -1,   138,    -1,    -1,   141,   142,   143,    -1,    -1,    -1,
     147,    -1,   149,   150,    -1,   152,   153,   154,    -1,    -1,
     157,   158,    -1,   160,   161,   162,   163,   164,   165,    -1,
      -1,   168,   169,   170,    -1,    -1,   173,   174,    -1,   176,
     177,   178,    -1,    -1,   181,    -1,    -1,    -1,   185,   186,
      -1,   188,    -1,   190,    -1,   192,   193,   194,   195,    -1,
     197,    -1,   199,    -1,    -1,    -1,   203,   204,    -1,   206,
      -1,    -1,   209,   210,    -1,    -1,    -1,   214,   215,   216,
     217,    -1,    -1,   220,   221,   222,    -1,    -1,   225,    -1,
      -1,    -1,    -1,   230,   231,    -1,    -1,    -1,   235,    -1,
      -1,    -1,   239,   240,    -1,   242,   243,    -1,    -1,    -1,
     247,    -1,    -1,   250,   251,    -1,    -1,   254,    -1,    -1,
     257,   258,    -1,    -1,    -1,    -1,    -1,   264,   265,    -1,
     267,    -1,   269,    -1,   271,   272,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   280,    -1,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,    -1,   300,   301,   302,    -1,   304,   305,   306,
     307,    -1,   309,   310,    -1,    -1,    -1,    -1,   315,   316,
     317,   318,   319,   320,    -1,    -1,   323,   324,    -1,   326,
      -1,   328,    -1,   330,   331,   332,   333,   334,   335,   336,
     337,   338,    -1,    -1,   341,   342,    -1,    -1,   345,   346,
     347,   348,    -1,    -1,    -1,   352,   353,    -1,    -1,    -1,
     357,    -1,   359,   360,   361,    -1,   363,   364,   365,    -1,
     367,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     377,   378,   379,    -1,   381,   382,    -1,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,    -1,    -1,   396,
     397,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
      -1,   408,   409,   410,    -1,    -1,   413,    -1,    -1,    -1,
     417,   418,   419,   420,   421,    -1,    -1,   424,   425,   426,
     427,   428,    -1,   430,   431,    -1,   433,   434,   435,    -1,
      -1,   438,    -1,   440,    -1,   442,   443,    -1,   445,   446,
     447,    -1,   449,    -1,    -1,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,    -1,   464,   465,    -1,
      -1,    -1,   469,   470,   471,   472,    -1,    -1,    -1,   476,
      -1,    -1,    -1,   480,    -1,   482,   483,   484,   485,    -1,
     487,   488,   489,   490,   491,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   500,   501,    -1,   503,    -1,    -1,   506,
      -1,    -1,   509,   510,   511,    -1,    -1,   514,   515,    -1,
     517,   518,   519,   520,   521,   522,    -1,    -1,   525,   526,
     527,   528,    -1,   530,   531,    -1,    -1,   534,   535,   536,
     537,    -1,    -1,   540,   541,    -1,   543,   544,   545,   546,
      -1,    -1,    -1,    -1,    -1,   552,   553,    -1,    -1,    -1,
     557,   558,   559,   560,    -1,   562,   563,    -1,   565,   566,
      -1,   568,   569,    -1,    -1,   572,    -1,    -1,   575,    -1,
     577,    -1,   579,   580,    -1,    -1,    -1,    -1,    -1,    -1,
     587,    -1,    -1,   590,    -1,    -1,    -1,   594,   595,   596,
     597,   598,    -1,    -1,    -1,    -1,    -1,    -1,   605,   606,
      -1,   608,   609,   610,    -1,    -1,   613,    -1,    -1,     5,
      -1,     7,     8,     9,    10,    11,    -1,    -1,    -1,    -1,
      -1,    17,    -1,    -1,    20,   632,    22,    23,    24,    25,
      26,    27,    28,    -1,    30,    -1,    -1,    -1,    34,    -1,
      -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,    45,
      -1,    47,    48,    -1,    -1,    51,    -1,    -1,    54,    55,
      -1,    57,    58,    -1,    60,    -1,    62,    63,    64,    65,
      66,    67,    -1,    69,    70,    -1,    72,    73,    74,    75,
      76,    77,    78,    79,    -1,    81,    82,    -1,    84,    85,
      86,    87,    88,    -1,    90,    -1,    -1,    93,    -1,    -1,
      96,    -1,    98,    -1,    -1,   101,    -1,    -1,    -1,   105,
     106,   107,    -1,    -1,   110,    -1,    -1,    -1,    -1,   115,
     116,    -1,    -1,    -1,    -1,   121,   122,    -1,   124,    -1,
      -1,    -1,   128,    -1,   130,   131,   132,   133,   134,    -1,
      -1,    -1,   138,    -1,    -1,   141,   142,   143,    -1,    -1,
      -1,   147,    -1,   149,   150,    -1,   152,   153,   154,    -1,
      -1,   157,   158,    -1,   160,   161,   162,   163,   164,   165,
      -1,    -1,   168,   169,   170,    -1,    -1,   173,   174,    -1,
     176,   177,   178,    -1,    -1,   181,    -1,    -1,    -1,   185,
     186,    -1,   188,    -1,   190,    -1,   192,   193,   194,   195,
      -1,   197,    -1,   199,    -1,    -1,    -1,   203,   204,    -1,
     206,    -1,    -1,   209,   210,    -1,    -1,    -1,   214,   215,
     216,   217,    -1,    -1,   220,   221,   222,    -1,    -1,   225,
      -1,    -1,    -1,    -1,   230,   231,    -1,    -1,    -1,   235,
      -1,    -1,    -1,   239,   240,    -1,   242,   243,    -1,    -1,
      -1,   247,    -1,    -1,   250,   251,    -1,    -1,   254,    -1,
      -1,   257,   258,    -1,    -1,    -1,    -1,    -1,   264,   265,
      -1,   267,    -1,   269,    -1,   271,   272,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   280,    -1,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,    -1,   300,   301,   302,    -1,   304,   305,
     306,   307,    -1,   309,   310,    -1,    -1,    -1,    -1,   315,
     316,   317,   318,   319,   320,    -1,    -1,   323,   324,    -1,
     326,    -1,   328,    -1,   330,   331,   332,   333,   334,   335,
     336,   337,   338,    -1,    -1,   341,   342,    -1,    -1,   345,
     346,   347,   348,    -1,    -1,    -1,   352,   353,    -1,    -1,
      -1,   357,    -1,   359,   360,   361,    -1,   363,   364,   365,
      -1,   367,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   377,   378,   379,    -1,   381,   382,    -1,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,    -1,    -1,
     396,   397,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,    -1,   408,   409,   410,    -1,    -1,   413,    -1,    -1,
      -1,   417,   418,   419,   420,   421,    -1,    -1,   424,   425,
     426,   427,   428,    -1,   430,   431,    -1,   433,   434,   435,
      -1,    -1,   438,    -1,   440,    -1,   442,   443,    -1,   445,
     446,   447,    -1,   449,    -1,    -1,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,    -1,   464,   465,
      -1,    -1,    -1,   469,   470,   471,   472,    -1,    -1,    -1,
     476,    -1,    -1,    -1,   480,    -1,   482,   483,   484,   485,
      -1,   487,   488,   489,   490,   491,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   500,   501,    -1,   503,    -1,    -1,
     506,    -1,    -1,   509,   510,   511,    -1,    -1,   514,   515,
      -1,   517,   518,   519,   520,   521,   522,    -1,    -1,   525,
     526,   527,   528,    -1,   530,   531,    -1,    -1,   534,   535,
     536,   537,    -1,    -1,   540,   541,    -1,   543,   544,   545,
     546,    -1,    -1,    -1,    -1,    -1,   552,   553,    -1,    -1,
      -1,   557,   558,   559,   560,    -1,   562,   563,    -1,   565,
     566,    -1,   568,   569,    -1,    -1,   572,    -1,    -1,   575,
      -1,   577,    -1,   579,   580,    -1,    -1,    -1,    -1,    -1,
      -1,   587,    -1,    -1,   590,    -1,    -1,    -1,   594,   595,
     596,   597,   598,    -1,    -1,    -1,    -1,    -1,    -1,   605,
     606,    -1,   608,   609,   610,    -1,    -1,   613,    -1,    -1,
       5,    -1,     7,     8,     9,    10,    11,    -1,    -1,    -1,
      -1,    -1,    17,    -1,    -1,    20,   632,    22,    23,    24,
      25,    26,    27,    28,    -1,    30,    -1,    -1,    -1,    34,
      -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,
      45,    -1,    47,    48,    -1,    -1,    51,    -1,    -1,    54,
      55,    -1,    57,    58,    59,    60,    -1,    62,    63,    64,
      65,    66,    67,    -1,    69,    70,    -1,    72,    73,    74,
      75,    76,    77,    78,    79,    -1,    81,    82,    -1,    84,
      85,    86,    87,    88,    -1,    90,    -1,    -1,    93,    -1,
      -1,    96,    -1,    98,    -1,    -1,   101,    -1,    -1,    -1,
     105,   106,   107,    -1,    -1,   110,    -1,    -1,    -1,    -1,
     115,   116,    -1,    -1,    -1,   120,   121,   122,    -1,   124,
      -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,   134,
      -1,    -1,    -1,   138,    -1,    -1,   141,   142,   143,    -1,
      -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,   154,
      -1,    -1,   157,   158,    -1,   160,   161,   162,   163,   164,
     165,    -1,    -1,   168,   169,   170,    -1,    -1,   173,   174,
      -1,   176,   177,   178,    -1,    -1,   181,    -1,    -1,    -1,
     185,   186,    -1,   188,    -1,   190,    -1,   192,   193,   194,
     195,    -1,   197,    -1,   199,    -1,    -1,    -1,   203,   204,
      -1,   206,    -1,    -1,   209,   210,    -1,    -1,    -1,   214,
     215,   216,   217,    -1,    -1,   220,   221,   222,    -1,    -1,
     225,    -1,    -1,    -1,    -1,   230,   231,    -1,    -1,    -1,
     235,    -1,    -1,    -1,   239,   240,    -1,   242,   243,    -1,
      -1,    -1,   247,    -1,    -1,   250,   251,    -1,    -1,   254,
      -1,    -1,   257,   258,    -1,    -1,    -1,    -1,    -1,   264,
     265,    -1,   267,    -1,   269,    -1,   271,   272,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   280,    -1,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,    -1,   300,   301,   302,    -1,   304,
     305,   306,   307,    -1,   309,   310,    -1,    -1,    -1,    -1,
     315,   316,   317,   318,   319,   320,    -1,    -1,   323,   324,
      -1,   326,    -1,   328,    -1,   330,   331,   332,   333,   334,
     335,   336,   337,   338,    -1,    -1,   341,   342,    -1,    -1,
     345,   346,   347,   348,    -1,    -1,    -1,   352,   353,    -1,
      -1,    -1,   357,    -1,   359,   360,   361,    -1,   363,   364,
     365,    -1,   367,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   377,   378,   379,    -1,   381,   382,    -1,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,    -1,
      -1,   396,   397,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,    -1,   408,   409,   410,    -1,    -1,   413,    -1,
      -1,    -1,   417,   418,   419,   420,   421,    -1,    -1,   424,
     425,   426,   427,   428,    -1,   430,   431,    -1,   433,   434,
     435,    -1,    -1,   438,    -1,   440,    -1,   442,   443,    -1,
     445,   446,   447,    -1,   449,    -1,    -1,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,    -1,   464,
     465,    -1,    -1,    -1,   469,   470,   471,   472,    -1,    -1,
      -1,   476,    -1,    -1,    -1,   480,    -1,   482,   483,   484,
     485,    -1,   487,   488,   489,   490,   491,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   500,   501,    -1,   503,    -1,
      -1,   506,    -1,    -1,   509,   510,   511,    -1,    -1,   514,
     515,    -1,   517,   518,   519,   520,   521,   522,    -1,    -1,
     525,   526,   527,   528,    -1,   530,   531,    -1,    -1,   534,
     535,   536,   537,    -1,    -1,   540,   541,    -1,   543,   544,
     545,   546,    -1,    -1,    -1,    -1,    -1,   552,   553,    -1,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
     565,   566,    -1,   568,   569,    -1,    -1,   572,    -1,    -1,
     575,    -1,   577,    -1,   579,   580,    -1,    -1,    -1,    -1,
      -1,    -1,   587,    -1,    -1,   590,    -1,    -1,    -1,   594,
     595,   596,   597,   598,    -1,    -1,    -1,    -1,    -1,    -1,
     605,   606,    -1,   608,   609,   610,    -1,    -1,   613,    -1,
       5,    -1,     7,     8,     9,    10,    11,    -1,    -1,    -1,
      -1,    -1,    17,    -1,    -1,    20,   631,    22,    23,    24,
      25,    26,    27,    28,    -1,    30,    -1,    -1,    -1,    34,
      -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,
      45,    -1,    47,    48,    -1,    -1,    51,    -1,    -1,    54,
      55,    -1,    57,    58,    -1,    60,    -1,    62,    63,    64,
      65,    66,    67,    -1,    69,    70,    -1,    72,    73,    74,
      75,    76,    77,    78,    79,    -1,    81,    82,    -1,    84,
      85,    86,    87,    88,    -1,    90,    -1,    -1,    93,    -1,
      -1,    96,    -1,    98,    -1,    -1,   101,    -1,    -1,    -1,
     105,   106,   107,    -1,    -1,   110,    -1,    -1,    -1,    -1,
     115,   116,    -1,    -1,    -1,    -1,   121,   122,    -1,   124,
      -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,   134,
      -1,    -1,    -1,   138,    -1,    -1,   141,   142,   143,    -1,
      -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,   154,
      -1,    -1,   157,   158,    -1,   160,   161,   162,   163,   164,
     165,    -1,    -1,   168,   169,   170,    -1,    -1,   173,   174,
      -1,   176,   177,   178,    -1,    -1,   181,    -1,    -1,    -1,
     185,   186,    -1,   188,    -1,   190,    -1,   192,   193,   194,
     195,    -1,   197,    -1,   199,    -1,    -1,    -1,   203,   204,
      -1,   206,    -1,    -1,   209,   210,    -1,    -1,    -1,   214,
     215,   216,   217,    -1,    -1,   220,   221,   222,    -1,    -1,
     225,    -1,    -1,    -1,    -1,   230,   231,    -1,    -1,    -1,
     235,    -1,    -1,    -1,   239,   240,    -1,   242,   243,    -1,
      -1,    -1,   247,    -1,    -1,   250,   251,    -1,    -1,   254,
      -1,    -1,   257,   258,   259,    -1,    -1,    -1,    -1,   264,
     265,    -1,   267,    -1,   269,    -1,   271,   272,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   280,    -1,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,    -1,   300,   301,   302,    -1,   304,
     305,   306,   307,    -1,   309,   310,    -1,    -1,    -1,    -1,
     315,   316,   317,   318,   319,   320,    -1,    -1,   323,   324,
      -1,   326,    -1,   328,    -1,   330,   331,   332,   333,   334,
     335,   336,   337,   338,    -1,    -1,   341,   342,    -1,    -1,
     345,   346,   347,   348,    -1,    -1,    -1,   352,   353,    -1,
      -1,    -1,   357,    -1,   359,   360,   361,    -1,   363,   364,
     365,    -1,   367,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   377,   378,   379,    -1,   381,   382,    -1,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,    -1,
      -1,   396,   397,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,    -1,   408,   409,   410,    -1,    -1,   413,    -1,
      -1,    -1,   417,   418,   419,   420,   421,    -1,    -1,   424,
     425,   426,   427,   428,    -1,   430,   431,    -1,   433,   434,
     435,    -1,    -1,   438,    -1,   440,    -1,   442,   443,    -1,
     445,   446,   447,    -1,   449,    -1,    -1,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,    -1,   464,
     465,    -1,    -1,    -1,   469,   470,   471,   472,    -1,    -1,
      -1,   476,    -1,    -1,    -1,   480,    -1,   482,   483,   484,
     485,    -1,   487,   488,   489,   490,   491,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   500,   501,    -1,   503,    -1,
      -1,   506,    -1,    -1,   509,   510,   511,    -1,    -1,   514,
     515,    -1,   517,   518,   519,   520,   521,   522,    -1,    -1,
     525,   526,   527,   528,    -1,   530,   531,    -1,    -1,   534,
     535,   536,   537,    -1,   539,   540,   541,    -1,   543,   544,
     545,   546,    -1,    -1,    -1,    -1,    -1,   552,   553,    -1,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
     565,   566,    -1,   568,   569,    -1,    -1,   572,    -1,    -1,
     575,    -1,   577,    -1,   579,   580,    -1,    -1,    -1,    -1,
      -1,    -1,   587,    -1,    -1,   590,    -1,    -1,    -1,   594,
     595,   596,   597,   598,    -1,    -1,    -1,    -1,    -1,    -1,
     605,   606,    -1,   608,   609,   610,    -1,    -1,   613,    -1,
       5,    -1,     7,     8,     9,    10,    11,    -1,    -1,    -1,
      -1,    -1,    17,    -1,    -1,    20,   631,    22,    23,    24,
      25,    26,    27,    28,    -1,    30,    -1,    -1,    -1,    34,
      -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,
      45,    -1,    47,    48,    -1,    -1,    51,    -1,    -1,    54,
      55,    -1,    57,    58,    -1,    60,    -1,    62,    63,    64,
      65,    66,    67,    -1,    69,    70,    -1,    72,    73,    74,
      75,    76,    77,    78,    79,    -1,    81,    82,    -1,    84,
      85,    86,    87,    88,    -1,    90,    -1,    -1,    93,    -1,
      -1,    96,    -1,    98,    -1,    -1,   101,    -1,    -1,    -1,
     105,   106,   107,    -1,    -1,   110,    -1,    -1,    -1,    -1,
     115,   116,    -1,    -1,    -1,    -1,   121,   122,    -1,   124,
      -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,   134,
      -1,    -1,    -1,   138,    -1,    -1,   141,   142,   143,    -1,
      -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,   154,
      -1,    -1,   157,   158,    -1,   160,   161,   162,   163,   164,
     165,    -1,    -1,   168,   169,   170,    -1,    -1,   173,   174,
      -1,   176,   177,   178,    -1,    -1,   181,    -1,    -1,    -1,
     185,   186,    -1,   188,    -1,   190,    -1,   192,   193,   194,
     195,    -1,   197,    -1,   199,    -1,    -1,    -1,   203,   204,
      -1,   206,    -1,    -1,   209,   210,    -1,    -1,    -1,   214,
     215,   216,   217,    -1,    -1,   220,   221,   222,    -1,    -1,
     225,    -1,    -1,    -1,    -1,   230,   231,    -1,    -1,    -1,
     235,    -1,    -1,    -1,   239,   240,    -1,   242,   243,    -1,
      -1,    -1,   247,    -1,    -1,   250,   251,    -1,    -1,   254,
      -1,    -1,   257,   258,   259,    -1,    -1,    -1,    -1,   264,
     265,    -1,   267,    -1,   269,    -1,   271,   272,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   280,    -1,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,    -1,   300,   301,   302,    -1,   304,
     305,   306,   307,    -1,   309,   310,    -1,    -1,    -1,    -1,
     315,   316,   317,   318,   319,   320,    -1,    -1,   323,   324,
      -1,   326,    -1,   328,    -1,   330,   331,   332,   333,   334,
     335,   336,   337,   338,    -1,    -1,   341,   342,    -1,    -1,
     345,   346,   347,   348,    -1,    -1,    -1,   352,   353,    -1,
      -1,    -1,   357,    -1,   359,   360,   361,    -1,   363,   364,
     365,    -1,   367,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   377,   378,   379,    -1,   381,   382,    -1,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,    -1,
      -1,   396,   397,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,    -1,   408,   409,   410,    -1,    -1,   413,    -1,
      -1,    -1,   417,   418,   419,   420,   421,    -1,    -1,   424,
     425,   426,   427,   428,    -1,   430,   431,    -1,   433,   434,
     435,    -1,    -1,   438,    -1,   440,    -1,   442,   443,    -1,
     445,   446,   447,    -1,   449,    -1,    -1,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,    -1,   464,
     465,    -1,    -1,    -1,   469,   470,   471,   472,    -1,    -1,
      -1,   476,    -1,    -1,    -1,   480,    -1,   482,   483,   484,
     485,    -1,   487,   488,   489,   490,   491,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   500,   501,    -1,   503,    -1,
      -1,   506,    -1,    -1,   509,   510,   511,    -1,    -1,   514,
     515,    -1,   517,   518,   519,   520,   521,   522,    -1,    -1,
     525,   526,   527,   528,    -1,   530,   531,    -1,    -1,   534,
     535,   536,   537,    -1,   539,   540,   541,    -1,   543,   544,
     545,   546,    -1,    -1,    -1,    -1,    -1,   552,   553,    -1,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
     565,   566,    -1,   568,   569,    -1,    -1,   572,    -1,    -1,
     575,    -1,   577,    -1,   579,   580,    -1,    -1,    -1,    -1,
      -1,    -1,   587,    -1,    -1,   590,    -1,    -1,    -1,   594,
     595,   596,   597,   598,    -1,    -1,    -1,    -1,    -1,    -1,
     605,   606,    -1,   608,   609,   610,    -1,    -1,   613,    -1,
       5,    -1,     7,     8,     9,    10,    11,    -1,    -1,    -1,
      -1,    -1,    17,    -1,    -1,    20,   631,    22,    23,    24,
      25,    26,    27,    28,    -1,    30,    -1,    -1,    -1,    34,
      -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,
      45,    -1,    47,    48,    -1,    -1,    51,    -1,    -1,    54,
      55,    -1,    57,    58,    59,    60,    -1,    62,    63,    64,
      65,    66,    67,    -1,    69,    70,    -1,    72,    73,    74,
      75,    76,    77,    78,    79,    -1,    81,    82,    -1,    84,
      85,    86,    87,    88,    -1,    90,    -1,    -1,    93,    -1,
      -1,    96,    -1,    98,    -1,    -1,   101,    -1,    -1,    -1,
     105,   106,   107,    -1,    -1,   110,    -1,    -1,    -1,    -1,
     115,   116,    -1,    -1,    -1,   120,   121,   122,    -1,   124,
      -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,   134,
      -1,    -1,    -1,   138,    -1,    -1,   141,   142,   143,    -1,
      -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,   154,
      -1,    -1,   157,   158,    -1,   160,   161,   162,   163,   164,
     165,    -1,    -1,   168,   169,   170,    -1,    -1,   173,   174,
      -1,   176,   177,   178,    -1,    -1,   181,    -1,    -1,    -1,
     185,   186,    -1,   188,    -1,   190,    -1,   192,   193,   194,
     195,    -1,   197,    -1,   199,    -1,    -1,    -1,   203,   204,
      -1,   206,    -1,    -1,   209,   210,    -1,    -1,    -1,   214,
     215,   216,   217,    -1,    -1,   220,   221,   222,    -1,    -1,
     225,    -1,    -1,    -1,    -1,   230,   231,    -1,    -1,    -1,
     235,    -1,    -1,    -1,   239,   240,    -1,   242,   243,    -1,
      -1,    -1,   247,    -1,    -1,   250,   251,    -1,    -1,   254,
      -1,    -1,   257,   258,    -1,    -1,    -1,    -1,    -1,   264,
     265,    -1,   267,    -1,   269,    -1,   271,   272,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   280,    -1,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,    -1,   300,   301,   302,    -1,   304,
     305,   306,   307,    -1,   309,   310,    -1,    -1,    -1,    -1,
     315,   316,   317,   318,   319,   320,    -1,    -1,   323,   324,
      -1,   326,    -1,   328,    -1,   330,   331,   332,   333,   334,
     335,   336,   337,   338,    -1,    -1,   341,   342,    -1,    -1,
     345,   346,   347,   348,    -1,    -1,    -1,   352,   353,    -1,
      -1,    -1,   357,    -1,   359,   360,   361,    -1,   363,   364,
     365,    -1,   367,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   377,   378,   379,    -1,   381,   382,    -1,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,    -1,
      -1,   396,   397,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,    -1,   408,   409,   410,    -1,    -1,   413,    -1,
      -1,    -1,   417,   418,   419,   420,   421,    -1,    -1,   424,
     425,   426,   427,   428,    -1,   430,   431,    -1,   433,   434,
     435,    -1,    -1,   438,    -1,   440,    -1,   442,   443,    -1,
     445,   446,   447,    -1,   449,    -1,    -1,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,    -1,   464,
     465,    -1,    -1,    -1,   469,   470,   471,   472,    -1,    -1,
      -1,   476,    -1,    -1,    -1,   480,    -1,   482,   483,   484,
     485,    -1,   487,   488,   489,   490,   491,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   500,   501,    -1,   503,    -1,
      -1,   506,    -1,    -1,   509,   510,   511,    -1,    -1,   514,
     515,    -1,   517,   518,   519,   520,   521,   522,    -1,    -1,
     525,   526,   527,   528,    -1,   530,   531,    -1,    -1,   534,
     535,   536,   537,    -1,    -1,   540,   541,    -1,   543,   544,
     545,   546,    -1,    -1,    -1,    -1,    -1,   552,   553,    -1,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
     565,   566,    -1,   568,   569,    -1,    -1,   572,    -1,    -1,
     575,    -1,   577,    -1,   579,   580,    -1,    -1,    -1,    -1,
      -1,    -1,   587,    -1,    -1,   590,    -1,    -1,    -1,   594,
     595,   596,   597,   598,    -1,    -1,    -1,    -1,    -1,    -1,
     605,   606,    -1,   608,   609,   610,    -1,    -1,   613,    -1,
       5,    -1,     7,     8,     9,    10,    11,    -1,    -1,    -1,
      -1,    -1,    17,    -1,    -1,    20,   631,    22,    23,    24,
      25,    26,    27,    28,    -1,    30,    -1,    -1,    -1,    34,
      -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,
      45,    -1,    47,    48,    -1,    -1,    51,    -1,    -1,    54,
      55,    -1,    57,    58,    -1,    60,    -1,    62,    63,    64,
      65,    66,    67,    -1,    69,    70,    -1,    72,    73,    74,
      75,    76,    77,    78,    79,    -1,    81,    82,    -1,    84,
      85,    86,    87,    88,    -1,    90,    -1,    -1,    93,    -1,
      -1,    96,    -1,    98,    -1,    -1,   101,    -1,    -1,    -1,
     105,   106,   107,    -1,    -1,   110,    -1,    -1,    -1,    -1,
     115,   116,    -1,    -1,    -1,    -1,   121,   122,    -1,   124,
      -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,   134,
      -1,    -1,    -1,   138,    -1,    -1,   141,   142,   143,    -1,
      -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,   154,
      -1,    -1,   157,   158,    -1,   160,   161,   162,   163,   164,
     165,    -1,    -1,   168,   169,   170,    -1,    -1,   173,   174,
      -1,   176,   177,   178,    -1,    -1,   181,    -1,    -1,    -1,
     185,   186,    -1,   188,    -1,   190,    -1,   192,   193,   194,
     195,    -1,   197,    -1,   199,    -1,    -1,    -1,   203,   204,
      -1,   206,    -1,    -1,   209,   210,    -1,    -1,    -1,   214,
     215,   216,   217,    -1,    -1,   220,   221,   222,    -1,    -1,
     225,    -1,    -1,    -1,    -1,   230,   231,    -1,    -1,    -1,
     235,    -1,    -1,    -1,   239,   240,    -1,   242,   243,    -1,
      -1,    -1,   247,    -1,    -1,   250,   251,    -1,    -1,   254,
      -1,    -1,   257,   258,   259,    -1,    -1,    -1,    -1,   264,
     265,    -1,   267,    -1,   269,    -1,   271,   272,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   280,    -1,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,    -1,   300,   301,   302,    -1,   304,
     305,   306,   307,    -1,   309,   310,    -1,    -1,    -1,    -1,
     315,   316,   317,   318,   319,   320,    -1,    -1,   323,   324,
      -1,   326,    -1,   328,    -1,   330,   331,   332,   333,   334,
     335,   336,   337,   338,    -1,    -1,   341,   342,    -1,    -1,
     345,   346,   347,   348,    -1,    -1,    -1,   352,   353,    -1,
      -1,    -1,   357,    -1,   359,   360,   361,    -1,   363,   364,
     365,    -1,   367,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   377,   378,   379,    -1,   381,   382,    -1,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,    -1,
      -1,   396,   397,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,    -1,   408,   409,   410,    -1,    -1,   413,    -1,
      -1,    -1,   417,   418,   419,   420,   421,    -1,    -1,   424,
     425,   426,   427,   428,    -1,   430,   431,    -1,   433,   434,
     435,    -1,    -1,   438,    -1,   440,    -1,   442,   443,    -1,
     445,   446,   447,    -1,   449,    -1,    -1,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,    -1,   464,
     465,    -1,    -1,    -1,   469,   470,   471,   472,    -1,    -1,
      -1,   476,    -1,    -1,    -1,   480,    -1,   482,   483,   484,
     485,    -1,   487,   488,   489,   490,   491,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   500,   501,    -1,   503,    -1,
      -1,   506,    -1,    -1,   509,   510,   511,    -1,    -1,   514,
     515,    -1,   517,   518,   519,   520,   521,   522,    -1,    -1,
     525,   526,   527,   528,    -1,   530,   531,    -1,    -1,   534,
     535,   536,   537,    -1,   539,   540,   541,    -1,   543,   544,
     545,   546,    -1,    -1,    -1,    -1,    -1,   552,   553,    -1,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
     565,   566,    -1,   568,   569,    -1,    -1,   572,    -1,    -1,
     575,    -1,   577,    -1,   579,   580,    -1,    -1,    -1,    -1,
      -1,    -1,   587,    -1,    -1,   590,    -1,    -1,    -1,   594,
     595,   596,   597,   598,    -1,    -1,    -1,    -1,    -1,    -1,
     605,   606,    -1,   608,   609,   610,    -1,    -1,   613,    -1,
       5,    -1,     7,     8,     9,    10,    11,    -1,    -1,    -1,
      -1,    -1,    17,    -1,    -1,    20,   631,    22,    23,    24,
      25,    26,    27,    28,    -1,    30,    -1,    -1,    -1,    34,
      -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,
      45,    -1,    47,    48,    -1,    -1,    51,    -1,    -1,    54,
      55,    -1,    57,    58,    -1,    60,    -1,    62,    63,    64,
      65,    66,    67,    -1,    69,    70,    -1,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    -1,    84,
      85,    86,    87,    88,    -1,    90,    -1,    -1,    93,    -1,
      -1,    96,    -1,    98,    -1,    -1,   101,    -1,    -1,    -1,
     105,   106,   107,    -1,    -1,   110,    -1,    -1,    -1,    -1,
     115,   116,    -1,    -1,    -1,    -1,   121,   122,    -1,   124,
      -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,   134,
      -1,    -1,    -1,   138,    -1,    -1,   141,   142,   143,    -1,
      -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,   154,
      -1,    -1,   157,   158,    -1,   160,   161,   162,   163,   164,
     165,    -1,    -1,   168,   169,   170,    -1,    -1,   173,   174,
      -1,   176,   177,   178,    -1,    -1,   181,    -1,    -1,    -1,
     185,   186,    -1,   188,    -1,   190,    -1,   192,   193,   194,
     195,    -1,   197,    -1,   199,    -1,    -1,    -1,   203,   204,
      -1,   206,    -1,    -1,   209,   210,    -1,    -1,    -1,   214,
     215,   216,   217,    -1,    -1,   220,   221,   222,    -1,    -1,
     225,    -1,    -1,    -1,    -1,   230,   231,    -1,    -1,    -1,
     235,    -1,    -1,    -1,   239,   240,    -1,   242,   243,    -1,
      -1,    -1,   247,    -1,    -1,   250,   251,    -1,    -1,   254,
      -1,    -1,   257,   258,    -1,    -1,    -1,    -1,    -1,   264,
     265,    -1,   267,    -1,   269,    -1,   271,   272,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   280,    -1,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,    -1,   300,   301,   302,    -1,   304,
     305,   306,   307,    -1,   309,   310,    -1,    -1,    -1,    -1,
     315,   316,   317,   318,   319,   320,    -1,    -1,   323,   324,
      -1,   326,    -1,   328,    -1,   330,   331,   332,   333,   334,
     335,   336,   337,   338,    -1,    -1,   341,   342,    -1,    -1,
     345,   346,   347,   348,    -1,    -1,    -1,   352,   353,    -1,
      -1,    -1,   357,    -1,   359,   360,   361,    -1,   363,   364,
     365,    -1,   367,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   377,   378,   379,    -1,   381,   382,    -1,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,    -1,
      -1,   396,   397,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,    -1,   408,   409,   410,    -1,    -1,   413,    -1,
      -1,    -1,   417,   418,   419,   420,   421,    -1,    -1,   424,
     425,   426,   427,   428,    -1,   430,   431,    -1,   433,   434,
     435,    -1,    -1,   438,    -1,   440,    -1,   442,   443,    -1,
     445,   446,   447,    -1,   449,    -1,    -1,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,    -1,   464,
     465,    -1,    -1,    -1,   469,   470,   471,   472,    -1,    -1,
      -1,   476,    -1,    -1,    -1,   480,    -1,   482,   483,   484,
     485,    -1,   487,   488,   489,   490,   491,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   500,   501,    -1,   503,    -1,
      -1,   506,    -1,    -1,   509,   510,   511,    -1,    -1,   514,
     515,    -1,   517,   518,   519,   520,   521,   522,    -1,    -1,
     525,   526,   527,   528,    -1,   530,   531,    -1,    -1,   534,
     535,   536,   537,    -1,    -1,   540,   541,    -1,   543,   544,
     545,   546,    -1,    -1,    -1,    -1,    -1,   552,   553,    -1,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
     565,   566,    -1,   568,   569,    -1,    -1,   572,    -1,    -1,
     575,    -1,   577,    -1,   579,   580,    -1,    -1,    -1,    -1,
      -1,    -1,   587,    -1,    -1,   590,    -1,    -1,    -1,   594,
     595,   596,   597,   598,    -1,    -1,    -1,    -1,    -1,    -1,
     605,   606,    -1,   608,   609,   610,    -1,    -1,   613,    -1,
       5,    -1,     7,     8,     9,    10,    11,    -1,    -1,    -1,
      -1,    -1,    17,    -1,    -1,    20,   631,    22,    23,    24,
      25,    26,    27,    28,    -1,    30,    -1,    -1,    -1,    34,
      -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,
      45,    -1,    47,    48,    -1,    -1,    51,    -1,    -1,    54,
      55,    -1,    57,    58,    -1,    60,    -1,    62,    63,    64,
      65,    66,    67,    -1,    69,    70,    -1,    72,    73,    74,
      75,    76,    77,    78,    79,    -1,    81,    82,    -1,    84,
      85,    86,    87,    88,    -1,    90,    -1,    -1,    93,    -1,
      -1,    96,    -1,    98,    -1,    -1,   101,    -1,    -1,    -1,
     105,   106,   107,    -1,    -1,   110,    -1,    -1,    -1,    -1,
     115,   116,    -1,    -1,    -1,    -1,   121,   122,    -1,   124,
      -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,   134,
      -1,    -1,    -1,   138,    -1,    -1,   141,   142,   143,    -1,
      -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,   154,
      -1,    -1,   157,   158,    -1,   160,   161,   162,   163,   164,
     165,    -1,    -1,   168,   169,   170,    -1,    -1,   173,   174,
      -1,   176,   177,   178,    -1,    -1,   181,    -1,    -1,    -1,
     185,   186,    -1,   188,    -1,   190,    -1,   192,   193,   194,
     195,    -1,   197,    -1,   199,    -1,    -1,    -1,   203,   204,
      -1,   206,    -1,    -1,   209,   210,    -1,    -1,    -1,   214,
     215,   216,   217,    -1,    -1,   220,   221,   222,    -1,    -1,
     225,    -1,    -1,    -1,    -1,   230,   231,    -1,    -1,    -1,
     235,    -1,    -1,    -1,   239,   240,    -1,   242,   243,    -1,
      -1,    -1,   247,    -1,    -1,   250,   251,    -1,    -1,   254,
      -1,    -1,   257,   258,    -1,    -1,    -1,    -1,    -1,   264,
     265,    -1,   267,    -1,   269,    -1,   271,   272,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   280,    -1,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,    -1,   300,   301,   302,    -1,   304,
     305,   306,   307,    -1,   309,   310,    -1,    -1,    -1,    -1,
     315,   316,   317,   318,   319,   320,    -1,    -1,   323,   324,
      -1,   326,    -1,   328,    -1,   330,   331,   332,   333,   334,
     335,   336,   337,   338,    -1,    -1,   341,   342,    -1,    -1,
     345,   346,   347,   348,    -1,    -1,    -1,   352,   353,    -1,
      -1,    -1,   357,    -1,   359,   360,   361,    -1,   363,   364,
     365,    -1,   367,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   377,   378,   379,    -1,   381,   382,    -1,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,    -1,
      -1,   396,   397,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,    -1,   408,   409,   410,    -1,    -1,   413,    -1,
      -1,    -1,   417,   418,   419,   420,   421,    -1,    -1,   424,
     425,   426,   427,   428,    -1,   430,   431,    -1,   433,   434,
     435,    -1,    -1,   438,    -1,   440,    -1,   442,   443,    -1,
     445,   446,   447,    -1,   449,    -1,    -1,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,    -1,   464,
     465,    -1,    -1,    -1,   469,   470,   471,   472,    -1,    -1,
      -1,   476,    -1,    -1,    -1,   480,    -1,   482,   483,   484,
     485,    -1,   487,   488,   489,   490,   491,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   500,   501,    -1,   503,    -1,
      -1,   506,    -1,    -1,   509,   510,   511,    -1,    -1,   514,
     515,    -1,   517,   518,   519,   520,   521,   522,    -1,    -1,
     525,   526,   527,   528,    -1,   530,   531,    -1,    -1,   534,
     535,   536,   537,    -1,    -1,   540,   541,    -1,   543,   544,
     545,   546,    -1,    -1,    -1,    -1,    -1,   552,   553,    -1,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
     565,   566,    -1,   568,   569,    -1,    -1,   572,    -1,    -1,
     575,    -1,   577,    -1,   579,   580,    -1,    -1,    -1,    -1,
      -1,    -1,   587,    -1,    -1,   590,    -1,    -1,    -1,   594,
     595,   596,   597,   598,    -1,    -1,    -1,    -1,    -1,    -1,
     605,   606,    -1,   608,   609,   610,    -1,    -1,   613,    -1,
       5,    -1,     7,     8,     9,    10,    11,    -1,    -1,    -1,
      -1,    -1,    17,    -1,    -1,    -1,   631,    22,    23,    24,
      25,    26,    27,    -1,    -1,    30,    -1,    -1,    -1,    34,
      -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,
      45,    -1,    -1,    -1,    -1,    -1,    51,    52,    -1,    54,
      55,    -1,    57,    -1,    -1,    -1,    -1,    62,    63,    64,
      65,    66,    67,    -1,    69,    70,    -1,    72,    -1,    74,
      -1,    76,    77,    78,    79,    -1,    81,    82,    -1,    84,
      85,    86,    -1,    88,    -1,    90,    -1,    -1,    93,    -1,
      -1,    96,    -1,    98,    -1,    -1,   101,    -1,    -1,    -1,
     105,   106,   107,    -1,    -1,   110,    -1,    -1,    -1,    -1,
     115,    -1,    -1,    -1,    -1,    -1,   121,   122,    -1,   124,
      -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,   134,
      -1,    -1,    -1,    -1,    -1,    -1,   141,   142,   143,    -1,
      -1,    -1,   147,    -1,    -1,   150,    -1,   152,   153,   154,
      -1,    -1,   157,   158,    -1,   160,   161,   162,   163,   164,
      -1,    -1,    -1,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,   178,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   186,    -1,   188,    -1,   190,    -1,   192,   193,   194,
     195,    -1,   197,    -1,   199,    -1,    -1,    -1,    -1,   204,
      -1,    -1,    -1,    -1,    -1,   210,    -1,    -1,    -1,   214,
     215,   216,   217,   218,    -1,   220,   221,   222,    -1,    -1,
     225,    -1,    -1,    -1,    -1,   230,    -1,    -1,    -1,    -1,
     235,    -1,    -1,    -1,   239,   240,    -1,   242,   243,   244,
      -1,    -1,   247,    -1,    -1,    -1,   251,    -1,    -1,   254,
     255,    -1,   257,   258,    -1,    -1,    -1,    -1,    -1,   264,
     265,    -1,   267,    -1,   269,    -1,   271,   272,    -1,    -1,
      -1,    -1,   277,    -1,    -1,   280,    -1,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,    -1,   300,   301,   302,    -1,   304,
     305,   306,   307,    -1,   309,   310,    -1,    -1,    -1,    -1,
     315,   316,   317,   318,   319,   320,    -1,    -1,   323,   324,
      -1,   326,    -1,   328,    -1,   330,   331,   332,   333,   334,
     335,   336,   337,   338,    -1,    -1,   341,   342,    -1,    -1,
     345,   346,   347,   348,    -1,    -1,    -1,    -1,   353,    -1,
      -1,    -1,   357,    -1,   359,   360,   361,    -1,   363,   364,
     365,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   378,   379,    -1,    -1,   382,    -1,   384,
     385,   386,   387,   388,   389,   390,   391,   392,    -1,    -1,
      -1,    -1,   397,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,    -1,   408,   409,   410,    -1,    -1,   413,    -1,
      -1,    -1,   417,   418,   419,   420,   421,    -1,    -1,   424,
     425,   426,   427,   428,    -1,   430,    -1,    -1,   433,    -1,
     435,   436,    -1,   438,    -1,    -1,    -1,   442,    -1,    -1,
     445,   446,   447,   448,   449,    -1,    -1,    -1,   453,   454,
     455,   456,   457,   458,   459,    -1,   461,   462,    -1,   464,
      -1,    -1,    -1,    -1,   469,   470,   471,    -1,    -1,    -1,
      -1,   476,    -1,    -1,    -1,   480,    -1,    -1,   483,    -1,
     485,    -1,   487,    -1,    -1,   490,   491,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   500,   501,    -1,   503,    -1,
      -1,   506,    -1,    -1,   509,    -1,   511,    -1,    -1,    -1,
     515,    -1,   517,   518,   519,   520,   521,   522,    -1,    -1,
     525,   526,   527,   528,    -1,   530,   531,    -1,    -1,   534,
     535,   536,   537,    -1,    -1,   540,   541,    -1,   543,   544,
     545,   546,    -1,    -1,    -1,    -1,    -1,   552,   553,    -1,
      -1,    -1,    -1,   558,   559,   560,    -1,   562,   563,    -1,
     565,   566,    -1,    -1,    -1,    -1,    -1,   572,    -1,    -1,
     575,    -1,    -1,    -1,   579,   580,    -1,    -1,    -1,    -1,
      -1,    -1,   587,    -1,    -1,   590,    -1,    -1,    -1,   594,
     595,   596,   597,   598,    -1,    -1,   601,    -1,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,     5,   613,     7,
       8,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,
      -1,   626,    20,    -1,    22,    23,    24,    25,    26,    27,
      28,    -1,    30,    -1,    -1,    -1,    34,    -1,    -1,    -1,
      38,    -1,    -1,    41,    42,    43,    -1,    45,    -1,    47,
      48,    -1,    -1,    51,    -1,    -1,    54,    55,    -1,    57,
      58,    -1,    60,    -1,    62,    63,    64,    65,    66,    67,
      -1,    69,    70,    -1,    72,    73,    74,    75,    76,    77,
      78,    79,    -1,    81,    82,    -1,    84,    85,    86,    87,
      88,    -1,    90,    -1,    -1,    93,    -1,    -1,    96,    -1,
      98,    -1,    -1,   101,    -1,    -1,    -1,   105,   106,   107,
      -1,    -1,   110,    -1,    -1,    -1,    -1,   115,   116,    -1,
      -1,    -1,    -1,   121,   122,    -1,   124,    -1,    -1,    -1,
     128,    -1,   130,   131,   132,   133,   134,    -1,    -1,    -1,
     138,    -1,    -1,   141,   142,   143,    -1,    -1,    -1,   147,
      -1,   149,   150,    -1,   152,   153,   154,    -1,    -1,   157,
     158,    -1,   160,   161,   162,   163,   164,   165,    -1,    -1,
     168,   169,   170,    -1,    -1,   173,   174,    -1,   176,   177,
     178,    -1,    -1,   181,    -1,    -1,    -1,   185,   186,    -1,
     188,    -1,   190,    -1,   192,   193,   194,   195,    -1,   197,
      -1,   199,    -1,    -1,    -1,   203,   204,    -1,   206,    -1,
      -1,   209,   210,    -1,    -1,    -1,   214,   215,   216,   217,
      -1,    -1,   220,   221,   222,    -1,    -1,   225,    -1,    -1,
      -1,    -1,   230,   231,    -1,    -1,    -1,   235,    -1,    -1,
      -1,   239,   240,    -1,   242,   243,    -1,    -1,    -1,   247,
      -1,    -1,   250,   251,    -1,    -1,   254,    -1,    -1,   257,
     258,    -1,    -1,    -1,    -1,    -1,   264,   265,    -1,   267,
      -1,   269,    -1,   271,   272,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   280,    -1,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,    -1,   300,   301,   302,    -1,   304,   305,   306,   307,
      -1,   309,   310,    -1,    -1,    -1,    -1,   315,   316,   317,
     318,   319,   320,    -1,    -1,   323,   324,    -1,   326,    -1,
     328,    -1,   330,   331,   332,   333,   334,   335,   336,   337,
     338,    -1,    -1,   341,   342,    -1,    -1,   345,   346,   347,
     348,    -1,    -1,    -1,   352,   353,    -1,    -1,    -1,   357,
      -1,   359,   360,   361,    -1,   363,   364,   365,    -1,   367,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   377,
     378,   379,    -1,   381,   382,    -1,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,    -1,    -1,   396,   397,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,    -1,
     408,   409,   410,    -1,    -1,   413,    -1,    -1,    -1,   417,
     418,   419,   420,   421,    -1,    -1,   424,   425,   426,   427,
     428,    -1,   430,   431,    -1,   433,   434,   435,    -1,    -1,
     438,    -1,   440,    -1,   442,   443,    -1,   445,   446,   447,
      -1,   449,    -1,    -1,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,    -1,   464,   465,    -1,    -1,
      -1,   469,   470,   471,   472,    -1,    -1,    -1,   476,    -1,
      -1,    -1,   480,    -1,   482,   483,   484,   485,    -1,   487,
     488,   489,   490,   491,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   500,   501,    -1,   503,    -1,    -1,   506,    -1,
      -1,   509,   510,   511,    -1,    -1,   514,   515,    -1,   517,
     518,   519,   520,   521,   522,    -1,    -1,   525,   526,   527,
     528,    -1,   530,   531,    -1,    -1,   534,   535,   536,   537,
      -1,    -1,   540,   541,    -1,   543,   544,   545,   546,    -1,
      -1,    -1,    -1,    -1,   552,   553,    -1,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,   565,   566,    -1,
     568,   569,    -1,    -1,   572,    -1,    -1,   575,    -1,   577,
      -1,   579,   580,    -1,    -1,    -1,    -1,    -1,    -1,   587,
      -1,    -1,   590,    -1,    -1,    -1,   594,   595,   596,   597,
     598,    -1,    -1,    -1,    -1,    -1,    -1,   605,   606,    -1,
     608,   609,   610,    -1,     5,   613,     7,     8,     9,    10,
      11,   619,    -1,    -1,    -1,    -1,    17,    -1,    -1,    20,
      -1,    22,    23,    24,    25,    26,    27,    28,    -1,    30,
      -1,    -1,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,
      41,    42,    43,    -1,    45,    -1,    47,    48,    -1,    -1,
      51,    -1,    -1,    54,    55,    -1,    57,    58,    -1,    60,
      -1,    62,    63,    64,    65,    66,    67,    -1,    69,    70,
      -1,    72,    73,    74,    75,    76,    77,    78,    79,    -1,
      81,    82,    -1,    84,    85,    86,    87,    88,    -1,    90,
      -1,    -1,    93,    -1,    -1,    96,    -1,    98,    -1,    -1,
     101,    -1,    -1,    -1,   105,   106,   107,    -1,    -1,   110,
      -1,    -1,    -1,    -1,   115,   116,    -1,    -1,    -1,    -1,
     121,   122,    -1,   124,    -1,    -1,    -1,   128,    -1,   130,
     131,   132,   133,   134,    -1,    -1,    -1,   138,    -1,    -1,
     141,   142,   143,    -1,    -1,    -1,   147,    -1,   149,   150,
      -1,   152,   153,   154,    -1,    -1,   157,   158,    -1,   160,
     161,   162,   163,   164,   165,    -1,    -1,   168,   169,   170,
      -1,    -1,   173,   174,    -1,   176,   177,   178,    -1,    -1,
     181,    -1,    -1,    -1,   185,   186,    -1,   188,    -1,   190,
      -1,   192,   193,   194,   195,    -1,   197,    -1,   199,    -1,
      -1,    -1,   203,   204,    -1,   206,    -1,    -1,   209,   210,
      -1,    -1,    -1,   214,   215,   216,   217,    -1,    -1,   220,
     221,   222,    -1,    -1,   225,    -1,    -1,    -1,    -1,   230,
     231,    -1,    -1,    -1,   235,    -1,    -1,    -1,   239,   240,
      -1,   242,   243,    -1,    -1,    -1,   247,    -1,    -1,   250,
     251,    -1,    -1,   254,    -1,    -1,   257,   258,    -1,    -1,
      -1,    -1,    -1,   264,   265,    -1,   267,    -1,   269,    -1,
     271,   272,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,
      -1,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,    -1,   300,
     301,   302,    -1,   304,   305,   306,   307,    -1,   309,   310,
      -1,    -1,    -1,    -1,   315,   316,   317,   318,   319,   320,
      -1,    -1,   323,   324,    -1,   326,    -1,   328,    -1,   330,
     331,   332,   333,   334,   335,   336,   337,   338,    -1,    -1,
     341,   342,    -1,    -1,   345,   346,   347,   348,    -1,    -1,
      -1,   352,   353,    -1,    -1,    -1,   357,    -1,   359,   360,
     361,    -1,   363,   364,   365,    -1,   367,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   377,   378,   379,    -1,
     381,   382,    -1,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,    -1,    -1,   396,   397,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,    -1,   408,   409,   410,
      -1,    -1,   413,    -1,    -1,    -1,   417,   418,   419,   420,
     421,    -1,    -1,   424,   425,   426,   427,   428,    -1,   430,
     431,    -1,   433,   434,   435,    -1,    -1,   438,    -1,   440,
      -1,   442,   443,    -1,   445,   446,   447,    -1,   449,    -1,
      -1,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,    -1,   464,   465,    -1,    -1,    -1,   469,   470,
     471,   472,    -1,    -1,    -1,   476,    -1,    -1,    -1,   480,
      -1,   482,   483,   484,   485,    -1,   487,   488,   489,   490,
     491,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   500,
     501,    -1,   503,    -1,    -1,   506,    -1,    -1,   509,   510,
     511,    -1,    -1,   514,   515,    -1,   517,   518,   519,   520,
     521,   522,    -1,    -1,   525,   526,   527,   528,    -1,   530,
     531,    -1,    -1,   534,   535,   536,   537,    -1,    -1,   540,
     541,    -1,   543,   544,   545,   546,    -1,    -1,    -1,    -1,
      -1,   552,   553,    -1,    -1,    -1,   557,   558,   559,   560,
      -1,   562,   563,    -1,   565,   566,    -1,   568,   569,    -1,
      -1,   572,    -1,    -1,   575,    -1,   577,    -1,   579,   580,
      -1,    -1,    -1,    -1,    -1,    -1,   587,    -1,    -1,   590,
      -1,    -1,    -1,   594,   595,   596,   597,   598,    -1,    -1,
      -1,    -1,    -1,    -1,   605,   606,    -1,   608,   609,   610,
      -1,     5,   613,     7,     8,     9,    10,    11,   619,    -1,
      -1,    -1,    -1,    17,    -1,    -1,    20,    -1,    22,    23,
      24,    25,    26,    27,    28,    -1,    30,    -1,    -1,    -1,
      34,    -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,
      -1,    45,    -1,    47,    48,    -1,    -1,    51,    -1,    -1,
      54,    55,    -1,    57,    58,    -1,    60,    -1,    62,    63,
      64,    65,    66,    67,    -1,    69,    70,    -1,    72,    73,
      74,    75,    76,    77,    78,    79,    -1,    81,    82,    -1,
      84,    85,    86,    87,    88,    -1,    90,    -1,    -1,    93,
      -1,    -1,    96,    -1,    98,    -1,    -1,   101,    -1,    -1,
      -1,   105,   106,   107,    -1,    -1,   110,    -1,    -1,    -1,
      -1,   115,   116,    -1,    -1,    -1,    -1,   121,   122,    -1,
     124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,
     134,    -1,    -1,    -1,   138,    -1,    -1,   141,   142,   143,
      -1,    -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,
     154,    -1,    -1,   157,   158,    -1,   160,   161,   162,   163,
     164,   165,    -1,    -1,   168,   169,   170,    -1,    -1,   173,
     174,    -1,   176,   177,   178,    -1,    -1,   181,    -1,    -1,
      -1,   185,   186,    -1,   188,    -1,   190,    -1,   192,   193,
     194,   195,    -1,   197,    -1,   199,    -1,    -1,    -1,   203,
     204,    -1,   206,    -1,    -1,   209,   210,    -1,    -1,    -1,
     214,   215,   216,   217,    -1,    -1,   220,   221,   222,    -1,
      -1,   225,    -1,    -1,    -1,    -1,   230,   231,    -1,    -1,
      -1,   235,    -1,    -1,    -1,   239,   240,    -1,   242,   243,
      -1,    -1,    -1,   247,    -1,    -1,   250,   251,    -1,    -1,
     254,    -1,    -1,   257,   258,    -1,    -1,    -1,    -1,    -1,
     264,   265,    -1,   267,    -1,   269,    -1,   271,   272,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   280,    -1,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,    -1,   300,   301,   302,    -1,
     304,   305,   306,   307,    -1,   309,   310,    -1,    -1,    -1,
      -1,   315,   316,   317,   318,   319,   320,    -1,    -1,   323,
     324,    -1,   326,    -1,   328,    -1,   330,   331,   332,   333,
     334,   335,   336,   337,   338,    -1,    -1,   341,   342,    -1,
      -1,   345,   346,   347,   348,    -1,    -1,    -1,   352,   353,
      -1,    -1,    -1,   357,    -1,   359,   360,   361,    -1,   363,
     364,   365,    -1,   367,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   377,   378,   379,    -1,   381,   382,    -1,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
      -1,    -1,   396,   397,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,    -1,   408,   409,   410,    -1,    -1,   413,
      -1,    -1,    -1,   417,   418,   419,   420,   421,    -1,    -1,
     424,   425,   426,   427,   428,    -1,   430,   431,    -1,   433,
     434,   435,    -1,    -1,   438,    -1,   440,    -1,   442,   443,
      -1,   445,   446,   447,    -1,   449,    -1,    -1,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,    -1,
     464,   465,    -1,    -1,    -1,   469,   470,   471,   472,    -1,
      -1,    -1,   476,    -1,    -1,    -1,   480,    -1,   482,   483,
     484,   485,    -1,   487,   488,   489,   490,   491,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   500,   501,    -1,   503,
      -1,    -1,   506,    -1,    -1,   509,   510,   511,    -1,    -1,
     514,   515,    -1,   517,   518,   519,   520,   521,   522,    -1,
      -1,   525,   526,   527,   528,    -1,   530,   531,    -1,    -1,
     534,   535,   536,   537,    -1,    -1,   540,   541,    -1,   543,
     544,   545,   546,    -1,    -1,    -1,    -1,    -1,   552,   553,
      -1,    -1,    -1,   557,   558,   559,   560,    -1,   562,   563,
      -1,   565,   566,    -1,   568,   569,    -1,    -1,   572,    -1,
      -1,   575,    -1,   577,    -1,   579,   580,    -1,    -1,    -1,
      -1,    -1,    -1,   587,    -1,    -1,   590,    -1,    -1,    -1,
     594,   595,   596,   597,   598,    -1,    -1,    -1,    -1,    -1,
      -1,   605,   606,    -1,   608,   609,   610,    -1,     5,   613,
       7,     8,     9,    10,    11,   619,    -1,    -1,    -1,    -1,
      17,    -1,    -1,    20,    -1,    22,    23,    24,    25,    26,
      27,    28,    -1,    30,    -1,    -1,    -1,    34,    -1,    -1,
      -1,    38,    -1,    -1,    41,    42,    43,    -1,    45,    -1,
      47,    48,    -1,    -1,    51,    -1,    -1,    54,    55,    -1,
      57,    58,    -1,    60,    -1,    62,    63,    64,    65,    66,
      67,    -1,    69,    70,    -1,    72,    73,    74,    75,    76,
      77,    78,    79,    -1,    81,    82,    -1,    84,    85,    86,
      87,    88,    -1,    90,    -1,    -1,    93,    -1,    -1,    96,
      -1,    98,    -1,    -1,   101,    -1,    -1,    -1,   105,   106,
     107,    -1,    -1,   110,    -1,    -1,    -1,    -1,   115,   116,
      -1,    -1,    -1,    -1,   121,   122,    -1,   124,    -1,    -1,
      -1,   128,    -1,   130,   131,   132,   133,   134,    -1,    -1,
      -1,   138,    -1,    -1,   141,   142,   143,    -1,    -1,    -1,
     147,    -1,   149,   150,    -1,   152,   153,   154,    -1,    -1,
     157,   158,    -1,   160,   161,   162,   163,   164,   165,    -1,
      -1,   168,   169,   170,    -1,    -1,   173,   174,    -1,   176,
     177,   178,    -1,    -1,   181,    -1,    -1,    -1,   185,   186,
      -1,   188,    -1,   190,    -1,   192,   193,   194,   195,    -1,
     197,    -1,   199,    -1,    -1,    -1,   203,   204,    -1,   206,
      -1,    -1,   209,   210,    -1,    -1,    -1,   214,   215,   216,
     217,    -1,    -1,   220,   221,   222,    -1,    -1,   225,    -1,
      -1,    -1,    -1,   230,   231,    -1,    -1,    -1,   235,    -1,
      -1,    -1,   239,   240,    -1,   242,   243,    -1,    -1,    -1,
     247,    -1,    -1,   250,   251,    -1,    -1,   254,    -1,    -1,
     257,   258,    -1,    -1,    -1,    -1,    -1,   264,   265,    -1,
     267,    -1,   269,    -1,   271,   272,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   280,    -1,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,    -1,   300,   301,   302,    -1,   304,   305,   306,
     307,    -1,   309,   310,    -1,    -1,    -1,    -1,   315,   316,
     317,   318,   319,   320,    -1,    -1,   323,   324,    -1,   326,
      -1,   328,    -1,   330,   331,   332,   333,   334,   335,   336,
     337,   338,    -1,    -1,   341,   342,    -1,    -1,   345,   346,
     347,   348,    -1,    -1,    -1,   352,   353,    -1,    -1,    -1,
     357,    -1,   359,   360,   361,    -1,   363,   364,   365,    -1,
     367,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     377,   378,   379,    -1,   381,   382,    -1,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,    -1,    -1,   396,
     397,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
      -1,   408,   409,   410,    -1,    -1,   413,    -1,    -1,    -1,
     417,   418,   419,   420,   421,    -1,    -1,   424,   425,   426,
     427,   428,    -1,   430,   431,    -1,   433,   434,   435,    -1,
      -1,   438,    -1,   440,    -1,   442,   443,    -1,   445,   446,
     447,    -1,   449,    -1,    -1,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,    -1,   464,   465,    -1,
      -1,    -1,   469,   470,   471,   472,    -1,    -1,    -1,   476,
      -1,    -1,    -1,   480,    -1,   482,   483,   484,   485,    -1,
     487,   488,   489,   490,   491,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   500,   501,    -1,   503,    -1,    -1,   506,
      -1,    -1,   509,   510,   511,    -1,    -1,   514,   515,    -1,
     517,   518,   519,   520,   521,   522,    -1,    -1,   525,   526,
     527,   528,    -1,   530,   531,    -1,    -1,   534,   535,   536,
     537,    -1,    -1,   540,   541,    -1,   543,   544,   545,   546,
      -1,    -1,    -1,    -1,    -1,   552,   553,    -1,    -1,    -1,
     557,   558,   559,   560,    -1,   562,   563,    -1,   565,   566,
      -1,   568,   569,    -1,    -1,   572,    -1,    -1,   575,    -1,
     577,    -1,   579,   580,    -1,    -1,    -1,    -1,    -1,    -1,
     587,    -1,    -1,   590,    -1,    -1,    -1,   594,   595,   596,
     597,   598,    -1,    -1,    -1,    -1,    -1,    -1,   605,   606,
      -1,   608,   609,   610,    -1,     5,   613,     7,     8,     9,
      10,    11,   619,    -1,    -1,    -1,    -1,    17,    -1,    -1,
      20,    -1,    22,    23,    24,    25,    26,    27,    28,    -1,
      30,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,    -1,
      -1,    41,    42,    43,    -1,    45,    -1,    47,    48,    -1,
      -1,    51,    -1,    -1,    54,    55,    -1,    57,    58,    -1,
      60,    -1,    62,    63,    64,    65,    66,    67,    -1,    69,
      70,    -1,    72,    73,    74,    75,    76,    77,    78,    79,
      -1,    81,    82,    -1,    84,    85,    86,    87,    88,    -1,
      90,    -1,    -1,    93,    -1,    -1,    96,    -1,    98,    -1,
      -1,   101,    -1,    -1,    -1,   105,   106,   107,    -1,    -1,
     110,    -1,    -1,    -1,    -1,   115,   116,   117,    -1,    -1,
      -1,   121,   122,    -1,   124,    -1,    -1,    -1,   128,    -1,
     130,   131,   132,   133,   134,    -1,    -1,    -1,   138,    -1,
      -1,   141,   142,   143,    -1,    -1,    -1,   147,    -1,   149,
     150,    -1,   152,   153,   154,    -1,    -1,   157,   158,    -1,
     160,   161,   162,   163,   164,   165,    -1,    -1,   168,   169,
     170,    -1,    -1,   173,   174,    -1,   176,   177,   178,   179,
      -1,   181,    -1,    -1,    -1,   185,   186,    -1,   188,    -1,
     190,    -1,   192,   193,   194,   195,    -1,   197,    -1,   199,
      -1,    -1,    -1,   203,   204,    -1,   206,   207,    -1,   209,
     210,    -1,    -1,    -1,   214,   215,   216,   217,    -1,    -1,
     220,   221,   222,    -1,    -1,   225,    -1,    -1,    -1,    -1,
     230,   231,    -1,    -1,    -1,   235,    -1,    -1,    -1,   239,
     240,    -1,   242,   243,    -1,    -1,    -1,   247,    -1,    -1,
     250,   251,    -1,    -1,   254,    -1,    -1,   257,   258,    -1,
      -1,    -1,    -1,    -1,   264,   265,    -1,   267,    -1,   269,
      -1,   271,   272,    -1,    -1,   275,    -1,    -1,    -1,    -1,
     280,    -1,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,    -1,
     300,   301,   302,    -1,   304,   305,   306,   307,    -1,   309,
     310,    -1,    -1,    -1,    -1,   315,   316,   317,   318,   319,
     320,    -1,    -1,   323,   324,    -1,   326,    -1,   328,    -1,
     330,   331,   332,   333,   334,   335,   336,   337,   338,    -1,
      -1,   341,   342,    -1,    -1,   345,   346,   347,   348,   349,
     350,    -1,   352,   353,    -1,    -1,   356,   357,    -1,   359,
     360,   361,    -1,   363,   364,   365,    -1,   367,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   377,   378,   379,
      -1,   381,   382,    -1,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,    -1,    -1,   396,   397,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,    -1,   408,   409,
     410,    -1,    -1,   413,    -1,    -1,    -1,   417,   418,   419,
     420,   421,    -1,    -1,   424,   425,   426,   427,   428,    -1,
     430,   431,    -1,   433,   434,   435,    -1,    -1,   438,    -1,
     440,    -1,   442,   443,    -1,   445,   446,   447,    -1,   449,
      -1,    -1,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,   464,   465,    -1,    -1,    -1,   469,
     470,   471,   472,    -1,    -1,    -1,   476,    -1,    -1,    -1,
     480,    -1,   482,   483,   484,   485,    -1,   487,   488,   489,
     490,   491,    -1,    -1,   494,   495,   496,    -1,    -1,    -1,
     500,   501,    -1,   503,    -1,    -1,   506,    -1,    -1,   509,
     510,   511,    -1,    -1,   514,   515,    -1,   517,   518,   519,
     520,   521,   522,    -1,    -1,   525,   526,   527,   528,    -1,
     530,   531,    -1,    -1,   534,   535,   536,   537,    -1,    -1,
     540,   541,    -1,   543,   544,   545,   546,    -1,    -1,    -1,
      -1,    -1,   552,   553,    -1,    -1,    -1,   557,   558,   559,
     560,   561,   562,   563,    -1,   565,   566,    -1,   568,   569,
      -1,    -1,   572,    -1,    -1,   575,    -1,   577,    -1,   579,
     580,    -1,    -1,    -1,    -1,    -1,    -1,   587,    -1,    -1,
     590,    -1,    -1,    -1,   594,   595,   596,   597,   598,    -1,
      -1,    -1,    -1,    -1,    -1,   605,   606,    -1,   608,   609,
     610,    -1,     5,   613,     7,     8,     9,    10,    11,    -1,
      -1,    -1,    -1,    -1,    17,    -1,    -1,    20,    -1,    22,
      23,    24,    25,    26,    27,    28,    -1,    30,    -1,    -1,
      33,    34,    -1,    -1,    -1,    38,    -1,    -1,    41,    42,
      43,    -1,    45,    -1,    47,    48,    -1,    -1,    51,    -1,
      -1,    54,    55,    -1,    57,    58,    -1,    60,    -1,    62,
      63,    64,    65,    66,    67,    -1,    69,    70,    -1,    72,
      73,    74,    75,    76,    77,    78,    79,    -1,    81,    82,
      -1,    84,    85,    86,    87,    88,    -1,    90,    -1,    -1,
      93,    -1,    -1,    96,    -1,    98,    -1,    -1,   101,    -1,
      -1,    -1,   105,   106,   107,    -1,    -1,   110,    -1,    -1,
      -1,    -1,   115,   116,    -1,    -1,    -1,   120,   121,   122,
      -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,
     133,   134,    -1,    -1,    -1,   138,    -1,    -1,   141,   142,
     143,    -1,    -1,    -1,   147,    -1,   149,   150,    -1,   152,
     153,   154,   155,    -1,   157,   158,    -1,   160,   161,   162,
     163,   164,   165,    -1,    -1,   168,   169,   170,    -1,    -1,
     173,   174,    -1,   176,   177,   178,    -1,    -1,   181,    -1,
      -1,    -1,   185,   186,    -1,   188,    -1,   190,    -1,   192,
     193,   194,   195,    -1,   197,    -1,   199,    -1,    -1,    -1,
     203,   204,    -1,   206,    -1,    -1,   209,   210,    -1,    -1,
      -1,   214,   215,   216,   217,    -1,    -1,   220,   221,   222,
      -1,    -1,   225,    -1,    -1,    -1,    -1,   230,   231,    -1,
      -1,    -1,   235,    -1,    -1,    -1,   239,   240,    -1,   242,
     243,    -1,    -1,    -1,   247,    -1,    -1,   250,   251,    -1,
      -1,   254,    -1,    -1,   257,   258,   259,    -1,    -1,    -1,
      -1,   264,   265,    -1,   267,    -1,   269,    -1,   271,   272,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,    -1,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,    -1,   300,   301,   302,
      -1,   304,   305,   306,   307,    -1,   309,   310,    -1,    -1,
      -1,    -1,   315,   316,   317,   318,   319,   320,    -1,    -1,
     323,   324,    -1,   326,    -1,   328,    -1,   330,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,    -1,   341,   342,
      -1,    -1,   345,   346,   347,   348,    -1,    -1,    -1,   352,
     353,    -1,    -1,    -1,   357,    -1,   359,   360,   361,    -1,
     363,   364,   365,    -1,   367,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   377,   378,   379,    -1,   381,   382,
      -1,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,    -1,    -1,   396,   397,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,    -1,   408,   409,   410,    -1,    -1,
     413,    -1,    -1,    -1,   417,   418,   419,   420,   421,    -1,
      -1,   424,   425,   426,   427,   428,    -1,   430,   431,    -1,
     433,   434,   435,    -1,    -1,   438,    -1,   440,    -1,   442,
     443,    -1,   445,   446,   447,    -1,   449,    -1,    -1,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
      -1,   464,   465,    -1,    -1,    -1,   469,   470,   471,   472,
      -1,    -1,   475,   476,    -1,    -1,    -1,   480,    -1,   482,
     483,   484,   485,    -1,   487,   488,   489,   490,   491,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   500,   501,    -1,
     503,    -1,    -1,   506,    -1,    -1,   509,   510,   511,    -1,
      -1,   514,   515,    -1,   517,   518,   519,   520,   521,   522,
      -1,    -1,   525,   526,   527,   528,    -1,   530,   531,    -1,
      -1,   534,   535,   536,   537,    -1,   539,   540,   541,    -1,
     543,   544,   545,   546,    -1,    -1,    -1,    -1,    -1,   552,
     553,    -1,    -1,    -1,   557,   558,   559,   560,    -1,   562,
     563,    -1,   565,   566,    -1,   568,   569,    -1,    -1,   572,
      -1,    -1,   575,    -1,   577,    -1,   579,   580,    -1,    -1,
      -1,    -1,    -1,    -1,   587,    -1,    -1,   590,    -1,    -1,
      -1,   594,   595,   596,   597,   598,    -1,    -1,    -1,    -1,
      -1,    -1,   605,   606,    -1,   608,   609,   610,    -1,     5,
     613,     7,     8,     9,    10,    11,    -1,    -1,    -1,    -1,
      -1,    17,    -1,    -1,    20,    -1,    22,    23,    24,    25,
      26,    27,    28,    -1,    30,    -1,    -1,    33,    34,    -1,
      -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,    45,
      -1,    47,    48,    -1,    -1,    51,    -1,    -1,    54,    55,
      -1,    57,    58,    -1,    60,    -1,    62,    63,    64,    65,
      66,    67,    -1,    69,    70,    -1,    72,    73,    74,    75,
      76,    77,    78,    79,    -1,    81,    82,    -1,    84,    85,
      86,    87,    88,    -1,    90,    -1,    -1,    93,    -1,    -1,
      96,    -1,    98,    -1,    -1,   101,    -1,    -1,    -1,   105,
     106,   107,    -1,    -1,   110,    -1,    -1,    -1,    -1,   115,
     116,    -1,    -1,    -1,   120,   121,   122,    -1,   124,    -1,
      -1,    -1,   128,    -1,   130,   131,   132,   133,   134,    -1,
      -1,    -1,   138,    -1,    -1,   141,   142,   143,    -1,    -1,
      -1,   147,    -1,   149,   150,    -1,   152,   153,   154,    -1,
      -1,   157,   158,    -1,   160,   161,   162,   163,   164,   165,
      -1,    -1,   168,   169,   170,    -1,    -1,   173,   174,    -1,
     176,   177,   178,    -1,    -1,   181,    -1,    -1,    -1,   185,
     186,    -1,   188,    -1,   190,    -1,   192,   193,   194,   195,
      -1,   197,    -1,   199,    -1,    -1,    -1,   203,   204,    -1,
     206,    -1,    -1,   209,   210,    -1,    -1,    -1,   214,   215,
     216,   217,    -1,    -1,   220,   221,   222,    -1,    -1,   225,
      -1,    -1,    -1,    -1,   230,   231,    -1,    -1,    -1,   235,
      -1,    -1,    -1,   239,   240,    -1,   242,   243,    -1,    -1,
      -1,   247,    -1,    -1,   250,   251,    -1,    -1,   254,    -1,
      -1,   257,   258,   259,    -1,    -1,    -1,    -1,   264,   265,
      -1,   267,    -1,   269,    -1,   271,   272,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   280,    -1,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,    -1,   300,   301,   302,    -1,   304,   305,
     306,   307,    -1,   309,   310,    -1,    -1,    -1,    -1,   315,
     316,   317,   318,   319,   320,    -1,    -1,   323,   324,    -1,
     326,    -1,   328,    -1,   330,   331,   332,   333,   334,   335,
     336,   337,   338,    -1,    -1,   341,   342,    -1,    -1,   345,
     346,   347,   348,    -1,    -1,    -1,   352,   353,    -1,    -1,
      -1,   357,    -1,   359,   360,   361,    -1,   363,   364,   365,
      -1,   367,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   377,   378,   379,    -1,   381,   382,    -1,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,    -1,    -1,
     396,   397,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,    -1,   408,   409,   410,    -1,    -1,   413,    -1,    -1,
      -1,   417,   418,   419,   420,   421,    -1,    -1,   424,   425,
     426,   427,   428,    -1,   430,   431,    -1,   433,   434,   435,
      -1,    -1,   438,    -1,   440,    -1,   442,   443,    -1,   445,
     446,   447,    -1,   449,    -1,    -1,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,    -1,   464,   465,
      -1,    -1,    -1,   469,   470,   471,   472,    -1,    -1,    -1,
     476,    -1,    -1,    -1,   480,    -1,   482,   483,   484,   485,
      -1,   487,   488,   489,   490,   491,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   500,   501,    -1,   503,    -1,    -1,
     506,    -1,    -1,   509,   510,   511,    -1,    -1,   514,   515,
      -1,   517,   518,   519,   520,   521,   522,    -1,    -1,   525,
     526,   527,   528,    -1,   530,   531,    -1,    -1,   534,   535,
     536,   537,    -1,   539,   540,   541,    -1,   543,   544,   545,
     546,    -1,    -1,    -1,    -1,    -1,   552,   553,    -1,    -1,
      -1,   557,   558,   559,   560,    -1,   562,   563,    -1,   565,
     566,    -1,   568,   569,    -1,    -1,   572,    -1,    -1,   575,
      -1,   577,    -1,   579,   580,    -1,    -1,    -1,    -1,    -1,
      -1,   587,    -1,    -1,   590,    -1,    -1,    -1,   594,   595,
     596,   597,   598,    -1,    -1,    -1,    -1,    -1,    -1,   605,
     606,    -1,   608,   609,   610,    -1,     5,   613,     7,     8,
       9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,
      -1,    20,    -1,    22,    23,    24,    25,    26,    27,    28,
      -1,    30,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,
      -1,    -1,    41,    42,    43,    -1,    45,    -1,    47,    48,
      -1,    -1,    51,    -1,    -1,    54,    55,    -1,    57,    58,
      -1,    60,    -1,    62,    63,    64,    65,    66,    67,    -1,
      69,    70,    -1,    72,    73,    74,    75,    76,    77,    78,
      79,    -1,    81,    82,    -1,    84,    85,    86,    87,    88,
      -1,    90,    -1,    -1,    93,    -1,    -1,    96,    -1,    98,
      -1,    -1,   101,    -1,    -1,    -1,   105,   106,   107,    -1,
      -1,   110,    -1,    -1,    -1,    -1,   115,   116,    -1,    -1,
      -1,    -1,   121,   122,    -1,   124,    -1,    -1,    -1,   128,
      -1,   130,   131,   132,   133,   134,    -1,    -1,    -1,   138,
      -1,    -1,   141,   142,   143,    -1,    -1,    -1,   147,    -1,
     149,   150,    -1,   152,   153,   154,    -1,    -1,   157,   158,
      -1,   160,   161,   162,   163,   164,   165,    -1,    -1,   168,
     169,   170,    -1,    -1,   173,   174,    -1,   176,   177,   178,
      -1,    -1,   181,    -1,    -1,    -1,   185,   186,    -1,   188,
      -1,   190,    -1,   192,   193,   194,   195,    -1,   197,    -1,
     199,    -1,    -1,    -1,   203,   204,    -1,   206,    -1,    -1,
     209,   210,    -1,    -1,    -1,   214,   215,   216,   217,    -1,
      -1,   220,   221,   222,    -1,    -1,   225,    -1,    -1,    -1,
      -1,   230,   231,    -1,    -1,    -1,   235,    -1,    -1,    -1,
     239,   240,    -1,   242,   243,    -1,    -1,    -1,   247,    -1,
      -1,   250,   251,    -1,    -1,   254,    -1,    -1,   257,   258,
      -1,    -1,    -1,    -1,    -1,   264,   265,    -1,   267,    -1,
     269,    -1,   271,   272,    -1,    -1,   275,    -1,    -1,    -1,
      -1,   280,    -1,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
      -1,   300,   301,   302,    -1,   304,   305,   306,   307,    -1,
     309,   310,    -1,    -1,    -1,    -1,   315,   316,   317,   318,
     319,   320,    -1,    -1,   323,   324,    -1,   326,    -1,   328,
      -1,   330,   331,   332,   333,   334,   335,   336,   337,   338,
      -1,    -1,   341,   342,    -1,    -1,   345,   346,   347,   348,
      -1,    -1,    -1,   352,   353,    -1,    -1,   356,   357,    -1,
     359,   360,   361,    -1,   363,   364,   365,    -1,   367,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   377,   378,
     379,   380,   381,   382,    -1,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,    -1,    -1,   396,   397,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,    -1,   408,
     409,   410,    -1,    -1,   413,    -1,    -1,    -1,   417,   418,
     419,   420,   421,    -1,    -1,   424,   425,   426,   427,   428,
      -1,   430,   431,    -1,   433,   434,   435,    -1,    -1,   438,
      -1,   440,    -1,   442,   443,    -1,   445,   446,   447,    -1,
     449,    -1,    -1,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,    -1,   464,   465,    -1,    -1,    -1,
     469,   470,   471,   472,    -1,    -1,    -1,   476,    -1,    -1,
      -1,   480,    -1,   482,   483,   484,   485,    -1,   487,   488,
     489,   490,   491,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   500,   501,    -1,   503,    -1,    -1,   506,    -1,    -1,
     509,   510,   511,    -1,    -1,   514,   515,    -1,   517,   518,
     519,   520,   521,   522,    -1,    -1,   525,   526,   527,   528,
      -1,   530,   531,    -1,    -1,   534,   535,   536,   537,    -1,
      -1,   540,   541,    -1,   543,   544,   545,   546,    -1,    -1,
      -1,    -1,    -1,   552,   553,    -1,    -1,    -1,   557,   558,
     559,   560,   561,   562,   563,    -1,   565,   566,    -1,   568,
     569,    -1,    -1,   572,    -1,    -1,   575,    -1,   577,    -1,
     579,   580,    -1,    -1,    -1,    -1,    -1,    -1,   587,    -1,
      -1,   590,    -1,    -1,    -1,   594,   595,   596,   597,   598,
      -1,    -1,    -1,    -1,    -1,    -1,   605,   606,    -1,   608,
     609,   610,    -1,     5,   613,     7,     8,     9,    10,    11,
      -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,    20,    -1,
      22,    23,    24,    25,    26,    27,    28,    -1,    30,    -1,
      -1,    33,    34,    -1,    -1,    -1,    38,    -1,    -1,    41,
      42,    43,    -1,    45,    -1,    47,    48,    -1,    -1,    51,
      -1,    -1,    54,    55,    -1,    57,    58,    -1,    60,    -1,
      62,    63,    64,    65,    66,    67,    -1,    69,    70,    -1,
      72,    73,    74,    75,    76,    77,    78,    79,    -1,    81,
      82,    -1,    84,    85,    86,    87,    88,    -1,    90,    -1,
      -1,    93,    -1,    -1,    96,    -1,    98,    -1,    -1,   101,
      -1,    -1,    -1,   105,   106,   107,    -1,    -1,   110,    -1,
      -1,    -1,    -1,   115,   116,    -1,    -1,    -1,   120,   121,
     122,    -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,
     132,   133,   134,    -1,    -1,    -1,   138,    -1,    -1,   141,
     142,   143,    -1,    -1,    -1,   147,    -1,   149,   150,    -1,
     152,   153,   154,    -1,    -1,   157,   158,    -1,   160,   161,
     162,   163,   164,   165,    -1,    -1,   168,   169,   170,    -1,
      -1,   173,   174,    -1,   176,   177,   178,    -1,    -1,   181,
      -1,    -1,    -1,   185,   186,    -1,   188,    -1,   190,    -1,
     192,   193,   194,   195,    -1,   197,    -1,   199,    -1,    -1,
      -1,   203,   204,    -1,   206,    -1,    -1,   209,   210,    -1,
      -1,    -1,   214,   215,   216,   217,    -1,    -1,   220,   221,
     222,    -1,    -1,   225,    -1,    -1,    -1,    -1,   230,   231,
      -1,    -1,    -1,   235,    -1,    -1,    -1,   239,   240,    -1,
     242,   243,    -1,    -1,    -1,   247,    -1,    -1,   250,   251,
      -1,    -1,   254,    -1,    -1,   257,   258,   259,    -1,    -1,
      -1,    -1,   264,   265,    -1,   267,    -1,   269,    -1,   271,
     272,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,    -1,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,    -1,   300,   301,
     302,    -1,   304,   305,   306,   307,    -1,   309,   310,    -1,
      -1,    -1,    -1,   315,   316,   317,   318,   319,   320,    -1,
      -1,   323,   324,    -1,   326,    -1,   328,    -1,   330,   331,
     332,   333,   334,   335,   336,   337,   338,    -1,    -1,   341,
     342,    -1,    -1,   345,   346,   347,   348,    -1,    -1,    -1,
     352,   353,    -1,    -1,    -1,   357,    -1,   359,   360,   361,
      -1,   363,   364,   365,    -1,   367,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   377,   378,   379,    -1,   381,
     382,    -1,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,    -1,    -1,   396,   397,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,    -1,   408,   409,   410,    -1,
      -1,   413,    -1,    -1,    -1,   417,   418,   419,   420,   421,
      -1,    -1,   424,   425,   426,   427,   428,    -1,   430,   431,
      -1,   433,   434,   435,    -1,    -1,   438,    -1,   440,    -1,
     442,   443,    -1,   445,   446,   447,    -1,   449,    -1,    -1,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,    -1,   464,   465,    -1,    -1,    -1,   469,   470,   471,
     472,    -1,    -1,    -1,   476,    -1,    -1,    -1,   480,    -1,
     482,   483,   484,   485,    -1,   487,   488,   489,   490,   491,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   500,   501,
      -1,   503,    -1,    -1,   506,    -1,    -1,   509,   510,   511,
      -1,    -1,   514,   515,    -1,   517,   518,   519,   520,   521,
     522,    -1,    -1,   525,   526,   527,   528,    -1,   530,   531,
      -1,    -1,   534,   535,   536,   537,    -1,   539,   540,   541,
      -1,   543,   544,   545,   546,    -1,    -1,    -1,    -1,    -1,
     552,   553,    -1,    -1,    -1,   557,   558,   559,   560,    -1,
     562,   563,    -1,   565,   566,    -1,   568,   569,    -1,    -1,
     572,    -1,    -1,   575,    -1,   577,    -1,   579,   580,    -1,
      -1,    -1,    -1,    -1,    -1,   587,    -1,    -1,   590,    -1,
      -1,    -1,   594,   595,   596,   597,   598,    -1,    -1,    -1,
      -1,    -1,    -1,   605,   606,    -1,   608,   609,   610,    -1,
       5,   613,     7,     8,     9,    10,    11,    -1,    -1,    -1,
      -1,    -1,    17,    -1,    -1,    20,    -1,    22,    23,    24,
      25,    26,    27,    28,    -1,    30,    -1,    -1,    -1,    34,
      -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,
      45,    -1,    47,    48,    -1,    -1,    51,    -1,    -1,    54,
      55,    -1,    57,    58,    -1,    60,    -1,    62,    63,    64,
      65,    66,    67,    -1,    69,    70,    -1,    72,    73,    74,
      75,    76,    77,    78,    79,    -1,    81,    82,    -1,    84,
      85,    86,    87,    88,    -1,    90,    -1,    -1,    93,    -1,
      -1,    96,    -1,    98,    99,    -1,   101,    -1,    -1,    -1,
     105,   106,   107,    -1,    -1,   110,    -1,    -1,    -1,    -1,
     115,   116,    -1,    -1,    -1,    -1,   121,   122,    -1,   124,
      -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,   134,
      -1,    -1,    -1,   138,    -1,    -1,   141,   142,   143,    -1,
      -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,   154,
      -1,    -1,   157,   158,    -1,   160,   161,   162,   163,   164,
     165,    -1,    -1,   168,   169,   170,    -1,    -1,   173,   174,
      -1,   176,   177,   178,    -1,    -1,   181,    -1,    -1,    -1,
     185,   186,    -1,   188,    -1,   190,    -1,   192,   193,   194,
     195,    -1,   197,    -1,   199,    -1,    -1,    -1,   203,   204,
      -1,   206,    -1,    -1,   209,   210,    -1,    -1,    -1,   214,
     215,   216,   217,    -1,    -1,   220,   221,   222,    -1,    -1,
     225,    -1,    -1,    -1,    -1,   230,   231,    -1,    -1,    -1,
     235,    -1,    -1,    -1,   239,   240,    -1,   242,   243,    -1,
      -1,    -1,   247,    -1,    -1,   250,   251,    -1,    -1,   254,
      -1,    -1,   257,   258,   259,    -1,    -1,    -1,    -1,   264,
     265,    -1,   267,    -1,   269,    -1,   271,   272,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   280,    -1,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,    -1,   300,   301,   302,    -1,   304,
     305,   306,   307,    -1,   309,   310,    -1,    -1,    -1,    -1,
     315,   316,   317,   318,   319,   320,    -1,    -1,   323,   324,
      -1,   326,    -1,   328,    -1,   330,   331,   332,   333,   334,
     335,   336,   337,   338,    -1,    -1,   341,   342,    -1,    -1,
     345,   346,   347,   348,    -1,    -1,    -1,   352,   353,    -1,
      -1,    -1,   357,    -1,   359,   360,   361,    -1,   363,   364,
     365,    -1,   367,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   377,   378,   379,    -1,   381,   382,    -1,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,    -1,
      -1,   396,   397,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,    -1,   408,   409,   410,    -1,    -1,   413,    -1,
      -1,    -1,   417,   418,   419,   420,   421,    -1,    -1,   424,
     425,   426,   427,   428,    -1,   430,   431,    -1,   433,   434,
     435,    -1,    -1,   438,    -1,   440,    -1,   442,   443,    -1,
     445,   446,   447,    -1,   449,    -1,    -1,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,    -1,   464,
     465,    -1,    -1,    -1,   469,   470,   471,   472,    -1,    -1,
      -1,   476,    -1,    -1,    -1,   480,    -1,   482,   483,   484,
     485,    -1,   487,   488,   489,   490,   491,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   500,   501,    -1,   503,    -1,
      -1,   506,    -1,    -1,   509,   510,   511,    -1,    -1,   514,
     515,    -1,   517,   518,   519,   520,   521,   522,    -1,    -1,
     525,   526,   527,   528,    -1,   530,   531,    -1,    -1,   534,
     535,   536,   537,    -1,   539,   540,   541,    -1,   543,   544,
     545,   546,    -1,    -1,    -1,    -1,    -1,   552,   553,    -1,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
     565,   566,    -1,   568,   569,    -1,    -1,   572,    -1,    -1,
     575,    -1,   577,    -1,   579,   580,    -1,    -1,    -1,    -1,
      -1,    -1,   587,    -1,    -1,   590,    -1,    -1,    -1,   594,
     595,   596,   597,   598,    -1,    -1,    -1,    -1,    -1,    -1,
     605,   606,    -1,   608,   609,   610,    -1,     5,   613,     7,
       8,     9,    10,    11,    12,    -1,    -1,    -1,    -1,    17,
      -1,    -1,    20,    -1,    22,    23,    24,    25,    26,    27,
      28,    -1,    30,    -1,    -1,    -1,    34,    -1,    -1,    -1,
      38,    -1,    -1,    41,    42,    43,    -1,    45,    -1,    47,
      48,    -1,    -1,    51,    -1,    -1,    54,    55,    -1,    57,
      58,    -1,    60,    -1,    62,    63,    64,    65,    66,    67,
      -1,    69,    70,    -1,    72,    73,    74,    75,    76,    77,
      78,    79,    -1,    81,    82,    -1,    84,    85,    86,    87,
      88,    -1,    90,    -1,    -1,    93,    -1,    -1,    96,    -1,
      98,    -1,    -1,   101,    -1,    -1,    -1,   105,   106,   107,
      -1,    -1,   110,    -1,    -1,    -1,    -1,   115,   116,    -1,
      -1,    -1,    -1,   121,   122,    -1,   124,    -1,    -1,    -1,
     128,    -1,   130,   131,   132,   133,   134,    -1,    -1,    -1,
     138,    -1,    -1,   141,   142,   143,    -1,    -1,    -1,   147,
      -1,   149,   150,    -1,   152,   153,   154,    -1,    -1,   157,
     158,    -1,   160,   161,   162,   163,   164,   165,    -1,    -1,
     168,   169,   170,    -1,    -1,   173,   174,    -1,   176,   177,
     178,    -1,    -1,   181,    -1,    -1,    -1,   185,   186,    -1,
     188,    -1,   190,    -1,   192,   193,   194,   195,    -1,   197,
      -1,   199,    -1,    -1,    -1,   203,   204,    -1,   206,    -1,
      -1,   209,   210,    -1,    -1,    -1,   214,   215,   216,   217,
      -1,    -1,   220,   221,   222,    -1,    -1,   225,    -1,    -1,
      -1,    -1,   230,   231,    -1,    -1,    -1,   235,    -1,    -1,
      -1,   239,   240,    -1,   242,   243,    -1,    -1,    -1,   247,
      -1,    -1,   250,   251,    -1,    -1,   254,    -1,    -1,   257,
     258,   259,    -1,    -1,    -1,    -1,   264,   265,    -1,   267,
      -1,   269,    -1,   271,   272,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   280,    -1,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,    -1,   300,   301,   302,    -1,   304,   305,   306,   307,
      -1,   309,   310,    -1,    -1,    -1,    -1,   315,   316,   317,
     318,   319,   320,    -1,    -1,   323,   324,    -1,   326,    -1,
     328,    -1,   330,   331,   332,   333,   334,   335,   336,   337,
     338,    -1,    -1,   341,   342,    -1,    -1,   345,   346,   347,
     348,    -1,    -1,    -1,   352,   353,    -1,    -1,    -1,   357,
      -1,   359,   360,   361,    -1,   363,   364,   365,    -1,   367,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   377,
     378,   379,    -1,   381,   382,    -1,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,    -1,    -1,   396,   397,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,    -1,
     408,   409,   410,    -1,    -1,   413,    -1,    -1,    -1,   417,
     418,   419,   420,   421,    -1,    -1,   424,   425,   426,   427,
     428,    -1,   430,   431,    -1,   433,   434,   435,    -1,    -1,
     438,    -1,   440,    -1,   442,   443,    -1,   445,   446,   447,
      -1,   449,    -1,    -1,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,    -1,   464,   465,    -1,    -1,
      -1,   469,   470,   471,   472,    -1,    -1,    -1,   476,    -1,
      -1,    -1,   480,    -1,   482,   483,   484,   485,    -1,   487,
     488,   489,   490,   491,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   500,   501,    -1,   503,    -1,    -1,   506,    -1,
      -1,   509,   510,   511,    -1,    -1,   514,   515,    -1,   517,
     518,   519,   520,   521,   522,    -1,    -1,   525,   526,   527,
     528,    -1,   530,   531,    -1,    -1,   534,   535,   536,   537,
      -1,   539,   540,   541,    -1,   543,   544,   545,   546,    -1,
      -1,    -1,    -1,    -1,   552,   553,    -1,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,   565,   566,    -1,
     568,   569,    -1,    -1,   572,    -1,    -1,   575,    -1,   577,
      -1,   579,   580,    -1,    -1,    -1,    -1,    -1,    -1,   587,
      -1,    -1,   590,    -1,    -1,    -1,   594,   595,   596,   597,
     598,    -1,    -1,    -1,    -1,    -1,    -1,   605,   606,    -1,
     608,   609,   610,    -1,     5,   613,     7,     8,     9,    10,
      11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,    20,
      -1,    22,    23,    24,    25,    26,    27,    28,    -1,    30,
      -1,    -1,    -1,    34,    35,    -1,    -1,    38,    -1,    -1,
      41,    42,    43,    -1,    45,    -1,    47,    48,    -1,    -1,
      51,    -1,    -1,    54,    55,    -1,    57,    58,    -1,    60,
      -1,    62,    63,    64,    65,    66,    67,    -1,    69,    70,
      -1,    72,    73,    74,    75,    76,    77,    78,    79,    -1,
      81,    82,    -1,    84,    85,    86,    87,    88,    -1,    90,
      -1,    -1,    93,    -1,    -1,    96,    -1,    98,    -1,    -1,
     101,    -1,    -1,    -1,   105,   106,   107,    -1,    -1,   110,
      -1,    -1,    -1,    -1,   115,   116,    -1,    -1,    -1,    -1,
     121,   122,    -1,   124,    -1,    -1,    -1,   128,    -1,   130,
     131,   132,   133,   134,    -1,    -1,    -1,   138,    -1,    -1,
     141,   142,   143,    -1,    -1,    -1,   147,    -1,   149,   150,
      -1,   152,   153,   154,    -1,    -1,   157,   158,    -1,   160,
     161,   162,   163,   164,   165,    -1,    -1,   168,   169,   170,
      -1,    -1,   173,   174,    -1,   176,   177,   178,    -1,    -1,
     181,    -1,    -1,    -1,   185,   186,    -1,   188,    -1,   190,
      -1,   192,   193,   194,   195,    -1,   197,    -1,   199,    -1,
      -1,    -1,   203,   204,    -1,   206,   207,    -1,   209,   210,
      -1,    -1,    -1,   214,   215,   216,   217,    -1,    -1,   220,
     221,   222,    -1,    -1,   225,    -1,    -1,    -1,    -1,   230,
     231,    -1,    -1,    -1,   235,    -1,    -1,    -1,   239,   240,
      -1,   242,   243,    -1,    -1,    -1,   247,    -1,    -1,   250,
     251,    -1,    -1,   254,    -1,    -1,   257,   258,    -1,    -1,
      -1,    -1,    -1,   264,   265,    -1,   267,    -1,   269,    -1,
     271,   272,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,
      -1,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,    -1,   300,
     301,   302,    -1,   304,   305,   306,   307,    -1,   309,   310,
      -1,    -1,    -1,    -1,   315,   316,   317,   318,   319,   320,
      -1,    -1,   323,   324,    -1,   326,    -1,   328,    -1,   330,
     331,   332,   333,   334,   335,   336,   337,   338,    -1,    -1,
     341,   342,    -1,    -1,   345,   346,   347,   348,    -1,    -1,
      -1,   352,   353,    -1,    -1,    -1,   357,    -1,   359,   360,
     361,    -1,   363,   364,   365,    -1,   367,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   377,   378,   379,    -1,
     381,   382,    -1,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,    -1,    -1,   396,   397,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,    -1,   408,   409,   410,
      -1,    -1,   413,    -1,    -1,    -1,   417,   418,   419,   420,
     421,    -1,    -1,   424,   425,   426,   427,   428,    -1,   430,
     431,    -1,   433,   434,   435,    -1,    -1,   438,    -1,   440,
      -1,   442,   443,    -1,   445,   446,   447,    -1,   449,    -1,
      -1,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,    -1,   464,   465,    -1,    -1,    -1,   469,   470,
     471,   472,    -1,    -1,    -1,   476,    -1,    -1,    -1,   480,
      -1,   482,   483,   484,   485,    -1,   487,   488,   489,   490,
     491,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   500,
     501,    -1,   503,    -1,    -1,   506,    -1,    -1,   509,   510,
     511,    -1,    -1,   514,   515,    -1,   517,   518,   519,   520,
     521,   522,    -1,    -1,   525,   526,   527,   528,    -1,   530,
     531,    -1,    -1,   534,   535,   536,   537,    -1,   539,   540,
     541,    -1,   543,   544,   545,   546,    -1,    -1,    -1,    -1,
      -1,   552,   553,    -1,    -1,    -1,   557,   558,   559,   560,
      -1,   562,   563,    -1,   565,   566,    -1,   568,   569,    -1,
      -1,   572,    -1,    -1,   575,    -1,   577,    -1,   579,   580,
      -1,    -1,    -1,    -1,    -1,    -1,   587,    -1,    -1,   590,
      -1,    -1,    -1,   594,   595,   596,   597,   598,    -1,    -1,
      -1,    -1,    -1,    -1,   605,   606,    -1,   608,   609,   610,
      -1,     5,   613,     7,     8,     9,    10,    11,    -1,    -1,
      -1,    -1,    -1,    17,    -1,    -1,    20,    -1,    22,    23,
      24,    25,    26,    27,    28,    -1,    30,    -1,    -1,    -1,
      34,    -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,
      -1,    45,    -1,    47,    48,    -1,    -1,    51,    -1,    -1,
      54,    55,    -1,    57,    58,    -1,    60,    -1,    62,    63,
      64,    65,    66,    67,    -1,    69,    70,    -1,    72,    73,
      74,    75,    76,    77,    78,    79,    -1,    81,    82,    -1,
      84,    85,    86,    87,    88,    -1,    90,    -1,    -1,    93,
      -1,    -1,    96,    -1,    98,    -1,    -1,   101,    -1,    -1,
      -1,   105,   106,   107,    -1,    -1,   110,    -1,    -1,    -1,
      -1,   115,   116,    -1,    -1,    -1,   120,   121,   122,    -1,
     124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,
     134,    -1,    -1,    -1,   138,    -1,    -1,   141,   142,   143,
      -1,    -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,
     154,    -1,    -1,   157,   158,    -1,   160,   161,   162,   163,
     164,   165,    -1,    -1,   168,   169,   170,    -1,    -1,   173,
     174,    -1,   176,   177,   178,    -1,    -1,   181,    -1,    -1,
      -1,   185,   186,    -1,   188,    -1,   190,    -1,   192,   193,
     194,   195,    -1,   197,    -1,   199,    -1,    -1,    -1,   203,
     204,    -1,   206,    -1,    -1,   209,   210,    -1,    -1,    -1,
     214,   215,   216,   217,    -1,    -1,   220,   221,   222,    -1,
      -1,   225,    -1,    -1,    -1,    -1,   230,   231,    -1,    -1,
      -1,   235,    -1,    -1,    -1,   239,   240,    -1,   242,   243,
      -1,    -1,    -1,   247,    -1,    -1,   250,   251,    -1,    -1,
     254,    -1,    -1,   257,   258,   259,    -1,    -1,    -1,    -1,
     264,   265,    -1,   267,    -1,   269,    -1,   271,   272,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   280,    -1,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,    -1,   300,   301,   302,    -1,
     304,   305,   306,   307,    -1,   309,   310,    -1,    -1,    -1,
      -1,   315,   316,   317,   318,   319,   320,    -1,    -1,   323,
     324,    -1,   326,    -1,   328,    -1,   330,   331,   332,   333,
     334,   335,   336,   337,   338,    -1,    -1,   341,   342,    -1,
      -1,   345,   346,   347,   348,    -1,    -1,    -1,   352,   353,
      -1,    -1,    -1,   357,    -1,   359,   360,   361,    -1,   363,
     364,   365,    -1,   367,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   377,   378,   379,    -1,   381,   382,    -1,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
      -1,    -1,   396,   397,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,    -1,   408,   409,   410,    -1,    -1,   413,
      -1,    -1,    -1,   417,   418,   419,   420,   421,    -1,    -1,
     424,   425,   426,   427,   428,    -1,   430,   431,    -1,   433,
     434,   435,    -1,    -1,   438,    -1,   440,    -1,   442,   443,
      -1,   445,   446,   447,    -1,   449,    -1,    -1,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,    -1,
     464,   465,    -1,    -1,    -1,   469,   470,   471,   472,    -1,
      -1,    -1,   476,    -1,    -1,    -1,   480,    -1,   482,   483,
     484,   485,    -1,   487,   488,   489,   490,   491,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   500,   501,    -1,   503,
      -1,    -1,   506,    -1,    -1,   509,   510,   511,    -1,    -1,
     514,   515,    -1,   517,   518,   519,   520,   521,   522,    -1,
      -1,   525,   526,   527,   528,    -1,   530,   531,    -1,    -1,
     534,   535,   536,   537,    -1,   539,   540,   541,    -1,   543,
     544,   545,   546,    -1,    -1,    -1,    -1,    -1,   552,   553,
      -1,    -1,    -1,   557,   558,   559,   560,    -1,   562,   563,
      -1,   565,   566,    -1,   568,   569,    -1,    -1,   572,    -1,
      -1,   575,    -1,   577,    -1,   579,   580,    -1,    -1,    -1,
      -1,    -1,    -1,   587,    -1,    -1,   590,    -1,    -1,    -1,
     594,   595,   596,   597,   598,    -1,    -1,    -1,    -1,    -1,
      -1,   605,   606,    -1,   608,   609,   610,    -1,     5,   613,
       7,     8,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,
      17,    -1,    -1,    20,    -1,    22,    23,    24,    25,    26,
      27,    28,    -1,    30,    -1,    -1,    33,    34,    -1,    -1,
      -1,    38,    -1,    -1,    41,    42,    43,    -1,    45,    -1,
      47,    48,    -1,    -1,    51,    -1,    -1,    54,    55,    -1,
      57,    58,    -1,    60,    -1,    62,    63,    64,    65,    66,
      67,    -1,    69,    70,    -1,    72,    73,    74,    75,    76,
      77,    78,    79,    -1,    81,    82,    -1,    84,    85,    86,
      87,    88,    -1,    90,    -1,    -1,    93,    -1,    -1,    96,
      -1,    98,    -1,    -1,   101,    -1,    -1,    -1,   105,   106,
     107,    -1,    -1,   110,    -1,    -1,    -1,    -1,   115,   116,
      -1,    -1,    -1,    -1,   121,   122,    -1,   124,    -1,    -1,
      -1,   128,    -1,   130,   131,   132,   133,   134,    -1,    -1,
      -1,   138,    -1,    -1,   141,   142,   143,    -1,    -1,    -1,
     147,    -1,   149,   150,    -1,   152,   153,   154,    -1,    -1,
     157,   158,    -1,   160,   161,   162,   163,   164,   165,    -1,
      -1,   168,   169,   170,    -1,    -1,   173,   174,    -1,   176,
     177,   178,    -1,    -1,   181,    -1,    -1,    -1,   185,   186,
      -1,   188,    -1,   190,    -1,   192,   193,   194,   195,    -1,
     197,    -1,   199,    -1,    -1,    -1,   203,   204,    -1,   206,
      -1,    -1,   209,   210,    -1,    -1,    -1,   214,   215,   216,
     217,    -1,    -1,   220,   221,   222,    -1,    -1,   225,    -1,
      -1,    -1,    -1,   230,   231,    -1,    -1,    -1,   235,    -1,
      -1,    -1,   239,   240,    -1,   242,   243,    -1,    -1,    -1,
     247,    -1,    -1,   250,   251,    -1,    -1,   254,    -1,    -1,
     257,   258,   259,    -1,    -1,    -1,    -1,   264,   265,    -1,
     267,    -1,   269,    -1,   271,   272,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   280,    -1,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,    -1,   300,   301,   302,    -1,   304,   305,   306,
     307,    -1,   309,   310,    -1,    -1,    -1,    -1,   315,   316,
     317,   318,   319,   320,    -1,    -1,   323,   324,    -1,   326,
      -1,   328,    -1,   330,   331,   332,   333,   334,   335,   336,
     337,   338,    -1,    -1,   341,   342,    -1,    -1,   345,   346,
     347,   348,    -1,    -1,    -1,   352,   353,    -1,    -1,    -1,
     357,    -1,   359,   360,   361,    -1,   363,   364,   365,    -1,
     367,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     377,   378,   379,    -1,   381,   382,    -1,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,    -1,    -1,   396,
     397,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
      -1,   408,   409,   410,    -1,    -1,   413,    -1,    -1,    -1,
     417,   418,   419,   420,   421,    -1,    -1,   424,   425,   426,
     427,   428,    -1,   430,   431,    -1,   433,   434,   435,    -1,
      -1,   438,    -1,   440,    -1,   442,   443,    -1,   445,   446,
     447,    -1,   449,    -1,    -1,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,    -1,   464,   465,    -1,
      -1,    -1,   469,   470,   471,   472,    -1,    -1,    -1,   476,
      -1,    -1,    -1,   480,    -1,   482,   483,   484,   485,    -1,
     487,   488,   489,   490,   491,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   500,   501,    -1,   503,    -1,    -1,   506,
      -1,    -1,   509,   510,   511,    -1,    -1,   514,   515,    -1,
     517,   518,   519,   520,   521,   522,    -1,    -1,   525,   526,
     527,   528,    -1,   530,   531,    -1,    -1,   534,   535,   536,
     537,    -1,   539,   540,   541,    -1,   543,   544,   545,   546,
      -1,    -1,    -1,    -1,    -1,   552,   553,    -1,    -1,    -1,
     557,   558,   559,   560,    -1,   562,   563,    -1,   565,   566,
      -1,   568,   569,    -1,    -1,   572,    -1,    -1,   575,    -1,
     577,    -1,   579,   580,    -1,    -1,    -1,    -1,    -1,    -1,
     587,    -1,    -1,   590,    -1,    -1,    -1,   594,   595,   596,
     597,   598,    -1,    -1,    -1,    -1,    -1,    -1,   605,   606,
      -1,   608,   609,   610,    -1,     5,   613,     7,     8,     9,
      10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,
      20,    -1,    22,    23,    24,    25,    26,    27,    28,    -1,
      30,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,    -1,
      -1,    41,    42,    43,    -1,    45,    -1,    47,    48,    -1,
      -1,    51,    -1,    -1,    54,    55,    -1,    57,    58,    -1,
      60,    -1,    62,    63,    64,    65,    66,    67,    -1,    69,
      70,    -1,    72,    73,    74,    75,    76,    77,    78,    79,
      -1,    81,    82,    -1,    84,    85,    86,    87,    88,    -1,
      90,    -1,    -1,    93,    -1,    -1,    96,    -1,    98,    -1,
      -1,   101,    -1,    -1,    -1,   105,   106,   107,    -1,    -1,
     110,    -1,    -1,    -1,    -1,   115,   116,    -1,    -1,    -1,
      -1,   121,   122,    -1,   124,    -1,    -1,    -1,   128,    -1,
     130,   131,   132,   133,   134,    -1,    -1,    -1,   138,    -1,
      -1,   141,   142,   143,    -1,    -1,    -1,   147,    -1,   149,
     150,    -1,   152,   153,   154,    -1,    -1,   157,   158,    -1,
     160,   161,   162,   163,   164,   165,    -1,    -1,   168,   169,
     170,    -1,    -1,   173,   174,    -1,   176,   177,   178,    -1,
      -1,   181,    -1,    -1,    -1,   185,   186,    -1,   188,    -1,
     190,    -1,   192,   193,   194,   195,    -1,   197,    -1,   199,
      -1,    -1,    -1,   203,   204,    -1,   206,    -1,    -1,   209,
     210,    -1,    -1,    -1,   214,   215,   216,   217,    -1,    -1,
     220,   221,   222,    -1,    -1,   225,    -1,    -1,    -1,    -1,
     230,   231,    -1,    -1,    -1,   235,    -1,    -1,    -1,   239,
     240,    -1,   242,   243,    -1,    -1,    -1,   247,    -1,    -1,
     250,   251,    -1,    -1,   254,    -1,    -1,   257,   258,   259,
      -1,    -1,    -1,    -1,   264,   265,    -1,   267,    -1,   269,
      -1,   271,   272,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     280,    -1,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,    -1,
     300,   301,   302,    -1,   304,   305,   306,   307,    -1,   309,
     310,    -1,    -1,    -1,    -1,   315,   316,   317,   318,   319,
     320,    -1,    -1,   323,   324,    -1,   326,    -1,   328,    -1,
     330,   331,   332,   333,   334,   335,   336,   337,   338,    -1,
      -1,   341,   342,    -1,    -1,   345,   346,   347,   348,    -1,
      -1,    -1,   352,   353,    -1,    -1,    -1,   357,    -1,   359,
     360,   361,    -1,   363,   364,   365,    -1,   367,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   377,   378,   379,
      -1,   381,   382,    -1,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,    -1,    -1,   396,   397,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,    -1,   408,   409,
     410,    -1,    -1,   413,    -1,    -1,    -1,   417,   418,   419,
     420,   421,    -1,    -1,   424,   425,   426,   427,   428,    -1,
     430,   431,    -1,   433,   434,   435,    -1,    -1,   438,    -1,
     440,    -1,   442,   443,    -1,   445,   446,   447,    -1,   449,
      -1,    -1,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,   464,   465,    -1,    -1,    -1,   469,
     470,   471,   472,    -1,    -1,    -1,   476,    -1,    -1,    -1,
     480,    -1,   482,   483,   484,   485,    -1,   487,   488,   489,
     490,   491,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     500,   501,    -1,   503,    -1,    -1,   506,    -1,    -1,   509,
     510,   511,    -1,    -1,   514,   515,    -1,   517,   518,   519,
     520,   521,   522,    -1,    -1,   525,   526,   527,   528,    -1,
     530,   531,    -1,    -1,   534,   535,   536,   537,    -1,   539,
     540,   541,    -1,   543,   544,   545,   546,    -1,    -1,    -1,
      -1,    -1,   552,   553,    -1,    -1,    -1,   557,   558,   559,
     560,    -1,   562,   563,    -1,   565,   566,    -1,   568,   569,
      -1,    -1,   572,    -1,    -1,   575,    -1,   577,    -1,   579,
     580,    -1,    -1,    -1,    -1,    -1,    -1,   587,    -1,    -1,
     590,    -1,    -1,    -1,   594,   595,   596,   597,   598,    -1,
      -1,    -1,    -1,    -1,    -1,   605,   606,    -1,   608,   609,
     610,    -1,     5,   613,     7,     8,     9,    10,    11,    -1,
      -1,    -1,    -1,    -1,    17,    18,    -1,    20,    -1,    22,
      23,    24,    25,    26,    27,    28,    -1,    30,    -1,    -1,
      -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    41,    42,
      43,    -1,    45,    -1,    47,    48,    -1,    -1,    51,    -1,
      -1,    54,    55,    -1,    57,    58,    -1,    60,    -1,    62,
      63,    64,    65,    66,    67,    -1,    69,    70,    -1,    72,
      73,    74,    75,    76,    77,    78,    79,    -1,    81,    82,
      -1,    84,    85,    86,    87,    88,    -1,    90,    -1,    -1,
      93,    -1,    -1,    96,    -1,    98,    -1,    -1,   101,    -1,
      -1,    -1,   105,   106,   107,    -1,    -1,   110,    -1,    -1,
      -1,    -1,   115,   116,    -1,    -1,    -1,    -1,   121,   122,
      -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,
     133,   134,    -1,    -1,    -1,   138,    -1,    -1,   141,   142,
     143,    -1,    -1,    -1,   147,    -1,   149,   150,    -1,   152,
     153,   154,    -1,    -1,   157,   158,    -1,   160,   161,   162,
     163,   164,   165,    -1,    -1,   168,   169,   170,    -1,    -1,
     173,   174,    -1,   176,   177,   178,    -1,    -1,   181,    -1,
      -1,    -1,   185,   186,    -1,   188,    -1,   190,    -1,   192,
     193,   194,   195,    -1,   197,    -1,   199,    -1,    -1,    -1,
     203,   204,    -1,   206,    -1,    -1,   209,   210,    -1,    -1,
      -1,   214,   215,   216,   217,    -1,    -1,   220,   221,   222,
      -1,    -1,   225,    -1,    -1,    -1,    -1,   230,   231,    -1,
      -1,    -1,   235,    -1,    -1,    -1,   239,   240,    -1,   242,
     243,    -1,    -1,    -1,   247,    -1,    -1,   250,   251,    -1,
      -1,   254,    -1,    -1,   257,   258,    -1,    -1,    -1,    -1,
      -1,   264,   265,    -1,   267,    -1,   269,    -1,   271,   272,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,    -1,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,    -1,   300,   301,   302,
      -1,   304,   305,   306,   307,    -1,   309,   310,    -1,    -1,
      -1,    -1,   315,   316,   317,   318,   319,   320,    -1,    -1,
     323,   324,    -1,   326,    -1,   328,    -1,   330,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,    -1,   341,   342,
      -1,    -1,   345,   346,   347,   348,    -1,    -1,    -1,   352,
     353,    -1,    -1,    -1,   357,    -1,   359,   360,   361,    -1,
     363,   364,   365,    -1,   367,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   377,   378,   379,    -1,   381,   382,
      -1,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,    -1,    -1,   396,   397,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,    -1,   408,   409,   410,    -1,    -1,
     413,    -1,    -1,    -1,   417,   418,   419,   420,   421,    -1,
      -1,   424,   425,   426,   427,   428,    -1,   430,   431,    -1,
     433,   434,   435,    -1,    -1,   438,    -1,   440,    -1,   442,
     443,    -1,   445,   446,   447,    -1,   449,    -1,    -1,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
      -1,   464,   465,    -1,    -1,    -1,   469,   470,   471,   472,
      -1,    -1,    -1,   476,    -1,    -1,    -1,   480,    -1,   482,
     483,   484,   485,    -1,   487,   488,   489,   490,   491,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   500,   501,    -1,
     503,    -1,    -1,   506,    -1,    -1,   509,   510,   511,    -1,
      -1,   514,   515,    -1,   517,   518,   519,   520,   521,   522,
      -1,    -1,   525,   526,   527,   528,    -1,   530,   531,    -1,
      -1,   534,   535,   536,   537,    -1,   539,   540,   541,    -1,
     543,   544,   545,   546,    -1,    -1,    -1,    -1,    -1,   552,
     553,    -1,    -1,    -1,   557,   558,   559,   560,    -1,   562,
     563,    -1,   565,   566,    -1,   568,   569,    -1,    -1,   572,
      -1,    -1,   575,    -1,   577,    -1,   579,   580,    -1,    -1,
      -1,    -1,    -1,    -1,   587,    -1,    -1,   590,    -1,    -1,
      -1,   594,   595,   596,   597,   598,    -1,    -1,    -1,    -1,
      -1,    -1,   605,   606,    -1,   608,   609,   610,    -1,     5,
     613,     7,     8,     9,    10,    11,    -1,    -1,    -1,    -1,
      -1,    17,    -1,    -1,    20,    -1,    22,    23,    24,    25,
      26,    27,    28,    -1,    30,    -1,    -1,    -1,    34,    -1,
      -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,    45,
      -1,    47,    48,    -1,    -1,    51,    -1,    -1,    54,    55,
      -1,    57,    58,    -1,    60,    -1,    62,    63,    64,    65,
      66,    67,    -1,    69,    70,    -1,    72,    73,    74,    75,
      76,    77,    78,    79,    -1,    81,    82,    -1,    84,    85,
      86,    87,    88,    89,    90,    -1,    -1,    93,    -1,    -1,
      96,    -1,    98,    -1,    -1,   101,    -1,    -1,    -1,   105,
     106,   107,    -1,    -1,   110,    -1,    -1,    -1,    -1,   115,
     116,    -1,    -1,    -1,    -1,   121,   122,    -1,   124,    -1,
      -1,    -1,   128,    -1,   130,   131,   132,   133,   134,    -1,
      -1,    -1,   138,    -1,    -1,   141,   142,   143,    -1,    -1,
      -1,   147,    -1,   149,   150,    -1,   152,   153,   154,    -1,
      -1,   157,   158,    -1,   160,   161,   162,   163,   164,   165,
      -1,   167,   168,   169,   170,    -1,    -1,   173,   174,    -1,
     176,   177,   178,    -1,    -1,   181,    -1,    -1,    -1,   185,
     186,    -1,   188,    -1,   190,    -1,   192,   193,   194,   195,
      -1,   197,    -1,   199,    -1,    -1,    -1,   203,   204,    -1,
     206,    -1,    -1,   209,   210,    -1,    -1,    -1,   214,   215,
     216,   217,    -1,    -1,   220,   221,   222,    -1,    -1,   225,
      -1,    -1,    -1,    -1,   230,   231,    -1,    -1,    -1,   235,
      -1,    -1,    -1,   239,   240,    -1,   242,   243,    -1,    -1,
      -1,   247,    -1,    -1,   250,   251,    -1,    -1,   254,    -1,
      -1,   257,   258,    -1,    -1,    -1,    -1,    -1,   264,   265,
      -1,   267,    -1,   269,    -1,   271,   272,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   280,    -1,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,    -1,   300,   301,   302,    -1,   304,   305,
     306,   307,    -1,   309,   310,    -1,    -1,    -1,    -1,   315,
     316,   317,   318,   319,   320,    -1,    -1,   323,   324,    -1,
     326,    -1,   328,    -1,   330,   331,   332,   333,   334,   335,
     336,   337,   338,    -1,    -1,   341,   342,    -1,    -1,   345,
     346,   347,   348,    -1,    -1,    -1,   352,   353,    -1,    -1,
      -1,   357,    -1,   359,   360,   361,    -1,   363,   364,   365,
      -1,   367,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   377,   378,   379,    -1,   381,   382,    -1,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,    -1,    -1,
     396,   397,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,    -1,   408,   409,   410,    -1,    -1,   413,    -1,    -1,
      -1,   417,   418,   419,   420,   421,    -1,    -1,   424,   425,
     426,   427,   428,    -1,   430,   431,    -1,   433,   434,   435,
      -1,    -1,   438,    -1,   440,    -1,   442,   443,    -1,   445,
     446,   447,    -1,   449,    -1,    -1,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,    -1,   464,   465,
      -1,    -1,    -1,   469,   470,   471,   472,    -1,    -1,    -1,
     476,    -1,    -1,    -1,   480,    -1,   482,   483,   484,   485,
      -1,   487,   488,   489,   490,   491,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   500,   501,    -1,   503,    -1,    -1,
     506,    -1,    -1,   509,   510,   511,    -1,    -1,   514,   515,
      -1,   517,   518,   519,   520,   521,   522,    -1,    -1,   525,
     526,   527,   528,    -1,   530,   531,    -1,    -1,   534,   535,
     536,   537,    -1,    -1,   540,   541,    -1,   543,   544,   545,
     546,    -1,    -1,    -1,    -1,    -1,   552,   553,    -1,    -1,
      -1,   557,   558,   559,   560,    -1,   562,   563,    -1,   565,
     566,    -1,   568,   569,    -1,    -1,   572,    -1,    -1,   575,
      -1,   577,    -1,   579,   580,    -1,    -1,    -1,    -1,    -1,
      -1,   587,    -1,    -1,   590,    -1,    -1,    -1,   594,   595,
     596,   597,   598,    -1,    -1,    -1,    -1,    -1,    -1,   605,
     606,    -1,   608,   609,   610,    -1,     5,   613,     7,     8,
       9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,
      -1,    20,    -1,    22,    23,    24,    25,    26,    27,    28,
      -1,    30,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,
      -1,    -1,    41,    42,    43,    -1,    45,    -1,    47,    48,
      -1,    -1,    51,    -1,    -1,    54,    55,    -1,    57,    58,
      -1,    60,    -1,    62,    63,    64,    65,    66,    67,    -1,
      69,    70,    -1,    72,    73,    74,    75,    76,    77,    78,
      79,    -1,    81,    82,    -1,    84,    85,    86,    87,    88,
      -1,    90,    -1,    -1,    93,    -1,    -1,    96,    -1,    98,
      -1,    -1,   101,    -1,    -1,    -1,   105,   106,   107,    -1,
      -1,   110,    -1,    -1,    -1,    -1,   115,   116,    -1,    -1,
      -1,    -1,   121,   122,    -1,   124,    -1,    -1,    -1,   128,
      -1,   130,   131,   132,   133,   134,    -1,    -1,    -1,   138,
      -1,    -1,   141,   142,   143,    -1,    -1,    -1,   147,    -1,
     149,   150,    -1,   152,   153,   154,    -1,    -1,   157,   158,
      -1,   160,   161,   162,   163,   164,   165,    -1,    -1,   168,
     169,   170,    -1,    -1,   173,   174,    -1,   176,   177,   178,
      -1,    -1,   181,    -1,    -1,    -1,   185,   186,    -1,   188,
      -1,   190,    -1,   192,   193,   194,   195,    -1,   197,    -1,
     199,    -1,    -1,    -1,   203,   204,    -1,   206,    -1,    -1,
     209,   210,    -1,    -1,    -1,   214,   215,   216,   217,    -1,
      -1,   220,   221,   222,    -1,    -1,   225,    -1,    -1,    -1,
      -1,   230,   231,    -1,    -1,    -1,   235,    -1,    -1,    -1,
     239,   240,    -1,   242,   243,    -1,    -1,    -1,   247,    -1,
      -1,   250,   251,    -1,    -1,   254,    -1,    -1,   257,   258,
      -1,    -1,    -1,    -1,    -1,   264,   265,    -1,   267,    -1,
     269,    -1,   271,   272,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   280,    -1,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
      -1,   300,   301,   302,    -1,   304,   305,   306,   307,    -1,
     309,   310,    -1,    -1,    -1,    -1,   315,   316,   317,   318,
     319,   320,    -1,    -1,   323,   324,    -1,   326,    -1,   328,
      -1,   330,   331,   332,   333,   334,   335,   336,   337,   338,
      -1,    -1,   341,   342,    -1,    -1,   345,   346,   347,   348,
      -1,    -1,    -1,   352,   353,    -1,    -1,    -1,   357,    -1,
     359,   360,   361,    -1,   363,   364,   365,    -1,   367,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   377,   378,
     379,    -1,   381,   382,    -1,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,    -1,    -1,   396,   397,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,    -1,   408,
     409,   410,    -1,    -1,   413,    -1,    -1,    -1,   417,   418,
     419,   420,   421,    -1,    -1,   424,   425,   426,   427,   428,
      -1,   430,   431,    -1,   433,   434,   435,    -1,    -1,   438,
      -1,   440,    -1,   442,   443,    -1,   445,   446,   447,    -1,
     449,    -1,    -1,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,    -1,   464,   465,    -1,    -1,    -1,
     469,   470,   471,   472,    -1,    -1,    -1,   476,    -1,    -1,
      -1,   480,    -1,   482,   483,   484,   485,    -1,   487,   488,
     489,   490,   491,    -1,    -1,    -1,   495,    -1,    -1,    -1,
      -1,   500,   501,    -1,   503,    -1,    -1,   506,    -1,    -1,
     509,   510,   511,    -1,    -1,   514,   515,    -1,   517,   518,
     519,   520,   521,   522,    -1,    -1,   525,   526,   527,   528,
      -1,   530,   531,    -1,    -1,   534,   535,   536,   537,    -1,
      -1,   540,   541,    -1,   543,   544,   545,   546,    -1,    -1,
      -1,    -1,    -1,   552,   553,    -1,    -1,    -1,   557,   558,
     559,   560,    -1,   562,   563,    -1,   565,   566,    -1,   568,
     569,    -1,    -1,   572,    -1,    -1,   575,    -1,   577,    -1,
     579,   580,    -1,    -1,    -1,    -1,    -1,    -1,   587,    -1,
      -1,   590,    -1,    -1,    -1,   594,   595,   596,   597,   598,
      -1,    -1,    -1,    -1,    -1,    -1,   605,   606,    -1,   608,
     609,   610,    -1,     5,   613,     7,     8,     9,    10,    11,
      -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,    20,    -1,
      22,    23,    24,    25,    26,    27,    28,    -1,    30,    -1,
      -1,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    41,
      42,    43,    -1,    45,    -1,    47,    48,    -1,    -1,    51,
      -1,    -1,    54,    55,    -1,    57,    58,    -1,    60,    -1,
      62,    63,    64,    65,    66,    67,    -1,    69,    70,    -1,
      72,    73,    74,    75,    76,    77,    78,    79,    -1,    81,
      82,    -1,    84,    85,    86,    87,    88,    -1,    90,    -1,
      -1,    93,    -1,    -1,    96,    -1,    98,    -1,    -1,   101,
      -1,    -1,    -1,   105,   106,   107,    -1,    -1,   110,    -1,
      -1,    -1,    -1,   115,   116,    -1,    -1,    -1,    -1,   121,
     122,    -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,
     132,   133,   134,    -1,    -1,    -1,   138,    -1,    -1,   141,
     142,   143,    -1,    -1,    -1,   147,    -1,   149,   150,    -1,
     152,   153,   154,    -1,    -1,   157,   158,    -1,   160,   161,
     162,   163,   164,   165,    -1,    -1,   168,   169,   170,    -1,
      -1,   173,   174,    -1,   176,   177,   178,    -1,    -1,   181,
      -1,    -1,    -1,   185,   186,   187,   188,    -1,   190,    -1,
     192,   193,   194,   195,    -1,   197,    -1,   199,    -1,    -1,
      -1,   203,   204,    -1,   206,    -1,    -1,   209,   210,    -1,
      -1,    -1,   214,   215,   216,   217,    -1,    -1,   220,   221,
     222,    -1,    -1,   225,    -1,    -1,    -1,    -1,   230,   231,
      -1,    -1,    -1,   235,    -1,    -1,    -1,   239,   240,    -1,
     242,   243,    -1,    -1,    -1,   247,    -1,    -1,   250,   251,
      -1,    -1,   254,    -1,    -1,   257,   258,    -1,    -1,    -1,
      -1,    -1,   264,   265,    -1,   267,    -1,   269,    -1,   271,
     272,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,    -1,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,    -1,   300,   301,
     302,    -1,   304,   305,   306,   307,    -1,   309,   310,    -1,
      -1,    -1,    -1,   315,   316,   317,   318,   319,   320,    -1,
      -1,   323,   324,    -1,   326,    -1,   328,    -1,   330,   331,
     332,   333,   334,   335,   336,   337,   338,    -1,    -1,   341,
     342,    -1,    -1,   345,   346,   347,   348,    -1,    -1,    -1,
     352,   353,    -1,    -1,    -1,   357,    -1,   359,   360,   361,
      -1,   363,   364,   365,    -1,   367,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   377,   378,   379,    -1,   381,
     382,    -1,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,    -1,    -1,   396,   397,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,    -1,   408,   409,   410,    -1,
      -1,   413,    -1,    -1,    -1,   417,   418,   419,   420,   421,
      -1,    -1,   424,   425,   426,   427,   428,    -1,   430,   431,
      -1,   433,   434,   435,    -1,    -1,   438,    -1,   440,    -1,
     442,   443,    -1,   445,   446,   447,    -1,   449,    -1,    -1,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,    -1,   464,   465,    -1,    -1,    -1,   469,   470,   471,
     472,    -1,    -1,    -1,   476,    -1,    -1,    -1,   480,    -1,
     482,   483,   484,   485,    -1,   487,   488,   489,   490,   491,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   500,   501,
      -1,   503,    -1,    -1,   506,    -1,    -1,   509,   510,   511,
      -1,    -1,   514,   515,    -1,   517,   518,   519,   520,   521,
     522,    -1,    -1,   525,   526,   527,   528,    -1,   530,   531,
      -1,    -1,   534,   535,   536,   537,    -1,    -1,   540,   541,
      -1,   543,   544,   545,   546,    -1,    -1,    -1,    -1,    -1,
     552,   553,    -1,    -1,    -1,   557,   558,   559,   560,    -1,
     562,   563,    -1,   565,   566,    -1,   568,   569,    -1,    -1,
     572,    -1,    -1,   575,    -1,   577,    -1,   579,   580,    -1,
      -1,    -1,    -1,    -1,    -1,   587,    -1,    -1,   590,    -1,
      -1,    -1,   594,   595,   596,   597,   598,    -1,    -1,    -1,
      -1,    -1,    -1,   605,   606,    -1,   608,   609,   610,    -1,
       5,   613,     7,     8,     9,    10,    11,    -1,    -1,    -1,
      -1,    -1,    17,    -1,    -1,    20,    -1,    22,    23,    24,
      25,    26,    27,    28,    -1,    30,    -1,    -1,    -1,    34,
      -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,
      45,    -1,    47,    48,    -1,    -1,    51,    -1,    -1,    54,
      55,    -1,    57,    58,    -1,    60,    -1,    62,    63,    64,
      65,    66,    67,    -1,    69,    70,    -1,    72,    73,    74,
      75,    76,    77,    78,    79,    -1,    81,    82,    -1,    84,
      85,    86,    87,    88,    -1,    90,    -1,    -1,    93,    -1,
      -1,    96,    -1,    98,    -1,    -1,   101,    -1,    -1,    -1,
     105,   106,   107,    -1,    -1,   110,    -1,    -1,    -1,    -1,
     115,   116,    -1,    -1,    -1,   120,   121,   122,    -1,   124,
      -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,   134,
      -1,    -1,    -1,   138,    -1,    -1,   141,   142,   143,    -1,
      -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,   154,
      -1,    -1,   157,   158,    -1,   160,   161,   162,   163,   164,
     165,    -1,    -1,   168,   169,   170,    -1,    -1,   173,   174,
      -1,   176,   177,   178,    -1,    -1,   181,    -1,    -1,    -1,
     185,   186,    -1,   188,    -1,   190,    -1,   192,   193,   194,
     195,    -1,   197,    -1,   199,    -1,    -1,    -1,   203,   204,
      -1,   206,    -1,    -1,   209,   210,    -1,    -1,    -1,   214,
     215,   216,   217,    -1,    -1,   220,   221,   222,    -1,    -1,
     225,    -1,    -1,    -1,    -1,   230,   231,    -1,    -1,    -1,
     235,    -1,    -1,    -1,   239,   240,    -1,   242,   243,    -1,
      -1,    -1,   247,    -1,    -1,   250,   251,    -1,    -1,   254,
      -1,    -1,   257,   258,    -1,    -1,    -1,    -1,    -1,   264,
     265,    -1,   267,    -1,   269,    -1,   271,   272,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   280,    -1,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,    -1,   300,   301,   302,    -1,   304,
     305,   306,   307,    -1,   309,   310,    -1,    -1,    -1,    -1,
     315,   316,   317,   318,   319,   320,    -1,    -1,   323,   324,
      -1,   326,    -1,   328,    -1,   330,   331,   332,   333,   334,
     335,   336,   337,   338,    -1,    -1,   341,   342,    -1,    -1,
     345,   346,   347,   348,    -1,    -1,    -1,   352,   353,    -1,
      -1,    -1,   357,    -1,   359,   360,   361,    -1,   363,   364,
     365,    -1,   367,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   377,   378,   379,    -1,   381,   382,    -1,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,    -1,
      -1,   396,   397,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,    -1,   408,   409,   410,    -1,    -1,   413,    -1,
      -1,    -1,   417,   418,   419,   420,   421,    -1,    -1,   424,
     425,   426,   427,   428,    -1,   430,   431,    -1,   433,   434,
     435,    -1,    -1,   438,    -1,   440,    -1,   442,   443,    -1,
     445,   446,   447,    -1,   449,    -1,    -1,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,    -1,   464,
     465,    -1,    -1,    -1,   469,   470,   471,   472,    -1,    -1,
      -1,   476,    -1,    -1,    -1,   480,    -1,   482,   483,   484,
     485,    -1,   487,   488,   489,   490,   491,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   500,   501,    -1,   503,    -1,
      -1,   506,    -1,    -1,   509,   510,   511,    -1,    -1,   514,
     515,    -1,   517,   518,   519,   520,   521,   522,    -1,    -1,
     525,   526,   527,   528,    -1,   530,   531,    -1,    -1,   534,
     535,   536,   537,    -1,    -1,   540,   541,    -1,   543,   544,
     545,   546,    -1,    -1,    -1,    -1,    -1,   552,   553,    -1,
      -1,    -1,   557,   558,   559,   560,    -1,   562,   563,    -1,
     565,   566,    -1,   568,   569,    -1,    -1,   572,    -1,    -1,
     575,    -1,   577,    -1,   579,   580,    -1,    -1,    -1,    -1,
      -1,    -1,   587,    -1,    -1,   590,    -1,    -1,    -1,   594,
     595,   596,   597,   598,    -1,    -1,    -1,    -1,    -1,    -1,
     605,   606,    -1,   608,   609,   610,    -1,     5,   613,     7,
       8,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,
      -1,    -1,    20,    -1,    22,    23,    24,    25,    26,    27,
      28,    -1,    30,    -1,    -1,    -1,    34,    -1,    -1,    -1,
      38,    -1,    -1,    41,    42,    43,    -1,    45,    -1,    47,
      48,    -1,    -1,    51,    -1,    -1,    54,    55,    -1,    57,
      58,    -1,    60,    -1,    62,    63,    64,    65,    66,    67,
      -1,    69,    70,    -1,    72,    73,    74,    75,    76,    77,
      78,    79,    -1,    81,    82,    -1,    84,    85,    86,    87,
      88,    -1,    90,    -1,    -1,    93,    -1,    -1,    96,    -1,
      98,    -1,    -1,   101,    -1,    -1,    -1,   105,   106,   107,
      -1,    -1,   110,    -1,    -1,    -1,    -1,   115,   116,    -1,
      -1,    -1,   120,   121,   122,    -1,   124,    -1,    -1,    -1,
     128,    -1,   130,   131,   132,   133,   134,    -1,    -1,    -1,
     138,    -1,    -1,   141,   142,   143,    -1,    -1,    -1,   147,
      -1,   149,   150,    -1,   152,   153,   154,    -1,    -1,   157,
     158,    -1,   160,   161,   162,   163,   164,   165,    -1,    -1,
     168,   169,   170,    -1,    -1,   173,   174,    -1,   176,   177,
     178,    -1,    -1,   181,    -1,    -1,    -1,   185,   186,    -1,
     188,    -1,   190,    -1,   192,   193,   194,   195,    -1,   197,
      -1,   199,    -1,    -1,    -1,   203,   204,    -1,   206,    -1,
      -1,   209,   210,    -1,    -1,    -1,   214,   215,   216,   217,
      -1,    -1,   220,   221,   222,    -1,    -1,   225,    -1,    -1,
      -1,    -1,   230,   231,    -1,    -1,    -1,   235,    -1,    -1,
      -1,   239,   240,    -1,   242,   243,    -1,    -1,    -1,   247,
      -1,    -1,   250,   251,    -1,    -1,   254,    -1,    -1,   257,
     258,    -1,    -1,    -1,    -1,    -1,   264,   265,    -1,   267,
      -1,   269,    -1,   271,   272,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   280,    -1,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,    -1,   300,   301,   302,    -1,   304,   305,   306,   307,
      -1,   309,   310,    -1,    -1,    -1,    -1,   315,   316,   317,
     318,   319,   320,    -1,    -1,   323,   324,    -1,   326,    -1,
     328,    -1,   330,   331,   332,   333,   334,   335,   336,   337,
     338,    -1,    -1,   341,   342,    -1,    -1,   345,   346,   347,
     348,    -1,    -1,    -1,   352,   353,    -1,    -1,    -1,   357,
      -1,   359,   360,   361,    -1,   363,   364,   365,    -1,   367,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   377,
     378,   379,    -1,   381,   382,    -1,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,    -1,    -1,   396,   397,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,    -1,
     408,   409,   410,    -1,    -1,   413,    -1,    -1,    -1,   417,
     418,   419,   420,   421,    -1,    -1,   424,   425,   426,   427,
     428,    -1,   430,   431,    -1,   433,   434,   435,    -1,    -1,
     438,    -1,   440,    -1,   442,   443,    -1,   445,   446,   447,
      -1,   449,    -1,    -1,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,    -1,   464,   465,    -1,    -1,
      -1,   469,   470,   471,   472,    -1,    -1,    -1,   476,    -1,
      -1,    -1,   480,    -1,   482,   483,   484,   485,    -1,   487,
     488,   489,   490,   491,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   500,   501,    -1,   503,    -1,    -1,   506,    -1,
      -1,   509,   510,   511,    -1,    -1,   514,   515,    -1,   517,
     518,   519,   520,   521,   522,    -1,    -1,   525,   526,   527,
     528,    -1,   530,   531,    -1,    -1,   534,   535,   536,   537,
      -1,    -1,   540,   541,    -1,   543,   544,   545,   546,    -1,
      -1,    -1,    -1,    -1,   552,   553,    -1,    -1,    -1,   557,
     558,   559,   560,    -1,   562,   563,    -1,   565,   566,    -1,
     568,   569,    -1,    -1,   572,    -1,    -1,   575,    -1,   577,
      -1,   579,   580,    -1,    -1,    -1,    -1,    -1,    -1,   587,
      -1,    -1,   590,    -1,    -1,    -1,   594,   595,   596,   597,
     598,    -1,    -1,    -1,    -1,    -1,    -1,   605,   606,    -1,
     608,   609,   610,    -1,     5,   613,     7,     8,     9,    10,
      11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,    20,
      -1,    22,    23,    24,    25,    26,    27,    28,    -1,    30,
      -1,    -1,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,
      41,    42,    43,    -1,    45,    -1,    47,    48,    -1,    -1,
      51,    -1,    -1,    54,    55,    -1,    57,    58,    -1,    60,
      -1,    62,    63,    64,    65,    66,    67,    -1,    69,    70,
      -1,    72,    73,    74,    75,    76,    77,    78,    79,    -1,
      81,    82,    -1,    84,    85,    86,    87,    88,    -1,    90,
      -1,    -1,    93,    -1,    -1,    96,    -1,    98,    -1,    -1,
     101,    -1,    -1,    -1,   105,   106,   107,    -1,    -1,   110,
      -1,    -1,    -1,    -1,   115,   116,    -1,    -1,    -1,   120,
     121,   122,    -1,   124,    -1,    -1,    -1,   128,    -1,   130,
     131,   132,   133,   134,    -1,    -1,    -1,   138,    -1,    -1,
     141,   142,   143,    -1,    -1,    -1,   147,    -1,   149,   150,
      -1,   152,   153,   154,    -1,    -1,   157,   158,    -1,   160,
     161,   162,   163,   164,   165,    -1,    -1,   168,   169,   170,
      -1,    -1,   173,   174,    -1,   176,   177,   178,    -1,    -1,
     181,    -1,    -1,    -1,   185,   186,    -1,   188,    -1,   190,
      -1,   192,   193,   194,   195,    -1,   197,    -1,   199,    -1,
      -1,    -1,   203,   204,    -1,   206,    -1,    -1,   209,   210,
      -1,    -1,    -1,   214,   215,   216,   217,    -1,    -1,   220,
     221,   222,    -1,    -1,   225,    -1,    -1,    -1,    -1,   230,
     231,    -1,    -1,    -1,   235,    -1,    -1,    -1,   239,   240,
      -1,   242,   243,    -1,    -1,    -1,   247,    -1,    -1,   250,
     251,    -1,    -1,   254,    -1,    -1,   257,   258,    -1,    -1,
      -1,    -1,    -1,   264,   265,    -1,   267,    -1,   269,    -1,
     271,   272,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,
      -1,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,    -1,   300,
     301,   302,    -1,   304,   305,   306,   307,    -1,   309,   310,
      -1,    -1,    -1,    -1,   315,   316,   317,   318,   319,   320,
      -1,    -1,   323,   324,    -1,   326,    -1,   328,    -1,   330,
     331,   332,   333,   334,   335,   336,   337,   338,    -1,    -1,
     341,   342,    -1,    -1,   345,   346,   347,   348,    -1,    -1,
      -1,   352,   353,    -1,    -1,    -1,   357,    -1,   359,   360,
     361,    -1,   363,   364,   365,    -1,   367,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   377,   378,   379,    -1,
     381,   382,    -1,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,    -1,    -1,   396,   397,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,    -1,   408,   409,   410,
      -1,    -1,   413,    -1,    -1,    -1,   417,   418,   419,   420,
     421,    -1,    -1,   424,   425,   426,   427,   428,    -1,   430,
     431,    -1,   433,   434,   435,    -1,    -1,   438,    -1,   440,
      -1,   442,   443,    -1,   445,   446,   447,    -1,   449,    -1,
      -1,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,    -1,   464,   465,    -1,    -1,    -1,   469,   470,
     471,   472,    -1,    -1,    -1,   476,    -1,    -1,    -1,   480,
      -1,   482,   483,   484,   485,    -1,   487,   488,   489,   490,
     491,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   500,
     501,    -1,   503,    -1,    -1,   506,    -1,    -1,   509,   510,
     511,    -1,    -1,   514,   515,    -1,   517,   518,   519,   520,
     521,   522,    -1,    -1,   525,   526,   527,   528,    -1,   530,
     531,    -1,    -1,   534,   535,   536,   537,    -1,    -1,   540,
     541,    -1,   543,   544,   545,   546,    -1,    -1,    -1,    -1,
      -1,   552,   553,    -1,    -1,    -1,   557,   558,   559,   560,
      -1,   562,   563,    -1,   565,   566,    -1,   568,   569,    -1,
      -1,   572,    -1,    -1,   575,    -1,   577,    -1,   579,   580,
      -1,    -1,    -1,    -1,    -1,    -1,   587,    -1,    -1,   590,
      -1,    -1,    -1,   594,   595,   596,   597,   598,    -1,    -1,
      -1,    -1,    -1,    -1,   605,   606,    -1,   608,   609,   610,
      -1,     5,   613,     7,     8,     9,    10,    11,    12,    -1,
      -1,    -1,    -1,    17,    -1,    -1,    20,    -1,    22,    23,
      24,    25,    26,    27,    28,    -1,    30,    -1,    -1,    -1,
      34,    -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,
      -1,    45,    -1,    47,    48,    -1,    -1,    51,    -1,    -1,
      54,    55,    -1,    57,    58,    -1,    60,    -1,    62,    63,
      64,    65,    66,    67,    -1,    69,    70,    -1,    72,    73,
      74,    75,    76,    77,    78,    79,    -1,    81,    82,    -1,
      84,    85,    86,    87,    88,    -1,    90,    -1,    -1,    93,
      -1,    -1,    96,    -1,    98,    -1,    -1,   101,    -1,    -1,
      -1,   105,   106,   107,    -1,    -1,   110,    -1,    -1,    -1,
      -1,   115,   116,    -1,    -1,    -1,    -1,   121,   122,    -1,
     124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,
     134,    -1,    -1,    -1,   138,    -1,    -1,   141,   142,   143,
      -1,    -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,
     154,    -1,    -1,   157,   158,    -1,   160,   161,   162,   163,
     164,   165,    -1,    -1,   168,   169,   170,    -1,    -1,   173,
     174,    -1,   176,   177,   178,    -1,    -1,   181,    -1,    -1,
      -1,   185,   186,    -1,   188,    -1,   190,    -1,   192,   193,
     194,   195,    -1,   197,    -1,   199,    -1,    -1,    -1,   203,
     204,    -1,   206,    -1,    -1,   209,   210,    -1,    -1,    -1,
     214,   215,   216,   217,    -1,    -1,   220,   221,   222,    -1,
      -1,   225,    -1,    -1,    -1,    -1,   230,   231,    -1,    -1,
      -1,   235,    -1,    -1,    -1,   239,   240,    -1,   242,   243,
      -1,    -1,    -1,   247,    -1,    -1,   250,   251,    -1,    -1,
     254,    -1,    -1,   257,   258,    -1,    -1,    -1,    -1,    -1,
     264,   265,    -1,   267,    -1,   269,    -1,   271,   272,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   280,    -1,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,    -1,   300,   301,   302,    -1,
     304,   305,   306,   307,    -1,   309,   310,    -1,    -1,    -1,
      -1,   315,   316,   317,   318,   319,   320,    -1,    -1,   323,
     324,    -1,   326,    -1,   328,    -1,   330,   331,   332,   333,
     334,   335,   336,   337,   338,    -1,    -1,   341,   342,    -1,
      -1,   345,   346,   347,   348,    -1,    -1,    -1,   352,   353,
      -1,    -1,    -1,   357,    -1,   359,   360,   361,    -1,   363,
     364,   365,    -1,   367,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   377,   378,   379,    -1,   381,   382,    -1,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
      -1,    -1,   396,   397,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,    -1,   408,   409,   410,    -1,    -1,   413,
      -1,    -1,    -1,   417,   418,   419,   420,   421,    -1,    -1,
     424,   425,   426,   427,   428,    -1,   430,   431,    -1,   433,
     434,   435,    -1,    -1,   438,    -1,   440,    -1,   442,   443,
      -1,   445,   446,   447,    -1,   449,    -1,    -1,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,    -1,
     464,   465,    -1,    -1,    -1,   469,   470,   471,   472,    -1,
      -1,    -1,   476,    -1,    -1,    -1,   480,    -1,   482,   483,
     484,   485,    -1,   487,   488,   489,   490,   491,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   500,   501,    -1,   503,
      -1,    -1,   506,    -1,    -1,   509,   510,   511,    -1,    -1,
     514,   515,    -1,   517,   518,   519,   520,   521,   522,    -1,
      -1,   525,   526,   527,   528,    -1,   530,   531,    -1,    -1,
     534,   535,   536,   537,    -1,    -1,   540,   541,    -1,   543,
     544,   545,   546,    -1,    -1,    -1,    -1,    -1,   552,   553,
      -1,    -1,    -1,   557,   558,   559,   560,    -1,   562,   563,
      -1,   565,   566,    -1,   568,   569,    -1,    -1,   572,    -1,
      -1,   575,    -1,   577,    -1,   579,   580,    -1,    -1,    -1,
      -1,    -1,    -1,   587,    -1,    -1,   590,    -1,    -1,    -1,
     594,   595,   596,   597,   598,    -1,    -1,    -1,    -1,    -1,
      -1,   605,   606,    -1,   608,   609,   610,    -1,     5,   613,
       7,     8,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,
      17,    -1,    -1,    20,    -1,    22,    23,    24,    25,    26,
      27,    28,    -1,    30,    -1,    -1,    -1,    34,    -1,    -1,
      -1,    38,    -1,    -1,    41,    42,    43,    -1,    45,    -1,
      47,    48,    -1,    -1,    51,    -1,    -1,    54,    55,    -1,
      57,    58,    -1,    60,    -1,    62,    63,    64,    65,    66,
      67,    -1,    69,    70,    -1,    72,    73,    74,    75,    76,
      77,    78,    79,    -1,    81,    82,    -1,    84,    85,    86,
      87,    88,    -1,    90,    -1,    -1,    93,    -1,    -1,    96,
      -1,    98,    -1,    -1,   101,    -1,    -1,    -1,   105,   106,
     107,    -1,    -1,   110,    -1,    -1,    -1,    -1,   115,   116,
      -1,    -1,    -1,    -1,   121,   122,    -1,   124,    -1,    -1,
      -1,   128,    -1,   130,   131,   132,   133,   134,    -1,    -1,
      -1,   138,    -1,    -1,   141,   142,   143,    -1,    -1,    -1,
     147,    -1,   149,   150,    -1,   152,   153,   154,    -1,    -1,
     157,   158,    -1,   160,   161,   162,   163,   164,   165,    -1,
      -1,   168,   169,   170,    -1,    -1,   173,   174,    -1,   176,
     177,   178,    -1,    -1,   181,    -1,    -1,    -1,   185,   186,
      -1,   188,    -1,   190,    -1,   192,   193,   194,   195,    -1,
     197,    -1,   199,    -1,    -1,    -1,   203,   204,    -1,   206,
      -1,    -1,   209,   210,    -1,    -1,    -1,   214,   215,   216,
     217,    -1,    -1,   220,   221,   222,    -1,    -1,   225,    -1,
      -1,    -1,    -1,   230,   231,    -1,    -1,    -1,   235,    -1,
      -1,    -1,   239,   240,    -1,   242,   243,    -1,    -1,    -1,
     247,    -1,    -1,   250,   251,    -1,    -1,   254,    -1,    -1,
     257,   258,    -1,    -1,    -1,    -1,    -1,   264,   265,    -1,
     267,    -1,   269,    -1,   271,   272,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   280,    -1,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,    -1,   300,   301,   302,    -1,   304,   305,   306,
     307,    -1,   309,   310,    -1,    -1,    -1,    -1,   315,   316,
     317,   318,   319,   320,    -1,    -1,   323,   324,    -1,   326,
      -1,   328,    -1,   330,   331,   332,   333,   334,   335,   336,
     337,   338,    -1,    -1,   341,   342,    -1,    -1,   345,   346,
     347,   348,    -1,    -1,    -1,   352,   353,    -1,    -1,    -1,
     357,    -1,   359,   360,   361,    -1,   363,   364,   365,    -1,
     367,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     377,   378,   379,    -1,   381,   382,    -1,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,    -1,    -1,   396,
     397,   398,   399,   400,    -1,   402,   403,   404,   405,   406,
      -1,   408,   409,   410,    -1,    -1,   413,    -1,    -1,    -1,
     417,   418,   419,   420,   421,    -1,    -1,   424,   425,   426,
     427,   428,    -1,   430,   431,    -1,   433,   434,   435,    -1,
      -1,   438,    -1,   440,    -1,   442,   443,    -1,   445,   446,
     447,    -1,   449,    -1,    -1,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,    -1,   464,   465,    -1,
      -1,    -1,   469,   470,   471,   472,    -1,    -1,    -1,   476,
      -1,    -1,    -1,   480,    -1,   482,   483,   484,   485,    -1,
     487,   488,   489,   490,   491,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   500,   501,    -1,   503,    -1,    -1,   506,
      -1,    -1,   509,   510,   511,    -1,    -1,   514,   515,    -1,
     517,   518,   519,   520,   521,   522,    -1,    -1,   525,   526,
     527,   528,    -1,   530,   531,    -1,    -1,   534,   535,   536,
     537,    -1,    -1,   540,   541,    -1,   543,   544,   545,   546,
      -1,    -1,    -1,    -1,    -1,   552,   553,    -1,    -1,    -1,
     557,   558,   559,   560,    -1,   562,   563,    -1,   565,   566,
      -1,   568,   569,    -1,    -1,   572,    -1,    -1,   575,    -1,
     577,    -1,   579,   580,    -1,    -1,    -1,    -1,    -1,    -1,
     587,    -1,    -1,   590,    -1,    -1,    -1,   594,   595,   596,
     597,   598,    -1,    -1,    -1,    -1,    -1,    -1,   605,   606,
      -1,   608,   609,   610,    -1,     5,   613,     7,     8,     9,
      10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,
      20,    -1,    22,    23,    24,    25,    26,    27,    28,    -1,
      30,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,    -1,
      -1,    41,    42,    43,    -1,    45,    -1,    47,    48,    -1,
      -1,    51,    -1,    -1,    54,    55,    -1,    57,    58,    -1,
      60,    -1,    62,    63,    64,    65,    66,    67,    -1,    69,
      70,    -1,    72,    73,    74,    75,    76,    77,    78,    79,
      -1,    81,    82,    -1,    84,    85,    86,    87,    88,    -1,
      90,    -1,    -1,    93,    -1,    -1,    96,    -1,    98,    -1,
      -1,   101,    -1,    -1,    -1,   105,   106,   107,    -1,    -1,
     110,    -1,    -1,    -1,    -1,   115,   116,    -1,    -1,    -1,
      -1,   121,   122,    -1,   124,    -1,    -1,    -1,   128,    -1,
     130,   131,   132,   133,   134,    -1,    -1,    -1,   138,    -1,
      -1,   141,   142,   143,    -1,    -1,    -1,   147,    -1,   149,
     150,    -1,   152,   153,   154,    -1,    -1,   157,   158,    -1,
     160,   161,   162,   163,   164,   165,    -1,    -1,   168,   169,
     170,    -1,    -1,   173,   174,    -1,   176,   177,   178,    -1,
      -1,   181,    -1,    -1,    -1,   185,   186,    -1,   188,    -1,
     190,    -1,   192,   193,   194,   195,    -1,   197,    -1,   199,
      -1,    -1,    -1,   203,   204,    -1,   206,    -1,    -1,   209,
     210,    -1,    -1,    -1,   214,   215,   216,   217,    -1,    -1,
     220,   221,   222,    -1,    -1,   225,    -1,    -1,    -1,    -1,
     230,   231,    -1,    -1,    -1,   235,    -1,    -1,    -1,   239,
     240,    -1,   242,   243,    -1,    -1,    -1,   247,    -1,    -1,
     250,   251,    -1,    -1,   254,    -1,    -1,   257,   258,    -1,
      -1,    -1,    -1,    -1,   264,   265,    -1,   267,    -1,   269,
      -1,   271,   272,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     280,    -1,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,    -1,
     300,   301,   302,    -1,   304,   305,   306,   307,    -1,   309,
     310,    -1,    -1,    -1,    -1,   315,   316,   317,   318,   319,
     320,    -1,    -1,   323,   324,    -1,   326,    -1,   328,    -1,
     330,   331,   332,   333,   334,   335,   336,   337,   338,    -1,
      -1,   341,   342,    -1,    -1,   345,   346,   347,   348,    -1,
      -1,    -1,   352,   353,    -1,    -1,    -1,   357,    -1,   359,
     360,   361,    -1,   363,   364,   365,    -1,   367,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   377,   378,   379,
      -1,   381,   382,    -1,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,    -1,    -1,   396,   397,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,    -1,   408,   409,
     410,    -1,    -1,   413,    -1,    -1,    -1,   417,   418,   419,
     420,   421,    -1,    -1,   424,   425,   426,   427,   428,    -1,
     430,   431,    -1,   433,   434,   435,    -1,    -1,   438,    -1,
     440,    -1,   442,   443,    -1,   445,   446,   447,    -1,   449,
      -1,    -1,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,   464,   465,    -1,    -1,    -1,   469,
     470,   471,   472,    -1,    -1,    -1,   476,    -1,    -1,    -1,
     480,    -1,   482,   483,   484,   485,    -1,   487,   488,   489,
     490,   491,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     500,   501,    -1,   503,    -1,    -1,   506,    -1,    -1,   509,
     510,   511,    -1,    -1,   514,   515,    -1,   517,   518,   519,
     520,   521,   522,    -1,    -1,   525,   526,   527,   528,    -1,
     530,   531,    -1,    -1,   534,   535,   536,   537,    -1,   539,
     540,   541,    -1,   543,   544,   545,   546,    -1,    -1,    -1,
      -1,    -1,   552,   553,    -1,    -1,    -1,   557,   558,   559,
     560,    -1,   562,   563,    -1,   565,   566,    -1,   568,   569,
      -1,    -1,   572,    -1,    -1,   575,    -1,   577,    -1,   579,
     580,    -1,    -1,    -1,    -1,    -1,    -1,   587,    -1,    -1,
     590,    -1,    -1,    -1,   594,   595,   596,   597,   598,    -1,
      -1,    -1,    -1,    -1,    -1,   605,   606,    -1,   608,   609,
     610,    -1,     5,   613,     7,     8,     9,    10,    11,    -1,
      -1,    -1,    -1,    -1,    17,    -1,    -1,    20,    -1,    22,
      23,    24,    25,    26,    27,    28,    -1,    30,    -1,    -1,
      -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    41,    42,
      43,    -1,    45,    -1,    47,    48,    -1,    -1,    51,    -1,
      -1,    54,    55,    -1,    57,    58,    -1,    60,    -1,    62,
      63,    64,    65,    66,    67,    -1,    69,    70,    -1,    72,
      73,    74,    75,    76,    77,    78,    79,    -1,    81,    82,
      -1,    84,    85,    86,    87,    88,    -1,    90,    -1,    -1,
      93,    -1,    -1,    96,    -1,    98,    -1,    -1,   101,    -1,
      -1,    -1,   105,   106,   107,    -1,    -1,   110,    -1,    -1,
      -1,    -1,   115,   116,    -1,    -1,    -1,    -1,   121,   122,
      -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,
     133,   134,    -1,    -1,    -1,   138,    -1,    -1,   141,   142,
     143,    -1,    -1,    -1,   147,    -1,   149,   150,    -1,   152,
     153,   154,    -1,    -1,   157,   158,    -1,   160,   161,   162,
     163,   164,   165,    -1,    -1,   168,   169,   170,    -1,    -1,
     173,   174,    -1,   176,   177,   178,    -1,    -1,   181,    -1,
      -1,    -1,   185,   186,    -1,   188,    -1,   190,    -1,   192,
     193,   194,   195,    -1,   197,    -1,   199,    -1,    -1,    -1,
     203,   204,    -1,   206,    -1,    -1,   209,   210,    -1,    -1,
      -1,   214,   215,   216,   217,    -1,    -1,   220,   221,   222,
      -1,    -1,   225,    -1,    -1,    -1,    -1,   230,   231,    -1,
      -1,    -1,   235,    -1,    -1,    -1,   239,   240,    -1,   242,
     243,    -1,    -1,    -1,   247,    -1,    -1,   250,   251,    -1,
      -1,   254,    -1,    -1,   257,   258,    -1,    -1,    -1,    -1,
      -1,   264,   265,    -1,   267,    -1,   269,    -1,   271,   272,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,    -1,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,    -1,   300,   301,   302,
      -1,   304,   305,   306,   307,    -1,   309,   310,    -1,    -1,
      -1,    -1,   315,   316,   317,   318,   319,   320,    -1,    -1,
     323,   324,    -1,   326,    -1,   328,    -1,   330,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,    -1,   341,   342,
      -1,    -1,   345,   346,   347,   348,    -1,    -1,    -1,   352,
     353,    -1,    -1,    -1,   357,    -1,   359,   360,   361,    -1,
     363,   364,   365,    -1,   367,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   377,   378,   379,    -1,   381,   382,
      -1,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,    -1,    -1,   396,   397,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,    -1,   408,   409,   410,    -1,    -1,
     413,    -1,    -1,    -1,   417,   418,   419,   420,   421,    -1,
      -1,   424,   425,   426,   427,   428,    -1,   430,   431,    -1,
     433,   434,   435,    -1,    -1,   438,    -1,   440,    -1,   442,
     443,    -1,   445,   446,   447,    -1,   449,    -1,    -1,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
      -1,   464,   465,    -1,    -1,    -1,   469,   470,   471,   472,
      -1,    -1,    -1,   476,    -1,    -1,    -1,   480,    -1,   482,
     483,   484,   485,    -1,   487,   488,   489,   490,   491,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   500,   501,    -1,
     503,    -1,    -1,   506,    -1,    -1,   509,   510,   511,    -1,
      -1,   514,   515,    -1,   517,   518,   519,   520,   521,   522,
      -1,    -1,   525,   526,   527,   528,    -1,   530,   531,    -1,
      -1,   534,   535,   536,   537,    -1,    -1,   540,   541,    -1,
     543,   544,   545,   546,    -1,    -1,    -1,    -1,    -1,   552,
     553,    -1,    -1,    -1,   557,   558,   559,   560,    -1,   562,
     563,    -1,   565,   566,    -1,   568,   569,    -1,    -1,   572,
      -1,    -1,   575,    -1,   577,    -1,   579,   580,    -1,    -1,
      -1,    -1,    -1,    -1,   587,    -1,    -1,   590,    -1,    -1,
      -1,   594,   595,   596,   597,   598,    -1,    -1,    -1,    -1,
      -1,    -1,   605,   606,    -1,   608,   609,   610,    -1,     5,
     613,     7,     8,     9,    10,    11,    -1,    -1,    -1,    -1,
      -1,    17,    -1,    -1,    20,    -1,    22,    23,    24,    25,
      26,    27,    28,    -1,    30,    -1,    -1,    -1,    34,    -1,
      -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,    45,
      -1,    47,    48,    -1,    -1,    51,    -1,    -1,    54,    55,
      -1,    57,    58,    -1,    60,    -1,    62,    63,    64,    65,
      66,    67,    -1,    69,    70,    -1,    72,    73,    74,    75,
      76,    77,    78,    79,    -1,    81,    82,    -1,    84,    85,
      86,    87,    88,    -1,    90,    -1,    -1,    93,    -1,    -1,
      96,    -1,    98,    -1,    -1,   101,    -1,    -1,    -1,   105,
     106,   107,    -1,    -1,   110,    -1,    -1,    -1,    -1,   115,
     116,    -1,    -1,    -1,    -1,   121,   122,    -1,   124,    -1,
      -1,    -1,   128,    -1,   130,   131,   132,   133,   134,    -1,
      -1,    -1,   138,    -1,    -1,   141,   142,   143,    -1,    -1,
      -1,   147,    -1,   149,   150,    -1,   152,   153,   154,    -1,
      -1,   157,   158,    -1,   160,   161,   162,   163,   164,   165,
      -1,    -1,   168,   169,   170,    -1,    -1,   173,   174,    -1,
     176,   177,   178,    -1,    -1,   181,    -1,    -1,    -1,   185,
     186,    -1,   188,    -1,   190,    -1,   192,   193,   194,   195,
      -1,   197,    -1,   199,    -1,    -1,    -1,   203,   204,    -1,
     206,    -1,    -1,   209,   210,    -1,    -1,    -1,   214,   215,
     216,   217,    -1,    -1,   220,   221,   222,    -1,    -1,   225,
      -1,    -1,    -1,    -1,   230,   231,    -1,    -1,    -1,   235,
      -1,    -1,    -1,   239,   240,    -1,   242,   243,    -1,    -1,
      -1,   247,    -1,    -1,   250,   251,    -1,    -1,   254,    -1,
      -1,   257,   258,    -1,    -1,    -1,    -1,    -1,   264,   265,
      -1,   267,    -1,   269,    -1,   271,   272,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   280,    -1,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,    -1,   300,   301,   302,    -1,   304,   305,
     306,   307,    -1,   309,   310,    -1,    -1,    -1,    -1,   315,
     316,   317,   318,   319,   320,    -1,    -1,   323,   324,    -1,
     326,    -1,   328,    -1,   330,   331,   332,   333,   334,   335,
     336,   337,   338,    -1,    -1,   341,   342,    -1,    -1,   345,
     346,   347,   348,    -1,    -1,    -1,   352,   353,    -1,    -1,
      -1,   357,    -1,   359,   360,   361,    -1,   363,   364,   365,
      -1,   367,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   377,   378,   379,    -1,   381,   382,    -1,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,    -1,    -1,
     396,   397,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,    -1,   408,   409,   410,    -1,    -1,   413,    -1,    -1,
      -1,   417,   418,   419,   420,   421,    -1,    -1,   424,   425,
     426,   427,   428,    -1,   430,   431,    -1,   433,   434,   435,
      -1,    -1,   438,    -1,   440,    -1,   442,   443,    -1,   445,
     446,   447,    -1,   449,    -1,    -1,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,    -1,   464,   465,
      -1,    -1,    -1,   469,   470,   471,   472,    -1,    -1,    -1,
     476,    -1,    -1,    -1,   480,    -1,   482,   483,   484,   485,
      -1,   487,   488,   489,   490,   491,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   500,   501,    -1,   503,    -1,    -1,
     506,    -1,    -1,   509,   510,   511,    -1,    -1,   514,   515,
      -1,   517,   518,   519,   520,   521,   522,    -1,    -1,   525,
     526,   527,   528,    -1,   530,   531,    -1,    -1,   534,   535,
     536,   537,    -1,    -1,   540,   541,    -1,   543,   544,   545,
     546,    -1,    -1,    -1,    -1,    -1,   552,   553,    -1,    -1,
      -1,   557,   558,   559,   560,    -1,   562,   563,    -1,   565,
     566,    -1,   568,   569,    -1,    -1,   572,    -1,    -1,   575,
      -1,   577,    -1,   579,   580,    -1,    -1,    -1,    -1,    -1,
      -1,   587,    -1,    -1,   590,    -1,    -1,    -1,   594,   595,
     596,   597,   598,    -1,    -1,    -1,    -1,    -1,    -1,   605,
     606,    -1,   608,   609,   610,    -1,     5,   613,     7,     8,
       9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,
      -1,    -1,    -1,    22,    23,    24,    25,    26,    27,    -1,
      -1,    30,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,
      -1,    -1,    41,    42,    43,    -1,    45,    -1,    -1,    -1,
      -1,    -1,    51,    52,    -1,    54,    55,    -1,    57,    -1,
      -1,    -1,    -1,    62,    63,    64,    65,    66,    67,    -1,
      69,    70,    -1,    72,    -1,    74,    -1,    76,    77,    78,
      79,    -1,    81,    82,    -1,    84,    85,    86,    -1,    88,
      -1,    90,    -1,    -1,    93,    -1,    -1,    96,    -1,    98,
      -1,    -1,   101,    -1,    -1,    -1,   105,   106,   107,    -1,
      -1,   110,    -1,    -1,    -1,    -1,   115,    -1,    -1,    -1,
      -1,    -1,   121,   122,    -1,   124,    -1,    -1,    -1,   128,
      -1,   130,   131,   132,   133,   134,    -1,    -1,    -1,    -1,
      -1,    -1,   141,   142,   143,    -1,   145,   146,   147,    -1,
     149,   150,    -1,   152,   153,   154,    -1,    -1,   157,   158,
      -1,   160,   161,   162,   163,   164,    -1,    -1,    -1,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,   178,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   186,    -1,   188,
      -1,   190,    -1,   192,   193,   194,   195,    -1,   197,    -1,
     199,    -1,    -1,    -1,    -1,   204,    -1,    -1,    -1,    -1,
      -1,   210,    -1,    -1,    -1,   214,   215,   216,   217,   218,
      -1,   220,   221,   222,    -1,    -1,   225,    -1,    -1,    -1,
      -1,   230,    -1,    -1,    -1,    -1,   235,    -1,    -1,    -1,
     239,   240,    -1,   242,   243,   244,    -1,    -1,   247,    -1,
      -1,    -1,   251,    -1,    -1,   254,   255,    -1,   257,   258,
      -1,    -1,    -1,    -1,    -1,   264,   265,    -1,   267,    -1,
     269,    -1,   271,   272,    -1,    -1,    -1,    -1,   277,    -1,
      -1,   280,    -1,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
      -1,   300,   301,   302,    -1,   304,   305,   306,   307,    -1,
     309,   310,    -1,    -1,    -1,    -1,   315,   316,   317,   318,
     319,   320,    -1,    -1,   323,   324,    -1,   326,    -1,   328,
      -1,   330,   331,   332,   333,   334,   335,   336,   337,   338,
      -1,    -1,   341,   342,    -1,    -1,   345,   346,   347,   348,
      -1,    -1,    -1,    -1,   353,    -1,    -1,    -1,   357,    -1,
     359,   360,   361,    -1,   363,   364,   365,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   378,
     379,    -1,    -1,   382,    -1,   384,   385,   386,   387,   388,
     389,   390,   391,   392,    -1,    -1,    -1,    -1,   397,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,    -1,   408,
     409,   410,    -1,    -1,   413,    -1,    -1,    -1,   417,   418,
     419,   420,   421,    -1,    -1,   424,   425,   426,   427,   428,
      -1,   430,    -1,    -1,   433,    -1,   435,   436,    -1,   438,
      -1,    -1,    -1,   442,    -1,    -1,   445,   446,   447,   448,
     449,    -1,    -1,    -1,   453,   454,   455,   456,   457,   458,
     459,    -1,   461,   462,    -1,   464,    -1,    -1,    -1,    -1,
     469,   470,   471,    -1,    -1,    -1,    -1,   476,    -1,    -1,
      -1,   480,    -1,    -1,   483,    -1,   485,    -1,   487,    -1,
      -1,   490,   491,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   500,   501,    -1,   503,    -1,    -1,   506,    -1,    -1,
     509,    -1,   511,    -1,    -1,    -1,   515,    -1,   517,   518,
     519,   520,   521,   522,    -1,    -1,   525,   526,   527,   528,
      -1,   530,   531,    -1,    -1,   534,   535,   536,   537,    -1,
      -1,   540,   541,    -1,   543,   544,   545,   546,    -1,    -1,
      -1,    -1,    -1,   552,   553,    -1,    -1,    -1,    -1,   558,
     559,   560,    -1,   562,   563,    -1,   565,   566,    -1,    -1,
      -1,    -1,    -1,   572,    -1,    -1,   575,    -1,    -1,    -1,
     579,   580,    -1,    -1,    -1,    -1,    -1,    -1,   587,    -1,
      -1,   590,    -1,    -1,    -1,   594,   595,   596,   597,   598,
      -1,    -1,   601,    -1,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,     5,   613,     7,     8,     9,    10,    11,
      -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,    -1,    -1,
      22,    23,    24,    25,    26,    27,    -1,    -1,    30,    -1,
      -1,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    41,
      42,    43,    -1,    45,    -1,    -1,    -1,    -1,    -1,    51,
      52,    -1,    54,    55,    -1,    57,    -1,    -1,    -1,    -1,
      62,    63,    64,    65,    66,    67,    -1,    69,    70,    -1,
      72,    -1,    74,    -1,    76,    77,    78,    79,    -1,    81,
      82,    -1,    84,    85,    86,    -1,    88,    -1,    90,    -1,
      -1,    93,    -1,    -1,    96,    -1,    98,    -1,    -1,   101,
      -1,    -1,    -1,   105,   106,   107,    -1,    -1,   110,    -1,
      -1,    -1,    -1,   115,    -1,    -1,    -1,    -1,    -1,   121,
     122,    -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,
     132,   133,   134,    -1,    -1,    -1,    -1,    -1,    -1,   141,
     142,   143,    -1,   145,    -1,   147,    -1,   149,   150,    -1,
     152,   153,   154,    -1,    -1,   157,   158,    -1,   160,   161,
     162,   163,   164,    -1,    -1,    -1,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,   178,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   186,    -1,   188,    -1,   190,    -1,
     192,   193,   194,   195,    -1,   197,    -1,   199,    -1,    -1,
      -1,    -1,   204,    -1,    -1,    -1,    -1,    -1,   210,    -1,
      -1,    -1,   214,   215,   216,   217,   218,    -1,   220,   221,
     222,    -1,    -1,   225,    -1,    -1,    -1,    -1,   230,    -1,
      -1,    -1,    -1,   235,    -1,    -1,    -1,   239,   240,    -1,
     242,   243,   244,    -1,    -1,   247,    -1,    -1,    -1,   251,
      -1,    -1,   254,   255,    -1,   257,   258,    -1,    -1,    -1,
      -1,    -1,   264,   265,    -1,   267,    -1,   269,    -1,   271,
     272,    -1,    -1,    -1,    -1,   277,    -1,    -1,   280,    -1,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,    -1,   300,   301,
     302,    -1,   304,   305,   306,   307,    -1,   309,   310,    -1,
      -1,    -1,    -1,   315,   316,   317,   318,   319,   320,    -1,
      -1,   323,   324,    -1,   326,    -1,   328,    -1,   330,   331,
     332,   333,   334,   335,   336,   337,   338,    -1,    -1,   341,
     342,    -1,    -1,   345,   346,   347,   348,    -1,    -1,    -1,
      -1,   353,    -1,    -1,    -1,   357,    -1,   359,   360,   361,
      -1,   363,   364,   365,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   378,   379,    -1,    -1,
     382,    -1,   384,   385,   386,   387,   388,   389,   390,   391,
     392,    -1,    -1,    -1,    -1,   397,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,    -1,   408,   409,   410,    -1,
      -1,   413,    -1,    -1,    -1,   417,   418,   419,   420,   421,
      -1,    -1,   424,   425,   426,   427,   428,    -1,   430,    -1,
      -1,   433,    -1,   435,   436,    -1,   438,    -1,    -1,    -1,
     442,    -1,    -1,   445,   446,   447,   448,   449,    -1,    -1,
      -1,   453,   454,   455,   456,   457,   458,   459,    -1,   461,
     462,    -1,   464,    -1,    -1,    -1,    -1,   469,   470,   471,
      -1,    -1,    -1,    -1,   476,    -1,    -1,    -1,   480,    -1,
      -1,   483,    -1,   485,    -1,   487,    -1,    -1,   490,   491,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   500,   501,
      -1,   503,    -1,    -1,   506,    -1,    -1,   509,    -1,   511,
      -1,    -1,    -1,   515,    -1,   517,   518,   519,   520,   521,
     522,    -1,    -1,   525,   526,   527,   528,    -1,   530,   531,
      -1,    -1,   534,   535,   536,   537,    -1,    -1,   540,   541,
      -1,   543,   544,   545,   546,    -1,    -1,    -1,    -1,    -1,
     552,   553,    -1,    -1,    -1,    -1,   558,   559,   560,    -1,
     562,   563,    -1,   565,   566,    -1,    -1,    -1,    -1,    -1,
     572,    -1,    -1,   575,    -1,    -1,    -1,   579,   580,    -1,
      -1,    -1,    -1,    -1,    -1,   587,    -1,    -1,   590,    -1,
      -1,    -1,   594,   595,   596,   597,   598,   599,    -1,   601,
      -1,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
       5,   613,     7,     8,     9,    10,    11,    -1,    -1,    -1,
      -1,    -1,    17,    -1,    -1,    -1,    -1,    22,    23,    24,
      25,    26,    27,    -1,    -1,    30,    -1,    -1,    -1,    34,
      -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,
      45,    -1,    -1,    -1,    -1,    -1,    51,    52,    -1,    54,
      55,    -1,    57,    -1,    -1,    -1,    -1,    62,    63,    64,
      65,    66,    67,    -1,    69,    70,    -1,    72,    -1,    74,
      -1,    76,    77,    78,    79,    -1,    81,    82,    -1,    84,
      85,    86,    -1,    88,    -1,    90,    -1,    -1,    93,    -1,
      -1,    96,    -1,    98,    -1,    -1,   101,    -1,    -1,    -1,
     105,   106,   107,    -1,    -1,   110,    -1,    -1,    -1,    -1,
     115,    -1,    -1,    -1,    -1,    -1,   121,   122,    -1,   124,
      -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,   134,
      -1,    -1,    -1,    -1,    -1,    -1,   141,   142,   143,    -1,
     145,    -1,   147,    -1,   149,   150,    -1,   152,   153,   154,
      -1,    -1,   157,   158,    -1,   160,   161,   162,   163,   164,
      -1,    -1,    -1,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,   178,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   186,    -1,   188,    -1,   190,    -1,   192,   193,   194,
     195,    -1,   197,    -1,   199,    -1,    -1,    -1,    -1,   204,
      -1,    -1,    -1,    -1,    -1,   210,    -1,    -1,    -1,   214,
     215,   216,   217,   218,    -1,   220,   221,   222,    -1,    -1,
     225,    -1,    -1,    -1,    -1,   230,    -1,    -1,    -1,    -1,
     235,    -1,    -1,    -1,   239,   240,    -1,   242,   243,   244,
      -1,    -1,   247,    -1,    -1,    -1,   251,    -1,    -1,   254,
     255,    -1,   257,   258,    -1,    -1,    -1,    -1,    -1,   264,
     265,    -1,   267,    -1,   269,    -1,   271,   272,    -1,    -1,
      -1,    -1,   277,    -1,    -1,   280,    -1,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,    -1,   300,   301,   302,    -1,   304,
     305,   306,   307,    -1,   309,   310,    -1,    -1,    -1,    -1,
     315,   316,   317,   318,   319,   320,    -1,    -1,   323,   324,
      -1,   326,    -1,   328,    -1,   330,   331,   332,   333,   334,
     335,   336,   337,   338,    -1,    -1,   341,   342,    -1,    -1,
     345,   346,   347,   348,    -1,    -1,    -1,    -1,   353,    -1,
      -1,    -1,   357,    -1,   359,   360,   361,    -1,   363,   364,
     365,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   378,   379,    -1,    -1,   382,    -1,   384,
     385,   386,   387,   388,   389,   390,   391,   392,    -1,    -1,
      -1,    -1,   397,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,    -1,   408,   409,   410,    -1,    -1,   413,    -1,
      -1,    -1,   417,   418,   419,   420,   421,    -1,    -1,   424,
     425,   426,   427,   428,    -1,   430,    -1,    -1,   433,    -1,
     435,   436,    -1,   438,    -1,    -1,    -1,   442,    -1,    -1,
     445,   446,   447,   448,   449,    -1,    -1,    -1,   453,   454,
     455,   456,   457,   458,   459,    -1,   461,   462,    -1,   464,
      -1,    -1,    -1,    -1,   469,   470,   471,    -1,    -1,    -1,
      -1,   476,    -1,    -1,    -1,   480,    -1,    -1,   483,    -1,
     485,    -1,   487,    -1,    -1,   490,   491,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   500,   501,    -1,   503,    -1,
      -1,   506,    -1,    -1,   509,    -1,   511,    -1,    -1,    -1,
     515,    -1,   517,   518,   519,   520,   521,   522,    -1,    -1,
     525,   526,   527,   528,    -1,   530,   531,    -1,    -1,   534,
     535,   536,   537,    -1,    -1,   540,   541,    -1,   543,   544,
     545,   546,    -1,    -1,    -1,    -1,    -1,   552,   553,    -1,
      -1,    -1,    -1,   558,   559,   560,    -1,   562,   563,    -1,
     565,   566,    -1,    -1,    -1,    -1,    -1,   572,    -1,    -1,
     575,    -1,    -1,    -1,   579,   580,    -1,    -1,    -1,    -1,
      -1,    -1,   587,    -1,    -1,   590,    -1,    -1,    -1,   594,
     595,   596,   597,   598,   599,    -1,   601,    -1,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,     5,   613,     7,
       8,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,
      -1,    -1,    -1,    -1,    22,    23,    24,    25,    26,    27,
      -1,    -1,    30,    -1,    -1,    -1,    34,    -1,    -1,    -1,
      38,    -1,    -1,    41,    42,    43,    -1,    45,    -1,    -1,
      -1,    -1,    -1,    51,    52,    -1,    54,    55,    -1,    57,
      -1,    -1,    -1,    -1,    62,    63,    64,    65,    66,    67,
      -1,    69,    70,    -1,    72,    -1,    74,    -1,    76,    77,
      78,    79,    -1,    81,    82,    -1,    84,    85,    86,    -1,
      88,    -1,    90,    -1,    -1,    93,    -1,    -1,    96,    -1,
      98,    -1,    -1,   101,    -1,    -1,    -1,   105,   106,   107,
      -1,    -1,   110,    -1,    -1,    -1,    -1,   115,    -1,    -1,
      -1,    -1,    -1,   121,   122,    -1,   124,    -1,    -1,    -1,
     128,    -1,   130,   131,   132,   133,   134,    -1,    -1,    -1,
      -1,    -1,    -1,   141,   142,   143,    -1,    -1,    -1,   147,
      -1,   149,   150,    -1,   152,   153,   154,    -1,    -1,   157,
     158,    -1,   160,   161,   162,   163,   164,    -1,    -1,    -1,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
     178,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   186,    -1,
     188,    -1,   190,    -1,   192,   193,   194,   195,    -1,   197,
      -1,   199,    -1,    -1,    -1,    -1,   204,    -1,    -1,    -1,
      -1,    -1,   210,    -1,    -1,    -1,   214,   215,   216,   217,
     218,    -1,   220,   221,   222,    -1,    -1,   225,    -1,    -1,
      -1,    -1,   230,    -1,    -1,    -1,    -1,   235,    -1,    -1,
      -1,   239,   240,    -1,   242,   243,   244,    -1,    -1,   247,
      -1,    -1,    -1,   251,    -1,    -1,   254,   255,    -1,   257,
     258,    -1,    -1,    -1,    -1,    -1,   264,   265,    -1,   267,
      -1,   269,    -1,   271,   272,    -1,    -1,    -1,    -1,   277,
      -1,    -1,   280,    -1,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,    -1,   300,   301,   302,    -1,   304,   305,   306,   307,
      -1,   309,   310,    -1,    -1,    -1,    -1,   315,   316,   317,
     318,   319,   320,    -1,    -1,   323,   324,    -1,   326,    -1,
     328,    -1,   330,   331,   332,   333,   334,   335,   336,   337,
     338,    -1,    -1,   341,   342,    -1,    -1,   345,   346,   347,
     348,    -1,    -1,    -1,    -1,   353,    -1,    -1,    -1,   357,
      -1,   359,   360,   361,    -1,   363,   364,   365,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     378,   379,    -1,    -1,   382,    -1,   384,   385,   386,   387,
     388,   389,   390,   391,   392,    -1,    -1,    -1,    -1,   397,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,    -1,
     408,   409,   410,    -1,    -1,   413,    -1,    -1,    -1,   417,
     418,   419,   420,   421,    -1,    -1,   424,   425,   426,   427,
     428,    -1,   430,    -1,    -1,   433,    -1,   435,   436,    -1,
     438,    -1,    -1,    -1,   442,    -1,    -1,   445,   446,   447,
     448,   449,    -1,    -1,    -1,   453,   454,   455,   456,   457,
     458,   459,    -1,   461,   462,    -1,   464,    -1,    -1,    -1,
      -1,   469,   470,   471,    -1,    -1,    -1,    -1,   476,    -1,
      -1,    -1,   480,    -1,    -1,   483,    -1,   485,    -1,   487,
      -1,    -1,   490,   491,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   500,   501,    -1,   503,    -1,    -1,   506,    -1,
      -1,   509,    -1,   511,    -1,    -1,    -1,   515,    -1,   517,
     518,   519,   520,   521,   522,    -1,    -1,   525,   526,   527,
     528,    -1,   530,   531,    -1,    -1,   534,   535,   536,   537,
      -1,    -1,   540,   541,    -1,   543,   544,   545,   546,    -1,
      -1,    -1,    -1,    -1,   552,   553,    -1,    -1,    -1,    -1,
     558,   559,   560,    -1,   562,   563,    -1,   565,   566,    -1,
      -1,    -1,    -1,    -1,   572,    -1,    -1,   575,    -1,    -1,
      -1,   579,   580,    -1,    -1,    -1,    -1,    -1,    -1,   587,
      -1,    -1,   590,    -1,    -1,    -1,   594,   595,   596,   597,
     598,    -1,    -1,   601,    -1,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,     5,   613,     7,     8,     9,    10,
      11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,    -1,
      -1,    22,    23,    24,    25,    26,    27,    -1,    -1,    30,
      -1,    -1,    -1,    34,    -1,    -1,    -1,    38,    -1,    -1,
      41,    42,    43,    -1,    45,    -1,    -1,    -1,    -1,    -1,
      51,    52,    -1,    54,    55,    -1,    57,    -1,    -1,    -1,
      -1,    62,    63,    64,    65,    66,    67,    -1,    69,    70,
      -1,    72,    -1,    74,    -1,    76,    77,    78,    79,    -1,
      81,    82,    -1,    84,    85,    86,    -1,    88,    -1,    90,
      -1,    -1,    93,    -1,    -1,    96,    -1,    98,    -1,    -1,
     101,    -1,    -1,    -1,   105,   106,   107,    -1,    -1,   110,
      -1,    -1,    -1,    -1,   115,    -1,    -1,    -1,    -1,    -1,
     121,   122,    -1,   124,    -1,    -1,    -1,   128,    -1,   130,
     131,   132,   133,   134,    -1,    -1,    -1,    -1,    -1,    -1,
     141,   142,   143,    -1,    -1,    -1,   147,    -1,   149,   150,
      -1,   152,   153,   154,    -1,    -1,   157,   158,    -1,   160,
     161,   162,   163,   164,    -1,    -1,    -1,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,   178,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   186,    -1,   188,    -1,   190,
      -1,   192,   193,   194,   195,    -1,   197,    -1,   199,    -1,
      -1,    -1,    -1,   204,    -1,    -1,    -1,    -1,    -1,   210,
      -1,    -1,    -1,   214,   215,   216,   217,   218,    -1,   220,
     221,   222,    -1,    -1,   225,    -1,    -1,    -1,    -1,   230,
      -1,    -1,    -1,    -1,   235,    -1,    -1,    -1,   239,   240,
      -1,   242,   243,   244,    -1,    -1,   247,    -1,    -1,    -1,
     251,    -1,    -1,   254,   255,    -1,   257,   258,    -1,    -1,
      -1,    -1,    -1,   264,   265,    -1,   267,    -1,   269,    -1,
     271,   272,    -1,    -1,    -1,    -1,   277,    -1,    -1,   280,
      -1,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,    -1,   300,
     301,   302,    -1,   304,   305,   306,   307,    -1,   309,   310,
      -1,    -1,    -1,    -1,   315,   316,   317,   318,   319,   320,
      -1,    -1,   323,   324,    -1,   326,    -1,   328,    -1,   330,
     331,   332,   333,   334,   335,   336,   337,   338,    -1,    -1,
     341,   342,    -1,    -1,   345,   346,   347,   348,    -1,    -1,
      -1,    -1,   353,    -1,    -1,    -1,   357,    -1,   359,   360,
     361,    -1,   363,   364,   365,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   378,   379,    -1,
      -1,   382,    -1,   384,   385,   386,   387,   388,   389,   390,
     391,   392,    -1,    -1,    -1,    -1,   397,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,    -1,   408,   409,   410,
      -1,    -1,   413,    -1,    -1,    -1,   417,   418,   419,   420,
     421,    -1,    -1,   424,   425,   426,   427,   428,    -1,   430,
      -1,    -1,   433,    -1,   435,   436,    -1,   438,    -1,    -1,
      -1,   442,    -1,    -1,   445,   446,   447,   448,   449,    -1,
      -1,    -1,   453,   454,   455,   456,   457,   458,   459,    -1,
     461,   462,    -1,   464,    -1,    -1,    -1,    -1,   469,   470,
     471,    -1,    -1,    -1,    -1,   476,    -1,    -1,    -1,   480,
      -1,    -1,   483,    -1,   485,    -1,   487,    -1,    -1,   490,
     491,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   500,
     501,    -1,   503,    -1,    -1,   506,    -1,    -1,   509,    -1,
     511,    -1,    -1,    -1,   515,    -1,   517,   518,   519,   520,
     521,   522,    -1,    -1,   525,   526,   527,   528,    -1,   530,
     531,    -1,    -1,   534,   535,   536,   537,    -1,    -1,   540,
     541,    -1,   543,   544,   545,   546,    -1,    -1,    -1,    -1,
      -1,   552,   553,    -1,    -1,    -1,    -1,   558,   559,   560,
      -1,   562,   563,    -1,   565,   566,    -1,    -1,    -1,    -1,
      -1,   572,    -1,    -1,   575,    -1,    -1,    -1,   579,   580,
      -1,    -1,    -1,    -1,    -1,    -1,   587,    -1,    -1,   590,
      -1,    -1,    -1,   594,   595,   596,   597,   598,    -1,    -1,
     601,    -1,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,     5,   613,     7,     8,     9,    10,    11,    -1,    -1,
      -1,    -1,    -1,    17,    -1,    -1,    -1,    -1,    22,    23,
      24,    25,    26,    27,    -1,    -1,    30,    -1,    -1,    -1,
      34,    -1,    -1,    -1,    38,    -1,    -1,    41,    42,    43,
      -1,    45,    -1,    -1,    -1,    -1,    -1,    51,    52,    -1,
      54,    55,    -1,    57,    -1,    -1,    -1,    -1,    62,    63,
      64,    65,    66,    67,    -1,    69,    70,    -1,    72,    -1,
      74,    -1,    76,    77,    78,    79,    -1,    81,    82,    -1,
      84,    85,    86,    -1,    88,    -1,    90,    -1,    -1,    93,
      -1,    -1,    96,    -1,    98,    -1,    -1,   101,    -1,    -1,
      -1,   105,   106,   107,    -1,    -1,   110,    -1,    -1,    -1,
      -1,   115,    -1,    -1,    -1,    -1,    -1,   121,   122,    -1,
     124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,   133,
     134,    -1,    -1,    -1,    -1,    -1,    -1,   141,   142,   143,
      -1,    -1,    -1,   147,    -1,   149,   150,    -1,   152,   153,
     154,    -1,    -1,   157,   158,    -1,   160,   161,   162,   163,
     164,    -1,    -1,    -1,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,   178,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   186,    -1,   188,    -1,   190,    -1,   192,   193,
     194,   195,    -1,   197,    -1,   199,    -1,    -1,    -1,    -1,
     204,    -1,    -1,    -1,    -1,    -1,   210,    -1,    -1,    -1,
     214,   215,   216,   217,   218,    -1,   220,   221,   222,    -1,
      -1,   225,    -1,    -1,    -1,    -1,   230,    -1,    -1,    -1,
      -1,   235,    -1,    -1,    -1,   239,   240,    -1,   242,   243,
     244,    -1,    -1,   247,    -1,    -1,    -1,   251,    -1,    -1,
     254,   255,    -1,   257,   258,    -1,    -1,    -1,    -1,    -1,
     264,   265,    -1,   267,    -1,   269,    -1,   271,   272,    -1,
      -1,    -1,    -1,   277,    -1,    -1,   280,    -1,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,    -1,   300,   301,   302,    -1,
     304,   305,   306,   307,    -1,   309,   310,    -1,    -1,    -1,
      -1,   315,   316,   317,   318,   319,   320,    -1,    -1,   323,
     324,    -1,   326,    -1,   328,    -1,   330,   331,   332,   333,
     334,   335,   336,   337,   338,    -1,    -1,   341,   342,    -1,
      -1,   345,   346,   347,   348,    -1,    -1,    -1,    -1,   353,
      -1,    -1,    -1,   357,    -1,   359,   360,   361,    -1,   363,
     364,   365,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   378,   379,    -1,    -1,   382,    -1,
     384,   385,   386,   387,   388,   389,   390,   391,   392,    -1,
      -1,    -1,    -1,   397,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,    -1,   408,   409,   410,    -1,    -1,   413,
      -1,    -1,    -1,   417,   418,   419,   420,   421,    -1,    -1,
     424,   425,   426,   427,   428,    -1,   430,    -1,    -1,   433,
      -1,   435,   436,    -1,   438,    -1,    -1,    -1,   442,    -1,
      -1,   445,   446,   447,   448,   449,    -1,    -1,    -1,   453,
     454,   455,   456,   457,   458,   459,    -1,   461,   462,    -1,
     464,    -1,    -1,    -1,    -1,   469,   470,   471,    -1,    -1,
      -1,    -1,   476,    -1,    -1,    -1,   480,    -1,    -1,   483,
      -1,   485,    -1,   487,    -1,    -1,   490,   491,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   500,   501,    -1,   503,
      -1,    -1,   506,    -1,    -1,   509,    -1,   511,    -1,    -1,
      -1,   515,    -1,   517,   518,   519,   520,   521,   522,    -1,
      -1,   525,   526,   527,   528,    -1,   530,   531,    -1,    -1,
     534,   535,   536,   537,    -1,    -1,   540,   541,    -1,   543,
     544,   545,   546,    -1,    -1,    -1,    -1,    -1,   552,   553,
      -1,    -1,    -1,    -1,   558,   559,   560,    -1,   562,   563,
      -1,   565,   566,    -1,    -1,    -1,    -1,    -1,   572,    -1,
      -1,   575,    -1,    -1,    -1,   579,   580,    -1,    -1,    -1,
      -1,    -1,    -1,   587,    -1,    -1,   590,    -1,    -1,    -1,
     594,   595,   596,   597,   598,    -1,    -1,   601,    -1,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,     5,   613,
       7,     8,     9,    10,    11,    -1,    -1,    -1,    -1,    -1,
      17,    -1,    -1,    -1,    -1,    22,    23,    24,    25,    26,
      27,    -1,    -1,    30,    -1,    -1,    -1,    34,    -1,    -1,
      -1,    38,    -1,    -1,    41,    42,    43,    -1,    45,    -1,
      -1,    -1,    -1,    -1,    51,    52,    -1,    54,    55,    -1,
      57,    -1,    -1,    -1,    -1,    62,    63,    64,    65,    66,
      67,    -1,    69,    70,    -1,    72,    -1,    74,    -1,    76,
      77,    78,    79,    -1,    81,    82,    -1,    84,    85,    86,
      -1,    88,    -1,    90,    -1,    -1,    93,    -1,    -1,    96,
      -1,    98,    -1,    -1,   101,    -1,    -1,    -1,   105,   106,
     107,    -1,    -1,   110,    -1,    -1,    -1,    -1,   115,    -1,
      -1,    -1,    -1,    -1,   121,   122,    -1,   124,    -1,    -1,
      -1,   128,    -1,   130,   131,   132,   133,   134,    -1,    -1,
      -1,    -1,    -1,    -1,   141,   142,   143,    -1,    -1,    -1,
     147,    -1,   149,   150,    -1,   152,   153,   154,    -1,    -1,
     157,   158,    -1,   160,   161,   162,   163,   164,    -1,    -1,
      -1,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,   178,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   186,
      -1,   188,    -1,   190,    -1,   192,   193,   194,   195,    -1,
     197,    -1,   199,    -1,    -1,    -1,    -1,   204,    -1,    -1,
      -1,    -1,    -1,   210,    -1,    -1,    -1,   214,   215,   216,
     217,   218,    -1,   220,   221,   222,    -1,    -1,   225,    -1,
      -1,    -1,    -1,   230,    -1,    -1,    -1,    -1,   235,    -1,
      -1,    -1,   239,   240,    -1,   242,   243,   244,    -1,    -1,
     247,    -1,    -1,    -1,   251,    -1,    -1,   254,   255,    -1,
     257,   258,    -1,    -1,    -1,    -1,    -1,   264,   265,    -1,
     267,    -1,   269,    -1,   271,   272,    -1,    -1,    -1,    -1,
     277,    -1,    -1,   280,    -1,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,    -1,   300,   301,   302,    -1,   304,   305,   306,
     307,    -1,   309,   310,    -1,    -1,    -1,    -1,   315,   316,
     317,   318,   319,   320,    -1,    -1,   323,   324,    -1,   326,
      -1,   328,    -1,   330,   331,   332,   333,   334,   335,   336,
     337,   338,    -1,    -1,   341,   342,    -1,    -1,   345,   346,
     347,   348,    -1,    -1,    -1,    -1,   353,    -1,    -1,    -1,
     357,    -1,   359,   360,   361,    -1,   363,   364,   365,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   378,   379,    -1,    -1,   382,    -1,   384,   385,   386,
     387,   388,   389,   390,   391,   392,    -1,    -1,    -1,    -1,
     397,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
      -1,   408,   409,   410,    -1,    -1,   413,    -1,    -1,    -1,
     417,   418,   419,   420,   421,    -1,    -1,   424,   425,   426,
     427,   428,    -1,   430,    -1,    -1,   433,    -1,   435,   436,
      -1,   438,    -1,    -1,    -1,   442,    -1,    -1,   445,   446,
     447,   448,   449,    -1,    -1,    -1,   453,   454,   455,   456,
     457,   458,   459,    -1,   461,   462,    -1,   464,    -1,    -1,
      -1,    -1,   469,   470,   471,    -1,    -1,    -1,    -1,   476,
      -1,    -1,    -1,   480,    -1,    -1,   483,    -1,   485,    -1,
     487,    -1,    -1,   490,   491,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   500,   501,    -1,   503,    -1,    -1,   506,
      -1,    -1,   509,    -1,   511,    -1,    -1,    -1,   515,    -1,
     517,   518,   519,   520,   521,   522,    -1,    -1,   525,   526,
     527,   528,    -1,   530,   531,    -1,    -1,   534,   535,   536,
     537,    -1,    -1,   540,   541,    -1,   543,   544,   545,   546,
      -1,    -1,    -1,    -1,    -1,   552,   553,    -1,    -1,    -1,
      -1,   558,   559,   560,    -1,   562,   563,    -1,   565,   566,
      -1,    -1,    -1,    -1,    -1,   572,    -1,    -1,   575,    -1,
      -1,    -1,   579,   580,    -1,    -1,    -1,    -1,    -1,    -1,
     587,    -1,    -1,   590,    -1,    -1,    -1,   594,   595,   596,
     597,   598,    -1,    -1,   601,    -1,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,     5,   613,     7,     8,     9,
      10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,    -1,
      -1,    -1,    22,    23,    24,    25,    26,    27,    -1,    -1,
      30,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,    -1,
      -1,    41,    42,    43,    -1,    45,    -1,    -1,    -1,    -1,
      -1,    51,    52,    -1,    54,    55,    -1,    57,    -1,    -1,
      -1,    -1,    62,    63,    64,    65,    66,    67,    -1,    69,
      70,    -1,    72,    -1,    74,    -1,    76,    77,    78,    79,
      -1,    81,    82,    -1,    84,    85,    86,    -1,    88,    -1,
      90,    -1,    -1,    93,    -1,    -1,    96,    -1,    98,    -1,
      -1,   101,    -1,    -1,    -1,   105,   106,   107,    -1,    -1,
     110,    -1,    -1,    -1,    -1,   115,    -1,    -1,    -1,    -1,
      -1,   121,   122,    -1,   124,    -1,    -1,    -1,   128,    -1,
     130,   131,   132,   133,   134,    -1,    -1,    -1,    -1,    -1,
      -1,   141,   142,   143,    -1,    -1,    -1,   147,    -1,   149,
     150,    -1,   152,   153,   154,    -1,    -1,   157,   158,    -1,
     160,   161,   162,   163,   164,    -1,    -1,    -1,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,   178,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   186,    -1,   188,    -1,
     190,    -1,   192,   193,   194,   195,    -1,   197,    -1,   199,
      -1,    -1,    -1,    -1,   204,    -1,    -1,    -1,    -1,    -1,
     210,    -1,    -1,    -1,   214,   215,   216,   217,   218,    -1,
     220,   221,   222,    -1,    -1,   225,    -1,    -1,    -1,    -1,
     230,    -1,    -1,    -1,    -1,   235,    -1,    -1,    -1,   239,
     240,    -1,   242,   243,   244,    -1,    -1,   247,    -1,    -1,
      -1,   251,    -1,    -1,   254,   255,    -1,   257,   258,    -1,
      -1,    -1,    -1,    -1,   264,   265,    -1,   267,    -1,   269,
      -1,   271,   272,    -1,    -1,    -1,    -1,   277,    -1,    -1,
     280,    -1,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,    -1,
     300,   301,   302,    -1,   304,   305,   306,   307,    -1,   309,
     310,    -1,    -1,    -1,    -1,   315,   316,   317,   318,   319,
     320,    -1,    -1,   323,   324,    -1,   326,    -1,   328,    -1,
     330,   331,   332,   333,   334,   335,   336,   337,   338,    -1,
      -1,   341,   342,    -1,    -1,   345,   346,   347,   348,    -1,
      -1,    -1,    -1,   353,    -1,    -1,    -1,   357,    -1,   359,
     360,   361,    -1,   363,   364,   365,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   378,   379,
      -1,    -1,   382,    -1,   384,   385,   386,   387,   388,   389,
     390,   391,   392,    -1,    -1,    -1,    -1,   397,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,    -1,   408,   409,
     410,    -1,    -1,   413,    -1,    -1,    -1,   417,   418,   419,
     420,   421,    -1,    -1,   424,   425,   426,   427,   428,    -1,
     430,    -1,    -1,   433,    -1,   435,   436,    -1,   438,    -1,
      -1,    -1,   442,    -1,    -1,   445,   446,   447,   448,   449,
      -1,    -1,    -1,   453,   454,   455,   456,   457,   458,   459,
      -1,   461,   462,    -1,   464,    -1,    -1,    -1,    -1,   469,
     470,   471,    -1,    -1,    -1,    -1,   476,    -1,    -1,    -1,
     480,    -1,    -1,   483,    -1,   485,    -1,   487,    -1,    -1,
     490,   491,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     500,   501,    -1,   503,    -1,    -1,   506,    -1,    -1,   509,
      -1,   511,    -1,    -1,    -1,   515,    -1,   517,   518,   519,
     520,   521,   522,    -1,    -1,   525,   526,   527,   528,    -1,
     530,   531,    -1,    -1,   534,   535,   536,   537,    -1,    -1,
     540,   541,    -1,   543,   544,   545,   546,    -1,    -1,    -1,
      -1,    -1,   552,   553,    -1,    -1,    -1,    -1,   558,   559,
     560,    -1,   562,   563,    -1,   565,   566,    -1,    -1,    -1,
      -1,    -1,   572,    -1,    -1,   575,    -1,    -1,    -1,   579,
     580,    -1,    -1,    -1,    -1,    -1,    -1,   587,    -1,    -1,
     590,    -1,    -1,    -1,   594,   595,   596,   597,   598,    -1,
      -1,   601,    -1,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,     5,   613,     7,     8,     9,    10,    11,    -1,
      -1,    -1,    -1,    -1,    17,    -1,    -1,    -1,    -1,    22,
      23,    24,    25,    26,    27,    -1,    -1,    30,    -1,    -1,
      -1,    34,    -1,    -1,    -1,    38,    -1,    -1,    41,    42,
      43,    -1,    45,    -1,    -1,    -1,    -1,    -1,    51,    52,
      -1,    54,    55,    -1,    57,    -1,    -1,    -1,    -1,    62,
      63,    64,    65,    66,    67,    -1,    69,    70,    -1,    72,
      -1,    74,    -1,    76,    77,    78,    79,    -1,    81,    82,
      -1,    84,    85,    86,    -1,    88,    -1,    90,    -1,    -1,
      93,    -1,    -1,    96,    -1,    98,    -1,    -1,   101,    -1,
      -1,    -1,   105,   106,   107,    -1,    -1,   110,    -1,    -1,
      -1,    -1,   115,    -1,    -1,    -1,    -1,    -1,   121,   122,
      -1,   124,    -1,    -1,    -1,   128,    -1,   130,   131,   132,
     133,   134,    -1,    -1,    -1,    -1,    -1,    -1,   141,   142,
     143,    -1,    -1,    -1,   147,    -1,    -1,   150,    -1,   152,
     153,   154,    -1,    -1,   157,   158,    -1,   160,   161,   162,
     163,   164,    -1,    -1,    -1,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,   178,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   186,    -1,   188,    -1,   190,    -1,   192,
     193,   194,   195,    -1,   197,    -1,   199,    -1,    -1,    -1,
      -1,   204,    -1,    -1,    -1,    -1,    -1,   210,    -1,    -1,
      -1,   214,   215,   216,   217,   218,    -1,   220,   221,   222,
      -1,    -1,   225,    -1,    -1,    -1,    -1,   230,    -1,    -1,
      -1,    -1,   235,    -1,    -1,    -1,   239,   240,    -1,   242,
     243,   244,    -1,    -1,   247,    -1,    -1,    -1,   251,    -1,
      -1,   254,   255,    -1,   257,   258,    -1,    -1,    -1,    -1,
      -1,   264,   265,    -1,   267,    -1,   269,    -1,   271,   272,
      -1,    -1,    -1,    -1,   277,    -1,    -1,   280,    -1,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,    -1,   300,   301,   302,
      -1,   304,   305,   306,   307,    -1,   309,   310,    -1,    -1,
      -1,    -1,   315,   316,   317,   318,   319,   320,    -1,    -1,
     323,   324,    -1,   326,    -1,   328,    -1,   330,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,    -1,   341,   342,
      -1,    -1,   345,   346,   347,   348,    -1,    -1,    -1,    -1,
     353,    -1,    -1,    -1,   357,    -1,   359,   360,   361,    -1,
     363,   364,   365,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   378,   379,    -1,    -1,   382,
      -1,   384,   385,   386,   387,   388,   389,   390,   391,   392,
      -1,    -1,    -1,    -1,   397,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,    -1,   408,   409,   410,    -1,    -1,
     413,    -1,    -1,    -1,   417,   418,   419,   420,   421,    -1,
      -1,   424,   425,   426,   427,   428,    -1,   430,    -1,    -1,
     433,    -1,   435,   436,    -1,   438,    -1,    -1,    -1,   442,
      -1,    -1,   445,   446,   447,   448,   449,    -1,    -1,    -1,
     453,   454,   455,   456,   457,   458,   459,    -1,   461,   462,
      -1,   464,    -1,    -1,    -1,    -1,   469,   470,   471,    -1,
      -1,    -1,    -1,   476,    -1,    -1,    -1,   480,    -1,    -1,
     483,    -1,   485,    -1,   487,    -1,    -1,   490,   491,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   500,   501,    -1,
     503,    -1,    -1,   506,    -1,    -1,   509,    -1,   511,    -1,
      -1,    -1,   515,    -1,   517,   518,   519,   520,   521,   522,
      -1,    -1,   525,   526,   527,   528,    -1,   530,   531,    -1,
      -1,   534,   535,   536,   537,    -1,    -1,   540,   541,    -1,
     543,   544,   545,   546,    -1,    -1,    -1,    -1,    -1,   552,
     553,    -1,    -1,    -1,    -1,   558,   559,   560,    -1,   562,
     563,    -1,   565,   566,    -1,    -1,    -1,    -1,    -1,   572,
      -1,    -1,   575,    -1,    -1,    -1,   579,   580,    -1,    -1,
      -1,    -1,    -1,    -1,   587,    -1,    -1,   590,    -1,    -1,
      -1,   594,   595,   596,   597,   598,    -1,    -1,   601,    -1,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,     5,
     613,     7,     8,     9,    10,    11,    -1,    -1,    -1,    -1,
      -1,    17,    -1,    -1,    -1,    -1,    22,    23,    24,    25,
      26,    27,    -1,    -1,    30,    -1,    -1,    -1,    34,    -1,
      -1,    -1,    38,    -1,    -1,    41,    42,    43,    -1,    45,
      -1,    -1,    -1,    -1,    -1,    51,    52,    -1,    54,    55,
      -1,    57,    -1,    -1,    -1,    -1,    62,    63,    64,    65,
      66,    67,    -1,    69,    70,    -1,    72,    -1,    74,    -1,
      76,    77,    78,    79,    -1,    81,    82,    -1,    84,    85,
      86,    -1,    88,    -1,    90,    -1,    -1,    93,    -1,    -1,
      96,    -1,    98,    -1,    -1,   101,    -1,    -1,    -1,   105,
     106,   107,    -1,    -1,   110,    -1,    -1,    -1,    -1,   115,
      -1,    -1,    -1,    -1,    -1,   121,   122,    -1,   124,    -1,
      -1,    -1,   128,    -1,   130,   131,   132,   133,   134,    -1,
      -1,    -1,    -1,    -1,    -1,   141,   142,   143,    -1,    -1,
      -1,   147,    -1,    -1,   150,    -1,   152,   153,   154,    -1,
      -1,   157,   158,    -1,   160,   161,   162,   163,   164,    -1,
      -1,    -1,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,   178,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     186,    -1,   188,    -1,   190,    -1,   192,   193,   194,   195,
      -1,   197,    -1,   199,    -1,    -1,    -1,    -1,   204,    -1,
      -1,    -1,    -1,    -1,   210,    -1,    -1,    -1,   214,   215,
     216,   217,   218,    -1,   220,   221,   222,    -1,    -1,   225,
      -1,    -1,    -1,    -1,   230,    -1,    -1,    -1,    -1,   235,
      -1,    -1,    -1,   239,   240,    -1,   242,   243,   244,    -1,
      -1,   247,    -1,    -1,    -1,   251,    -1,    -1,   254,   255,
      -1,   257,   258,    -1,    -1,    -1,    -1,    -1,   264,   265,
      -1,   267,    -1,   269,    -1,   271,   272,    -1,    -1,    -1,
      -1,   277,    -1,    -1,   280,    -1,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,    -1,   300,   301,   302,    -1,   304,   305,
     306,   307,    -1,   309,   310,    -1,    -1,    -1,    -1,   315,
     316,   317,   318,   319,   320,    -1,    -1,   323,   324,    -1,
     326,    -1,   328,    -1,   330,   331,   332,   333,   334,   335,
     336,   337,   338,    -1,    -1,   341,   342,    -1,    -1,   345,
     346,   347,   348,    -1,    -1,    -1,    -1,   353,    -1,    -1,
      -1,   357,    -1,   359,   360,   361,    -1,   363,   364,   365,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   378,   379,    -1,    -1,   382,    -1,   384,   385,
     386,   387,   388,   389,   390,   391,   392,    -1,    -1,    -1,
      -1,   397,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,    -1,   408,   409,   410,    -1,    -1,   413,    -1,    -1,
      -1,   417,   418,   419,   420,   421,    -1,    -1,   424,   425,
     426,   427,   428,    -1,   430,    -1,    -1,   433,    -1,   435,
     436,    -1,   438,    -1,    -1,    -1,   442,    -1,    -1,   445,
     446,   447,   448,   449,    -1,    -1,    -1,   453,   454,   455,
     456,   457,   458,   459,    -1,   461,   462,    -1,   464,    -1,
      -1,    -1,    -1,   469,   470,   471,    -1,    -1,    -1,    -1,
     476,    -1,    -1,    -1,   480,    -1,    -1,   483,    -1,   485,
      -1,   487,    -1,    -1,   490,   491,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   500,   501,    -1,   503,    -1,    -1,
     506,    -1,    -1,   509,    -1,   511,    -1,    -1,    -1,   515,
      -1,   517,   518,   519,   520,   521,   522,    -1,    -1,   525,
     526,   527,   528,    -1,   530,   531,    -1,    -1,   534,   535,
     536,   537,    -1,    -1,   540,   541,    -1,   543,   544,   545,
     546,    -1,    -1,    -1,    -1,    -1,   552,   553,    -1,    -1,
      -1,    -1,   558,   559,   560,    -1,   562,   563,    -1,   565,
     566,    -1,    -1,    -1,    -1,    -1,   572,    -1,    -1,   575,
      -1,    -1,    -1,   579,   580,    -1,    -1,    -1,    -1,    -1,
      -1,   587,    -1,    -1,   590,    -1,    -1,    -1,   594,   595,
     596,   597,   598,    -1,    -1,   601,    -1,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,     5,   613,     7,     8,
       9,    10,    11,    -1,    -1,    -1,    -1,    -1,    17,    -1,
      -1,    -1,    -1,    22,    23,    24,    25,    26,    27,    -1,
      -1,    -1,    -1,    -1,    -1,    34,    -1,    -1,    -1,    38,
      -1,    -1,    41,    42,    43,    -1,    45,    -1,    -1,    -1,
      -1,    -1,    51,    -1,    -1,    54,    55,    -1,    57,    -1,
      -1,    -1,    -1,    62,    63,    64,    -1,    66,    67,    -1,
      69,    70,    -1,    72,    -1,    74,    -1,    76,    77,    78,
      79,    -1,    81,    82,    -1,    84,    85,    86,    -1,    88,
      -1,    90,    -1,    -1,    93,    -1,    -1,    96,    -1,    98,
      -1,    -1,   101,    -1,    -1,    -1,   105,   106,   107,    -1,
      -1,   110,    -1,    -1,    -1,    -1,   115,    -1,    -1,    -1,
      -1,    -1,   121,   122,    -1,   124,    -1,    -1,    -1,   128,
      -1,   130,   131,   132,   133,   134,    -1,    -1,    -1,    -1,
      -1,    -1,   141,   142,   143,    -1,    -1,    -1,   147,    -1,
      -1,   150,    -1,   152,   153,   154,    -1,    -1,   157,   158,
      -1,   160,   161,   162,   163,   164,    -1,    -1,    -1,   168,
     169,   170,    -1,    -1,   173,   174,    -1,   176,   177,   178,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   186,    -1,   188,
      -1,   190,    -1,   192,   193,   194,   195,    -1,   197,    -1,
     199,    -1,    -1,    -1,    -1,   204,    -1,    -1,    -1,    -1,
      -1,   210,    -1,    -1,    -1,   214,   215,   216,   217,    -1,
      -1,   220,   221,   222,    -1,    -1,   225,    -1,    -1,    -1,
      -1,   230,    -1,    -1,    -1,    -1,   235,    -1,    -1,    -1,
     239,   240,    -1,   242,   243,    -1,    -1,    -1,   247,    -1,
      -1,    -1,   251,    -1,    -1,   254,    -1,    -1,   257,   258,
      -1,    -1,    -1,    -1,    -1,   264,   265,    -1,   267,    -1,
     269,    -1,   271,   272,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   280,    -1,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
      -1,   300,   301,   302,    -1,   304,   305,   306,   307,    -1,
     309,   310,    -1,    -1,    -1,    -1,   315,   316,   317,   318,
     319,   320,    -1,    -1,   323,   324,    -1,   326,    -1,   328,
      -1,   330,   331,   332,   333,   334,   335,   336,   337,   338,
      -1,    -1,   341,   342,    -1,    -1,   345,   346,   347,   348,
      -1,    -1,    -1,    -1,   353,    -1,    -1,    -1,   357,    -1,
     359,   360,   361,    -1,   363,   364,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   378,
     379,    -1,    -1,   382,    -1,   384,   385,   386,   387,   388,
     389,   390,   391,   392,    -1,    -1,    -1,    -1,   397,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,    -1,   408,
     409,   410,    -1,    -1,   413,    -1,    -1,    -1,   417,   418,
     419,   420,   421,    -1,    -1,   424,   425,   426,   427,   428,
      -1,   430,    -1,    -1,   433,    -1,   435,    -1,    -1,   438,
      -1,    -1,    -1,   442,    -1,    -1,   445,   446,   447,    -1,
     449,    -1,    -1,    -1,   453,   454,   455,   456,   457,   458,
     459,    -1,   461,   462,    -1,   464,    -1,    -1,    -1,    -1,
     469,   470,   471,    -1,    -1,    -1,    -1,   476,    -1,    -1,
      -1,   480,    -1,    -1,   483,    -1,   485,    -1,   487,    -1,
      -1,   490,   491,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   500,   501,    -1,   503,    -1,    -1,   506,    -1,    -1,
     509,    -1,   511,    -1,    -1,    -1,   515,    -1,   517,   518,
     519,   520,   521,   522,    -1,    -1,   525,   526,   527,   528,
      -1,   530,   531,    -1,    -1,   534,   535,   536,   537,    -1,
      -1,   540,   541,    -1,   543,   544,   545,   546,    -1,    -1,
      -1,    -1,    -1,   552,   553,    -1,    -1,    -1,    -1,   558,
     559,   560,    -1,   562,   563,    -1,   565,   566,    -1,    -1,
      -1,    -1,    -1,   572,    -1,    -1,   575,    -1,    -1,    -1,
     579,   580,    -1,    -1,    -1,    -1,    -1,    -1,   587,    -1,
      -1,   590,    -1,    -1,    -1,   594,   595,   596,   597,   598,
      -1,    -1,    -1,    -1,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,    -1,   613
};

/* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
   symbol of state STATE-NUM.  */
static const yytype_uint16 yystos[] =
{
       0,    13,    14,    30,    34,    48,    49,    56,    60,    61,
      75,    94,   116,   125,   126,   127,   138,   139,   151,   165,
     181,   196,   198,   203,   206,   229,   231,   249,   266,   270,
     366,   383,   396,   407,   429,   432,   434,   437,   440,   441,
     450,   452,   460,   466,   474,   479,   481,   510,   514,   557,
     569,   573,   576,   581,   609,   624,   635,   638,   639,   640,
     641,   642,   644,   649,   651,   658,   688,   716,   723,   724,
     841,  1005,  1043,  1046,  1061,  1064,  1069,  1071,  1072,  1077,
    1080,  1085,  1092,  1104,  1105,  1262,  1264,  1278,  1281,  1306,
    1314,  1325,  1332,  1346,  1350,  1353,  1362,  1368,  1372,  1374,
    1375,  1427,  1454,  1460,  1462,  1469,  1471,  1497,  1503,  1504,
    1505,  1506,  1559,  1567,  1568,    11,   103,   122,   190,   219,
     271,   401,   472,   531,  1039,  1528,  1529,  1530,  1533,   267,
     354,  1079,  1498,   539,  1418,   223,     5,     7,     8,     9,
      10,    11,    17,    20,    22,    23,    24,    25,    26,    27,
      28,    30,    34,    38,    41,    42,    43,    45,    47,    48,
      51,    54,    55,    57,    58,    60,    62,    63,    64,    65,
      66,    67,    69,    70,    72,    73,    74,    75,    76,    77,
      78,    79,    81,    82,    84,    85,    86,    87,    88,    90,
      93,    96,    98,   101,   105,   106,   107,   110,   115,   116,
     121,   122,   124,   128,   130,   131,   132,   133,   134,   138,
     141,   142,   143,   147,   149,   150,   152,   153,   154,   157,
     158,   160,   161,   162,   163,   164,   165,   168,   169,   170,
     173,   174,   176,   177,   178,   181,   185,   186,   188,   190,
     192,   193,   194,   195,   197,   199,   203,   204,   206,   209,
     210,   214,   215,   216,   217,   220,   221,   222,   225,   230,
     231,   235,   239,   240,   242,   243,   247,   250,   251,   254,
     257,   258,   264,   265,   267,   269,   271,   272,   280,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   300,   301,   302,   304,
     305,   306,   307,   309,   310,   315,   316,   317,   318,   319,
     320,   323,   324,   326,   328,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   341,   342,   345,   346,   347,   348,
     352,   353,   357,   359,   360,   361,   363,   364,   365,   367,
     377,   378,   379,   381,   382,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   396,   397,   398,   400,   402,
     403,   404,   405,   406,   408,   409,   410,   413,   417,   418,
     419,   420,   421,   424,   425,   426,   427,   428,   430,   431,
     433,   434,   435,   438,   440,   442,   443,   445,   446,   447,
     449,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   464,   465,   469,   470,   471,   472,   476,   480,
     482,   483,   484,   485,   487,   488,   489,   490,   491,   500,
     501,   503,   506,   509,   510,   511,   514,   515,   517,   518,
     519,   520,   521,   522,   525,   526,   527,   528,   530,   531,
     534,   535,   536,   537,   540,   541,   543,   544,   545,   546,
     552,   553,   557,   558,   559,   560,   562,   563,   565,   566,
     568,   569,   572,   575,   577,   579,   580,   587,   590,   594,
     595,   596,   597,   598,   605,   606,   608,   609,   610,   613,
     682,  1416,  1421,  1425,  1426,   300,   530,   533,  1456,  1456,
     605,  1499,   103,   189,   271,   472,   492,   531,   536,   571,
     579,   664,   665,   892,   893,   894,   983,   984,   985,  1315,
    1263,   103,   162,   190,   223,   271,   401,   472,   531,   536,
     554,   579,   594,  1274,  1421,  1079,    98,   725,   681,   632,
    1413,  1415,  1421,   650,  1279,   389,    81,   409,  1373,   106,
     223,   610,  1380,  1456,  1079,   842,  1421,  1369,   460,   579,
    1456,  1079,  1282,  1363,   495,   713,   717,   718,  1421,   681,
    1499,  1421,  1108,  1110,  1111,  1428,  1333,   717,   484,   552,
     484,   533,  1327,   389,  1461,  1307,  1421,    30,    75,   149,
     396,   418,   452,   510,  1561,   466,   624,  1106,     0,   151,
     636,   396,   169,   185,   384,  1351,  1413,  1421,   155,  1016,
    1421,   155,   682,   200,   682,   259,  1418,  1421,  1423,   789,
     790,   793,   816,  1421,   533,   162,  1011,  1528,  1456,  1499,
    1086,   689,   632,   550,  1062,  1073,    16,  1500,   218,   895,
     200,  1423,   791,   816,   681,   373,  1525,  1529,  1530,  1531,
    1532,  1533,   533,   893,   223,   223,   223,   219,   278,   410,
    1323,  1324,     7,    20,    27,    33,    35,    36,    37,    39,
      52,    53,    58,    59,    66,    69,    87,    91,    92,    97,
      99,   102,   103,   108,   109,   110,   115,   117,   120,   166,
     171,   172,   179,   185,   193,   195,   201,   207,   214,   218,
     229,   232,   256,   264,   275,   303,   308,   319,   323,   325,
     329,   330,   331,   332,   333,   340,   349,   350,   351,   355,
     356,   361,   380,   386,   391,   392,   394,   408,   436,   437,
     449,   451,   457,   458,   464,   512,   513,   519,   523,   524,
     529,   539,   543,   544,   545,   546,   555,   556,   557,   561,
     564,   579,   583,   584,   585,   586,   591,   593,   597,   598,
     613,   617,   618,   623,   624,   627,   628,   631,   632,   944,
    1125,  1126,  1127,  1128,  1132,  1135,  1136,  1137,  1138,  1139,
    1140,  1148,  1152,  1162,  1399,  1401,  1403,  1404,  1405,  1409,
    1411,  1416,  1421,   218,  1273,  1273,  1273,  1421,   200,  1273,
    1273,   816,  1273,   681,  1273,  1456,   645,  1354,   130,    12,
      13,    94,   125,   139,   162,   165,   176,   198,   223,   229,
     270,   402,   406,   422,   430,   438,   466,   479,   480,   525,
     554,   576,   578,  1472,  1474,  1476,  1477,  1421,   365,    65,
     414,   632,  1423,   123,   208,   278,  1284,  1421,  1125,   233,
    1376,  1455,  1456,    46,   843,   187,    33,   300,  1338,  1370,
    1421,   681,  1081,  1456,   123,   278,  1285,  1313,   300,   409,
     484,  1364,  1365,   587,   714,   474,   719,    12,   406,  1470,
    1474,   550,  1500,  1109,    12,   135,   208,   499,   500,   501,
     502,   503,   504,   516,  1115,  1116,  1117,  1524,    58,    59,
     120,   197,   267,   336,   386,   471,   552,   631,   946,  1421,
    1429,  1441,  1445,  1446,    23,    34,    58,    69,    90,    92,
      94,   104,   153,   158,   161,   188,   190,   197,   199,   222,
     223,   246,   267,   300,   365,   390,   400,   401,   404,   405,
     425,   471,   484,   515,   533,   596,   946,   982,  1334,  1338,
    1339,  1341,  1442,   719,  1055,  1056,   414,   602,  1047,  1048,
    1049,  1055,  1326,  1421,  1456,  1313,    35,   207,   539,  1400,
    1419,  1560,  1560,  1560,  1560,  1560,  1110,  1106,   625,   630,
    1421,   155,  1348,  1347,   317,   537,   563,  1007,   577,    99,
    1423,  1424,  1009,   795,   817,  1421,  1008,   367,     6,    56,
     139,   350,   413,   415,   818,  1413,   682,   505,  1534,  1535,
    1010,  1070,  1087,  1088,  1089,  1090,  1413,   624,   690,  1421,
     652,  1268,  1269,  1413,  1268,    55,   352,   352,   429,  1501,
     349,   350,  1131,  1421,   794,   817,   183,     6,  1424,  1487,
    1488,   437,    10,   401,   554,   668,  1121,  1527,  1535,  1543,
    1547,  1548,  1554,   668,  1121,  1526,  1535,  1543,  1548,  1554,
    1528,  1533,   895,  1421,  1421,  1421,   187,  1316,  1320,  1321,
    1421,  1323,   624,   624,   624,  1135,   624,   624,   624,  1125,
    1165,   624,   624,   624,   624,   624,   624,   624,   624,   624,
    1124,  1124,   624,   933,   624,   624,   624,   539,   624,   624,
     624,   624,   624,   624,   624,   624,   624,   624,   624,   624,
     624,  1125,   624,   624,   624,  1163,  1164,  1409,  1421,   624,
     624,   624,   624,   624,   624,   624,   624,   624,  1125,   933,
     624,   624,   624,   624,   624,   624,   624,   624,   624,   624,
     624,   624,   624,   624,   624,   624,   624,   624,   933,   539,
     624,   624,   624,   539,   624,   624,   624,    35,   207,   539,
     624,  1124,   933,   933,   624,   624,   624,   624,   624,   624,
    1135,  1135,  1135,  1125,  1519,  1520,  1421,  1153,  1421,    15,
      16,   370,   373,   611,  1129,  1130,   155,   156,   191,   202,
     241,   252,   279,   343,  1133,    31,   136,   236,   260,   329,
     423,   477,   478,   490,   615,   616,   617,   618,   619,   620,
     621,   622,  1131,  1135,    68,   372,   626,  1419,   624,   632,
     166,  1421,   682,  1421,   362,   817,   682,  1423,   353,   595,
     827,   828,  1275,  1276,  1277,  1339,   682,  1424,  1486,  1267,
    1273,   582,   646,    33,   128,   153,   157,   192,   210,   272,
     400,   409,   424,   442,   485,   511,  1355,  1359,  1360,  1456,
      80,   631,   726,   727,   728,   729,  1421,   400,  1475,   454,
     454,   531,   536,   579,   594,   368,  1479,   530,   362,  1481,
      64,   484,  1478,   104,   594,  1480,   362,   626,    18,   155,
    1217,  1218,  1463,  1421,  1039,   489,    48,    79,   278,  1382,
    1413,  1457,  1458,  1078,   262,   265,   411,   844,   846,   631,
     643,  1418,   272,  1082,  1424,  1083,  1084,  1413,  1065,   233,
    1270,  1286,  1287,  1413,    48,  1366,   626,  1419,    54,    63,
      72,    84,    85,    86,   101,   318,   335,   462,   518,   535,
     720,   722,  1475,   362,   362,   460,  1502,  1501,   570,  1507,
    1508,   619,  1119,  1120,  1121,  1117,   474,   632,    33,   120,
     155,   475,   947,   948,  1297,  1423,   184,  1297,  1431,   631,
    1423,    33,   120,   950,   951,  1423,   632,  1432,  1430,  1297,
     161,   260,   600,  1345,   624,   103,   162,   190,   401,   533,
     554,   594,  1345,    12,   904,  1423,   261,  1236,  1238,   187,
     236,  1340,  1342,    67,   511,   184,   511,   530,    67,   511,
      12,    41,    88,    93,   240,   316,   379,   491,   527,  1328,
    1329,  1330,   161,   210,   511,   511,  1236,  1345,  1342,   272,
     152,    70,   403,   530,   553,   511,   590,  1044,   428,   506,
    1057,  1058,   364,   607,    82,   626,  1269,  1039,   626,   363,
    1563,   526,  1564,   245,   445,  1562,   625,  1508,  1510,  1512,
    1513,   151,   637,  1423,  1104,  1278,  1281,  1306,  1314,  1349,
    1352,  1400,  1421,   120,   890,   891,   901,   902,   955,   106,
    1124,   631,   683,     6,   796,   683,   624,   105,   813,   813,
     813,     4,  1006,  1012,   465,   594,  1535,  1268,   236,   626,
     383,  1098,  1100,  1101,   691,   692,  1125,   220,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   301,   302,   426,
     427,   653,   654,   657,   169,   410,   626,  1063,    57,   169,
     173,   184,   315,   410,  1074,  1075,  1076,    55,   429,   166,
     663,   796,   106,   813,   216,   626,  1121,  1121,  1121,   162,
     190,   190,  1535,  1413,   986,   987,   986,   986,  1271,  1272,
    1413,  1414,  1421,   626,  1318,   632,  1322,  1125,  1125,    12,
     135,  1158,  1219,  1158,  1158,  1158,   599,  1167,  1125,  1125,
    1162,  1162,  1125,  1125,  1125,   135,  1158,  1219,   625,   356,
     625,   625,  1125,  1125,  1125,  1125,  1409,  1519,   111,   112,
     113,   114,   115,   211,   212,   213,   214,   319,   321,   322,
     323,   330,   408,   463,   464,   597,   612,   613,  1214,  1215,
    1125,  1162,   107,   110,   543,   546,  1216,   135,  1155,  1125,
    1125,  1125,  1125,  1214,  1125,  1162,  1164,     9,   626,   632,
     135,  1158,  1125,  1125,   135,  1158,  1125,  1125,  1162,  1162,
    1162,  1125,  1125,  1125,  1162,  1128,  1125,  1125,  1125,  1125,
    1125,  1125,   625,  1125,  1158,  1158,  1125,  1125,   135,  1158,
    1125,  1215,  1215,  1125,    44,   253,   551,  1125,  1125,   625,
    1410,  1411,  1421,  1158,  1158,  1125,  1125,  1125,   625,   626,
     625,   466,   624,  1516,  1517,  1125,   631,  1154,  1423,   632,
    1125,  1125,  1125,  1127,   172,   355,   556,   572,  1131,    12,
      17,  1127,  1134,  1128,  1128,   624,  1135,  1128,  1128,  1128,
    1128,   260,  1128,  1128,   232,  1128,   232,  1128,  1128,  1128,
    1128,  1128,    31,   236,   260,   423,  1423,  1135,  1125,  1141,
    1421,   632,  1413,  1275,   626,  1277,   153,   626,  1268,  1265,
     631,   647,   648,   272,   272,   272,   272,    48,   272,   272,
     626,  1356,   110,   543,   546,   721,   731,  1152,  1403,  1409,
    1423,   626,   155,   530,   624,  1489,  1424,  1489,  1489,  1489,
     190,   401,   533,  1473,  1477,  1421,   177,   346,  1421,  1464,
    1465,  1286,  1418,  1093,   267,  1381,  1218,   626,  1268,    70,
     624,   850,   851,   850,   851,   384,   853,   204,   248,  1423,
      29,   550,  1371,   626,   550,   626,   550,  1268,  1287,  1283,
     383,  1181,  1182,    12,  1367,  1365,   626,   155,   626,  1424,
     190,   401,  1473,  1421,    12,   135,  1515,   626,  1112,  1125,
    1407,  1421,  1421,    68,   953,  1125,  1424,   361,   386,   539,
    1452,   242,   414,  1447,  1448,  1449,  1450,   197,   267,   471,
    1443,  1297,  1421,   552,  1433,  1444,  1446,   626,  1435,    12,
      33,   120,   362,  1125,  1453,   236,  1343,  1418,  1125,   619,
     895,   682,   682,   682,  1413,   682,  1413,   272,   334,   511,
    1337,  1337,   275,   356,   561,  1239,  1240,  1401,  1421,  1345,
    1421,   682,  1345,  1424,  1340,   682,  1345,   239,   528,   174,
     184,  1331,   626,  1343,  1340,  1413,  1342,  1340,  1340,  1345,
    1345,   575,  1059,   626,   487,  1049,   466,   624,   628,  1168,
    1169,  1170,  1171,  1172,  1183,  1184,  1198,  1400,   387,  1565,
     371,  1232,  1238,  1514,   891,    68,   946,   131,  1423,    73,
      87,   250,   327,   352,   412,   505,   685,   687,   419,   565,
     814,   815,   225,   810,   811,   812,   819,   827,   828,   103,
     209,   377,   386,   393,   488,   579,   666,   667,  1418,    24,
     307,   804,   805,   806,   819,   820,   821,   827,   828,   797,
     798,   804,     6,    13,    14,    25,    26,    56,    60,    61,
      66,    73,    81,    91,   106,   124,   132,   133,   139,   147,
     153,   164,   182,   221,   223,   230,   247,   306,   324,   328,
     366,   371,   378,   383,   386,   417,   431,   432,   433,   434,
     456,   515,   531,   534,   557,   570,   838,   897,   899,   901,
     902,  1017,  1021,  1023,  1026,  1032,  1033,  1034,  1228,   362,
     676,  1013,   122,   235,  1413,   120,  1091,  1421,  1089,  1413,
     840,  1100,   223,   248,   980,  1102,   625,   626,   155,   155,
     155,   155,   155,   155,   155,   155,   155,   155,   155,   155,
     155,   155,   155,   155,   155,   155,   155,   155,   155,   155,
     155,   155,   626,  1269,   577,  1075,   889,   890,    73,   347,
     420,   566,   807,   808,   809,   819,   823,   824,   825,   826,
     827,   828,   606,   581,   792,    46,   602,  1488,   190,   682,
     682,   895,   682,  1421,   659,   559,   582,   994,   362,   362,
     362,   626,  1319,  1181,   632,  1322,  1321,   187,   619,  1421,
     626,   625,  1158,   625,  1159,   625,   625,   625,  1125,   145,
     599,  1166,    18,   625,   582,   625,   625,   625,   626,   582,
     626,  1149,   625,   619,   625,   626,   626,   625,   625,   625,
     625,   187,   626,   625,   626,  1151,   625,   626,   626,   626,
     618,   626,   625,   625,   624,  1409,  1421,  1158,   625,   625,
     625,  1158,   625,   626,   625,   625,   625,   625,   625,   625,
     626,   625,   236,   625,   626,   626,   625,   626,   626,   625,
     625,   625,   626,   187,   626,  1158,   625,   625,   626,   626,
     626,   625,   187,  1125,   187,  1125,   187,  1125,   187,   625,
     626,   625,   625,   625,   625,   626,    18,   258,   626,   970,
     625,  1162,  1188,  1189,  1190,   466,   624,  1107,  1511,  1512,
     570,  1521,   629,  1443,   475,  1421,   172,   355,   556,   572,
     624,    16,  1125,  1519,   160,  1224,  1128,  1125,  1125,  1128,
     624,  1135,  1128,  1121,  1145,  1146,  1147,   624,   632,  1421,
    1266,  1277,  1297,  1298,  1424,    50,   444,  1040,  1268,  1423,
     626,  1360,  1268,  1361,   729,   732,   733,   728,   357,   458,
     730,  1421,  1490,  1491,   550,   619,  1413,  1421,  1485,  1485,
    1485,   155,   177,   191,   202,   251,   252,   279,   346,   398,
    1466,  1468,   600,  1220,  1280,  1094,  1095,  1096,  1097,  1413,
     224,   278,   414,   607,  1459,  1458,   624,  1121,   117,   179,
     207,   275,   356,   561,  1243,  1246,  1247,   522,   854,   845,
     624,  1125,  1418,  1424,  1424,  1084,  1413,   169,   410,   580,
    1066,  1067,  1068,   466,   474,   586,   587,   624,   885,  1288,
    1291,   624,   722,   721,   198,   187,  1485,  1485,  1485,  1509,
    1120,   187,   233,  1113,  1114,  1231,  1232,  1257,  1122,  1122,
     632,   120,   952,   954,  1423,  1297,   624,   624,   258,   364,
     607,   626,   626,   632,   632,   632,  1446,  1125,  1447,  1434,
    1297,  1436,  1437,  1418,   187,  1344,   625,  1421,   360,   626,
    1345,   409,  1236,  1330,  1344,  1345,  1340,  1413,  1345,  1345,
     498,   657,  1060,  1045,  1058,  1197,  1421,    95,   226,   245,
     256,   339,   451,   516,  1180,   474,   626,  1413,  1197,   626,
     184,  1566,    46,  1236,  1298,  1298,   337,  1418,   505,   505,
     505,   505,   505,   465,  1418,  1418,  1298,   626,   812,  1418,
    1418,  1418,  1418,   117,   179,   207,   275,   356,   561,  1242,
    1418,  1418,   625,   626,  1298,  1298,   626,   806,   799,   800,
     819,   820,   821,    71,    83,   383,   913,   916,   917,   978,
     980,   984,   985,  1038,  1038,   383,  1298,  1298,  1038,  1298,
     383,   383,  1298,  1298,   550,   131,  1298,   246,   531,   183,
     383,   399,   980,  1038,   246,  1298,   383,   531,   131,  1298,
    1298,  1298,  1298,  1038,   383,    46,  1298,   840,  1298,   383,
     385,    18,   155,   550,  1042,   383,   383,  1298,   134,   316,
    1421,  1298,   383,  1298,   897,   626,   837,   838,  1021,   624,
     632,   912,   918,  1412,  1421,    77,   461,   432,  1014,  1536,
    1099,   624,  1125,   624,  1242,  1417,  1418,  1242,  1242,  1417,
    1417,   117,   179,   275,   356,   561,  1244,  1417,  1242,  1242,
    1417,  1417,  1417,  1417,  1417,  1417,  1417,  1242,  1242,  1417,
    1404,  1417,  1242,   654,  1298,  1298,  1298,  1298,   626,   809,
    1423,   271,   170,   801,   802,   803,   819,   820,   821,   822,
     825,   826,   827,   828,   386,   539,  1423,  1421,  1555,     8,
      29,   787,   682,   624,   447,   260,   624,   830,   896,   898,
     899,    45,   204,   459,   999,   999,  1413,  1413,  1413,  1272,
    1421,   582,  1317,  1421,  1169,   632,  1322,   232,  1125,   625,
    1125,   542,  1125,  1125,   149,    33,    59,   107,   110,   118,
     341,   482,   546,   574,  1160,   947,  1125,   947,  1160,  1162,
     625,   232,   232,  1125,  1125,  1125,  1162,  1125,  1125,  1125,
    1125,  1125,  1128,   625,   625,  1125,  1125,  1125,  1125,  1125,
    1125,  1162,   232,  1125,  1125,  1125,   625,  1125,  1125,  1125,
    1125,   187,  1125,   187,  1125,   187,  1125,  1125,  1125,    33,
      59,   965,   966,   967,   968,   969,  1243,  1242,   625,   625,
    1522,  1523,  1524,  1189,  1107,   625,  1515,  1423,  1125,  1519,
    1127,   625,   626,   625,  1135,  1214,  1214,    16,  1125,  1519,
    1224,  1125,   625,   626,  1161,  1162,  1421,   903,  1423,  1040,
     648,  1357,   155,   626,   625,   626,  1487,   632,   632,   550,
     550,   550,  1467,  1221,  1237,  1238,  1288,   626,  1098,  1100,
     539,  1420,   607,   267,   847,   848,   849,  1421,   859,  1128,
      46,   624,   861,   851,   847,   550,  1067,   886,  1289,   624,
    1294,  1299,  1294,   625,   885,  1290,  1406,  1407,  1410,  1421,
    1292,  1213,  1421,   155,   368,  1487,   187,   187,   187,  1105,
     140,  1169,  1258,   184,   270,  1118,  1257,  1237,  1114,    18,
    1123,  1418,  1421,   619,  1421,  1452,   539,   539,   414,   435,
     469,  1451,  1449,  1448,  1297,  1435,  1453,   626,  1439,  1441,
    1445,  1244,  1335,   158,   596,  1240,  1240,   356,  1336,  1220,
    1340,   155,   626,   579,  1050,  1051,  1185,  1192,  1197,  1168,
     245,   245,   374,  1199,   245,   256,   451,  1199,  1183,  1168,
    1309,  1310,  1410,  1170,  1181,  1194,  1195,  1242,   320,  1233,
     954,   948,   106,   106,   122,   235,   215,   829,  1243,   812,
     667,   829,   829,   806,   626,   800,  1002,  1412,  1079,    61,
     183,   399,   571,   915,   979,  1002,   980,   981,   981,  1412,
    1079,  1244,  1242,  1412,  1242,    12,  1022,  1030,  1031,  1421,
    1079,  1418,  1418,   946,  1298,  1242,   248,  1030,   248,  1412,
    1412,   903,  1031,  1298,   177,   251,   352,   906,  1242,  1244,
    1244,  1412,  1079,  1229,  1230,  1410,   120,  1242,   839,  1418,
    1079,   840,  1413,  1079,  1079,    76,    78,   120,   143,   178,
     421,   905,  1242,  1022,   900,     6,   139,  1034,   909,   910,
     911,   912,   913,  1421,     8,   177,  1041,   422,   914,   915,
     972,   919,   632,   350,   397,    22,   163,   670,   550,   132,
     147,   672,   624,  1537,   624,   399,  1210,  1211,  1212,  1421,
     655,   656,  1242,  1418,  1243,   829,   829,   809,   367,   200,
    1298,   626,   803,   539,    18,   447,   624,   125,   229,   576,
     788,   669,  1549,   118,   234,   416,   517,   908,  1413,   260,
     831,   836,   837,   909,   836,   626,   898,   660,   661,   662,
     632,  1169,  1220,  1322,  1220,  1125,   625,  1125,   542,   624,
     937,   938,   938,   624,   932,   624,   930,   931,   937,   938,
     234,   932,   234,   625,   625,   625,   625,   625,  1150,  1125,
    1125,   625,   625,   626,   625,  1157,  1232,   626,   626,   625,
     626,   625,   236,  1142,  1143,   625,   625,   625,   625,   626,
     625,   625,  1125,   625,   184,   625,   625,   626,   625,   626,
     626,   625,  1125,   625,  1125,   625,  1125,   625,   625,   625,
     624,   960,   960,    19,   126,   449,   617,   962,   963,   964,
     626,   626,  1119,  1524,   625,  1518,   632,  1003,   625,  1162,
    1127,   625,   626,   625,  1122,  1147,   625,   602,  1358,    54,
      63,    72,    84,    85,    86,   101,   318,   335,   446,   462,
     518,   535,   734,   733,  1491,   602,  1494,   619,   619,  1487,
    1487,  1487,   624,  1125,   362,  1304,  1096,  1413,  1100,   219,
    1103,  1377,   625,   626,  1122,   846,   383,   862,   863,   625,
    1424,  1115,  1295,  1296,  1410,  1300,   626,   624,  1291,   625,
     625,   626,   632,  1507,   625,   626,   721,   187,  1487,  1487,
    1487,  1220,  1220,   141,   375,  1253,  1254,  1259,   576,   236,
    1418,  1421,   632,   625,   625,    74,   562,   414,  1453,  1438,
    1440,  1236,  1236,  1345,  1418,   657,   155,   386,  1052,   570,
     625,  1511,  1193,   629,   245,  1183,  1199,  1199,   245,   362,
     362,   582,   626,  1308,  1297,  1218,  1115,  1125,  1234,  1408,
     800,  1024,   624,   248,   248,   981,  1002,   987,  1002,  1002,
     139,   474,  1022,  1035,  1019,   626,  1243,   948,  1418,  1002,
    1040,   602,  1418,  1036,  1022,   626,    19,   126,  1235,   843,
    1022,  1027,  1022,   624,   625,   626,  1421,  1413,    32,    33,
      38,    40,    42,    43,    59,   107,   110,   118,   137,   154,
     178,   180,   193,   194,   234,   264,   273,   274,   276,   312,
     313,   314,   331,   332,   333,   338,   341,   358,   359,   391,
     392,   416,   470,   474,   486,   540,   543,   546,   547,   548,
     549,   588,   589,   613,   920,   923,   924,   925,   926,   927,
     928,   929,  1421,   397,  1125,  1125,   362,   676,   682,   362,
      73,   677,  1421,  1538,    18,  1022,   625,   626,   625,   626,
     624,  1421,   829,   803,  1418,   908,  1556,   362,   362,   693,
     694,   696,  1421,   489,  1413,   885,   625,   219,   437,   833,
    1383,   898,   624,   624,   624,  1421,  1220,  1231,  1214,  1125,
     117,   275,   356,   561,    20,    33,    47,   568,   946,   956,
     957,   958,   356,   356,   625,  1214,  1214,  1125,   468,  1156,
    1125,  1125,  1162,    42,   339,   625,   602,  1144,  1125,  1214,
    1125,  1125,  1125,  1125,   625,   625,   625,  1243,   625,   970,
     965,   963,   965,   966,  1242,  1191,  1516,  1421,   625,  1162,
    1123,   414,   198,   439,  1492,  1492,  1492,   120,  1125,  1302,
    1303,   142,  1103,   254,  1383,   849,   625,   204,   248,   864,
     625,   626,  1119,   626,  1297,  1301,  1302,  1299,  1293,  1291,
    1406,  1421,   840,  1421,  1487,  1237,   200,  1225,  1420,  1420,
     631,  1255,  1256,  1423,   476,   619,  1439,  1444,  1418,   155,
     121,  1053,  1515,  1218,  1171,  1168,  1183,   245,   245,  1168,
    1183,  1174,  1173,  1175,  1310,  1220,  1303,  1208,  1209,  1119,
     626,  1235,   384,   624,  1025,  1125,  1002,   987,   624,   986,
     986,   120,   120,   918,  1074,  1031,   953,   533,   920,  1018,
    1230,  1028,  1030,  1020,  1361,   911,   624,   973,   937,   937,
     938,   932,   930,   395,   921,   930,   930,   958,    59,   588,
     924,   926,   958,   958,    59,   589,   589,   592,   930,   922,
     938,   932,   932,   958,   937,   938,    25,    68,    73,   120,
     355,   362,   399,   470,   571,   940,   941,   942,   971,  1131,
     592,   937,   958,    33,   937,   959,   937,   937,   938,   624,
     931,   939,   632,  1214,   484,  1418,   138,  1015,   625,   626,
    1539,  1540,   625,  1211,   656,   666,   489,   227,   236,   376,
     697,   698,   699,   700,  1121,   461,   625,   626,   695,  1418,
     625,   625,   896,    18,   888,  1000,  1001,  1421,  1000,  1000,
     261,  1241,   625,   625,   625,   625,   625,    33,    20,   568,
     946,    33,   947,   625,   626,   625,   625,   625,  1400,   625,
     625,   626,   625,   326,   250,   409,   625,   625,   625,   625,
     625,   625,   961,   625,   626,   907,  1114,  1237,  1511,   625,
     270,   368,    62,   243,   348,   507,   520,   608,  1483,  1484,
     602,  1493,  1493,  1493,   625,   626,  1305,   233,   624,   852,
     624,   865,  1421,   863,   887,  1296,  1303,   625,  1510,    46,
     205,  1222,  1260,  1423,   626,   326,  1418,   155,   388,  1054,
    1186,   362,  1177,  1183,  1183,   362,  1179,  1125,  1125,   624,
    1231,  1206,  1207,  1196,  1408,  1243,   862,   625,   624,   624,
    1000,   624,   624,   110,   543,   546,   617,   618,  1402,  1403,
    1041,  1413,   940,  1079,  1029,  1066,   625,   974,  1421,   303,
     975,   482,   574,   614,   934,   935,   936,   624,   934,   934,
     958,   592,   934,   624,   958,   934,   952,  1418,   944,   945,
    1402,   576,   120,   248,   942,   248,   355,   958,   959,   958,
     959,   934,   356,   934,  1421,   671,   678,   679,  1421,   466,
     624,  1541,   625,  1418,   625,   626,   695,  1544,   670,  1550,
     696,   920,   943,   832,   836,   624,   885,   625,   626,  1235,
     624,   625,   625,  1240,   947,   959,   356,  1125,   326,   168,
     625,  1242,  1118,  1118,   539,   539,   539,    16,  1482,   198,
     304,   305,   309,   310,  1495,  1496,  1303,   248,   533,  1121,
     855,   857,   858,  1421,   586,   866,   907,  1226,  1408,  1223,
    1231,   946,   949,  1256,  1418,   155,  1516,  1176,   582,  1178,
     582,  1213,  1241,   182,   219,   581,  1201,  1202,  1205,   907,
    1235,   625,  1000,  1000,   625,  1000,  1000,  1404,  1404,   840,
    1037,   233,   625,   626,   188,   382,   483,   362,   976,   936,
    1004,  1400,  1004,   944,   587,   509,   673,    52,    65,   175,
     218,   244,   255,   365,   448,   680,   738,   740,   741,   742,
     744,   745,   746,   747,   748,   749,   751,   759,   760,   763,
     774,   777,   779,   780,  1416,  1422,  1426,  1108,  1106,   602,
    1542,  1557,   699,  1421,  1413,   675,   676,   447,   953,  1510,
     833,   885,   834,    73,   247,   988,   991,   994,   995,   996,
    1001,   356,   602,   989,   993,   995,   998,   990,   992,   995,
     997,   625,   625,   625,  1483,   368,  1242,  1242,  1242,  1242,
    1496,   576,  1413,   859,   521,   860,   625,   626,   236,   257,
      73,   106,   223,   306,   324,   347,   531,   882,   883,   884,
    1339,   603,   604,   626,  1227,  1235,  1125,  1237,   948,  1261,
    1418,  1187,  1125,   624,  1125,   624,   625,   980,   980,  1202,
     625,   625,   988,   625,   625,  1041,   624,  1421,   125,   576,
     625,   626,   625,  1125,   150,   674,   761,   764,  1421,   187,
     346,   752,   739,  1422,  1422,  1421,   743,   639,   277,   436,
     601,   783,    30,   781,   633,   625,    51,    61,   267,   684,
     943,   184,   672,  1551,   625,  1507,  1418,  1298,   996,  1235,
     625,   381,   998,   997,  1311,  1312,  1410,  1181,  1122,  1243,
     856,   858,   868,   541,  1298,   131,   131,  1298,  1298,  1298,
    1298,   624,   877,   884,   153,  1408,   401,  1248,    70,  1384,
    1511,  1213,  1213,   184,  1200,  1200,   972,   988,   989,   990,
     862,    50,   352,   444,   474,   977,   977,   958,  1400,   958,
    1125,  1125,   599,   766,   770,   187,  1421,   754,   755,  1125,
     702,   737,   738,   740,   742,   744,   746,   747,   748,   749,
     751,   759,   774,   777,   779,   702,   784,   782,   775,   778,
    1510,    61,   368,    61,   129,   685,   686,  1131,  1558,  1121,
     677,   943,   835,  1242,  1416,   626,  1297,  1378,   625,   860,
     624,   870,   872,   867,  1418,  1298,  1298,   275,   356,   561,
    1245,  1246,  1245,  1243,  1423,   522,   878,   879,  1298,  1235,
    1421,   148,   159,   369,   538,  1385,  1386,   263,  1387,   625,
     625,   200,   245,   371,  1204,  1203,   625,     5,   120,   355,
     362,   362,   762,   771,   145,   770,   773,   233,   149,  1125,
     149,   737,   630,   575,  1125,   703,   783,   781,   368,   368,
     129,   737,  1545,   138,  1552,  1510,  1312,  1303,   949,   624,
     871,   872,   873,   311,   869,   872,  1418,  1418,   880,   625,
     626,   903,  1249,    46,    46,   148,    46,  1386,   508,   538,
    1388,  1389,    46,    46,   624,   624,   576,   125,   599,   765,
     767,  1125,   702,   149,   750,   218,   542,   277,   630,   786,
     138,   119,   701,   704,   776,  1422,   776,   144,   678,   684,
    1379,   625,   626,   311,   875,   876,  1128,   881,  1423,   879,
     624,  1400,  1400,    46,  1400,    46,    46,  1389,  1210,  1212,
     977,   977,   768,   767,   773,   772,    52,   753,  1421,   756,
    1125,   785,    89,   167,   709,   735,  1421,   149,   737,   630,
     457,  1553,   455,  1390,   872,   626,   874,   882,  1121,  1250,
    1251,  1252,  1400,  1400,  1400,   625,   625,  1125,   149,   542,
     626,   702,   149,   702,   203,   626,   705,    80,   100,   630,
    1546,   737,   216,  1384,   876,   625,  1125,   625,   626,   769,
      52,   702,  1421,   757,   436,   149,   184,  1421,   943,   184,
     184,   737,    46,  1387,  1122,  1252,   542,   145,   146,   758,
     601,   706,   120,   736,   712,   713,  1242,   707,   708,  1400,
     219,  1391,   702,   702,   754,   494,   496,   710,   711,   712,
     715,  1131,  1421,  1125,  1104,   356,   624,  1393,   626,   737,
     186,   263,   455,  1392,   625,   631,  1394,  1395,  1410,   474,
    1396,   711,  1423,   625,   626,  1397,  1398,  1410,  1395,   626,
    1297,  1398,  1121,  1303,  1122
};

#define yyerrok		(yyerrstatus = 0)
#define yyclearin	(yychar = YYEMPTY)
#define YYEMPTY		(-2)
#define YYEOF		0

#define YYACCEPT	goto yyacceptlab
#define YYABORT		goto yyabortlab
#define YYERROR		goto yyerrorlab


/* Like YYERROR except do call yyerror.  This remains here temporarily
   to ease the transition to the new meaning of YYERROR, for GCC.
   Once GCC version 2 has supplanted version 1, this can go.  */

#define YYFAIL		goto yyerrlab

#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)					\
do								\
  if (yychar == YYEMPTY && yylen == 1)				\
    {								\
      yychar = (Token);						\
      yylval = (Value);						\
      yytoken = YYTRANSLATE (yychar);				\
      YYPOPSTACK (1);						\
      goto yybackup;						\
    }								\
  else								\
    {								\
      yyerror (YY_("syntax error: cannot back up")); \
      YYERROR;							\
    }								\
while (YYID (0))


#define YYTERROR	1
#define YYERRCODE	256


/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
   If N is 0, then set CURRENT to the empty location which ends
   the previous symbol: RHS[0] (always defined).  */

#define YYRHSLOC(Rhs, K) ((Rhs)[K])
#ifndef YYLLOC_DEFAULT
# define YYLLOC_DEFAULT(Current, Rhs, N)				\
    do									\
      if (YYID (N))                                                    \
	{								\
	  (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;	\
	  (Current).first_column = YYRHSLOC (Rhs, 1).first_column;	\
	  (Current).last_line    = YYRHSLOC (Rhs, N).last_line;		\
	  (Current).last_column  = YYRHSLOC (Rhs, N).last_column;	\
	}								\
      else								\
	{								\
	  (Current).first_line   = (Current).last_line   =		\
	    YYRHSLOC (Rhs, 0).last_line;				\
	  (Current).first_column = (Current).last_column =		\
	    YYRHSLOC (Rhs, 0).last_column;				\
	}								\
    while (YYID (0))
#endif


/* YY_LOCATION_PRINT -- Print the location on the stream.
   This macro was not mandated originally: define only if we know
   we won't break user code: when these are the locations we know.  */

#ifndef YY_LOCATION_PRINT
# if YYLTYPE_IS_TRIVIAL
#  define YY_LOCATION_PRINT(File, Loc)			\
     fprintf (File, "%d.%d-%d.%d",			\
	      (Loc).first_line, (Loc).first_column,	\
	      (Loc).last_line,  (Loc).last_column)
# else
#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
# endif
#endif


/* YYLEX -- calling `yylex' with the right arguments.  */

#ifdef YYLEX_PARAM
# define YYLEX yylex (&yylval, YYLEX_PARAM)
#else
# define YYLEX yylex (&yylval)
#endif

/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)			\
do {						\
  if (yydebug)					\
    YYFPRINTF Args;				\
} while (YYID (0))

# define YY_SYMBOL_PRINT(Title, Type, Value, Location)			  \
do {									  \
  if (yydebug)								  \
    {									  \
      YYFPRINTF (stderr, "%s ", Title);					  \
      yy_symbol_print (stderr,						  \
		  Type, Value); \
      YYFPRINTF (stderr, "\n");						  \
    }									  \
} while (YYID (0))


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep)
#else
static void
yy_symbol_value_print (yyoutput, yytype, yyvaluep)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
#endif
{
  if (!yyvaluep)
    return;
# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# else
  YYUSE (yyoutput);
# endif
  switch (yytype)
    {
      default:
	break;
    }
}


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep)
#else
static void
yy_symbol_print (yyoutput, yytype, yyvaluep)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
#endif
{
  if (yytype < YYNTOKENS)
    YYFPRINTF (yyoutput, "token %s (", yytname[yytype]);
  else
    YYFPRINTF (yyoutput, "nterm %s (", yytname[yytype]);

  yy_symbol_value_print (yyoutput, yytype, yyvaluep);
  YYFPRINTF (yyoutput, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_stack_print (yytype_int16 *bottom, yytype_int16 *top)
#else
static void
yy_stack_print (bottom, top)
    yytype_int16 *bottom;
    yytype_int16 *top;
#endif
{
  YYFPRINTF (stderr, "Stack now");
  for (; bottom <= top; ++bottom)
    YYFPRINTF (stderr, " %d", *bottom);
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)				\
do {								\
  if (yydebug)							\
    yy_stack_print ((Bottom), (Top));				\
} while (YYID (0))


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_reduce_print (YYSTYPE *yyvsp, int yyrule)
#else
static void
yy_reduce_print (yyvsp, yyrule)
    YYSTYPE *yyvsp;
    int yyrule;
#endif
{
  int yynrhs = yyr2[yyrule];
  int yyi;
  unsigned long int yylno = yyrline[yyrule];
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
	     yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      fprintf (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
		       &(yyvsp[(yyi + 1) - (yynrhs)])
		       		       );
      fprintf (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)		\
do {					\
  if (yydebug)				\
    yy_reduce_print (yyvsp, Rule); \
} while (YYID (0))

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef	YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif



#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined __GLIBC__ && defined _STRING_H
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static YYSIZE_T
yystrlen (const char *yystr)
#else
static YYSIZE_T
yystrlen (yystr)
    const char *yystr;
#endif
{
  YYSIZE_T yylen;
  for (yylen = 0; yystr[yylen]; yylen++)
    continue;
  return yylen;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static char *
yystpcpy (char *yydest, const char *yysrc)
#else
static char *
yystpcpy (yydest, yysrc)
    char *yydest;
    const char *yysrc;
#endif
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYSIZE_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYSIZE_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
	switch (*++yyp)
	  {
	  case '\'':
	  case ',':
	    goto do_not_strip_quotes;

	  case '\\':
	    if (*++yyp != '\\')
	      goto do_not_strip_quotes;
	    /* Fall through.  */
	  default:
	    if (yyres)
	      yyres[yyn] = *yyp;
	    yyn++;
	    break;

	  case '"':
	    if (yyres)
	      yyres[yyn] = '\0';
	    return yyn;
	  }
    do_not_strip_quotes: ;
    }

  if (! yyres)
    return yystrlen (yystr);

  return yystpcpy (yyres, yystr) - yyres;
}
# endif

/* Copy into YYRESULT an error message about the unexpected token
   YYCHAR while in state YYSTATE.  Return the number of bytes copied,
   including the terminating null byte.  If YYRESULT is null, do not
   copy anything; just return the number of bytes that would be
   copied.  As a special case, return 0 if an ordinary "syntax error"
   message will do.  Return YYSIZE_MAXIMUM if overflow occurs during
   size calculation.  */
static YYSIZE_T
yysyntax_error (char *yyresult, int yystate, int yychar)
{
  int yyn = yypact[yystate];

  if (! (YYPACT_NINF < yyn && yyn <= YYLAST))
    return 0;
  else
    {
      int yytype = YYTRANSLATE (yychar);
      YYSIZE_T yysize0 = yytnamerr (0, yytname[yytype]);
      YYSIZE_T yysize = yysize0;
      YYSIZE_T yysize1;
      int yysize_overflow = 0;
      enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
      char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
      int yyx;

# if 0
      /* This is so xgettext sees the translatable formats that are
	 constructed on the fly.  */
      YY_("syntax error, unexpected %s");
      YY_("syntax error, unexpected %s, expecting %s");
      YY_("syntax error, unexpected %s, expecting %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s");
# endif
      char *yyfmt;
      char const *yyf;
      static char const yyunexpected[] = "syntax error, unexpected %s";
      static char const yyexpecting[] = ", expecting %s";
      static char const yyor[] = " or %s";
      char yyformat[sizeof yyunexpected
		    + sizeof yyexpecting - 1
		    + ((YYERROR_VERBOSE_ARGS_MAXIMUM - 2)
		       * (sizeof yyor - 1))];
      char const *yyprefix = yyexpecting;

      /* Start YYX at -YYN if negative to avoid negative indexes in
	 YYCHECK.  */
      int yyxbegin = yyn < 0 ? -yyn : 0;

      /* Stay within bounds of both yycheck and yytname.  */
      int yychecklim = YYLAST - yyn + 1;
      int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
      int yycount = 1;

      yyarg[0] = yytname[yytype];
      yyfmt = yystpcpy (yyformat, yyunexpected);

      for (yyx = yyxbegin; yyx < yyxend; ++yyx)
	if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
	  {
	    if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
	      {
		yycount = 1;
		yysize = yysize0;
		yyformat[sizeof yyunexpected - 1] = '\0';
		break;
	      }
	    yyarg[yycount++] = yytname[yyx];
	    yysize1 = yysize + yytnamerr (0, yytname[yyx]);
	    yysize_overflow |= (yysize1 < yysize);
	    yysize = yysize1;
	    yyfmt = yystpcpy (yyfmt, yyprefix);
	    yyprefix = yyor;
	  }

      yyf = YY_(yyformat);
      yysize1 = yysize + yystrlen (yyf);
      yysize_overflow |= (yysize1 < yysize);
      yysize = yysize1;

      if (yysize_overflow)
	return YYSIZE_MAXIMUM;

      if (yyresult)
	{
	  /* Avoid sprintf, as that infringes on the user's name space.
	     Don't have undefined behavior even if the translation
	     produced a string with the wrong number of "%s"s.  */
	  char *yyp = yyresult;
	  int yyi = 0;
	  while ((*yyp = *yyf) != '\0')
	    {
	      if (*yyp == '%' && yyf[1] == 's' && yyi < yycount)
		{
		  yyp += yytnamerr (yyp, yyarg[yyi++]);
		  yyf += 2;
		}
	      else
		{
		  yyp++;
		  yyf++;
		}
	    }
	}
      return yysize;
    }
}
#endif /* YYERROR_VERBOSE */


/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep)
#else
static void
yydestruct (yymsg, yytype, yyvaluep)
    const char *yymsg;
    int yytype;
    YYSTYPE *yyvaluep;
#endif
{
  YYUSE (yyvaluep);

  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  switch (yytype)
    {

      default:
	break;
    }
}


/* Prevent warnings from -Wmissing-prototypes.  */

#ifdef YYPARSE_PARAM
#if defined __STDC__ || defined __cplusplus
int yyparse (void *YYPARSE_PARAM);
#else
int yyparse ();
#endif
#else /* ! YYPARSE_PARAM */
#if defined __STDC__ || defined __cplusplus
int yyparse (void);
#else
int yyparse ();
#endif
#endif /* ! YYPARSE_PARAM */






/*----------.
| yyparse.  |
`----------*/

#ifdef YYPARSE_PARAM
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (void *YYPARSE_PARAM)
#else
int
yyparse (YYPARSE_PARAM)
    void *YYPARSE_PARAM;
#endif
#else /* ! YYPARSE_PARAM */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (void)
#else
int
yyparse ()

#endif
#endif
{
  /* The look-ahead symbol.  */
int yychar;

/* The semantic value of the look-ahead symbol.  */
YYSTYPE yylval;

/* Number of syntax errors so far.  */
int yynerrs;

  int yystate;
  int yyn;
  int yyresult;
  /* Number of tokens to shift before error messages enabled.  */
  int yyerrstatus;
  /* Look-ahead token as an internal (translated) token number.  */
  int yytoken = 0;
#if YYERROR_VERBOSE
  /* Buffer for error messages, and its allocated size.  */
  char yymsgbuf[128];
  char *yymsg = yymsgbuf;
  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
#endif

  /* Three stacks and their tools:
     `yyss': related to states,
     `yyvs': related to semantic values,
     `yyls': related to locations.

     Refer to the stacks thru separate pointers, to allow yyoverflow
     to reallocate them elsewhere.  */

  /* The state stack.  */
  yytype_int16 yyssa[YYINITDEPTH];
  yytype_int16 *yyss = yyssa;
  yytype_int16 *yyssp;

  /* The semantic value stack.  */
  YYSTYPE yyvsa[YYINITDEPTH];
  YYSTYPE *yyvs = yyvsa;
  YYSTYPE *yyvsp;



#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N))

  YYSIZE_T yystacksize = YYINITDEPTH;

  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;


  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY;		/* Cause a token to be read.  */

  /* Initialize stack pointers.
     Waste one element of value and location stack
     so that they stay on the same level as the state stack.
     The wasted elements are never initialized.  */

  yyssp = yyss;
  yyvsp = yyvs;

  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
	/* Give user a chance to reallocate the stack.  Use copies of
	   these so that the &'s don't force the real ones into
	   memory.  */
	YYSTYPE *yyvs1 = yyvs;
	yytype_int16 *yyss1 = yyss;


	/* Each stack pointer address is followed by the size of the
	   data in use in that stack, in bytes.  This used to be a
	   conditional around just the two extra args, but that might
	   be undefined if yyoverflow is a macro.  */
	yyoverflow (YY_("memory exhausted"),
		    &yyss1, yysize * sizeof (*yyssp),
		    &yyvs1, yysize * sizeof (*yyvsp),

		    &yystacksize);

	yyss = yyss1;
	yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyexhaustedlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
	goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
	yystacksize = YYMAXDEPTH;

      {
	yytype_int16 *yyss1 = yyss;
	union yyalloc *yyptr =
	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
	if (! yyptr)
	  goto yyexhaustedlab;
	YYSTACK_RELOCATE (yyss);
	YYSTACK_RELOCATE (yyvs);

#  undef YYSTACK_RELOCATE
	if (yyss1 != yyssa)
	  YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;


      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
		  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
	YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

  /* Do appropriate processing given the current state.  Read a
     look-ahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to look-ahead token.  */
  yyn = yypact[yystate];
  if (yyn == YYPACT_NINF)
    goto yydefault;

  /* Not known => get a look-ahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid look-ahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = YYLEX;
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yyn == 0 || yyn == YYTABLE_NINF)
	goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the look-ahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the shifted token unless it is eof.  */
  if (yychar != YYEOF)
    yychar = YYEMPTY;

  yystate = yyn;
  *++yyvsp = yylval;

  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     `$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];


  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 2:
#line 1895 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            if (!thd->bootstrap &&
              (!(thd->lex->select_lex.options & OPTION_FOUND_COMMENT)))
            {
              my_message(ER_EMPTY_QUERY, ER(ER_EMPTY_QUERY), MYF(0));
              MYSQL_YYABORT;
            }
            thd->lex->sql_command= SQLCOM_EMPTY_QUERY;
            YYLIP->found_semicolon= NULL;
          }
    break;

  case 3:
#line 1907 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex_input_stream *lip = YYLIP;

            if ((YYTHD->client_capabilities & CLIENT_MULTI_QUERIES) &&
                lip->multi_statements &&
                ! lip->eof())
            {
              /*
                We found a well formed query, and multi queries are allowed:
                - force the parser to stop after the ';'
                - mark the start of the next query for the next invocation
                  of the parser.
              */
              lip->next_state= MY_LEX_END;
              lip->found_semicolon= lip->get_ptr();
            }
            else
            {
              /* Single query, terminated. */
              lip->found_semicolon= NULL;
            }
          }
    break;

  case 5:
#line 1932 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            /* Single query, not terminated. */
            YYLIP->found_semicolon= NULL;
          }
    break;

  case 62:
#line 2006 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_DEALLOCATE_PREPARE;
            lex->prepared_stmt_name= (yyvsp[(3) - (3)].lex_str);
          }
    break;

  case 65:
#line 2021 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_PREPARE;
            lex->prepared_stmt_name= (yyvsp[(2) - (4)].lex_str);
          }
    break;

  case 66:
#line 2031 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->prepared_stmt_code= (yyvsp[(1) - (1)].lex_str);
            lex->prepared_stmt_code_is_varref= FALSE;
          }
    break;

  case 67:
#line 2038 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->prepared_stmt_code= (yyvsp[(2) - (2)].lex_str);
            lex->prepared_stmt_code_is_varref= TRUE;
          }
    break;

  case 68:
#line 2048 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_EXECUTE;
            lex->prepared_stmt_name= (yyvsp[(2) - (2)].lex_str);
          }
    break;

  case 69:
#line 2055 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 74:
#line 2070 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            LEX_STRING *lexstr= (LEX_STRING*)sql_memdup(&(yyvsp[(2) - (2)].lex_str), sizeof(LEX_STRING));
            if (!lexstr || lex->prepared_stmt_params.push_back(lexstr))
              MYSQL_YYABORT;
          }
    break;

  case 75:
#line 2082 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if (Lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HELP");
              MYSQL_YYABORT;
            }
          }
    break;

  case 76:
#line 2090 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_HELP;
            lex->help_arg= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 77:
#line 2101 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex = Lex;
            lex->sql_command = SQLCOM_CHANGE_MASTER;
            /*
              Clear LEX_MASTER_INFO struct. repl_ignore_server_ids is freed
              in THD::cleanup_after_query. So it is guaranteed to be
              uninitialized before here.
	      Its allocation is deferred till the option is parsed below.
            */
            lex->mi.set_unspecified();
            DBUG_ASSERT(Lex->mi.repl_ignore_server_ids.elements == 0);
          }
    break;

  case 78:
#line 2114 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 81:
#line 2124 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->mi.host = (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 82:
#line 2128 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->mi.bind_addr = (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 83:
#line 2132 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->mi.user = (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 84:
#line 2136 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->mi.password = (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 85:
#line 2140 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->mi.port = (yyvsp[(3) - (3)].ulong_num);
          }
    break;

  case 86:
#line 2144 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->mi.connect_retry = (yyvsp[(3) - (3)].ulong_num);
          }
    break;

  case 87:
#line 2148 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->mi.retry_count= (yyvsp[(3) - (3)].ulong_num);
            Lex->mi.retry_count_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
    break;

  case 88:
#line 2153 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if ((yyvsp[(3) - (3)].ulong_num) > MASTER_DELAY_MAX)
            {
              my_error(ER_MASTER_DELAY_VALUE_OUT_OF_RANGE, MYF(0),
                       static_cast<uint>((yyvsp[(3) - (3)].ulong_num)), MASTER_DELAY_MAX);
            }
            else
              Lex->mi.sql_delay = (yyvsp[(3) - (3)].ulong_num);
          }
    break;

  case 89:
#line 2163 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->mi.ssl= (yyvsp[(3) - (3)].ulong_num) ? 
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
    break;

  case 90:
#line 2168 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_ca= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 91:
#line 2172 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_capath= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 92:
#line 2176 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_cert= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 93:
#line 2180 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_cipher= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 94:
#line 2184 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_key= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 95:
#line 2188 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_verify_server_cert= (yyvsp[(3) - (3)].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
    break;

  case 96:
#line 2193 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_crl= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 97:
#line 2197 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->mi.ssl_crlpath= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 98:
#line 2202 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->mi.heartbeat_period= (float) (yyvsp[(3) - (3)].item_num)->val_real();
            if (Lex->mi.heartbeat_period > SLAVE_MAX_HEARTBEAT_PERIOD ||
                Lex->mi.heartbeat_period < 0.0)
            {
               const char format[]= "%d";
               char buf[4*sizeof(SLAVE_MAX_HEARTBEAT_PERIOD) + sizeof(format)];
               sprintf(buf, format, SLAVE_MAX_HEARTBEAT_PERIOD);
               my_error(ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE, MYF(0), buf);
               MYSQL_YYABORT;
            }
            if (Lex->mi.heartbeat_period > slave_net_timeout)
            {
              push_warning_printf(YYTHD, Sql_condition::WARN_LEVEL_WARN,
                                  ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX,
                                  ER(ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX));
            }
            if (Lex->mi.heartbeat_period < 0.001)
            {
              if (Lex->mi.heartbeat_period != 0.0)
              {
                push_warning_printf(YYTHD, Sql_condition::WARN_LEVEL_WARN,
                                    ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN,
                                    ER(ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN));
                Lex->mi.heartbeat_period= 0.0;
              }
              Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_DISABLE;
            }
            Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
    break;

  case 99:
#line 2233 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->mi.repl_ignore_server_ids_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
           }
    break;

  case 100:
#line 2238 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->mi.auto_position= (yyvsp[(3) - (3)].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE :
              LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
    break;

  case 105:
#line 2255 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if (Lex->mi.repl_ignore_server_ids.elements == 0)
            {
              my_init_dynamic_array2(&Lex->mi.repl_ignore_server_ids,
                                     sizeof(::server_id),
                                     Lex->mi.server_ids_buffer,
                                     array_elements(Lex->mi.server_ids_buffer),
                                     16);
            }
            insert_dynamic(&Lex->mi.repl_ignore_server_ids, (uchar*) &((yyvsp[(1) - (1)].ulong_num)));
          }
    break;

  case 106:
#line 2269 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->mi.log_file_name = (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 107:
#line 2273 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->mi.pos = (yyvsp[(3) - (3)].ulonglong_number);
            /* 
               If the user specified a value < BIN_LOG_HEADER_SIZE, adjust it
               instead of causing subsequent errors. 
               We need to do it in this file, because only there we know that 
               MASTER_LOG_POS has been explicitely specified. On the contrary
               in change_master() (sql_repl.cc) we cannot distinguish between 0
               (MASTER_LOG_POS explicitely specified as 0) and 0 (unspecified),
               whereas we want to distinguish (specified 0 means "read the binlog
               from 0" (4 in fact), unspecified means "don't change the position
               (keep the preceding value)").
            */
            Lex->mi.pos = max<ulonglong>(BIN_LOG_HEADER_SIZE, Lex->mi.pos);
          }
    break;

  case 108:
#line 2289 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->mi.relay_log_name = (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 109:
#line 2293 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->mi.relay_log_pos = (yyvsp[(3) - (3)].ulong_num);
            /* Adjust if < BIN_LOG_HEADER_SIZE (same comment as Lex->mi.pos) */
            Lex->mi.relay_log_pos = max<ulong>(BIN_LOG_HEADER_SIZE,
                                               Lex->mi.relay_log_pos);
          }
    break;

  case 110:
#line 2305 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_CREATE_TABLE;
            if (!lex->select_lex.add_table_to_list(thd, (yyvsp[(5) - (5)].table), NULL,
                                                   TL_OPTION_UPDATING,
                                                   TL_WRITE, MDL_EXCLUSIVE))
              MYSQL_YYABORT;
            /*
              For CREATE TABLE, an non-existing table is not an error.
              Instruct open_tables() to just take an MDL lock if the
              table does not exist.
            */
            lex->query_tables->open_strategy= TABLE_LIST::OPEN_IF_EXISTS;
            lex->alter_info.reset();
            lex->col_list.empty();
            lex->change=NullS;
            memset(&lex->create_info, 0, sizeof(lex->create_info));
            lex->create_info.options=(yyvsp[(2) - (5)].num) | (yyvsp[(4) - (5)].num);
            lex->create_info.default_table_charset= NULL;
            lex->name.str= 0;
            lex->name.length= 0;
            lex->create_last_non_select_table= lex->last_table();
          }
    break;

  case 111:
#line 2330 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->current_select= &lex->select_lex; 
            if ((lex->create_info.used_fields & HA_CREATE_USED_ENGINE) &&
                !lex->create_info.db_type)
            {
              lex->create_info.db_type=
                lex->create_info.options & HA_LEX_CREATE_TMP_TABLE ?
                ha_default_temp_handlerton(thd) : ha_default_handlerton(thd);
              push_warning_printf(YYTHD, Sql_condition::WARN_LEVEL_WARN,
                                  ER_WARN_USING_OTHER_HANDLER,
                                  ER(ER_WARN_USING_OTHER_HANDLER),
                                  ha_resolve_storage_engine_name(lex->create_info.db_type),
                                  (yyvsp[(5) - (7)].table)->table.str);
            }
            create_table_set_open_action_and_adjust_tables(lex);
          }
    break;

  case 112:
#line 2349 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if (add_create_index_prepare(Lex, (yyvsp[(7) - (7)].table)))
              MYSQL_YYABORT;
          }
    break;

  case 113:
#line 2354 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if (add_create_index(Lex, (yyvsp[(2) - (12)].key_type), (yyvsp[(4) - (12)].lex_str)))
              MYSQL_YYABORT;
          }
    break;

  case 114:
#line 2360 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if (add_create_index_prepare(Lex, (yyvsp[(7) - (7)].table)))
              MYSQL_YYABORT;
          }
    break;

  case 115:
#line 2365 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if (add_create_index(Lex, (yyvsp[(2) - (12)].key_type), (yyvsp[(4) - (12)].lex_str)))
              MYSQL_YYABORT;
          }
    break;

  case 116:
#line 2371 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if (add_create_index_prepare(Lex, (yyvsp[(7) - (7)].table)))
              MYSQL_YYABORT;
          }
    break;

  case 117:
#line 2376 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if (add_create_index(Lex, (yyvsp[(2) - (12)].key_type), (yyvsp[(4) - (12)].lex_str)))
              MYSQL_YYABORT;
          }
    break;

  case 118:
#line 2381 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->create_info.default_table_charset= NULL;
            Lex->create_info.used_fields= 0;
          }
    break;

  case 119:
#line 2386 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CREATE_DB;
            lex->name= (yyvsp[(4) - (6)].lex_str);
            lex->create_info.options=(yyvsp[(3) - (6)].num);
          }
    break;

  case 120:
#line 2393 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->create_view_mode= VIEW_CREATE_NEW;
            Lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED;
            Lex->create_view_suid= TRUE;
          }
    break;

  case 121:
#line 2399 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 122:
#line 2401 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_CREATE_USER;
          }
    break;

  case 123:
#line 2405 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->alter_tablespace_info->ts_cmd_type= CREATE_LOGFILE_GROUP;
          }
    break;

  case 124:
#line 2409 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->alter_tablespace_info->ts_cmd_type= CREATE_TABLESPACE;
          }
    break;

  case 125:
#line 2413 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_CREATE_SERVER;
          }
    break;

  case 126:
#line 2424 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->server_options.server_name= (yyvsp[(2) - (10)].lex_str).str;
            Lex->server_options.server_name_length= (yyvsp[(2) - (10)].lex_str).length;
            Lex->server_options.scheme= (yyvsp[(6) - (10)].lex_str).str;
          }
    break;

  case 129:
#line 2438 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->server_options.username= (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 130:
#line 2442 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->server_options.host= (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 131:
#line 2446 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->server_options.db= (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 132:
#line 2450 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->server_options.owner= (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 133:
#line 2454 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->server_options.password= (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 134:
#line 2458 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->server_options.socket= (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 135:
#line 2462 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->server_options.port= (yyvsp[(2) - (2)].ulong_num);
          }
    break;

  case 136:
#line 2469 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex=Lex;

            lex->stmt_definition_begin= (yyvsp[(1) - (4)].simple_string);
            lex->create_info.options= (yyvsp[(3) - (4)].num);
            if (!(lex->event_parse_data= Event_parse_data::new_instance(thd)))
              MYSQL_YYABORT;
            lex->event_parse_data->identifier= (yyvsp[(4) - (4)].spname);
            lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;

            lex->sql_command= SQLCOM_CREATE_EVENT;
            /* We need that for disallowing subqueries */
          }
    break;

  case 137:
#line 2489 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_CREATE_EVENT;
          }
    break;

  case 138:
#line 2500 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->item_expression= (yyvsp[(2) - (3)].item);
            Lex->event_parse_data->interval= (yyvsp[(3) - (3)].interval);
          }
    break;

  case 140:
#line 2507 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->item_execute_at= (yyvsp[(2) - (2)].item);
          }
    break;

  case 141:
#line 2513 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 142:
#line 2515 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->status= Event_parse_data::ENABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
    break;

  case 143:
#line 2521 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->status= Event_parse_data::SLAVESIDE_DISABLED;
            Lex->event_parse_data->status_changed= true; 
            (yyval.num)= 1;
          }
    break;

  case 144:
#line 2527 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->status= Event_parse_data::DISABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
    break;

  case 145:
#line 2536 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Item *item= new (YYTHD->mem_root) Item_func_now_local(0);
            if (item == NULL)
              MYSQL_YYABORT;
            Lex->event_parse_data->item_starts= item;
          }
    break;

  case 146:
#line 2543 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->item_starts= (yyvsp[(2) - (2)].item);
          }
    break;

  case 148:
#line 2551 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->item_ends= (yyvsp[(2) - (2)].item);
          }
    break;

  case 149:
#line 2557 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 151:
#line 2563 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_PRESERVE;
            (yyval.num)= 1;
          }
    break;

  case 152:
#line 2569 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;
            (yyval.num)= 1;
          }
    break;

  case 153:
#line 2577 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 154:
#line 2579 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->comment= Lex->event_parse_data->comment= (yyvsp[(2) - (2)].lex_str);
            (yyval.num)= 1;
          }
    break;

  case 155:
#line 2586 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;

            /*
              This stops the following :
              - CREATE EVENT ... DO CREATE EVENT ...;
              - ALTER  EVENT ... DO CREATE EVENT ...;
              - CREATE EVENT ... DO ALTER EVENT DO ....;
              - CREATE PROCEDURE ... BEGIN CREATE EVENT ... END|
              This allows:
              - CREATE EVENT ... DO DROP EVENT yyy;
              - CREATE EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO DROP EVENT yyy;
              - CREATE PROCEDURE ... BEGIN ALTER EVENT ... END|
                (the nested ALTER EVENT can have anything but DO clause)
              - CREATE PROCEDURE ... BEGIN DROP EVENT ... END|
            */
            if (lex->sphead)
            {
              my_error(ER_EVENT_RECURSION_FORBIDDEN, MYF(0));
              MYSQL_YYABORT;
            }
              
            if (!(lex->sphead= new sp_head()))
              MYSQL_YYABORT;

            lex->sphead->reset_thd_mem_root(thd);
            lex->sphead->init(lex);
            lex->sphead->init_sp_name(thd, lex->event_parse_data->identifier);

            lex->sphead->m_type= TYPE_ENUM_PROCEDURE;

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
            lex->sphead->m_chistics= &lex->sp_chistics;

            lex->sphead->set_body_start(thd, lip->get_cpp_ptr());
          }
    break;

  case 156:
#line 2629 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            /* return back to the original memory root ASAP */
            lex->sphead->set_stmt_end(thd);
            lex->sphead->restore_thd_mem_root(thd);

            lex->sp_chistics.suid= SP_IS_SUID;  //always the definer!

            lex->event_parse_data->body_changed= TRUE;
          }
    break;

  case 170:
#line 2661 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
           LEX *lex=Lex;
           lex->users_list.empty();
           lex->columns.empty();
           lex->grant= lex->grant_tot_col= 0;
           lex->all_privileges= 0;
           lex->select_lex.db= 0;
           lex->ssl_type= SSL_TYPE_NOT_SPECIFIED;
           lex->ssl_cipher= lex->x509_subject= lex->x509_issuer= 0;
           memset(&(lex->mqh), 0, sizeof(lex->mqh));
         }
    break;

  case 171:
#line 2676 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if (!(yyvsp[(1) - (3)].lex_str).str || check_and_convert_db_name(&(yyvsp[(1) - (3)].lex_str), FALSE))
            {
              my_error(ER_WRONG_DB_NAME, MYF(0), (yyvsp[(1) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }
            if (check_routine_name(&(yyvsp[(3) - (3)].lex_str)))
            {
              MYSQL_YYABORT;
            }
            (yyval.spname)= new sp_name((yyvsp[(1) - (3)].lex_str), (yyvsp[(3) - (3)].lex_str), true);
            if ((yyval.spname) == NULL)
              MYSQL_YYABORT;
            (yyval.spname)->init_qname(YYTHD);
          }
    break;

  case 172:
#line 2692 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            LEX_STRING db;
            if (check_routine_name(&(yyvsp[(1) - (1)].lex_str)))
            {
              MYSQL_YYABORT;
            }
            if (lex->copy_db_to(&db.str, &db.length))
              MYSQL_YYABORT;
            (yyval.spname)= new sp_name(db, (yyvsp[(1) - (1)].lex_str), false);
            if ((yyval.spname) == NULL)
              MYSQL_YYABORT;
            (yyval.spname)->init_qname(thd);
          }
    break;

  case 173:
#line 2710 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 174:
#line 2711 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 175:
#line 2715 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 176:
#line 2716 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 177:
#line 2722 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->sp_chistics.comment= (yyvsp[(2) - (2)].lex_str); }
    break;

  case 178:
#line 2724 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { /* Just parse it, we only have one language for now. */ }
    break;

  case 179:
#line 2726 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->sp_chistics.daccess= SP_NO_SQL; }
    break;

  case 180:
#line 2728 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->sp_chistics.daccess= SP_CONTAINS_SQL; }
    break;

  case 181:
#line 2730 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->sp_chistics.daccess= SP_READS_SQL_DATA; }
    break;

  case 182:
#line 2732 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->sp_chistics.daccess= SP_MODIFIES_SQL_DATA; }
    break;

  case 183:
#line 2734 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 184:
#line 2739 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { }
    break;

  case 185:
#line 2740 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->sp_chistics.detistic= TRUE; }
    break;

  case 186:
#line 2741 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->sp_chistics.detistic= FALSE; }
    break;

  case 187:
#line 2746 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->sp_chistics.suid= SP_IS_SUID;
          }
    break;

  case 188:
#line 2750 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->sp_chistics.suid= SP_IS_NOT_SUID;
          }
    break;

  case 189:
#line 2757 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex = Lex;

            lex->sql_command= SQLCOM_CALL;
            lex->spname= (yyvsp[(2) - (2)].spname);
            lex->value_list.empty();
            sp_add_used_routine(lex, YYTHD, (yyvsp[(2) - (2)].spname), TYPE_ENUM_PROCEDURE);
          }
    break;

  case 190:
#line 2765 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 195:
#line 2781 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
           Lex->value_list.push_back((yyvsp[(3) - (3)].item));
          }
    break;

  case 196:
#line 2785 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->value_list.push_back((yyvsp[(1) - (1)].item));
          }
    break;

  case 201:
#line 2803 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            lex->length= 0;
            lex->dec= 0;
            lex->type= 0;

            lex->default_value= 0;
            lex->on_update_value= 0;

            lex->comment= null_lex_str;
            lex->charset= NULL;

            lex->interval_list.empty();
            lex->uint_geom_type= 0;
          }
    break;

  case 202:
#line 2823 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_pcontext *spc= lex->spcont;

            if (spc->find_variable((yyvsp[(1) - (3)].lex_str), TRUE))
            {
              my_error(ER_SP_DUP_PARAM, MYF(0), (yyvsp[(1) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }

            sp_variable *spvar= spc->add_variable(YYTHD,
                                                  (yyvsp[(1) - (3)].lex_str),
                                                  (enum enum_field_types) (yyvsp[(3) - (3)].num),
                                                  sp_variable::MODE_IN);

            if (lex->sphead->fill_field_definition(YYTHD, lex,
                                                   (enum enum_field_types) (yyvsp[(3) - (3)].num),
                                                   &spvar->field_def))
            {
              MYSQL_YYABORT;
            }
            spvar->field_def.field_name= spvar->name.str;
            spvar->field_def.pack_flag |= FIELDFLAG_MAYBE_NULL;
          }
    break;

  case 207:
#line 2862 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_pcontext *spc= lex->spcont;

            if (spc->find_variable((yyvsp[(3) - (4)].lex_str), TRUE))
            {
              my_error(ER_SP_DUP_PARAM, MYF(0), (yyvsp[(3) - (4)].lex_str).str);
              MYSQL_YYABORT;
            }
            sp_variable *spvar= spc->add_variable(YYTHD,
                                                  (yyvsp[(3) - (4)].lex_str),
                                                  (enum enum_field_types) (yyvsp[(4) - (4)].num),
                                                  (sp_variable::enum_mode) (yyvsp[(1) - (4)].num));

            if (lex->sphead->fill_field_definition(YYTHD, lex,
                                                   (enum enum_field_types) (yyvsp[(4) - (4)].num),
                                                   &spvar->field_def))
            {
              MYSQL_YYABORT;
            }
            spvar->field_def.field_name= spvar->name.str;
            spvar->field_def.pack_flag |= FIELDFLAG_MAYBE_NULL;
          }
    break;

  case 208:
#line 2888 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)= sp_variable::MODE_IN; }
    break;

  case 209:
#line 2889 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)= sp_variable::MODE_IN; }
    break;

  case 210:
#line 2890 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)= sp_variable::MODE_OUT; }
    break;

  case 211:
#line 2891 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)= sp_variable::MODE_INOUT; }
    break;

  case 212:
#line 2895 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 214:
#line 2900 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 216:
#line 2906 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
          }
    break;

  case 217:
#line 2910 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            /* We check for declarations out of (standard) order this way
              because letting the grammar rules reflect it caused tricky
               shift/reduce conflicts with the wrong result. (And we get
               better error handling this way.) */
            if (((yyvsp[(2) - (3)].spblock).vars || (yyvsp[(2) - (3)].spblock).conds) && ((yyvsp[(1) - (3)].spblock).curs || (yyvsp[(1) - (3)].spblock).hndlrs))
            { /* Variable or condition following cursor or handler */
              my_message(ER_SP_VARCOND_AFTER_CURSHNDLR,
                         ER(ER_SP_VARCOND_AFTER_CURSHNDLR), MYF(0));
              MYSQL_YYABORT;
            }
            if ((yyvsp[(2) - (3)].spblock).curs && (yyvsp[(1) - (3)].spblock).hndlrs)
            { /* Cursor following handler */
              my_message(ER_SP_CURSOR_AFTER_HANDLER,
                         ER(ER_SP_CURSOR_AFTER_HANDLER), MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.spblock).vars= (yyvsp[(1) - (3)].spblock).vars + (yyvsp[(2) - (3)].spblock).vars;
            (yyval.spblock).conds= (yyvsp[(1) - (3)].spblock).conds + (yyvsp[(2) - (3)].spblock).conds;
            (yyval.spblock).hndlrs= (yyvsp[(1) - (3)].spblock).hndlrs + (yyvsp[(2) - (3)].spblock).hndlrs;
            (yyval.spblock).curs= (yyvsp[(1) - (3)].spblock).curs + (yyvsp[(2) - (3)].spblock).curs;
          }
    break;

  case 218:
#line 2936 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            lex->sphead->reset_lex(YYTHD);
            lex->spcont->declare_var_boundary((yyvsp[(2) - (2)].num));
          }
    break;

  case 219:
#line 2944 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->spcont;
            uint num_vars= pctx->context_var_count();
            enum enum_field_types var_type= (enum enum_field_types) (yyvsp[(4) - (5)].num);
            Item *dflt_value_item= (yyvsp[(5) - (5)].item);
            
            if (!dflt_value_item)
            {
              dflt_value_item= new (thd->mem_root) Item_null();
              if (dflt_value_item == NULL)
                MYSQL_YYABORT;
              /* QQ Set to the var_type with null_value? */
            }
            
            for (uint i = num_vars-(yyvsp[(2) - (5)].num) ; i < num_vars ; i++)
            {
              uint var_idx= pctx->var_context2runtime(i);
              sp_variable *spvar= pctx->find_variable(var_idx);
            
              if (!spvar)
                MYSQL_YYABORT;
            
              spvar->type= var_type;
              spvar->default_value= dflt_value_item;
            
              if (lex->sphead->fill_field_definition(YYTHD, lex, var_type,
                                                     &spvar->field_def))
              {
                MYSQL_YYABORT;
              }
            
              spvar->field_def.field_name= spvar->name.str;
              spvar->field_def.pack_flag |= FIELDFLAG_MAYBE_NULL;
            
              /* The last instruction is responsible for freeing LEX. */

              sp_instr_set *is= new sp_instr_set(lex->sphead->instructions(),
                                                 pctx,
                                                 var_idx,
                                                 dflt_value_item,
                                                 var_type,
                                                 lex,
                                                 (i == num_vars - 1));
              if (is == NULL ||
                  lex->sphead->add_instr(is))
                MYSQL_YYABORT;
            }

            pctx->declare_var_boundary(0);
            if (lex->sphead->restore_lex(YYTHD))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyvsp[(2) - (5)].num);
            (yyval.spblock).conds= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
          }
    break;

  case 220:
#line 3001 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_pcontext *spc= lex->spcont;

            if (spc->find_condition((yyvsp[(2) - (5)].lex_str), TRUE))
            {
              my_error(ER_SP_DUP_COND, MYF(0), (yyvsp[(2) - (5)].lex_str).str);
              MYSQL_YYABORT;
            }
            if(spc->add_condition(YYTHD, (yyvsp[(2) - (5)].lex_str), (yyvsp[(5) - (5)].spcondvalue)))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
            (yyval.spblock).conds= 1;
          }
    break;

  case 221:
#line 3016 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            sp_handler *h= lex->spcont->add_handler(thd,
                                                    (sp_handler::enum_type) (yyvsp[(2) - (4)].num));

            lex->spcont= lex->spcont->push_context(thd,
                                                   sp_pcontext::HANDLER_SCOPE);

            sp_pcontext *ctx= lex->spcont;
            sp_instr_hpush_jump *i=
              new sp_instr_hpush_jump(sp->instructions(), ctx, h);

            if (i == NULL || sp->add_instr(i))
              MYSQL_YYABORT;

            /* For continue handlers, mark end of handler scope. */
            if ((yyvsp[(2) - (4)].num) == sp_handler::CONTINUE &&
                sp->push_backpatch(i, ctx->last_label()))
              MYSQL_YYABORT;

            if (sp->push_backpatch(i, ctx->push_label(thd, EMPTY_STR, 0)))
              MYSQL_YYABORT;
          }
    break;

  case 222:
#line 3043 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *ctx= lex->spcont;
            sp_label *hlab= lex->spcont->pop_label(); /* After this hdlr */
            sp_instr_hreturn *i;

            if ((yyvsp[(2) - (7)].num) == sp_handler::CONTINUE)
            {
              i= new sp_instr_hreturn(sp->instructions(), ctx);
              if (i == NULL ||
                  sp->add_instr(i))
                MYSQL_YYABORT;
            }
            else
            {  /* EXIT or UNDO handler, just jump to the end of the block */
              i= new sp_instr_hreturn(sp->instructions(), ctx);
              if (i == NULL ||
                  sp->add_instr(i) ||
                  sp->push_backpatch(i, lex->spcont->last_label())) /* Block end */
                MYSQL_YYABORT;
            }
            lex->sphead->backpatch(hlab);

            lex->spcont= ctx->pop_context();

            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).curs= 0;
            (yyval.spblock).hndlrs= 1;
          }
    break;

  case 223:
#line 3073 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *ctx= lex->spcont;
            uint offp;
            sp_instr_cpush *i;

            if (ctx->find_cursor((yyvsp[(2) - (5)].lex_str), &offp, TRUE))
            {
              my_error(ER_SP_DUP_CURS, MYF(0), (yyvsp[(2) - (5)].lex_str).str);
              delete (yyvsp[(5) - (5)].lex);
              MYSQL_YYABORT;
            }
            i= new sp_instr_cpush(sp->instructions(), ctx, (yyvsp[(5) - (5)].lex),
                                  ctx->current_cursor_count());
            if (i == NULL ||
                sp->add_instr(i) ||
                ctx->add_cursor((yyvsp[(2) - (5)].lex_str)))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= 0;
            (yyval.spblock).curs= 1;
          }
    break;

  case 224:
#line 3098 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->sphead->reset_lex(YYTHD);
          }
    break;

  case 225:
#line 3102 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            DBUG_ASSERT(lex->sql_command == SQLCOM_SELECT);

            if (lex->result)
            {
              my_message(ER_SP_BAD_CURSOR_SELECT, ER(ER_SP_BAD_CURSOR_SELECT),
                         MYF(0));
              MYSQL_YYABORT;
            }
            lex->sp_lex_in_use= TRUE;
            (yyval.lex)= lex;
            if (lex->sphead->restore_lex(YYTHD))
              MYSQL_YYABORT;
          }
    break;

  case 226:
#line 3121 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)= sp_handler::EXIT; }
    break;

  case 227:
#line 3122 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)= sp_handler::CONTINUE; }
    break;

  case 228:
#line 3128 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 229:
#line 3130 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)+= 1; }
    break;

  case 230:
#line 3135 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *ctx= lex->spcont->parent_context();

            if (ctx->check_duplicate_handler((yyvsp[(1) - (1)].spcondvalue)))
            {
              my_message(ER_SP_DUP_HANDLER, ER(ER_SP_DUP_HANDLER), MYF(0));
              MYSQL_YYABORT;
            }
            else
            {
              sp_instr_hpush_jump *i=
                (sp_instr_hpush_jump *)sp->last_instruction();

              i->add_condition((yyvsp[(1) - (1)].spcondvalue));
            }
          }
    break;

  case 231:
#line 3157 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { /* mysql errno */
            if ((yyvsp[(1) - (1)].ulong_num) == 0)
            {
              my_error(ER_WRONG_VALUE, MYF(0), "CONDITION", "0");
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= new (YYTHD->mem_root) sp_condition_value((yyvsp[(1) - (1)].ulong_num));
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 233:
#line 3172 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { /* SQLSTATE */

            /*
              An error is triggered:
                - if the specified string is not a valid SQLSTATE,
                - or if it represents the completion condition -- it is not
                  allowed to SIGNAL, or declare a handler for the completion
                  condition.
            */
            if (!is_sqlstate_valid(&(yyvsp[(3) - (3)].lex_str)) || is_sqlstate_completion((yyvsp[(3) - (3)].lex_str).str))
            {
              my_error(ER_SP_BAD_SQLSTATE, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= new (YYTHD->mem_root) sp_condition_value((yyvsp[(3) - (3)].lex_str).str);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 234:
#line 3193 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 235:
#line 3194 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 236:
#line 3199 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.spcondvalue)= (yyvsp[(1) - (1)].spcondvalue);
          }
    break;

  case 237:
#line 3203 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.spcondvalue)= Lex->spcont->find_condition((yyvsp[(1) - (1)].lex_str), false);
            if ((yyval.spcondvalue) == NULL)
            {
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 238:
#line 3212 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.spcondvalue)= new (YYTHD->mem_root) sp_condition_value(sp_condition_value::WARNING);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 239:
#line 3218 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.spcondvalue)= new (YYTHD->mem_root) sp_condition_value(sp_condition_value::NOT_FOUND);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 240:
#line 3224 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.spcondvalue)= new (YYTHD->mem_root) sp_condition_value(sp_condition_value::EXCEPTION);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 241:
#line 3233 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            Yacc_state *state= & thd->m_parser_state->m_yacc;

            lex->sql_command= SQLCOM_SIGNAL;
            lex->m_sql_cmd=
              new (thd->mem_root) Sql_cmd_signal((yyvsp[(2) - (3)].spcondvalue), state->m_set_signal_info);
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 242:
#line 3248 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_condition_value *cond;
            if (lex->spcont == NULL)
            {
              /* SIGNAL foo cannot be used outside of stored programs */
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
            cond= lex->spcont->find_condition((yyvsp[(1) - (1)].lex_str), false);
            if (cond == NULL)
            {
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
            if (cond->type != sp_condition_value::SQLSTATE)
            {
              my_error(ER_SIGNAL_BAD_CONDITION_TYPE, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= cond;
          }
    break;

  case 243:
#line 3271 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.spcondvalue)= (yyvsp[(1) - (1)].spcondvalue); }
    break;

  case 244:
#line 3276 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.spcondvalue)= NULL; }
    break;

  case 245:
#line 3278 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.spcondvalue)= (yyvsp[(1) - (1)].spcondvalue); }
    break;

  case 246:
#line 3283 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            YYTHD->m_parser_state->m_yacc.m_set_signal_info.clear();
          }
    break;

  case 248:
#line 3291 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Set_signal_information *info;
            info= & YYTHD->m_parser_state->m_yacc.m_set_signal_info;
            int index= (int) (yyvsp[(1) - (3)].diag_condition_item_name);
            info->clear();
            info->m_item[index]= (yyvsp[(3) - (3)].item);
          }
    break;

  case 249:
#line 3300 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Set_signal_information *info;
            info= & YYTHD->m_parser_state->m_yacc.m_set_signal_info;
            int index= (int) (yyvsp[(3) - (5)].diag_condition_item_name);
            if (info->m_item[index] != NULL)
            {
              my_error(ER_DUP_SIGNAL_SET, MYF(0),
                       Diag_condition_item_names[index].str);
              MYSQL_YYABORT;
            }
            info->m_item[index]= (yyvsp[(5) - (5)].item);
          }
    break;

  case 250:
#line 3319 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].item); }
    break;

  case 251:
#line 3321 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (1)].item)->type() == Item::FUNC_ITEM)
            {
              Item_func *item= (Item_func*) (yyvsp[(1) - (1)].item);
              if (item->functype() == Item_func::SUSERVAR_FUNC)
              {
                /*
                  Don't allow the following syntax:
                    SIGNAL/RESIGNAL ...
                    SET <signal condition item name> = @foo := expr
                */
                my_parse_error(ER(ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
              }
            }
            (yyval.item)= (yyvsp[(1) - (1)].item);
          }
    break;

  case 252:
#line 3339 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].item); }
    break;

  case 253:
#line 3345 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.diag_condition_item_name)= DIAG_CLASS_ORIGIN; }
    break;

  case 254:
#line 3347 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.diag_condition_item_name)= DIAG_SUBCLASS_ORIGIN; }
    break;

  case 255:
#line 3349 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.diag_condition_item_name)= DIAG_CONSTRAINT_CATALOG; }
    break;

  case 256:
#line 3351 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.diag_condition_item_name)= DIAG_CONSTRAINT_SCHEMA; }
    break;

  case 257:
#line 3353 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.diag_condition_item_name)= DIAG_CONSTRAINT_NAME; }
    break;

  case 258:
#line 3355 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.diag_condition_item_name)= DIAG_CATALOG_NAME; }
    break;

  case 259:
#line 3357 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.diag_condition_item_name)= DIAG_SCHEMA_NAME; }
    break;

  case 260:
#line 3359 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.diag_condition_item_name)= DIAG_TABLE_NAME; }
    break;

  case 261:
#line 3361 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.diag_condition_item_name)= DIAG_COLUMN_NAME; }
    break;

  case 262:
#line 3363 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.diag_condition_item_name)= DIAG_CURSOR_NAME; }
    break;

  case 263:
#line 3365 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.diag_condition_item_name)= DIAG_MESSAGE_TEXT; }
    break;

  case 264:
#line 3367 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.diag_condition_item_name)= DIAG_MYSQL_ERRNO; }
    break;

  case 265:
#line 3372 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            Yacc_state *state= & thd->m_parser_state->m_yacc;

            lex->sql_command= SQLCOM_RESIGNAL;
            lex->m_sql_cmd=
              new (thd->mem_root) Sql_cmd_resignal((yyvsp[(2) - (3)].spcondvalue),
                                                   state->m_set_signal_info);
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 266:
#line 3388 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Diagnostics_information *info= (yyvsp[(4) - (4)].diag_info);

            info->set_which_da((yyvsp[(2) - (4)].diag_area));

            Lex->sql_command= SQLCOM_GET_DIAGNOSTICS;
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_get_diagnostics(info);

            if (Lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 267:
#line 3403 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
    break;

  case 268:
#line 3405 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
    break;

  case 269:
#line 3410 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.diag_info)= new (YYTHD->mem_root) Statement_information((yyvsp[(1) - (1)].stmt_info_list));
            if ((yyval.diag_info) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 270:
#line 3416 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.diag_info)= new (YYTHD->mem_root) Condition_information((yyvsp[(2) - (3)].item), (yyvsp[(3) - (3)].cond_info_list));
            if ((yyval.diag_info) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 271:
#line 3425 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.stmt_info_list)= new (YYTHD->mem_root) List<Statement_information_item>;
            if ((yyval.stmt_info_list) == NULL || (yyval.stmt_info_list)->push_back((yyvsp[(1) - (1)].stmt_info_item)))
              MYSQL_YYABORT;
          }
    break;

  case 272:
#line 3431 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].stmt_info_list)->push_back((yyvsp[(3) - (3)].stmt_info_item)))
              MYSQL_YYABORT;
            (yyval.stmt_info_list)= (yyvsp[(1) - (3)].stmt_info_list);
          }
    break;

  case 273:
#line 3440 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.stmt_info_item)= new (YYTHD->mem_root) Statement_information_item((yyvsp[(3) - (3)].stmt_info_item_name), (yyvsp[(1) - (3)].item));
            if ((yyval.stmt_info_item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 274:
#line 3448 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex_input_stream *lip= &YYTHD->m_parser_state->m_lip;
            (yyval.item)= create_item_for_sp_var(YYTHD, (yyvsp[(1) - (1)].lex_str), NULL,
                                       lip->get_tok_start(), lip->get_ptr());
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 275:
#line 3456 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_get_user_var((yyvsp[(2) - (2)].lex_str));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 276:
#line 3465 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.stmt_info_item_name)= Statement_information_item::NUMBER; }
    break;

  case 277:
#line 3467 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.stmt_info_item_name)= Statement_information_item::ROW_COUNT; }
    break;

  case 278:
#line 3476 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].item); }
    break;

  case 279:
#line 3481 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.cond_info_list)= new (YYTHD->mem_root) List<Condition_information_item>;
            if ((yyval.cond_info_list) == NULL || (yyval.cond_info_list)->push_back((yyvsp[(1) - (1)].cond_info_item)))
              MYSQL_YYABORT;
          }
    break;

  case 280:
#line 3487 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if ((yyvsp[(1) - (3)].cond_info_list)->push_back((yyvsp[(3) - (3)].cond_info_item)))
              MYSQL_YYABORT;
            (yyval.cond_info_list)= (yyvsp[(1) - (3)].cond_info_list);
          }
    break;

  case 281:
#line 3496 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.cond_info_item)= new (YYTHD->mem_root) Condition_information_item((yyvsp[(3) - (3)].cond_info_item_name), (yyvsp[(1) - (3)].item));
            if ((yyval.cond_info_item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 282:
#line 3504 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::CLASS_ORIGIN; }
    break;

  case 283:
#line 3506 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::SUBCLASS_ORIGIN; }
    break;

  case 284:
#line 3508 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_CATALOG; }
    break;

  case 285:
#line 3510 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_SCHEMA; }
    break;

  case 286:
#line 3512 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_NAME; }
    break;

  case 287:
#line 3514 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::CATALOG_NAME; }
    break;

  case 288:
#line 3516 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::SCHEMA_NAME; }
    break;

  case 289:
#line 3518 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::TABLE_NAME; }
    break;

  case 290:
#line 3520 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::COLUMN_NAME; }
    break;

  case 291:
#line 3522 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::CURSOR_NAME; }
    break;

  case 292:
#line 3524 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::MESSAGE_TEXT; }
    break;

  case 293:
#line 3526 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::MYSQL_ERRNO; }
    break;

  case 294:
#line 3528 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.cond_info_item_name)= Condition_information_item::RETURNED_SQLSTATE; }
    break;

  case 295:
#line 3533 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            /* NOTE: field definition is filled in sp_decl section. */

            LEX *lex= Lex;
            sp_pcontext *spc= lex->spcont;

            if (spc->find_variable((yyvsp[(1) - (1)].lex_str), TRUE))
            {
              my_error(ER_SP_DUP_VAR, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
            spc->add_variable(YYTHD,
                              (yyvsp[(1) - (1)].lex_str),
                              MYSQL_TYPE_DECIMAL,
                              sp_variable::MODE_IN);
            (yyval.num)= 1;
          }
    break;

  case 296:
#line 3551 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            /* NOTE: field definition is filled in sp_decl section. */

            LEX *lex= Lex;
            sp_pcontext *spc= lex->spcont;

            if (spc->find_variable((yyvsp[(3) - (3)].lex_str), TRUE))
            {
              my_error(ER_SP_DUP_VAR, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }
            spc->add_variable(YYTHD,
                              (yyvsp[(3) - (3)].lex_str),
                              MYSQL_TYPE_DECIMAL,
                              sp_variable::MODE_IN);
            (yyval.num)= (yyvsp[(1) - (3)].num) + 1;
          }
    break;

  case 297:
#line 3571 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.item) = NULL; }
    break;

  case 298:
#line 3572 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.item) = (yyvsp[(2) - (2)].item); }
    break;

  case 312:
#line 3593 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->sphead->new_cont_backpatch(NULL); }
    break;

  case 313:
#line 3595 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->sphead->do_cont_backpatch(); }
    break;

  case 314:
#line 3599 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;

            lex->sphead->reset_lex(thd);
            lex->sphead->m_tmp_query= lip->get_tok_start();
          }
    break;

  case 315:
#line 3608 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;
            sp_head *sp= lex->sphead;

            sp->m_flags|= sp_get_flags_for_command(lex);
            if (lex->sql_command == SQLCOM_CHANGE_DB)
            { /* "USE db" doesn't work in a procedure */
              my_error(ER_SP_BADSTATEMENT, MYF(0), "USE");
              MYSQL_YYABORT;
            }
            /*
              Don't add an instruction for SET statements, since all
              instructions for them were already added during processing
              of "set" rule.
            */
            DBUG_ASSERT(lex->sql_command != SQLCOM_SET_OPTION ||
                        lex->var_list.is_empty());
            if (lex->sql_command != SQLCOM_SET_OPTION)
            {
              sp_instr_stmt *i=new sp_instr_stmt(sp->instructions(),
                                                 lex->spcont, lex);
              if (i == NULL)
                MYSQL_YYABORT;

              /*
                Extract the query statement from the tokenizer.  The
                end is either lex->ptr, if there was no lookahead,
                lex->tok_end otherwise.
              */
              if (yychar == YYEMPTY)
                i->m_query.length= lip->get_ptr() - sp->m_tmp_query;
              else
                i->m_query.length= lip->get_tok_end() - sp->m_tmp_query;
              if (!(i->m_query.str= strmake_root(thd->mem_root,
                                                 sp->m_tmp_query,
                                                 i->m_query.length)) ||
                    sp->add_instr(i))
                MYSQL_YYABORT;
            }
            if (sp->restore_lex(thd))
              MYSQL_YYABORT;
          }
    break;

  case 316:
#line 3656 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->sphead->reset_lex(YYTHD); }
    break;

  case 317:
#line 3658 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            if (sp->m_type != TYPE_ENUM_FUNCTION)
            {
              my_message(ER_SP_BADRETURN, ER(ER_SP_BADRETURN), MYF(0));
              MYSQL_YYABORT;
            }
            else
            {
              sp_instr_freturn *i;

              i= new sp_instr_freturn(sp->instructions(), lex->spcont, (yyvsp[(3) - (3)].item),
                                      sp->m_return_field_def.sql_type, lex);
              if (i == NULL ||
                  sp->add_instr(i))
                MYSQL_YYABORT;
              sp->m_flags|= sp_head::HAS_RETURN;
            }
            if (sp->restore_lex(YYTHD))
              MYSQL_YYABORT;
          }
    break;

  case 318:
#line 3684 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { /* Unlabeled controls get a secret label. */
            LEX *lex= Lex;

            lex->spcont->push_label(YYTHD,
                                    EMPTY_STR,
                                    lex->sphead->instructions());
          }
    break;

  case 319:
#line 3692 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            lex->sphead->backpatch(lex->spcont->pop_label());
          }
    break;

  case 320:
#line 3701 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp = lex->sphead;
            sp_pcontext *ctx= lex->spcont;
            sp_label *lab= ctx->find_label((yyvsp[(2) - (2)].lex_str));

            if (! lab)
            {
              my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "LEAVE", (yyvsp[(2) - (2)].lex_str).str);
              MYSQL_YYABORT;
            }
            else
            {
              sp_instr_jump *i;
              uint ip= sp->instructions();
              uint n;
              /*
                When jumping to a BEGIN-END block end, the target jump
                points to the block hpop/cpop cleanup instructions,
                so we should exclude the block context here.
                When jumping to something else (i.e., sp_label::ITERATION),
                there are no hpop/cpop at the jump destination,
                so we should include the block context here for cleanup.
              */
              bool exclusive= (lab->type == sp_label::BEGIN);

              n= ctx->diff_handlers(lab->ctx, exclusive);
              if (n)
              {
                sp_instr_hpop *hpop= new sp_instr_hpop(ip++, ctx, n);
                if (hpop == NULL)
                  MYSQL_YYABORT;
                sp->add_instr(hpop);
              }
              n= ctx->diff_cursors(lab->ctx, exclusive);
              if (n)
              {
                sp_instr_cpop *cpop= new sp_instr_cpop(ip++, ctx, n);
                if (cpop == NULL)
                  MYSQL_YYABORT;
                sp->add_instr(cpop);
              }
              i= new sp_instr_jump(ip, ctx);
              if (i == NULL)
                MYSQL_YYABORT;
              sp->push_backpatch(i, lab);  /* Jumping forward */
              sp->add_instr(i);
            }
          }
    break;

  case 321:
#line 3754 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *ctx= lex->spcont;
            sp_label *lab= ctx->find_label((yyvsp[(2) - (2)].lex_str));

            if (! lab || lab->type != sp_label::ITERATION)
            {
              my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "ITERATE", (yyvsp[(2) - (2)].lex_str).str);
              MYSQL_YYABORT;
            }
            else
            {
              sp_instr_jump *i;
              uint ip= sp->instructions();
              uint n;

              n= ctx->diff_handlers(lab->ctx, FALSE);  /* Inclusive the dest. */
              if (n)
              {
                sp_instr_hpop *hpop= new sp_instr_hpop(ip++, ctx, n);
                if (hpop == NULL ||
                    sp->add_instr(hpop))
                  MYSQL_YYABORT;
              }
              n= ctx->diff_cursors(lab->ctx, FALSE);  /* Inclusive the dest. */
              if (n)
              {
                sp_instr_cpop *cpop= new sp_instr_cpop(ip++, ctx, n);
                if (cpop == NULL ||
                    sp->add_instr(cpop))
                  MYSQL_YYABORT;
              }
              i= new sp_instr_jump(ip, ctx, lab->ip); /* Jump back */
              if (i == NULL ||
                  sp->add_instr(i))
                MYSQL_YYABORT;
            }
          }
    break;

  case 322:
#line 3797 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            uint offset;
            sp_instr_copen *i;

            if (! lex->spcont->find_cursor((yyvsp[(2) - (2)].lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[(2) - (2)].lex_str).str);
              MYSQL_YYABORT;
            }
            i= new sp_instr_copen(sp->instructions(), lex->spcont, offset);
            if (i == NULL ||
                sp->add_instr(i))
              MYSQL_YYABORT;
          }
    break;

  case 323:
#line 3817 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            uint offset;
            sp_instr_cfetch *i;

            if (! lex->spcont->find_cursor((yyvsp[(3) - (4)].lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[(3) - (4)].lex_str).str);
              MYSQL_YYABORT;
            }
            i= new sp_instr_cfetch(sp->instructions(), lex->spcont, offset);
            if (i == NULL ||
                sp->add_instr(i))
              MYSQL_YYABORT;
          }
    break;

  case 324:
#line 3834 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 325:
#line 3839 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            uint offset;
            sp_instr_cclose *i;

            if (! lex->spcont->find_cursor((yyvsp[(2) - (2)].lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[(2) - (2)].lex_str).str);
              MYSQL_YYABORT;
            }
            i= new sp_instr_cclose(sp->instructions(), lex->spcont,  offset);
            if (i == NULL ||
                sp->add_instr(i))
              MYSQL_YYABORT;
          }
    break;

  case 329:
#line 3865 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *spc= lex->spcont;
            sp_variable *spv;

            if (!spc || !(spv = spc->find_variable((yyvsp[(1) - (1)].lex_str), false)))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
            else
            {
              /* An SP local variable */
              sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();

              i->add_to_varlist(spv);
            }
          }
    break;

  case 330:
#line 3885 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *spc= lex->spcont;
            sp_variable *spv;

            if (!spc || !(spv = spc->find_variable((yyvsp[(3) - (3)].lex_str), false)))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }
            else
            {
              /* An SP local variable */
              sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();

              i->add_to_varlist(spv);
            }
          }
    break;

  case 331:
#line 3907 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->sphead->reset_lex(YYTHD); }
    break;

  case 332:
#line 3909 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *ctx= lex->spcont;
            uint ip= sp->instructions();
            sp_instr_jump_if_not *i = new sp_instr_jump_if_not(ip, ctx,
                                                               (yyvsp[(2) - (3)].item), lex);
            if (i == NULL ||
                sp->push_backpatch(i, ctx->push_label(YYTHD, EMPTY_STR, 0)) ||
                sp->add_cont_backpatch(i) ||
                sp->add_instr(i))
              MYSQL_YYABORT;
            if (sp->restore_lex(YYTHD))
              MYSQL_YYABORT;
          }
    break;

  case 333:
#line 3925 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            sp_head *sp= Lex->sphead;
            sp_pcontext *ctx= Lex->spcont;
            uint ip= sp->instructions();
            sp_instr_jump *i = new sp_instr_jump(ip, ctx);
            if (i == NULL ||
                sp->add_instr(i))
              MYSQL_YYABORT;
            sp->backpatch(ctx->pop_label());
            sp->push_backpatch(i, ctx->push_label(YYTHD, EMPTY_STR, 0));
          }
    break;

  case 334:
#line 3937 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            lex->sphead->backpatch(lex->spcont->pop_label());
          }
    break;

  case 340:
#line 3957 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            case_stmt_action_case(lex);
            lex->sphead->reset_lex(YYTHD); /* For expr $3 */
          }
    break;

  case 341:
#line 3963 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (case_stmt_action_expr(lex, (yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;

            /* For expr $3 */
            if (lex->sphead->restore_lex(YYTHD))
              MYSQL_YYABORT;
          }
    break;

  case 342:
#line 3976 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            case_stmt_action_end_case(lex, true);
          }
    break;

  case 343:
#line 3984 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            case_stmt_action_case(lex);
          }
    break;

  case 344:
#line 3992 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            case_stmt_action_end_case(lex, false);
          }
    break;

  case 349:
#line 4010 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->sphead->reset_lex(YYTHD); /* For expr $3 */
          }
    break;

  case 350:
#line 4014 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            /* Simple case: <caseval> = <whenval> */

            LEX *lex= Lex;
            if (case_stmt_action_when(lex, (yyvsp[(3) - (3)].item), true))
              MYSQL_YYABORT;
            /* For expr $3 */
            if (lex->sphead->restore_lex(YYTHD))
              MYSQL_YYABORT;
          }
    break;

  case 351:
#line 4026 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (case_stmt_action_then(lex))
              MYSQL_YYABORT;
          }
    break;

  case 352:
#line 4035 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->sphead->reset_lex(YYTHD); /* For expr $3 */
          }
    break;

  case 353:
#line 4039 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (case_stmt_action_when(lex, (yyvsp[(3) - (3)].item), false))
              MYSQL_YYABORT;
            /* For expr $3 */
            if (lex->sphead->restore_lex(YYTHD))
              MYSQL_YYABORT;
          }
    break;

  case 354:
#line 4049 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (case_stmt_action_then(lex))
              MYSQL_YYABORT;
          }
    break;

  case 355:
#line 4058 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            uint ip= sp->instructions();
            sp_instr_error *i= new sp_instr_error(ip, lex->spcont,
                                                  ER_SP_CASE_NOT_FOUND);
            if (i == NULL ||
                sp->add_instr(i))
              MYSQL_YYABORT;
          }
    break;

  case 357:
#line 4073 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_pcontext *ctx= lex->spcont;
            sp_label *lab= ctx->find_label((yyvsp[(1) - (2)].lex_str));

            if (lab)
            {
              my_error(ER_SP_LABEL_REDEFINE, MYF(0), (yyvsp[(1) - (2)].lex_str).str);
              MYSQL_YYABORT;
            }
            else
            {
              lab= lex->spcont->push_label(YYTHD, (yyvsp[(1) - (2)].lex_str), lex->sphead->instructions());
              lab->type= sp_label::ITERATION;
            }
          }
    break;

  case 358:
#line 4090 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_label *lab= lex->spcont->pop_label();

            if ((yyvsp[(5) - (5)].lex_str).str)
            {
              if (my_strcasecmp(system_charset_info, (yyvsp[(5) - (5)].lex_str).str, lab->name.str) != 0)
              {
                my_error(ER_SP_LABEL_MISMATCH, MYF(0), (yyvsp[(5) - (5)].lex_str).str);
                MYSQL_YYABORT;
              }
            }
            lex->sphead->backpatch(lab);
          }
    break;

  case 359:
#line 4107 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.lex_str)= null_lex_str; }
    break;

  case 360:
#line 4108 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str); }
    break;

  case 361:
#line 4113 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_pcontext *ctx= lex->spcont;
            sp_label *lab= ctx->find_label((yyvsp[(1) - (2)].lex_str));

            if (lab)
            {
              my_error(ER_SP_LABEL_REDEFINE, MYF(0), (yyvsp[(1) - (2)].lex_str).str);
              MYSQL_YYABORT;
            }

            lab= lex->spcont->push_label(YYTHD, (yyvsp[(1) - (2)].lex_str), lex->sphead->instructions());
            lab->type= sp_label::BEGIN;
          }
    break;

  case 362:
#line 4128 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_label *lab= lex->spcont->pop_label();

            if ((yyvsp[(5) - (5)].lex_str).str)
            {
              if (my_strcasecmp(system_charset_info, (yyvsp[(5) - (5)].lex_str).str, lab->name.str) != 0)
              {
                my_error(ER_SP_LABEL_MISMATCH, MYF(0), (yyvsp[(5) - (5)].lex_str).str);
                MYSQL_YYABORT;
              }
            }
          }
    break;

  case 363:
#line 4144 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { /* Unlabeled blocks get a secret label. */
            LEX *lex= Lex;
            uint ip= lex->sphead->instructions();
            sp_label *lab= lex->spcont->push_label(YYTHD, EMPTY_STR, ip);
            lab->type= sp_label::BEGIN;
          }
    break;

  case 364:
#line 4151 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->spcont->pop_label();
          }
    break;

  case 365:
#line 4159 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { /* QQ This is just a dummy for grouping declarations and statements
              together. No [[NOT] ATOMIC] yet, and we need to figure out how
              make it coexist with the existing BEGIN COMMIT/ROLLBACK. */
            LEX *lex= Lex;
            lex->spcont= lex->spcont->push_context(YYTHD,
                                                   sp_pcontext::REGULAR_SCOPE);
          }
    break;

  case 366:
#line 4169 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *ctx= lex->spcont;
            sp_instr *i;

            sp->backpatch(ctx->last_label()); /* We always have a label */
            if ((yyvsp[(3) - (5)].spblock).hndlrs)
            {
              i= new sp_instr_hpop(sp->instructions(), ctx, (yyvsp[(3) - (5)].spblock).hndlrs);
              if (i == NULL ||
                  sp->add_instr(i))
                MYSQL_YYABORT;
            }
            if ((yyvsp[(3) - (5)].spblock).curs)
            {
              i= new sp_instr_cpop(sp->instructions(), ctx, (yyvsp[(3) - (5)].spblock).curs);
              if (i == NULL ||
                  sp->add_instr(i))
                MYSQL_YYABORT;
            }
            lex->spcont= ctx->pop_context();
          }
    break;

  case 367:
#line 4197 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            uint ip= lex->sphead->instructions();
            sp_label *lab= lex->spcont->last_label();  /* Jumping back */
            sp_instr_jump *i = new sp_instr_jump(ip, lex->spcont, lab->ip);
            if (i == NULL ||
                lex->sphead->add_instr(i))
              MYSQL_YYABORT;
          }
    break;

  case 368:
#line 4207 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->sphead->reset_lex(YYTHD); }
    break;

  case 369:
#line 4209 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            uint ip= sp->instructions();
            sp_instr_jump_if_not *i = new sp_instr_jump_if_not(ip, lex->spcont,
                                                               (yyvsp[(3) - (4)].item), lex);
            if (i == NULL ||
                /* Jumping forward */
                sp->push_backpatch(i, lex->spcont->last_label()) ||
                sp->new_cont_backpatch(i) ||
                sp->add_instr(i))
              MYSQL_YYABORT;
            if (sp->restore_lex(YYTHD))
              MYSQL_YYABORT;
          }
    break;

  case 370:
#line 4225 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            uint ip= lex->sphead->instructions();
            sp_label *lab= lex->spcont->last_label();  /* Jumping back */
            sp_instr_jump *i = new sp_instr_jump(ip, lex->spcont, lab->ip);
            if (i == NULL ||
                lex->sphead->add_instr(i))
              MYSQL_YYABORT;
            lex->sphead->do_cont_backpatch();
          }
    break;

  case 371:
#line 4236 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->sphead->reset_lex(YYTHD); }
    break;

  case 372:
#line 4238 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            uint ip= lex->sphead->instructions();
            sp_label *lab= lex->spcont->last_label();  /* Jumping back */
            sp_instr_jump_if_not *i = new sp_instr_jump_if_not(ip, lex->spcont,
                                                               (yyvsp[(5) - (7)].item), lab->ip,
                                                               lex);
            if (i == NULL ||
                lex->sphead->add_instr(i))
              MYSQL_YYABORT;
            if (lex->sphead->restore_lex(YYTHD))
              MYSQL_YYABORT;
            /* We can shortcut the cont_backpatch here */
            i->m_cont_dest= ip+1;
          }
    break;

  case 373:
#line 4257 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->trg_chistics.action_time= TRG_ACTION_BEFORE; }
    break;

  case 374:
#line 4259 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->trg_chistics.action_time= TRG_ACTION_AFTER; }
    break;

  case 375:
#line 4264 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->trg_chistics.event= TRG_EVENT_INSERT; }
    break;

  case 376:
#line 4266 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->trg_chistics.event= TRG_EVENT_UPDATE; }
    break;

  case 377:
#line 4268 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->trg_chistics.event= TRG_EVENT_DELETE; }
    break;

  case 381:
#line 4302 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 382:
#line 4304 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->logfile_group_name= (yyvsp[(4) - (4)].lex_str).str;
          }
    break;

  case 383:
#line 4314 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { 
            Lex->alter_tablespace_info->ts_alter_tablespace_type= ALTER_TABLESPACE_ADD_FILE; 
          }
    break;

  case 384:
#line 4320 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { 
            Lex->alter_tablespace_info->ts_alter_tablespace_type= ALTER_TABLESPACE_DROP_FILE; 
          }
    break;

  case 389:
#line 4343 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 440:
#line 4441 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->data_file_name= (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 441:
#line 4449 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->undo_file_name= (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 442:
#line 4457 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->redo_file_name= (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 443:
#line 4465 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info= new st_alter_tablespace();
            if (lex->alter_tablespace_info == NULL)
              MYSQL_YYABORT;
            lex->alter_tablespace_info->tablespace_name= (yyvsp[(1) - (1)].lex_str).str;
            lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
    break;

  case 444:
#line 4477 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info= new st_alter_tablespace();
            if (lex->alter_tablespace_info == NULL)
              MYSQL_YYABORT;
            lex->alter_tablespace_info->logfile_group_name= (yyvsp[(1) - (1)].lex_str).str;
            lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
    break;

  case 445:
#line 4489 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_READ_ONLY;
          }
    break;

  case 446:
#line 4494 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_READ_WRITE;
          }
    break;

  case 447:
#line 4499 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_access_mode= TS_NOT_ACCESSIBLE;
          }
    break;

  case 448:
#line 4507 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->initial_size= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 449:
#line 4515 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->autoextend_size= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 450:
#line 4523 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->max_size= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 451:
#line 4531 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->extent_size= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 452:
#line 4539 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->undo_buffer_size= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 453:
#line 4547 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->redo_buffer_size= (yyvsp[(3) - (3)].ulonglong_number);
          }
    break;

  case 454:
#line 4555 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->alter_tablespace_info->nodegroup_id != UNDEF_NODEGROUP)
            {
              my_error(ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"NODEGROUP");
              MYSQL_YYABORT;
            }
            lex->alter_tablespace_info->nodegroup_id= (yyvsp[(3) - (3)].ulong_num);
          }
    break;

  case 455:
#line 4568 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->alter_tablespace_info->ts_comment != NULL)
            {
              my_error(ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"COMMENT");
              MYSQL_YYABORT;
            }
            lex->alter_tablespace_info->ts_comment= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 456:
#line 4581 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->alter_tablespace_info->storage_engine != NULL)
            {
              my_error(ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),
                       "STORAGE ENGINE");
              MYSQL_YYABORT;
            }
            lex->alter_tablespace_info->storage_engine= (yyvsp[(4) - (4)].db_type);
          }
    break;

  case 457:
#line 4595 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->wait_until_completed= TRUE;
          }
    break;

  case 458:
#line 4600 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (!(lex->alter_tablespace_info->wait_until_completed))
            {
              my_error(ER_FILEGROUP_OPTION_ONLY_ONCE,MYF(0),"NO_WAIT");
              MYSQL_YYABORT;
            }
            lex->alter_tablespace_info->wait_until_completed= FALSE;
          }
    break;

  case 459:
#line 4612 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.ulonglong_number)= (yyvsp[(1) - (1)].ulong_num);}
    break;

  case 460:
#line 4614 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            ulonglong number;
            uint text_shift_number= 0;
            longlong prefix_number;
            char *start_ptr= (yyvsp[(1) - (1)].lex_str).str;
            uint str_len= (yyvsp[(1) - (1)].lex_str).length;
            char *end_ptr= start_ptr + str_len;
            int error;
            prefix_number= my_strtoll10(start_ptr, &end_ptr, &error);
            if ((start_ptr + str_len - 1) == end_ptr)
            {
              switch (end_ptr[0])
              {
                case 'g':
                case 'G':
                  text_shift_number+=10;
                case 'm':
                case 'M':
                  text_shift_number+=10;
                case 'k':
                case 'K':
                  text_shift_number+=10;
                  break;
                default:
                {
                  my_error(ER_WRONG_SIZE_NUMBER, MYF(0));
                  MYSQL_YYABORT;
                }
              }
              if (prefix_number >> 31)
              {
                my_error(ER_SIZE_OVERFLOW_ERROR, MYF(0));
                MYSQL_YYABORT;
              }
              number= prefix_number << text_shift_number;
            }
            else
            {
              my_error(ER_WRONG_SIZE_NUMBER, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.ulonglong_number)= number;
          }
    break;

  case 461:
#line 4664 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 462:
#line 4667 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 463:
#line 4669 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            TABLE_LIST *src_table;
            LEX *lex= thd->lex;

            lex->create_info.options|= HA_LEX_CREATE_TABLE_LIKE;
            src_table= lex->select_lex.add_table_to_list(thd, (yyvsp[(2) - (2)].table), NULL, 0,
                                                         TL_READ,
                                                         MDL_SHARED_READ);
            if (! src_table)
              MYSQL_YYABORT;
            /* CREATE TABLE ... LIKE is not allowed for views. */
            src_table->required_type= FRMTYPE_TABLE;
          }
    break;

  case 464:
#line 4684 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            TABLE_LIST *src_table;
            LEX *lex= thd->lex;

            lex->create_info.options|= HA_LEX_CREATE_TABLE_LIKE;
            src_table= lex->select_lex.add_table_to_list(thd, (yyvsp[(3) - (4)].table), NULL, 0,
                                                         TL_READ,
                                                         MDL_SHARED_READ);
            if (! src_table)
              MYSQL_YYABORT;
            /* CREATE TABLE ... LIKE is not allowed for views. */
            src_table->required_type= FRMTYPE_TABLE;
          }
    break;

  case 465:
#line 4703 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 466:
#line 4706 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Select->set_braces(1);}
    break;

  case 467:
#line 4707 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 468:
#line 4711 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 469:
#line 4713 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Select->set_braces(0);}
    break;

  case 470:
#line 4714 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 471:
#line 4716 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Select->set_braces(1);}
    break;

  case 472:
#line 4717 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 473:
#line 4722 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            /*
              Remove all tables used in PARTITION clause from the global table
              list. Partitioning with subqueries is not allowed anyway.
            */
            TABLE_LIST *last_non_sel_table= Lex->create_last_non_select_table;
            last_non_sel_table->next_global= 0;
            Lex->query_tables_last= &last_non_sel_table->next_global;
          }
    break;

  case 474:
#line 4758 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 476:
#line 4764 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->part_info= new partition_info();
            if (!lex->part_info)
            {
              mem_alloc_error(sizeof(partition_info));
              MYSQL_YYABORT;
            }
            if (lex->sql_command == SQLCOM_ALTER_TABLE)
            {
              lex->alter_info.flags|= ALTER_PARTITION;
            }
          }
    break;

  case 478:
#line 4782 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
#ifdef WITH_PARTITION_STORAGE_ENGINE
            LEX_STRING partition_name={C_STRING_WITH_LEN("partition")};
            if (!plugin_is_ready(&partition_name, MYSQL_STORAGE_ENGINE_PLUGIN))
            {
              my_error(ER_OPTION_PREVENTS_STATEMENT, MYF(0),
                      "--skip-partition");
              MYSQL_YYABORT;
            }
#else
            my_error(ER_FEATURE_DISABLED, MYF(0), "partitioning",
                    "--with-plugin-partition");
            MYSQL_YYABORT;
#endif
          }
    break;

  case 479:
#line 4801 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (!lex->part_info)
            {
              my_parse_error(ER(ER_PARTITION_ENTRY_ERROR));
              MYSQL_YYABORT;
            }
            /*
              We enter here when opening the frm file to translate
              partition info string into part_info data structure.
            */
          }
    break;

  case 480:
#line 4813 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 482:
#line 4822 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->list_of_part_fields= TRUE;
            part_info->column_list= FALSE;
            part_info->part_type= HASH_PARTITION;
          }
    break;

  case 483:
#line 4829 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->part_info->part_type= HASH_PARTITION; }
    break;

  case 484:
#line 4830 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 485:
#line 4832 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->part_info->part_type= RANGE_PARTITION; }
    break;

  case 486:
#line 4834 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->part_info->part_type= RANGE_PARTITION; }
    break;

  case 487:
#line 4836 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->part_info->part_type= LIST_PARTITION; }
    break;

  case 488:
#line 4838 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->part_info->part_type= LIST_PARTITION; }
    break;

  case 489:
#line 4842 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 490:
#line 4844 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->part_info->linear_hash_ind= TRUE;}
    break;

  case 491:
#line 4848 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 492:
#line 4849 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 493:
#line 4853 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 494:
#line 4854 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 495:
#line 4859 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->num_columns++;
            if (part_info->part_field_list.push_back((yyvsp[(1) - (1)].lex_str).str))
            {
              mem_alloc_error(1);
              MYSQL_YYABORT;
            }
            if (part_info->num_columns > MAX_REF_PARTS)
            {
              my_error(ER_TOO_MANY_PARTITION_FUNC_FIELDS_ERROR, MYF(0),
                       "list of partition fields");
              MYSQL_YYABORT;
            }
          }
    break;

  case 496:
#line 4878 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->column_list= TRUE;
            part_info->list_of_part_fields= TRUE;
          }
    break;

  case 497:
#line 4888 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->set_part_expr((yyvsp[(2) - (5)].simple_string)+1, (yyvsp[(3) - (5)].item), (yyvsp[(4) - (5)].simple_string), FALSE))
            { MYSQL_YYABORT; }
            part_info->num_columns= 1;
            part_info->column_list= FALSE;
          }
    break;

  case 498:
#line 4899 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if (Lex->part_info->set_part_expr((yyvsp[(2) - (5)].simple_string)+1, (yyvsp[(3) - (5)].item), (yyvsp[(4) - (5)].simple_string), TRUE))
            { MYSQL_YYABORT; }
          }
    break;

  case 499:
#line 4907 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 500:
#line 4909 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { 
            uint num_parts= (yyvsp[(2) - (2)].ulong_num);
            partition_info *part_info= Lex->part_info;
            if (num_parts == 0)
            {
              my_error(ER_NO_PARTS_ERROR, MYF(0), "partitions");
              MYSQL_YYABORT;
            }

            part_info->num_parts= num_parts;
            part_info->use_default_num_partitions= FALSE;
          }
    break;

  case 501:
#line 4924 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 502:
#line 4926 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->part_info->subpart_type= HASH_PARTITION; }
    break;

  case 503:
#line 4927 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 504:
#line 4930 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->subpart_type= HASH_PARTITION;
            part_info->list_of_subpart_fields= TRUE;
          }
    break;

  case 505:
#line 4935 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 506:
#line 4939 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 507:
#line 4940 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 508:
#line 4945 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->subpart_field_list.push_back((yyvsp[(1) - (1)].lex_str).str))
            {
              mem_alloc_error(1);
              MYSQL_YYABORT;
            }
            if (part_info->subpart_field_list.elements > MAX_REF_PARTS)
            {
              my_error(ER_TOO_MANY_PARTITION_FUNC_FIELDS_ERROR, MYF(0),
                       "list of subpartition fields");
              MYSQL_YYABORT;
            }
          }
    break;

  case 509:
#line 4963 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            bool not_corr_func;
            not_corr_func= !lex->safe_to_cache_query;
            lex->safe_to_cache_query= 1;
            if (not_corr_func)
            {
              my_parse_error(ER(ER_WRONG_EXPR_IN_PARTITION_FUNC_ERROR));
              MYSQL_YYABORT;
            }
            (yyval.item)=(yyvsp[(1) - (1)].item);
          }
    break;

  case 510:
#line 4978 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 511:
#line 4980 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            uint num_parts= (yyvsp[(2) - (2)].ulong_num);
            LEX *lex= Lex;
            if (num_parts == 0)
            {
              my_error(ER_NO_PARTS_ERROR, MYF(0), "subpartitions");
              MYSQL_YYABORT;
            }
            lex->part_info->num_subparts= num_parts;
            lex->part_info->use_default_num_subpartitions= FALSE;
          }
    break;

  case 512:
#line 4995 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->part_type == RANGE_PARTITION)
            {
              my_error(ER_PARTITIONS_MUST_BE_DEFINED_ERROR, MYF(0),
                       "RANGE");
              MYSQL_YYABORT;
            }
            else if (part_info->part_type == LIST_PARTITION)
            {
              my_error(ER_PARTITIONS_MUST_BE_DEFINED_ERROR, MYF(0),
                       "LIST");
              MYSQL_YYABORT;
            }
          }
    break;

  case 513:
#line 5011 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            uint count_curr_parts= part_info->partitions.elements;
            if (part_info->num_parts != 0)
            {
              if (part_info->num_parts !=
                  count_curr_parts)
              {
                my_parse_error(ER(ER_PARTITION_WRONG_NO_PART_ERROR));
                MYSQL_YYABORT;
              }
            }
            else if (count_curr_parts > 0)
            {
              part_info->num_parts= count_curr_parts;
            }
            part_info->count_curr_subparts= 0;
          }
    break;

  case 514:
#line 5032 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 515:
#line 5033 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 516:
#line 5038 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            partition_element *p_elem= new partition_element();

            if (!p_elem || part_info->partitions.push_back(p_elem))
            {
              mem_alloc_error(sizeof(partition_element));
              MYSQL_YYABORT;
            }
            p_elem->part_state= PART_NORMAL;
            part_info->curr_part_elem= p_elem;
            part_info->current_partition= p_elem;
            part_info->use_default_partitions= FALSE;
            part_info->use_default_num_partitions= FALSE;
          }
    break;

  case 517:
#line 5057 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 518:
#line 5062 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            partition_element *p_elem= part_info->curr_part_elem;
            p_elem->partition_name= (yyvsp[(1) - (1)].lex_str).str;
          }
    break;

  case 519:
#line 5071 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (part_info->part_type == RANGE_PARTITION)
              {
                my_error(ER_PARTITION_REQUIRES_VALUES_ERROR, MYF(0),
                         "RANGE", "LESS THAN");
                MYSQL_YYABORT;
              }
              if (part_info->part_type == LIST_PARTITION)
              {
                my_error(ER_PARTITION_REQUIRES_VALUES_ERROR, MYF(0),
                         "LIST", "IN");
                MYSQL_YYABORT;
              }
            }
            else
              part_info->part_type= HASH_PARTITION;
          }
    break;

  case 520:
#line 5093 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (part_info->part_type != RANGE_PARTITION)
              {
                my_error(ER_PARTITION_WRONG_VALUES_ERROR, MYF(0),
                         "RANGE", "LESS THAN");
                MYSQL_YYABORT;
              }
            }
            else
              part_info->part_type= RANGE_PARTITION;
          }
    break;

  case 521:
#line 5108 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 522:
#line 5110 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (part_info->part_type != LIST_PARTITION)
              {
                my_error(ER_PARTITION_WRONG_VALUES_ERROR, MYF(0),
                               "LIST", "IN");
                MYSQL_YYABORT;
              }
            }
            else
              part_info->part_type= LIST_PARTITION;
          }
    break;

  case 523:
#line 5125 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 524:
#line 5130 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;

            if (part_info->num_columns &&
                part_info->num_columns != 1U)
            {
              part_info->print_debug("Kilroy II", NULL);
              my_parse_error(ER(ER_PARTITION_COLUMN_LIST_ERROR));
              MYSQL_YYABORT;
            }
            else
              part_info->num_columns= 1U;
            if (part_info->init_column_part())
            {
              MYSQL_YYABORT;
            }
            if (part_info->add_max_value())
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 525:
#line 5151 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 526:
#line 5156 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            part_info->print_debug("part_values_in: part_value_item", NULL);

            if (part_info->num_columns != 1U)
            {
              if (!lex->is_partition_management() ||
                  part_info->num_columns == 0 ||
                  part_info->num_columns > MAX_REF_PARTS)
              {
                part_info->print_debug("Kilroy III", NULL);
                my_parse_error(ER(ER_PARTITION_COLUMN_LIST_ERROR));
                MYSQL_YYABORT;
              }
              /*
                Reorganize the current large array into a list of small
                arrays with one entry in each array. This can happen
                in the first partition of an ALTER TABLE statement where
                we ADD or REORGANIZE partitions. Also can only happen
                for LIST [COLUMNS] partitions.
              */
              if (part_info->reorganize_into_single_field_col_val())
              {
                MYSQL_YYABORT;
              }
            }
          }
    break;

  case 527:
#line 5185 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->num_columns < 2U)
            {
              my_parse_error(ER(ER_ROW_SINGLE_PARTITION_FIELD_ERROR));
              MYSQL_YYABORT;
            }
          }
    break;

  case 528:
#line 5196 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 529:
#line 5197 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 530:
#line 5202 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->print_debug("( part_value_item", NULL);
            /* Initialisation code needed for each list of value expressions */
            if (!(part_info->part_type == LIST_PARTITION &&
                  part_info->num_columns == 1U) &&
                 part_info->init_column_part())
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 531:
#line 5213 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 532:
#line 5215 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->print_debug(") part_value_item", NULL);
            if (part_info->num_columns == 0)
              part_info->num_columns= part_info->curr_list_object;
            if (part_info->num_columns != part_info->curr_list_object)
            {
              /*
                All value items lists must be of equal length, in some cases
                which is covered by the above if-statement we don't know yet
                how many columns is in the partition so the assignment above
                ensures that we only report errors when we know we have an
                error.
              */
              part_info->print_debug("Kilroy I", NULL);
              my_parse_error(ER(ER_PARTITION_COLUMN_LIST_ERROR));
              MYSQL_YYABORT;
            }
            part_info->curr_list_object= 0;
          }
    break;

  case 533:
#line 5238 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 534:
#line 5239 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 535:
#line 5244 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->part_type == LIST_PARTITION)
            {
              my_parse_error(ER(ER_MAXVALUE_IN_VALUES_IN));
              MYSQL_YYABORT;
            }
            if (part_info->add_max_value())
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 536:
#line 5257 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            Item *part_expr= (yyvsp[(1) - (1)].item);

            if (!lex->safe_to_cache_query)
            {
              my_parse_error(ER(ER_WRONG_EXPR_IN_PARTITION_FUNC_ERROR));
              MYSQL_YYABORT;
            }
            if (part_info->add_column_list_value(YYTHD, part_expr))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 537:
#line 5277 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->num_subparts != 0 &&
                !part_info->use_default_subpartitions)
            {
              /*
                We come here when we have defined subpartitions on the first
                partition but not on all the subsequent partitions. 
              */
              my_parse_error(ER(ER_PARTITION_WRONG_NO_SUBPART_ERROR));
              MYSQL_YYABORT;
            }
          }
    break;

  case 538:
#line 5291 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            if (part_info->num_subparts != 0)
            {
              if (part_info->num_subparts !=
                  part_info->count_curr_subparts)
              {
                my_parse_error(ER(ER_PARTITION_WRONG_NO_SUBPART_ERROR));
                MYSQL_YYABORT;
              }
            }
            else if (part_info->count_curr_subparts > 0)
            {
              if (part_info->partitions.elements > 1)
              {
                my_parse_error(ER(ER_PARTITION_WRONG_NO_SUBPART_ERROR));
                MYSQL_YYABORT;
              }
              part_info->num_subparts= part_info->count_curr_subparts;
            }
            part_info->count_curr_subparts= 0;
          }
    break;

  case 539:
#line 5316 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 540:
#line 5317 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 541:
#line 5322 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            partition_element *curr_part= part_info->current_partition;
            partition_element *sub_p_elem= new partition_element(curr_part);
            if (part_info->use_default_subpartitions &&
                part_info->partitions.elements >= 2)
            {
              /*
                create table t1 (a int)
                partition by list (a) subpartition by hash (a)
                (partition p0 values in (1),
                 partition p1 values in (2) subpartition sp11);
                causes use to arrive since we are on the second
                partition, but still use_default_subpartitions
                is set. When we come here we're processing at least
                the second partition (the current partition processed
                have already been put into the partitions list.
              */
              my_parse_error(ER(ER_PARTITION_WRONG_NO_SUBPART_ERROR));
              MYSQL_YYABORT;
            }
            if (!sub_p_elem ||
             curr_part->subpartitions.push_back(sub_p_elem))
            {
              mem_alloc_error(sizeof(partition_element));
              MYSQL_YYABORT;
            }
            part_info->curr_part_elem= sub_p_elem;
            part_info->use_default_subpartitions= FALSE;
            part_info->use_default_num_subpartitions= FALSE;
            part_info->count_curr_subparts++;
          }
    break;

  case 542:
#line 5354 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 543:
#line 5359 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->partition_name= (yyvsp[(1) - (1)].lex_str).str; }
    break;

  case 544:
#line 5363 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 545:
#line 5364 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 546:
#line 5368 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 547:
#line 5369 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 548:
#line 5374 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->tablespace_name= (yyvsp[(3) - (3)].lex_str).str; }
    break;

  case 549:
#line 5376 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->curr_part_elem->engine_type= (yyvsp[(4) - (4)].db_type);
            part_info->default_engine_type= (yyvsp[(4) - (4)].db_type);
          }
    break;

  case 550:
#line 5382 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->nodegroup_id= (uint16) (yyvsp[(3) - (3)].ulong_num); }
    break;

  case 551:
#line 5384 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->part_max_rows= (ha_rows) (yyvsp[(3) - (3)].ulonglong_number); }
    break;

  case 552:
#line 5386 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->part_min_rows= (ha_rows) (yyvsp[(3) - (3)].ulonglong_number); }
    break;

  case 553:
#line 5388 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->data_file_name= (yyvsp[(4) - (4)].lex_str).str; }
    break;

  case 554:
#line 5390 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->index_file_name= (yyvsp[(4) - (4)].lex_str).str; }
    break;

  case 555:
#line 5392 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->part_info->curr_part_elem->part_comment= (yyvsp[(3) - (3)].lex_str).str; }
    break;

  case 556:
#line 5401 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->sql_command == SQLCOM_INSERT)
              lex->sql_command= SQLCOM_INSERT_SELECT;
            else if (lex->sql_command == SQLCOM_REPLACE)
              lex->sql_command= SQLCOM_REPLACE_SELECT;
            /*
              The following work only with the local list, the global list
              is created correctly in this case
            */
            lex->current_select->table_list.save_and_clear(&lex->save_list);
            mysql_init_select(lex);
            lex->current_select->parsing_place= SELECT_LIST;
          }
    break;

  case 557:
#line 5416 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Select->parsing_place= NO_MATTER;
          }
    break;

  case 558:
#line 5420 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            /*
              The following work only with the local list, the global list
              is created correctly in this case
            */
            Lex->current_select->table_list.push_front(&Lex->save_list);
          }
    break;

  case 559:
#line 5430 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 560:
#line 5431 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 561:
#line 5435 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 562:
#line 5436 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 563:
#line 5440 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 564:
#line 5441 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 565:
#line 5445 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 566:
#line 5446 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 567:
#line 5450 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 568:
#line 5451 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)= (yyvsp[(1) - (1)].num);}
    break;

  case 569:
#line 5455 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)=(yyvsp[(1) - (1)].num); }
    break;

  case 570:
#line 5456 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)= (yyvsp[(1) - (2)].num) | (yyvsp[(2) - (2)].num); }
    break;

  case 571:
#line 5460 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)=HA_LEX_CREATE_TMP_TABLE; }
    break;

  case 572:
#line 5464 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 573:
#line 5465 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)=HA_LEX_CREATE_IF_NOT_EXISTS; }
    break;

  case 581:
#line 5486 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->create_info.db_type= (yyvsp[(3) - (3)].db_type);
            Lex->create_info.used_fields|= HA_CREATE_USED_ENGINE;
          }
    break;

  case 582:
#line 5491 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->create_info.max_rows= (yyvsp[(3) - (3)].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_MAX_ROWS;
          }
    break;

  case 583:
#line 5496 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->create_info.min_rows= (yyvsp[(3) - (3)].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_MIN_ROWS;
          }
    break;

  case 584:
#line 5501 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->create_info.avg_row_length=(yyvsp[(3) - (3)].ulong_num);
            Lex->create_info.used_fields|= HA_CREATE_USED_AVG_ROW_LENGTH;
          }
    break;

  case 585:
#line 5506 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->create_info.password=(yyvsp[(3) - (3)].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_PASSWORD;
          }
    break;

  case 586:
#line 5511 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->create_info.comment=(yyvsp[(3) - (3)].lex_str);
            Lex->create_info.used_fields|= HA_CREATE_USED_COMMENT;
          }
    break;

  case 587:
#line 5516 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->create_info.auto_increment_value=(yyvsp[(3) - (3)].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_AUTO;
          }
    break;

  case 588:
#line 5521 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            switch((yyvsp[(3) - (3)].ulong_num)) {
            case 0:
                Lex->create_info.table_options|= HA_OPTION_NO_PACK_KEYS;
                break;
            case 1:
                Lex->create_info.table_options|= HA_OPTION_PACK_KEYS;
                break;
            default:
                my_parse_error(ER(ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_PACK_KEYS;
          }
    break;

  case 589:
#line 5536 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->create_info.table_options&=
              ~(HA_OPTION_PACK_KEYS | HA_OPTION_NO_PACK_KEYS);
            Lex->create_info.used_fields|= HA_CREATE_USED_PACK_KEYS;
          }
    break;

  case 590:
#line 5542 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->create_info.table_options|= (yyvsp[(3) - (3)].ulong_num) ? HA_OPTION_CHECKSUM : HA_OPTION_NO_CHECKSUM;
            Lex->create_info.used_fields|= HA_CREATE_USED_CHECKSUM;
          }
    break;

  case 591:
#line 5547 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
             Lex->create_info.table_options|= (yyvsp[(3) - (3)].ulong_num) ? HA_OPTION_CHECKSUM : HA_OPTION_NO_CHECKSUM;
             Lex->create_info.used_fields|= HA_CREATE_USED_CHECKSUM;
          }
    break;

  case 592:
#line 5552 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->create_info.table_options|= (yyvsp[(3) - (3)].ulong_num) ? HA_OPTION_DELAY_KEY_WRITE : HA_OPTION_NO_DELAY_KEY_WRITE;
            Lex->create_info.used_fields|= HA_CREATE_USED_DELAY_KEY_WRITE;
          }
    break;

  case 593:
#line 5557 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->create_info.row_type= (yyvsp[(3) - (3)].row_type);
            Lex->create_info.used_fields|= HA_CREATE_USED_ROW_FORMAT;
          }
    break;

  case 594:
#line 5562 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->select_lex.table_list.save_and_clear(&Lex->save_list);
          }
    break;

  case 595:
#line 5566 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            /*
              Move the union list to the merge_list and exclude its tables
              from the global list.
            */
            LEX *lex=Lex;
            lex->create_info.merge_list= lex->select_lex.table_list;
            lex->select_lex.table_list= lex->save_list;
            /*
              When excluding union list from the global list we assume that
              elements of the former immediately follow elements which represent
              table being created/altered and parent tables.
            */
            TABLE_LIST *last_non_sel_table= lex->create_last_non_select_table;
            DBUG_ASSERT(last_non_sel_table->next_global ==
                        lex->create_info.merge_list.first);
            last_non_sel_table->next_global= 0;
            Lex->query_tables_last= &last_non_sel_table->next_global;

            lex->create_info.used_fields|= HA_CREATE_USED_UNION;
          }
    break;

  case 598:
#line 5590 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->create_info.merge_insert_method= (yyvsp[(3) - (3)].ulong_num);
            Lex->create_info.used_fields|= HA_CREATE_USED_INSERT_METHOD;
          }
    break;

  case 599:
#line 5595 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->create_info.data_file_name= (yyvsp[(4) - (4)].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_DATADIR;
          }
    break;

  case 600:
#line 5600 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->create_info.index_file_name= (yyvsp[(4) - (4)].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_INDEXDIR;
          }
    break;

  case 601:
#line 5605 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {Lex->create_info.tablespace= (yyvsp[(2) - (2)].lex_str).str;}
    break;

  case 602:
#line 5607 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {Lex->create_info.storage_media= HA_SM_DISK;}
    break;

  case 603:
#line 5609 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {Lex->create_info.storage_media= HA_SM_MEMORY;}
    break;

  case 604:
#line 5611 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->create_info.connect_string.str= (yyvsp[(3) - (3)].lex_str).str;
            Lex->create_info.connect_string.length= (yyvsp[(3) - (3)].lex_str).length;
            Lex->create_info.used_fields|= HA_CREATE_USED_CONNECTION;
          }
    break;

  case 605:
#line 5617 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->create_info.used_fields|= HA_CREATE_USED_KEY_BLOCK_SIZE;
            Lex->create_info.key_block_size= (yyvsp[(3) - (3)].ulong_num);
          }
    break;

  case 606:
#line 5625 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            HA_CREATE_INFO *cinfo= &Lex->create_info;
            if ((cinfo->used_fields & HA_CREATE_USED_DEFAULT_CHARSET) &&
                 cinfo->default_table_charset && (yyvsp[(4) - (4)].charset) &&
                 !my_charset_same(cinfo->default_table_charset,(yyvsp[(4) - (4)].charset)))
            {
              my_error(ER_CONFLICTING_DECLARATIONS, MYF(0),
                       "CHARACTER SET ", cinfo->default_table_charset->csname,
                       "CHARACTER SET ", (yyvsp[(4) - (4)].charset)->csname);
              MYSQL_YYABORT;
            }
            Lex->create_info.default_table_charset= (yyvsp[(4) - (4)].charset);
            Lex->create_info.used_fields|= HA_CREATE_USED_DEFAULT_CHARSET;
          }
    break;

  case 607:
#line 5643 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            HA_CREATE_INFO *cinfo= &Lex->create_info;
            if ((cinfo->used_fields & HA_CREATE_USED_DEFAULT_CHARSET) &&
                 cinfo->default_table_charset && (yyvsp[(4) - (4)].charset) &&
                 !((yyvsp[(4) - (4)].charset)= merge_charset_and_collation(cinfo->default_table_charset,
                                                   (yyvsp[(4) - (4)].charset))))
            {
              MYSQL_YYABORT;
            }

            Lex->create_info.default_table_charset= (yyvsp[(4) - (4)].charset);
            Lex->create_info.used_fields|= HA_CREATE_USED_DEFAULT_CHARSET;
          }
    break;

  case 608:
#line 5660 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            plugin_ref plugin=
              ha_resolve_by_name(thd, &(yyvsp[(1) - (1)].lex_str),
                thd->lex->create_info.options & HA_LEX_CREATE_TMP_TABLE);

            if (plugin)
              (yyval.db_type)= plugin_data(plugin, handlerton*);
            else
            {
              if (thd->variables.sql_mode & MODE_NO_ENGINE_SUBSTITUTION)
              {
                my_error(ER_UNKNOWN_STORAGE_ENGINE, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
                MYSQL_YYABORT;
              }
              (yyval.db_type)= 0;
              push_warning_printf(thd, Sql_condition::WARN_LEVEL_WARN,
                                  ER_UNKNOWN_STORAGE_ENGINE,
                                  ER(ER_UNKNOWN_STORAGE_ENGINE),
                                  (yyvsp[(1) - (1)].lex_str).str);
            }
          }
    break;

  case 609:
#line 5686 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            plugin_ref plugin=
              ha_resolve_by_name(thd, &(yyvsp[(1) - (1)].lex_str),
                lex->create_info.options & HA_LEX_CREATE_TMP_TABLE);
            if (plugin)
              (yyval.db_type)= plugin_data(plugin, handlerton*);
            else
            {
              my_error(ER_UNKNOWN_STORAGE_ENGINE, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 610:
#line 5703 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_DEFAULT; }
    break;

  case 611:
#line 5704 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_FIXED; }
    break;

  case 612:
#line 5705 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_DYNAMIC; }
    break;

  case 613:
#line 5706 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_COMPRESSED; }
    break;

  case 614:
#line 5707 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_REDUNDANT; }
    break;

  case 615:
#line 5708 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.row_type)= ROW_TYPE_COMPACT; }
    break;

  case 616:
#line 5712 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.ulong_num)= MERGE_INSERT_DISABLED; }
    break;

  case 617:
#line 5713 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.ulong_num)= MERGE_INSERT_TO_FIRST; }
    break;

  case 618:
#line 5714 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.ulong_num)= MERGE_INSERT_TO_LAST; }
    break;

  case 619:
#line 5718 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 621:
#line 5723 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {(yyval.num) = (int) STRING_RESULT; }
    break;

  case 622:
#line 5724 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {(yyval.num) = (int) REAL_RESULT; }
    break;

  case 623:
#line 5725 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {(yyval.num) = (int) DECIMAL_RESULT; }
    break;

  case 624:
#line 5726 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {(yyval.num) = (int) INT_RESULT; }
    break;

  case 625:
#line 5732 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
          Lex->create_last_non_select_table= Lex->last_table();
        }
    break;

  case 631:
#line 5750 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->col_list.empty(); /* Alloced by sql_alloc */
          }
    break;

  case 632:
#line 5757 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if (add_create_index (Lex, (yyvsp[(1) - (7)].key_type), (yyvsp[(2) - (7)].lex_str)))
              MYSQL_YYABORT;
          }
    break;

  case 633:
#line 5763 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if (add_create_index (Lex, (yyvsp[(1) - (8)].key_type), (yyvsp[(3) - (8)].lex_str)))
              MYSQL_YYABORT;
          }
    break;

  case 634:
#line 5769 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if (add_create_index (Lex, (yyvsp[(1) - (8)].key_type), (yyvsp[(3) - (8)].lex_str)))
              MYSQL_YYABORT;
          }
    break;

  case 635:
#line 5775 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if (add_create_index (Lex, (yyvsp[(2) - (8)].key_type), (yyvsp[(3) - (8)].lex_str).str ? (yyvsp[(3) - (8)].lex_str) : (yyvsp[(1) - (8)].lex_str)))
              MYSQL_YYABORT;
          }
    break;

  case 636:
#line 5780 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Key *key= new Foreign_key((yyvsp[(4) - (8)].lex_str).str ? (yyvsp[(4) - (8)].lex_str) : (yyvsp[(1) - (8)].lex_str), lex->col_list,
                                      (yyvsp[(8) - (8)].table),
                                      lex->ref_list,
                                      lex->fk_delete_opt,
                                      lex->fk_update_opt,
                                      lex->fk_match_option);
            if (key == NULL)
              MYSQL_YYABORT;
            lex->alter_info.key_list.push_back(key);
            if (add_create_index (lex, Key::MULTIPLE, (yyvsp[(1) - (8)].lex_str).str ? (yyvsp[(1) - (8)].lex_str) : (yyvsp[(4) - (8)].lex_str),
                                  &default_key_create_info, 1))
              MYSQL_YYABORT;
            /* Only used for ALTER TABLE. Ignored otherwise. */
            lex->alter_info.flags|= ALTER_FOREIGN_KEY;
          }
    break;

  case 637:
#line 5798 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->col_list.empty(); /* Alloced by sql_alloc */
          }
    break;

  case 641:
#line 5813 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.lex_str)= null_lex_str; }
    break;

  case 642:
#line 5814 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str); }
    break;

  case 643:
#line 5818 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(2) - (2)].lex_str); }
    break;

  case 644:
#line 5823 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->length=lex->dec=0;
            lex->type=0;
            lex->default_value= lex->on_update_value= 0;
            lex->comment=null_lex_str;
            lex->charset=NULL;
          }
    break;

  case 645:
#line 5832 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (add_field_to_list(lex->thd, &(yyvsp[(1) - (4)].lex_str), (enum enum_field_types) (yyvsp[(3) - (4)].num),
                                  lex->length,lex->dec,lex->type,
                                  lex->default_value, lex->on_update_value, 
                                  &lex->comment,
                                  lex->change,&lex->interval_list,lex->charset,
                                  lex->uint_geom_type))
              MYSQL_YYABORT;
          }
    break;

  case 646:
#line 5845 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)=(yyvsp[(1) - (3)].num); }
    break;

  case 647:
#line 5846 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)=(yyvsp[(1) - (3)].num); }
    break;

  case 648:
#line 5847 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_FLOAT; }
    break;

  case 649:
#line 5849 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->length= (char*) "1";
            (yyval.num)=MYSQL_TYPE_BIT;
          }
    break;

  case 650:
#line 5854 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.num)=MYSQL_TYPE_BIT;
          }
    break;

  case 651:
#line 5858 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->length= (char*) "1";
            (yyval.num)=MYSQL_TYPE_TINY;
          }
    break;

  case 652:
#line 5863 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->length= (char*) "1";
            (yyval.num)=MYSQL_TYPE_TINY;
          }
    break;

  case 653:
#line 5868 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.num)=MYSQL_TYPE_STRING;
          }
    break;

  case 654:
#line 5872 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->length= (char*) "1";
            (yyval.num)=MYSQL_TYPE_STRING;
          }
    break;

  case 655:
#line 5877 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.num)=MYSQL_TYPE_STRING;
            Lex->charset=national_charset_info;
          }
    break;

  case 656:
#line 5882 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->length= (char*) "1";
            (yyval.num)=MYSQL_TYPE_STRING;
            Lex->charset=national_charset_info;
          }
    break;

  case 657:
#line 5888 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_STRING;
          }
    break;

  case 658:
#line 5893 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->length= (char*) "1";
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_STRING;
          }
    break;

  case 659:
#line 5899 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.num)= MYSQL_TYPE_VARCHAR;
          }
    break;

  case 660:
#line 5903 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.num)= MYSQL_TYPE_VARCHAR;
            Lex->charset=national_charset_info;
          }
    break;

  case 661:
#line 5908 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->charset=&my_charset_bin;
            (yyval.num)= MYSQL_TYPE_VARCHAR;
          }
    break;

  case 662:
#line 5913 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_YEAR; }
    break;

  case 663:
#line 5915 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_DATE; }
    break;

  case 664:
#line 5917 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)= MYSQL_TYPE_TIME2; }
    break;

  case 665:
#line 5919 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if (YYTHD->variables.sql_mode & MODE_MAXDB)
              (yyval.num)=MYSQL_TYPE_DATETIME2;
            else
            {
              /* 
                Unlike other types TIMESTAMP fields are NOT NULL by default.
              */
              Lex->type|= NOT_NULL_FLAG;
              (yyval.num)=MYSQL_TYPE_TIMESTAMP2;
            }
          }
    break;

  case 666:
#line 5932 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)= MYSQL_TYPE_DATETIME2; }
    break;

  case 667:
#line 5934 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_TINY_BLOB;
          }
    break;

  case 668:
#line 5939 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_BLOB;
          }
    break;

  case 669:
#line 5944 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
#ifdef HAVE_SPATIAL
            Lex->charset=&my_charset_bin;
            Lex->uint_geom_type= (uint)(yyvsp[(1) - (1)].num);
            (yyval.num)=MYSQL_TYPE_GEOMETRY;
#else
            my_error(ER_FEATURE_DISABLED, MYF(0),
                     sym_group_geom.name, sym_group_geom.needed_define);
            MYSQL_YYABORT;
#endif
          }
    break;

  case 670:
#line 5956 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_MEDIUM_BLOB;
          }
    break;

  case 671:
#line 5961 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_LONG_BLOB;
          }
    break;

  case 672:
#line 5966 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->charset=&my_charset_bin;
            (yyval.num)=MYSQL_TYPE_MEDIUM_BLOB;
          }
    break;

  case 673:
#line 5971 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_MEDIUM_BLOB; }
    break;

  case 674:
#line 5973 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_TINY_BLOB; }
    break;

  case 675:
#line 5975 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_BLOB; }
    break;

  case 676:
#line 5977 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_MEDIUM_BLOB; }
    break;

  case 677:
#line 5979 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_LONG_BLOB; }
    break;

  case 678:
#line 5981 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_NEWDECIMAL;}
    break;

  case 679:
#line 5983 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_NEWDECIMAL;}
    break;

  case 680:
#line 5985 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_NEWDECIMAL;}
    break;

  case 681:
#line 5987 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {Lex->interval_list.empty();}
    break;

  case 682:
#line 5989 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_ENUM; }
    break;

  case 683:
#line 5991 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->interval_list.empty();}
    break;

  case 684:
#line 5993 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_SET; }
    break;

  case 685:
#line 5995 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_MEDIUM_BLOB; }
    break;

  case 686:
#line 5997 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.num)=MYSQL_TYPE_LONGLONG;
            Lex->type|= (AUTO_INCREMENT_FLAG | NOT_NULL_FLAG | UNSIGNED_FLAG |
              UNIQUE_FLAG);
          }
    break;

  case 687:
#line 6005 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)= Field::GEOM_GEOMETRY; }
    break;

  case 688:
#line 6006 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)= Field::GEOM_GEOMETRYCOLLECTION; }
    break;

  case 689:
#line 6008 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->length= (char*)"25";
            (yyval.num)= Field::GEOM_POINT;
          }
    break;

  case 690:
#line 6012 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)= Field::GEOM_MULTIPOINT; }
    break;

  case 691:
#line 6013 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)= Field::GEOM_LINESTRING; }
    break;

  case 692:
#line 6014 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)= Field::GEOM_MULTILINESTRING; }
    break;

  case 693:
#line 6015 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)= Field::GEOM_POLYGON; }
    break;

  case 694:
#line 6016 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)= Field::GEOM_MULTIPOLYGON; }
    break;

  case 695:
#line 6020 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 696:
#line 6024 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 697:
#line 6025 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 698:
#line 6029 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 699:
#line 6030 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 700:
#line 6034 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 701:
#line 6035 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 702:
#line 6036 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 703:
#line 6037 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 704:
#line 6038 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 705:
#line 6042 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_LONG; }
    break;

  case 706:
#line 6043 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_TINY; }
    break;

  case 707:
#line 6044 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_SHORT; }
    break;

  case 708:
#line 6045 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_INT24; }
    break;

  case 709:
#line 6046 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_LONGLONG; }
    break;

  case 710:
#line 6051 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.num)= YYTHD->variables.sql_mode & MODE_REAL_AS_FLOAT ?
              MYSQL_TYPE_FLOAT : MYSQL_TYPE_DOUBLE;
          }
    break;

  case 711:
#line 6056 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_DOUBLE; }
    break;

  case 712:
#line 6058 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)=MYSQL_TYPE_DOUBLE; }
    break;

  case 713:
#line 6063 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->dec=Lex->length= (char*)0; }
    break;

  case 714:
#line 6065 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->dec= (char*)0; }
    break;

  case 715:
#line 6067 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 716:
#line 6072 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->length=(yyvsp[(2) - (5)].lex_str).str;
            lex->dec=(yyvsp[(4) - (5)].lex_str).str;
          }
    break;

  case 717:
#line 6081 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->dec= (char *) 0; }
    break;

  case 718:
#line 6082 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->dec= (yyvsp[(2) - (3)].lex_str).str; }
    break;

  case 719:
#line 6086 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 0; }
    break;

  case 720:
#line 6087 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 0; }
    break;

  case 721:
#line 6089 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
             int error;
             (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(2) - (3)].lex_str).str, NULL, &error);
           }
    break;

  case 722:
#line 6096 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 723:
#line 6097 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 724:
#line 6101 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 725:
#line 6102 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 726:
#line 6106 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 727:
#line 6107 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->type|= UNSIGNED_FLAG;}
    break;

  case 728:
#line 6108 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->type|= UNSIGNED_FLAG | ZEROFILL_FLAG; }
    break;

  case 729:
#line 6112 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->length= (yyvsp[(2) - (3)].lex_str).str; }
    break;

  case 730:
#line 6113 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->length= (yyvsp[(2) - (3)].lex_str).str; }
    break;

  case 731:
#line 6114 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->length= (yyvsp[(2) - (3)].lex_str).str; }
    break;

  case 732:
#line 6115 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->length= (yyvsp[(2) - (3)].lex_str).str; }
    break;

  case 733:
#line 6118 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->length=(char*) 0; /* use default length */ }
    break;

  case 734:
#line 6119 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { }
    break;

  case 735:
#line 6123 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 736:
#line 6124 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 737:
#line 6128 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 738:
#line 6129 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 739:
#line 6133 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 741:
#line 6138 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->type&= ~ NOT_NULL_FLAG; }
    break;

  case 742:
#line 6139 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->type|= NOT_NULL_FLAG; }
    break;

  case 743:
#line 6140 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->default_value=(yyvsp[(2) - (2)].item); }
    break;

  case 744:
#line 6141 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->on_update_value= (yyvsp[(3) - (3)].item); }
    break;

  case 745:
#line 6142 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->type|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG; }
    break;

  case 746:
#line 6144 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { 
            LEX *lex=Lex;
            lex->type|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG | UNIQUE_FLAG;
            lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
    break;

  case 747:
#line 6150 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->type|= PRI_KEY_FLAG | NOT_NULL_FLAG;
            lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
    break;

  case 748:
#line 6156 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->type|= UNIQUE_FLAG; 
            lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
    break;

  case 749:
#line 6162 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->type|= UNIQUE_KEY_FLAG; 
            lex->alter_info.flags|= ALTER_ADD_INDEX; 
          }
    break;

  case 750:
#line 6167 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->comment= (yyvsp[(2) - (2)].lex_str); }
    break;

  case 751:
#line 6169 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if (Lex->charset && !my_charset_same(Lex->charset,(yyvsp[(2) - (2)].charset)))
            {
              my_error(ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                       (yyvsp[(2) - (2)].charset)->name,Lex->charset->csname);
              MYSQL_YYABORT;
            }
            else
            {
              Lex->charset=(yyvsp[(2) - (2)].charset);
            }
          }
    break;

  case 752:
#line 6186 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
          (yyval.num)= (yyvsp[(1) - (2)].num);

          if (Lex->charset) /* Lex->charset is scanned in "type" */
          {
            if (!(Lex->charset= merge_charset_and_collation(Lex->charset, (yyvsp[(2) - (2)].charset))))
              MYSQL_YYABORT;
          }
          else if ((yyvsp[(2) - (2)].charset))
          {
            my_error(ER_NOT_SUPPORTED_YET, MYF(0),
                     "COLLATE with no CHARACTER SET "
                     "in SP parameters, RETURNS, DECLARE");
            MYSQL_YYABORT;
          }
        }
    break;

  case 753:
#line 6207 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_now_local((yyvsp[(2) - (2)].ulong_num));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 755:
#line 6216 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.item)=(yyvsp[(1) - (1)].item); }
    break;

  case 756:
#line 6220 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 757:
#line 6221 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 758:
#line 6226 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if (!((yyval.charset)=get_charset_by_csname((yyvsp[(1) - (1)].lex_str).str,MY_CS_PRIMARY,MYF(0))))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 759:
#line 6233 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.charset)= &my_charset_bin; }
    break;

  case 760:
#line 6237 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.charset)=(yyvsp[(1) - (1)].charset);   }
    break;

  case 761:
#line 6238 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.charset)=NULL; }
    break;

  case 762:
#line 6242 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.charset)= NULL; }
    break;

  case 763:
#line 6243 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.charset)= (yyvsp[(2) - (2)].charset); }
    break;

  case 764:
#line 6248 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if (!((yyval.charset)=get_charset_by_csname((yyvsp[(1) - (1)].lex_str).str,MY_CS_PRIMARY,MYF(0))) &&
                !((yyval.charset)=get_old_charset_by_name((yyvsp[(1) - (1)].lex_str).str)))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 765:
#line 6256 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.charset)= &my_charset_bin; }
    break;

  case 766:
#line 6260 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.charset)=(yyvsp[(1) - (1)].charset);   }
    break;

  case 767:
#line 6261 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.charset)=NULL; }
    break;

  case 768:
#line 6266 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if (!((yyval.charset)= mysqld_collation_get_by_name((yyvsp[(1) - (1)].lex_str).str)))
              MYSQL_YYABORT;
          }
    break;

  case 769:
#line 6273 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.charset)=NULL; }
    break;

  case 770:
#line 6274 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.charset)=(yyvsp[(2) - (2)].charset); }
    break;

  case 771:
#line 6278 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.charset)=(yyvsp[(1) - (1)].charset); }
    break;

  case 772:
#line 6279 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.charset)=NULL; }
    break;

  case 773:
#line 6283 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 774:
#line 6284 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 775:
#line 6289 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->charset= &my_charset_latin1; }
    break;

  case 776:
#line 6291 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->charset= &my_charset_latin1_bin;
          }
    break;

  case 777:
#line 6295 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->charset= &my_charset_latin1_bin;
          }
    break;

  case 778:
#line 6302 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if (!(Lex->charset=get_charset_by_csname("ucs2",
                                                     MY_CS_PRIMARY,MYF(0))))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), "ucs2");
              MYSQL_YYABORT;
            }
          }
    break;

  case 779:
#line 6311 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if (!(Lex->charset= mysqld_collation_get_by_name("ucs2_bin")))
              MYSQL_YYABORT;
          }
    break;

  case 780:
#line 6316 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if (!(Lex->charset= mysqld_collation_get_by_name("ucs2_bin")))
              my_error(ER_UNKNOWN_COLLATION, MYF(0), "ucs2_bin");
          }
    break;

  case 781:
#line 6323 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->charset=NULL; }
    break;

  case 784:
#line 6326 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->charset=&my_charset_bin; }
    break;

  case 785:
#line 6327 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->charset=(yyvsp[(2) - (3)].charset); }
    break;

  case 786:
#line 6329 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->charset= NULL;
            Lex->type|= BINCMP_FLAG;
          }
    break;

  case 787:
#line 6334 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->charset= (yyvsp[(3) - (3)].charset);
            Lex->type|= BINCMP_FLAG;
          }
    break;

  case 788:
#line 6341 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { }
    break;

  case 789:
#line 6342 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->type|= BINCMP_FLAG; }
    break;

  case 790:
#line 6347 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
          if ((yyvsp[(2) - (2)].ulong_num) == 0)
          {
            my_parse_error(ER(ER_SYNTAX_ERROR));
            MYSQL_YYABORT;
          }
        }
    break;

  case 791:
#line 6355 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(2) - (4)].ulong_num); }
    break;

  case 792:
#line 6359 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 0; }
    break;

  case 793:
#line 6360 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 1 << MY_STRXFRM_DESC_SHIFT; }
    break;

  case 794:
#line 6364 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 1 << MY_STRXFRM_REVERSE_SHIFT; }
    break;

  case 795:
#line 6367 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 0; }
    break;

  case 796:
#line 6368 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(1) - (1)].ulong_num); }
    break;

  case 797:
#line 6369 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(1) - (2)].ulong_num) | (yyvsp[(2) - (2)].ulong_num); }
    break;

  case 798:
#line 6370 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(1) - (1)].ulong_num) ; }
    break;

  case 799:
#line 6375 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
          (yyval.ulong_num)= (yyvsp[(1) - (1)].ulong_num) < 1 ? 1 : ((yyvsp[(1) - (1)].ulong_num) > MY_STRXFRM_NLEVELS ? MY_STRXFRM_NLEVELS : (yyvsp[(1) - (1)].ulong_num));
          (yyval.ulong_num)--;
        }
    break;

  case 800:
#line 6383 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
          (yyval.ulong_num)= (1 | (yyvsp[(2) - (2)].ulong_num)) << (yyvsp[(1) - (2)].ulong_num);
        }
    break;

  case 801:
#line 6389 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(1) - (1)].ulong_num); }
    break;

  case 802:
#line 6390 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.ulong_num)|= (yyvsp[(3) - (3)].ulong_num); }
    break;

  case 803:
#line 6395 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
          uint start= (yyvsp[(1) - (3)].ulong_num);
          uint end= (yyvsp[(3) - (3)].ulong_num);
          for ((yyval.ulong_num)= 0; start <= end; start++)
            (yyval.ulong_num)|= (1 << start);
        }
    break;

  case 804:
#line 6404 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(1) - (1)].ulong_num); }
    break;

  case 805:
#line 6405 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(1) - (1)].ulong_num); }
    break;

  case 806:
#line 6409 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.ulong_num)= 0; }
    break;

  case 807:
#line 6410 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (yyvsp[(2) - (2)].ulong_num); }
    break;

  case 810:
#line 6424 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.table)=(yyvsp[(2) - (5)].table);
          }
    break;

  case 811:
#line 6431 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->ref_list.empty(); }
    break;

  case 813:
#line 6437 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Key_part_spec *key= new Key_part_spec((yyvsp[(3) - (3)].lex_str), 0);
            if (key == NULL)
              MYSQL_YYABORT;
            Lex->ref_list.push_back(key);
          }
    break;

  case 814:
#line 6444 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Key_part_spec *key= new Key_part_spec((yyvsp[(1) - (1)].lex_str), 0);
            if (key == NULL)
              MYSQL_YYABORT;
            LEX *lex= Lex;
            lex->ref_list.empty();
            lex->ref_list.push_back(key);
          }
    break;

  case 815:
#line 6456 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->fk_match_option= Foreign_key::FK_MATCH_UNDEF; }
    break;

  case 816:
#line 6458 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->fk_match_option= Foreign_key::FK_MATCH_FULL; }
    break;

  case 817:
#line 6460 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->fk_match_option= Foreign_key::FK_MATCH_PARTIAL; }
    break;

  case 818:
#line 6462 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->fk_match_option= Foreign_key::FK_MATCH_SIMPLE; }
    break;

  case 819:
#line 6467 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->fk_update_opt= Foreign_key::FK_OPTION_UNDEF;
            lex->fk_delete_opt= Foreign_key::FK_OPTION_UNDEF;
          }
    break;

  case 820:
#line 6473 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[(3) - (3)].m_fk_option);
            lex->fk_delete_opt= Foreign_key::FK_OPTION_UNDEF;
          }
    break;

  case 821:
#line 6479 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->fk_update_opt= Foreign_key::FK_OPTION_UNDEF;
            lex->fk_delete_opt= (yyvsp[(3) - (3)].m_fk_option);
          }
    break;

  case 822:
#line 6486 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[(3) - (6)].m_fk_option);
            lex->fk_delete_opt= (yyvsp[(6) - (6)].m_fk_option);
          }
    break;

  case 823:
#line 6493 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[(6) - (6)].m_fk_option);
            lex->fk_delete_opt= (yyvsp[(3) - (6)].m_fk_option);
          }
    break;

  case 824:
#line 6501 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.m_fk_option)= Foreign_key::FK_OPTION_RESTRICT; }
    break;

  case 825:
#line 6502 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.m_fk_option)= Foreign_key::FK_OPTION_CASCADE; }
    break;

  case 826:
#line 6503 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.m_fk_option)= Foreign_key::FK_OPTION_SET_NULL; }
    break;

  case 827:
#line 6504 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.m_fk_option)= Foreign_key::FK_OPTION_NO_ACTION; }
    break;

  case 828:
#line 6505 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.m_fk_option)= Foreign_key::FK_OPTION_DEFAULT;  }
    break;

  case 829:
#line 6509 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.key_type)= Key::MULTIPLE; }
    break;

  case 830:
#line 6513 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.key_type)= Key::PRIMARY; }
    break;

  case 831:
#line 6514 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.key_type)= Key::UNIQUE; }
    break;

  case 832:
#line 6518 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 833:
#line 6519 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 834:
#line 6523 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 836:
#line 6528 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 837:
#line 6529 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 838:
#line 6530 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 839:
#line 6534 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.key_type)= Key::MULTIPLE; }
    break;

  case 840:
#line 6535 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.key_type)= Key::UNIQUE; }
    break;

  case 841:
#line 6539 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.key_type)= Key::FULLTEXT;}
    break;

  case 842:
#line 6544 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
#ifdef HAVE_SPATIAL
            (yyval.key_type)= Key::SPATIAL;
#else
            my_error(ER_FEATURE_DISABLED, MYF(0),
                     sym_group_geom.name, sym_group_geom.needed_define);
            MYSQL_YYABORT;
#endif
          }
    break;

  case 843:
#line 6556 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->key_create_info= default_key_create_info;
          }
    break;

  case 846:
#line 6573 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 848:
#line 6578 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 850:
#line 6583 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 858:
#line 6603 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->key_create_info.algorithm= (yyvsp[(2) - (2)].key_alg); }
    break;

  case 859:
#line 6604 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->key_create_info.algorithm= (yyvsp[(2) - (2)].key_alg); }
    break;

  case 860:
#line 6609 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->key_create_info.block_size= (yyvsp[(3) - (3)].ulong_num); }
    break;

  case 861:
#line 6610 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->key_create_info.comment= (yyvsp[(2) - (2)].lex_str); }
    break;

  case 866:
#line 6625 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if (plugin_is_ready(&(yyvsp[(3) - (3)].lex_str), MYSQL_FTPARSER_PLUGIN))
              Lex->key_create_info.parser_name= (yyvsp[(3) - (3)].lex_str);
            else
            {
              my_error(ER_FUNCTION_NOT_DEFINED, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 867:
#line 6637 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.key_alg)= HA_KEY_ALG_BTREE; }
    break;

  case 868:
#line 6638 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.key_alg)= HA_KEY_ALG_RTREE; }
    break;

  case 869:
#line 6639 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.key_alg)= HA_KEY_ALG_HASH; }
    break;

  case 870:
#line 6643 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->col_list.push_back((yyvsp[(3) - (4)].key_part)); }
    break;

  case 871:
#line 6644 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->col_list.push_back((yyvsp[(1) - (2)].key_part)); }
    break;

  case 872:
#line 6649 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.key_part)= new Key_part_spec((yyvsp[(1) - (1)].lex_str), 0);
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 873:
#line 6655 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            int key_part_len= atoi((yyvsp[(3) - (4)].lex_str).str);
            if (!key_part_len)
            {
              my_error(ER_KEY_PART_0, MYF(0), (yyvsp[(1) - (4)].lex_str).str);
            }
            (yyval.key_part)= new Key_part_spec((yyvsp[(1) - (4)].lex_str), (uint) key_part_len);
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 874:
#line 6668 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.lex_str)= null_lex_str; }
    break;

  case 875:
#line 6669 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str); }
    break;

  case 876:
#line 6673 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.lex_str)= null_lex_str; }
    break;

  case 877:
#line 6674 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(2) - (2)].lex_str); }
    break;

  case 878:
#line 6678 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->interval_list.push_back((yyvsp[(1) - (1)].string)); }
    break;

  case 879:
#line 6679 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->interval_list.push_back((yyvsp[(3) - (3)].string)); }
    break;

  case 880:
#line 6687 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->name.str= 0;
            lex->name.length= 0;
            lex->sql_command= SQLCOM_ALTER_TABLE;
            lex->duplicates= DUP_ERROR; 
            if (!lex->select_lex.add_table_to_list(thd, (yyvsp[(4) - (4)].table), NULL,
                                                   TL_OPTION_UPDATING,
                                                   TL_READ_NO_INSERT,
                                                   MDL_SHARED_NO_WRITE))
              MYSQL_YYABORT;
            lex->col_list.empty();
            lex->select_lex.init_order();
            lex->select_lex.db= (lex->select_lex.table_list.first)->db;
            memset(&lex->create_info, 0, sizeof(lex->create_info));
            lex->create_info.db_type= 0;
            lex->create_info.default_table_charset= NULL;
            lex->create_info.row_type= ROW_TYPE_NOT_USED;
            lex->alter_info.reset();
            lex->no_write_to_binlog= 0;
            lex->create_info.storage_media= HA_SM_DEFAULT;
            lex->create_last_non_select_table= lex->last_table();
            DBUG_ASSERT(!lex->m_sql_cmd);
          }
    break;

  case 881:
#line 6713 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (!lex->m_sql_cmd)
            {
              /* Create a generic ALTER TABLE statment. */
              lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_alter_table();
              if (lex->m_sql_cmd == NULL)
                MYSQL_YYABORT;
            }
          }
    break;

  case 882:
#line 6725 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->create_info.default_table_charset= NULL;
            Lex->create_info.used_fields= 0;
          }
    break;

  case 883:
#line 6730 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_ALTER_DB;
            lex->name= (yyvsp[(3) - (5)].lex_str);
            if (lex->name.str == NULL &&
                lex->copy_db_to(&lex->name.str, &lex->name.length))
              MYSQL_YYABORT;
          }
    break;

  case 884:
#line 6739 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "DATABASE");
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_ALTER_DB_UPGRADE;
            lex->name= (yyvsp[(3) - (7)].lex_str);
          }
    break;

  case 885:
#line 6750 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
    break;

  case 886:
#line 6761 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_PROCEDURE;
            lex->spname= (yyvsp[(3) - (5)].spname);
          }
    break;

  case 887:
#line 6768 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
    break;

  case 888:
#line 6779 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_FUNCTION;
            lex->spname= (yyvsp[(3) - (5)].spname);
          }
    break;

  case 889:
#line 6786 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "ALTER VIEW");
              MYSQL_YYABORT;
            }
            lex->create_view_mode= VIEW_ALTER;
          }
    break;

  case 890:
#line 6797 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 891:
#line 6804 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "ALTER VIEW");
              MYSQL_YYABORT;
            }
            lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED;
            lex->create_view_mode= VIEW_ALTER;
          }
    break;

  case 892:
#line 6816 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 893:
#line 6818 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            /* 
              It is safe to use Lex->spname because
              ALTER EVENT xxx RENATE TO yyy DO ALTER EVENT RENAME TO
              is not allowed. Lex->spname is used in the case of RENAME TO
              If it had to be supported spname had to be added to
              Event_parse_data.
            */

            if (!(Lex->event_parse_data= Event_parse_data::new_instance(YYTHD)))
              MYSQL_YYABORT;
            Lex->event_parse_data->identifier= (yyvsp[(4) - (4)].spname);

            Lex->sql_command= SQLCOM_ALTER_EVENT;
          }
    break;

  case 894:
#line 6838 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if (!((yyvsp[(6) - (10)].num) || (yyvsp[(7) - (10)].num) || (yyvsp[(8) - (10)].num) || (yyvsp[(9) - (10)].num) || (yyvsp[(10) - (10)].num)))
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_ALTER_EVENT;
          }
    break;

  case 895:
#line 6851 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_TABLESPACE;
          }
    break;

  case 896:
#line 6856 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_LOGFILE_GROUP;
          }
    break;

  case 897:
#line 6861 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= CHANGE_FILE_TABLESPACE;
          }
    break;

  case 898:
#line 6866 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= ALTER_ACCESS_MODE_TABLESPACE;
          }
    break;

  case 899:
#line 6871 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_SERVER;
            lex->server_options.server_name= (yyvsp[(3) - (7)].lex_str).str;
            lex->server_options.server_name_length= (yyvsp[(3) - (7)].lex_str).length;
          }
    break;

  case 900:
#line 6880 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)= 0;}
    break;

  case 901:
#line 6881 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 902:
#line 6882 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 903:
#line 6883 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 904:
#line 6887 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)= 0;}
    break;

  case 905:
#line 6889 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            /*
              Use lex's spname to hold the new name.
              The original name is in the Event_parse_data object
            */
            Lex->spname= (yyvsp[(3) - (3)].spname); 
            (yyval.num)= 1;
          }
    break;

  case 906:
#line 6900 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)= 0;}
    break;

  case 907:
#line 6901 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 908:
#line 6905 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.lex_str).str= 0; (yyval.lex_str).length= 0; }
    break;

  case 909:
#line 6906 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str); }
    break;

  case 911:
#line 6911 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->alter_info.tablespace_op= DISCARD_TABLESPACE; }
    break;

  case 912:
#line 6912 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->alter_info.tablespace_op= IMPORT_TABLESPACE; }
    break;

  case 918:
#line 6928 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= ALTER_DROP_PARTITION;
          }
    break;

  case 919:
#line 6933 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_info.flags|= ALTER_REBUILD_PARTITION;
            lex->no_write_to_binlog= (yyvsp[(3) - (4)].num);
          }
    break;

  case 920:
#line 6940 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[(3) - (4)].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_optimize_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 922:
#line 6954 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[(3) - (4)].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_analyze_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 923:
#line 6966 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_check_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 925:
#line 6979 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[(3) - (4)].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_repair_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 927:
#line 6992 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_info.flags|= ALTER_COALESCE_PARTITION;
            lex->no_write_to_binlog= (yyvsp[(3) - (4)].num);
            lex->alter_info.num_parts= (yyvsp[(4) - (4)].ulong_num);
          }
    break;

  case 928:
#line 6999 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_truncate_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 930:
#line 7012 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            size_t dummy;
            lex->select_lex.db=(yyvsp[(6) - (7)].table)->db.str;
            if (lex->select_lex.db == NULL &&
                lex->copy_db_to(&lex->select_lex.db, &dummy))
            {
              MYSQL_YYABORT;
            }
            lex->name= (yyvsp[(6) - (7)].table)->table;
            lex->alter_info.flags|= ALTER_EXCHANGE_PARTITION;
            if (!lex->select_lex.add_table_to_list(thd, (yyvsp[(6) - (7)].table), NULL,
                                                   TL_OPTION_UPDATING,
                                                   TL_READ_NO_INSERT,
                                                   MDL_SHARED_NO_WRITE))
              MYSQL_YYABORT;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                               Sql_cmd_alter_table_exchange_partition();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 931:
#line 7039 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= ALTER_REMOVE_PARTITIONING;
          }
    break;

  case 932:
#line 7046 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= ALTER_ALL_PARTITION;
          }
    break;

  case 934:
#line 7054 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->part_info= new partition_info();
            if (!lex->part_info)
            {
              mem_alloc_error(sizeof(partition_info));
              MYSQL_YYABORT;
            }
            lex->alter_info.flags|= ALTER_ADD_PARTITION;
            lex->no_write_to_binlog= (yyvsp[(3) - (3)].num);
          }
    break;

  case 935:
#line 7066 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 937:
#line 7072 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->part_info->num_parts= lex->part_info->partitions.elements;
          }
    break;

  case 938:
#line 7077 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->part_info->num_parts= (yyvsp[(2) - (2)].ulong_num);
          }
    break;

  case 939:
#line 7084 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->part_info= new partition_info();
            if (!lex->part_info)
            {
              mem_alloc_error(sizeof(partition_info));
              MYSQL_YYABORT;
            }
            lex->no_write_to_binlog= (yyvsp[(3) - (3)].num);
          }
    break;

  case 941:
#line 7099 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= ALTER_TABLE_REORG;
          }
    break;

  case 942:
#line 7103 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= ALTER_REORGANIZE_PARTITION;
          }
    break;

  case 943:
#line 7107 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            partition_info *part_info= Lex->part_info;
            part_info->num_parts= part_info->partitions.elements;
          }
    break;

  case 944:
#line 7114 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 945:
#line 7115 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 946:
#line 7120 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if (Lex->alter_info.partition_names.push_back((yyvsp[(1) - (1)].lex_str).str))
            {
              mem_alloc_error(1);
              MYSQL_YYABORT;
            }
          }
    break;

  case 949:
#line 7140 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->change=0;
            lex->alter_info.flags|= ALTER_ADD_COLUMN;
          }
    break;

  case 950:
#line 7149 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->create_last_non_select_table= Lex->last_table();
          }
    break;

  case 951:
#line 7153 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->create_last_non_select_table= Lex->last_table();
            Lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
    break;

  case 952:
#line 7158 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= ALTER_ADD_COLUMN | ALTER_ADD_INDEX;
          }
    break;

  case 953:
#line 7162 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->change= (yyvsp[(3) - (3)].lex_str).str;
            lex->alter_info.flags|= ALTER_CHANGE_COLUMN;
          }
    break;

  case 954:
#line 7168 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->create_last_non_select_table= Lex->last_table();
          }
    break;

  case 955:
#line 7172 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->length=lex->dec=0; lex->type=0;
            lex->default_value= lex->on_update_value= 0;
            lex->comment=null_lex_str;
            lex->charset= NULL;
            lex->alter_info.flags|= ALTER_CHANGE_COLUMN;
          }
    break;

  case 956:
#line 7181 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (add_field_to_list(lex->thd,&(yyvsp[(3) - (6)].lex_str),
                                  (enum enum_field_types) (yyvsp[(5) - (6)].num),
                                  lex->length,lex->dec,lex->type,
                                  lex->default_value, lex->on_update_value,
                                  &lex->comment,
                                  (yyvsp[(3) - (6)].lex_str).str, &lex->interval_list, lex->charset,
                                  lex->uint_geom_type))
              MYSQL_YYABORT;
          }
    break;

  case 957:
#line 7193 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->create_last_non_select_table= Lex->last_table();
          }
    break;

  case 958:
#line 7197 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Alter_drop *ad= new Alter_drop(Alter_drop::COLUMN, (yyvsp[(3) - (4)].lex_str).str);
            if (ad == NULL)
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad);
            lex->alter_info.flags|= ALTER_DROP_COLUMN;
          }
    break;

  case 959:
#line 7206 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= ALTER_DROP_INDEX | ALTER_FOREIGN_KEY;
          }
    break;

  case 960:
#line 7210 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Alter_drop *ad= new Alter_drop(Alter_drop::KEY, primary_key_name);
            if (ad == NULL)
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad);
            lex->alter_info.flags|= ALTER_DROP_INDEX;
          }
    break;

  case 961:
#line 7219 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Alter_drop *ad= new Alter_drop(Alter_drop::KEY, (yyvsp[(3) - (3)].lex_str).str);
            if (ad == NULL)
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad);
            lex->alter_info.flags|= ALTER_DROP_INDEX;
          }
    break;

  case 962:
#line 7228 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->alter_info.keys_onoff= DISABLE;
            lex->alter_info.flags|= ALTER_KEYS_ONOFF;
          }
    break;

  case 963:
#line 7234 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->alter_info.keys_onoff= ENABLE;
            lex->alter_info.flags|= ALTER_KEYS_ONOFF;
          }
    break;

  case 964:
#line 7240 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Alter_column *ac= new Alter_column((yyvsp[(3) - (6)].lex_str).str,(yyvsp[(6) - (6)].item));
            if (ac == NULL)
              MYSQL_YYABORT;
            lex->alter_info.alter_list.push_back(ac);
            lex->alter_info.flags|= ALTER_CHANGE_COLUMN_DEFAULT;
          }
    break;

  case 965:
#line 7249 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Alter_column *ac= new Alter_column((yyvsp[(3) - (5)].lex_str).str, (Item*) 0);
            if (ac == NULL)
              MYSQL_YYABORT;
            lex->alter_info.alter_list.push_back(ac);
            lex->alter_info.flags|= ALTER_CHANGE_COLUMN_DEFAULT;
          }
    break;

  case 966:
#line 7258 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            size_t dummy;
            lex->select_lex.db=(yyvsp[(3) - (3)].table)->db.str;
            if (lex->select_lex.db == NULL &&
                lex->copy_db_to(&lex->select_lex.db, &dummy))
            {
              MYSQL_YYABORT;
            }
            if (check_table_name((yyvsp[(3) - (3)].table)->table.str,(yyvsp[(3) - (3)].table)->table.length, FALSE) ||
                ((yyvsp[(3) - (3)].table)->db.str && check_and_convert_db_name(&(yyvsp[(3) - (3)].table)->db, FALSE)))
            {
              my_error(ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[(3) - (3)].table)->table.str);
              MYSQL_YYABORT;
            }
            lex->name= (yyvsp[(3) - (3)].table)->table;
            lex->alter_info.flags|= ALTER_RENAME;
          }
    break;

  case 967:
#line 7277 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if (!(yyvsp[(4) - (5)].charset))
            {
              THD *thd= YYTHD;
              (yyvsp[(4) - (5)].charset)= thd->variables.collation_database;
            }
            (yyvsp[(5) - (5)].charset)= (yyvsp[(5) - (5)].charset) ? (yyvsp[(5) - (5)].charset) : (yyvsp[(4) - (5)].charset);
            if (!my_charset_same((yyvsp[(4) - (5)].charset),(yyvsp[(5) - (5)].charset)))
            {
              my_error(ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                       (yyvsp[(5) - (5)].charset)->name, (yyvsp[(4) - (5)].charset)->csname);
              MYSQL_YYABORT;
            }
            LEX *lex= Lex;
            lex->create_info.table_charset=
            lex->create_info.default_table_charset= (yyvsp[(5) - (5)].charset);
            lex->create_info.used_fields|= (HA_CREATE_USED_CHARSET |
              HA_CREATE_USED_DEFAULT_CHARSET);
            lex->alter_info.flags|= ALTER_CONVERT;
          }
    break;

  case 968:
#line 7298 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->alter_info.flags|= ALTER_OPTIONS;
            if ((lex->create_info.used_fields & HA_CREATE_USED_ENGINE) &&
                !lex->create_info.db_type)
            {
              lex->create_info.used_fields&= ~HA_CREATE_USED_ENGINE;
            }
          }
    break;

  case 969:
#line 7308 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= ALTER_RECREATE;
          }
    break;

  case 970:
#line 7312 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->alter_info.flags|= ALTER_ORDER;
          }
    break;

  case 971:
#line 7319 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 972:
#line 7320 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 973:
#line 7324 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->ignore= 0;}
    break;

  case 974:
#line 7325 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->ignore= 1;}
    break;

  case 975:
#line 7329 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->drop_mode= DROP_DEFAULT; }
    break;

  case 976:
#line 7330 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->drop_mode= DROP_RESTRICT; }
    break;

  case 977:
#line 7331 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->drop_mode= DROP_CASCADE; }
    break;

  case 978:
#line 7335 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 979:
#line 7336 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { store_position_for_column((yyvsp[(2) - (2)].lex_str).str); }
    break;

  case 980:
#line 7337 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { store_position_for_column(first_keyword); }
    break;

  case 981:
#line 7341 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 982:
#line 7342 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 983:
#line 7343 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 984:
#line 7344 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 985:
#line 7349 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_START;
            lex->type = 0;
            /* We'll use mi structure for UNTIL options */
            lex->mi.set_unspecified();
            /* If you change this code don't forget to update SLAVE START too */
          }
    break;

  case 986:
#line 7358 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 987:
#line 7360 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            /*
              It is not possible to set user's information when
              one is trying to start the SQL Thread.
            */
            if ((Lex->slave_thd_opt & SLAVE_SQL) == SLAVE_SQL &&
                (Lex->slave_thd_opt & SLAVE_IO) != SLAVE_IO &&
                (Lex->slave_connection.user ||
                 Lex->slave_connection.password ||
                 Lex->slave_connection.plugin_auth ||
                 Lex->slave_connection.plugin_dir))
            {
              my_error(ER_SQLTHREAD_WITH_SECURE_SLAVE, MYF(0));
              MYSQL_YYABORT;
            }
          }
    break;

  case 988:
#line 7377 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_STOP;
            lex->type = 0;
            /* If you change this code don't forget to update SLAVE STOP too */
          }
    break;

  case 989:
#line 7387 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_BEGIN;
            /* READ ONLY and READ WRITE are mutually exclusive. */
            if (((yyvsp[(3) - (3)].num) & MYSQL_START_TRANS_OPT_READ_WRITE) &&
                ((yyvsp[(3) - (3)].num) & MYSQL_START_TRANS_OPT_READ_ONLY))
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            lex->start_transaction_opt= (yyvsp[(3) - (3)].num);
          }
    break;

  case 990:
#line 7403 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.num)= 0;
          }
    break;

  case 991:
#line 7407 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.num)= (yyvsp[(1) - (1)].num);
          }
    break;

  case 992:
#line 7414 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.num)= (yyvsp[(1) - (1)].num);
          }
    break;

  case 993:
#line 7418 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.num)= (yyvsp[(1) - (3)].num) | (yyvsp[(3) - (3)].num);
          }
    break;

  case 994:
#line 7425 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_WITH_CONS_SNAPSHOT;
          }
    break;

  case 995:
#line 7429 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_ONLY;
          }
    break;

  case 996:
#line 7433 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_WRITE;
          }
    break;

  case 998:
#line 7444 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->slave_connection.user= 0;
          }
    break;

  case 999:
#line 7448 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->slave_connection.user= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 1000:
#line 7454 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->slave_connection.password= 0;
          }
    break;

  case 1001:
#line 7458 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->slave_connection.password= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 1002:
#line 7463 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->slave_connection.plugin_auth= 0;
          }
    break;

  case 1003:
#line 7467 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->slave_connection.plugin_auth= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 1004:
#line 7473 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->slave_connection.plugin_dir= 0;
          }
    break;

  case 1005:
#line 7477 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->slave_connection.plugin_dir= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 1006:
#line 7483 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->slave_thd_opt= 0; }
    break;

  case 1007:
#line 7485 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1010:
#line 7494 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1011:
#line 7495 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->slave_thd_opt|=SLAVE_SQL; }
    break;

  case 1012:
#line 7496 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->slave_thd_opt|=SLAVE_IO; }
    break;

  case 1013:
#line 7500 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1014:
#line 7502 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (((lex->mi.log_file_name || lex->mi.pos) &&
                (lex->mi.relay_log_name || lex->mi.relay_log_pos) &&
                lex->mi.gtid) ||
                !((lex->mi.log_file_name && lex->mi.pos) ||
                  (lex->mi.relay_log_name && lex->mi.relay_log_pos) ||
                  lex->mi.gtid))
            {
               my_message(ER_BAD_SLAVE_UNTIL_COND,
                          ER(ER_BAD_SLAVE_UNTIL_COND), MYF(0));
               MYSQL_YYABORT;
            }
          }
    break;

  case 1017:
#line 7522 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->mi.gtid= (yyvsp[(3) - (3)].lex_str).str;
          }
    break;

  case 1018:
#line 7529 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_CHECKSUM;
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
    break;

  case 1019:
#line 7536 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1020:
#line 7540 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->check_opt.flags= 0; }
    break;

  case 1021:
#line 7541 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->check_opt.flags= T_QUICK; }
    break;

  case 1022:
#line 7542 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->check_opt.flags= T_EXTEND; }
    break;

  case 1023:
#line 7547 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_REPAIR;
            lex->no_write_to_binlog= (yyvsp[(2) - (3)].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
    break;

  case 1024:
#line 7557 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_repair_table();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1025:
#line 7568 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->check_opt.flags = T_MEDIUM; }
    break;

  case 1026:
#line 7569 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1027:
#line 7573 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1028:
#line 7574 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1029:
#line 7578 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->check_opt.flags|= T_QUICK; }
    break;

  case 1030:
#line 7579 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->check_opt.flags|= T_EXTEND; }
    break;

  case 1031:
#line 7580 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->check_opt.sql_flags|= TT_USEFRM; }
    break;

  case 1032:
#line 7585 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_ANALYZE;
            lex->no_write_to_binlog= (yyvsp[(2) - (3)].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
    break;

  case 1033:
#line 7595 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_analyze_table();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1034:
#line 7607 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_BINLOG_BASE64_EVENT;
            Lex->comment= (yyvsp[(2) - (2)].lex_str);
          }
    break;

  case 1035:
#line 7615 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "CHECK");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CHECK;
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
    break;

  case 1036:
#line 7630 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_check_table();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1037:
#line 7641 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->check_opt.flags = T_MEDIUM; }
    break;

  case 1038:
#line 7642 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1039:
#line 7646 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1040:
#line 7647 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1041:
#line 7651 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->check_opt.flags|= T_QUICK; }
    break;

  case 1042:
#line 7652 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->check_opt.flags|= T_FAST; }
    break;

  case 1043:
#line 7653 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->check_opt.flags|= T_MEDIUM; }
    break;

  case 1044:
#line 7654 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->check_opt.flags|= T_EXTEND; }
    break;

  case 1045:
#line 7655 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->check_opt.flags|= T_CHECK_ONLY_CHANGED; }
    break;

  case 1046:
#line 7656 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->check_opt.sql_flags|= TT_FOR_UPGRADE; }
    break;

  case 1047:
#line 7661 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_OPTIMIZE;
            lex->no_write_to_binlog= (yyvsp[(2) - (3)].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
    break;

  case 1048:
#line 7671 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_optimize_table();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1049:
#line 7682 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 1050:
#line 7683 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1051:
#line 7684 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1052:
#line 7689 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_RENAME_TABLE;
          }
    break;

  case 1053:
#line 7693 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1054:
#line 7695 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_RENAME_USER;
          }
    break;

  case 1055:
#line 7702 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(1) - (3)].lex_user)) || Lex->users_list.push_back((yyvsp[(3) - (3)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 1056:
#line 7707 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(3) - (5)].lex_user)) || Lex->users_list.push_back((yyvsp[(5) - (5)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 1059:
#line 7720 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            SELECT_LEX *sl= lex->current_select;
            if (!sl->add_table_to_list(lex->thd, (yyvsp[(1) - (3)].table),NULL,TL_OPTION_UPDATING,
                                       TL_IGNORE, MDL_EXCLUSIVE) ||
                !sl->add_table_to_list(lex->thd, (yyvsp[(3) - (3)].table),NULL,TL_OPTION_UPDATING,
                                       TL_IGNORE, MDL_EXCLUSIVE))
              MYSQL_YYABORT;
          }
    break;

  case 1060:
#line 7733 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->alter_info.reset();
          }
    break;

  case 1061:
#line 7737 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ASSIGN_TO_KEYCACHE;
            lex->ident= (yyvsp[(6) - (6)].lex_str);
          }
    break;

  case 1066:
#line 7756 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (2)].table), NULL, 0, TL_READ,
                                           MDL_SHARED_READ,
                                           Select->pop_index_hints()))
              MYSQL_YYABORT;
          }
    break;

  case 1067:
#line 7766 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (3)].table), NULL, 0, TL_READ, 
                                           MDL_SHARED_READ,
                                           Select->pop_index_hints()))
              MYSQL_YYABORT;
          }
    break;

  case 1068:
#line 7775 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str); }
    break;

  case 1069:
#line 7776 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.lex_str) = default_key_cache_base; }
    break;

  case 1070:
#line 7781 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_PRELOAD_KEYS;
            lex->alter_info.reset();
          }
    break;

  case 1071:
#line 7787 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1076:
#line 7802 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (3)].table), NULL, (yyvsp[(3) - (3)].num), TL_READ,
                                           MDL_SHARED_READ,
                                           Select->pop_index_hints()))
              MYSQL_YYABORT;
          }
    break;

  case 1077:
#line 7812 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (4)].table), NULL, (yyvsp[(4) - (4)].num), TL_READ,
                                           MDL_SHARED_READ,
                                           Select->pop_index_hints()))
              MYSQL_YYABORT;
          }
    break;

  case 1078:
#line 7822 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->alter_info.flags|= ALTER_ADMIN_PARTITION;
          }
    break;

  case 1080:
#line 7829 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->select_lex.alloc_index_hints(YYTHD);
            Select->set_index_hint_type(INDEX_HINT_USE, 
                                        old_mode ? 
                                        INDEX_HINT_MASK_JOIN : 
                                        INDEX_HINT_MASK_ALL);
          }
    break;

  case 1082:
#line 7840 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { }
    break;

  case 1084:
#line 7846 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 1085:
#line 7847 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)= TL_OPTION_IGNORE_LEAVES; }
    break;

  case 1086:
#line 7857 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SELECT;
          }
    break;

  case 1089:
#line 7871 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if (setup_select_in_parentheses(Lex))
              MYSQL_YYABORT;
          }
    break;

  case 1091:
#line 7881 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if (setup_select_in_parentheses(Lex))
              MYSQL_YYABORT;
          }
    break;

  case 1093:
#line 7890 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            SELECT_LEX * sel= lex->current_select;
            if (lex->current_select->set_braces(0))
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            if (sel->linkage == UNION_TYPE &&
                sel->master_unit()->first_select()->braces)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
          }
    break;

  case 1095:
#line 7909 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            SELECT_LEX *sel= lex->current_select;
            if (sel->linkage != UNION_TYPE)
              mysql_init_select(lex);
            lex->current_select->parsing_place= SELECT_LIST;
          }
    break;

  case 1096:
#line 7917 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Select->parsing_place= NO_MATTER;
          }
    break;

  case 1098:
#line 7924 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1103:
#line 7934 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Select->context.table_list=
              Select->context.first_name_resolution_table=
                Select->table_list.first;
          }
    break;

  case 1106:
#line 7949 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if (Select->options & SELECT_DISTINCT && Select->options & SELECT_ALL)
            {
              my_error(ER_WRONG_USAGE, MYF(0), "ALL", "DISTINCT");
              MYSQL_YYABORT;
            }
          }
    break;

  case 1110:
#line 7966 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            /* 
              Allow this flag only on the first top-level SELECT statement, if
              SQL_CACHE wasn't specified, and only once per query.
             */
            if (Lex->current_select != &Lex->select_lex)
            {
              my_error(ER_CANT_USE_OPTION_HERE, MYF(0), "SQL_NO_CACHE");
              MYSQL_YYABORT;
            }
            else if (Lex->select_lex.sql_cache == SELECT_LEX::SQL_CACHE)
            {
              my_error(ER_WRONG_USAGE, MYF(0), "SQL_CACHE", "SQL_NO_CACHE");
              MYSQL_YYABORT;
            }
            else if (Lex->select_lex.sql_cache == SELECT_LEX::SQL_NO_CACHE)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "SQL_NO_CACHE");
              MYSQL_YYABORT;
            }
            else
            {
              Lex->safe_to_cache_query=0;
              Lex->select_lex.options&= ~OPTION_TO_QUERY_CACHE;
              Lex->select_lex.sql_cache= SELECT_LEX::SQL_NO_CACHE;
            }
          }
    break;

  case 1111:
#line 7994 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            /* 
              Allow this flag only on the first top-level SELECT statement, if
              SQL_NO_CACHE wasn't specified, and only once per query.
             */
            if (Lex->current_select != &Lex->select_lex)
            {
              my_error(ER_CANT_USE_OPTION_HERE, MYF(0), "SQL_CACHE");
              MYSQL_YYABORT;
            }         
            else if (Lex->select_lex.sql_cache == SELECT_LEX::SQL_NO_CACHE)
            {
              my_error(ER_WRONG_USAGE, MYF(0), "SQL_NO_CACHE", "SQL_CACHE");
              MYSQL_YYABORT;
            }
            else if (Lex->select_lex.sql_cache == SELECT_LEX::SQL_CACHE)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "SQL_CACHE");
              MYSQL_YYABORT;
            }
            else
            {
              Lex->safe_to_cache_query=1;
              Lex->select_lex.options|= OPTION_TO_QUERY_CACHE;
              Lex->select_lex.sql_cache= SELECT_LEX::SQL_CACHE;
            }
          }
    break;

  case 1113:
#line 8026 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->current_select->set_lock_for_tables(TL_WRITE);
            lex->safe_to_cache_query=0;
          }
    break;

  case 1114:
#line 8032 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->current_select->
              set_lock_for_tables(TL_READ_WITH_SHARED_LOCKS);
            lex->safe_to_cache_query=0;
          }
    break;

  case 1117:
#line 8044 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            Item *item= new (thd->mem_root)
                          Item_field(&thd->lex->current_select->context,
                                     NULL, NULL, "*");
            if (item == NULL)
              MYSQL_YYABORT;
            if (add_item_to_list(thd, item))
              MYSQL_YYABORT;
            (thd->lex->current_select->with_wild)++;
          }
    break;

  case 1118:
#line 8059 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;

            if (add_item_to_list(thd, (yyvsp[(2) - (3)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1119:
#line 8066 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            DBUG_ASSERT((yyvsp[(1) - (4)].simple_string) < (yyvsp[(3) - (4)].simple_string));

            if (add_item_to_list(thd, (yyvsp[(2) - (4)].item)))
              MYSQL_YYABORT;
            if ((yyvsp[(4) - (4)].lex_str).str)
            {
              if (Lex->sql_command == SQLCOM_CREATE_VIEW &&
                  check_column_name((yyvsp[(4) - (4)].lex_str).str))
              {
                my_error(ER_WRONG_COLUMN_NAME, MYF(0), (yyvsp[(4) - (4)].lex_str).str);
                MYSQL_YYABORT;
              }
              (yyvsp[(2) - (4)].item)->is_autogenerated_name= FALSE;
              (yyvsp[(2) - (4)].item)->set_name((yyvsp[(4) - (4)].lex_str).str, (yyvsp[(4) - (4)].lex_str).length, system_charset_info);
            }
            else if (!(yyvsp[(2) - (4)].item)->name)
            {
              (yyvsp[(2) - (4)].item)->set_name((yyvsp[(1) - (4)].simple_string), (uint) ((yyvsp[(3) - (4)].simple_string) - (yyvsp[(1) - (4)].simple_string)), thd->charset());
            }
          }
    break;

  case 1120:
#line 8091 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.simple_string)= (char*) YYLIP->get_cpp_tok_start();
          }
    break;

  case 1121:
#line 8097 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.simple_string)= (char*) YYLIP->get_cpp_tok_end();
          }
    break;

  case 1122:
#line 8103 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.lex_str)=null_lex_str;}
    break;

  case 1123:
#line 8104 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(2) - (2)].lex_str); }
    break;

  case 1124:
#line 8105 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(2) - (2)].lex_str); }
    break;

  case 1125:
#line 8106 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str); }
    break;

  case 1126:
#line 8107 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str); }
    break;

  case 1127:
#line 8111 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1128:
#line 8112 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1129:
#line 8118 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            /*
              Design notes:
              Do not use a manually maintained stack like thd->lex->xxx_list,
              but use the internal bison stack ($$, $1 and $3) instead.
              Using the bison stack is:
              - more robust to changes in the grammar,
              - guaranteed to be in sync with the parser state,
              - better for performances (no memory allocation).
            */
            Item_cond_or *item1;
            Item_cond_or *item3;
            if (is_cond_or((yyvsp[(1) - (3)].item)))
            {
              item1= (Item_cond_or*) (yyvsp[(1) - (3)].item);
              if (is_cond_or((yyvsp[(3) - (3)].item)))
              {
                item3= (Item_cond_or*) (yyvsp[(3) - (3)].item);
                /*
                  (X1 OR X2) OR (Y1 OR Y2) ==> OR (X1, X2, Y1, Y2)
                */
                item3->add_at_head(item1->argument_list());
                (yyval.item) = (yyvsp[(3) - (3)].item);
              }
              else
              {
                /*
                  (X1 OR X2) OR Y ==> OR (X1, X2, Y)
                */
                item1->add((yyvsp[(3) - (3)].item));
                (yyval.item) = (yyvsp[(1) - (3)].item);
              }
            }
            else if (is_cond_or((yyvsp[(3) - (3)].item)))
            {
              item3= (Item_cond_or*) (yyvsp[(3) - (3)].item);
              /*
                X OR (Y1 OR Y2) ==> OR (X, Y1, Y2)
              */
              item3->add_at_head((yyvsp[(1) - (3)].item));
              (yyval.item) = (yyvsp[(3) - (3)].item);
            }
            else
            {
              /* X OR Y */
              (yyval.item) = new (YYTHD->mem_root) Item_cond_or((yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
              if ((yyval.item) == NULL)
                MYSQL_YYABORT;
            }
          }
    break;

  case 1130:
#line 8169 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            /* XOR is a proprietary extension */
            (yyval.item) = new (YYTHD->mem_root) Item_func_xor((yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1131:
#line 8176 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            /* See comments in rule expr: expr or expr */
            Item_cond_and *item1;
            Item_cond_and *item3;
            if (is_cond_and((yyvsp[(1) - (3)].item)))
            {
              item1= (Item_cond_and*) (yyvsp[(1) - (3)].item);
              if (is_cond_and((yyvsp[(3) - (3)].item)))
              {
                item3= (Item_cond_and*) (yyvsp[(3) - (3)].item);
                /*
                  (X1 AND X2) AND (Y1 AND Y2) ==> AND (X1, X2, Y1, Y2)
                */
                item3->add_at_head(item1->argument_list());
                (yyval.item) = (yyvsp[(3) - (3)].item);
              }
              else
              {
                /*
                  (X1 AND X2) AND Y ==> AND (X1, X2, Y)
                */
                item1->add((yyvsp[(3) - (3)].item));
                (yyval.item) = (yyvsp[(1) - (3)].item);
              }
            }
            else if (is_cond_and((yyvsp[(3) - (3)].item)))
            {
              item3= (Item_cond_and*) (yyvsp[(3) - (3)].item);
              /*
                X AND (Y1 AND Y2) ==> AND (X, Y1, Y2)
              */
              item3->add_at_head((yyvsp[(1) - (3)].item));
              (yyval.item) = (yyvsp[(3) - (3)].item);
            }
            else
            {
              /* X AND Y */
              (yyval.item) = new (YYTHD->mem_root) Item_cond_and((yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
              if ((yyval.item) == NULL)
                MYSQL_YYABORT;
            }
          }
    break;

  case 1132:
#line 8219 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= negate_expression(YYTHD, (yyvsp[(2) - (2)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1133:
#line 8225 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_istrue((yyvsp[(1) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1134:
#line 8231 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_isnottrue((yyvsp[(1) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1135:
#line 8237 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_isfalse((yyvsp[(1) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1136:
#line 8243 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_isnotfalse((yyvsp[(1) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1137:
#line 8249 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_isnull((yyvsp[(1) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1138:
#line 8255 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_isnotnull((yyvsp[(1) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1140:
#line 8265 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_isnull((yyvsp[(1) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1141:
#line 8271 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_isnotnull((yyvsp[(1) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1142:
#line 8277 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_equal((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1143:
#line 8283 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= (*(yyvsp[(2) - (3)].boolfunc2creator))(0)->create((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1144:
#line 8289 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= all_any_subquery_creator((yyvsp[(1) - (6)].item), (yyvsp[(2) - (6)].boolfunc2creator), (yyvsp[(3) - (6)].num), (yyvsp[(5) - (6)].select_lex));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1146:
#line 8299 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_in_subselect((yyvsp[(1) - (5)].item), (yyvsp[(4) - (5)].select_lex));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1147:
#line 8305 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            Item *item= new (thd->mem_root) Item_in_subselect((yyvsp[(1) - (6)].item), (yyvsp[(5) - (6)].select_lex));
            if (item == NULL)
              MYSQL_YYABORT;
            (yyval.item)= negate_expression(thd, item);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1148:
#line 8315 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= handle_sql2003_note184_exception(YYTHD, (yyvsp[(1) - (5)].item), true, (yyvsp[(4) - (5)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1149:
#line 8321 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { 
            (yyvsp[(6) - (7)].item_list)->push_front((yyvsp[(4) - (7)].item));
            (yyvsp[(6) - (7)].item_list)->push_front((yyvsp[(1) - (7)].item));
            (yyval.item)= new (YYTHD->mem_root) Item_func_in(*(yyvsp[(6) - (7)].item_list));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1150:
#line 8329 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= handle_sql2003_note184_exception(YYTHD, (yyvsp[(1) - (6)].item), false, (yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1151:
#line 8335 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyvsp[(7) - (8)].item_list)->push_front((yyvsp[(5) - (8)].item));
            (yyvsp[(7) - (8)].item_list)->push_front((yyvsp[(1) - (8)].item));
            Item_func_in *item = new (YYTHD->mem_root) Item_func_in(*(yyvsp[(7) - (8)].item_list));
            if (item == NULL)
              MYSQL_YYABORT;
            item->negate();
            (yyval.item)= item;
          }
    break;

  case 1152:
#line 8345 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_between((yyvsp[(1) - (5)].item),(yyvsp[(3) - (5)].item),(yyvsp[(5) - (5)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1153:
#line 8351 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Item_func_between *item;
            item= new (YYTHD->mem_root) Item_func_between((yyvsp[(1) - (6)].item),(yyvsp[(4) - (6)].item),(yyvsp[(6) - (6)].item));
            if (item == NULL)
              MYSQL_YYABORT;
            item->negate();
            (yyval.item)= item;
          }
    break;

  case 1154:
#line 8360 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Item *item1= new (YYTHD->mem_root) Item_func_soundex((yyvsp[(1) - (4)].item));
            Item *item4= new (YYTHD->mem_root) Item_func_soundex((yyvsp[(4) - (4)].item));
            if ((item1 == NULL) || (item4 == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (YYTHD->mem_root) Item_func_eq(item1, item4);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1155:
#line 8370 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_like((yyvsp[(1) - (4)].item),(yyvsp[(3) - (4)].item),(yyvsp[(4) - (4)].item),Lex->escape_used);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1156:
#line 8376 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Item *item= new (YYTHD->mem_root) Item_func_like((yyvsp[(1) - (5)].item),(yyvsp[(4) - (5)].item),(yyvsp[(5) - (5)].item),
                                                             Lex->escape_used);
            if (item == NULL)
              MYSQL_YYABORT;
            (yyval.item)= new (YYTHD->mem_root) Item_func_not(item);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1157:
#line 8386 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_regex((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1158:
#line 8392 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Item *item= new (YYTHD->mem_root) Item_func_regex((yyvsp[(1) - (4)].item),(yyvsp[(4) - (4)].item));
            if (item == NULL)
              MYSQL_YYABORT;
            (yyval.item)= negate_expression(YYTHD, item);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1160:
#line 8405 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_bit_or((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1161:
#line 8411 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_bit_and((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1162:
#line 8417 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_shift_left((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1163:
#line 8423 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_shift_right((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1164:
#line 8429 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_plus((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1165:
#line 8435 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_minus((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1166:
#line 8441 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[(1) - (5)].item),(yyvsp[(4) - (5)].item),(yyvsp[(5) - (5)].interval),0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1167:
#line 8447 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[(1) - (5)].item),(yyvsp[(4) - (5)].item),(yyvsp[(5) - (5)].interval),1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1168:
#line 8453 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_mul((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1169:
#line 8459 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_div((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1170:
#line 8465 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_mod((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1171:
#line 8471 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_int_div((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1172:
#line 8477 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_mod((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1173:
#line 8483 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_bit_xor((yyvsp[(1) - (3)].item),(yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1183:
#line 8512 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_eq_creator; }
    break;

  case 1184:
#line 8513 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_ge_creator; }
    break;

  case 1185:
#line 8514 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_gt_creator; }
    break;

  case 1186:
#line 8515 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_le_creator; }
    break;

  case 1187:
#line 8516 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_lt_creator; }
    break;

  case 1188:
#line 8517 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.boolfunc2creator) = &comp_ne_creator; }
    break;

  case 1189:
#line 8521 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num) = 1; }
    break;

  case 1190:
#line 8522 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num) = 0; }
    break;

  case 1196:
#line 8532 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            Item *i1= new (thd->mem_root) Item_string((yyvsp[(3) - (3)].lex_str).str,
                                                      (yyvsp[(3) - (3)].lex_str).length,
                                                      thd->charset());
            if (i1 == NULL)
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_func_set_collation((yyvsp[(1) - (3)].item), i1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1201:
#line 8548 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_concat((yyvsp[(1) - (3)].item), (yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1202:
#line 8554 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= (yyvsp[(2) - (2)].item);
          }
    break;

  case 1203:
#line 8558 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_neg((yyvsp[(2) - (2)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1204:
#line 8564 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_bit_neg((yyvsp[(2) - (2)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1205:
#line 8570 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= negate_expression(YYTHD, (yyvsp[(2) - (2)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1206:
#line 8576 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { 
            (yyval.item)= new (YYTHD->mem_root) Item_singlerow_subselect((yyvsp[(2) - (3)].select_lex));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1207:
#line 8582 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(2) - (3)].item); }
    break;

  case 1208:
#line 8584 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyvsp[(4) - (5)].item_list)->push_front((yyvsp[(2) - (5)].item));
            (yyval.item)= new (YYTHD->mem_root) Item_row(*(yyvsp[(4) - (5)].item_list));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1209:
#line 8591 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyvsp[(5) - (6)].item_list)->push_front((yyvsp[(3) - (6)].item));
            (yyval.item)= new (YYTHD->mem_root) Item_row(*(yyvsp[(5) - (6)].item_list));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1210:
#line 8598 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_exists_subselect((yyvsp[(3) - (4)].select_lex));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1211:
#line 8604 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Item_string *item;
            (yyval.item)= NULL;
            /*
              If "expr" is reasonably short pure ASCII string literal,
              try to parse known ODBC style date, time or timestamp literals,
              e.g:
              SELECT {d'2001-01-01'};
              SELECT {t'10:20:30'};
              SELECT {ts'2001-01-01 10:20:30'};
            */
            if ((yyvsp[(3) - (4)].item)->type() == Item::STRING_ITEM &&
               (item= (Item_string *) (yyvsp[(3) - (4)].item)) &&
                item->collation.repertoire == MY_REPERTOIRE_ASCII &&
                item->str_value.length() < MAX_DATE_STRING_REP_LENGTH * 4)
            {
              enum_field_types type= MYSQL_TYPE_STRING;
              ErrConvString str(&item->str_value);
              LEX_STRING *ls= &(yyvsp[(2) - (4)].lex_str);
              if (ls->length == 1)
              {
                if (ls->str[0] == 'd')  /* {d'2001-01-01'} */
                  type= MYSQL_TYPE_DATE;
                else if (ls->str[0] == 't') /* {t'10:20:30'} */
                  type= MYSQL_TYPE_TIME;
              }
              else if (ls->length == 2) /* {ts'2001-01-01 10:20:30'} */
              {
                if (ls->str[0] == 't' && ls->str[1] == 's')
                  type= MYSQL_TYPE_DATETIME;
              }
              if (type != MYSQL_TYPE_STRING)
                (yyval.item)= create_temporal_literal(YYTHD,
                                            str.ptr(), str.length(),
                                            system_charset_info,
                                            type, false);
            }
            if ((yyval.item) == NULL)
              (yyval.item)= (yyvsp[(3) - (4)].item);
          }
    break;

  case 1212:
#line 8645 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyvsp[(2) - (7)].item_list)->push_front((yyvsp[(5) - (7)].item));
            Item_func_match *i1= new (YYTHD->mem_root) Item_func_match(*(yyvsp[(2) - (7)].item_list), (yyvsp[(6) - (7)].num));
            if (i1 == NULL)
              MYSQL_YYABORT;
            Select->add_ftfunc_to_list(i1);
            (yyval.item)= i1;
          }
    break;

  case 1213:
#line 8654 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= create_func_cast(YYTHD, (yyvsp[(2) - (2)].item), ITEM_CAST_CHAR, NULL, NULL,
                                 &my_charset_bin);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1214:
#line 8661 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            (yyval.item)= create_func_cast(YYTHD, (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].cast_type), lex->length, lex->dec,
                                 lex->charset);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1215:
#line 8669 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_case(* (yyvsp[(3) - (5)].item_list), (yyvsp[(2) - (5)].item), (yyvsp[(4) - (5)].item) );
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1216:
#line 8675 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= create_func_cast(YYTHD, (yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].cast_type), Lex->length, Lex->dec,
                                 Lex->charset);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1217:
#line 8682 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_conv_charset((yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].charset));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1218:
#line 8688 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if ((yyvsp[(3) - (4)].item)->is_splocal())
            {
              Item_splocal *il= static_cast<Item_splocal *>((yyvsp[(3) - (4)].item));

              my_error(ER_WRONG_COLUMN_NAME, MYF(0), il->my_name()->str);
              MYSQL_YYABORT;
            }
            (yyval.item)= new (YYTHD->mem_root) Item_default_value(Lex->current_context(),
                                                         (yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1219:
#line 8702 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_insert_value(Lex->current_context(),
                                                        (yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1220:
#line 8710 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[(5) - (5)].item),(yyvsp[(2) - (5)].item),(yyvsp[(3) - (5)].interval),0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1221:
#line 8725 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_char(*(yyvsp[(3) - (4)].item_list));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1222:
#line 8731 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_char(*(yyvsp[(3) - (6)].item_list), (yyvsp[(5) - (6)].charset));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1223:
#line 8737 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_current_user(Lex->current_context());
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query= 0;
          }
    break;

  case 1224:
#line 8745 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_typecast((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1225:
#line 8751 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_dayofmonth((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1226:
#line 8757 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_hour((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1227:
#line 8763 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_insert((yyvsp[(3) - (10)].item),(yyvsp[(5) - (10)].item),(yyvsp[(7) - (10)].item),(yyvsp[(9) - (10)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1228:
#line 8769 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            List<Item> *list= new (thd->mem_root) List<Item>;
            if (list == NULL)
              MYSQL_YYABORT;
            list->push_front((yyvsp[(5) - (6)].item));
            list->push_front((yyvsp[(3) - (6)].item));
            Item_row *item= new (thd->mem_root) Item_row(*list);
            if (item == NULL)
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_func_interval(item);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1229:
#line 8784 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            (yyvsp[(7) - (8)].item_list)->push_front((yyvsp[(5) - (8)].item));
            (yyvsp[(7) - (8)].item_list)->push_front((yyvsp[(3) - (8)].item));
            Item_row *item= new (thd->mem_root) Item_row(*(yyvsp[(7) - (8)].item_list));
            if (item == NULL)
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_func_interval(item);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1230:
#line 8796 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_left((yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1231:
#line 8802 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_minute((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1232:
#line 8808 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_month((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1233:
#line 8814 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_right((yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1234:
#line 8820 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_second((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1235:
#line 8826 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_time_typecast((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1236:
#line 8832 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_datetime_typecast((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1237:
#line 8838 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_add_time((yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item), 1, 0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1238:
#line 8844 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_trim((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1239:
#line 8850 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_ltrim((yyvsp[(6) - (7)].item),(yyvsp[(4) - (7)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1240:
#line 8856 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_rtrim((yyvsp[(6) - (7)].item),(yyvsp[(4) - (7)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1241:
#line 8862 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_trim((yyvsp[(6) - (7)].item),(yyvsp[(4) - (7)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1242:
#line 8868 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_ltrim((yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1243:
#line 8874 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_rtrim((yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1244:
#line 8880 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_trim((yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1245:
#line 8886 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_trim((yyvsp[(5) - (6)].item),(yyvsp[(3) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1246:
#line 8892 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_user();
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query=0;
          }
    break;

  case 1247:
#line 8900 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_year((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1248:
#line 8921 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item),
                                                             INTERVAL_DAY, 0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1249:
#line 8928 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[(3) - (8)].item), (yyvsp[(6) - (8)].item), (yyvsp[(7) - (8)].interval), 0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1250:
#line 8934 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_curdate_local();
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
    break;

  case 1251:
#line 8941 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_curtime_local((yyvsp[(2) - (2)].ulong_num));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
    break;

  case 1252:
#line 8949 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[(3) - (8)].item),(yyvsp[(6) - (8)].item),(yyvsp[(7) - (8)].interval),0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1253:
#line 8956 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[(3) - (8)].item),(yyvsp[(6) - (8)].item),(yyvsp[(7) - (8)].interval),1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1254:
#line 8962 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)=new (YYTHD->mem_root) Item_extract( (yyvsp[(3) - (6)].interval), (yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1255:
#line 8968 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_get_format((yyvsp[(3) - (6)].date_time_type), (yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1256:
#line 8974 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= (yyvsp[(1) - (1)].item);
            Lex->safe_to_cache_query= 0;
          }
    break;

  case 1257:
#line 8979 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item) = new (YYTHD->mem_root) Item_func_locate((yyvsp[(5) - (6)].item),(yyvsp[(3) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1258:
#line 8985 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item),
                                                             INTERVAL_DAY, 1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1259:
#line 8992 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[(3) - (8)].item), (yyvsp[(6) - (8)].item), (yyvsp[(7) - (8)].interval), 1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1260:
#line 8998 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_substr((yyvsp[(3) - (8)].item),(yyvsp[(5) - (8)].item),(yyvsp[(7) - (8)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1261:
#line 9004 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_substr((yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1262:
#line 9010 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_substr((yyvsp[(3) - (8)].item),(yyvsp[(5) - (8)].item),(yyvsp[(7) - (8)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1263:
#line 9016 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_substr((yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1264:
#line 9022 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            /*
              Unlike other time-related functions, SYSDATE() is
              replication-unsafe because it is not affected by the
              TIMESTAMP variable.  It is unsafe even if
              sysdate_is_now=1, because the slave may have
              sysdate_is_now=0.
            */
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            if (global_system_variables.sysdate_is_now == 0)
              (yyval.item)= new (YYTHD->mem_root) Item_func_sysdate_local((yyvsp[(2) - (2)].ulong_num));
            else
              (yyval.item)= new (YYTHD->mem_root) Item_func_now_local((yyvsp[(2) - (2)].ulong_num));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
    break;

  case 1265:
#line 9040 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_date_add_interval((yyvsp[(7) - (8)].item),(yyvsp[(5) - (8)].item),(yyvsp[(3) - (8)].interval_time_st),0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1266:
#line 9046 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_timestamp_diff((yyvsp[(5) - (8)].item),(yyvsp[(7) - (8)].item),(yyvsp[(3) - (8)].interval_time_st));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1267:
#line 9052 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_curdate_utc();
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
    break;

  case 1268:
#line 9059 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_curtime_utc((yyvsp[(2) - (2)].ulong_num));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
    break;

  case 1269:
#line 9066 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_now_utc((yyvsp[(2) - (2)].ulong_num));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
    break;

  case 1270:
#line 9081 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_ascii((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1271:
#line 9087 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_charset((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1272:
#line 9093 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_coalesce(* (yyvsp[(3) - (4)].item_list));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1273:
#line 9099 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_collation((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1274:
#line 9105 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_database();
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
    break;

  case 1275:
#line 9112 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_if((yyvsp[(3) - (8)].item),(yyvsp[(5) - (8)].item),(yyvsp[(7) - (8)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1276:
#line 9118 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_format((yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1277:
#line 9124 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_format((yyvsp[(3) - (8)].item), (yyvsp[(5) - (8)].item), (yyvsp[(7) - (8)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1278:
#line 9130 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_microsecond((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1279:
#line 9136 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item) = new (YYTHD->mem_root) Item_func_mod((yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1280:
#line 9142 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)=  new (YYTHD->mem_root) Item_func_old_password((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1281:
#line 9148 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            Item* i1;
            if (thd->variables.old_passwords)
              i1= new (thd->mem_root) Item_func_old_password((yyvsp[(3) - (4)].item));
            else
              i1= new (thd->mem_root) Item_func_password((yyvsp[(3) - (4)].item));
            if (i1 == NULL)
              MYSQL_YYABORT;
            (yyval.item)= i1;
          }
    break;

  case 1282:
#line 9160 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item) = new (YYTHD->mem_root) Item_func_quarter((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1283:
#line 9166 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_repeat((yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1284:
#line 9172 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_replace((yyvsp[(3) - (8)].item),(yyvsp[(5) - (8)].item),(yyvsp[(7) - (8)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1285:
#line 9178 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_reverse((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1286:
#line 9184 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_row_count();
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query= 0;
          }
    break;

  case 1287:
#line 9192 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_round((yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item),1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1288:
#line 9198 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            Item *i1= new (thd->mem_root) Item_int((char*) "0",
                                           thd->variables.default_week_format,
                                                   1);
            if (i1 == NULL)
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_func_week((yyvsp[(3) - (4)].item), i1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1289:
#line 9210 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_week((yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1290:
#line 9216 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_weight_string((yyvsp[(3) - (5)].item), 0, 0, (yyvsp[(4) - (5)].ulong_num));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1291:
#line 9222 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root)
                Item_func_weight_string((yyvsp[(3) - (8)].item), 0, (yyvsp[(6) - (8)].ulong_num),
                                        (yyvsp[(7) - (8)].ulong_num) | MY_STRXFRM_PAD_WITH_SPACE);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1292:
#line 9230 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Item *item= new (YYTHD->mem_root) Item_char_typecast((yyvsp[(3) - (7)].item), (yyvsp[(6) - (7)].ulong_num), &my_charset_bin);
            if (item == NULL)
              MYSQL_YYABORT;
            (yyval.item)= new (YYTHD->mem_root)
                Item_func_weight_string(item, 0, (yyvsp[(6) - (7)].ulong_num), MY_STRXFRM_PAD_WITH_SPACE);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1293:
#line 9240 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_weight_string((yyvsp[(3) - (10)].item), (yyvsp[(5) - (10)].ulong_num), (yyvsp[(7) - (10)].ulong_num), (yyvsp[(9) - (10)].ulong_num));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1294:
#line 9246 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
#ifdef HAVE_SPATIAL
            (yyval.item)= (yyvsp[(1) - (1)].item);
            /* $1 may be NULL, GEOM_NEW not tested for out of memory */
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
#else
            my_error(ER_FEATURE_DISABLED, MYF(0),
                     sym_group_geom.name, sym_group_geom.needed_define);
            MYSQL_YYABORT;
#endif
          }
    break;

  case 1295:
#line 9262 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= GEOM_NEW(YYTHD,
                         Item_func_spatial_mbr_rel((yyvsp[(3) - (6)].item), (yyvsp[(5) - (6)].item),
                                               Item_func::SP_CONTAINS_FUNC));
          }
    break;

  case 1296:
#line 9268 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= GEOM_NEW(YYTHD,
                         Item_func_spatial_collection(* (yyvsp[(3) - (4)].item_list),
                           Geometry::wkb_geometrycollection,
                           Geometry::wkb_point));
          }
    break;

  case 1297:
#line 9275 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= GEOM_NEW(YYTHD,
                         Item_func_spatial_collection(* (yyvsp[(3) - (4)].item_list),
                           Geometry::wkb_linestring,
                           Geometry::wkb_point));
          }
    break;

  case 1298:
#line 9282 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= GEOM_NEW(YYTHD,
                         Item_func_spatial_collection(* (yyvsp[(3) - (4)].item_list),
                           Geometry::wkb_multilinestring,
                           Geometry::wkb_linestring));
          }
    break;

  case 1299:
#line 9289 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= GEOM_NEW(YYTHD,
                         Item_func_spatial_collection(* (yyvsp[(3) - (4)].item_list),
                           Geometry::wkb_multipoint,
                           Geometry::wkb_point));
          }
    break;

  case 1300:
#line 9296 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= GEOM_NEW(YYTHD,
                         Item_func_spatial_collection(* (yyvsp[(3) - (4)].item_list),
                           Geometry::wkb_multipolygon,
                           Geometry::wkb_polygon));
          }
    break;

  case 1301:
#line 9303 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= GEOM_NEW(YYTHD, Item_func_point((yyvsp[(3) - (6)].item),(yyvsp[(5) - (6)].item)));
          }
    break;

  case 1302:
#line 9307 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= GEOM_NEW(YYTHD,
                         Item_func_spatial_collection(* (yyvsp[(3) - (4)].item_list),
                           Geometry::wkb_polygon,
                           Geometry::wkb_linestring));
          }
    break;

  case 1303:
#line 9326 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
#ifdef HAVE_DLOPEN
            udf_func *udf= 0;
            LEX *lex= Lex;
            if (using_udf_functions &&
                (udf= find_udf((yyvsp[(1) - (2)].lex_str).str, (yyvsp[(1) - (2)].lex_str).length)) &&
                udf->type == UDFTYPE_AGGREGATE)
            {
              if (lex->current_select->inc_in_sum_expr())
              {
                my_parse_error(ER(ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
              }
            }
            /* Temporary placing the result of find_udf in $3 */
            (yyval.udf)= udf;
#endif
          }
    break;

  case 1304:
#line 9345 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            Create_func *builder;
            Item *item= NULL;

            if (check_routine_name(&(yyvsp[(1) - (5)].lex_str)))
            {
              MYSQL_YYABORT;
            }

            /*
              Implementation note:
              names are resolved with the following order:
              - MySQL native functions,
              - User Defined Functions,
              - Stored Functions (assuming the current <use> database)

              This will be revised with WL#2128 (SQL PATH)
            */
            builder= find_native_function_builder(thd, (yyvsp[(1) - (5)].lex_str));
            if (builder)
            {
              item= builder->create_func(thd, (yyvsp[(1) - (5)].lex_str), (yyvsp[(4) - (5)].item_list));
            }
            else
            {
#ifdef HAVE_DLOPEN
              /* Retrieving the result of find_udf */
              udf_func *udf= (yyvsp[(3) - (5)].udf);

              if (udf)
              {
                if (udf->type == UDFTYPE_AGGREGATE)
                {
                  Select->in_sum_expr--;
                }

                item= Create_udf_func::s_singleton.create(thd, udf, (yyvsp[(4) - (5)].item_list));
              }
              else
#endif
              {
                builder= find_qualified_function_builder(thd);
                DBUG_ASSERT(builder);
                item= builder->create_func(thd, (yyvsp[(1) - (5)].lex_str), (yyvsp[(4) - (5)].item_list));
              }
            }

            if (! ((yyval.item)= item))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 1305:
#line 9399 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            Create_qfunc *builder;
            Item *item= NULL;

            /*
              The following in practice calls:
              <code>Create_sp_func::create()</code>
              and builds a stored function.

              However, it's important to maintain the interface between the
              parser and the implementation in item_create.cc clean,
              since this will change with WL#2128 (SQL PATH):
              - INFORMATION_SCHEMA.version() is the SQL 99 syntax for the native
              function version(),
              - MySQL.version() is the SQL 2003 syntax for the native function
              version() (a vendor can specify any schema).
            */

            if (!(yyvsp[(1) - (6)].lex_str).str || check_and_convert_db_name(&(yyvsp[(1) - (6)].lex_str), FALSE))
            {
              my_error(ER_WRONG_DB_NAME, MYF(0), (yyvsp[(1) - (6)].lex_str).str);
              MYSQL_YYABORT;
            }
            if (check_routine_name(&(yyvsp[(3) - (6)].lex_str)))
            {
              MYSQL_YYABORT;
            }

            builder= find_qualified_function_builder(thd);
            DBUG_ASSERT(builder);
            item= builder->create(thd, (yyvsp[(1) - (6)].lex_str), (yyvsp[(3) - (6)].lex_str), true, (yyvsp[(5) - (6)].item_list));

            if (! ((yyval.item)= item))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 1306:
#line 9441 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)= (yyvsp[(1) - (2)].num) | (yyvsp[(2) - (2)].num); }
    break;

  case 1307:
#line 9443 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)= FT_BOOL; }
    break;

  case 1308:
#line 9447 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)= FT_NL; }
    break;

  case 1309:
#line 9448 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)= FT_NL; }
    break;

  case 1310:
#line 9452 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)= 0;         }
    break;

  case 1311:
#line 9453 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)= FT_EXPAND; }
    break;

  case 1312:
#line 9457 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.item_list)= NULL; }
    break;

  case 1313:
#line 9458 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.item_list)= (yyvsp[(1) - (1)].item_list); }
    break;

  case 1314:
#line 9463 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item_list)= new (YYTHD->mem_root) List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[(1) - (1)].item));
          }
    break;

  case 1315:
#line 9470 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (3)].item_list)->push_back((yyvsp[(3) - (3)].item));
            (yyval.item_list)= (yyvsp[(1) - (3)].item_list);
          }
    break;

  case 1316:
#line 9478 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            /*
             Use Item::name as a storage for the attribute value of user
             defined function argument. It is safe to use Item::name
             because the syntax will not allow having an explicit name here.
             See WL#1017 re. udf attributes.
            */
            if ((yyvsp[(4) - (4)].lex_str).str)
            {
              (yyvsp[(2) - (4)].item)->is_autogenerated_name= FALSE;
              (yyvsp[(2) - (4)].item)->set_name((yyvsp[(4) - (4)].lex_str).str, (yyvsp[(4) - (4)].lex_str).length, system_charset_info);
            }
            /* 
               A field has to have its proper name in order for name
               resolution to work, something we are only guaranteed if we
               parse it out. If we hijack the input stream with
               remember_name we may get quoted or escaped names.
            */
            else if ((yyvsp[(2) - (4)].item)->type() != Item::FIELD_ITEM)
              (yyvsp[(2) - (4)].item)->set_name((yyvsp[(1) - (4)].simple_string), (uint) ((yyvsp[(3) - (4)].simple_string) - (yyvsp[(1) - (4)].simple_string)), YYTHD->charset());
            (yyval.item)= (yyvsp[(2) - (4)].item);
          }
    break;

  case 1317:
#line 9504 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_avg((yyvsp[(3) - (4)].item), FALSE);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1318:
#line 9510 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_avg((yyvsp[(4) - (5)].item), TRUE);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1319:
#line 9516 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_and((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1320:
#line 9522 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_or((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1321:
#line 9528 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_xor((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1322:
#line 9534 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Item *item= new (YYTHD->mem_root) Item_int((int32) 0L,1);
            if (item == NULL)
              MYSQL_YYABORT;
            (yyval.item)= new (YYTHD->mem_root) Item_sum_count(item);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1323:
#line 9543 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_count((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1324:
#line 9549 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Select->in_sum_expr++; }
    break;

  case 1325:
#line 9551 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Select->in_sum_expr--; }
    break;

  case 1326:
#line 9553 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_count(* (yyvsp[(5) - (7)].item_list));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1327:
#line 9559 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_min((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1328:
#line 9570 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_min((yyvsp[(4) - (5)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1329:
#line 9576 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_max((yyvsp[(3) - (4)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1330:
#line 9582 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_max((yyvsp[(4) - (5)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1331:
#line 9588 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_std((yyvsp[(3) - (4)].item), 0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1332:
#line 9594 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_variance((yyvsp[(3) - (4)].item), 0);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1333:
#line 9600 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_std((yyvsp[(3) - (4)].item), 1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1334:
#line 9606 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_variance((yyvsp[(3) - (4)].item), 1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1335:
#line 9612 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_sum((yyvsp[(3) - (4)].item), FALSE);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1336:
#line 9618 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_sum_sum((yyvsp[(4) - (5)].item), TRUE);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1337:
#line 9624 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Select->in_sum_expr++; }
    break;

  case 1338:
#line 9628 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            SELECT_LEX *sel= Select;
            sel->in_sum_expr--;
            (yyval.item)= new (YYTHD->mem_root)
                  Item_func_group_concat(Lex->current_context(), (yyvsp[(3) - (8)].num), (yyvsp[(5) - (8)].item_list),
                                         sel->gorder_list, (yyvsp[(7) - (8)].string));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            (yyvsp[(5) - (8)].item_list)->empty();
          }
    break;

  case 1339:
#line 9642 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if (! Lex->parsing_options.allows_variable)
            {
              my_error(ER_VIEW_SELECT_VARIABLE, MYF(0));
              MYSQL_YYABORT;
            }
          }
    break;

  case 1340:
#line 9650 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= (yyvsp[(3) - (3)].item);
          }
    break;

  case 1341:
#line 9657 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Item_func_set_user_var *item;
            (yyval.item)= item= new (YYTHD->mem_root) Item_func_set_user_var((yyvsp[(1) - (3)].lex_str), (yyvsp[(3) - (3)].item));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            LEX *lex= Lex;
            lex->uncacheable(UNCACHEABLE_RAND);
            lex->set_var_list.push_back(item);
          }
    break;

  case 1342:
#line 9667 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_func_get_user_var((yyvsp[(1) - (1)].lex_str));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            LEX *lex= Lex;
            lex->uncacheable(UNCACHEABLE_RAND);
          }
    break;

  case 1343:
#line 9675 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            /* disallow "SELECT @@global.global.variable" */
            if ((yyvsp[(3) - (4)].lex_str).str && (yyvsp[(4) - (4)].lex_str).str && check_reserved_words(&(yyvsp[(3) - (4)].lex_str)))
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            if (!((yyval.item)= get_system_var(YYTHD, (yyvsp[(2) - (4)].var_type), (yyvsp[(3) - (4)].lex_str), (yyvsp[(4) - (4)].lex_str))))
              MYSQL_YYABORT;
            if (!((Item_func_get_system_var*) (yyval.item))->is_written_to_binlog())
              Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_VARIABLE);
          }
    break;

  case 1344:
#line 9690 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num) = 0; }
    break;

  case 1345:
#line 9691 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num) = 1; }
    break;

  case 1346:
#line 9696 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.string)= new (YYTHD->mem_root) String(",", 1, &my_charset_latin1);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1347:
#line 9701 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.string) = (yyvsp[(2) - (2)].string); }
    break;

  case 1348:
#line 9706 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Select->gorder_list = NULL;
          }
    break;

  case 1349:
#line 9710 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            SELECT_LEX *select= Select;
            select->gorder_list= new (YYTHD->mem_root)
                                   SQL_I_List<ORDER>(select->order_list);
            if (select->gorder_list == NULL)
              MYSQL_YYABORT;
            select->order_list.empty();
          }
    break;

  case 1350:
#line 9722 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->current_select->inc_in_sum_expr())
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
          }
    break;

  case 1351:
#line 9731 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Select->in_sum_expr--;
            (yyval.item)= (yyvsp[(3) - (3)].item);
          }
    break;

  case 1352:
#line 9739 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_CHAR; Lex->charset= &my_charset_bin; Lex->dec= 0; }
    break;

  case 1353:
#line 9741 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_CHAR; Lex->dec= 0; }
    break;

  case 1354:
#line 9743 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_CHAR; Lex->charset= national_charset_info; Lex->dec=0; }
    break;

  case 1355:
#line 9745 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_SIGNED_INT; Lex->charset= NULL; Lex->dec=Lex->length= (char*)0; }
    break;

  case 1356:
#line 9747 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_SIGNED_INT; Lex->charset= NULL; Lex->dec=Lex->length= (char*)0; }
    break;

  case 1357:
#line 9749 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_UNSIGNED_INT; Lex->charset= NULL; Lex->dec=Lex->length= (char*)0; }
    break;

  case 1358:
#line 9751 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_UNSIGNED_INT; Lex->charset= NULL; Lex->dec=Lex->length= (char*)0; }
    break;

  case 1359:
#line 9753 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.cast_type)= ITEM_CAST_DATE; Lex->charset= NULL; Lex->dec= Lex->length= (char *) 0; }
    break;

  case 1360:
#line 9755 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.cast_type)= ITEM_CAST_TIME; Lex->charset= NULL; Lex->length= (char *) 0; }
    break;

  case 1361:
#line 9757 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.cast_type)= ITEM_CAST_DATETIME; Lex->charset= NULL; Lex->length= (char *) 0; }
    break;

  case 1362:
#line 9759 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.cast_type)=ITEM_CAST_DECIMAL; Lex->charset= NULL; }
    break;

  case 1363:
#line 9763 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.item_list)= NULL; }
    break;

  case 1364:
#line 9764 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.item_list)= (yyvsp[(1) - (1)].item_list);}
    break;

  case 1365:
#line 9769 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item_list)= new (YYTHD->mem_root) List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[(1) - (1)].item));
          }
    break;

  case 1366:
#line 9776 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (3)].item_list)->push_back((yyvsp[(3) - (3)].item));
            (yyval.item_list)= (yyvsp[(1) - (3)].item_list);
          }
    break;

  case 1367:
#line 9783 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.item_list)= (yyvsp[(1) - (1)].item_list); }
    break;

  case 1368:
#line 9784 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.item_list)= (yyvsp[(2) - (3)].item_list); }
    break;

  case 1369:
#line 9789 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item_list)= new (YYTHD->mem_root) List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[(1) - (1)].item));
          }
    break;

  case 1370:
#line 9796 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (3)].item_list)->push_back((yyvsp[(3) - (3)].item));
            (yyval.item_list)= (yyvsp[(1) - (3)].item_list);
          }
    break;

  case 1371:
#line 9803 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.item)= NULL; }
    break;

  case 1372:
#line 9804 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].item); }
    break;

  case 1373:
#line 9808 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.item)= NULL; }
    break;

  case 1374:
#line 9809 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(2) - (2)].item); }
    break;

  case 1375:
#line 9814 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item_list)= new List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[(2) - (4)].item));
            (yyval.item_list)->push_back((yyvsp[(4) - (4)].item));
          }
    break;

  case 1376:
#line 9822 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyvsp[(1) - (5)].item_list)->push_back((yyvsp[(3) - (5)].item));
            (yyvsp[(1) - (5)].item_list)->push_back((yyvsp[(5) - (5)].item));
            (yyval.item_list)= (yyvsp[(1) - (5)].item_list);
          }
    break;

  case 1377:
#line 9832 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.table_list)=(yyvsp[(1) - (1)].table_list); }
    break;

  case 1378:
#line 9834 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (!((yyval.table_list)= lex->current_select->nest_last_join(lex->thd)))
              MYSQL_YYABORT;
          }
    break;

  case 1379:
#line 9842 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { MYSQL_YYABORT_UNLESS((yyval.table_list)=(yyvsp[(1) - (1)].table_list)); }
    break;

  case 1380:
#line 9853 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.table_list)=(yyvsp[(1) - (1)].table_list); }
    break;

  case 1381:
#line 9854 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.table_list)=(yyvsp[(3) - (4)].table_list); }
    break;

  case 1382:
#line 9860 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.table_list)=(yyvsp[(1) - (1)].table_list); }
    break;

  case 1383:
#line 9862 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (3)].table_list) && ((yyval.table_list)=(yyvsp[(3) - (3)].table_list)));
          }
    break;

  case 1384:
#line 9882 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { MYSQL_YYABORT_UNLESS((yyvsp[(1) - (3)].table_list) && ((yyval.table_list)=(yyvsp[(3) - (3)].table_list))); }
    break;

  case 1385:
#line 9884 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { MYSQL_YYABORT_UNLESS((yyvsp[(1) - (3)].table_list) && ((yyval.table_list)=(yyvsp[(3) - (3)].table_list))); (yyvsp[(3) - (3)].table_list)->straight=1; }
    break;

  case 1386:
#line 9887 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (4)].table_list) && (yyvsp[(3) - (4)].table_list));
            /* Change the current name resolution context to a local context. */
            if (push_new_name_resolution_context(YYTHD, (yyvsp[(1) - (4)].table_list), (yyvsp[(3) - (4)].table_list)))
              MYSQL_YYABORT;
            Select->parsing_place= IN_ON;
          }
    break;

  case 1387:
#line 9895 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            add_join_on((yyvsp[(3) - (6)].table_list),(yyvsp[(6) - (6)].item));
            Lex->pop_context();
            Select->parsing_place= NO_MATTER;
          }
    break;

  case 1388:
#line 9902 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (4)].table_list) && (yyvsp[(3) - (4)].table_list));
            /* Change the current name resolution context to a local context. */
            if (push_new_name_resolution_context(YYTHD, (yyvsp[(1) - (4)].table_list), (yyvsp[(3) - (4)].table_list)))
              MYSQL_YYABORT;
            Select->parsing_place= IN_ON;
          }
    break;

  case 1389:
#line 9910 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyvsp[(3) - (6)].table_list)->straight=1;
            add_join_on((yyvsp[(3) - (6)].table_list),(yyvsp[(6) - (6)].item));
            Lex->pop_context();
            Select->parsing_place= NO_MATTER;
          }
    break;

  case 1390:
#line 9918 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (4)].table_list) && (yyvsp[(3) - (4)].table_list));
          }
    break;

  case 1391:
#line 9922 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { add_join_natural((yyvsp[(1) - (8)].table_list),(yyvsp[(3) - (8)].table_list),(yyvsp[(7) - (8)].string_list),Select); (yyval.table_list)=(yyvsp[(3) - (8)].table_list); }
    break;

  case 1392:
#line 9924 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (4)].table_list) && ((yyval.table_list)=(yyvsp[(4) - (4)].table_list)));
            add_join_natural((yyvsp[(1) - (4)].table_list),(yyvsp[(4) - (4)].table_list),NULL,Select);
          }
    break;

  case 1393:
#line 9932 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (6)].table_list) && (yyvsp[(5) - (6)].table_list));
            /* Change the current name resolution context to a local context. */
            if (push_new_name_resolution_context(YYTHD, (yyvsp[(1) - (6)].table_list), (yyvsp[(5) - (6)].table_list)))
              MYSQL_YYABORT;
            Select->parsing_place= IN_ON;
          }
    break;

  case 1394:
#line 9940 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            add_join_on((yyvsp[(5) - (8)].table_list),(yyvsp[(8) - (8)].item));
            Lex->pop_context();
            (yyvsp[(5) - (8)].table_list)->outer_join|=JOIN_TYPE_LEFT;
            (yyval.table_list)=(yyvsp[(5) - (8)].table_list);
            Select->parsing_place= NO_MATTER;
          }
    break;

  case 1395:
#line 9948 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (5)].table_list) && (yyvsp[(5) - (5)].table_list));
          }
    break;

  case 1396:
#line 9952 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { 
            add_join_natural((yyvsp[(1) - (10)].table_list),(yyvsp[(5) - (10)].table_list),(yyvsp[(9) - (10)].string_list),Select); 
            (yyvsp[(5) - (10)].table_list)->outer_join|=JOIN_TYPE_LEFT; 
            (yyval.table_list)=(yyvsp[(5) - (10)].table_list); 
          }
    break;

  case 1397:
#line 9958 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (6)].table_list) && (yyvsp[(6) - (6)].table_list));
            add_join_natural((yyvsp[(1) - (6)].table_list),(yyvsp[(6) - (6)].table_list),NULL,Select);
            (yyvsp[(6) - (6)].table_list)->outer_join|=JOIN_TYPE_LEFT;
            (yyval.table_list)=(yyvsp[(6) - (6)].table_list);
          }
    break;

  case 1398:
#line 9968 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (6)].table_list) && (yyvsp[(5) - (6)].table_list));
            /* Change the current name resolution context to a local context. */
            if (push_new_name_resolution_context(YYTHD, (yyvsp[(1) - (6)].table_list), (yyvsp[(5) - (6)].table_list)))
              MYSQL_YYABORT;
            Select->parsing_place= IN_ON;
          }
    break;

  case 1399:
#line 9976 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (!((yyval.table_list)= lex->current_select->convert_right_join()))
              MYSQL_YYABORT;
            add_join_on((yyval.table_list), (yyvsp[(8) - (8)].item));
            Lex->pop_context();
            Select->parsing_place= NO_MATTER;
          }
    break;

  case 1400:
#line 9985 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (5)].table_list) && (yyvsp[(5) - (5)].table_list));
          }
    break;

  case 1401:
#line 9989 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (!((yyval.table_list)= lex->current_select->convert_right_join()))
              MYSQL_YYABORT;
            add_join_natural((yyval.table_list),(yyvsp[(5) - (10)].table_list),(yyvsp[(9) - (10)].string_list),Select);
          }
    break;

  case 1402:
#line 9996 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (6)].table_list) && (yyvsp[(6) - (6)].table_list));
            add_join_natural((yyvsp[(6) - (6)].table_list),(yyvsp[(1) - (6)].table_list),NULL,Select);
            LEX *lex= Lex;
            if (!((yyval.table_list)= lex->current_select->convert_right_join()))
              MYSQL_YYABORT;
          }
    break;

  case 1403:
#line 10006 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1404:
#line 10007 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1405:
#line 10008 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1406:
#line 10016 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.string_list)= 0;}
    break;

  case 1408:
#line 10022 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.string_list)= (yyvsp[(3) - (5)].string_list);
          }
    break;

  case 1409:
#line 10036 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            SELECT_LEX *sel= Select;
            sel->table_join_options= 0;
          }
    break;

  case 1410:
#line 10041 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if (!((yyval.table_list)= Select->add_table_to_list(YYTHD, (yyvsp[(2) - (5)].table), (yyvsp[(4) - (5)].lex_str_ptr),
                                                Select->get_table_join_options(),
                                                YYPS->m_lock_type,
                                                YYPS->m_mdl_type,
                                                Select->pop_index_hints(),
                                                (yyvsp[(3) - (5)].string_list))))
              MYSQL_YYABORT;
            Select->add_joined_table((yyval.table_list));
          }
    break;

  case 1411:
#line 10052 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            SELECT_LEX *sel= lex->current_select;
            if ((yyvsp[(1) - (3)].num))
            {
              if (sel->set_braces(1))
              {
                my_parse_error(ER(ER_SYNTAX_ERROR));
                MYSQL_YYABORT;
              }
              /* select in braces, can't contain global parameters */
              if (sel->master_unit()->fake_select_lex)
                sel->master_unit()->global_parameters=
                   sel->master_unit()->fake_select_lex;
            }
            if ((yyvsp[(2) - (3)].select_lex)->init_nested_join(lex->thd))
              MYSQL_YYABORT;
            (yyval.table_list)= 0;
            /* incomplete derived tables return NULL, we must be
               nested in select_derived rule to be here. */
          }
    break;

  case 1412:
#line 10092 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            /* Use $2 instead of Lex->current_select as derived table will
               alter value of Lex->current_select. */
            if (!((yyvsp[(3) - (5)].table_list) || (yyvsp[(5) - (5)].lex_str_ptr)) && (yyvsp[(2) - (5)].select_lex)->embedding &&
                !(yyvsp[(2) - (5)].select_lex)->embedding->nested_join->join_list.elements)
            {
              /* we have a derived table ($3 == NULL) but no alias,
                 Since we are nested in further parentheses so we
                 can pass NULL to the outer level parentheses
                 Permits parsing of "((((select ...))) as xyz)" */
              (yyval.table_list)= 0;
            }
            else if (!(yyvsp[(3) - (5)].table_list))
            {
              /* Handle case of derived table, alias may be NULL if there
                 are no outer parentheses, add_table_to_list() will throw
                 error in this case */
              LEX *lex=Lex;
              SELECT_LEX *sel= lex->current_select;
              SELECT_LEX_UNIT *unit= sel->master_unit();
              lex->current_select= sel= unit->outer_select();
              Table_ident *ti= new Table_ident(unit);
              if (ti == NULL)
                MYSQL_YYABORT;
              if (!((yyval.table_list)= sel->add_table_to_list(lex->thd,
                                               ti, (yyvsp[(5) - (5)].lex_str_ptr), 0,
                                               TL_READ, MDL_SHARED_READ)))

                MYSQL_YYABORT;
              sel->add_joined_table((yyval.table_list));
              lex->pop_context();
              lex->nest_level--;
            }
            else if (((yyvsp[(3) - (5)].table_list)->select_lex &&
                     (yyvsp[(3) - (5)].table_list)->select_lex->master_unit()->is_union()) || (yyvsp[(5) - (5)].lex_str_ptr))
            {
              /* simple nested joins cannot have aliases or unions */
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            else
            {
              /* nested join: FROM (t1 JOIN t2 ...),
                 nest_level is the same as in the outer query */
              (yyval.table_list)= (yyvsp[(3) - (5)].table_list);
            }
          }
    break;

  case 1414:
#line 10146 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if (add_select_to_union_list(Lex, (bool)(yyvsp[(3) - (3)].num), FALSE))
              MYSQL_YYABORT;
          }
    break;

  case 1415:
#line 10151 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            /*
              Remove from the name resolution context stack the context of the
              last select in the union.
             */
            Lex->pop_context();
          }
    break;

  case 1417:
#line 10164 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            SELECT_LEX * sel= lex->current_select;
            if (lex->current_select->set_braces(0))
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            if (sel->linkage == UNION_TYPE &&
                sel->master_unit()->first_select()->braces)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
          }
    break;

  case 1418:
#line 10183 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            SELECT_LEX *sel= lex->current_select;
            if (sel->linkage != UNION_TYPE)
              mysql_init_select(lex);
            lex->current_select->parsing_place= SELECT_LIST;
          }
    break;

  case 1419:
#line 10191 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Select->parsing_place= NO_MATTER;
          }
    break;

  case 1421:
#line 10200 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if ((yyvsp[(1) - (1)].select_lex)->init_nested_join(lex->thd))
              MYSQL_YYABORT;
          }
    break;

  case 1422:
#line 10206 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            /* for normal joins, $3 != NULL and end_nested_join() != NULL,
               for derived tables, both must equal NULL */

            if (!((yyval.table_list)= (yyvsp[(1) - (3)].select_lex)->end_nested_join(lex->thd)) && (yyvsp[(3) - (3)].table_list))
              MYSQL_YYABORT;
            if (!(yyvsp[(3) - (3)].table_list) && (yyval.table_list))
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
          }
    break;

  case 1423:
#line 10222 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->derived_tables|= DERIVED_SUBQUERY;
            if (!lex->expr_allows_subselect ||
                lex->sql_command == (int)SQLCOM_PURGE)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            if (lex->current_select->linkage == GLOBAL_OPTIONS_TYPE ||
                mysql_new_select(lex, 1))
              MYSQL_YYABORT;
            mysql_init_select(lex);
            lex->current_select->linkage= DERIVED_TABLE_TYPE;
            lex->current_select->parsing_place= SELECT_LIST;
          }
    break;

  case 1424:
#line 10239 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Select->parsing_place= NO_MATTER;
          }
    break;

  case 1426:
#line 10246 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.select_lex)= Select; }
    break;

  case 1427:
#line 10251 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (! lex->parsing_options.allows_derived)
            {
              my_error(ER_VIEW_SELECT_DERIVED, MYF(0));
              MYSQL_YYABORT;
            }

            SELECT_LEX *sel= lex->current_select;
            TABLE_LIST *embedding;
            if (!sel->embedding || sel->end_nested_join(lex->thd))
            {
              /* we are not in parentheses */
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            embedding= Select->embedding;
            (yyval.num)= embedding &&
                !embedding->nested_join->join_list.elements;
            /* return true if we are deeply nested */
          }
    break;

  case 1428:
#line 10276 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1429:
#line 10277 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1430:
#line 10282 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.num)= old_mode ?  INDEX_HINT_MASK_JOIN : INDEX_HINT_MASK_ALL; 
          }
    break;

  case 1431:
#line 10285 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)= INDEX_HINT_MASK_JOIN;  }
    break;

  case 1432:
#line 10286 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)= INDEX_HINT_MASK_ORDER; }
    break;

  case 1433:
#line 10287 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)= INDEX_HINT_MASK_GROUP; }
    break;

  case 1434:
#line 10291 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.index_hint)= INDEX_HINT_FORCE; }
    break;

  case 1435:
#line 10292 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.index_hint)= INDEX_HINT_IGNORE; }
    break;

  case 1436:
#line 10297 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Select->set_index_hint_type((yyvsp[(1) - (3)].index_hint), (yyvsp[(3) - (3)].num));
          }
    break;

  case 1438:
#line 10302 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Select->set_index_hint_type(INDEX_HINT_USE, (yyvsp[(3) - (3)].num));
          }
    break;

  case 1443:
#line 10315 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Select->alloc_index_hints(YYTHD); }
    break;

  case 1445:
#line 10319 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {  Select->clear_index_hints(); }
    break;

  case 1447:
#line 10324 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Select->add_index_hint(YYTHD, NULL, 0); }
    break;

  case 1448:
#line 10325 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1449:
#line 10330 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Select->add_index_hint(YYTHD, (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length); }
    break;

  case 1450:
#line 10332 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Select->add_index_hint(YYTHD, (char *)"PRIMARY", 7); }
    break;

  case 1453:
#line 10342 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if (!((yyval.string_list)= new List<String>))
              MYSQL_YYABORT;
            String *s= new (YYTHD->mem_root) String((const char *) (yyvsp[(1) - (1)].lex_str).str,
                                                    (yyvsp[(1) - (1)].lex_str).length,
                                                    system_charset_info);
            if (s == NULL)
              MYSQL_YYABORT;
            (yyval.string_list)->push_back(s);
          }
    break;

  case 1454:
#line 10353 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            String *s= new (YYTHD->mem_root) String((const char *) (yyvsp[(3) - (3)].lex_str).str,
                                                    (yyvsp[(3) - (3)].lex_str).length,
                                                    system_charset_info);
            if (s == NULL)
              MYSQL_YYABORT;
            (yyvsp[(1) - (3)].string_list)->push_back(s);
            (yyval.string_list)= (yyvsp[(1) - (3)].string_list);
          }
    break;

  case 1455:
#line 10365 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1456:
#line 10366 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_DAY_HOUR; }
    break;

  case 1457:
#line 10367 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_DAY_MICROSECOND; }
    break;

  case 1458:
#line 10368 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_DAY_MINUTE; }
    break;

  case 1459:
#line 10369 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_DAY_SECOND; }
    break;

  case 1460:
#line 10370 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_HOUR_MICROSECOND; }
    break;

  case 1461:
#line 10371 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_HOUR_MINUTE; }
    break;

  case 1462:
#line 10372 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_HOUR_SECOND; }
    break;

  case 1463:
#line 10373 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_MINUTE_MICROSECOND; }
    break;

  case 1464:
#line 10374 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_MINUTE_SECOND; }
    break;

  case 1465:
#line 10375 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_SECOND_MICROSECOND; }
    break;

  case 1466:
#line 10376 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.interval)=INTERVAL_YEAR_MONTH; }
    break;

  case 1467:
#line 10380 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_DAY; }
    break;

  case 1468:
#line 10381 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_WEEK; }
    break;

  case 1469:
#line 10382 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_HOUR; }
    break;

  case 1470:
#line 10383 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_MINUTE; }
    break;

  case 1471:
#line 10384 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_MONTH; }
    break;

  case 1472:
#line 10385 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_QUARTER; }
    break;

  case 1473:
#line 10386 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_SECOND; }
    break;

  case 1474:
#line 10387 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_MICROSECOND; }
    break;

  case 1475:
#line 10388 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.interval_time_st)=INTERVAL_YEAR; }
    break;

  case 1476:
#line 10392 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATE; }
    break;

  case 1477:
#line 10393 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_TIME; }
    break;

  case 1478:
#line 10394 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATETIME; }
    break;

  case 1479:
#line 10395 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATETIME; }
    break;

  case 1483:
#line 10405 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.lex_str_ptr)=0; }
    break;

  case 1484:
#line 10407 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.lex_str_ptr)= (LEX_STRING*) sql_memdup(&(yyvsp[(2) - (2)].lex_str),sizeof(LEX_STRING));
            if ((yyval.lex_str_ptr) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1487:
#line 10420 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Select->where= 0; }
    break;

  case 1488:
#line 10422 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Select->parsing_place= IN_WHERE;
          }
    break;

  case 1489:
#line 10426 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            SELECT_LEX *select= Select;
            select->where= (yyvsp[(3) - (3)].item);
            select->parsing_place= NO_MATTER;
            if ((yyvsp[(3) - (3)].item))
              (yyvsp[(3) - (3)].item)->top_level_item();
          }
    break;

  case 1491:
#line 10438 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Select->parsing_place= IN_HAVING;
          }
    break;

  case 1492:
#line 10442 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            SELECT_LEX *sel= Select;
            sel->having= (yyvsp[(3) - (3)].item);
            sel->parsing_place= NO_MATTER;
            if ((yyvsp[(3) - (3)].item))
              (yyvsp[(3) - (3)].item)->top_level_item();
          }
    break;

  case 1493:
#line 10453 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->escape_used= TRUE;
            (yyval.item)= (yyvsp[(2) - (2)].item);
          }
    break;

  case 1494:
#line 10458 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            Lex->escape_used= FALSE;
            (yyval.item)= ((thd->variables.sql_mode & MODE_NO_BACKSLASH_ESCAPES) ?
                 new (thd->mem_root) Item_string("", 0, &my_charset_latin1) :
                 new (thd->mem_root) Item_string("\\", 1, &my_charset_latin1));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1497:
#line 10480 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { if (add_group_to_list(YYTHD, (yyvsp[(3) - (4)].item),(bool) (yyvsp[(4) - (4)].num))) MYSQL_YYABORT; }
    break;

  case 1498:
#line 10482 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { if (add_group_to_list(YYTHD, (yyvsp[(1) - (2)].item),(bool) (yyvsp[(2) - (2)].num))) MYSQL_YYABORT; }
    break;

  case 1499:
#line 10486 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1500:
#line 10488 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            /*
              'WITH CUBE' is reserved in the MySQL syntax, but not implemented,
              and cause LALR(2) conflicts.
              This syntax is not standard.
              MySQL syntax: GROUP BY col1, col2, col3 WITH CUBE
              SQL-2003: GROUP BY ... CUBE(col1, col2, col3)
            */
            LEX *lex=Lex;
            if (lex->current_select->linkage == GLOBAL_OPTIONS_TYPE)
            {
              my_error(ER_WRONG_USAGE, MYF(0), "WITH CUBE",
                       "global union parameters");
              MYSQL_YYABORT;
            }
            lex->current_select->olap= CUBE_TYPE;
            my_error(ER_NOT_SUPPORTED_YET, MYF(0), "CUBE");
            MYSQL_YYABORT;
          }
    break;

  case 1501:
#line 10508 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            /*
              'WITH ROLLUP' is needed for backward compatibility,
              and cause LALR(2) conflicts.
              This syntax is not standard.
              MySQL syntax: GROUP BY col1, col2, col3 WITH ROLLUP
              SQL-2003: GROUP BY ... ROLLUP(col1, col2, col3)
            */
            LEX *lex= Lex;
            if (lex->current_select->linkage == GLOBAL_OPTIONS_TYPE)
            {
              my_error(ER_WRONG_USAGE, MYF(0), "WITH ROLLUP",
                       "global union parameters");
              MYSQL_YYABORT;
            }
            lex->current_select->olap= ROLLUP_TYPE;
          }
    break;

  case 1505:
#line 10542 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            bool ascending= ((yyvsp[(2) - (2)].num) == 1) ? true : false;
            if (add_order_to_list(thd, (yyvsp[(1) - (2)].item), ascending))
              MYSQL_YYABORT;
          }
    break;

  case 1508:
#line 10561 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            SELECT_LEX *sel= lex->current_select;
            SELECT_LEX_UNIT *unit= sel-> master_unit();
            if (sel->linkage != GLOBAL_OPTIONS_TYPE &&
                sel->olap != UNSPECIFIED_OLAP_TYPE &&
                (sel->linkage != UNION_TYPE || sel->braces))
            {
              my_error(ER_WRONG_USAGE, MYF(0),
                       "CUBE/ROLLUP", "ORDER BY");
              MYSQL_YYABORT;
            }
            if (lex->sql_command != SQLCOM_ALTER_TABLE && !unit->fake_select_lex)
            {
              /*
                A query of the of the form (SELECT ...) ORDER BY order_list is
                executed in the same way as the query
                SELECT ... ORDER BY order_list
                unless the SELECT construct contains ORDER BY or LIMIT clauses.
                Otherwise we create a fake SELECT_LEX if it has not been created
                yet.
              */
              SELECT_LEX *first_sl= unit->first_select();
              if (!unit->is_union() &&
                  (first_sl->order_list.elements || 
                   first_sl->select_limit) &&            
                  unit->add_fake_select_lex(lex->thd))
                MYSQL_YYABORT;
            }
          }
    break;

  case 1510:
#line 10596 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { if (add_order_to_list(YYTHD, (yyvsp[(3) - (4)].item),(bool) (yyvsp[(4) - (4)].num))) MYSQL_YYABORT; }
    break;

  case 1511:
#line 10598 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { if (add_order_to_list(YYTHD, (yyvsp[(1) - (2)].item),(bool) (yyvsp[(2) - (2)].num))) MYSQL_YYABORT; }
    break;

  case 1512:
#line 10602 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num) =  1; }
    break;

  case 1513:
#line 10603 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num) =1; }
    break;

  case 1514:
#line 10604 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num) =0; }
    break;

  case 1515:
#line 10609 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            SELECT_LEX *sel= lex->current_select;
            sel->offset_limit= 0;
            sel->select_limit= 0;
          }
    break;

  case 1516:
#line 10615 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1517:
#line 10619 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1518:
#line 10620 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1519:
#line 10625 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
          }
    break;

  case 1520:
#line 10632 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[(1) - (1)].item);
            sel->offset_limit= 0;
            sel->explicit_limit= 1;
          }
    break;

  case 1521:
#line 10639 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[(3) - (3)].item);
            sel->offset_limit= (yyvsp[(1) - (3)].item);
            sel->explicit_limit= 1;
          }
    break;

  case 1522:
#line 10646 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[(1) - (3)].item);
            sel->offset_limit= (yyvsp[(3) - (3)].item);
            sel->explicit_limit= 1;
          }
    break;

  case 1523:
#line 10656 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
          Item_splocal *splocal;
          Lex_input_stream *lip= &YYTHD->m_parser_state->m_lip;

          splocal= create_item_for_sp_var(YYTHD, (yyvsp[(1) - (1)].lex_str), NULL,
                                          lip->get_tok_start(), lip->get_ptr());
          if (splocal == NULL)
            MYSQL_YYABORT;
          Lex->safe_to_cache_query= 0;
          if (splocal->type() != Item::INT_ITEM)
          {
            my_error(ER_WRONG_SPVAR_TYPE_IN_LIMIT, MYF(0));
            MYSQL_YYABORT;
          }
          splocal->limit_clause_param= TRUE;
          (yyval.item)= splocal;
        }
    break;

  case 1524:
#line 10674 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
          ((Item_param *) (yyvsp[(1) - (1)].item))->limit_clause_param= TRUE;
        }
    break;

  case 1525:
#line 10678 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_uint((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1526:
#line 10684 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_uint((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1527:
#line 10690 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_uint((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1528:
#line 10699 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->current_select->select_limit= 0;
          }
    break;

  case 1529:
#line 10704 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            SELECT_LEX *sel= Select;
            sel->select_limit= (yyvsp[(2) - (2)].item);
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
            sel->explicit_limit= 1;
          }
    break;

  case 1530:
#line 10713 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1531:
#line 10714 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (ulong) strtol((yyvsp[(1) - (1)].lex_str).str, (char**) 0, 16); }
    break;

  case 1532:
#line 10715 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1533:
#line 10716 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1534:
#line 10717 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1535:
#line 10718 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1536:
#line 10722 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1537:
#line 10723 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.ulong_num)= (ulong) strtol((yyvsp[(1) - (1)].lex_str).str, (char**) 0, 16); }
    break;

  case 1538:
#line 10724 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1539:
#line 10725 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1540:
#line 10726 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { MYSQL_YYABORT; }
    break;

  case 1541:
#line 10730 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1542:
#line 10731 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1543:
#line 10732 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1544:
#line 10733 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1545:
#line 10734 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1546:
#line 10738 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1547:
#line 10739 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1548:
#line 10740 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, (char**) 0, &error); }
    break;

  case 1549:
#line 10741 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { MYSQL_YYABORT; }
    break;

  case 1550:
#line 10746 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { my_parse_error(ER(ER_ONLY_INTEGERS_ALLOWED)); }
    break;

  case 1554:
#line 10757 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;

            if (! lex->parsing_options.allows_select_procedure)
            {
              my_error(ER_VIEW_SELECT_CLAUSE, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }

            if (&lex->select_lex != lex->current_select)
            {
              my_error(ER_WRONG_USAGE, MYF(0), "PROCEDURE", "subquery");
              MYSQL_YYABORT;
            }
            lex->proc_list.elements=0;
            lex->proc_list.first=0;
            lex->proc_list.next= &lex->proc_list.first;
            Item_field *item= new (YYTHD->mem_root)
                                Item_field(&lex->current_select->context,
                                           NULL, NULL, (yyvsp[(2) - (2)].lex_str).str);
            if (item == NULL)
              MYSQL_YYABORT;
            if (add_proc_to_list(lex->thd, item))
              MYSQL_YYABORT;
            Lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
          }
    break;

  case 1556:
#line 10787 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1557:
#line 10788 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1560:
#line 10798 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;

            if (add_proc_to_list(thd, (yyvsp[(2) - (3)].item)))
              MYSQL_YYABORT;
            if (!(yyvsp[(2) - (3)].item)->name)
              (yyvsp[(2) - (3)].item)->set_name((yyvsp[(1) - (3)].simple_string), (uint) ((yyvsp[(3) - (3)].simple_string) - (yyvsp[(1) - (3)].simple_string)), thd->charset());
          }
    break;

  case 1561:
#line 10809 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (!lex->describe && (!(lex->result= new select_dumpvar())))
              MYSQL_YYABORT;
          }
    break;

  case 1562:
#line 10815 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1564:
#line 10820 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1565:
#line 10825 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->result) 
            {
              my_var *var= new my_var((yyvsp[(2) - (2)].lex_str),0,0,(enum_field_types)0);
              if (var == NULL)
                MYSQL_YYABORT;
              ((select_dumpvar *)lex->result)->var_list.push_back(var);
            }
            else
            {
              /*
                The parser won't create select_result instance only
                if it's an EXPLAIN.
              */
              DBUG_ASSERT(lex->describe);
            }
          }
    break;

  case 1566:
#line 10844 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            sp_variable *t;

            if (!lex->spcont || !(t=lex->spcont->find_variable((yyvsp[(1) - (1)].lex_str), false)))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
            if (lex->result)
            {
              my_var *var= new my_var((yyvsp[(1) - (1)].lex_str),1,t->offset,t->type);
              if (var == NULL)
                MYSQL_YYABORT;
              ((select_dumpvar *)lex->result)->var_list.push_back(var);
#ifndef DBUG_OFF
              var->sp= lex->sphead;
#endif
            }
            else
            {
              /*
                The parser won't create select_result instance only
                if it's an EXPLAIN.
              */
              DBUG_ASSERT(lex->describe);
            }
          }
    break;

  case 1567:
#line 10876 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if (! Lex->parsing_options.allows_select_into)
            {
              my_error(ER_VIEW_SELECT_CLAUSE, MYF(0), "INTO");
              MYSQL_YYABORT;
            }
          }
    break;

  case 1569:
#line 10888 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
            if (!(lex->exchange= new sql_exchange((yyvsp[(2) - (2)].lex_str).str, 0)) ||
                !(lex->result= new select_export(lex->exchange)))
              MYSQL_YYABORT;
          }
    break;

  case 1570:
#line 10896 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->exchange->cs= (yyvsp[(4) - (4)].charset); }
    break;

  case 1572:
#line 10899 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (!lex->describe)
            {
              lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
              if (!(lex->exchange= new sql_exchange((yyvsp[(2) - (2)].lex_str).str,1)))
                MYSQL_YYABORT;
              if (!(lex->result= new select_dump(lex->exchange)))
                MYSQL_YYABORT;
            }
          }
    break;

  case 1573:
#line 10911 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
          }
    break;

  case 1574:
#line 10922 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_DO;
            mysql_init_select(lex);
          }
    break;

  case 1575:
#line 10928 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->insert_list= (yyvsp[(3) - (3)].item_list);
          }
    break;

  case 1576:
#line 10939 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_DROP_TABLE;
            lex->drop_temporary= (yyvsp[(2) - (4)].num);
            lex->drop_if_exists= (yyvsp[(4) - (4)].num);
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
    break;

  case 1577:
#line 10948 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1578:
#line 10949 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1579:
#line 10950 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            Alter_drop *ad= new Alter_drop(Alter_drop::KEY, (yyvsp[(3) - (6)].lex_str).str);
            if (ad == NULL)
              MYSQL_YYABORT;
            lex->sql_command= SQLCOM_DROP_INDEX;
            lex->alter_info.reset();
            lex->alter_info.flags= ALTER_DROP_INDEX;
            lex->alter_info.drop_list.push_back(ad);
            if (!lex->current_select->add_table_to_list(lex->thd, (yyvsp[(5) - (6)].table), NULL,
                                                        TL_OPTION_UPDATING,
                                                        TL_READ_NO_INSERT,
                                                        MDL_SHARED_NO_WRITE))
              MYSQL_YYABORT;
          }
    break;

  case 1580:
#line 10966 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_DROP_DB;
            lex->drop_if_exists=(yyvsp[(3) - (4)].num);
            lex->name= (yyvsp[(4) - (4)].lex_str);
          }
    break;

  case 1581:
#line 10973 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_name *spname;
            if ((yyvsp[(4) - (6)].lex_str).str && check_and_convert_db_name(&(yyvsp[(4) - (6)].lex_str), FALSE))
            {
               my_error(ER_WRONG_DB_NAME, MYF(0), (yyvsp[(4) - (6)].lex_str).str);
               MYSQL_YYABORT;
            }
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_DROP_FUNCTION;
            lex->drop_if_exists= (yyvsp[(3) - (6)].num);
            spname= new sp_name((yyvsp[(4) - (6)].lex_str), (yyvsp[(6) - (6)].lex_str), true);
            if (spname == NULL)
              MYSQL_YYABORT;
            spname->init_qname(thd);
            lex->spname= spname;
          }
    break;

  case 1582:
#line 10996 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            LEX_STRING db= {0, 0};
            sp_name *spname;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            if (thd->db && lex->copy_db_to(&db.str, &db.length))
              MYSQL_YYABORT;
            lex->sql_command = SQLCOM_DROP_FUNCTION;
            lex->drop_if_exists= (yyvsp[(3) - (4)].num);
            spname= new sp_name(db, (yyvsp[(4) - (4)].lex_str), false);
            if (spname == NULL)
              MYSQL_YYABORT;
            spname->init_qname(thd);
            lex->spname= spname;
          }
    break;

  case 1583:
#line 11017 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_DROP_PROCEDURE;
            lex->drop_if_exists= (yyvsp[(3) - (4)].num);
            lex->spname= (yyvsp[(4) - (4)].spname);
          }
    break;

  case 1584:
#line 11029 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_DROP_USER;
          }
    break;

  case 1585:
#line 11033 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DROP_VIEW;
            lex->drop_if_exists= (yyvsp[(3) - (3)].num);
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
    break;

  case 1586:
#line 11041 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1587:
#line 11043 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->drop_if_exists= (yyvsp[(3) - (4)].num);
            Lex->spname= (yyvsp[(4) - (4)].spname);
            Lex->sql_command = SQLCOM_DROP_EVENT;
          }
    break;

  case 1588:
#line 11049 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DROP_TRIGGER;
            lex->drop_if_exists= (yyvsp[(3) - (4)].num);
            lex->spname= (yyvsp[(4) - (4)].spname);
          }
    break;

  case 1589:
#line 11056 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= DROP_TABLESPACE;
          }
    break;

  case 1590:
#line 11061 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->alter_tablespace_info->ts_cmd_type= DROP_LOGFILE_GROUP;
          }
    break;

  case 1591:
#line 11066 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_DROP_SERVER;
            Lex->drop_if_exists= (yyvsp[(3) - (4)].num);
            Lex->server_options.server_name= (yyvsp[(4) - (4)].lex_str).str;
            Lex->server_options.server_name_length= (yyvsp[(4) - (4)].lex_str).length;
          }
    break;

  case 1594:
#line 11081 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (1)].table), NULL,
                                           TL_OPTION_UPDATING,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
    break;

  case 1595:
#line 11092 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (2)].table), NULL,
                                           TL_OPTION_UPDATING,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type,
                                           NULL,
                                           (yyvsp[(2) - (2)].string_list)))
              MYSQL_YYABORT;
          }
    break;

  case 1598:
#line 11110 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (1)].table), NULL,
                                           TL_OPTION_UPDATING | TL_OPTION_ALIAS,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
    break;

  case 1599:
#line 11120 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 1600:
#line 11121 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1601:
#line 11125 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 1602:
#line 11126 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 1610:
#line 11149 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSERT;
            lex->duplicates= DUP_ERROR; 
            mysql_init_select(lex);
          }
    break;

  case 1611:
#line 11157 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Select->set_lock_for_tables((yyvsp[(3) - (5)].lock_type));
            Lex->current_select= &Lex->select_lex;
          }
    break;

  case 1612:
#line 11162 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1613:
#line 11167 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_REPLACE;
            lex->duplicates= DUP_REPLACE;
            mysql_init_select(lex);
          }
    break;

  case 1614:
#line 11174 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Select->set_lock_for_tables((yyvsp[(3) - (4)].lock_type));
            Lex->current_select= &Lex->select_lex;
          }
    break;

  case 1615:
#line 11179 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1616:
#line 11184 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
#ifdef HAVE_QUERY_CACHE
            /*
              If it is SP we do not allow insert optimisation whan result of
              insert visible only after the table unlocking but everyone can
              read table.
            */
            (yyval.lock_type)= (Lex->sphead ? TL_WRITE_DEFAULT : TL_WRITE_CONCURRENT_INSERT);
#else
            (yyval.lock_type)= TL_WRITE_CONCURRENT_INSERT;
#endif
          }
    break;

  case 1617:
#line 11196 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
    break;

  case 1618:
#line 11198 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
          Lex->keyword_delayed_begin_offset= (uint)(YYLIP->get_tok_start() -
                                                    YYTHD->query());
          Lex->keyword_delayed_end_offset= Lex->keyword_delayed_begin_offset +
                                           YYLIP->yyLength() + 1;
          (yyval.lock_type)= TL_WRITE_DELAYED;
        }
    break;

  case 1619:
#line 11205 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE; }
    break;

  case 1620:
#line 11209 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.lock_type)= (yyvsp[(1) - (1)].lock_type); }
    break;

  case 1621:
#line 11211 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
          Lex->keyword_delayed_begin_offset= (uint)(YYLIP->get_tok_start() -
                                                    YYTHD->query());
          Lex->keyword_delayed_end_offset= Lex->keyword_delayed_begin_offset +
                                           YYLIP->yyLength() + 1;
          (yyval.lock_type)= TL_WRITE_DELAYED;
        }
    break;

  case 1622:
#line 11221 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1623:
#line 11222 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1624:
#line 11227 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->field_list.empty();
            lex->many_values.empty();
            lex->insert_list=0;
          }
    break;

  case 1625:
#line 11235 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1626:
#line 11236 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1627:
#line 11237 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1628:
#line 11239 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (!(lex->insert_list = new List_item) ||
                lex->many_values.push_back(lex->insert_list))
              MYSQL_YYABORT;
          }
    break;

  case 1630:
#line 11249 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->field_list.push_back((yyvsp[(3) - (3)].item)); }
    break;

  case 1631:
#line 11250 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->field_list.push_back((yyvsp[(1) - (1)].item)); }
    break;

  case 1632:
#line 11254 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1633:
#line 11255 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1634:
#line 11257 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Select->set_braces(0);}
    break;

  case 1635:
#line 11258 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1636:
#line 11260 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Select->set_braces(1);}
    break;

  case 1637:
#line 11261 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1642:
#line 11276 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->field_list.push_back((yyvsp[(1) - (3)].item)) ||
                lex->insert_list->push_back((yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1643:
#line 11285 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1644:
#line 11286 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1645:
#line 11290 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1646:
#line 11291 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1647:
#line 11296 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
              if (!(Lex->insert_list = new List_item))
                MYSQL_YYABORT;
          }
    break;

  case 1648:
#line 11301 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->many_values.push_back(lex->insert_list))
              MYSQL_YYABORT;
          }
    break;

  case 1649:
#line 11309 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1651:
#line 11315 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if (Lex->insert_list->push_back((yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1652:
#line 11320 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if (Lex->insert_list->push_back((yyvsp[(1) - (1)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1653:
#line 11327 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].item);}
    break;

  case 1654:
#line 11329 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_default_value(Lex->current_context());
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1656:
#line 11338 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->duplicates= DUP_UPDATE; }
    break;

  case 1658:
#line 11346 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            mysql_init_select(lex);
            lex->sql_command= SQLCOM_UPDATE;
            lex->duplicates= DUP_ERROR; 
          }
    break;

  case 1659:
#line 11354 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->select_lex.table_list.elements > 1)
              lex->sql_command= SQLCOM_UPDATE_MULTI;
            else if (lex->select_lex.get_table_list()->derived)
            {
              /* it is single table update and it is update of derived table */
              my_error(ER_NON_UPDATABLE_TABLE, MYF(0),
                       lex->select_lex.get_table_list()->alias, "UPDATE");
              MYSQL_YYABORT;
            }
            /*
              In case of multi-update setting write lock for all tables may
              be too pessimistic. We will decrease lock level if possible in
              mysql_multi_update().
            */
            Select->set_lock_for_tables((yyvsp[(3) - (7)].lock_type));
          }
    break;

  case 1660:
#line 11372 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1663:
#line 11382 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if (add_item_to_list(YYTHD, (yyvsp[(1) - (3)].item)) || add_value_to_list(YYTHD, (yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1666:
#line 11395 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
          LEX *lex= Lex;
          if (lex->update_list.push_back((yyvsp[(1) - (3)].item)) || 
              lex->value_list.push_back((yyvsp[(3) - (3)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 1667:
#line 11404 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
    break;

  case 1668:
#line 11405 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
    break;

  case 1669:
#line 11412 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DELETE;
            mysql_init_select(lex);
            YYPS->m_lock_type= TL_WRITE_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_WRITE;

            lex->ignore= 0;
            lex->select_lex.init_order();
          }
    break;

  case 1671:
#line 11427 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(2) - (3)].table), NULL, TL_OPTION_UPDATING,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type,
                                           NULL,
                                           (yyvsp[(3) - (3)].string_list)))
              MYSQL_YYABORT;
            YYPS->m_lock_type= TL_READ_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_READ;
          }
    break;

  case 1672:
#line 11438 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1673:
#line 11440 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            mysql_init_multi_delete(Lex);
            YYPS->m_lock_type= TL_READ_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_READ;
          }
    break;

  case 1674:
#line 11446 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if (multi_delete_set_locks_and_link_aux_tables(Lex))
              MYSQL_YYABORT;
          }
    break;

  case 1675:
#line 11451 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            mysql_init_multi_delete(Lex);
            YYPS->m_lock_type= TL_READ_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_READ;
          }
    break;

  case 1676:
#line 11457 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if (multi_delete_set_locks_and_link_aux_tables(Lex))
              MYSQL_YYABORT;
          }
    break;

  case 1679:
#line 11470 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Table_ident *ti= new Table_ident((yyvsp[(1) - (2)].lex_str));
            if (ti == NULL)
              MYSQL_YYABORT;
            if (!Select->add_table_to_list(YYTHD,
                                           ti,
                                           NULL,
                                           TL_OPTION_UPDATING | TL_OPTION_ALIAS,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
    break;

  case 1680:
#line 11483 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Table_ident *ti= new Table_ident(YYTHD, (yyvsp[(1) - (4)].lex_str), (yyvsp[(3) - (4)].lex_str), 0);
            if (ti == NULL)
              MYSQL_YYABORT;
            if (!Select->add_table_to_list(YYTHD,
                                           ti,
                                           NULL,
                                           TL_OPTION_UPDATING | TL_OPTION_ALIAS,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
    break;

  case 1681:
#line 11498 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1682:
#line 11499 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1683:
#line 11503 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1684:
#line 11504 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1685:
#line 11508 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Select->options|= OPTION_QUICK; }
    break;

  case 1686:
#line 11509 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { YYPS->m_lock_type= TL_WRITE_LOW_PRIORITY; }
    break;

  case 1687:
#line 11510 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->ignore= 1; }
    break;

  case 1688:
#line 11515 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX* lex= Lex;
            lex->sql_command= SQLCOM_TRUNCATE;
            lex->alter_info.reset();
            lex->select_lex.options= 0;
            lex->select_lex.sql_cache= SELECT_LEX::SQL_CACHE_UNSPECIFIED;
            lex->select_lex.init_order();
            YYPS->m_lock_type= TL_WRITE;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
    break;

  case 1689:
#line 11526 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_truncate_table();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1696:
#line 11551 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_CPU;
    }
    break;

  case 1697:
#line 11555 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_MEMORY;
    }
    break;

  case 1698:
#line 11559 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_BLOCK_IO;
    }
    break;

  case 1699:
#line 11563 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_CONTEXT;
    }
    break;

  case 1700:
#line 11567 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_PAGE_FAULTS;
    }
    break;

  case 1701:
#line 11571 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_IPC;
    }
    break;

  case 1702:
#line 11575 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_SWAPS;
    }
    break;

  case 1703:
#line 11579 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_SOURCE;
    }
    break;

  case 1704:
#line 11583 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_ALL;
    }
    break;

  case 1705:
#line 11590 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
      Lex->profile_query_id= 0;
    }
    break;

  case 1706:
#line 11594 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
      Lex->profile_query_id= atoi((yyvsp[(3) - (3)].lex_str).str);
    }
    break;

  case 1707:
#line 11603 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->wild=0;
            mysql_init_select(lex);
            lex->current_select->parsing_place= SELECT_LIST;
            memset(&lex->create_info, 0, sizeof(lex->create_info));
          }
    break;

  case 1708:
#line 11611 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Select->parsing_place= NO_MATTER;
          }
    break;

  case 1709:
#line 11618 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_DATABASES;
             if (prepare_schema_table(YYTHD, lex, 0, SCH_SCHEMATA))
               MYSQL_YYABORT;
           }
    break;

  case 1710:
#line 11625 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TABLES;
             lex->select_lex.db= (yyvsp[(3) - (4)].simple_string);
             if (prepare_schema_table(YYTHD, lex, 0, SCH_TABLE_NAMES))
               MYSQL_YYABORT;
           }
    break;

  case 1711:
#line 11633 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TRIGGERS;
             lex->select_lex.db= (yyvsp[(3) - (4)].simple_string);
             if (prepare_schema_table(YYTHD, lex, 0, SCH_TRIGGERS))
               MYSQL_YYABORT;
           }
    break;

  case 1712:
#line 11641 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_EVENTS;
             lex->select_lex.db= (yyvsp[(2) - (3)].simple_string);
             if (prepare_schema_table(YYTHD, lex, 0, SCH_EVENTS))
               MYSQL_YYABORT;
           }
    break;

  case 1713:
#line 11649 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TABLE_STATUS;
             lex->select_lex.db= (yyvsp[(3) - (4)].simple_string);
             if (prepare_schema_table(YYTHD, lex, 0, SCH_TABLES))
               MYSQL_YYABORT;
           }
    break;

  case 1714:
#line 11657 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_OPEN_TABLES;
            lex->select_lex.db= (yyvsp[(3) - (4)].simple_string);
            if (prepare_schema_table(YYTHD, lex, 0, SCH_OPEN_TABLES))
              MYSQL_YYABORT;
          }
    break;

  case 1715:
#line 11665 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_PLUGINS;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_PLUGINS))
              MYSQL_YYABORT;
          }
    break;

  case 1716:
#line 11672 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->create_info.db_type= (yyvsp[(2) - (3)].db_type); }
    break;

  case 1717:
#line 11674 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->create_info.db_type= NULL; }
    break;

  case 1718:
#line 11676 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_FIELDS;
            if ((yyvsp[(5) - (6)].simple_string))
              (yyvsp[(4) - (6)].table)->change_db((yyvsp[(5) - (6)].simple_string));
            if (prepare_schema_table(YYTHD, lex, (yyvsp[(4) - (6)].table), SCH_COLUMNS))
              MYSQL_YYABORT;
          }
    break;

  case 1719:
#line 11685 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_SHOW_BINLOGS;
          }
    break;

  case 1720:
#line 11689 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_HOSTS;
          }
    break;

  case 1721:
#line 11693 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_BINLOG_EVENTS;
          }
    break;

  case 1723:
#line 11698 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_RELAYLOG_EVENTS;
          }
    break;

  case 1725:
#line 11703 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_KEYS;
            if ((yyvsp[(4) - (5)].simple_string))
              (yyvsp[(3) - (5)].table)->change_db((yyvsp[(4) - (5)].simple_string));
            if (prepare_schema_table(YYTHD, lex, (yyvsp[(3) - (5)].table), SCH_STATISTICS))
              MYSQL_YYABORT;
          }
    break;

  case 1726:
#line 11712 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_STORAGE_ENGINES;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_ENGINES))
              MYSQL_YYABORT;
          }
    break;

  case 1727:
#line 11719 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_AUTHORS;
          }
    break;

  case 1728:
#line 11724 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_CONTRIBUTORS;
          }
    break;

  case 1729:
#line 11729 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_PRIVILEGES;
          }
    break;

  case 1730:
#line 11734 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (void) create_select_for_variable("warning_count"); }
    break;

  case 1731:
#line 11736 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (void) create_select_for_variable("error_count"); }
    break;

  case 1732:
#line 11738 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->sql_command = SQLCOM_SHOW_WARNS;}
    break;

  case 1733:
#line 11740 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->sql_command = SQLCOM_SHOW_ERRORS;}
    break;

  case 1734:
#line 11742 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->sql_command = SQLCOM_SHOW_PROFILES; }
    break;

  case 1735:
#line 11744 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { 
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_PROFILE;
            if (prepare_schema_table(YYTHD, lex, NULL, SCH_PROFILES) != 0)
              YYABORT;
          }
    break;

  case 1736:
#line 11751 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS;
            lex->option_type= (yyvsp[(1) - (3)].var_type);
            if (prepare_schema_table(YYTHD, lex, 0, SCH_STATUS))
              MYSQL_YYABORT;
          }
    break;

  case 1737:
#line 11759 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->sql_command= SQLCOM_SHOW_PROCESSLIST;}
    break;

  case 1738:
#line 11761 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_VARIABLES;
            lex->option_type= (yyvsp[(1) - (3)].var_type);
            if (prepare_schema_table(YYTHD, lex, 0, SCH_VARIABLES))
              MYSQL_YYABORT;
          }
    break;

  case 1739:
#line 11769 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_CHARSETS;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_CHARSETS))
              MYSQL_YYABORT;
          }
    break;

  case 1740:
#line 11776 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_COLLATIONS;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_COLLATIONS))
              MYSQL_YYABORT;
          }
    break;

  case 1741:
#line 11783 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_GRANTS;
            LEX_USER *curr_user;
            if (!(curr_user= (LEX_USER*) lex->thd->alloc(sizeof(st_lex_user))))
              MYSQL_YYABORT;
            memset(curr_user, 0, sizeof(st_lex_user));
            lex->grant_user= curr_user;
          }
    break;

  case 1742:
#line 11793 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_GRANTS;
            lex->grant_user=(yyvsp[(3) - (3)].lex_user);
            lex->grant_user->password=null_lex_str;
          }
    break;

  case 1743:
#line 11800 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->sql_command=SQLCOM_SHOW_CREATE_DB;
            Lex->create_info.options=(yyvsp[(3) - (4)].num);
            Lex->name= (yyvsp[(4) - (4)].lex_str);
          }
    break;

  case 1744:
#line 11806 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (!lex->select_lex.add_table_to_list(YYTHD, (yyvsp[(3) - (3)].table), NULL,0))
              MYSQL_YYABORT;
            lex->only_view= 0;
            lex->create_info.storage_media= HA_SM_DEFAULT;
          }
    break;

  case 1745:
#line 11815 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (!lex->select_lex.add_table_to_list(YYTHD, (yyvsp[(3) - (3)].table), NULL, 0))
              MYSQL_YYABORT;
            lex->only_view= 1;
          }
    break;

  case 1746:
#line 11823 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_SHOW_MASTER_STAT;
          }
    break;

  case 1747:
#line 11827 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_STAT;
          }
    break;

  case 1748:
#line 11831 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            lex->sql_command = SQLCOM_SHOW_CREATE_PROC;
            lex->spname= (yyvsp[(3) - (3)].spname);
          }
    break;

  case 1749:
#line 11838 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            lex->sql_command = SQLCOM_SHOW_CREATE_FUNC;
            lex->spname= (yyvsp[(3) - (3)].spname);
          }
    break;

  case 1750:
#line 11845 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_CREATE_TRIGGER;
            lex->spname= (yyvsp[(3) - (3)].spname);
          }
    break;

  case 1751:
#line 11851 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_PROC;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_PROCEDURES))
              MYSQL_YYABORT;
          }
    break;

  case 1752:
#line 11858 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_FUNC;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_PROCEDURES))
              MYSQL_YYABORT;
          }
    break;

  case 1753:
#line 11865 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_SHOW_PROC_CODE;
            Lex->spname= (yyvsp[(3) - (3)].spname);
          }
    break;

  case 1754:
#line 11870 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->sql_command= SQLCOM_SHOW_FUNC_CODE;
            Lex->spname= (yyvsp[(3) - (3)].spname);
          }
    break;

  case 1755:
#line 11875 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->spname= (yyvsp[(3) - (3)].spname);
            Lex->sql_command = SQLCOM_SHOW_CREATE_EVENT;
          }
    break;

  case 1756:
#line 11883 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_STATUS; }
    break;

  case 1757:
#line 11885 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_MUTEX; }
    break;

  case 1758:
#line 11887 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_LOGS; }
    break;

  case 1763:
#line 11901 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.simple_string)= 0; }
    break;

  case 1764:
#line 11902 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.simple_string)= (yyvsp[(2) - (2)].lex_str).str; }
    break;

  case 1765:
#line 11906 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->verbose=0; }
    break;

  case 1766:
#line 11907 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->verbose=1; }
    break;

  case 1769:
#line 11916 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->mi.log_file_name = 0; }
    break;

  case 1770:
#line 11917 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->mi.log_file_name = (yyvsp[(2) - (2)].lex_str).str; }
    break;

  case 1771:
#line 11921 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->mi.pos = 4; /* skip magic number */ }
    break;

  case 1772:
#line 11922 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->mi.pos = (yyvsp[(2) - (2)].ulonglong_number); }
    break;

  case 1774:
#line 11928 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->wild= new (YYTHD->mem_root) String((yyvsp[(2) - (2)].lex_str).str, (yyvsp[(2) - (2)].lex_str).length,
                                                    system_charset_info);
            if (Lex->wild == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1775:
#line 11935 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Select->where= (yyvsp[(2) - (2)].item);
            if ((yyvsp[(2) - (2)].item))
              (yyvsp[(2) - (2)].item)->top_level_item();
          }
    break;

  case 1776:
#line 11945 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            mysql_init_select(lex);
            lex->current_select->parsing_place= SELECT_LIST;
            lex->sql_command= SQLCOM_SHOW_FIELDS;
            lex->select_lex.db= 0;
            lex->verbose= 0;
            if (prepare_schema_table(YYTHD, lex, (yyvsp[(2) - (2)].table), SCH_COLUMNS))
              MYSQL_YYABORT;
          }
    break;

  case 1777:
#line 11956 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Select->parsing_place= NO_MATTER;
          }
    break;

  case 1778:
#line 11960 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->describe|= DESCRIBE_NORMAL; }
    break;

  case 1779:
#line 11962 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->select_lex.options|= SELECT_DESCRIBE; }
    break;

  case 1787:
#line 11980 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if ((Lex->explain_format= new Explain_format_traditional) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1788:
#line 11985 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if ((Lex->explain_format= new Explain_format_traditional) == NULL)
              MYSQL_YYABORT;
            Lex->describe|= DESCRIBE_EXTENDED;
          }
    break;

  case 1789:
#line 11991 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if ((Lex->explain_format= new Explain_format_traditional) == NULL)
              MYSQL_YYABORT;
            Lex->describe|= DESCRIBE_PARTITIONS;
          }
    break;

  case 1790:
#line 11997 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if (!my_strcasecmp(system_charset_info, (yyvsp[(3) - (3)].lex_str).str, "JSON"))
            {
              if ((Lex->explain_format= new Explain_format_JSON) == NULL)
                MYSQL_YYABORT;
              Lex->describe|= DESCRIBE_EXTENDED | DESCRIBE_PARTITIONS;
            }
            else if (!my_strcasecmp(system_charset_info, (yyvsp[(3) - (3)].lex_str).str, "TRADITIONAL"))
            {
              if ((Lex->explain_format= new Explain_format_traditional) == NULL)
                MYSQL_YYABORT;
            }
            else
            {
              my_error(ER_UNKNOWN_EXPLAIN_FORMAT, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 1791:
#line 12018 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1792:
#line 12019 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->wild= (yyvsp[(1) - (1)].string); }
    break;

  case 1793:
#line 12021 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->wild= new (YYTHD->mem_root) String((const char*) (yyvsp[(1) - (1)].lex_str).str,
                                                    (yyvsp[(1) - (1)].lex_str).length,
                                                    system_charset_info);
            if (Lex->wild == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1794:
#line 12035 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_FLUSH;
            lex->type= 0;
            lex->no_write_to_binlog= (yyvsp[(2) - (2)].num);
          }
    break;

  case 1795:
#line 12042 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1796:
#line 12047 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->type|= REFRESH_TABLES;
            /*
              Set type of metadata and table locks for
              FLUSH TABLES table_list [WITH READ LOCK].
            */
            YYPS->m_lock_type= TL_READ_NO_INSERT;
            YYPS->m_mdl_type= MDL_SHARED_HIGH_PRIO;
          }
    break;

  case 1797:
#line 12056 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1798:
#line 12057 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1800:
#line 12062 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1801:
#line 12064 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            TABLE_LIST *tables= Lex->query_tables;
            Lex->type|= REFRESH_READ_LOCK;
            for (; tables; tables= tables->next_global)
            {
              tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
              tables->required_type= FRMTYPE_TABLE; /* Don't try to flush views. */
              tables->open_type= OT_BASE_ONLY;      /* Ignore temporary tables. */
            }
          }
    break;

  case 1803:
#line 12079 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1804:
#line 12084 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_ERROR_LOG; }
    break;

  case 1805:
#line 12086 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_ENGINE_LOG; }
    break;

  case 1806:
#line 12088 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_GENERAL_LOG; }
    break;

  case 1807:
#line 12090 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_SLOW_LOG; }
    break;

  case 1808:
#line 12092 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_BINARY_LOG; }
    break;

  case 1809:
#line 12094 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_RELAY_LOG; }
    break;

  case 1810:
#line 12096 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_QUERY_CACHE_FREE; }
    break;

  case 1811:
#line 12098 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_HOSTS; }
    break;

  case 1812:
#line 12100 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_GRANT; }
    break;

  case 1813:
#line 12102 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_LOG; }
    break;

  case 1814:
#line 12104 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_STATUS; }
    break;

  case 1815:
#line 12106 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_DES_KEY_FILE; }
    break;

  case 1816:
#line 12108 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_USER_RESOURCES; }
    break;

  case 1817:
#line 12112 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1818:
#line 12113 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1819:
#line 12118 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RESET; lex->type=0;
          }
    break;

  case 1820:
#line 12123 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1823:
#line 12132 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_SLAVE; }
    break;

  case 1824:
#line 12133 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { }
    break;

  case 1825:
#line 12134 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_MASTER; }
    break;

  case 1826:
#line 12135 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->type|= REFRESH_QUERY_CACHE;}
    break;

  case 1827:
#line 12139 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->reset_slave_info.all= false; }
    break;

  case 1828:
#line 12140 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->reset_slave_info.all= true; }
    break;

  case 1829:
#line 12145 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->type=0;
            lex->sql_command = SQLCOM_PURGE;
          }
    break;

  case 1830:
#line 12151 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1832:
#line 12160 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->to_log = (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 1833:
#line 12164 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->value_list.empty();
            lex->value_list.push_front((yyvsp[(2) - (2)].item));
            lex->sql_command= SQLCOM_PURGE_BEFORE;
          }
    break;

  case 1834:
#line 12176 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->value_list.empty();
            lex->value_list.push_front((yyvsp[(3) - (3)].item));
            lex->sql_command= SQLCOM_KILL;
          }
    break;

  case 1835:
#line 12185 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->type= 0; }
    break;

  case 1836:
#line 12186 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->type= 0; }
    break;

  case 1837:
#line 12187 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->type= ONLY_KILL_QUERY; }
    break;

  case 1838:
#line 12194 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CHANGE_DB;
            lex->select_lex.db= (yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 1839:
#line 12205 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), 
                       (yyvsp[(2) - (2)].filetype) == FILETYPE_CSV ? "LOAD DATA" : "LOAD XML");
              MYSQL_YYABORT;
            }
          }
    break;

  case 1840:
#line 12217 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_LOAD;
            lex->local_file=  (yyvsp[(5) - (7)].num);
            lex->duplicates= DUP_ERROR;
            lex->ignore= 0;
            if (!(lex->exchange= new sql_exchange((yyvsp[(7) - (7)].lex_str).str, 0, (yyvsp[(2) - (7)].filetype))))
              MYSQL_YYABORT;
          }
    break;

  case 1841:
#line 12227 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(12) - (13)].table), NULL, TL_OPTION_UPDATING,
                                           (yyvsp[(4) - (13)].lock_type), MDL_SHARED_WRITE, NULL, (yyvsp[(13) - (13)].string_list)))
              MYSQL_YYABORT;
            lex->field_list.empty();
            lex->update_list.empty();
            lex->value_list.empty();
          }
    break;

  case 1842:
#line 12237 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->exchange->cs= (yyvsp[(15) - (15)].charset); }
    break;

  case 1843:
#line 12241 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1844:
#line 12245 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.filetype)= FILETYPE_CSV; }
    break;

  case 1845:
#line 12246 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.filetype)= FILETYPE_XML; }
    break;

  case 1846:
#line 12250 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)=0;}
    break;

  case 1847:
#line 12251 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)=1;}
    break;

  case 1848:
#line 12255 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
    break;

  case 1849:
#line 12257 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
#ifdef HAVE_QUERY_CACHE
            /*
              Ignore this option in SP to avoid problem with query cache
            */
            if (Lex->sphead != 0)
              (yyval.lock_type)= TL_WRITE_DEFAULT;
            else
#endif
              (yyval.lock_type)= TL_WRITE_CONCURRENT_INSERT;
          }
    break;

  case 1850:
#line 12268 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
    break;

  case 1851:
#line 12272 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->duplicates=DUP_ERROR; }
    break;

  case 1852:
#line 12273 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->duplicates=DUP_REPLACE; }
    break;

  case 1853:
#line 12274 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->ignore= 1; }
    break;

  case 1858:
#line 12289 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->field_term= (yyvsp[(3) - (3)].string);
          }
    break;

  case 1859:
#line 12294 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            DBUG_ASSERT(lex->exchange != 0);
            lex->exchange->enclosed= (yyvsp[(4) - (4)].string);
            lex->exchange->opt_enclosed= 1;
          }
    break;

  case 1860:
#line 12301 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->enclosed= (yyvsp[(3) - (3)].string);
          }
    break;

  case 1861:
#line 12306 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->escaped= (yyvsp[(3) - (3)].string);
          }
    break;

  case 1866:
#line 12324 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->line_term= (yyvsp[(3) - (3)].string);
          }
    break;

  case 1867:
#line 12329 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->line_start= (yyvsp[(3) - (3)].string);
          }
    break;

  case 1868:
#line 12336 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { }
    break;

  case 1869:
#line 12338 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->exchange->line_term = (yyvsp[(4) - (4)].string); }
    break;

  case 1871:
#line 12343 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->skip_lines= atol((yyvsp[(2) - (3)].lex_str).str);
          }
    break;

  case 1872:
#line 12350 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { }
    break;

  case 1873:
#line 12352 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { }
    break;

  case 1874:
#line 12356 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1875:
#line 12357 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1876:
#line 12358 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1877:
#line 12363 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->field_list.push_back((yyvsp[(3) - (3)].item)); }
    break;

  case 1878:
#line 12365 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->field_list.push_back((yyvsp[(1) - (1)].item)); }
    break;

  case 1879:
#line 12369 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {(yyval.item)= (yyvsp[(1) - (1)].item);}
    break;

  case 1880:
#line 12371 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_user_var_as_out_param((yyvsp[(2) - (2)].lex_str));
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1881:
#line 12379 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1882:
#line 12380 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1885:
#line 12390 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->update_list.push_back((yyvsp[(1) - (5)].item)) || 
                lex->value_list.push_back((yyvsp[(4) - (5)].item)))
                MYSQL_YYABORT;
            (yyvsp[(4) - (5)].item)->set_name((yyvsp[(3) - (5)].simple_string), (uint) ((yyvsp[(5) - (5)].simple_string) - (yyvsp[(3) - (5)].simple_string)), YYTHD->charset());
          }
    break;

  case 1886:
#line 12403 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX_STRING tmp;
            THD *thd= YYTHD;
            const CHARSET_INFO *cs_con= thd->variables.collation_connection;
            const CHARSET_INFO *cs_cli= thd->variables.character_set_client;
            uint repertoire= thd->lex->text_string_is_7bit &&
                             my_charset_is_ascii_based(cs_cli) ?
                             MY_REPERTOIRE_ASCII : MY_REPERTOIRE_UNICODE30;
            if (thd->charset_is_collation_connection ||
                (repertoire == MY_REPERTOIRE_ASCII &&
                 my_charset_is_ascii_based(cs_con)))
              tmp= (yyvsp[(1) - (1)].lex_str);
            else
            {
              if (thd->convert_string(&tmp, cs_con, (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, cs_cli))
                MYSQL_YYABORT;
            }
            (yyval.item)= new (thd->mem_root) Item_string(tmp.str, tmp.length, cs_con,
                                                DERIVATION_COERCIBLE,
                                                repertoire);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1887:
#line 12427 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            uint repertoire= Lex->text_string_is_7bit ?
                             MY_REPERTOIRE_ASCII : MY_REPERTOIRE_UNICODE30;
            DBUG_ASSERT(my_charset_is_ascii_based(national_charset_info));
            (yyval.item)= new (YYTHD->mem_root) Item_string((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length,
                                                  national_charset_info,
                                                  DERIVATION_COERCIBLE,
                                                  repertoire);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1888:
#line 12439 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Item_string *str= new (YYTHD->mem_root) Item_string((yyvsp[(2) - (2)].lex_str).str,
                                                                (yyvsp[(2) - (2)].lex_str).length, (yyvsp[(1) - (2)].charset));
            if (str == NULL)
              MYSQL_YYABORT;
            str->set_repertoire_from_value();
            str->set_cs_specified(TRUE);

            (yyval.item)= str;
          }
    break;

  case 1889:
#line 12450 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Item_string* item= (Item_string*) (yyvsp[(1) - (2)].item);
            item->append((yyvsp[(2) - (2)].lex_str).str, (yyvsp[(2) - (2)].lex_str).length);
            if (!(item->collation.repertoire & MY_REPERTOIRE_EXTENDED))
            {
              /*
                 If the string has been pure ASCII so far,
                 check the new part.
              */
              const CHARSET_INFO *cs= YYTHD->variables.collation_connection;
              item->collation.repertoire|= my_string_repertoire(cs,
                                                                (yyvsp[(2) - (2)].lex_str).str,
                                                                (yyvsp[(2) - (2)].lex_str).length);
            }
          }
    break;

  case 1890:
#line 12469 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.string)= new (YYTHD->mem_root) String((yyvsp[(1) - (1)].lex_str).str,
                                             (yyvsp[(1) - (1)].lex_str).length,
                                             YYTHD->variables.collation_connection);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1891:
#line 12477 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Item *tmp= new (YYTHD->mem_root) Item_hex_string((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
            if (tmp == NULL)
              MYSQL_YYABORT;
            /*
              it is OK only emulate fix_fields, because we need only
              value of constant
            */
            tmp->quick_fix_field();
            (yyval.string)= tmp->val_str((String*) 0);
          }
    break;

  case 1892:
#line 12489 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Item *tmp= new (YYTHD->mem_root) Item_bin_string((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
            if (tmp == NULL)
              MYSQL_YYABORT;
            /*
              it is OK only emulate fix_fields, because we need only
              value of constant
            */
            tmp->quick_fix_field();
            (yyval.string)= tmp->val_str((String*) 0);
          }
    break;

  case 1893:
#line 12504 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;
            Item_param *item;
            if (! lex->parsing_options.allows_variable)
            {
              my_error(ER_VIEW_SELECT_VARIABLE, MYF(0));
              MYSQL_YYABORT;
            }
            item= new (thd->mem_root) Item_param((uint) (lip->get_tok_start() - thd->query()));
            if (!((yyval.item)= item) || lex->param_list.push_back(item))
            {
              my_message(ER_OUT_OF_RESOURCES, ER(ER_OUT_OF_RESOURCES), MYF(0));
              MYSQL_YYABORT;
            }
          }
    break;

  case 1894:
#line 12524 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.item) = (yyvsp[(1) - (1)].item); }
    break;

  case 1895:
#line 12525 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.item) = (yyvsp[(2) - (2)].item_num); }
    break;

  case 1896:
#line 12527 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyvsp[(2) - (2)].item_num)->max_length++;
            (yyval.item)= (yyvsp[(2) - (2)].item_num)->neg();
          }
    break;

  case 1897:
#line 12535 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.item) = (yyvsp[(1) - (1)].item); }
    break;

  case 1898:
#line 12536 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.item) = (yyvsp[(1) - (1)].item_num); }
    break;

  case 1899:
#line 12537 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].item); }
    break;

  case 1900:
#line 12539 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item) = new (YYTHD->mem_root) Item_null();
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            YYLIP->next_state= MY_LEX_OPERATOR_OR_IDENT;
          }
    break;

  case 1901:
#line 12546 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_int((char*) "FALSE",0,1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1902:
#line 12552 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_int((char*) "TRUE",1,1);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1903:
#line 12558 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item) = new (YYTHD->mem_root) Item_hex_string((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1904:
#line 12564 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)= new (YYTHD->mem_root) Item_bin_string((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1905:
#line 12570 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Item *tmp= new (YYTHD->mem_root) Item_hex_string((yyvsp[(2) - (2)].lex_str).str, (yyvsp[(2) - (2)].lex_str).length);
            if (tmp == NULL)
              MYSQL_YYABORT;
            /*
              it is OK only emulate fix_fieds, because we need only
              value of constant
            */
            tmp->quick_fix_field();
            String *str= tmp->val_str((String*) 0);

            Item_string *item_str;
            item_str= new (YYTHD->mem_root)
                        Item_string(NULL, /* name will be set in select_item */
                                    str ? str->ptr() : "",
                                    str ? str->length() : 0,
                                    (yyvsp[(1) - (2)].charset));
            if (!item_str ||
                !item_str->check_well_formed_result(&item_str->str_value, TRUE))
            {
              MYSQL_YYABORT;
            }

            item_str->set_repertoire_from_value();
            item_str->set_cs_specified(TRUE);

            (yyval.item)= item_str;
          }
    break;

  case 1906:
#line 12599 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Item *tmp= new (YYTHD->mem_root) Item_bin_string((yyvsp[(2) - (2)].lex_str).str, (yyvsp[(2) - (2)].lex_str).length);
            if (tmp == NULL)
              MYSQL_YYABORT;
            /*
              it is OK only emulate fix_fieds, because we need only
              value of constant
            */
            tmp->quick_fix_field();
            String *str= tmp->val_str((String*) 0);

            Item_string *item_str;
            item_str= new (YYTHD->mem_root)
                        Item_string(NULL, /* name will be set in select_item */
                                    str ? str->ptr() : "",
                                    str ? str->length() : 0,
                                    (yyvsp[(1) - (2)].charset));
            if (!item_str ||
                !item_str->check_well_formed_result(&item_str->str_value, TRUE))
            {
              MYSQL_YYABORT;
            }

            item_str->set_cs_specified(TRUE);

            (yyval.item)= item_str;
          }
    break;

  case 1907:
#line 12630 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            int error;
            (yyval.item_num)= new (YYTHD->mem_root)
                  Item_int((yyvsp[(1) - (1)].lex_str).str,
                           (longlong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, NULL, &error),
                           (yyvsp[(1) - (1)].lex_str).length);
            if ((yyval.item_num) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1908:
#line 12640 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            int error;
            (yyval.item_num)= new (YYTHD->mem_root)
                  Item_int((yyvsp[(1) - (1)].lex_str).str,
                           (longlong) my_strtoll10((yyvsp[(1) - (1)].lex_str).str, NULL, &error),
                           (yyvsp[(1) - (1)].lex_str).length);
            if ((yyval.item_num) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1909:
#line 12650 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item_num)= new (YYTHD->mem_root) Item_uint((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
            if ((yyval.item_num) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1910:
#line 12656 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item_num)= new (YYTHD->mem_root) Item_decimal((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length,
                                                   YYTHD->charset());
            if (((yyval.item_num) == NULL) || (YYTHD->is_error()))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 1911:
#line 12665 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item_num)= new (YYTHD->mem_root) Item_float((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length);
            if (((yyval.item_num) == NULL) || (YYTHD->is_error()))
            {
              MYSQL_YYABORT;
            }
          }
    break;

  case 1912:
#line 12677 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if (!((yyval.item)= create_temporal_literal(YYTHD, (yyvsp[(2) - (2)].lex_str).str, (yyvsp[(2) - (2)].lex_str).length, YYCSCL,
                                              MYSQL_TYPE_DATE, true)))
              MYSQL_YYABORT;
          }
    break;

  case 1913:
#line 12683 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if (!((yyval.item)= create_temporal_literal(YYTHD, (yyvsp[(2) - (2)].lex_str).str, (yyvsp[(2) - (2)].lex_str).length, YYCSCL,
                                              MYSQL_TYPE_TIME, true)))
              MYSQL_YYABORT;
          }
    break;

  case 1914:
#line 12689 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if (!((yyval.item)= create_temporal_literal(YYTHD, (yyvsp[(2) - (2)].lex_str).str, (yyvsp[(2) - (2)].lex_str).length, YYCSCL,
                                              MYSQL_TYPE_DATETIME, true)))
              MYSQL_YYABORT;
          }
    break;

  case 1915:
#line 12704 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.item)=(yyvsp[(1) - (1)].item); }
    break;

  case 1916:
#line 12705 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.item)=(yyvsp[(1) - (1)].item); }
    break;

  case 1917:
#line 12710 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            SELECT_LEX *sel= Select;
            (yyval.item)= new (YYTHD->mem_root) Item_field(Lex->current_context(),
                                                 NullS, (yyvsp[(1) - (3)].lex_str).str, "*");
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            sel->with_wild++;
          }
    break;

  case 1918:
#line 12719 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            SELECT_LEX *sel= Select;
            const char* schema= thd->client_capabilities & CLIENT_NO_SCHEMA ?
                                  NullS : (yyvsp[(1) - (5)].lex_str).str;
            (yyval.item)= new (thd->mem_root) Item_field(Lex->current_context(),
                                               schema,
                                               (yyvsp[(3) - (5)].lex_str).str,"*");
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
            sel->with_wild++;
          }
    break;

  case 1919:
#line 12734 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.item)=(yyvsp[(1) - (1)].item); }
    break;

  case 1920:
#line 12739 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_variable *spv;
            sp_pcontext *spc = lex->spcont;
            if (spc && (spv = spc->find_variable((yyvsp[(1) - (1)].lex_str), false)))
            {
              Lex_input_stream *lip= &thd->m_parser_state->m_lip;

              /* We're compiling a stored procedure and found a variable */
              if (! lex->parsing_options.allows_variable)
              {
                my_error(ER_VIEW_SELECT_VARIABLE, MYF(0));
                MYSQL_YYABORT;
              }

              (yyval.item)= create_item_for_sp_var(thd, (yyvsp[(1) - (1)].lex_str), spv,
                                         lip->get_tok_start_prev(),
                                         lip->get_tok_end());
              if ((yyval.item) == NULL)
                MYSQL_YYABORT;
              lex->safe_to_cache_query=0;
            }
            else
            {
              SELECT_LEX *sel=Select;
              if ((sel->parsing_place != IN_HAVING) ||
                  (sel->get_in_sum_expr() > 0))
              {
                (yyval.item)= new (thd->mem_root) Item_field(Lex->current_context(),
                                                   NullS, NullS, (yyvsp[(1) - (1)].lex_str).str);
              }
              else
              {
                (yyval.item)= new (thd->mem_root) Item_ref(Lex->current_context(),
                                                 NullS, NullS, (yyvsp[(1) - (1)].lex_str).str);
              }
              if ((yyval.item) == NULL)
                MYSQL_YYABORT;
            }
          }
    break;

  case 1921:
#line 12780 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].item); }
    break;

  case 1922:
#line 12785 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            SELECT_LEX *sel=Select;
            if ((sel->parsing_place != IN_HAVING) ||
                (sel->get_in_sum_expr() > 0))
            {
              (yyval.item)= new (thd->mem_root) Item_field(Lex->current_context(),
                                                 NullS, NullS, (yyvsp[(1) - (1)].lex_str).str);
            }
            else
            {
              (yyval.item)= new (thd->mem_root) Item_ref(Lex->current_context(),
                                               NullS, NullS, (yyvsp[(1) - (1)].lex_str).str);
            }
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1923:
#line 12802 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.item)= (yyvsp[(1) - (1)].item); }
    break;

  case 1924:
#line 12807 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            /*
              FIXME This will work ok in simple_ident_nospvar case because
              we can't meet simple_ident_nospvar in trigger now. But it
              should be changed in future.
            */
            if (lex->sphead && lex->sphead->m_type == TYPE_ENUM_TRIGGER &&
                (!my_strcasecmp(system_charset_info, (yyvsp[(1) - (3)].lex_str).str, "NEW") ||
                 !my_strcasecmp(system_charset_info, (yyvsp[(1) - (3)].lex_str).str, "OLD")))
            {
              Item_trigger_field *trg_fld;
              bool new_row= ((yyvsp[(1) - (3)].lex_str).str[0]=='N' || (yyvsp[(1) - (3)].lex_str).str[0]=='n');

              if (lex->trg_chistics.event == TRG_EVENT_INSERT &&
                  !new_row)
              {
                my_error(ER_TRG_NO_SUCH_ROW_IN_TRG, MYF(0), "OLD", "on INSERT");
                MYSQL_YYABORT;
              }

              if (lex->trg_chistics.event == TRG_EVENT_DELETE &&
                  new_row)
              {
                my_error(ER_TRG_NO_SUCH_ROW_IN_TRG, MYF(0), "NEW", "on DELETE");
                MYSQL_YYABORT;
              }

              DBUG_ASSERT(!new_row ||
                          (lex->trg_chistics.event == TRG_EVENT_INSERT ||
                           lex->trg_chistics.event == TRG_EVENT_UPDATE));
              const bool read_only=
                !(new_row && lex->trg_chistics.action_time == TRG_ACTION_BEFORE);
              trg_fld= new (thd->mem_root)
                         Item_trigger_field(Lex->current_context(),
                                            new_row ?
                                              Item_trigger_field::NEW_ROW:
                                              Item_trigger_field::OLD_ROW,
                                            (yyvsp[(3) - (3)].lex_str).str,
                                            SELECT_ACL,
                                            read_only);
              if (trg_fld == NULL)
                MYSQL_YYABORT;

              /*
                Let us add this item to list of all Item_trigger_field objects
                in trigger.
              */
              lex->trg_table_fields.link_in_list(trg_fld,
                                                 &trg_fld->next_trg_field);

              (yyval.item)= trg_fld;
            }
            else
            {
              SELECT_LEX *sel= lex->current_select;
              if (sel->no_table_names_allowed)
              {
                my_error(ER_TABLENAME_NOT_ALLOWED_HERE,
                         MYF(0), (yyvsp[(1) - (3)].lex_str).str, thd->where);
              }
              if ((sel->parsing_place != IN_HAVING) ||
                  (sel->get_in_sum_expr() > 0))
              {
                (yyval.item)= new (thd->mem_root) Item_field(Lex->current_context(),
                                                   NullS, (yyvsp[(1) - (3)].lex_str).str, (yyvsp[(3) - (3)].lex_str).str);
              }
              else
              {
                (yyval.item)= new (thd->mem_root) Item_ref(Lex->current_context(),
                                                 NullS, (yyvsp[(1) - (3)].lex_str).str, (yyvsp[(3) - (3)].lex_str).str);
              }
              if ((yyval.item) == NULL)
                MYSQL_YYABORT;
            }
          }
    break;

  case 1925:
#line 12886 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            SELECT_LEX *sel= lex->current_select;
            if (sel->no_table_names_allowed)
            {
              my_error(ER_TABLENAME_NOT_ALLOWED_HERE,
                       MYF(0), (yyvsp[(2) - (4)].lex_str).str, thd->where);
            }
            if ((sel->parsing_place != IN_HAVING) ||
                (sel->get_in_sum_expr() > 0))
            {
              (yyval.item)= new (thd->mem_root) Item_field(Lex->current_context(),
                                                 NullS, (yyvsp[(2) - (4)].lex_str).str, (yyvsp[(4) - (4)].lex_str).str);

            }
            else
            {
              (yyval.item)= new (thd->mem_root) Item_ref(Lex->current_context(),
                                               NullS, (yyvsp[(2) - (4)].lex_str).str, (yyvsp[(4) - (4)].lex_str).str);
            }
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1926:
#line 12911 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            SELECT_LEX *sel= lex->current_select;
            const char* schema= (thd->client_capabilities & CLIENT_NO_SCHEMA ?
                                 NullS : (yyvsp[(1) - (5)].lex_str).str);
            if (sel->no_table_names_allowed)
            {
              my_error(ER_TABLENAME_NOT_ALLOWED_HERE,
                       MYF(0), (yyvsp[(3) - (5)].lex_str).str, thd->where);
            }
            if ((sel->parsing_place != IN_HAVING) ||
                (sel->get_in_sum_expr() > 0))
            {
              (yyval.item)= new (thd->mem_root) Item_field(Lex->current_context(),
                                                 schema,
                                                 (yyvsp[(3) - (5)].lex_str).str, (yyvsp[(5) - (5)].lex_str).str);
            }
            else
            {
              (yyval.item)= new (thd->mem_root) Item_ref(Lex->current_context(),
                                               schema,
                                               (yyvsp[(3) - (5)].lex_str).str, (yyvsp[(5) - (5)].lex_str).str);
            }
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1927:
#line 12941 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str);}
    break;

  case 1928:
#line 12943 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            TABLE_LIST *table= Select->table_list.first;
            if (my_strcasecmp(table_alias_charset, (yyvsp[(1) - (5)].lex_str).str, table->db))
            {
              my_error(ER_WRONG_DB_NAME, MYF(0), (yyvsp[(1) - (5)].lex_str).str);
              MYSQL_YYABORT;
            }
            if (my_strcasecmp(table_alias_charset, (yyvsp[(3) - (5)].lex_str).str,
                              table->table_name))
            {
              my_error(ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[(3) - (5)].lex_str).str);
              MYSQL_YYABORT;
            }
            (yyval.lex_str)=(yyvsp[(5) - (5)].lex_str);
          }
    break;

  case 1929:
#line 12959 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            TABLE_LIST *table= Select->table_list.first;
            if (my_strcasecmp(table_alias_charset, (yyvsp[(1) - (3)].lex_str).str, table->alias))
            {
              my_error(ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[(1) - (3)].lex_str).str);
              MYSQL_YYABORT;
            }
            (yyval.lex_str)=(yyvsp[(3) - (3)].lex_str);
          }
    break;

  case 1930:
#line 12968 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(2) - (2)].lex_str);}
    break;

  case 1931:
#line 12973 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.table)= new Table_ident((yyvsp[(1) - (1)].lex_str));
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1932:
#line 12979 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.table)= new Table_ident(YYTHD, (yyvsp[(1) - (3)].lex_str),(yyvsp[(3) - (3)].lex_str),0);
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1933:
#line 12985 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            /* For Delphi */
            (yyval.table)= new Table_ident((yyvsp[(2) - (2)].lex_str));
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1934:
#line 12995 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.table)= new Table_ident((yyvsp[(1) - (2)].lex_str));
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1935:
#line 13001 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.table)= new Table_ident(YYTHD, (yyvsp[(1) - (4)].lex_str),(yyvsp[(3) - (4)].lex_str),0);
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1936:
#line 13010 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX_STRING db={(char*) any_db,3};
            (yyval.table)= new Table_ident(YYTHD, db,(yyvsp[(1) - (1)].lex_str),0);
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 1937:
#line 13019 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str); }
    break;

  case 1938:
#line 13021 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
            {
              const CHARSET_INFO *cs= system_charset_info;
              int dummy_error;
              uint wlen= cs->cset->well_formed_len(cs, (yyvsp[(1) - (1)].lex_str).str,
                                                   (yyvsp[(1) - (1)].lex_str).str+(yyvsp[(1) - (1)].lex_str).length,
                                                   (yyvsp[(1) - (1)].lex_str).length, &dummy_error);
              if (wlen < (yyvsp[(1) - (1)].lex_str).length)
              {
                ErrConvString err((yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, &my_charset_bin);
                my_error(ER_INVALID_CHARACTER_STRING, MYF(0),
                         cs->csname, err.ptr());
                MYSQL_YYABORT;
              }
              (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str);
            }
            else
            {
              if (thd->convert_string(&(yyval.lex_str), system_charset_info,
                                  (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
    break;

  case 1939:
#line 13051 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if (!strcont((yyvsp[(1) - (1)].lex_str).str, "\n"))
              (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str);
            else
            {
              my_error(ER_WRONG_VALUE, MYF(0), "argument contains not-allowed LF", (yyvsp[(1) - (1)].lex_str).str);
              MYSQL_YYABORT;
            }
          }
    break;

  case 1940:
#line 13064 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
              (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lex_str), system_charset_info,
                                  (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
    break;

  case 1941:
#line 13080 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;

            if (thd->charset_is_collation_connection)
              (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lex_str), thd->variables.collation_connection,
                                  (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            } 
          }
    break;

  case 1942:
#line 13096 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;

            if (thd->charset_is_character_set_filesystem)
              (yyval.lex_str)= (yyvsp[(1) - (1)].lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lex_str),
                                      thd->variables.character_set_filesystem,
                                      (yyvsp[(1) - (1)].lex_str).str, (yyvsp[(1) - (1)].lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
    break;

  case 1943:
#line 13112 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str); }
    break;

  case 1944:
#line 13114 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            (yyval.lex_str).str= thd->strmake((yyvsp[(1) - (1)].symbol).str, (yyvsp[(1) - (1)].symbol).length);
            if ((yyval.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lex_str).length= (yyvsp[(1) - (1)].symbol).length;
          }
    break;

  case 1945:
#line 13124 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str); }
    break;

  case 1946:
#line 13126 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            (yyval.lex_str).str= thd->strmake((yyvsp[(1) - (1)].symbol).str, (yyvsp[(1) - (1)].symbol).length);
            if ((yyval.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lex_str).length= (yyvsp[(1) - (1)].symbol).length;
          }
    break;

  case 1947:
#line 13136 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str);}
    break;

  case 1948:
#line 13137 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str);}
    break;

  case 1949:
#line 13138 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.lex_str)=(yyvsp[(1) - (1)].lex_str);}
    break;

  case 1950:
#line 13143 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            if (!((yyval.lex_user)=(LEX_USER*) thd->alloc(sizeof(st_lex_user))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user = (yyvsp[(1) - (1)].lex_str);
            (yyval.lex_user)->host.str= (char *) "%";
            (yyval.lex_user)->host.length= 1;
            (yyval.lex_user)->password= null_lex_str; 
            (yyval.lex_user)->plugin= empty_lex_str;
            (yyval.lex_user)->auth= empty_lex_str;

            if (check_string_char_length(&(yyval.lex_user)->user, ER(ER_USERNAME),
                                         USERNAME_CHAR_LENGTH,
                                         system_charset_info, 0))
              MYSQL_YYABORT;
          }
    break;

  case 1951:
#line 13160 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            if (!((yyval.lex_user)=(LEX_USER*) thd->alloc(sizeof(st_lex_user))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user = (yyvsp[(1) - (3)].lex_str); (yyval.lex_user)->host=(yyvsp[(3) - (3)].lex_str);
            (yyval.lex_user)->password= null_lex_str; 
            (yyval.lex_user)->plugin= empty_lex_str;
            (yyval.lex_user)->auth= empty_lex_str;

            if (check_string_char_length(&(yyval.lex_user)->user, ER(ER_USERNAME),
                                         USERNAME_CHAR_LENGTH,
                                         system_charset_info, 0) ||
                check_host_name(&(yyval.lex_user)->host))
              MYSQL_YYABORT;
            /*
              Convert hostname part of username to lowercase.
              It's OK to use in-place lowercase as long as
              the character set is utf8.
            */
            my_casedn_str(system_charset_info, (yyval.lex_user)->host.str);
          }
    break;

  case 1952:
#line 13182 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if (!((yyval.lex_user)=(LEX_USER*) YYTHD->alloc(sizeof(st_lex_user))))
              MYSQL_YYABORT;
            /* 
              empty LEX_USER means current_user and 
              will be handled in the  get_current_user() function
              later
            */
            memset((yyval.lex_user), 0, sizeof(LEX_USER));
          }
    break;

  case 1953:
#line 13196 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1954:
#line 13197 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1955:
#line 13198 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1956:
#line 13199 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1957:
#line 13200 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1958:
#line 13201 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1959:
#line 13202 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1960:
#line 13203 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1961:
#line 13204 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1962:
#line 13205 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1963:
#line 13206 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1964:
#line 13207 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1965:
#line 13208 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1966:
#line 13209 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1967:
#line 13210 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1968:
#line 13211 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1969:
#line 13212 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1970:
#line 13213 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1971:
#line 13214 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1972:
#line 13215 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1973:
#line 13216 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1974:
#line 13217 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1975:
#line 13218 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1976:
#line 13219 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1977:
#line 13220 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1978:
#line 13221 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1979:
#line 13222 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1980:
#line 13223 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1981:
#line 13224 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1982:
#line 13225 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1983:
#line 13226 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1984:
#line 13227 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1985:
#line 13228 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1986:
#line 13229 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1987:
#line 13230 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1988:
#line 13231 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1989:
#line 13232 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1990:
#line 13233 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1991:
#line 13234 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1992:
#line 13235 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1993:
#line 13236 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1994:
#line 13237 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1995:
#line 13238 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1996:
#line 13239 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1997:
#line 13240 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1998:
#line 13241 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 1999:
#line 13242 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2000:
#line 13243 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2001:
#line 13244 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2002:
#line 13245 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2003:
#line 13255 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2004:
#line 13256 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2005:
#line 13257 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2006:
#line 13258 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2007:
#line 13259 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2008:
#line 13260 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2009:
#line 13261 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2010:
#line 13262 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2011:
#line 13263 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2012:
#line 13264 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2013:
#line 13265 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2014:
#line 13266 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2015:
#line 13267 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2016:
#line 13268 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2017:
#line 13269 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2018:
#line 13270 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2019:
#line 13271 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2020:
#line 13272 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2021:
#line 13273 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2022:
#line 13274 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2023:
#line 13275 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2024:
#line 13276 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2025:
#line 13277 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2026:
#line 13278 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2027:
#line 13279 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2028:
#line 13280 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2029:
#line 13281 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2030:
#line 13282 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2031:
#line 13283 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2032:
#line 13284 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2033:
#line 13285 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2034:
#line 13286 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2035:
#line 13287 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2036:
#line 13288 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2037:
#line 13289 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2038:
#line 13290 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2039:
#line 13291 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2040:
#line 13292 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2041:
#line 13293 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2042:
#line 13294 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2043:
#line 13295 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2044:
#line 13296 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2045:
#line 13297 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2046:
#line 13298 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2047:
#line 13299 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2048:
#line 13304 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2049:
#line 13305 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2050:
#line 13306 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2051:
#line 13307 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2052:
#line 13308 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2053:
#line 13309 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2054:
#line 13310 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2055:
#line 13311 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2056:
#line 13312 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2057:
#line 13313 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2058:
#line 13314 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2059:
#line 13315 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2060:
#line 13316 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2061:
#line 13317 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2062:
#line 13318 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2063:
#line 13319 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2064:
#line 13320 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2065:
#line 13321 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2066:
#line 13322 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2067:
#line 13323 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2068:
#line 13324 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2069:
#line 13325 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2070:
#line 13326 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2071:
#line 13327 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2072:
#line 13328 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2073:
#line 13329 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2074:
#line 13330 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2075:
#line 13331 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2076:
#line 13332 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2077:
#line 13333 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2078:
#line 13334 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2079:
#line 13335 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2080:
#line 13336 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2081:
#line 13337 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2082:
#line 13338 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2083:
#line 13339 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2084:
#line 13340 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2085:
#line 13341 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2086:
#line 13342 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2087:
#line 13343 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2088:
#line 13344 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2089:
#line 13345 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2090:
#line 13346 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2091:
#line 13347 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2092:
#line 13348 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2093:
#line 13349 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2094:
#line 13350 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2095:
#line 13351 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2096:
#line 13352 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2097:
#line 13353 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2098:
#line 13354 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2099:
#line 13355 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2100:
#line 13356 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2101:
#line 13357 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2102:
#line 13358 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2103:
#line 13359 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2104:
#line 13360 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2105:
#line 13361 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2106:
#line 13362 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2107:
#line 13363 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2108:
#line 13364 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2109:
#line 13365 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2110:
#line 13366 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2111:
#line 13367 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2112:
#line 13368 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2113:
#line 13369 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2114:
#line 13370 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2115:
#line 13371 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2116:
#line 13372 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2117:
#line 13373 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2118:
#line 13374 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2119:
#line 13375 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2120:
#line 13376 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2121:
#line 13377 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2122:
#line 13378 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2123:
#line 13379 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2124:
#line 13380 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2125:
#line 13381 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2126:
#line 13382 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2127:
#line 13383 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2128:
#line 13384 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2129:
#line 13385 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2130:
#line 13386 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2131:
#line 13387 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2132:
#line 13388 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2133:
#line 13389 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2134:
#line 13390 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2135:
#line 13391 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2136:
#line 13392 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2137:
#line 13393 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2138:
#line 13394 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2139:
#line 13395 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2140:
#line 13396 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2141:
#line 13397 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2142:
#line 13398 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2143:
#line 13399 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2144:
#line 13400 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2145:
#line 13401 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2146:
#line 13402 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2147:
#line 13403 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2148:
#line 13404 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2149:
#line 13405 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2150:
#line 13406 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2151:
#line 13407 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2152:
#line 13408 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2153:
#line 13409 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2154:
#line 13410 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2155:
#line 13411 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2156:
#line 13412 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2157:
#line 13413 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2158:
#line 13414 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2159:
#line 13415 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2160:
#line 13416 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2161:
#line 13417 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2162:
#line 13418 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2163:
#line 13419 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2164:
#line 13420 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2165:
#line 13421 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2166:
#line 13422 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2167:
#line 13423 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2168:
#line 13424 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2169:
#line 13425 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2170:
#line 13426 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2171:
#line 13427 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2172:
#line 13428 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2173:
#line 13429 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2174:
#line 13430 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2175:
#line 13431 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2176:
#line 13432 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2177:
#line 13433 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2178:
#line 13434 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2179:
#line 13435 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2180:
#line 13436 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2181:
#line 13437 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2182:
#line 13438 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2183:
#line 13439 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2184:
#line 13440 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2185:
#line 13441 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2186:
#line 13442 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2187:
#line 13443 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2188:
#line 13444 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2189:
#line 13445 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2190:
#line 13446 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2191:
#line 13447 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2192:
#line 13448 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2193:
#line 13449 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2194:
#line 13450 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2195:
#line 13451 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2196:
#line 13452 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2197:
#line 13453 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2198:
#line 13454 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2199:
#line 13455 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2200:
#line 13456 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2201:
#line 13457 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2202:
#line 13458 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2203:
#line 13459 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2204:
#line 13460 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2205:
#line 13461 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2206:
#line 13462 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2207:
#line 13463 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2208:
#line 13464 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2209:
#line 13465 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2210:
#line 13466 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2211:
#line 13467 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2212:
#line 13468 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2213:
#line 13469 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2214:
#line 13470 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2215:
#line 13471 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2216:
#line 13472 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2217:
#line 13473 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2218:
#line 13474 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2219:
#line 13475 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2220:
#line 13476 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2221:
#line 13477 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2222:
#line 13478 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2223:
#line 13479 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2224:
#line 13480 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2225:
#line 13481 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2226:
#line 13482 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2227:
#line 13483 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2228:
#line 13484 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2229:
#line 13485 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2230:
#line 13486 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2231:
#line 13487 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2232:
#line 13488 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2233:
#line 13489 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2234:
#line 13490 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2235:
#line 13491 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2236:
#line 13492 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2237:
#line 13493 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2238:
#line 13494 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2239:
#line 13495 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2240:
#line 13496 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2241:
#line 13497 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2242:
#line 13498 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2243:
#line 13499 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2244:
#line 13500 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2245:
#line 13501 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2246:
#line 13502 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2247:
#line 13503 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2248:
#line 13504 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2249:
#line 13505 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2250:
#line 13506 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2251:
#line 13507 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2252:
#line 13508 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2253:
#line 13509 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2254:
#line 13510 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2255:
#line 13511 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2256:
#line 13512 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2257:
#line 13513 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2258:
#line 13514 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2259:
#line 13515 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2260:
#line 13516 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2261:
#line 13517 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2262:
#line 13518 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2263:
#line 13519 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2264:
#line 13520 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2265:
#line 13521 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2266:
#line 13522 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2267:
#line 13523 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2268:
#line 13524 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2269:
#line 13525 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2270:
#line 13526 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2271:
#line 13527 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2272:
#line 13528 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2273:
#line 13529 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2274:
#line 13530 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2275:
#line 13531 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2276:
#line 13532 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2277:
#line 13533 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2278:
#line 13534 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2279:
#line 13535 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2280:
#line 13536 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2281:
#line 13537 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2282:
#line 13538 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2283:
#line 13539 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2284:
#line 13540 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2285:
#line 13541 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2286:
#line 13542 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2287:
#line 13543 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2288:
#line 13544 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2289:
#line 13545 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2290:
#line 13546 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2291:
#line 13547 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2292:
#line 13548 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2293:
#line 13549 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2294:
#line 13550 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2295:
#line 13551 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2296:
#line 13563 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SET_OPTION;
            mysql_init_select(lex);
            lex->option_type=OPT_SESSION;
            lex->var_list.empty();
            lex->one_shot_set= 0;
            lex->autocommit= 0;
            sp_create_assignment_lex(YYTHD, yychar == YYEMPTY);
          }
    break;

  case 2297:
#line 13574 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2298:
#line 13581 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if (sp_create_assignment_instr(YYTHD, yychar == YYEMPTY))
              MYSQL_YYABORT;
          }
    break;

  case 2300:
#line 13587 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->option_type= OPT_DEFAULT;
          }
    break;

  case 2301:
#line 13591 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if (sp_create_assignment_instr(YYTHD, yychar == YYEMPTY))
              MYSQL_YYABORT;
          }
    break;

  case 2302:
#line 13596 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->option_type= (yyvsp[(1) - (1)].var_type);
          }
    break;

  case 2304:
#line 13606 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if (sp_create_assignment_instr(YYTHD, yychar == YYEMPTY))
              MYSQL_YYABORT; 
          }
    break;

  case 2306:
#line 13612 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if (sp_create_assignment_instr(YYTHD, yychar == YYEMPTY))
              MYSQL_YYABORT; 
          }
    break;

  case 2309:
#line 13626 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            sp_create_assignment_lex(YYTHD, yychar == YYEMPTY);
          }
    break;

  case 2310:
#line 13630 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if (sp_create_assignment_instr(YYTHD, yychar == YYEMPTY))
              MYSQL_YYABORT; 
          }
    break;

  case 2311:
#line 13635 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            sp_create_assignment_lex(YYTHD, yychar == YYEMPTY);
          }
    break;

  case 2312:
#line 13639 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if (sp_create_assignment_instr(YYTHD, yychar == YYEMPTY))
              MYSQL_YYABORT; 
          }
    break;

  case 2313:
#line 13648 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->option_type= (yyvsp[(1) - (1)].var_type);
          }
    break;

  case 2316:
#line 13656 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_GLOBAL; }
    break;

  case 2317:
#line 13657 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2318:
#line 13658 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2319:
#line 13662 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2320:
#line 13663 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_GLOBAL; }
    break;

  case 2321:
#line 13664 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2322:
#line 13665 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2323:
#line 13669 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_DEFAULT; }
    break;

  case 2324:
#line 13670 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_GLOBAL; }
    break;

  case 2325:
#line 13671 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2326:
#line 13672 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.var_type)=OPT_SESSION; }
    break;

  case 2327:
#line 13678 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;

            if ((yyvsp[(1) - (3)].variable).var && (yyvsp[(1) - (3)].variable).var != trg_new_row_fake_var)
            {
              /* It is a system variable. */
              if (set_system_variable(thd, &(yyvsp[(1) - (3)].variable), lex->option_type, (yyvsp[(3) - (3)].item)))
                MYSQL_YYABORT;
            }
            else
            {
              /*
                Not in trigger assigning value to new row,
                and option_type preceeding local variable is illegal.
              */
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
          }
    break;

  case 2328:
#line 13703 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            LEX_STRING *name= &(yyvsp[(1) - (3)].variable).base_name;

            if ((yyvsp[(1) - (3)].variable).var == trg_new_row_fake_var)
            {
              /* We are in trigger and assigning value to field of new row */
              if (set_trigger_new_row(YYTHD, name, (yyvsp[(3) - (3)].item)))
                MYSQL_YYABORT;
            }
            else if ((yyvsp[(1) - (3)].variable).var)
            {
              /* It is a system variable. */
              if (set_system_variable(thd, &(yyvsp[(1) - (3)].variable), lex->option_type, (yyvsp[(3) - (3)].item)))
                MYSQL_YYABORT;
            }
            else
            {
              sp_pcontext *spc= lex->spcont;
              sp_variable *spv= spc->find_variable(*name, false);

              /* It is a local variable. */
              if (set_local_variable(thd, spv, (yyvsp[(3) - (3)].item)))
                MYSQL_YYABORT;
            }
          }
    break;

  case 2329:
#line 13731 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Item_func_set_user_var *item;
            item= new (YYTHD->mem_root) Item_func_set_user_var((yyvsp[(2) - (4)].lex_str), (yyvsp[(4) - (4)].item));
            if (item == NULL)
              MYSQL_YYABORT;
            set_var_user *var= new set_var_user(item);
            if (var == NULL)
              MYSQL_YYABORT;
            Lex->var_list.push_back(var);
          }
    break;

  case 2330:
#line 13742 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            struct sys_var_with_base tmp= (yyvsp[(4) - (6)].variable);
            /* Lookup if necessary: must be a system variable. */
            if (tmp.var == NULL)
            {
              if (find_sys_var_null_base(thd, &tmp))
                MYSQL_YYABORT;
            }
            if (set_system_variable(thd, &tmp, (yyvsp[(3) - (6)].var_type), (yyvsp[(6) - (6)].item)))
              MYSQL_YYABORT;
          }
    break;

  case 2331:
#line 13755 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            int flags= (yyvsp[(2) - (2)].charset) ? 0 : set_var_collation_client::SET_CS_DEFAULT;
            const CHARSET_INFO *cs2;
            cs2= (yyvsp[(2) - (2)].charset) ? (yyvsp[(2) - (2)].charset): global_system_variables.character_set_client;
            set_var_collation_client *var;
            var= new set_var_collation_client(flags,
                                              cs2,
                                              thd->variables.collation_database,
                                              cs2);
            if (var == NULL)
              MYSQL_YYABORT;
            lex->var_list.push_back(var);
          }
    break;

  case 2332:
#line 13771 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_pcontext *spc= lex->spcont;
            LEX_STRING names;

            names.str= (char *)"names";
            names.length= 5;
            if (spc && spc->find_variable(names, false))
              my_error(ER_SP_BAD_VAR_SHADOW, MYF(0), names.str);
            else
              my_parse_error(ER(ER_SYNTAX_ERROR));

            MYSQL_YYABORT;
          }
    break;

  case 2333:
#line 13786 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            const CHARSET_INFO *cs2;
            const CHARSET_INFO *cs3;
            int flags= set_var_collation_client::SET_CS_NAMES
                       | ((yyvsp[(2) - (3)].charset) ? 0 : set_var_collation_client::SET_CS_DEFAULT)
                       | ((yyvsp[(3) - (3)].charset) ? set_var_collation_client::SET_CS_COLLATE : 0);
            cs2= (yyvsp[(2) - (3)].charset) ? (yyvsp[(2) - (3)].charset) : global_system_variables.character_set_client;
            cs3= (yyvsp[(3) - (3)].charset) ? (yyvsp[(3) - (3)].charset) : cs2;
            if (!my_charset_same(cs2, cs3))
            {
              my_error(ER_COLLATION_CHARSET_MISMATCH, MYF(0),
                       cs3->name, cs2->csname);
              MYSQL_YYABORT;
            }
            set_var_collation_client *var;
            var= new set_var_collation_client(flags, cs3, cs3, cs3);
            if (var == NULL)
              MYSQL_YYABORT;
            lex->var_list.push_back(var);
          }
    break;

  case 2334:
#line 13808 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            LEX_USER *user;
            sp_pcontext *spc= lex->spcont;
            LEX_STRING pw;

            pw.str= (char *)"password";
            pw.length= 8;
            if (spc && spc->find_variable(pw, false))
            {
              my_error(ER_SP_BAD_VAR_SHADOW, MYF(0), pw.str);
              MYSQL_YYABORT;
            }
            if (!(user=(LEX_USER*) thd->alloc(sizeof(LEX_USER))))
              MYSQL_YYABORT;
            user->host=null_lex_str;
            user->user.str=thd->security_ctx->user;
            user->user.length= strlen(thd->security_ctx->user);
            set_var_password *var= new set_var_password(user, (yyvsp[(3) - (3)].simple_string));
            if (var == NULL)
              MYSQL_YYABORT;
            thd->lex->var_list.push_back(var);
            thd->lex->autocommit= TRUE;
            if (lex->sphead)
              lex->sphead->m_flags|= sp_head::HAS_SET_AUTOCOMMIT_STMT;
          }
    break;

  case 2335:
#line 13836 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            set_var_password *var= new set_var_password((yyvsp[(3) - (5)].lex_user),(yyvsp[(5) - (5)].simple_string));
            if (var == NULL)
              MYSQL_YYABORT;
            Lex->var_list.push_back(var);
            Lex->autocommit= TRUE;
            if (Lex->sphead)
              Lex->sphead->m_flags|= sp_head::HAS_SET_AUTOCOMMIT_STMT;
          }
    break;

  case 2336:
#line 13849 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            sp_pcontext *spc= thd->lex->spcont;
            sp_variable *spv;

            /* Best effort lookup for system variable. */
            if (!spc || !(spv = spc->find_variable((yyvsp[(1) - (1)].lex_str), false)))
            {
              struct sys_var_with_base tmp= {NULL, (yyvsp[(1) - (1)].lex_str)};

              /* Not an SP local variable */
              if (find_sys_var_null_base(thd, &tmp))
                MYSQL_YYABORT;

              (yyval.variable)= tmp;
            }
            else
            {
              /*
                Possibly an SP local variable (or a shadowed sysvar).
                Will depend on the context of the SET statement.
              */
              (yyval.variable).var= NULL;
              (yyval.variable).base_name= (yyvsp[(1) - (1)].lex_str);
            }
          }
    break;

  case 2337:
#line 13876 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (check_reserved_words(&(yyvsp[(1) - (3)].lex_str)))
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            if (lex->sphead && lex->sphead->m_type == TYPE_ENUM_TRIGGER &&
                (!my_strcasecmp(system_charset_info, (yyvsp[(1) - (3)].lex_str).str, "NEW") || 
                 !my_strcasecmp(system_charset_info, (yyvsp[(1) - (3)].lex_str).str, "OLD")))
            {
              if ((yyvsp[(1) - (3)].lex_str).str[0]=='O' || (yyvsp[(1) - (3)].lex_str).str[0]=='o')
              {
                my_error(ER_TRG_CANT_CHANGE_ROW, MYF(0), "OLD", "");
                MYSQL_YYABORT;
              }
              if (lex->trg_chistics.event == TRG_EVENT_DELETE)
              {
                my_error(ER_TRG_NO_SUCH_ROW_IN_TRG, MYF(0),
                         "NEW", "on DELETE");
                MYSQL_YYABORT;
              }
              if (lex->trg_chistics.action_time == TRG_ACTION_AFTER)
              {
                my_error(ER_TRG_CANT_CHANGE_ROW, MYF(0), "NEW", "after ");
                MYSQL_YYABORT;
              }
              /* This special combination will denote field of NEW row */
              (yyval.variable).var= trg_new_row_fake_var;
              (yyval.variable).base_name= (yyvsp[(3) - (3)].lex_str);
            }
            else
            {
              sys_var *tmp=find_sys_var(YYTHD, (yyvsp[(3) - (3)].lex_str).str, (yyvsp[(3) - (3)].lex_str).length);
              if (!tmp)
                MYSQL_YYABORT;
              if (!tmp->is_struct())
                my_error(ER_VARIABLE_IS_NOT_STRUCT, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
              (yyval.variable).var= tmp;
              (yyval.variable).base_name= (yyvsp[(1) - (3)].lex_str);
            }
          }
    break;

  case 2338:
#line 13919 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            sys_var *tmp=find_sys_var(YYTHD, (yyvsp[(3) - (3)].lex_str).str, (yyvsp[(3) - (3)].lex_str).length);
            if (!tmp)
              MYSQL_YYABORT;
            if (!tmp->is_struct())
              my_error(ER_VARIABLE_IS_NOT_STRUCT, MYF(0), (yyvsp[(3) - (3)].lex_str).str);
            (yyval.variable).var= tmp;
            (yyval.variable).base_name.str=    (char*) "default";
            (yyval.variable).base_name.length= 7;
          }
    break;

  case 2343:
#line 13940 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex=Lex;
            Item *item= new (thd->mem_root) Item_int((int32) (yyvsp[(1) - (1)].num));
            if (item == NULL)
              MYSQL_YYABORT;
            set_var *var= new set_var(lex->option_type,
                                      find_sys_var(thd, "tx_read_only"),
                                      &null_lex_str,
                                      item);
            if (var == NULL)
              MYSQL_YYABORT;
            lex->var_list.push_back(var);
          }
    break;

  case 2344:
#line 13958 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex=Lex;
            Item *item= new (thd->mem_root) Item_int((int32) (yyvsp[(3) - (3)].tx_isolation));
            if (item == NULL)
              MYSQL_YYABORT;
            set_var *var= new set_var(lex->option_type,
                                      find_sys_var(thd, "tx_isolation"),
                                      &null_lex_str,
                                      item);
            if (var == NULL)
              MYSQL_YYABORT;
            lex->var_list.push_back(var);
          }
    break;

  case 2345:
#line 13975 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)= true; }
    break;

  case 2346:
#line 13976 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)= false; }
    break;

  case 2347:
#line 13980 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.tx_isolation)= ISO_READ_UNCOMMITTED; }
    break;

  case 2348:
#line 13981 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.tx_isolation)= ISO_READ_COMMITTED; }
    break;

  case 2349:
#line 13982 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.tx_isolation)= ISO_REPEATABLE_READ; }
    break;

  case 2350:
#line 13983 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.tx_isolation)= ISO_SERIALIZABLE; }
    break;

  case 2351:
#line 13987 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.simple_string)=(yyvsp[(1) - (1)].lex_str).str;}
    break;

  case 2352:
#line 13989 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.simple_string)= (yyvsp[(3) - (4)].lex_str).length ? YYTHD->variables.old_passwords ?
              Item_func_old_password::alloc(YYTHD, (yyvsp[(3) - (4)].lex_str).str, (yyvsp[(3) - (4)].lex_str).length) :
              Item_func_password::alloc(YYTHD, (yyvsp[(3) - (4)].lex_str).str, (yyvsp[(3) - (4)].lex_str).length) :
              (yyvsp[(3) - (4)].lex_str).str;
            if ((yyval.simple_string) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2353:
#line 13998 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.simple_string)= (yyvsp[(3) - (4)].lex_str).length ? Item_func_old_password::alloc(YYTHD, (yyvsp[(3) - (4)].lex_str).str,
                                                          (yyvsp[(3) - (4)].lex_str).length) :
              (yyvsp[(3) - (4)].lex_str).str;
            if ((yyval.simple_string) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2354:
#line 14009 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.item)=(yyvsp[(1) - (1)].item); }
    break;

  case 2355:
#line 14010 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.item)=0; }
    break;

  case 2356:
#line 14012 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)=new (YYTHD->mem_root) Item_string("ON",  2, system_charset_info);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2357:
#line 14018 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)=new (YYTHD->mem_root) Item_string("ALL", 3, system_charset_info);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2358:
#line 14024 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.item)=new (YYTHD->mem_root) Item_string("binary", 6, system_charset_info);
            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2359:
#line 14035 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "LOCK");
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_LOCK_TABLES;
          }
    break;

  case 2360:
#line 14046 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2365:
#line 14061 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            thr_lock_type lock_type= (thr_lock_type) (yyvsp[(3) - (3)].num);
            bool lock_for_write= (lock_type >= TL_WRITE_ALLOW_WRITE);
            if (!Select->add_table_to_list(YYTHD, (yyvsp[(1) - (3)].table), (yyvsp[(2) - (3)].lex_str_ptr), 0, lock_type,
                                           (lock_for_write ?
                                            MDL_SHARED_NO_READ_WRITE :
                                            MDL_SHARED_READ)))
              MYSQL_YYABORT;
          }
    break;

  case 2366:
#line 14073 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)= TL_READ_NO_INSERT; }
    break;

  case 2367:
#line 14074 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)= TL_WRITE_DEFAULT; }
    break;

  case 2368:
#line 14076 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { 
            (yyval.num)= TL_WRITE_LOW_PRIORITY; 
            WARN_DEPRECATED(YYTHD, "LOW_PRIORITY WRITE", "WRITE");
          }
    break;

  case 2369:
#line 14080 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)= TL_READ; }
    break;

  case 2370:
#line 14085 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "UNLOCK");
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_UNLOCK_TABLES;
          }
    break;

  case 2371:
#line 14096 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2372:
#line 14105 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HANDLER");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_HA_OPEN;
            if (!lex->current_select->add_table_to_list(thd, (yyvsp[(2) - (4)].table), (yyvsp[(4) - (4)].lex_str_ptr), 0))
              MYSQL_YYABORT;
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_handler_open();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2373:
#line 14121 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HANDLER");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_HA_CLOSE;
            if (!lex->current_select->add_table_to_list(thd, (yyvsp[(2) - (3)].table), 0, 0))
              MYSQL_YYABORT;
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_handler_close();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2374:
#line 14137 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HANDLER");
              MYSQL_YYABORT;
            }
            lex->expr_allows_subselect= FALSE;
            lex->sql_command = SQLCOM_HA_READ;
            Item *one= new (YYTHD->mem_root) Item_int((int32) 1);
            if (one == NULL)
              MYSQL_YYABORT;
            lex->current_select->select_limit= one;
            lex->current_select->offset_limit= 0;
            if (!lex->current_select->add_table_to_list(lex->thd, (yyvsp[(2) - (3)].table), 0, 0))
              MYSQL_YYABORT;
          }
    break;

  case 2375:
#line 14155 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            Lex->expr_allows_subselect= TRUE;
            /* Stored functions are not supported for HANDLER READ. */
            if (lex->uses_stored_routines())
            {
              my_error(ER_NOT_SUPPORTED_YET, MYF(0),
                       "stored functions in HANDLER ... READ");
              MYSQL_YYABORT;
            }
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_handler_read((yyvsp[(5) - (7)].ha_read_mode),
                                  lex->ident.str, lex->insert_list,
                                  thd->m_parser_state->m_yacc.m_ha_rkey_mode);
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
    break;

  case 2376:
#line 14175 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->ident= null_lex_str; (yyval.ha_read_mode)=(yyvsp[(1) - (1)].ha_read_mode); }
    break;

  case 2377:
#line 14176 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->ident= (yyvsp[(1) - (2)].lex_str); (yyval.ha_read_mode)=(yyvsp[(2) - (2)].ha_read_mode); }
    break;

  case 2378:
#line 14180 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.ha_read_mode)= RFIRST; }
    break;

  case 2379:
#line 14181 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.ha_read_mode)= RNEXT;  }
    break;

  case 2380:
#line 14185 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.ha_read_mode)= RFIRST; }
    break;

  case 2381:
#line 14186 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.ha_read_mode)= RNEXT;  }
    break;

  case 2382:
#line 14187 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.ha_read_mode)= RPREV;  }
    break;

  case 2383:
#line 14188 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.ha_read_mode)= RLAST;  }
    break;

  case 2384:
#line 14190 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            YYTHD->m_parser_state->m_yacc.m_ha_rkey_mode= (yyvsp[(1) - (1)].ha_rkey_mode);
            Lex->insert_list= new List_item;
            if (! Lex->insert_list)
              MYSQL_YYABORT;
          }
    break;

  case 2385:
#line 14197 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.ha_read_mode)= RKEY;
          }
    break;

  case 2386:
#line 14203 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_KEY_EXACT;   }
    break;

  case 2387:
#line 14204 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_NEXT; }
    break;

  case 2388:
#line 14205 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_PREV; }
    break;

  case 2389:
#line 14206 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_AFTER_KEY;   }
    break;

  case 2390:
#line 14207 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.ha_rkey_mode)=HA_READ_BEFORE_KEY;  }
    break;

  case 2391:
#line 14214 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2392:
#line 14219 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_REVOKE;
            lex->type= 0;
          }
    break;

  case 2393:
#line 14225 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->columns.elements)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_REVOKE;
            lex->type= TYPE_ENUM_FUNCTION;
          }
    break;

  case 2394:
#line 14236 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->columns.elements)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_REVOKE;
            lex->type= TYPE_ENUM_PROCEDURE;
          }
    break;

  case 2395:
#line 14247 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_REVOKE_ALL;
          }
    break;

  case 2396:
#line 14251 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->users_list.push_front ((yyvsp[(3) - (5)].lex_user));
            lex->sql_command= SQLCOM_REVOKE;
            lex->type= TYPE_ENUM_PROXY;
          }
    break;

  case 2397:
#line 14261 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2398:
#line 14267 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT;
            lex->type= 0;
          }
    break;

  case 2399:
#line 14274 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->columns.elements)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_GRANT;
            lex->type= TYPE_ENUM_FUNCTION;
          }
    break;

  case 2400:
#line 14286 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            if (lex->columns.elements)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_GRANT;
            lex->type= TYPE_ENUM_PROCEDURE;
          }
    break;

  case 2401:
#line 14297 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->users_list.push_front ((yyvsp[(3) - (6)].lex_user));
            lex->sql_command= SQLCOM_GRANT;
            lex->type= TYPE_ENUM_PROXY;
          }
    break;

  case 2404:
#line 14311 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2405:
#line 14313 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { 
            Lex->all_privileges= 1; 
            Lex->grant= GLOBAL_ACLS;
          }
    break;

  case 2410:
#line 14331 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->which_columns = SELECT_ACL;}
    break;

  case 2411:
#line 14332 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2412:
#line 14334 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->which_columns = INSERT_ACL;}
    break;

  case 2413:
#line 14335 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2414:
#line 14337 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->which_columns = UPDATE_ACL; }
    break;

  case 2415:
#line 14338 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2416:
#line 14340 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->which_columns = REFERENCES_ACL;}
    break;

  case 2417:
#line 14341 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2418:
#line 14342 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->grant |= DELETE_ACL;}
    break;

  case 2419:
#line 14343 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2420:
#line 14344 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->grant |= INDEX_ACL;}
    break;

  case 2421:
#line 14345 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->grant |= ALTER_ACL;}
    break;

  case 2422:
#line 14346 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->grant |= CREATE_ACL;}
    break;

  case 2423:
#line 14347 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->grant |= DROP_ACL;}
    break;

  case 2424:
#line 14348 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->grant |= EXECUTE_ACL;}
    break;

  case 2425:
#line 14349 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->grant |= RELOAD_ACL;}
    break;

  case 2426:
#line 14350 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->grant |= SHUTDOWN_ACL;}
    break;

  case 2427:
#line 14351 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->grant |= PROCESS_ACL;}
    break;

  case 2428:
#line 14352 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->grant |= FILE_ACL;}
    break;

  case 2429:
#line 14353 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->grant |= GRANT_ACL;}
    break;

  case 2430:
#line 14354 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->grant |= SHOW_DB_ACL;}
    break;

  case 2431:
#line 14355 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->grant |= SUPER_ACL;}
    break;

  case 2432:
#line 14356 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->grant |= CREATE_TMP_ACL;}
    break;

  case 2433:
#line 14357 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->grant |= LOCK_TABLES_ACL; }
    break;

  case 2434:
#line 14358 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->grant |= REPL_SLAVE_ACL; }
    break;

  case 2435:
#line 14359 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->grant |= REPL_CLIENT_ACL; }
    break;

  case 2436:
#line 14360 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->grant |= CREATE_VIEW_ACL; }
    break;

  case 2437:
#line 14361 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->grant |= SHOW_VIEW_ACL; }
    break;

  case 2438:
#line 14362 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->grant |= CREATE_PROC_ACL; }
    break;

  case 2439:
#line 14363 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->grant |= ALTER_PROC_ACL; }
    break;

  case 2440:
#line 14364 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->grant |= CREATE_USER_ACL; }
    break;

  case 2441:
#line 14365 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->grant |= EVENT_ACL;}
    break;

  case 2442:
#line 14366 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->grant |= TRIGGER_ACL; }
    break;

  case 2443:
#line 14367 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->grant |= CREATE_TABLESPACE_ACL; }
    break;

  case 2444:
#line 14371 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2445:
#line 14372 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2448:
#line 14382 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->x509_subject)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "SUBJECT");
              MYSQL_YYABORT;
            }
            lex->x509_subject=(yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 2449:
#line 14392 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->x509_issuer)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "ISSUER");
              MYSQL_YYABORT;
            }
            lex->x509_issuer=(yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 2450:
#line 14402 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (lex->ssl_cipher)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "CIPHER");
              MYSQL_YYABORT;
            }
            lex->ssl_cipher=(yyvsp[(2) - (2)].lex_str).str;
          }
    break;

  case 2451:
#line 14415 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            size_t dummy;
            if (lex->copy_db_to(&lex->current_select->db, &dummy))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_ACLS & ~GRANT_ACL;
            else if (lex->columns.elements)
            {
              my_message(ER_ILLEGAL_GRANT_FOR_TABLE,
                         ER(ER_ILLEGAL_GRANT_FOR_TABLE), MYF(0));
              MYSQL_YYABORT;
            }
          }
    break;

  case 2452:
#line 14430 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->current_select->db = (yyvsp[(1) - (3)].lex_str).str;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_ACLS & ~GRANT_ACL;
            else if (lex->columns.elements)
            {
              my_message(ER_ILLEGAL_GRANT_FOR_TABLE,
                         ER(ER_ILLEGAL_GRANT_FOR_TABLE), MYF(0));
              MYSQL_YYABORT;
            }
          }
    break;

  case 2453:
#line 14443 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->current_select->db = NULL;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant= GLOBAL_ACLS & ~GRANT_ACL;
            else if (lex->columns.elements)
            {
              my_message(ER_ILLEGAL_GRANT_FOR_TABLE,
                         ER(ER_ILLEGAL_GRANT_FOR_TABLE), MYF(0));
              MYSQL_YYABORT;
            }
          }
    break;

  case 2454:
#line 14456 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (!lex->current_select->add_table_to_list(lex->thd, (yyvsp[(1) - (1)].table),NULL,
                                                        TL_OPTION_UPDATING))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant =  TABLE_ACLS & ~GRANT_ACL;
          }
    break;

  case 2455:
#line 14468 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(1) - (1)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 2456:
#line 14473 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(3) - (3)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 2457:
#line 14481 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(1) - (1)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 2458:
#line 14486 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if (Lex->users_list.push_back((yyvsp[(3) - (3)].lex_user)))
              MYSQL_YYABORT;
          }
    break;

  case 2459:
#line 14494 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.lex_user)=(yyvsp[(1) - (4)].lex_user); (yyvsp[(1) - (4)].lex_user)->password=(yyvsp[(4) - (4)].lex_str);
            if (Lex->sql_command == SQLCOM_REVOKE)
              MYSQL_YYABORT;
            if ((yyvsp[(4) - (4)].lex_str).length)
            {
              if (YYTHD->variables.old_passwords)
              {
                char *buff= 
                  (char *) YYTHD->alloc(SCRAMBLED_PASSWORD_CHAR_LENGTH_323+1);
                if (buff == NULL)
                  MYSQL_YYABORT;
                my_make_scrambled_password_323(buff, (yyvsp[(4) - (4)].lex_str).str, (yyvsp[(4) - (4)].lex_str).length);
                (yyvsp[(1) - (4)].lex_user)->password.str= buff;
                (yyvsp[(1) - (4)].lex_user)->password.length= SCRAMBLED_PASSWORD_CHAR_LENGTH_323;
              }
              else
              {
                char *buff= 
                  (char *) YYTHD->alloc(SCRAMBLED_PASSWORD_CHAR_LENGTH+1);
                if (buff == NULL)
                  MYSQL_YYABORT;
                my_make_scrambled_password(buff, (yyvsp[(4) - (4)].lex_str).str, (yyvsp[(4) - (4)].lex_str).length);
                (yyvsp[(1) - (4)].lex_user)->password.str= buff;
                (yyvsp[(1) - (4)].lex_user)->password.length= SCRAMBLED_PASSWORD_CHAR_LENGTH;
              }
            }
          }
    break;

  case 2460:
#line 14523 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { 
            if (Lex->sql_command == SQLCOM_REVOKE)
              MYSQL_YYABORT;
            (yyval.lex_user)= (yyvsp[(1) - (5)].lex_user); 
            (yyvsp[(1) - (5)].lex_user)->password= (yyvsp[(5) - (5)].lex_str); 
          }
    break;

  case 2461:
#line 14530 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if (Lex->sql_command == SQLCOM_REVOKE)
              MYSQL_YYABORT;
            (yyval.lex_user)= (yyvsp[(1) - (4)].lex_user);
            (yyvsp[(1) - (4)].lex_user)->plugin= (yyvsp[(4) - (4)].lex_str);
            (yyvsp[(1) - (4)].lex_user)->auth= empty_lex_str;
          }
    break;

  case 2462:
#line 14538 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if (Lex->sql_command == SQLCOM_REVOKE)
              MYSQL_YYABORT;
            (yyval.lex_user)= (yyvsp[(1) - (6)].lex_user);
            (yyvsp[(1) - (6)].lex_user)->plugin= (yyvsp[(4) - (6)].lex_str);
            (yyvsp[(1) - (6)].lex_user)->auth= (yyvsp[(6) - (6)].lex_str);
          }
    break;

  case 2463:
#line 14546 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.lex_user)= (yyvsp[(1) - (1)].lex_user); (yyvsp[(1) - (1)].lex_user)->password= null_lex_str; }
    break;

  case 2464:
#line 14551 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->grant |= lex->which_columns;
          }
    break;

  case 2468:
#line 14565 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            String *new_str = new (YYTHD->mem_root) String((const char*) (yyvsp[(1) - (1)].lex_str).str,(yyvsp[(1) - (1)].lex_str).length,system_charset_info);
            if (new_str == NULL)
              MYSQL_YYABORT;
            List_iterator <LEX_COLUMN> iter(Lex->columns);
            class LEX_COLUMN *point;
            LEX *lex=Lex;
            while ((point=iter++))
            {
              if (!my_strcasecmp(system_charset_info,
                                 point->column.ptr(), new_str->ptr()))
                break;
            }
            lex->grant_tot_col|= lex->which_columns;
            if (point)
              point->rights |= lex->which_columns;
            else
            {
              LEX_COLUMN *col= new LEX_COLUMN (*new_str,lex->which_columns);
              if (col == NULL)
                MYSQL_YYABORT;
              lex->columns.push_back(col);
            }
          }
    break;

  case 2470:
#line 14594 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->ssl_type=SSL_TYPE_SPECIFIED;
          }
    break;

  case 2471:
#line 14598 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->ssl_type=SSL_TYPE_ANY;
          }
    break;

  case 2472:
#line 14602 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->ssl_type=SSL_TYPE_X509;
          }
    break;

  case 2473:
#line 14606 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->ssl_type=SSL_TYPE_NONE;
          }
    break;

  case 2474:
#line 14612 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2476:
#line 14617 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2477:
#line 14618 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->grant |= GRANT_ACL;}
    break;

  case 2478:
#line 14622 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2479:
#line 14623 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2480:
#line 14627 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->grant |= GRANT_ACL;}
    break;

  case 2481:
#line 14629 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.questions=(yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::QUERIES_PER_HOUR;
          }
    break;

  case 2482:
#line 14635 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.updates=(yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::UPDATES_PER_HOUR;
          }
    break;

  case 2483:
#line 14641 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.conn_per_hour= (yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::CONNECTIONS_PER_HOUR;
          }
    break;

  case 2484:
#line 14647 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->mqh.user_conn= (yyvsp[(2) - (2)].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::USER_CONNECTIONS;
          }
    break;

  case 2485:
#line 14656 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_BEGIN;
            lex->start_transaction_opt= 0;
          }
    break;

  case 2486:
#line 14661 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2487:
#line 14665 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2488:
#line 14666 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2489:
#line 14671 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
    break;

  case 2490:
#line 14672 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_NO; }
    break;

  case 2491:
#line 14673 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_YES; }
    break;

  case 2492:
#line 14678 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
    break;

  case 2493:
#line 14679 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_YES; }
    break;

  case 2494:
#line 14680 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.m_yes_no_unk)= TVL_NO; }
    break;

  case 2495:
#line 14684 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2496:
#line 14685 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2497:
#line 14690 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_COMMIT;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[(3) - (4)].m_yes_no_unk) != TVL_YES || (yyvsp[(4) - (4)].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[(3) - (4)].m_yes_no_unk);
            lex->tx_release= (yyvsp[(4) - (4)].m_yes_no_unk);
          }
    break;

  case 2498:
#line 14702 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[(3) - (4)].m_yes_no_unk) != TVL_YES || (yyvsp[(4) - (4)].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[(3) - (4)].m_yes_no_unk);
            lex->tx_release= (yyvsp[(4) - (4)].m_yes_no_unk);
          }
    break;

  case 2499:
#line 14712 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK_TO_SAVEPOINT;
            lex->ident= (yyvsp[(5) - (5)].lex_str);
          }
    break;

  case 2500:
#line 14721 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SAVEPOINT;
            lex->ident= (yyvsp[(2) - (2)].lex_str);
          }
    break;

  case 2501:
#line 14730 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RELEASE_SAVEPOINT;
            lex->ident= (yyvsp[(3) - (3)].lex_str);
          }
    break;

  case 2502:
#line 14743 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2504:
#line 14749 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if (add_select_to_union_list(Lex, (bool)(yyvsp[(2) - (2)].num), TRUE))
              MYSQL_YYABORT;
          }
    break;

  case 2505:
#line 14754 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            /*
              Remove from the name resolution context stack the context of the
              last select in the union.
            */
            Lex->pop_context();
          }
    break;

  case 2506:
#line 14764 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)= 0; }
    break;

  case 2507:
#line 14765 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 2508:
#line 14766 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)= 1; }
    break;

  case 2511:
#line 14775 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            DBUG_ASSERT(lex->current_select->linkage != GLOBAL_OPTIONS_TYPE);
            SELECT_LEX *sel= lex->current_select;
            SELECT_LEX_UNIT *unit= sel->master_unit();
            SELECT_LEX *fake= unit->fake_select_lex;
            if (fake)
            {
              unit->global_parameters= fake;
              fake->no_table_names_allowed= 1;
              lex->current_select= fake;
            }
            thd->where= "global ORDER clause";
          }
    break;

  case 2512:
#line 14791 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            thd->lex->current_select->no_table_names_allowed= 0;
            thd->where= "";
          }
    break;

  case 2515:
#line 14804 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)=1; }
    break;

  case 2516:
#line 14805 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)=1; }
    break;

  case 2517:
#line 14806 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { (yyval.num)=0; }
    break;

  case 2518:
#line 14811 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { 
            (yyval.select_lex)= Lex->current_select->master_unit()->first_select();
          }
    break;

  case 2519:
#line 14815 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            (yyval.select_lex)= Lex->current_select->master_unit()->first_select();
          }
    break;

  case 2521:
#line 14824 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if (add_select_to_union_list(Lex, (bool)(yyvsp[(3) - (3)].num), FALSE))
              MYSQL_YYABORT;
          }
    break;

  case 2522:
#line 14830 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->pop_context();
            (yyval.select_lex)= (yyvsp[(1) - (6)].select_lex);
          }
    break;

  case 2523:
#line 14839 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { 
            (yyval.select_lex)= (yyvsp[(2) - (3)].select_lex);
          }
    break;

  case 2524:
#line 14845 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;
            if (!lex->expr_allows_subselect ||
               lex->sql_command == (int)SQLCOM_PURGE)
            {
              my_parse_error(ER(ER_SYNTAX_ERROR));
              MYSQL_YYABORT;
            }
            /* 
              we are making a "derived table" for the parenthesis
              as we need to have a lex level to fit the union 
              after the parenthesis, e.g. 
              (SELECT .. ) UNION ...  becomes 
              SELECT * FROM ((SELECT ...) UNION ...)
            */
            if (mysql_new_select(Lex, 1))
              MYSQL_YYABORT;
          }
    break;

  case 2525:
#line 14866 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex=Lex;

            lex->pop_context();
            SELECT_LEX *child= lex->current_select;
            lex->current_select = lex->current_select->outer_select();
            lex->nest_level--;
            lex->current_select->n_child_sum_items += child->n_sum_items;
            /*
              A subselect can add fields to an outer select. Reserve space for
              them.
            */
            lex->current_select->select_n_where_fields+=
            child->select_n_where_fields;
          }
    break;

  case 2530:
#line 14894 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Select->options|= SELECT_STRAIGHT_JOIN; }
    break;

  case 2531:
#line 14896 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if (check_simple_select())
              MYSQL_YYABORT;
            YYPS->m_lock_type= TL_READ_HIGH_PRIORITY;
            YYPS->m_mdl_type= MDL_SHARED_READ;
            Select->options|= SELECT_HIGH_PRIORITY;
          }
    break;

  case 2532:
#line 14903 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Select->options|= SELECT_DISTINCT; }
    break;

  case 2533:
#line 14904 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Select->options|= SELECT_SMALL_RESULT; }
    break;

  case 2534:
#line 14905 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Select->options|= SELECT_BIG_RESULT; }
    break;

  case 2535:
#line 14907 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if (check_simple_select())
              MYSQL_YYABORT;
            Select->options|= OPTION_BUFFER_RESULT;
          }
    break;

  case 2536:
#line 14913 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            if (check_simple_select())
              MYSQL_YYABORT;
            Select->options|= OPTION_FOUND_ROWS;
          }
    break;

  case 2537:
#line 14918 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Select->options|= SELECT_ALL; }
    break;

  case 2538:
#line 14929 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2539:
#line 14931 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2540:
#line 14933 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2554:
#line 14966 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            /*
              We have to distinguish missing DEFINER-clause from case when
              CURRENT_USER specified as definer explicitly in order to properly
              handle CREATE TRIGGER statements which come to replication thread
              from older master servers (i.e. to create non-suid trigger in this
              case).
            */
            YYTHD->lex->definer= 0;
          }
    break;

  case 2555:
#line 14980 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            YYTHD->lex->definer= get_current_user(YYTHD, (yyvsp[(3) - (3)].lex_user));
          }
    break;

  case 2556:
#line 14993 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2557:
#line 14995 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2558:
#line 14997 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2559:
#line 15002 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->create_view_mode= VIEW_CREATE_OR_REPLACE; }
    break;

  case 2560:
#line 15007 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED; }
    break;

  case 2561:
#line 15009 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->create_view_algorithm= VIEW_ALGORITHM_MERGE; }
    break;

  case 2562:
#line 15011 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->create_view_algorithm= VIEW_ALGORITHM_TMPTABLE; }
    break;

  case 2563:
#line 15016 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->create_view_suid= VIEW_SUID_DEFAULT; }
    break;

  case 2564:
#line 15018 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->create_view_suid= VIEW_SUID_DEFINER; }
    break;

  case 2565:
#line 15020 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->create_view_suid= VIEW_SUID_INVOKER; }
    break;

  case 2566:
#line 15025 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_CREATE_VIEW;
            /* first table in list is target VIEW name */
            if (!lex->select_lex.add_table_to_list(thd, (yyvsp[(3) - (3)].table), NULL,
                                                   TL_OPTION_UPDATING,
                                                   TL_IGNORE,
                                                   MDL_EXCLUSIVE))
              MYSQL_YYABORT;
            lex->query_tables->open_strategy= TABLE_LIST::OPEN_STUB;
          }
    break;

  case 2568:
#line 15042 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2570:
#line 15048 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
              Lex->view_list.push_back((LEX_STRING*)
              sql_memdup(&(yyvsp[(1) - (1)].lex_str), sizeof(LEX_STRING)));
            }
    break;

  case 2571:
#line 15053 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
              Lex->view_list.push_back((LEX_STRING*)
              sql_memdup(&(yyvsp[(3) - (3)].lex_str), sizeof(LEX_STRING)));
            }
    break;

  case 2572:
#line 15060 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->parsing_options.allows_variable= FALSE;
            lex->parsing_options.allows_select_into= FALSE;
            lex->parsing_options.allows_select_procedure= FALSE;
            lex->parsing_options.allows_derived= FALSE;
            lex->create_view_select.str= (char *) YYLIP->get_cpp_ptr();
          }
    break;

  case 2573:
#line 15069 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            uint len= YYLIP->get_cpp_ptr() - lex->create_view_select.str;
            void *create_view_select= thd->memdup(lex->create_view_select.str, len);
            lex->create_view_select.length= len;
            lex->create_view_select.str= (char *) create_view_select;
            trim_whitespace(thd->charset(), &lex->create_view_select);
            lex->parsing_options.allows_variable= TRUE;
            lex->parsing_options.allows_select_into= TRUE;
            lex->parsing_options.allows_select_procedure= TRUE;
            lex->parsing_options.allows_derived= TRUE;
          }
    break;

  case 2576:
#line 15091 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->create_view_check= VIEW_CHECK_NONE; }
    break;

  case 2577:
#line 15093 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->create_view_check= VIEW_CHECK_CASCADED; }
    break;

  case 2578:
#line 15095 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->create_view_check= VIEW_CHECK_CASCADED; }
    break;

  case 2579:
#line 15097 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->create_view_check= VIEW_CHECK_LOCAL; }
    break;

  case 2580:
#line 15114 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { /* $8 */
            Lex->raw_trg_on_table_name_begin= YYLIP->get_tok_start();
          }
    break;

  case 2581:
#line 15120 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { /* $12 */
            Lex->raw_trg_on_table_name_end= YYLIP->get_tok_start();
          }
    break;

  case 2582:
#line 15125 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { /* $15 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;
            sp_head *sp;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "TRIGGER");
              MYSQL_YYABORT;
            }

            if (!(sp= new sp_head()))
              MYSQL_YYABORT;
            sp->reset_thd_mem_root(thd);
            sp->init(lex);
            sp->m_type= TYPE_ENUM_TRIGGER;
            sp->init_sp_name(thd, (yyvsp[(3) - (14)].spname));
            lex->stmt_definition_begin= (yyvsp[(2) - (14)].simple_string);
            lex->ident.str= (yyvsp[(7) - (14)].simple_string);
            lex->ident.length= (yyvsp[(11) - (14)].simple_string) - (yyvsp[(7) - (14)].simple_string);

            lex->sphead= sp;
            lex->spname= (yyvsp[(3) - (14)].spname);

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
            lex->sphead->m_chistics= &lex->sp_chistics;
            lex->sphead->set_body_start(thd, lip->get_cpp_ptr());
          }
    break;

  case 2583:
#line 15155 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { /* $17 */
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            lex->sql_command= SQLCOM_CREATE_TRIGGER;
            sp->set_stmt_end(YYTHD);
            sp->restore_thd_mem_root(YYTHD);

            if (sp->is_not_allowed_in_function("trigger"))
              MYSQL_YYABORT;

            /*
              We have to do it after parsing trigger body, because some of
              sp_proc_stmt alternatives are not saving/restoring LEX, so
              lex->query_tables can be wiped out.
            */
            if (!lex->select_lex.add_table_to_list(YYTHD, (yyvsp[(9) - (16)].table),
                                                   (LEX_STRING*) 0,
                                                   TL_OPTION_UPDATING,
                                                   TL_READ_NO_INSERT,
                                                   MDL_SHARED_NO_WRITE))
              MYSQL_YYABORT;
          }
    break;

  case 2584:
#line 15189 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (is_native_function(thd, & (yyvsp[(4) - (8)].lex_str)))
            {
              my_error(ER_NATIVE_FCT_NAME_COLLISION, MYF(0),
                       (yyvsp[(4) - (8)].lex_str).str);
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CREATE_FUNCTION;
            lex->udf.type= UDFTYPE_AGGREGATE;
            lex->stmt_definition_begin= (yyvsp[(2) - (8)].simple_string);
            lex->udf.name = (yyvsp[(4) - (8)].lex_str);
            lex->udf.returns=(Item_result) (yyvsp[(6) - (8)].num);
            lex->udf.dl=(yyvsp[(8) - (8)].lex_str).str;
          }
    break;

  case 2585:
#line 15207 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (is_native_function(thd, & (yyvsp[(3) - (7)].lex_str)))
            {
              my_error(ER_NATIVE_FCT_NAME_COLLISION, MYF(0),
                       (yyvsp[(3) - (7)].lex_str).str);
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CREATE_FUNCTION;
            lex->udf.type= UDFTYPE_FUNCTION;
            lex->stmt_definition_begin= (yyvsp[(1) - (7)].simple_string);
            lex->udf.name = (yyvsp[(3) - (7)].lex_str);
            lex->udf.returns=(Item_result) (yyvsp[(5) - (7)].num);
            lex->udf.dl=(yyvsp[(7) - (7)].lex_str).str;
          }
    break;

  case 2586:
#line 15230 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { /* $5 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;
            sp_head *sp;
            const char* tmp_param_begin;

            lex->stmt_definition_begin= (yyvsp[(1) - (4)].simple_string);
            lex->spname= (yyvsp[(3) - (4)].spname);

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            /* Order is important here: new - reset - init */
            sp= new sp_head();
            if (sp == NULL)
              MYSQL_YYABORT;
            sp->reset_thd_mem_root(thd);
            sp->init(lex);
            sp->init_sp_name(thd, lex->spname);

            sp->m_type= TYPE_ENUM_FUNCTION;
            lex->sphead= sp;

            tmp_param_begin= lip->get_cpp_tok_start();
            tmp_param_begin++;
            lex->sphead->m_param_begin= tmp_param_begin;
          }
    break;

  case 2587:
#line 15262 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { /* $8 */
            Lex->sphead->m_param_end= YYLIP->get_cpp_tok_start();
          }
    break;

  case 2588:
#line 15266 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { /* $10 */
            LEX *lex= Lex;
            lex->charset= NULL;
            lex->length= lex->dec= NULL;
            lex->interval_list.empty();
            lex->type= 0;
          }
    break;

  case 2589:
#line 15274 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { /* $12 */
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            /*
              This was disabled in 5.1.12. See bug #20701
              When collation support in SP is implemented, then this test
              should be removed.
            */
            if (((yyvsp[(11) - (11)].num) == MYSQL_TYPE_STRING || (yyvsp[(11) - (11)].num) == MYSQL_TYPE_VARCHAR)
                && (lex->type & BINCMP_FLAG))
            {
              my_error(ER_NOT_SUPPORTED_YET, MYF(0), "return value collation");
              MYSQL_YYABORT;
            }

            if (sp->fill_field_definition(YYTHD, lex,
                                          (enum enum_field_types) (yyvsp[(11) - (11)].num),
                                          &sp->m_return_field_def))
              MYSQL_YYABORT;

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
    break;

  case 2590:
#line 15297 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { /* $14 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;

            lex->sphead->m_chistics= &lex->sp_chistics;
            lex->sphead->set_body_start(thd, lip->get_cpp_tok_start());
          }
    break;

  case 2591:
#line 15306 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            if (sp->is_not_allowed_in_function("function"))
              MYSQL_YYABORT;

            lex->sql_command= SQLCOM_CREATE_SPFUNCTION;
            sp->set_stmt_end(thd);
            if (!(sp->m_flags & sp_head::HAS_RETURN))
            {
              my_error(ER_SP_NORETURN, MYF(0), sp->m_qname.str);
              MYSQL_YYABORT;
            }
            if (is_native_function(thd, & sp->m_name))
            {
              /*
                This warning will be printed when
                [1] A client query is parsed,
                [2] A stored function is loaded by db_load_routine.
                Printing the warning for [2] is intentional, to cover the
                following scenario:
                - A user define a SF 'foo' using MySQL 5.N
                - An application uses select foo(), and works.
                - MySQL 5.{N+1} defines a new native function 'foo', as
                part of a new feature.
                - MySQL 5.{N+1} documentation is updated, and should mention
                that there is a potential incompatible change in case of
                existing stored function named 'foo'.
                - The user deploys 5.{N+1}. At this point, 'select foo()'
                means something different, and the user code is most likely
                broken (it's only safe if the code is 'select db.foo()').
                With a warning printed when the SF is loaded (which has to occur
                before the call), the warning will provide a hint explaining
                the root cause of a later failure of 'select foo()'.
                With no warning printed, the user code will fail with no
                apparent reason.
                Printing a warning each time db_load_routine is executed for
                an ambiguous function is annoying, since that can happen a lot,
                but in practice should not happen unless there *are* name
                collisions.
                If a collision exists, it should not be silenced but fixed.
              */
              push_warning_printf(thd,
                                  Sql_condition::WARN_LEVEL_NOTE,
                                  ER_NATIVE_FCT_NAME_COLLISION,
                                  ER(ER_NATIVE_FCT_NAME_COLLISION),
                                  sp->m_name.str);
            }
            sp->restore_thd_mem_root(thd);
          }
    break;

  case 2592:
#line 15362 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }

            lex->stmt_definition_begin= (yyvsp[(2) - (3)].simple_string);

            /* Order is important here: new - reset - init */
            sp= new sp_head();
            if (sp == NULL)
              MYSQL_YYABORT;
            sp->reset_thd_mem_root(YYTHD);
            sp->init(lex);
            sp->m_type= TYPE_ENUM_PROCEDURE;
            sp->init_sp_name(YYTHD, (yyvsp[(3) - (3)].spname));

            lex->sphead= sp;
          }
    break;

  case 2593:
#line 15386 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            const char* tmp_param_begin;

            tmp_param_begin= YYLIP->get_cpp_tok_start();
            tmp_param_begin++;
            Lex->sphead->m_param_begin= tmp_param_begin;
          }
    break;

  case 2594:
#line 15395 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_param_end= YYLIP->get_cpp_tok_start();
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
    break;

  case 2595:
#line 15403 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_chistics= &lex->sp_chistics;
            lex->sphead->set_body_start(thd, YYLIP->get_cpp_tok_start());
          }
    break;

  case 2596:
#line 15411 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            sp->set_stmt_end(YYTHD);
            lex->sql_command= SQLCOM_CREATE_PROCEDURE;
            sp->restore_thd_mem_root(YYTHD);
          }
    break;

  case 2597:
#line 15425 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_START;
          }
    break;

  case 2598:
#line 15429 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_END;
          }
    break;

  case 2599:
#line 15433 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_PREPARE;
          }
    break;

  case 2600:
#line 15437 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_COMMIT;
          }
    break;

  case 2601:
#line 15441 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_ROLLBACK;
          }
    break;

  case 2602:
#line 15445 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            Lex->sql_command = SQLCOM_XA_RECOVER;
          }
    break;

  case 2603:
#line 15452 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (1)].string)->length() <= MAXGTRIDSIZE);
            if (!(Lex->xid=(XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            Lex->xid->set(1L, (yyvsp[(1) - (1)].string)->ptr(), (yyvsp[(1) - (1)].string)->length(), 0, 0);
          }
    break;

  case 2604:
#line 15459 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (3)].string)->length() <= MAXGTRIDSIZE && (yyvsp[(3) - (3)].string)->length() <= MAXBQUALSIZE);
            if (!(Lex->xid=(XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            Lex->xid->set(1L, (yyvsp[(1) - (3)].string)->ptr(), (yyvsp[(1) - (3)].string)->length(), (yyvsp[(3) - (3)].string)->ptr(), (yyvsp[(3) - (3)].string)->length());
          }
    break;

  case 2605:
#line 15466 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            MYSQL_YYABORT_UNLESS((yyvsp[(1) - (5)].string)->length() <= MAXGTRIDSIZE && (yyvsp[(3) - (5)].string)->length() <= MAXBQUALSIZE);
            if (!(Lex->xid=(XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            Lex->xid->set((yyvsp[(5) - (5)].ulong_num), (yyvsp[(1) - (5)].string)->ptr(), (yyvsp[(1) - (5)].string)->length(), (yyvsp[(3) - (5)].string)->ptr(), (yyvsp[(3) - (5)].string)->length());
          }
    break;

  case 2606:
#line 15475 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2607:
#line 15476 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2608:
#line 15480 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->xa_opt=XA_NONE;        }
    break;

  case 2609:
#line 15481 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->xa_opt=XA_JOIN;        }
    break;

  case 2610:
#line 15482 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->xa_opt=XA_RESUME;      }
    break;

  case 2611:
#line 15486 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->xa_opt=XA_NONE;        }
    break;

  case 2612:
#line 15487 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->xa_opt=XA_ONE_PHASE;   }
    break;

  case 2613:
#line 15492 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->xa_opt=XA_NONE;        }
    break;

  case 2614:
#line 15494 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->xa_opt=XA_SUSPEND;     }
    break;

  case 2616:
#line 15499 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {}
    break;

  case 2617:
#line 15500 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    { Lex->xa_opt=XA_FOR_MIGRATE; }
    break;

  case 2618:
#line 15505 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSTALL_PLUGIN;
            lex->comment= (yyvsp[(3) - (5)].lex_str);
            lex->ident= (yyvsp[(5) - (5)].lex_str);
          }
    break;

  case 2619:
#line 15515 "/export/home/pb2/build/sb_0-5372937-1333009038.16/mysql-5.6.5-m8-release-export-3282244/sql/sql_yacc.yy"
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_UNINSTALL_PLUGIN;
            lex->comment= (yyvsp[(3) - (3)].lex_str);
          }
    break;


/* Line 1267 of yacc.c.  */
#line 36022 "/export/home/pb2/build/sb_0-5372937-1333009038.16/dist/sql/sql_yacc.cc"
      default: break;
    }
  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;


  /* Now `shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*------------------------------------.
| yyerrlab -- here on detecting error |
`------------------------------------*/
yyerrlab:
  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if ! YYERROR_VERBOSE
      yyerror (YY_("syntax error"));
#else
      {
	YYSIZE_T yysize = yysyntax_error (0, yystate, yychar);
	if (yymsg_alloc < yysize && yymsg_alloc < YYSTACK_ALLOC_MAXIMUM)
	  {
	    YYSIZE_T yyalloc = 2 * yysize;
	    if (! (yysize <= yyalloc && yyalloc <= YYSTACK_ALLOC_MAXIMUM))
	      yyalloc = YYSTACK_ALLOC_MAXIMUM;
	    if (yymsg != yymsgbuf)
	      YYSTACK_FREE (yymsg);
	    yymsg = (char *) YYSTACK_ALLOC (yyalloc);
	    if (yymsg)
	      yymsg_alloc = yyalloc;
	    else
	      {
		yymsg = yymsgbuf;
		yymsg_alloc = sizeof yymsgbuf;
	      }
	  }

	if (0 < yysize && yysize <= yymsg_alloc)
	  {
	    (void) yysyntax_error (yymsg, yystate, yychar);
	    yyerror (yymsg);
	  }
	else
	  {
	    yyerror (YY_("syntax error"));
	    if (yysize != 0)
	      goto yyexhaustedlab;
	  }
      }
#endif
    }



  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse look-ahead token after an
	 error, discard it.  */

      if (yychar <= YYEOF)
	{
	  /* Return failure if at end of input.  */
	  if (yychar == YYEOF)
	    YYABORT;
	}
      else
	{
	  yydestruct ("Error: discarding",
		      yytoken, &yylval);
	  yychar = YYEMPTY;
	}
    }

  /* Else will try to reuse look-ahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

  /* Pacify compilers like GCC when the user code never invokes
     YYERROR and the label yyerrorlab therefore never appears in user
     code.  */
  if (/*CONSTCOND*/ 0)
     goto yyerrorlab;

  /* Do not reclaim the symbols of the rule which action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;	/* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (yyn != YYPACT_NINF)
	{
	  yyn += YYTERROR;
	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
	    {
	      yyn = yytable[yyn];
	      if (0 < yyn)
		break;
	    }
	}

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
	YYABORT;


      yydestruct ("Error: popping",
		  yystos[yystate], yyvsp);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  *++yyvsp = yylval;


  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#ifndef yyoverflow
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
  if (yychar != YYEOF && yychar != YYEMPTY)
     yydestruct ("Cleanup: discarding lookahead",
		 yytoken, &yylval);
  /* Do not reclaim the symbols of the rule which action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
		  yystos[*yyssp], yyvsp);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
#if YYERROR_VERBOSE
  if (yymsg != yymsgbuf)
    YYSTACK_FREE (yymsg);
#endif
  /* Make sure YYID is used.  */
  return YYID (yyresult);
}



